{"version":3,"sources":["variables/Variables.jsx","assets/img/sidebar-3.jpg","../node_modules/typescript/lib sync","constant/config.js","views/filter/innerfilter.js","views/login/index.js","components/Navbars/AdminNavbarLinks.jsx","components/Navbars/AdminNavbar.jsx","components/Sidebar/Sidebar.jsx","views/Closeposition.js","views/Data.js","views/Openposition.js","api.js","views/Innerlogin.js","views/TableList.jsx","views/Dashboard.jsx","views/filter/filteredit.js","views/filter/filterdetail.js","views/filter/Filterprofile.js","views/DatatablePage.js","views/swap/index.js","views/calculating/index.js","views/exploser/index.js","views/ContractSize/ContractSize.js","views/Statistics/Statistics.js","routes.js","layouts/Admin.jsx","index.js"],"names":["defaultWidth","window","screen","width","style","Wrapper","Containers","DefaultStyle","position","padding","zIndex","WebkitBoxSizing","MozBoxSizing","boxSizing","height","display","border","fontSize","WebkitFontSmoothing","fontFamily","fontWeight","color","tl","top","bottom","left","right","tr","tc","margin","marginLeft","bl","br","bc","NotificationItem","cursor","borderRadius","opacity","transition","WebkitTransform","transform","willChange","isHidden","isVisible","success","borderTop","backgroundColor","WebkitBoxShadow","MozBoxShadow","boxShadow","error","warning","info","Title","marginTop","MessageWrapper","marginRight","maxWidthwidth","Dismiss","float","lineHeight","outline","textAlign","Action","background","ActionWrapper","module","exports","thArray","tdArray","iconsArray","dataPie","labels","series","legendPie","names","types","dataSales","optionsSales","low","high","showArea","axisX","showGrid","lineSmooth","showLine","showPoint","fullWidth","chartPadding","responsiveSales","labelInterpolationFnc","value","legendSales","dataBar","optionsBar","seriesBarDistance","responsiveBar","legendBar","webpackEmptyContext","req","e","Error","code","keys","resolve","id","config","baseurl","axios","require","Innerfilter","props","getSymbolInfo","self","get","then","response","status","setState","allAccounts","data","rows","allSymbols","handleDropdownChange","selectValue","target","handleChangeDate","date","startDate","handleEndDate","state","endDate","handleChangeDateTo","startDateTo","handleEndDateTo","endDateTo","handleChange","event","Array","from","selectedOptions","item","renderAccountSelect","selectedAccountOption","options","map","label","login","placeholder","onChange","handleChangeAccount","handeChangeShowCommission","showCommission","showAddCommission","handleChangeAccountTo","selectedAccountOptionTo","renderAccountSelectTo","handleChangeCommissionAccount","selectedCommissionAccount","renderCommissionAccount","handleChangeMagicNumber","magicNumber","handleChangeMagicNumberTo","magicNumberTo","handleChangeTicket","ticket","handleChangeTicketTo","ticketTo","handleChangeSymbol","selectedSymbolOption","renderSymbolSelect","name","isMulti","handleChangeSymbolTo","selectedSymbolOptionTo","renderSymbolSelectTo","changeIncludeDefaultProperty","include","exclude","changeExcludeDefaultProperty","changeIncludeDefaultPropertyTo","includeTo","excludeTo","changeExcludeDefaultPropertyTo","changeIncludeDefaultPropertyTicket","includeTicket","includeTicketTo","excludeTicket","changeExcludeDefaultPropertyTicket","changeIncludeDefaultPropertyTicketTo","excludeTicketTo","changeExcludeDefaultPropertyTicketTo","profileName","showCommisoin","autoSyncClose","profileValues","nameError","showMagicNumber","showMagicNumberTo","tags","include_exclude_status","this","fetchfilterdata","filter","profile_name","toUpperCase","charAt","slice","NotificationManager","listNotify","preventDefault","from_status","to_status","from_status_ticket","to_status_ticket","symbolFrom","symbolto","Data","from_account_id","to_account_id","commission_acount_id","startdateFrom","enddateFrom","startdateTo","enddateTo","from_symbols","JSON","stringify","to_symbols","auto_close","from_magic_number","length","to_magic_number","from_include_exclude_status","to_include_exclude_status","from_ticket","to_ticket","from_include_exclude_status_ticket","to_include_exclude_status_ticket","createdAt","Date","updatedAt","console","log","post","onHide","catch","className","Grid","fluid","onClick","crossClick","aria-hidden","type","handleprofileName","defaultChecked","handleChangeAutoSync","Row","Col","md","selected","isClearable","placeholderText","dateFormat","strictParsing","autoOk","onValidationReject","validationRegex","inputProps","checked","Button","variant","size","block","formDataSubmit","Component","Login","toogle","loginForm","handleClose","handleShow","setShow","createNotification","show","username","password","alert","persons","shwPwd","shwMsg","invalidUsername","invalidPassword","accountlist","bind","onSubmit","trim","userdetail","localStorage","setItem","history","push","message","err","parse","getItem","sm","disabled","AdminNavbarLinks","logout","clear","notification","Nav","NavItem","eventKey","href","NavDropdown","title","noCaret","MenuItem","pullRight","Header","mobileSidebarToggle","sidebarExists","document","documentElement","classList","toggle","node","createElement","onclick","parentElement","removeChild","body","appendChild","Navbar","Brand","brandText","Toggle","Collapse","Sidebar","routes","menu","innerWidth","routeName","location","pathname","indexOf","updateDimensions","addEventListener","image","data-color","data-image","hasImage","prop","key","redirect","upgrade","activeRoute","layout","path","to","activeClassName","icon","child","undefined","resources","sub","index","Closeposition","allHistoryRecord","fromHistoryOrderInfo","toHistoryOrderInfo","commissionHistoryOrderInfo","useState","fromSymbols","toSymbols","Object","entries","join","fromsum","tosum","commission","swap","profit","sumOfTotal","noRecord","total","accountFromInfo","alias","displayType","thousandSeparator","decimalScale","accountToInfo","marginBottom","accountCommissionInfo","history_info","tablePage","items","lot","closed","price","textA","dashBoardPage","textB","Openposition","allOpenRecord","fromOpenOrderInfo","toOpenOrderInfo","order_type","lots","intervalSet","timerWaitInterval","myInitObject","api","fetchAllHistoryTrade","responsHT","fetchAllOpenTrade","responsOT","fetchAllAccounts","responsAC","fetchActivefilterdata","responsAF","fetchLastUpdatedTime","responsLUT","fetchStatusData","responsSD","calculatingOpenTrade","responsCOT","calculatingHistoryTrade","responsCHT","calculatingCommission","responsCC","fetchAllSymbol","responsAS","fetchdailyswaps","responsDS","usersAllAccounts","responsAAC","responsFF","TableList","fetchDataAccordingSymbols","symbol","filterlist","selectedOption","renderSymbols","isOpen2","setInterval","activeProfileName","errorMassege","concat","i","ar","class","Dashboard","showData","accountDetailValue","accounts_details","currency","tableHeader","details","dateTime","fromAccounts","fromSymbol","toAccounts","toSymbol","fromOpenOrderInfos","toOpenOrderInfos","totalTo","blockloader","autoClose","loading","filteredInfoTime","contract_size","json","legend","fromsum1","tosum1","sumOfTotal1","role","lg","xs","toFixed","margin_currency","timerWait","Innerlogin","checkUserConnected","broker","connected","currentAddLogin","currentAddBroker","currentAddAlias","clearInterval","timerShow","fectheAllAccount","setIntervalCustom","content","innerHTML","closebtn","swal","timer","button","handleCloseEdit","editForm","handleCloseDetail","detailForm","createTr","scope","launched","viewFilter","editFilter","onUpdate","re","test","text","user","edituser","editserver","editalias","editData","editstatus","Modal","Body","closeButton","editAlias","FilterEdite","l","rules","required","abc","from_symbol","to_symbol","all_from_symbols","all_to_symbols","moment","FilterDetail","showMagicNumberFrom","showTicketFrom","showTicketTo","format","Filterprofile","showInnerfilter","createWariningNotification","showEdit","editeData","newDate","filterData","activateClick","deactivateClick","deleteFilter","deleteData","showDelete","detailData","deletepopupClick","deletepopupclose","DatatablePage","columns","field","sort","swap_long","Number","parseFloat","swap_short","responsive","bordered","small","Swap","dailySwap","setdailySwap","setloading","setStartDate","setEndDate","useEffect","sd","ed","result","d","time","Container","selectsStart","selectsEnd","minDate","dataTOtalcloseFrom","comissionTotal","lotsTotal","profitTotal","swapTotal","dataTotalClosetTo","dataTOtalOpenTo","dataTOtalOpenFrom","ContractSize","uniqueSymbols","sumOfHistoryTotal","openfromsum","opentosum","sumOfOpenTotal","isNaN","parseInt","Fragment","Statistics","noGutters","dashboardRoutes","component","isOpen","setIsOpen","setIsOpen2","setIsOpen3","errormassage","setIErrormassage","isOpen3","fromAccountId","setFromAccountId","toAccountId","setToAccountId","fromOpenTrade","setFromOpenTrade","toOpenTrade","setToOpenTrade","fromHistoryTrade","setFromHistoryTrade","toHistoryTrade","setToHistoryTrade","setCommissionDetails","openTotal","setopenTotal","historyTotal","sethistoryTotal","commissionValue","setCommissionValue","setdateTime","setcustomSwap","setLoading","setallHistoryRecord","setactiveProfileName","totalOfOpenOrder","customSwapTable","totalOfHistoryOrder","newCommissionRecord","fromclosedata","fromopendata","toclosedata","toopendata","newData","a","b","open_time","split","reverse","newopenData","newcloseData","totalOpen","reduce","totalClose","totalfromCloseSwap","totalfromOpenSwap","totalfromCloseCommission","totalfromOpenCommission","totaltoCloseSwap","totaltoOpenSwap","totaltoCloseCommission","totaltoOpenCommission","overflowX","last_price","utc","account_id","open_price","close_price","fromOpenTradeTr","toOpenTradeTr","overflowY","close_time","fromHistoryTradeTr","toHistoryTradeTr","totalProfit","equity","Admin","getRoutes","routeArray","render","handleClick","handleNotificationClick","getBrandText","handleImageClick","handleColorClick","handleHasImage","handleFixedClick","fixedClasses","_notificationSystem","action","scrollTop","scrollingElement","refs","mainPanel","ref","AdminNavbar","ReactDOM","exact","innerfilter","getElementById"],"mappings":"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,kBACA,aACA,mBACA,aACA,cACA,eACA,qBACA,iBACA,cACA,cACA,eACA,kBACA,eACA,iBACA,eACA,cACA,YACA,eACA,aACA,qBACA,aACA,cACA,kBACA,uBACA,YACA,qBACA,WACA,iBACA,mBACA,wBACA,cACA,oBACA,eACA,2BACA,cACA,mBACA,oBACA,0BACA,iBACA,mBACA,eACA,0BACA,iBACA,eACA,aACA,gBACA,gBACA,kBACA,cACA,aACA,eACA,eACA,iBACA,cACA,cACA,cACA,eACA,eACA,YACA,cACA,kBACA,aACA,gBACA,eACA,gBACA,gBACA,cACA,eACA,eACA,aACA,gBACA,aACA,eACA,eACA,gBACA,iBACA,sBACA,kBACA,cACA,cACA,cACA,gBACA,aACA,aACA,cACA,cACA,kBACA,cACA,aACA,mBACA,aACA,YACA,cACA,YACA,sBACA,YACA,cACA,aACA,YACA,oBACA,oBACA,oBACA,cACA,qBACA,iBACA,aACA,aACA,mBACA,kBACA,cACA,cACA,aACA,aACA,gBACA,cACA,aACA,YACA,mBACA,aACA,kBACA,uBACA,eACA,aACA,aACA,aACA,gBACA,aACA,aACA,cACA,aACA,eACA,aACA,aACA,aACA,cACA,cACA,eACA,eACA,eACA,cACA,eACA,cACA,gBACA,aACA,eACA,aACA,eACA,aACA,gBACA,gBACA,aACA,aACA,eACA,iBACA,iBACA,iBACA,iBACA,aACA,YACA,gBACA,aACA,eACA,kBACA,eACA,gBACA,gBACA,eACA,cACA,cACA,cACA,aACA,aACA,eACA,aACA,mBACA,gBACA,aACA,aACA,kBACA,gBACA,aACA,gBACA,aACA,aACA,kBACA,eACA,eACA,cACA,iBAwHAC,QA/GY,CACZC,OAAQ,CAAC,MAAO,MAAO,OACvBC,OAAQ,CAAC,GAAI,GAAI,KA8GjBC,UA5Gc,CACdC,MAAO,CAAC,OAAQ,SAAU,eAC1BC,MAAO,CAAC,OAAQ,SAAU,YA2G1BC,UAvGc,CACdL,OAAQ,CACN,SACA,UACA,SACA,SACA,SACA,UA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","file":"static/js/main.e9c0880a.chunk.js","sourcesContent":["/*!\r\n\r\n=========================================================\r\n* Light Bootstrap Dashboard React - v1.3.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\n//\r\n// //\r\n// // // For notifications\r\n// //\r\n//\r\nvar defaultWidth =\r\n  window.screen.width > 768\r\n    ? (window.screen.width * 1) / 3\r\n    : window.screen.width;\r\n\r\nvar style = {\r\n  Wrapper: {},\r\n  Containers: {\r\n    DefaultStyle: {\r\n      position: \"fixed\",\r\n      width: defaultWidth,\r\n      padding: \"10px 10px 10px 20px\",\r\n      zIndex: 9998,\r\n      WebkitBoxSizing: \"\",\r\n      MozBoxSizing: \"\",\r\n      boxSizing: \"\",\r\n      height: \"auto\",\r\n      display: \"inline-block\",\r\n      border: \"0\",\r\n      fontSize: \"14px\",\r\n      WebkitFontSmoothing: \"antialiased\",\r\n      fontFamily: '\"Roboto\",\"Helvetica Neue\",Arial,sans-serif',\r\n      fontWeight: \"400\",\r\n      color: \"#FFFFFF\"\r\n    },\r\n\r\n    tl: {\r\n      top: \"0px\",\r\n      bottom: \"auto\",\r\n      left: \"0px\",\r\n      right: \"auto\"\r\n    },\r\n\r\n    tr: {\r\n      top: \"0px\",\r\n      bottom: \"auto\",\r\n      left: \"auto\",\r\n      right: \"0px\"\r\n    },\r\n\r\n    tc: {\r\n      top: \"0px\",\r\n      bottom: \"auto\",\r\n      margin: \"0 auto\",\r\n      left: \"50%\",\r\n      marginLeft: -(defaultWidth / 2)\r\n    },\r\n\r\n    bl: {\r\n      top: \"auto\",\r\n      bottom: \"0px\",\r\n      left: \"0px\",\r\n      right: \"auto\"\r\n    },\r\n\r\n    br: {\r\n      top: \"auto\",\r\n      bottom: \"0px\",\r\n      left: \"auto\",\r\n      right: \"0px\"\r\n    },\r\n\r\n    bc: {\r\n      top: \"auto\",\r\n      bottom: \"0px\",\r\n      margin: \"0 auto\",\r\n      left: \"50%\",\r\n      marginLeft: -(defaultWidth / 2)\r\n    }\r\n  },\r\n\r\n  NotificationItem: {\r\n    DefaultStyle: {\r\n      position: \"relative\",\r\n      width: \"100%\",\r\n      cursor: \"pointer\",\r\n      borderRadius: \"4px\",\r\n      fontSize: \"14px\",\r\n      margin: \"10px 0 0\",\r\n      padding: \"10px\",\r\n      display: \"block\",\r\n      WebkitBoxSizing: \"border-box\",\r\n      MozBoxSizing: \"border-box\",\r\n      boxSizing: \"border-box\",\r\n      opacity: 0,\r\n      transition: \"all 0.5s ease-in-out\",\r\n      WebkitTransform: \"translate3d(0, 0, 0)\",\r\n      transform: \"translate3d(0, 0, 0)\",\r\n      willChange: \"transform, opacity\",\r\n\r\n      isHidden: {\r\n        opacity: 0\r\n      },\r\n\r\n      isVisible: {\r\n        opacity: 1\r\n      }\r\n    },\r\n\r\n    success: {\r\n      borderTop: 0,\r\n      backgroundColor: \"#a1e82c\",\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0\r\n    },\r\n\r\n    error: {\r\n      borderTop: 0,\r\n      backgroundColor: \"#fc727a\",\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0\r\n    },\r\n\r\n    warning: {\r\n      borderTop: 0,\r\n      backgroundColor: \"#ffbc67\",\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0\r\n    },\r\n\r\n    info: {\r\n      borderTop: 0,\r\n      backgroundColor: \"#63d8f1\",\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0\r\n    }\r\n  },\r\n\r\n  Title: {\r\n    DefaultStyle: {\r\n      fontSize: \"30px\",\r\n      margin: \"0\",\r\n      padding: 0,\r\n      fontWeight: \"bold\",\r\n      color: \"#FFFFFF\",\r\n      display: \"block\",\r\n      left: \"15px\",\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      marginTop: \"-15px\"\r\n    }\r\n  },\r\n\r\n  MessageWrapper: {\r\n    DefaultStyle: {\r\n      marginLeft: \"55px\",\r\n      marginRight: \"30px\",\r\n      padding: \"0 12px 0 0\",\r\n      color: \"#FFFFFF\",\r\n      maxWidthwidth: \"89%\"\r\n    }\r\n  },\r\n\r\n  Dismiss: {\r\n    DefaultStyle: {\r\n      fontFamily: \"inherit\",\r\n      fontSize: \"21px\",\r\n      color: \"#000\",\r\n      float: \"right\",\r\n      position: \"absolute\",\r\n      right: \"10px\",\r\n      top: \"50%\",\r\n      marginTop: \"-13px\",\r\n      backgroundColor: \"#FFFFFF\",\r\n      display: \"block\",\r\n      borderRadius: \"50%\",\r\n      opacity: \".4\",\r\n      lineHeight: \"11px\",\r\n      width: \"25px\",\r\n      height: \"25px\",\r\n      outline: \"0 !important\",\r\n      textAlign: \"center\",\r\n      padding: \"6px 3px 3px 3px\",\r\n      fontWeight: \"300\",\r\n      marginLeft: \"65px\"\r\n    },\r\n\r\n    success: {\r\n      // color: '#f0f5ea',\r\n      // backgroundColor: '#a1e82c'\r\n    },\r\n\r\n    error: {\r\n      // color: '#f4e9e9',\r\n      // backgroundColor: '#fc727a'\r\n    },\r\n\r\n    warning: {\r\n      // color: '#f9f6f0',\r\n      // backgroundColor: '#ffbc67'\r\n    },\r\n\r\n    info: {\r\n      // color: '#e8f0f4',\r\n      // backgroundColor: '#63d8f1'\r\n    }\r\n  },\r\n\r\n  Action: {\r\n    DefaultStyle: {\r\n      background: \"#ffffff\",\r\n      borderRadius: \"2px\",\r\n      padding: \"6px 20px\",\r\n      fontWeight: \"bold\",\r\n      margin: \"10px 0 0 0\",\r\n      border: 0\r\n    },\r\n\r\n    success: {\r\n      backgroundColor: \"#a1e82c\",\r\n      color: \"#ffffff\"\r\n    },\r\n\r\n    error: {\r\n      backgroundColor: \"#fc727a\",\r\n      color: \"#ffffff\"\r\n    },\r\n\r\n    warning: {\r\n      backgroundColor: \"#ffbc67\",\r\n      color: \"#ffffff\"\r\n    },\r\n\r\n    info: {\r\n      backgroundColor: \"#63d8f1\",\r\n      color: \"#ffffff\"\r\n    }\r\n  },\r\n\r\n  ActionWrapper: {\r\n    DefaultStyle: {\r\n      margin: 0,\r\n      padding: 0\r\n    }\r\n  }\r\n};\r\n\r\n//\r\n// //\r\n// // // For tables\r\n// //\r\n//\r\nconst thArray = [\"ID\", \"Name\", \"Salary\", \"Country\", \"City\"];\r\nconst tdArray = [\r\n  [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\", \"Oud-Turnhout\"],\r\n  [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\", \"Sinaai-Waas\"],\r\n  [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\", \"Baileux\"],\r\n  [\"4\", \"Philip Chaney\", \"$38,735\", \"Korea, South\", \"Overland Park\"],\r\n  [\"5\", \"Doris Greene\", \"$63,542\", \"Malawi\", \"Feldkirchen in Kärnten\"],\r\n  [\"6\", \"Mason Porter\", \"$78,615\", \"Chile\", \"Gloucester\"]\r\n];\r\n\r\n//\r\n// //\r\n// // // For icons\r\n// //\r\n//\r\nconst iconsArray = [\r\n  \"pe-7s-album\",\r\n  \"pe-7s-arc\",\r\n  \"pe-7s-back-2\",\r\n  \"pe-7s-bandaid\",\r\n  \"pe-7s-car\",\r\n  \"pe-7s-diamond\",\r\n  \"pe-7s-door-lock\",\r\n  \"pe-7s-eyedropper\",\r\n  \"pe-7s-female\",\r\n  \"pe-7s-gym\",\r\n  \"pe-7s-hammer\",\r\n  \"pe-7s-headphones\",\r\n  \"pe-7s-helm\",\r\n  \"pe-7s-hourglass\",\r\n  \"pe-7s-leaf\",\r\n  \"pe-7s-magic-wand\",\r\n  \"pe-7s-male\",\r\n  \"pe-7s-map-2\",\r\n  \"pe-7s-next-2\",\r\n  \"pe-7s-paint-bucket\",\r\n  \"pe-7s-pendrive\",\r\n  \"pe-7s-photo\",\r\n  \"pe-7s-piggy\",\r\n  \"pe-7s-plugin\",\r\n  \"pe-7s-refresh-2\",\r\n  \"pe-7s-rocket\",\r\n  \"pe-7s-settings\",\r\n  \"pe-7s-shield\",\r\n  \"pe-7s-smile\",\r\n  \"pe-7s-usb\",\r\n  \"pe-7s-vector\",\r\n  \"pe-7s-wine\",\r\n  \"pe-7s-cloud-upload\",\r\n  \"pe-7s-cash\",\r\n  \"pe-7s-close\",\r\n  \"pe-7s-bluetooth\",\r\n  \"pe-7s-cloud-download\",\r\n  \"pe-7s-way\",\r\n  \"pe-7s-close-circle\",\r\n  \"pe-7s-id\",\r\n  \"pe-7s-angle-up\",\r\n  \"pe-7s-wristwatch\",\r\n  \"pe-7s-angle-up-circle\",\r\n  \"pe-7s-world\",\r\n  \"pe-7s-angle-right\",\r\n  \"pe-7s-volume\",\r\n  \"pe-7s-angle-right-circle\",\r\n  \"pe-7s-users\",\r\n  \"pe-7s-angle-left\",\r\n  \"pe-7s-user-female\",\r\n  \"pe-7s-angle-left-circle\",\r\n  \"pe-7s-up-arrow\",\r\n  \"pe-7s-angle-down\",\r\n  \"pe-7s-switch\",\r\n  \"pe-7s-angle-down-circle\",\r\n  \"pe-7s-scissors\",\r\n  \"pe-7s-wallet\",\r\n  \"pe-7s-safe\",\r\n  \"pe-7s-volume2\",\r\n  \"pe-7s-volume1\",\r\n  \"pe-7s-voicemail\",\r\n  \"pe-7s-video\",\r\n  \"pe-7s-user\",\r\n  \"pe-7s-upload\",\r\n  \"pe-7s-unlock\",\r\n  \"pe-7s-umbrella\",\r\n  \"pe-7s-trash\",\r\n  \"pe-7s-tools\",\r\n  \"pe-7s-timer\",\r\n  \"pe-7s-ticket\",\r\n  \"pe-7s-target\",\r\n  \"pe-7s-sun\",\r\n  \"pe-7s-study\",\r\n  \"pe-7s-stopwatch\",\r\n  \"pe-7s-star\",\r\n  \"pe-7s-speaker\",\r\n  \"pe-7s-signal\",\r\n  \"pe-7s-shuffle\",\r\n  \"pe-7s-shopbag\",\r\n  \"pe-7s-share\",\r\n  \"pe-7s-server\",\r\n  \"pe-7s-search\",\r\n  \"pe-7s-film\",\r\n  \"pe-7s-science\",\r\n  \"pe-7s-disk\",\r\n  \"pe-7s-ribbon\",\r\n  \"pe-7s-repeat\",\r\n  \"pe-7s-refresh\",\r\n  \"pe-7s-add-user\",\r\n  \"pe-7s-refresh-cloud\",\r\n  \"pe-7s-paperclip\",\r\n  \"pe-7s-radio\",\r\n  \"pe-7s-note2\",\r\n  \"pe-7s-print\",\r\n  \"pe-7s-network\",\r\n  \"pe-7s-prev\",\r\n  \"pe-7s-mute\",\r\n  \"pe-7s-power\",\r\n  \"pe-7s-medal\",\r\n  \"pe-7s-portfolio\",\r\n  \"pe-7s-like2\",\r\n  \"pe-7s-plus\",\r\n  \"pe-7s-left-arrow\",\r\n  \"pe-7s-play\",\r\n  \"pe-7s-key\",\r\n  \"pe-7s-plane\",\r\n  \"pe-7s-joy\",\r\n  \"pe-7s-photo-gallery\",\r\n  \"pe-7s-pin\",\r\n  \"pe-7s-phone\",\r\n  \"pe-7s-plug\",\r\n  \"pe-7s-pen\",\r\n  \"pe-7s-right-arrow\",\r\n  \"pe-7s-paper-plane\",\r\n  \"pe-7s-delete-user\",\r\n  \"pe-7s-paint\",\r\n  \"pe-7s-bottom-arrow\",\r\n  \"pe-7s-notebook\",\r\n  \"pe-7s-note\",\r\n  \"pe-7s-next\",\r\n  \"pe-7s-news-paper\",\r\n  \"pe-7s-musiclist\",\r\n  \"pe-7s-music\",\r\n  \"pe-7s-mouse\",\r\n  \"pe-7s-more\",\r\n  \"pe-7s-moon\",\r\n  \"pe-7s-monitor\",\r\n  \"pe-7s-micro\",\r\n  \"pe-7s-menu\",\r\n  \"pe-7s-map\",\r\n  \"pe-7s-map-marker\",\r\n  \"pe-7s-mail\",\r\n  \"pe-7s-mail-open\",\r\n  \"pe-7s-mail-open-file\",\r\n  \"pe-7s-magnet\",\r\n  \"pe-7s-loop\",\r\n  \"pe-7s-look\",\r\n  \"pe-7s-lock\",\r\n  \"pe-7s-lintern\",\r\n  \"pe-7s-link\",\r\n  \"pe-7s-like\",\r\n  \"pe-7s-light\",\r\n  \"pe-7s-less\",\r\n  \"pe-7s-keypad\",\r\n  \"pe-7s-junk\",\r\n  \"pe-7s-info\",\r\n  \"pe-7s-home\",\r\n  \"pe-7s-help2\",\r\n  \"pe-7s-help1\",\r\n  \"pe-7s-graph3\",\r\n  \"pe-7s-graph2\",\r\n  \"pe-7s-graph1\",\r\n  \"pe-7s-graph\",\r\n  \"pe-7s-global\",\r\n  \"pe-7s-gleam\",\r\n  \"pe-7s-glasses\",\r\n  \"pe-7s-gift\",\r\n  \"pe-7s-folder\",\r\n  \"pe-7s-flag\",\r\n  \"pe-7s-filter\",\r\n  \"pe-7s-file\",\r\n  \"pe-7s-expand1\",\r\n  \"pe-7s-exapnd2\",\r\n  \"pe-7s-edit\",\r\n  \"pe-7s-drop\",\r\n  \"pe-7s-drawer\",\r\n  \"pe-7s-download\",\r\n  \"pe-7s-display2\",\r\n  \"pe-7s-display1\",\r\n  \"pe-7s-diskette\",\r\n  \"pe-7s-date\",\r\n  \"pe-7s-cup\",\r\n  \"pe-7s-culture\",\r\n  \"pe-7s-crop\",\r\n  \"pe-7s-credit\",\r\n  \"pe-7s-copy-file\",\r\n  \"pe-7s-config\",\r\n  \"pe-7s-compass\",\r\n  \"pe-7s-comment\",\r\n  \"pe-7s-coffee\",\r\n  \"pe-7s-cloud\",\r\n  \"pe-7s-clock\",\r\n  \"pe-7s-check\",\r\n  \"pe-7s-chat\",\r\n  \"pe-7s-cart\",\r\n  \"pe-7s-camera\",\r\n  \"pe-7s-call\",\r\n  \"pe-7s-calculator\",\r\n  \"pe-7s-browser\",\r\n  \"pe-7s-box2\",\r\n  \"pe-7s-box1\",\r\n  \"pe-7s-bookmarks\",\r\n  \"pe-7s-bicycle\",\r\n  \"pe-7s-bell\",\r\n  \"pe-7s-battery\",\r\n  \"pe-7s-ball\",\r\n  \"pe-7s-back\",\r\n  \"pe-7s-attention\",\r\n  \"pe-7s-anchor\",\r\n  \"pe-7s-albums\",\r\n  \"pe-7s-alarm\",\r\n  \"pe-7s-airplay\"\r\n];\r\n\r\n//\r\n// //\r\n// // // // For dashboard's charts\r\n// //\r\n//\r\n// Data for Pie Chart\r\nvar dataPie = {\r\n  labels: [\"40%\", \"20%\", \"40%\"],\r\n  series: [40, 20, 40]\r\n};\r\nvar legendPie = {\r\n  names: [\"Open\", \"Bounce\", \"Unsubscribe\"],\r\n  types: [\"info\", \"danger\", \"warning\"]\r\n};\r\n\r\n// Data for Line Chart\r\nvar dataSales = {\r\n  labels: [\r\n    \"9:00AM\",\r\n    \"12:00AM\",\r\n    \"3:00PM\",\r\n    \"6:00PM\",\r\n    \"9:00PM\",\r\n    \"12:00PM\",\r\n    \"3:00AM\",\r\n    \"6:00AM\"\r\n  ],\r\n  series: [\r\n    [287, 385, 490, 492, 554, 586, 698, 695],\r\n    [67, 152, 143, 240, 287, 335, 435, 437],\r\n    [23, 113, 67, 108, 190, 239, 307, 308]\r\n  ]\r\n};\r\nvar optionsSales = {\r\n  low: 0,\r\n  high: 800,\r\n  showArea: false,\r\n  height: \"245px\",\r\n  axisX: {\r\n    showGrid: false\r\n  },\r\n  lineSmooth: true,\r\n  showLine: true,\r\n  showPoint: true,\r\n  fullWidth: true,\r\n  chartPadding: {\r\n    right: 50\r\n  }\r\n};\r\nvar responsiveSales = [\r\n  [\r\n    \"screen and (max-width: 640px)\",\r\n    {\r\n      axisX: {\r\n        labelInterpolationFnc: function(value) {\r\n          return value[0];\r\n        }\r\n      }\r\n    }\r\n  ]\r\n];\r\nvar legendSales = {\r\n  names: [\"Open\", \"Click\", \"Click Second Time\"],\r\n  types: [\"info\", \"danger\", \"warning\"]\r\n};\r\n\r\n// Data for Bar Chart\r\nvar dataBar = {\r\n  labels: [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"Mai\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n  ],\r\n  series: [\r\n    [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895],\r\n    [412, 243, 280, 580, 453, 353, 300, 364, 368, 410, 636, 695]\r\n  ]\r\n};\r\nvar optionsBar = {\r\n  seriesBarDistance: 10,\r\n  axisX: {\r\n    showGrid: false\r\n  },\r\n  height: \"245px\"\r\n};\r\nvar responsiveBar = [\r\n  [\r\n    \"screen and (max-width: 640px)\",\r\n    {\r\n      seriesBarDistance: 5,\r\n      axisX: {\r\n        labelInterpolationFnc: function(value) {\r\n          return value[0];\r\n        }\r\n      }\r\n    }\r\n  ]\r\n];\r\nvar legendBar = {\r\n  names: [\"Tesla Model S\", \"BMW 5 Series\"],\r\n  types: [\"info\", \"danger\"]\r\n};\r\n\r\nmodule.exports = {\r\n  style, // For notifications (App container and Notifications view)\r\n  thArray,\r\n  tdArray, // For tables (TableList view)\r\n  iconsArray, // For icons (Icons view)\r\n  dataPie,\r\n  legendPie,\r\n  dataSales,\r\n  optionsSales,\r\n  responsiveSales,\r\n  legendSales,\r\n  dataBar,\r\n  optionsBar,\r\n  responsiveBar,\r\n  legendBar // For charts (Dashboard view)\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/sidebar-3.34535b95.jpg\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 624;","const config= {\r\n    baseurl:(process.env.NODE_ENV==\"development\") ? \"http://localhost:4000/api\": \"https://qa.top4.trade/api\"\r\n}\r\n\r\nexport default config;\r\n","import React, { Component } from 'react';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport config from '../../constant/config.js';\r\nimport Select from 'react-select'\r\nimport TagsInput from 'react-tagsinput'\r\nimport 'react-tagsinput/react-tagsinput.css'\r\nimport { times } from 'chartist';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nconst axios = require('axios');\r\n\r\n\r\nclass Innerfilter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedAccountOption: null,\r\n            selectedSymbolOption: null,\r\n            selectedSymbolOptionTo: null,\r\n            selectedAccountOptionTo: null,\r\n            selectedCommissionAccount: null,\r\n            startDate: null,\r\n            endDate: null,\r\n            startDateTo: null,\r\n            endDateTo: null,\r\n            allAccounts: [],\r\n            allSymbols: [],\r\n            profileName: '',\r\n            error: '',\r\n            showCommisoin: false,\r\n            showAddCommission: false,\r\n            autoSyncClose: false,\r\n            profileValues: [],\r\n            nameError: false,\r\n            magicNumber: [],\r\n            magicNumberTo: [],\r\n            showMagicNumber: false,\r\n            showMagicNumberTo: false,\r\n            tags: [],\r\n            include_exclude_status: '',\r\n            exclude: false,\r\n            include: false,\r\n            excludeTo: false,\r\n            includeTo: false,\r\n            ticket:[],\r\n            ticketTo:[],\r\n            excludeTicket: false,\r\n            includeTicket: false,\r\n            excludeTicketTo: false,\r\n            includeTicketTo: false,\r\n            \r\n            // options: [{ name: 'Srigar', id: 1 }, { name: 'Sam', id: 2 }],\r\n\r\n            // plainArray: [\"Option 1\", \"Option 2\", \"Option 3\", \"Option 4\", \"Option 5\"],\r\n            // objectArray: [\r\n            //     { key: \"Option 1\", cat: \"Group 1\" },\r\n            //     { key: \"Option 2\", cat: \"Group 1\" },\r\n            //     { key: \"Option 3\", cat: \"Group 1\" },\r\n            //     { key: \"Option 4\", cat: \"Group 2\" },\r\n            //     { key: \"Option 5\", cat: \"Group 2\" },\r\n            //     { key: \"Option 6\", cat: \"Group 2\" },\r\n            //     { key: \"Option 7\", cat: \"Group 2\" }\r\n            // ],\r\n            // selectedValues: [\r\n            //     { key: \"Option 1\", cat: \"Group 1\" },\r\n            //     { key: \"Option 2\", cat: \"Group 1\" }\r\n            // ]\r\n        };\r\n\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.getSymbolInfo()\r\n        this.fetchfilterdata()\r\n\r\n\r\n    }\r\n    getSymbolInfo = () => {\r\n        let self = this;\r\n        axios.get(config.baseurl + '/accounts/fetchAllAccounts')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.setState({ allAccounts: response.data.rows })\r\n                }\r\n            })\r\n        axios.get(config.baseurl + '/accounts/fetchAllSymbol')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.setState({ allSymbols: response.data.rows })\r\n                }\r\n            })\r\n    }\r\n    // addItem = () => {\r\n    //     this.selectedValues.push({ key: \"Option 3\", cat: \"Group 1\" });\r\n    // }\r\n    handleDropdownChange = (e) => {\r\n        this.setState({ selectValue: e.target.value });\r\n    }\r\n    handleChangeDate = date => {\r\n        this.setState({\r\n            startDate: date\r\n        });\r\n    }\r\n\r\n    handleEndDate = date => {\r\n        if (date < this.state.startDate && date != null) {\r\n            this.setState({ error: 'enddate', endDate: \"\" })\r\n            return\r\n        }\r\n        this.setState({\r\n            error: '',\r\n            endDate: date\r\n        })\r\n    }\r\n    handleChangeDateTo = date => {\r\n\r\n        this.setState({\r\n            startDateTo: date,\r\n            error: ''\r\n        });\r\n    }\r\n    handleEndDateTo = date => {\r\n        if (date < this.state.startDateTo && date != null) {\r\n            this.setState({ error: 'enddateto', endDateTo: \"\" })\r\n            return\r\n        }\r\n        this.setState({\r\n            error: '',\r\n            endDateTo: date\r\n        });\r\n    }\r\n    handleChange = (event) => {\r\n        //this.setState({value: event.option});\r\n        this.setState({ value: Array.from(event.target.selectedOptions, (item) => item.value) });\r\n    }\r\n    renderAccountSelect = () => {\r\n        const { selectedAccountOption, allAccounts } = this.state;\r\n        let Data = {\r\n            account: selectedAccountOption\r\n        }\r\n        // axios.post(config.baseurl + '/filter/fetchSymbolData', Data)\r\n        //     .then(function (response) {\r\n        //         if (response.status == 200) {\r\n        //             this.props.onHide()\r\n        //         }\r\n        //     })\r\n        //     .catch(function (error) {\r\n        //     });\r\n\r\n        let options = allAccounts.map(data => {\r\n            return { value: data.id, label: data.login };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Account\"\r\n                value={selectedAccountOption}\r\n                onChange={this.handleChangeAccount}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n    handeChangeShowCommission = (e) => {\r\n        this.setState({ showCommission: true }, () => {\r\n            this.setState({ showAddCommission: !this.state.showAddCommission })\r\n        })\r\n    }\r\n    handleChangeAccountTo = selectedAccountOptionTo => {\r\n\r\n        this.setState({ selectedAccountOptionTo, error: '' });\r\n    };\r\n    renderAccountSelectTo = () => {\r\n        const { selectedAccountOptionTo, allAccounts } = this.state;\r\n\r\n        let options = allAccounts.map(data => {\r\n            return { value: data.id, label: data.login };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Account\"\r\n                value={selectedAccountOptionTo}\r\n                onChange={this.handleChangeAccountTo}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n    handleChangeCommissionAccount = selectedCommissionAccount => {\r\n        this.setState({ selectedCommissionAccount, });\r\n    };\r\n    renderCommissionAccount = () => {\r\n        const { selectedCommissionAccount, allAccounts } = this.state;\r\n\r\n        let options = allAccounts.map(data => {\r\n            return { value: data.id, label: data.login };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Account\"\r\n                value={selectedCommissionAccount}\r\n                onChange={this.handleChangeCommissionAccount}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n    handleChangeMagicNumber = (magicNumber) => {\r\n\r\n\r\n        this.setState({ magicNumber })\r\n\r\n    }\r\n    handleChangeMagicNumberTo = (magicNumberTo) => {\r\n\r\n        this.setState({ magicNumberTo })\r\n    }\r\n\r\n    handleChangeTicket = (ticket) => {\r\n\r\n\r\n        this.setState({ ticket })\r\n\r\n    }\r\n    handleChangeTicketTo = (ticketTo) => {\r\n\r\n        this.setState({ ticketTo })\r\n    }\r\n\r\n\r\n    handleChangeAccount = selectedAccountOption => {\r\n        this.setState({ selectedAccountOption });\r\n    };\r\n    handleChangeSymbol = selectedSymbolOption => {\r\n        this.setState({ selectedSymbolOption });\r\n    };\r\n    renderSymbolSelect = () => {\r\n        const { selectedSymbolOption, allSymbols } = this.state;\r\n        // console.log(selectedSymbolOption, allSymbols, \"selectedSymbolOption, allSymbols--------->\")\r\n        let options = allSymbols.map(data => {\r\n            return { value: data.name, label: data.name };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Symbol\"\r\n                value={selectedSymbolOption}\r\n                isMulti\r\n                onChange={this.handleChangeSymbol}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n    handleChangeSymbolTo = selectedSymbolOptionTo => {\r\n        this.setState({ selectedSymbolOptionTo });\r\n    };\r\n    renderSymbolSelectTo = () => {\r\n        const { selectedSymbolOptionTo, allSymbols } = this.state;\r\n        let options = allSymbols.map(data => {\r\n            return { value: data.name, label: data.name };\r\n        })\r\n\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Symbol...\"\r\n                value={selectedSymbolOptionTo}\r\n                isMulti\r\n                onChange={this.handleChangeSymbolTo}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n    fetchfilterdata() {\r\n        let self = this;\r\n        axios.get(config.baseurl + '/filter/fetchfilterdata?page=1')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n\r\n                    self.setState({ profileValues: response.data.rows })\r\n                }\r\n            })\r\n    }\r\n\r\n    handleprofileName(e) {\r\n        this.setState({ nameError: false })\r\n        this.state.profileValues.filter((data) => {\r\n            if (data.profile_name.toUpperCase() !== e.target.value.toUpperCase()) {\r\n                this.setState({ profileName: e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1), error: '', })\r\n            }\r\n            else {\r\n                this.setState({ nameError: true }, () => {\r\n                })\r\n                NotificationManager.listNotify = [];\r\n                NotificationManager.error('Profile already exits!');\r\n\r\n            }\r\n        })\r\n    }\r\n    // handlemagicNumber(e){\r\n    //     this.setState({ magicNumber: e.target.value})\r\n    // }\r\n\r\n    // handlemagicNumberTo(e){\r\n    //     this.setState({ magicNumberTo: e.target.value})\r\n    // }\r\n\r\n    formDataSubmit(e) {\r\n\r\n        e.preventDefault();\r\n\r\n\r\n\r\n        let from_status = this.state.include === true && this.state.exclude === false ? 1 : this.state.exclude === true && this.state.include === false ? 2 : 0\r\n\r\n\r\n        let to_status = this.state.includeTo === true && this.state.excludeTo === false ? 1 : this.state.excludeTo === true && this.state.includeTo === false ? 2 : 0\r\n        \r\n        let from_status_ticket = this.state.includeTicket === true && this.state.excludeTicket === false ? 1 : this.state.excludeTicket === true && this.state.includeTicket === false ? 2 : 0\r\n\r\n        let to_status_ticket = this.state.includeTicketTo === true && this.state.excludeTicketTo === false ? 1 : this.state.excludeTicketTo === true && this.state.includeTicketTo === false ? 2 : 0\r\n        \r\n        let self = this\r\n\r\n\r\n        if (this.state.profileName == null || this.state.profileName == '') {\r\n            NotificationManager.listNotify = [];\r\n            NotificationManager.error('Please name is required !')\r\n            return\r\n        }\r\n        else if (this.state.selectedAccountOption == null || this.state.selectedAccountOption == '') {\r\n            this.setState({ error: 'accountoption' })\r\n            return\r\n        }\r\n        else if (this.state.showCommission == true && (this.state.selectedCommissionAccount == null || this.state.selectedCommissionAccount == '')) {\r\n            this.setState({ error: 'selectedCommissionAccount' })\r\n            return\r\n        }\r\n\r\n        else if (this.state.startDate == null || this.state.startDate == '') {\r\n            this.setState({ error: 'startdate' })\r\n            return\r\n        } else if (this.state.selectedSymbolOption == null || this.state.selectedSymbolOption == '') {\r\n            this.setState({ error: 'symbolselect' })\r\n            return\r\n        }\r\n        else if (this.state.selectedAccountOptionTo == null || this.state.selectedAccountOptionTo == '') {\r\n            this.setState({ error: 'accountoptionto' })\r\n            return\r\n        }\r\n\r\n        else if (this.state.startDateTo == null || this.state.startDateTo == '') {\r\n            this.setState({ error: 'startDateTo' })\r\n            return\r\n        }\r\n        else if (this.state.selectedSymbolOptionTo == null || this.state.selectedSymbolOptionTo == '') {\r\n            this.setState({ error: 'selectedSymbolOptionTo' })\r\n            return\r\n        }\r\n        else if (this.state.nameError) {\r\n            NotificationManager.listNotify = [];\r\n            NotificationManager.error('Profile Name Already Exist!');\r\n        }\r\n\r\n        else {\r\n            this.setState({ error: ' ' })\r\n            let fromSymbol = this.state.selectedSymbolOption;\r\n            let symbolFrom = fromSymbol.map((data) => {\r\n                return data.value\r\n            })\r\n            let toSymbol = this.state.selectedSymbolOptionTo;\r\n            let symbolto = toSymbol.map((data) => {\r\n                return data.value\r\n            })\r\n            // console.log(this.state.selectedCommissionAccount, 'this.state.selectedCommissionAccount')\r\n\r\n            let Data = {\r\n                profile_name: this.state.profileName,\r\n                from_account_id: this.state.selectedAccountOption.value,\r\n                to_account_id: this.state.selectedAccountOptionTo.value,\r\n                commission_acount_id: this.state.showAddCommission ? this.state.selectedCommissionAccount.value : 0,\r\n                startdateFrom: this.state.startDate,\r\n                enddateFrom: this.state.endDate,\r\n                startdateTo: this.state.startDateTo,\r\n                enddateTo: this.state.endDateTo,\r\n                from_symbols: JSON.stringify(symbolFrom),\r\n                to_symbols: JSON.stringify(symbolto),\r\n                auto_close: this.state.autoSyncClose ? 1 : 0,\r\n                from_magic_number: (from_status != 0) ? this.state.magicNumber.length > 0 ? JSON.stringify(this.state.magicNumber) : JSON.stringify('') : \"\",\r\n                to_magic_number: (to_status != 0) ? this.state.magicNumberTo.length > 0 ? JSON.stringify(this.state.magicNumberTo) : JSON.stringify('') : \"\",\r\n                from_include_exclude_status: from_status,\r\n                to_include_exclude_status: to_status,\r\n          from_ticket:(from_status_ticket != 0) ? this.state.ticket.length > 0 ? JSON.stringify(this.state.ticket) : JSON.stringify('') : \"\",\r\n          to_ticket: (to_status_ticket != 0) ? this.state.ticketTo.length > 0 ? JSON.stringify(this.state.ticketTo) : JSON.stringify('') : \"\", \r\n          from_include_exclude_status_ticket: from_status_ticket,\r\n          to_include_exclude_status_ticket: to_status_ticket, \r\n          createdAt: new Date(),\r\n                updatedAt: new Date(),\r\n\r\n            }\r\n            console.log(Data, \"dat-------------\");\r\n\r\n            axios.post(config.baseurl + '/filter/addfilterdata', Data)\r\n                .then(function (response) {\r\n                    if (response.status == 200) {\r\n                        self.props.onHide()\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                });\r\n        }\r\n    }\r\n    crossClick(e) {\r\n        e.preventDefault();\r\n        this.props.onHide()\r\n    }\r\n    handleChangeAutoSync(e) {\r\n\r\n        this.setState({ autoSyncClose: !this.state.autoSyncClose }, () => {\r\n\r\n        })\r\n    }\r\n\r\n    changeIncludeDefaultProperty = () => {\r\n\r\n        this.setState({ include: !this.state.include, exclude: false }\r\n        )\r\n        // if (!this.state.include == true) {\r\n        //     this.setState({ showMagicNumber: true })\r\n        // } else if (this.state.include == true) {\r\n        //     this.setState({ showMagicNumber: false })\r\n\r\n        // }\r\n\r\n\r\n    }\r\n    changeExcludeDefaultProperty = () => {\r\n        this.setState({ exclude: !this.state.exclude, include: false })\r\n        // if (!this.state.exclude == true) {\r\n        //     this.setState({ showMagicNumber: true })\r\n        // } else if (this.state.exclude == true) {\r\n        //     this.setState({ showMagicNumber: false })\r\n\r\n        // }\r\n\r\n    }\r\n\r\n    changeIncludeDefaultPropertyTo = () => {\r\n        this.setState({ includeTo: !this.state.includeTo, excludeTo: false })\r\n        // if (!this.state.includeTo == true) {\r\n        //     this.setState({ showMagicNumberTo: true })\r\n        // } else if (this.state.includeTo == true) {\r\n        //     this.setState({ showMagicNumberTo: false })\r\n\r\n        // }\r\n    }\r\n    changeExcludeDefaultPropertyTo = () => {\r\n        this.setState({ excludeTo: !this.state.excludeTo, includeTo: false })\r\n        // if (!this.state.excludeTo == true) {\r\n        //     this.setState({ showMagicNumberTo: true })\r\n        // } else if (this.state.excludeTo == true) {\r\n        //     this.setState({ showMagicNumberTo: false })\r\n\r\n        // }\r\n\r\n    }\r\n    changeIncludeDefaultPropertyTicket = () => {\r\n\r\n        this.setState({ includeTicket: !this.state.includeTicketTo, excludeTicket: false }\r\n        )\r\n       \r\n\r\n\r\n    }\r\n    changeExcludeDefaultPropertyTicket = () => {\r\n        this.setState({ excludeTicket: !this.state.excludeTicket, includeTicket: false })\r\n        \r\n    }\r\n\r\n    changeIncludeDefaultPropertyTicketTo = () => {\r\n        this.setState({ includeTicketTo: !this.state.includeTicketTo, excludeTicketTo: false })\r\n        \r\n    }\r\n    changeExcludeDefaultPropertyTicketTo = () => {\r\n        this.setState({ excludeTicketTo: !this.state.excludeTicketTo, includeTicketTo: false })\r\n       \r\n\r\n    }\r\n    render() {\r\n        let s = this\r\n        return (\r\n            <>\r\n                <NotificationContainer />\r\n                <div className=\"content\">\r\n                    <Grid fluid>\r\n                        <div className=\"symbol-box\">\r\n                            <div className=\"cross_div\"><a onClick={(e) => this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\r\n                            <div className=\"terminal-text\" >\r\n                                <label className=\"pnameadjust\"> Profile Name </label>\r\n                                <input type=\"text\" name=\"profilename\" className=\"Itext\" placeholder=\"Profile Name\" onChange={(e) => this.handleprofileName(e)} />\r\n                            </div>\r\n                            <div className=\"synclose\">\r\n                                <label className=\"checkbox-inline\"><input type=\"checkbox\" defaultChecked={this.state.autoSyncClose} name=\"changeAutoSync\" onChange={(e) => this.handleChangeAutoSync(e)} /><b>Auto Sync Close</b></label>\r\n                            </div>\r\n\r\n                            <form>\r\n                                <Row>\r\n\r\n                                    <Col md={6}>\r\n                                        <div className=\"card bottom\">\r\n                                            <div style={{ padding: '10px 20px 0px' }}>\r\n                                                <span style={{ fontWeight: 'bold' }}>Account A</span>\r\n                                            </div>\r\n                                            <table className=\"table mt20\">\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr\">\r\n                                                            <span className=\"accnt\">Account </span>\r\n                                                        </td>\r\n\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '50%' }}>\r\n                                                            {/* <Multiselect\r\n                                                        options={objectArray}\r\n                                                        singleSelect\r\n                                                        displayValue=\"key\"\r\n                                                    /> */}\r\n                                                            {this.renderAccountSelect()}\r\n                                                            {(this.state.error == 'accountoption') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                       <tr>\r\n                                                        <td className=\"b-clr \">\r\n                                                                 <span className=\"accnt\">From  </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center datepicker_filter\">\r\n                                                            <DatePicker\r\n                                                                selected={this.state.startDate}\r\n                                                                onChange={this.handleChangeDate}\r\n                                                                isClearable\r\n                                                                placeholderText=\"dd/mm/yyyy\"\r\n                                                                dateFormat=\"dd/MM/yyyy\"\r\n                                                                startDate={this.state.startDate}\r\n                                                                endDate={this.state.endDate}\r\n                                                                strictParsing\r\n                                                            />\r\n                                                            {/* <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                                            <KeyboardDatePicker\r\n                                                                // margin=\"normal\"\r\n                                                                clearable={false}\r\n                                                                id=\"date-picker-dialog\"\r\n                                                                label=\"dd/MM/yyyy\"\r\n                                                                format=\"dd/MM/yyyy\"\r\n                                                                onError={() => { return null }}\r\n                                                                value={this.state.startDate}\r\n                                                                onChange={this.handleChangeDate}\r\n                                                                KeyboardButtonProps={{\r\n                                                                    'aria-label': 'change date',\r\n                                                                }}\r\n                                                            />\r\n                                                        </MuiPickersUtilsProvider> */}\r\n                                                            {(this.state.error == 'startdate') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr \">\r\n                                                            <span className=\"accnt\">To   </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center datepicker_filter\">\r\n                                                            <DatePicker\r\n                                                                autoOk={true}\r\n                                                                selected={this.state.endDate}\r\n                                                                onChange={this.handleEndDate}\r\n                                                                isClearable\r\n                                                                placeholderText=\"dd/mm/yyyy\"\r\n                                                                dateFormat=\"dd/MM/yyyy\"\r\n                                                                startDate={this.state.startDate}\r\n                                                                endDate={this.state.endDate}\r\n                                                            />\r\n                                                            {(this.state.error == 'enddate') && <p style={{ color: 'red', fontSize: '13px' }}>*\r\n                                                        Please ensure that the End Date is greater than the Start Date.</p>}\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr \">\r\n                                                            <span className=\"accnt\">Symbol </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                            {/* <Multiselect\r\n                                                        options={objectArray}\r\n                                                        displayValue=\"key\"\r\n                                                        showCheckbox={true}\r\n                                                    /> */}\r\n                                                            {this.renderSymbolSelect()}\r\n                                                            {(this.state.error == 'symbolselect') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\r\n                                                        </td>\r\n                                                    </tr>\r\n\r\n                                                    <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                            <span className=\"accnt\">Magic Number :</span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                        <TagsInput\r\n                                                        onValidationReject={() => console.log('rejected')}\r\n                                                        validationRegex={/^[0-9]*$/}\r\n                                                        inputProps={{ placeholder: this.state.magicNumber.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumber\r\n                                                        } onChange={this.handleChangeMagicNumber}></TagsInput>\r\n                                                            </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr dataAdjust\">\r\n                                                            <div onClick={this.changeIncludeDefaultProperty}>\r\n                                                                <input\r\n                                                                    type=\"radio\" id=\"include\" name=\"include\" checked={this.state.include} />\r\n                                                                <span className=\"accnt \">Include</span>\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\">\r\n                                                            <div onClick={this.changeExcludeDefaultProperty} >\r\n                                                                <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.exclude} />\r\n                                                                <span className=\"accnt \">Exclude</span>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                            <span className=\"accnt\">Ticket : </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                        <TagsInput\r\n                                                        onValidationReject={() => console.log('rejected')}\r\n                                                        validationRegex={/^[0-9]*$/}\r\n                                                        inputProps={{ placeholder: this.state.ticket.length > 0 ? \"\" : \" Enter Ticket\" }} type=\"number\" value={this.state.ticket\r\n                                                        } onChange={this.handleChangeTicket}></TagsInput>\r\n                                                            </td>\r\n                                                    </tr>\r\n                                                   \r\n                                                    <tr>\r\n                                                        <td className=\"b-clr dataAdjust\">\r\n                                                            <div onClick={this.changeIncludeDefaultPropertyTicket}>\r\n                                                                <input\r\n                                                                    type=\"radio\" id=\"includeTicket\" name=\"includeTicket\" checked={this.state.includeTicket} />\r\n                                                                <span className=\"accnt \">Include</span>\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\">\r\n                                                            <div onClick={this.changeExcludeDefaultPropertyTicket} >\r\n                                                                <input type=\"radio\" id=\"excludeTicket\" name=\"excludeTicket\" checked={this.state.excludeTicket} />\r\n                                                                <span className=\"accnt \">Exclude</span>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n\r\n                                          \r\n\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col md={6}>\r\n                                        <div className=\"card bottom\">\r\n                                            <div style={{ padding: '10px 20px 0px' }}>\r\n                                                <span style={{ fontWeight: 'bold' }}>Account B</span>\r\n                                            </div>\r\n                                            <table className=\"table mt20\">\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr \">\r\n                                                            <span className=\"accnt\"> Account</span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '50%' }}>\r\n                                                            {this.renderAccountSelectTo()}\r\n                                                            {(this.state.error == 'accountoptionto') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr \">\r\n                                                            <span className=\"accnt\">From </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center datepicker_filter\">\r\n                                                            <DatePicker\r\n                                                                selected={this.state.startDateTo}\r\n                                                                onChange={this.handleChangeDateTo}\r\n                                                                isClearable\r\n                                                                placeholderText=\"dd/mm/yyyy\"\r\n                                                                dateFormat=\"dd/MM/yyyy\"\r\n                                                                startDate={this.state.startDateTo}\r\n                                                                endDate={this.state.endDateTo}\r\n                                                                strictParsing\r\n                                                            />\r\n                                                            {(this.state.error == 'startDateTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr \">\r\n                                                            <span className=\"accnt\">To  </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center datepicker_filter\">\r\n                                                            <DatePicker\r\n                                                                selected={this.state.endDateTo}\r\n                                                                onChange={this.handleEndDateTo}\r\n                                                                isClearable\r\n                                                                placeholderText=\"dd/mm/yyyy\"\r\n                                                                dateFormat=\"dd/MM/yyyy\"\r\n                                                                startDate={this.state.startDateTo}\r\n                                                                endDate={this.state.endDateTo}\r\n                                                            />\r\n                                                            {(this.state.error == 'enddateto') && <p style={{ color: 'red', fontSize: '13px' }}>*\r\n                                                        Please ensure that the End Date is greater than the Start Date.</p>}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr\">\r\n                                                            <span className=\"accnt\"> Symbol   </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                            {/* <Multiselect\r\n                                                        options={objectArray}\r\n                                                        displayValue=\"key\"\r\n                                                        showCheckbox={true}\r\n                                                    /> */}\r\n                                                            {this.renderSymbolSelectTo()}\r\n                                                            {(this.state.error == 'selectedSymbolOptionTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n\r\n                                                    <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                            <span className=\"accnt\">Magic Number :</span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                        <TagsInput\r\n                                                            onValidationReject={() => console.log('rejected')}\r\n                                                            validationRegex={/^[0-9]*$/}\r\n                                                            inputProps={{ placeholder: this.state.magicNumberTo.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumberTo\r\n                                                            } onChange={this.handleChangeMagicNumberTo}></TagsInput>\r\n                                                            </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr dataAdjust\">\r\n                                                            <div onClick={this.changeIncludeDefaultPropertyTo}>\r\n                                                                <input\r\n                                                                    type=\"radio\" id=\"includeTo\" name=\"includeTo\" checked={this.state.includeTo} />\r\n                                                                <span className=\"accnt \">Include</span>\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\">\r\n                                                            <div onClick={this.changeExcludeDefaultPropertyTo} >\r\n                                                                <input type=\"radio\" id=\"excludeTo\" name=\"excludeTo\" checked={this.state.excludeTo} />\r\n                                                                <span className=\"accnt \">Exclude</span>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                            <span className=\"accnt\">Ticket : </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                        <TagsInput\r\n                                                            onValidationReject={() => console.log('rejected')}\r\n                                                            validationRegex={/^[0-9]*$/}\r\n                                                            inputProps={{ placeholder: this.state.ticketTo.length > 0 ? \"\" : \" Enter Ticket\" }} type=\"number\" value={this.state.ticketTo\r\n                                                            } onChange={this.handleChangeTicketTo}></TagsInput>\r\n                                                            </td>\r\n                                                    </tr>\r\n                                                     <tr>\r\n                                                        <td className=\"b-clr dataAdjust\">\r\n                                                            <div onClick={this.changeIncludeDefaultPropertyTicketTo}>\r\n                                                                <input\r\n                                                                    type=\"radio\" id=\"includeTicketTo\" name=\"includeTicketTo\" checked={this.state.includeTicketTo} />\r\n                                                                <span className=\"accnt \">Include</span>\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\">\r\n                                                            <div onClick={this.changeExcludeDefaultPropertyTicketTo} >\r\n                                                                <input type=\"radio\" id=\"excludeTicketTo\" name=\"excludeTicketTo\" checked={this.state.excludeTicketTo} />\r\n                                                                <span className=\"accnt \">Exclude</span>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                           \r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                                <hr></hr>\r\n                                <div className=\"chceckbox\">\r\n\r\n                                    <label className=\"checkbox-inline\"><input type=\"checkbox\" defaultChecked={this.state.showCommisoin} onChange={(e) => this.handeChangeShowCommission(e)} /><b>Add Commission</b></label>\r\n                                </div>\r\n                                {this.state.showAddCommission &&\r\n                                    <div className=\"center-com d-flex\">\r\n                                        <div className=\"com\">\r\n                                            <h3 style={{ fontWeight: 'bold' }}>Commission</h3>\r\n                                        </div>\r\n                                        <table className=\"table mt20\">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\"> Account </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center\" style={{ width: '50%' }}>\r\n                                                        {this.renderCommissionAccount()}\r\n\r\n                                                        {(this.state.error == 'selectedCommissionAccount') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account </p>}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                }\r\n                                <div className=\"save_button_filter\">\r\n                                    <div className=\"savebtn\">\r\n                                        <Button className=\"btn-primary savebutton\" variant=\"primary\" size=\"lg\" block onClick={(e) => this.formDataSubmit(e)}>\r\n                                            <b>Save</b>\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </Grid>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Innerfilter;\r\n","import React, { Component } from 'react';\r\nimport { Grid, Row, Col, Modal, Alert } from \"react-bootstrap\";\r\nimport swal from 'sweetalert';\r\nimport config from '../../constant/config.js';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nconst axios = require('axios');\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loginForm: false,\r\n            setShow: false,\r\n            show: true,\r\n            username: '',\r\n            password: '',\r\n            alert: null,\r\n            persons: [],\r\n            shwPwd: false,\r\n            shwMsg: false,\r\n            invalidUsername: '',\r\n            invalidPassword: '',\r\n            accountlist: []\r\n\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value.trim() })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const userdetail = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }\r\n        if (this.state.username == '') {\r\n            this.setState({ shwPwd: true })\r\n        }\r\n\r\n        let self = this;\r\n        axios.post(config.baseurl + '/users/mainLogin', userdetail)\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    // self.handleClose();\r\n                    if (response.data.rows && response.data.rows.length > 0) {\r\n                        localStorage.setItem('currentUser', JSON.stringify(response.data.rows));\r\n                        self.props.history.push('/dashboard/dashboard')\r\n                    }\r\n                    if (response.data.message) {\r\n                        if (response.data.name == 'username') {\r\n                            self.setState({ invalidUsername: response.data.message })\r\n                            if (self.state.invalidUsername == '' || self.state.invalidUsername == 'Invalid username.' || self.state.invalidUsername == \"Invalid username\") {\r\n                                self.createNotification()\r\n                            }\r\n                        }\r\n                        if (response.data.name == 'password') {\r\n                            if (self.state.invalidPassword == '' || self.state.invalidPassword == 'Invalid password.') {\r\n                                self.createNotification()\r\n                            }\r\n                            self.setState({ invalidPassword: response.data.message, invalidUsername: '' })\r\n\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n            });\r\n    }\r\n    toogle = () => {\r\n        this.setState({ loginForm: !this.state.loginForm })\r\n    }\r\n    handleClose = () => {\r\n        this.setState({ loginForm: false })\r\n    }\r\n    handleShow = () => {\r\n        this.setState({ setShow: true })\r\n    }\r\n    createNotification = () => {\r\n        NotificationManager.listNotify = [];\r\n        NotificationManager.error('Invalid Credentials !');\r\n    }\r\n\r\n    componentDidMount() {\r\n        // let self = this;\r\n\r\n        let currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n        if (currentUser !== null) {\r\n            this.props.history.push('dashboard/dashboard')\r\n            return;\r\n        }\r\n        // axios.get(config.baseurl + '/users/allAccounts')\r\n        //     .then(function (response) {\r\n        //         if (response.status == 200) {\r\n        //             self.setState({ accountlist: response.data.rows })\r\n        //         }\r\n        //     })\r\n    }\r\n    render() {\r\n        const { invalidPassword, invalidUsername } = this.state;\r\n        return (\r\n            <div className=\"content\">\r\n                <Grid fluid style={{ marginTop: '20vh' }}>\r\n                    <Row>\r\n                        <Col md={4} />\r\n                        <Col\r\n                            md={4}\r\n                            sm={6}\r\n                        >\r\n                            <span className=\"login-form-header\">Rimon Hedge Funds Monitoring</span>\r\n                            <div className=\"form-box login-box\">\r\n                                {/* <Modal.Title className=\"text-center\"><b>Log In</b></Modal.Title> */}\r\n\r\n                                {/* <div className=\"container-fluid\" style={{ background: '#eee', padding: 15, marginTop: 10 }}>\r\n                                    <div>\r\n                                        <span style={{ fontWeight: 'bold' }}> Username: </span>\r\n                                                    testaccount\r\n                                                </div>\r\n                                    <div>\r\n                                        <span style={{ fontWeight: 'bold' }}> Password: </span>\r\n                                                    1234567\r\n                                                </div>\r\n                                </div> */}\r\n                                <form style={{ marginTop: '20px' }} onSubmit={this.onSubmit}>\r\n                                    <label>Username</label>\r\n\r\n                                    <input className=\"Itext\" placeholder=\"Enter Username\" name=\"username\" value={this.state.username} onChange={this.onChange}\r\n                                    // onKeyUp={this.checkValidUser}\r\n                                    ></input>\r\n                                    <label>Password</label>\r\n\r\n                                    <input className=\"Itext\" placeholder=\"Enter Password\" name=\"password\" type=\"password\" value={this.state.password} onChange={this.onChange}></input>\r\n\r\n                                    <div className=\"clearfix\">\r\n                                        <button type=\"submit\" disabled={!this.state.username || !this.state.password} className={!this.state.username || !this.state.password ? \"loginButton\" : \"loginButton save2 save1\"}>Login</button>\r\n\r\n                                    </div>\r\n                                    <div className=\"login-footer-text\">\r\n                                        alpha ver 0.11\r\n                                        <br />\r\n                                        ©Rimon Hedge Funds LTD\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n\r\n                            {/* </Modal.Body>\r\n                                </Modal> */}\r\n\r\n\r\n                        </Col>\r\n                        <Col md={4} />\r\n                    </Row>\r\n                </Grid>\r\n                <NotificationContainer />\r\n\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport { NavItem, Nav, NavDropdown, MenuItem } from \"react-bootstrap\";\r\n\r\nclass AdminNavbarLinks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  logout = () => {\r\n    localStorage.clear();\r\n    this.props.history.push('/login');\r\n  }\r\n  render() {\r\n    const notification = (\r\n      <div>\r\n        {/* <i className=\"fa fa-globe\" />\r\n        <b className=\"caret\" /> */}\r\n        {/* <span className=\"notification\">5</span> */}\r\n        <p className=\"hidden-lg hidden-md\">Notification</p>\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        <Nav>\r\n          <NavItem eventKey={1} href=\"#\">\r\n            {/* <i className=\"fa fa-dashboard\" /> */}\r\n            <p className=\"hidden-lg hidden-md\">Dashboard</p>\r\n          </NavItem>\r\n          <NavDropdown\r\n            eventKey={2}\r\n            title={notification}\r\n            noCaret\r\n            id=\"basic-nav-dropdown\"\r\n          >\r\n            <MenuItem eventKey={2.1}>Notification 1</MenuItem>\r\n            <MenuItem eventKey={2.2}>Notification 2</MenuItem>\r\n            <MenuItem eventKey={2.3}>Notification 3</MenuItem>\r\n            <MenuItem eventKey={2.4}>Notification 4</MenuItem>\r\n            <MenuItem eventKey={2.5}>Another notifications</MenuItem>\r\n          </NavDropdown>\r\n          <NavItem eventKey={3} href=\"#\">\r\n            {/* <i className=\"fa fa-search\" />\r\n            <p className=\"hidden-lg hidden-md\">Search</p> */}\r\n          </NavItem>\r\n        </Nav>\r\n        <Nav pullRight>\r\n          {/* <NavItem eventKey={1} href=\"#\">\r\n            Account\r\n          </NavItem>\r\n          <NavDropdown\r\n            eventKey={2}\r\n            title=\"Dropdown\"\r\n            id=\"basic-nav-dropdown-right\"\r\n          >\r\n            <MenuItem eventKey={2.1}>Action</MenuItem>\r\n            <MenuItem eventKey={2.2}>Another action</MenuItem>\r\n            <MenuItem eventKey={2.3}>Something</MenuItem>\r\n            <MenuItem eventKey={2.4}>Another action</MenuItem>\r\n            <MenuItem eventKey={2.5}>Something</MenuItem>\r\n            <MenuItem divider />\r\n            <MenuItem eventKey={2.5}>Separated link</MenuItem>\r\n          </NavDropdown> */}\r\n          <NavItem  eventKey={3} onClick={() => this.logout()}>\r\n           <span className=\"logOutbtn\">Logout</span> \r\n          </NavItem>\r\n        </Nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminNavbarLinks;\r\n","import React, { Component } from \"react\";\r\nimport { Navbar } from \"react-bootstrap\";\r\n\r\nimport AdminNavbarLinks from \"./AdminNavbarLinks\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.mobileSidebarToggle = this.mobileSidebarToggle.bind(this);\r\n    this.state = {\r\n      sidebarExists: false\r\n    };\r\n  }\r\n  mobileSidebarToggle(e) {\r\n    if (this.state.sidebarExists === false) {\r\n      this.setState({\r\n        sidebarExists: true\r\n      });\r\n    }\r\n    e.preventDefault();\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    var node = document.createElement(\"div\");\r\n    node.id = \"bodyClick\";\r\n    node.onclick = function() {\r\n      this.parentElement.removeChild(this);\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n    };\r\n    document.body.appendChild(node);\r\n  }\r\n  render() {\r\n    return (\r\n      <Navbar fluid>\r\n        <Navbar.Header>\r\n          <Navbar.Brand>\r\n            <a href=\"#\">{this.props.brandText== \"Dashboard\" ? \"Dashboard\" : this.props.brandText }</a>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle onClick={this.mobileSidebarToggle} />\r\n        </Navbar.Header>\r\n        <Navbar.Collapse>\r\n          <AdminNavbarLinks {...this.props}/>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Dropdown, DropdownButton } from 'react-bootstrap'\r\nimport AdminNavbarLinks from \"../Navbars/AdminNavbarLinks.jsx\";\r\n\r\n// import logo from \"assets/img/reactlogo.png\";\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: window.innerWidth,\r\n    \r\n    };\r\n  }\r\n  toggle = (id) => {\r\n\r\n    // console.log(this.props.routes)\r\n    this.props.routes.filter((data) => {\r\n      if (data.id == id) {\r\n        data.menu = !data.menu\r\n      }\r\n      else {\r\n        data.menu = false\r\n      }\r\n    })\r\n  }\r\n\r\n  activeRoute(routeName) {\r\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\r\n  }\r\n  updateDimensions() {\r\n    this.setState({ width: window.innerWidth });\r\n  }\r\n  componentDidMount() {\r\n    this.updateDimensions();\r\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.props, \"props\")\r\n    const sidebarBackground = {\r\n      backgroundImage: \"url(\" + this.props.image + \")\"\r\n    };\r\n    return (\r\n\r\n\r\n      <div\r\n        id=\"sidebar\"\r\n        className=\"sidebar\"\r\n        data-color={this.props.color}\r\n        data-image={this.props.image}\r\n      >\r\n        {this.props.hasImage ? (\r\n          <div className=\"sidebar-background\" />\r\n        ) : (\r\n            null\r\n          )}\r\n        <div className=\"logo\">\r\n          {/* <a\r\n            href=\"https://www.creative-tim.com?ref=lbd-sidebar\"\r\n            className=\"simple-text logo-mini\"\r\n          > */}\r\n          {/* <div className=\"logo-img\">\r\n\r\n            </div> */}\r\n          {/* </a> */}\r\n          <span className=\"logo-text simple-text logo-normal\">\r\n          Hedging Interest Differentials\r\n\r\n          </span>\r\n          {/* <a\r\n            href=\"https://www.creative-tim.com?ref=lbd-sidebar\"\r\n            className=\"simple-text logo-normal\"\r\n          >\r\n            Dashboard\r\n          </a> */}\r\n        </div>\r\n        <div className=\"sidebar-wrapper\">\r\n\r\n          <ul className=\"nav\">\r\n            {this.state.width <= 991 ? <AdminNavbarLinks {...this.props} /> : null}\r\n            {this.props.routes.map((prop, key) => {\r\n              if (!prop.redirect)\r\n                // console.log(prop.resources, 'resouces');\r\n                return (\r\n                  <li\r\n                    className={\r\n                      prop.upgrade\r\n                        ? \"active active-pro\"\r\n                        : this.activeRoute(prop.layout + prop.path)\r\n                    }\r\n\r\n                    key={key}\r\n                  >\r\n                    <NavLink\r\n                      to={prop.layout + prop.path}\r\n                      className=\"nav-link\"\r\n                      activeClassName=\"active\"\r\n                    >\r\n                      <i className={prop.icon} />\r\n                      <p\r\n                        onClick={() => this.toggle(prop.id)}\r\n\r\n                      >{prop.name}\r\n                        {prop.child !== false && <b style={{ transform: prop.menu ? 'rotate(360deg)' : 'rotate(270deg)' }} className=\"caret\"></b>}\r\n                      </p>\r\n\r\n                    </NavLink>\r\n                    {prop.menu &&\r\n                      <ul className='dropdown-menu-cutomize'>\r\n                        {prop.resources != undefined && prop.resources.map((sub, index) => (\r\n                          <NavLink\r\n                            to={sub.layout + sub.path}\r\n                            className=\"nav-link\"\r\n                            activeClassName=\"active\"\r\n                          >\r\n                            <li\r\n\r\n                              key={index}>\r\n                              {/* <i className={sub.icon} /> */}\r\n                              <p >{sub.name}</p>\r\n                            </li>\r\n                          </NavLink>\r\n                        ))}\r\n\r\n                      </ul>\r\n                    }\r\n\r\n                  </li>\r\n                );\r\n              // return null;\r\n            })}\r\n          </ul>\r\n        </div>\r\n        {/* <NavLink>\r\n          <DropdownButton id=\"dropdown-item-button\" title=\"Dropdown button\">\r\n            <Dropdown.ItemText>Dropdown item text</Dropdown.ItemText>\r\n            <Dropdown.Item as=\"button\">Action</Dropdown.Item>\r\n            <Dropdown.Item as=\"button\">Another action</Dropdown.Item>\r\n            <Dropdown.Item as=\"button\">Something else</Dropdown.Item>\r\n          </DropdownButton>\r\n        </NavLink> */}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n\r\n","\r\nimport React, { useState, Fragment } from 'react';\r\nimport { Collapse } from 'reactstrap';\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport NumberFormat from 'react-number-format';\r\nimport Login from './login';\r\n\r\n// import Data from './Data';\r\n\r\nconst Closeposition = (props) => {\r\n    const { allHistoryRecord, fromHistoryOrderInfo, toHistoryOrderInfo, commissionHistoryOrderInfo } = props;\r\n    const [isOpen2, setIsOpen2] = useState(false);\r\n    const toggle2 = () => setIsOpen2(!isOpen2);\r\n\r\n    // const sumOfTotal = allHistoryRecord.reduce((current, data) => {\r\n    //     return (data.total + current);\r\n    // }, 0);\r\n    let fromSymbols = '';\r\n    let toSymbols = '';\r\n    if (allHistoryRecord && Object.entries(allHistoryRecord).length > 0) {\r\n        fromSymbols = JSON.parse(allHistoryRecord.from_symbols);\r\n        fromSymbols = (fromSymbols).map(data => data).join(', ');\r\n        toSymbols = JSON.parse(allHistoryRecord.to_symbols);\r\n        toSymbols = (toSymbols).map(data => data).join(', ')\r\n    }\r\n    let fromsum = 0;\r\n    let tosum = 0;\r\n    let commissionSum = 0;\r\n\r\n    if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\r\n        fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\r\n    }\r\n    if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\r\n        tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\r\n    }\r\n    if (commissionHistoryOrderInfo && commissionHistoryOrderInfo.length > 0) {\r\n        commissionSum = (commissionHistoryOrderInfo[0].commission + commissionHistoryOrderInfo[0].swap + commissionHistoryOrderInfo[0].profit);\r\n    }\r\n\r\n    let sumOfTotal = tosum + fromsum;\r\n\r\n    let noRecord = ((fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0 && fromHistoryOrderInfo[0].total == null) && (toHistoryOrderInfo && toHistoryOrderInfo.length > 0 && toHistoryOrderInfo[0].total == null)) ? true : false;\r\n    return (\r\n        <div>\r\n            <div className=\"openpositions symbol-box terminal-head-box\" style={{ margin: '20px 0px' }}>\r\n                <span className=\"p-text\">Realized Profit/Loss</span>\r\n                {/* <span className=\"icon-style\" onClick={toggle2}>\r\n                    {!isOpen2 ?\r\n                        <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\r\n                        :\r\n                        <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\r\n                    }\r\n                </span> */}\r\n            </div>\r\n            <div>\r\n                {/* <Collapse isOpen={isOpen2}> */}\r\n                <Row>\r\n                    {/* {Data.tablePage.items.map((item, index) =>\r\n                            <Col md={6} key={index}>\r\n                                <div className=\"card\">\r\n                                    <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\r\n                                    </div>\r\n                                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                        <table className=\"table\">\r\n                                            <tbody>\r\n                                                <tr><td>{item.closed} </td>\r\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\r\n                                                </tr>\r\n                                                <tr><td>{item.commission} </td>\r\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\r\n                                                </tr>\r\n                                                <tr><td>{item.swap} </td>\r\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\r\n                                                </tr>\r\n                                                <tr><td>{item.total} </td>\r\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n                        )} */}\r\n                    {/* {(allHistoryRecord && allHistoryRecord.length>0) && allHistoryRecord.map((item, index) =>\r\n                            <Fragment>\r\n\r\n                            <Col md={6} key={index}>\r\n                                <div className=\"card\">\r\n                                    <div className=\"header\">\r\n                                        <h5 className={item.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{item.account.login}</h5>\r\n                                        <h6 className={'colorDarkBlue'} style={{fontSize:10}}>({item.account.alias})</h6>\r\n                                    </div>\r\n                                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                        <table className=\"table\">\r\n                                            <tbody>\r\n                                                <tr><td>Closed P/L </td>\r\n                                                    <td className=\"td-actions text-right\">$ {item.profit}</td>\r\n                                                </tr>\r\n                                                <tr><td>Commission </td>\r\n                                                    <td className=\"td-actions text-right\">$ {item.commission}</td>\r\n                                                </tr>\r\n                                                <tr><td>Swap </td>\r\n                                                    <td className=\"td-actions text-right\">$ {item.swap}</td>\r\n                                                </tr>\r\n                                                <tr><td>Total </td>\r\n                                                    <td className=\"td-actions text-right\">$ {item.total}</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n                            </Fragment>\r\n                        )}\r\n                        {(allHistoryRecord && allHistoryRecord.length>0) && \r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <div>\r\n                                        <div className=\"total-box\">\r\n                                            <span className=\"text\">Sum of closed positions</span>\r\n                                            <span className=\"text\" style={{ float: 'right' }}>$ {sumOfTotal}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        } */}\r\n                    {noRecord ? (\r\n                        <div className=\"text-center\">\r\n                            No Record Found!\r\n                        </div>) :\r\n\r\n                        <Fragment>\r\n\r\n                            {(fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0 && fromHistoryOrderInfo[0].total != null) ? (\r\n                                <Col md={6}>\r\n                                    <div className=\"card\">\r\n                                        <div className=\"header\">\r\n                                            <h5 className={allHistoryRecord.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{allHistoryRecord.accountFromInfo[0].login}</h5>\r\n                                            <h6 className={'colorDarkBlue'} style={{ fontSize: 10 }}>({allHistoryRecord.accountFromInfo[0].alias})</h6>\r\n                                        </div>\r\n                                        <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                            <table className=\"table\">\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td className=\"symbolStyle removeBorder\">{fromSymbols}</td>\r\n                                                        {/* <td>{fromSymbols}</td> */}\r\n                                                        {/* <td className=\"td-actions text-right\">$ {fromHistoryOrderInfo[0].profit}</td> */}\r\n                                                    </tr>\r\n                                                    <tr><td>Closed P/L </td>\r\n                                                        <td className=\"td-actions text-right\">$ {' '}\r\n                                                            <NumberFormat value={fromHistoryOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                            {/* {fromHistoryOrderInfo[0].profit} */}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr><td>Commission </td>\r\n                                                        <td className=\"td-actions text-right\">$ {' '}\r\n                                                            {/* {fromHistoryOrderInfo[0].commission} */}\r\n                                                            <NumberFormat value={fromHistoryOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr><td>Swap </td>\r\n                                                        <td className=\"td-actions text-right\">$ {' '}\r\n                                                            <NumberFormat value={fromHistoryOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                            {/* {fromHistoryOrderInfo[0].swap} */}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr><td>Total </td>\r\n                                                        <td className=\"td-actions text-right\">$ {' '}\r\n                                                            <NumberFormat value={fromHistoryOrderInfo[0].total} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                            {/* {fromHistoryOrderInfo[0].total} */}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                            ) : (\r\n                                    <Col md={6}>\r\n                                        <div className=\"card noRecordCol\"> No Record Found</div>\r\n                                    </Col>\r\n                                )}\r\n                            {(toHistoryOrderInfo && toHistoryOrderInfo.length > 0 && toHistoryOrderInfo[0].total != null) ? (\r\n                                <Col md={6}>\r\n                                    <div className=\"card\">\r\n                                        <div className=\"header\">\r\n                                            <h5 className={allHistoryRecord.id == '1' ? 'acntText color2' : 'acntText color2'}>{allHistoryRecord.accountToInfo[0].login}</h5>\r\n                                            <h6 className={'color2'} style={{ fontSize: 10 }}>({allHistoryRecord.accountToInfo[0].alias})</h6>\r\n                                        </div>\r\n                                        <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                            <table className=\"table\">\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <span className=\"symbolStyle\">{toSymbols}</span>\r\n\r\n                                                        {/* <td>{toSymbols}</td> */}\r\n                                                        {/* <td className=\"td-actions text-right\">$ {fromHistoryOrderInfo[0].profit}</td> */}\r\n                                                    </tr>\r\n                                                    <tr><td>Closed P/L </td>\r\n                                                        <td className=\"td-actions text-right\">$ {' '}\r\n                                                            <NumberFormat value={toHistoryOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                            {/* {toHistoryOrderInfo[0].profit} */}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr><td>Commission </td>\r\n                                                        <td className=\"td-actions text-right\">$ {' '}\r\n                                                            {/* {toHistoryOrderInfo[0].commission} */}\r\n                                                            <NumberFormat value={toHistoryOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr><td>Swap </td>\r\n                                                        <td className=\"td-actions text-right\">$ {' '}\r\n                                                            {/* {toHistoryOrderInfo[0].swap} */}\r\n\r\n\r\n                                                            {\r\n                                                                <NumberFormat value={(toHistoryOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                                                                // toOpenOrderInfo[0].swap\r\n                                                            }\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr><td>Total </td>\r\n                                                        <td className=\"td-actions text-right\">$ {' '}\r\n                                                            {/* {toHistoryOrderInfo[0].total} */}\r\n                                                            <NumberFormat value={toHistoryOrderInfo[0].total} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                            ) : (\r\n                                    <Col md={6}>\r\n                                        <div className=\"card noRecordCol\"> No Record Found</div>\r\n                                    </Col>\r\n                                )\r\n\r\n                            }\r\n                            {(sumOfTotal != 0) &&\r\n                                <Row>\r\n                                    <Col md={12} style={{ marginBottom: 20 }}>\r\n                                        <div>\r\n                                            <div className=\"total-box\">\r\n                                                <span className=\"text\">Sum of closed positions</span>\r\n                                                <span className=\"text\" style={{ float: 'right' }}>$ {' '}\r\n                                                    <NumberFormat value={sumOfTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                    {/* {sumOfTotal} */}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            }\r\n\r\n\r\n\r\n\r\n\r\n                        </Fragment>\r\n                    }\r\n                </Row>\r\n                {/* </Collapse> */}\r\n                {allHistoryRecord.commission_acount_id !== 0 && allHistoryRecord.commission_acount_id !== undefined &&\r\n                    <Col md={12}>\r\n\r\n                        <div className=\"card \">\r\n                            <div className=\"header ptheader\">\r\n                                <h4 className=\"text-center\"><b>Commission</b></h4>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12 text-center\">\r\n\r\n                                        <h5 className={allHistoryRecord.id == '1' ? 'acntText color2' : 'acntText acadjust color2'}>{allHistoryRecord.accountCommissionInfo !== undefined && allHistoryRecord.accountCommissionInfo[0].login} <span>({allHistoryRecord.accountCommissionInfo !== undefined && allHistoryRecord.accountCommissionInfo[0].alias})</span></h5>\r\n\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"col-md-12 total text-center\">\r\n\r\n\r\n                                        <tr>\r\n                                            <td className=\"td-actions total_comm text-right\">\r\n\r\n                                                Total : $ {' '}\r\n                                                {/* {toHistoryOrderInfo[0].total} */}\r\n                                                <NumberFormat value={allHistoryRecord.history_info} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                            </td>\r\n                                        </tr>\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>}\r\n            </div>\r\n        </div >\r\n\r\n    );\r\n}\r\n\r\nexport default Closeposition;\r\n","const Data = {\r\n \r\n  tablePage: {\r\n    items: [\r\n      {id: 1,lot:'Buy 10 Lot', closed: 'Closed P/L', commission: 'Commission', swap: 'Swap', total: 'Total', price:'$ 1110',textA: 'Account A'},\r\n      {id: 2, lot:'Sell 10 Lot', closed: 'Closed P/L', commission: 'Commission', swap: 'Swap', total: 'Total', price:'$ 1111', textA: 'Account B'},\r\n    ]\r\n  },\r\n  dashBoardPage: {\r\n    items: [\r\n      {id: 1, title: 'Balance', textA: 'Account A', textB: 'Account B',price:'$ 400'},\r\n      {id: 2, title: 'Equity',textA: 'Account A', textB: 'Account B',price:'$ 400'},\r\n      {id: 3, title: 'Margin', textA: 'Account A', textB: 'Account B',price:'$ 400'},\r\n      {id: 4, title: 'Free Margin', textA: 'Account A', textB: 'Account B',price:'$ 400'},\r\n      {id: 5, title: 'Margin %', textA: 'Account A', textB: 'Account B',price:'$ 400'},\r\n      {id: 5, title: 'Unrealized P/L', textA: 'Account A', textB: 'Account B',price:'$ 400'}\r\n    ],\r\n  }\r\n};\r\n\r\nexport default Data;\r\n","import React, { useState, Fragment } from 'react';\r\nimport { Collapse } from 'reactstrap';\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport Data from './Data';\r\n\r\nexport default function Openposition(props) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const { allOpenRecord, fromOpenOrderInfo, toOpenOrderInfo, } = props;\r\n\r\n\r\n  let fromsum = 0;\r\n  let tosum = 0;\r\n  let fromSymbols = '';\r\n  let toSymbols = '';\r\n  if (allOpenRecord && Object.entries(allOpenRecord).length > 0) {\r\n    fromSymbols = JSON.parse(allOpenRecord.from_symbols);\r\n    fromSymbols = (fromSymbols).map(data => data).join(', ');\r\n    toSymbols = JSON.parse(allOpenRecord.to_symbols);\r\n    toSymbols = (toSymbols).map(data => data).join(', ')\r\n  }\r\n  // if(fromOpenOrderInfo && fromOpenOrderInfo.length>0){\r\n  //   fromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\r\n  // }\r\n  // if(toOpenOrderInfo && toOpenOrderInfo.length>0){\r\n  //   tosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n  // }\r\n  if (fromOpenOrderInfo && fromOpenOrderInfo.length > 0) {\r\n    // if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\r\n    //   fromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\r\n    // }else{\r\n    fromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\r\n    // }\r\n  }\r\n  if (toOpenOrderInfo && toOpenOrderInfo.length > 0) {\r\n    // if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\r\n    //   tosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap);\r\n    // }else{\r\n    tosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n    // }\r\n    // opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n  }\r\n\r\n  let sumOfTotal = tosum + fromsum;\r\n  let noRecord = ((fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total == null) && (toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total == null)) ? true : false;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"openpositions symbol-box terminal-head-box\" style={{ margin: '20px 0px' }}>\r\n        <span className=\"p-text\">Unrealized Profit/Loss</span>\r\n        {/* <span className=\"icon-style\" onClick={toggle}>\r\n          {!isOpen ?\r\n            <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\r\n            :\r\n            <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\r\n          }\r\n        </span> */}\r\n      </div>\r\n\r\n      <div>\r\n        {/* <Collapse isOpen={isOpen}> */}\r\n        <Row>\r\n\r\n\r\n\r\n          {/* {Data.tablePage.items.map((item, index) =>\r\n                  <Col md={6} key={index}>\r\n                    <div className=\"card\">\r\n                      <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\r\n                      </div>\r\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                        <table className=\"table\">\r\n                          <tbody>\r\n                            <tr><td>{item.lot} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.commission} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.swap} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.total} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                )} */}\r\n\r\n          {/* {(allOpenRecord && allOpenRecord.length>0) && allOpenRecord.map((item, index) =>\r\n                    \r\n                    <Col md={6} key={index}>\r\n                            <div className=\"card\">\r\n                            <div className=\"header\">\r\n                              <h5 className={item.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{item.account.login}</h5>\r\n                              <h6 style={{fontSize:10}} className={'colorDarkBlue'}>({item.account.alias})</h6>\r\n                            </div>\r\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>\r\n                                            {item.order_type ===0 ? 'BUY ' : 'SELL ' } \r\n                                            {item.lots} {(item.lots>1) ? 'Lots':'Lot'}\r\n                                        </td>\r\n                                        <td className=\"td-actions text-right\"> {''}</td>\r\n                                    </tr>\r\n                                    <tr><td>Floating P/L </td>\r\n                                        <td className=\"td-actions text-right\">$ {item.profit}</td>\r\n                                    </tr>\r\n                                    <tr><td>Commission </td>\r\n                                        <td className=\"td-actions text-right\">$ {item.commission}</td>\r\n                                    </tr>\r\n                                    <tr><td>Swap </td>\r\n                                        <td className=\"td-actions text-right\">$ {item.swap}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Total </td>\r\n                                        <td className=\"td-actions text-right\">\r\n                                          $ {Math.floor(item.commission + item.swap + item.profit)}\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                </table>\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                        </Col>\r\n                )} */}\r\n          {/* {(allOpenRecord && allOpenRecord.length>0) &&\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <div>\r\n                            <div className=\"total-box\">\r\n                                <span className=\"text\">Sum of open positions</span>\r\n                                <span className=\"text\" style={{ float: 'right' }}>$ {sumOfTotal}</span>\r\n                            </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                } */}\r\n          {(noRecord) ?\r\n            <div className=\"text-center\">\r\n              No Record Found!\r\n                    </div>\r\n            :\r\n            <Fragment>\r\n              {(fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total !== null) ?\r\n\r\n                <Col md={6}>\r\n                  <div className=\"card\">\r\n                    <div className=\"header\">\r\n                      <h5 className={allOpenRecord.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{allOpenRecord.accountFromInfo[0].login}</h5>\r\n                      <h6 style={{ fontSize: 10 }} className={'colorDarkBlue'}>({allOpenRecord.accountFromInfo[0].alias})</h6>\r\n                    </div>\r\n                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                      <table className=\"table\">\r\n                        <tbody>\r\n                          <tr>\r\n                            <span className=\"symbolStyle \">{fromSymbols}</span>\r\n                          </tr>\r\n                          {/* Buy 10 Lot  */}\r\n                          <tr>\r\n                            <td>\r\n                              {fromOpenOrderInfo[0].order_type == 0 ? 'BUY ' : 'SELL '}\r\n\r\n                              {fromOpenOrderInfo[0].lots} {(fromOpenOrderInfo[0].lots > 1) ? 'Lots' : 'Lot'}\r\n                            </td>\r\n                            <td className=\"td-actions text-right\"> {''}</td>\r\n                          </tr>\r\n                          {/* <tr><td>{(fromOpenOrderInfo[0].lots>1) ? 'Lots':'Lot'}</td>\r\n                                        <td className=\"td-actions text-right\">{fromOpenOrderInfo[0].lots}</td>\r\n                                    </tr> */}\r\n                          <tr><td>Floating P/L </td>\r\n                            <td className=\"td-actions text-right\">$ {' '}\r\n                              {/* {fromOpenOrderInfo[0].profit} */}\r\n                              <NumberFormat value={fromOpenOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                            </td>\r\n                          </tr>\r\n                          <tr><td>Commission </td>\r\n                            <td className=\"td-actions text-right\">$ {' '}\r\n                              {/* {fromOpenOrderInfo[0].commission} */}\r\n                              <NumberFormat value={fromOpenOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                            </td>\r\n                          </tr>\r\n                          <tr><td>Swap </td>\r\n                            <td className=\"td-actions text-right\">$ {' '}\r\n                              {/* {fromOpenOrderInfo[0].swap} */}\r\n                              {/* {allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length > 0 ?\r\n                                  <NumberFormat value={allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                  // (allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].swap) \r\n                                  : */}\r\n                              <NumberFormat value={fromOpenOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                              {/* // fromOpenOrderInfo[0].swap */}\r\n                              {/* } */}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>Total </td>\r\n                            <td className=\"td-actions text-right\">$ {' '}\r\n                              {/* $ {Math.floor(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)} */}\r\n                              {/* {allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length > 0 ?\r\n                                  <NumberFormat value={(fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} /> */}\r\n                              {/* // Math.floor(fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap) \r\n                                  // : */}\r\n                              <NumberFormat value={(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                              {/* //  Math.floor(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)\r\n                                // } */}\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n                :\r\n                <Col md={6}>\r\n                  <div className=\"card noRecordCol\"> No Record Found</div>\r\n                </Col>\r\n              }\r\n\r\n              {(toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total !== null) ?\r\n\r\n                <Col md={6}>\r\n                  <div className=\"card\">\r\n                    <div className=\"header\">\r\n                      <h5 className={allOpenRecord.id == '1' ? 'acntText color2' : 'acntText color2'}>{allOpenRecord.accountToInfo[0].login}</h5>\r\n                      <h6 style={{ fontSize: 10 }} className={'color2'}>({allOpenRecord.accountToInfo[0].alias})</h6>\r\n                    </div>\r\n                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                      <table className=\"table\">\r\n                        <tbody>\r\n                          {/* Buy 10 Lot  */}\r\n                          <tr>\r\n                            <span className=\"symbolStyle\">{toSymbols}</span>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                              {toOpenOrderInfo[0].order_type == 0 ? 'BUY ' : 'SELL '}\r\n                              {toOpenOrderInfo[0].lots} {(toOpenOrderInfo[0].lots > 1) ? 'Lots' : 'Lot'}\r\n                            </td>\r\n                            <td className=\"td-actions text-right\"> {''}</td>\r\n                          </tr>\r\n                          {/* <tr><td>{(fromOpenOrderInfo[0].lots>1) ? 'Lots':'Lot'}</td>\r\n                                        <td className=\"td-actions text-right\">{fromOpenOrderInfo[0].lots}</td>\r\n                                    </tr> */}\r\n                          <tr><td>Floating P/L </td>\r\n                            <td className=\"td-actions text-right\">$ {' '}\r\n                              {/* {toOpenOrderInfo[0].profit} */}\r\n                              <NumberFormat value={toOpenOrderInfo[0].profit !== null ? toOpenOrderInfo[0].profit : 0} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                            </td>\r\n                          </tr>\r\n                          <tr><td>Commission </td>\r\n                            <td className=\"td-actions text-right\">$ {' '}\r\n                              {/* {toOpenOrderInfo[0].commission} */}\r\n                              <NumberFormat value={toOpenOrderInfo[0].commission !== null ? toOpenOrderInfo[0].commission : 0} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                            </td>\r\n                          </tr>\r\n                          <tr><td>Swap </td>\r\n                            <td className=\"td-actions text-right\">$ {' '}\r\n                              {/* {toOpenOrderInfo[0].swap} */}\r\n                              {/* {allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length > 0 ?\r\n                                  // (allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].swap) \r\n                                  <NumberFormat value={(allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                  : */}\r\n                              <NumberFormat value={(toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                              {/* // toOpenOrderInfo[0].swap\r\n                                // } */}\r\n                            </td>\r\n\r\n                          </tr>\r\n                          <tr>\r\n                            <td>Total </td>\r\n                            <td className=\"td-actions text-right\"> $ {' '}\r\n                              {/* {allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length > 0 ?\r\n                                  //  Math.floor(toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap)\r\n                                  <NumberFormat value={(toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                  : */}\r\n                              <NumberFormat value={(toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                              {/* \r\n                                  //  Math.floor(toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit)\r\n                                } */}\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n                :\r\n                <Col md={6}>\r\n                  <div className=\"card noRecordCol\"> No Record Found</div>\r\n                </Col>\r\n              }\r\n              {\r\n                sumOfTotal != 0 &&\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <div>\r\n                      <div className=\"total-box\">\r\n                        <span className=\"text\">Sum of open positions</span>\r\n                        <span className=\"text\" style={{ float: 'right' }}>$ {' '}\r\n                          <NumberFormat value={sumOfTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                          {/* {sumOfTotal} */}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              }\r\n            </Fragment>\r\n          }\r\n        </Row>\r\n        {/* </Collapse> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import config from './constant/config';\r\n\r\nconst axios = require('axios');\r\n\r\n\r\nconst myInitObject = {}\r\nexport default myInitObject;\r\n\r\n\r\nexport const api = () => {\r\n    \r\n    // Object.keys(myInitObject).forEach(key=> myInitObject[key]=null)\r\n    // console.log(myInitObject, '-----------------+++++');\r\n    axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.fetchAllHistoryTrade = response.data\r\n                myInitObject.responsHT = true\r\n            }\r\n        })\r\n\r\n    axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.fetchAllOpenTrade = response.data\r\n                myInitObject.responsOT = true\r\n            }\r\n        })\r\n\r\n    axios.get(config.baseurl + '/accounts/fetchAllAccounts')\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.fetchAllAccounts = response.data\r\n                myInitObject.responsAC = true\r\n            }\r\n        });\r\n\r\n    axios.get(config.baseurl + '/filter/fetchActivefilterdata')\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.fetchActivefilterdata = response.data\r\n                myInitObject.responsAF = true\r\n            }\r\n        });\r\n\r\n    axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.fetchLastUpdatedTime = response.data\r\n                myInitObject.responsLUT = true\r\n            }\r\n        });\r\n\r\n    axios.get(config.baseurl + '/accounts/fetchStatusData')\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.fetchStatusData = response.data\r\n                myInitObject.responsSD = true\r\n            }\r\n        });\r\n\r\n    axios.get(config.baseurl + '/profilepositions/calculatingOpenTrade')\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.calculatingOpenTrade = response.data\r\n                myInitObject.responsCOT = true\r\n\r\n                axios.get(config.baseurl + '/profilepositions/calculatingHistoryTrade')\r\n                    .then(function (response) {\r\n                        if (response.status == 200) {\r\n                            myInitObject.calculatingHistoryTrade = response.data\r\n                            myInitObject.responsCHT = true\r\n\r\n                            axios.get(config.baseurl + '/profilepositions/calculatingCommission')\r\n                                .then(function (response) {\r\n                                    if (response.status == 200) {\r\n                                        myInitObject.calculatingCommission = response.data\r\n                                        myInitObject.responsCC = true\r\n                                    }\r\n                                })\r\n                        }\r\n                    })\r\n            }\r\n        })\r\n    axios.get(config.baseurl + '/accounts/fetchAllSymbol')\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.fetchAllSymbol = response.data\r\n                myInitObject.responsAS = true\r\n            }\r\n        })\r\n    axios.get(config.baseurl + '/filter/fetchdailyswaps')\r\n    .then(function (response) {\r\n        if (response.status == 200) {\r\n            myInitObject.fetchdailyswaps = response.data\r\n            myInitObject.responsDS = true\r\n        }\r\n    })\r\n    axios.get(config.baseurl + '/users/allAccounts?page=1')\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.usersAllAccounts = response.data\r\n                myInitObject.responsAAC = true\r\n            }\r\n        })\r\n\r\n    axios.get(config.baseurl + '/filter/fetchfilterdata?page=1')\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.fetchfilterdata = response.data\r\n                myInitObject.responsFF = true\r\n            }\r\n        })\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\r\n// import SweetAlert from 'react-bootstrap-sweetalert';\r\nimport swal from 'sweetalert';\r\nimport config from '../constant/config.js';\r\nconst axios = require('axios');\r\n\r\nlet intervalSet;\r\nlet timerWaitInterval;\r\nlet timerWait = 100;\r\nclass Innerlogin extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loginForm: false,\r\n            setShow: false,\r\n            show: true,\r\n            login: '',\r\n            password: '',\r\n            broker: '',\r\n            alias: '',\r\n            alert: null,\r\n            persons: [],\r\n            shwPwd: false,\r\n            shwPwd: false,\r\n            shwLogin: false,\r\n            shwbroker: false,\r\n            accountlist: [],\r\n            editForm: false,\r\n            detailForm: false,\r\n            editData: [],\r\n            edituser: '',\r\n            editserver: '',\r\n            editalias: '',\r\n            editstatus: '',\r\n            id: '',\r\n            // tryAgainConnection: false,\r\n            currentAddLogin: null,\r\n            currentAddBroker: null,\r\n            currentAddAlias: null,\r\n            timerShow: false,\r\n            closebtn: true\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onUpdate = this.onUpdate.bind(this);\r\n\r\n    }\r\n    // delete alert\r\n    // deleteThisGoal() {\r\n    //     const getAlert = () => (\r\n    //         <SweetAlert\r\n    //             success\r\n    //             title=\"Woot!\"\r\n    //             onConfirm={() => this.hideAlert()}\r\n    //         >\r\n    //             Hello world!\r\n    //       </SweetAlert>\r\n    //     );\r\n\r\n    //     this.setState({\r\n    //         alert: getAlert()\r\n    //     });\r\n    // }\r\n    fectheAllAccount() {\r\n        let self = this;\r\n        axios.get(config.baseurl + '/users/allAccounts?page=1')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.setState({ accountlist: response.data.rows })\r\n                }\r\n            })\r\n        // console.log(response.status,\"accountlist\");\r\n    }\r\n    onChange(e) {\r\n\r\n        this.setState({ error: '' })\r\n        if (e.target.name === 'login') {\r\n            const re = /^[0-9\\b]+$/;\r\n            if (e.target.value === '' || re.test(e.target.value)) {\r\n                this.setState({ [e.target.name]: e.target.value })\r\n            }\r\n            else if (e.target.value !== re) {\r\n                this.setState({ error: 'alphabet' })\r\n            }\r\n        }\r\n        else {\r\n\r\n            this.setState({ [e.target.name]: e.target.value.trim() })\r\n        }\r\n\r\n    }\r\n\r\n    checkUserConnected = (login, broker) => {\r\n        let self = this;\r\n        axios.post(config.baseurl + '/users/checkUserConnected', { login: login, broker: broker })\r\n            .then(function (response) {\r\n\r\n                if (response.status == 200) {\r\n                    if (response.data.connected) {\r\n                        self.setState({ currentAddLogin: null, currentAddBroker: null, currentAddAlias: null });\r\n                        clearInterval(intervalSet);\r\n                        clearInterval(timerWaitInterval);\r\n                        self.setState({ timerShow: false });\r\n\r\n                        timerWait = 100\r\n                        // self.setState({ tryAgainConnection: false });\r\n                        self.setState({ loginForm: false })\r\n                        self.handleClose();\r\n                        self.fectheAllAccount()\r\n                        // swal({\r\n                        //     text: \"Connected\",\r\n                        //     timer: 2000,\r\n                        //     button: false\r\n                        // })\r\n                    }\r\n                } else {\r\n\r\n                }\r\n            })\r\n    }\r\n\r\n    setIntervalCustom = () => {\r\n        let self = this;\r\n        var name = \"Authorization Process Failed\";\r\n        var content = document.createElement('div');\r\n        content.innerHTML = ' <strong>' + name + '</strong>';\r\n\r\n\r\n        timerWaitInterval = setInterval(function () {\r\n            timerWait--;\r\n            if (timerWait <= 0) {\r\n                self.setState({ currentAddLogin: null, currentAddBroker: null, currentAddAlias: null });\r\n                clearInterval(intervalSet);\r\n                clearInterval(timerWaitInterval);\r\n                self.setState({ timerShow: false });\r\n                self.setState({ loginForm: false })\r\n                self.setState({ closebtn: true })\r\n                timerWait = 100\r\n                swal({\r\n\r\n\r\n                    content: content,\r\n                    timer: 2000,\r\n                    button: false\r\n\r\n                })\r\n            }\r\n\r\n            else {\r\n                self.setState({ timerShow: true });\r\n\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const userdetail = {\r\n            login: this.state.login,\r\n            password: this.state.password,\r\n            broker: this.state.broker,\r\n            alias: this.state.alias\r\n\r\n\r\n        }\r\n        if (this.state.login == '') {\r\n            this.setState({ error: 'login' })\r\n        }\r\n        else if (this.state.password == '') {\r\n            this.setState({ error: 'password' })\r\n        }\r\n        else if (this.state.broker == '') {\r\n            this.setState({ error: 'broker' })\r\n        } else {\r\n            this.setState({ error: '' })\r\n        }\r\n        if (this.state.login !== '' && this.state.password !== '' && this.state.broker !== '') {\r\n\r\n            // {\r\n            //     swal({\r\n            //         text: \"User Already Connected\",\r\n            //         timer: 2000,\r\n            //         button: false\r\n            //     })\r\n            // }\r\n            let self = this;\r\n            self.setState({ closebtn: false })\r\n            axios.post(config.baseurl + '/users/addUser', userdetail)\r\n                .then(function (response) {\r\n                    if (response.data.status === true) {\r\n                        self.setIntervalCustom();\r\n                        self.fectheAllAccount();\r\n                        self.setState({ currentAddLogin: userdetail.login, currentAddBroker: userdetail.broker, currentAddAlias: userdetail.alias });\r\n                        intervalSet = setInterval(function () {\r\n                            self.checkUserConnected(userdetail.login, userdetail.broker)\r\n                        }, 5000);\r\n\r\n                    }\r\n                    if (response.data.status == 202) {\r\n                        swal({\r\n                            text: \"User doesn't exist\",\r\n                            timer: 2000,\r\n                            button: false\r\n                        })\r\n\r\n                    }\r\n                    if (response.data.status == '500') {\r\n                        swal({\r\n                            text: \"User Already Connected!\",\r\n                            timer: 2000,\r\n                            button: false\r\n                        })\r\n                        self.setState({ closebtn: true })\r\n\r\n\r\n                    }\r\n                    else if (response.status == 201) {\r\n                        swal({\r\n                            title: \"Done!\",\r\n                            text: response.data,\r\n                            // icon: \"{response.status == 200 ? 'warning ':'success'}\",\r\n                            timer: 2000,\r\n                            button: false\r\n                        })\r\n                    }\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    self.handleClose();\r\n                });\r\n\r\n\r\n\r\n            /////////////////// redirect to dashboard\r\n            // login(user).then(res => {\r\n            //     if (res) {\r\n            //         this.props.history.push(`\\profile`)\r\n            //     }\r\n            // })\r\n        }\r\n    }\r\n    onUpdate(e) {\r\n        e.preventDefault();\r\n        const userdetail = {\r\n            id: this.state.id,\r\n            user: this.state.edituser,\r\n            broker: this.state.editserver,\r\n            alias: this.state.editalias\r\n        }\r\n        let self = this;\r\n        axios.post(config.baseurl + '/users/updateuser', userdetail)\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    // self.setState({ accountlist: response.data.rows })\r\n                    self.fectheAllAccount();\r\n                    self.handleCloseEdit();\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n            });\r\n    }\r\n    // checkValidUser = ()=> {\r\n    //     console.log(this.state,'loginnnnnnnnnnnnnnnnnnnnnnnn')\r\n    //     const userdetail = {\r\n    //         login: this.state.login,\r\n    //         password: this.state.password,\r\n    //         broker: this.state.broker,\r\n    //         alias: this.state.alias\r\n    //     }\r\n    //     axios.get(config.baseurl + '/accounts/matchUser',userdetail)\r\n    //     .then(function (response) {\r\n\r\n    //         if (response.status == 200) {\r\n    //             // alert(response.data)\r\n    //             swal({\r\n    //                 title: \"Done!\",\r\n    //                 text: response.data,\r\n    //                 // icon: \"{response.status == 200 ? 'warning ':'success'}\",\r\n    //                 timer: 2000,\r\n    //                 button: false\r\n    //             })\r\n\r\n    //         }\r\n    //         // console.log(response);\r\n    //     })\r\n    //     .catch(function (error) {\r\n    //         console.log(error);\r\n    //     });\r\n    // }\r\n    toogle = () => {\r\n        this.setState({ loginForm: !this.state.loginForm, })\r\n        this.setState({ login: '', password: '', broker: '', alias: '' })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ loginForm: false })\r\n\r\n    }\r\n    handleCloseEdit = () => {\r\n        this.setState({ editForm: false })\r\n    }\r\n    handleCloseDetail = () => {\r\n        this.setState({ detailForm: false })\r\n    }\r\n    handleShow = () => {\r\n        this.setState({ setShow: true })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fectheAllAccount();\r\n\r\n    }\r\n    createTr = () => {\r\n        return this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => {\r\n            return (\r\n                <tr key={index}>\r\n                    <th scope=\"row\">{index + 1}</th>\r\n                    <td>{item.login}</td>\r\n                    <td>{item.broker}</td>\r\n                    <td>{item.alias}</td>\r\n                    <td style={{ fontWeight: 600 }}>{item.launched == 1 ? 'Connected' : 'Disconnected'}</td>\r\n                    <td>\r\n                        <a href=\"\" onClick={(e) => this.viewFilter(e, item)}><i className=\"fa fa-eye facolor\" aria-hidden=\"true\"></i></a>\r\n                        <a href=\"\" onClick={(e) => this.editFilter(e, item)}><i className=\"fa fa-pencil-square-o facolor\" aria-hidden=\"true\"></i></a>\r\n                        {/* <a href=\"\" onClick={(e)=> this.deleteFilter(e,item)}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></a> */}\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n    editFilter(e, data) {\r\n        e.preventDefault();\r\n        this.setState({ editForm: true, editData: data, id: data.id, edituser: data.login, editserver: data.broker, editalias: data.alias })\r\n    }\r\n    editAlias(e) {\r\n        this.setState({ editalias: e.target.value })\r\n    }\r\n    viewFilter(e, data) {\r\n        e.preventDefault();\r\n        this.setState({ detailForm: true, edituser: data.login, editserver: data.broker, editalias: data.alias, editstatus: data.status })\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"content\">\r\n                <Grid fluid>\r\n                    <Row>\r\n                        <Col md={12} sm={6}>\r\n                            <div className=\"terminal-box\">\r\n                                <span className=\"terminal-text\">Terminal Accounts</span>\r\n                                {/* <div style={{ padding: '20px' }}>\r\n                                    <a\r\n                                        onClick={() => this.deleteThisGoal()}\r\n                                        className='btn btn-danger'\r\n                                    >\r\n                                        <i className=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete Goal\r\n                                     </a>\r\n                                    {this.state.alert}\r\n                                </div> */}\r\n                            </div>\r\n                            <button className=\"pull-right add-button\" onClick={this.toogle}>Add New</button>\r\n\r\n                            {this.state.loginForm &&\r\n                                <Modal show={this.state.show} onHide={this.state.closebtn ? this.handleClose : () => console.log('error')} >\r\n                                    {/* <Modal.Header closeButton>\r\n                                        <Modal.Title>Log In</Modal.Title>\r\n                                    </Modal.Header> */}\r\n                                    <Modal.Body>\r\n                                        <div className=\"form-box\">\r\n                                            <Modal.Header closeButton={this.state.closebtn ? true : false}>\r\n                                                <Modal.Title className=\"text-center\"><b>Log In</b></Modal.Title>\r\n                                            </Modal.Header>\r\n                                            <form style={{ marginTop: '20px' }} onSubmit={this.onSubmit}>\r\n                                                <label >User Name</label>\r\n                                                <input type='text'\r\n                                                    className=\"Itext labelSet \" placeholder=\"Enter Username\" name=\"login\" value={this.state.login} onChange={this.onChange} disabled={this.state.currentAddLogin ? true : false}\r\n                                                // onKeyUp={this.checkValidUser}\r\n                                                ></input>\r\n\r\n\r\n                                                {(this.state.error == \"login\") &&\r\n                                                    <span style={{ color: 'red', fontSize: '13px' }}>Please enter Username </span>\r\n                                                }\r\n\r\n                                                {(this.state.error == \"alphabet\") &&\r\n                                                    <span style={{ color: 'red', fontSize: '13px' }}>\"Invalid format. login should contain only digits.\"</span>\r\n                                                }\r\n                                                <br></br>\r\n                                                <label className=\"labeAdjust\">Password</label>\r\n                                                <input className=\"Itext labelSet\" placeholder=\"Password\" name=\"password\" type=\"password\" value={this.state.password} onChange={this.onChange} disabled={this.state.currentAddLogin ? true : false}></input>\r\n                                                {(this.state.error == \"password\") &&\r\n                                                    <span style={{ color: 'red', fontSize: '13px' }}>Please enter Password </span>\r\n                                                }\r\n                                                <br></br>\r\n                                                <label className=\"labeAdjust\">Server</label>\r\n                                                <input className=\"Itext labelSet\" name=\"broker\" placeholder=\"Server\" value={this.state.broker} onChange={this.onChange} disabled={this.state.currentAddBroker ? true : false}></input>\r\n                                                {(this.state.error == \"broker\") &&\r\n                                                    <span style={{ color: 'red', fontSize: '13px' }}>Please enter Server </span>\r\n                                                }\r\n                                                <br></br>\r\n                                                <label className=\"labeAdjust\">Alias</label>\r\n                                                <input className=\"Itext labelSet\" placeholder=\"Alias\" value={this.state.alias} onChange={this.onChange} name=\"alias\" disabled={this.state.currentAddAlias ? true : false}></input>\r\n                                                {this.state.timerShow &&\r\n                                                    <p>\r\n                                                        Connecting to server... {timerWait} seconds remains\r\n                                                </p>\r\n                                                }\r\n                                                <div className=\" topadjust clearfix\">\r\n                                                    {/* {this.state.tryAgainConnection === false ? */}\r\n                                                    {/* ( */}\r\n                                                    {this.state.timerShow == false &&\r\n\r\n                                                        <button type=\"submit\" className=\"save\" className={!this.state.login || !this.state.password || !this.state.broker ? \"loginButton\" : \"loginButton save2 save1\"}>Submit</button>}\r\n                                                    {/* ) */}\r\n                                                    {/* //     :\r\n                                                    //     (this.state.timerShow == false && <div ></div>)\r\n                                                    // } */}\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n\r\n                                    </Modal.Body>\r\n                                    {/* <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                                            Close\r\n                                  </Button>\r\n                                        \r\n                                    </Modal.Footer> */}\r\n                                </Modal>\r\n\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                    <div style={{ background: '#ffffff' }}>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                <div style={{ padding: '10px' }}>\r\n                                    <table className=\"table table-striped\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th scope=\"col\">Sr.No.</th>\r\n                                                <th scope=\"col\">User Name</th>\r\n                                                <th scope=\"col\">Server</th>\r\n                                                <th scope=\"col\">Alias</th>\r\n                                                <th scope=\"col\">Status</th>\r\n                                                <th scope=\"col\">Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {/* {this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => { */}\r\n                                            {/* // console.log(\"hhhhhhhhhhh\") */}\r\n                                            {this.createTr()}\r\n                                            {/* })} */}\r\n                                            {/* <tr>\r\n                                                <th scope=\"row\">2</th>\r\n                                                <td>Jacob</td>\r\n                                                <td>Thornton</td>\r\n                                                <td>5.1.2.9</td>\r\n                                                <td>Connected</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th scope=\"row\">3</th>\r\n                                                <td>Larry</td>\r\n                                                <td>the Bird</td>\r\n                                                <td>ab@123</td>\r\n                                                <td>Connected</td>\r\n                                            </tr> */}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </Col>\r\n                            <div className=\"centerbtn\">\r\n                            </div>\r\n\r\n                        </Row>\r\n                    </div>\r\n\r\n                </Grid>\r\n\r\n                {this.state.editForm &&\r\n                    <Modal show={this.state.show} onHide={this.handleCloseEdit}>\r\n                        {/* <Modal.Header closeButton>\r\n                                        <Modal.Title>Log In</Modal.Title>\r\n                                    </Modal.Header> */}\r\n                        <Modal.Body>\r\n                            <div className=\"form-box\">\r\n                                <Modal.Header closeButton>\r\n                                    <Modal.Title className=\"text-center\"><b>Edit</b></Modal.Title>\r\n                                </Modal.Header>\r\n                                <form style={{ marginTop: '20px' }} onSubmit={this.onUpdate}>\r\n                                    <label>USER</label>\r\n                                    <input className=\"Itext\" disabled name=\"broker\" placeholder=\"Server\" value={this.state.edituser} ></input>\r\n\r\n                                    <label>Server</label>\r\n                                    <input className=\"Itext\" disabled name=\"broker\" placeholder=\"Server\" value={this.state.editserver} ></input>\r\n                                    <label>Alias</label>\r\n                                    <input className=\"Itext\" placeholder=\"Alias\" value={this.state.editalias} name=\"alias\" onChange={(e) => this.editAlias(e)}></input>\r\n                                    <div className=\"clearfix\">\r\n                                        <button type=\"submit\" className=\"save\">Update</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n\r\n                        </Modal.Body>\r\n                        {/* <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                                            Close\r\n                                  </Button>\r\n                                        \r\n                                    </Modal.Footer> */}\r\n                    </Modal>\r\n\r\n                }\r\n\r\n                {this.state.detailForm &&\r\n                    <Modal show={this.state.show} onHide={this.handleCloseDetail}>\r\n                        {/* <Modal.Header closeButton>\r\n                                        <Modal.Title>Log In</Modal.Title>\r\n                                    </Modal.Header> */}\r\n                        <Modal.Body>\r\n                            <div className=\"form-box\">\r\n                                <Modal.Header closeButton>\r\n                                    <Modal.Title className=\"text-center\"><b>Details</b></Modal.Title>\r\n                                </Modal.Header>\r\n                                <div className=\"detail_div\">\r\n                                    <table>\r\n                                        <tr>\r\n                                            <td><label>User Name</label></td>\r\n                                            <td><label>{this.state.edituser}</label></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><label>Server</label></td>\r\n                                            <td><label>{this.state.editserver}</label></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><label>Alias</label></td>\r\n                                            <td><label>{this.state.editalias}</label></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><label>Status</label></td>\r\n                                            <td><label>{this.state.editstatus == 1 ? 'Connected' : 'Disconnected'}</label></td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </Modal.Body>\r\n                    </Modal>\r\n\r\n                }\r\n\r\n\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Innerlogin;","import React, { Component } from 'react';\r\nimport { Collapse } from 'reactstrap';\r\nimport Select from 'react-select';\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\n// import Data from './Data';\r\nimport NumberFormat from 'react-number-format';\r\nimport Closeposition from 'views/Closeposition';\r\nimport Openposition from 'views/Openposition';\r\n\r\n// import config from '../constant/config.js';\r\nimport config from '../constant/config.js';\r\nimport myInitObject from '../api'\r\nconst axios = require('axios');\r\n\r\n// import Card from \"components/Card/Card.jsx\";\r\n// import { thArray, tdArray } from \"variables/Variables.jsx\";\r\n\r\nclass TableList extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      isOpen2: false,\r\n      allSymbols: [],\r\n      selectedOption: null,\r\n      allHistoryRecord: [],\r\n      allOpenRecord: [],\r\n      fromHistoryOrderInfo: [],\r\n      toHistoryOrderInfo: [],\r\n      commissionHistoryOrderInfo: [],\r\n      fromOpenOrderInfo: [],\r\n      toOpenOrderInfo: [],\r\n      filterlist: [],\r\n      allSymbols: [],\r\n      symbolsObj: [],\r\n      activeProfileName: ''\r\n    }\r\n\r\n  }\r\n  // toggle = () => {\r\n  //   this.setState({ isOpen: !this.state.isOpen })\r\n  // }\r\n  // componentWillMount() {\r\n  //   let self = this;\r\n  // axios.get(config.baseurl + '/accounts/fetchAllSymbol')\r\n  // .then(function (response) {\r\n  //   if (response.status == 200) {\r\n  //     self.setState({ allSymbols: response.data.rows })\r\n  //   }\r\n  // })\r\n\r\n  // axios.get(config.baseurl + '/filter/fetchfilterdata')\r\n  // .then(function (response) {\r\n  //   if (response.status == 200) {\r\n  //     self.setState({ filterlist: response.data.rows })\r\n  //   }\r\n  // })\r\n\r\n  // axios.get(config.baseurl + '/filter/fetchActivefilterdata')\r\n  // .then(function (response) {\r\n  //   if (response.status == 200) {\r\n  //     if(response.data.rows && response.data.rows.length>0){\r\n  //       // let symbolsObj = (response.data.rows[0].symbols).map(data => { return ({value:data, label:data})})\r\n  //         self.setState({ filterlist: response.data.rows, allSymbols: response.data.rows[0].symbols, \r\n  //         // selectedOption:symbolsObj\r\n  //        })\r\n  //     }\r\n  //   }\r\n  // });\r\n  // }\r\n\r\n  componentDidMount() {\r\n    setInterval(() => {\r\n      if((myInitObject.responsHT &&\r\n        myInitObject.responsOT &&\r\n        myInitObject.responsAC ) === undefined){\r\n        // console.log('no data');\r\n      }else{ \r\n        this.setState({\r\n          //history trade\r\n          allHistoryRecord: myInitObject.fetchAllHistoryTrade.rows,\r\n          fromHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.fromHistoryOrderInfo,\r\n          toHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.toHistoryOrderInfo,\r\n          //open trade\r\n          allOpenRecord: myInitObject.fetchAllOpenTrade.rows,\r\n          fromOpenOrderInfo: myInitObject.fetchAllOpenTrade.fromOpenOrderInfo,\r\n          toOpenOrderInfo: myInitObject.fetchAllOpenTrade.toOpenOrderInfo,\r\n          //active filter data\r\n          filterlist: myInitObject.fetchActivefilterdata.rows,\r\n          activeProfileName: myInitObject.fetchActivefilterdata.rows[0].profile_name,\r\n        },() =>{\r\n          this.setState({ errorMassege:this.state.filterlist.length == 0 ?  true : false,})\r\n        })\r\n      }}, 1000)\r\n    // let self = this;\r\n    // axios.get(config.baseurl + '/filter/fetchActivefilterdata')\r\n    //   .then(function (response) {\r\n    //     if (response.status == 200) {\r\n    //       console.log(response, \"respp----------------->\")\r\n    //       self.setState({ filterlist: response.data.rows, })\r\n    //       if (self.state.filterlist.length == 0) {\r\n    //         self.setState({ errorMassege: true, })\r\n    //       }\r\n    //       else {\r\n    //         self.setState({ activeProfileName: response.data.rows[0].profile_name })\r\n    //       }\r\n    //     }\r\n    //   });\r\n    // axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\r\n    //   .then(function (response) {\r\n    //     // console.log(response.data, 'response.data his')\r\n    //     if (response.status == 200) {\r\n    //       // self.setState({ allHistoryRecord: response.data.rows })\r\n    //       self.setState({\r\n    //         allHistoryRecord: response.data.rows,\r\n    //         fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,\r\n    //         toHistoryOrderInfo: response.data.toHistoryOrderInfo,\r\n    //         commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\r\n    //       })\r\n    //     }\r\n    //   })\r\n    // // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\r\n    // // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\r\n    // axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\r\n    //   .then(function (response) {\r\n    //     if (response.status == 200) {\r\n\r\n    //       // self.setState({ allOpenRecord: response.data.rows })\r\n    //       self.setState({\r\n    //         allOpenRecord: response.data.rows,\r\n    //         fromOpenOrderInfo: response.data.fromOpenOrderInfo,\r\n    //         toOpenOrderInfo: response.data.toOpenOrderInfo\r\n    //       })\r\n    //     }\r\n    //   })\r\n  }\r\n\r\n\r\n\r\n\r\n  fetchDataAccordingSymbols = (symbol) => {\r\n    let self = this;\r\n    let { startdateFrom, startdateTo, enddateFrom, enddateTo, to_account_id, from_account_id } = this.state.filterlist[0];\r\n\r\n    let postData = { \"to_account_id\": to_account_id, \"from_account_id\": from_account_id, \"startdateFrom\": startdateFrom, \"startdateTo\": startdateTo, \"enddateFrom\": enddateFrom, \"enddateTo\": enddateTo, \"symbol\": symbol }\r\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolHistory', {'symbol':symbol})\r\n\r\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolHistory', postData)\r\n    axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\r\n      .then(function (response) {\r\n        // console.log(response.data, 'response.data his')\r\n        if (response.status == 200) {\r\n          // self.setState({ allHistoryRecord: response.data.rows })\r\n          self.setState({\r\n            allHistoryRecord: response.data.rows,\r\n            fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,\r\n            toHistoryOrderInfo: response.data.toHistoryOrderInfo,\r\n            commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\r\n\r\n          })\r\n        }\r\n      })\r\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\r\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\r\n    axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          // console.log(response.data, 'response.data open')\r\n\r\n          // self.setState({ allOpenRecord: response.data.rows })\r\n          self.setState({\r\n            allOpenRecord: response.data.rows,\r\n            fromOpenOrderInfo: response.data.fromOpenOrderInfo,\r\n            toOpenOrderInfo: response.data.toOpenOrderInfo\r\n          })\r\n        }\r\n      })\r\n  }\r\n\r\n  handleChange = selectedOption => {\r\n    this.setState({ selectedOption });\r\n    this.fetchDataAccordingSymbols(selectedOption.value);\r\n  };\r\n\r\n  renderSymbols = () => {\r\n    const { selectedOption, allSymbols } = this.state;\r\n    // let options = allSymbols.map(data => {\r\n    //   return {value:data.name, label:data.name};\r\n    // })\r\n    let options = allSymbols.map(data => {\r\n      return { value: data, label: data };\r\n    });\r\n\r\n    return (\r\n      <Select\r\n        placeholder=\"Select Symbol...\"\r\n        className=\"S-text\"\r\n        // isMulti\r\n        value={selectedOption}\r\n        onChange={this.handleChange}\r\n        options={options}\r\n      />\r\n    )\r\n  }\r\n  // toggle2 = () => {\r\n  //   this.setState({ isOpen2: !this.state.isOpen2 })\r\n  // };\r\n  render() {\r\n    const { activeProfileName, allHistoryRecord, allOpenRecord, selectedOption, toOpenOrderInfo, fromOpenOrderInfo, fromHistoryOrderInfo, commissionHistoryOrderInfo, toHistoryOrderInfo } = this.state;\r\n    //   const sumOfOpenTotal = allOpenRecord.reduce((current, data) => {\r\n    //     return (Math.floor(data.commission + data.swap + data.profit+ current));\r\n    // }, 0);\r\n\r\n    //   const sumOfHistoryTotal = allHistoryRecord.reduce((current, data) => {\r\n    //     return (data.profit + current);\r\n    // }, 0);\r\n    let uniqueSymbols = \"\";\r\n    if (allOpenRecord && Object.entries(allOpenRecord).length > 0) {\r\n      let fromSymbols = JSON.parse(allOpenRecord.from_symbols);\r\n      // fromSymbols = (fromSymbols).map(data => data).join(', ');\r\n      let toSymbols = JSON.parse(allOpenRecord.to_symbols);\r\n      let combineSymbols = fromSymbols.concat(toSymbols);\r\n      uniqueSymbols = combineSymbols.filter((item, i, ar) => ar.indexOf(item) === i);\r\n      uniqueSymbols = (uniqueSymbols).map(data => data).join(', ')\r\n    }\r\n    let fromsum = 0;\r\n    let tosum = 0;\r\n    // if(fromHistoryOrderInfo && commissionHistoryOrderInfo && fromHistoryOrderInfo.length>0){\r\n    if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\r\n      fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\r\n    }\r\n\r\n    if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\r\n      tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\r\n    }\r\n\r\n    let sumOfHistoryTotal = tosum + fromsum;\r\n\r\n    let openfromsum = 0;\r\n    let opentosum = 0;\r\n    if ((fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total != null)) {\r\n      // if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\r\n      //   openfromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\r\n      // }else{\r\n      openfromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\r\n\r\n    }\r\n    if ((toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total != null)) {\r\n      // if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\r\n      //   opentosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit+ toOpenOrderInfo[0].swap);\r\n      // }\r\n\r\n      // else{\r\n      //   opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n      // }\r\n      opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n    }\r\n\r\n    let sumOfOpenTotal = opentosum + openfromsum;\r\n\r\n    //   console.log(opentosum, 'opentosum')\r\n    //   console.log(openfromsum, 'openfromsum')\r\n    //  console.log(sumOfHistoryTotal, \"sumOfHistoryTotal------\");\r\n    //  console.log(sumOfOpenTotal, \"sumOfOpenTotal-----\");\r\n    //  console.log(allOpenRecord, 'allOpenRecord')\r\n\r\n\r\n\r\n    return (\r\n      <div>\r\n        <div class=\"shadoremove\">\r\n          {/* <div className=\"symbol-box\"> */}\r\n          {/* <span className=\"S-text\">EURUSD</span> */}\r\n          {/* <div style={{ borderBottom: '2px solid grey' }}>\r\n            {this.renderSymbols()}\r\n\r\n          </div> */}\r\n          {/* <div style={{ margin: '20px 0px' }}>\r\n            <span className=\"p-text\">Open Positions</span>\r\n            <span className=\"icon-style\" onClick={this.toggle}>\r\n              <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\r\n            </span>\r\n          </div>\r\n          <div>\r\n\r\n            <Collapse isOpen={this.state.isOpen}>\r\n              <Row>\r\n                {Data.tablePage.items.map((item, index) =>\r\n                  <Col md={6} key={index}>\r\n                    <div className=\"card\">\r\n                      <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\r\n                      </div>\r\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                        <table className=\"table\">\r\n                          <tbody>\r\n                            <tr><td>{item.lot} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.commission} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.swap} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.total} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                )}\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <div>\r\n                      <div className=\"total-box\">\r\n                        <span className=\"text\">Sum of open position</span>\r\n                        <span className=\"text\" style={{ float: 'right' }}>$111111</span>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Row>\r\n            </Collapse>\r\n          </div> */}\r\n          {/* closed position */}\r\n\r\n          <Openposition\r\n            allOpenRecord={allOpenRecord}\r\n            toOpenOrderInfo={toOpenOrderInfo}\r\n            fromOpenOrderInfo={fromOpenOrderInfo}\r\n          />\r\n          <Closeposition\r\n            allHistoryRecord={allHistoryRecord}\r\n            fromHistoryOrderInfo={fromHistoryOrderInfo}\r\n            commissionHistoryOrderInfo={commissionHistoryOrderInfo}\r\n            toHistoryOrderInfo={toHistoryOrderInfo}\r\n          />\r\n          {/* <Row>\r\n\r\n            <Col md={12} sm={6}>\r\n              <div className={sumOfHistoryTotal + sumOfOpenTotal >= 0 ? \"summary-box\" : \"summary-box-red\"}>\r\n\r\n\r\n                {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\r\n          {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\r\n                <span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\r\n\r\n          {/* <Col md={12} sm={12}>\r\n                  <div className=\"summary-text text-center\" style={{ fontWeight: 600, color: \"#797979\" }}>Unrealized & Realized P/L ({activeProfileName}) {allHistoryRecord.history_info !== 0 && (<span> + Commission</span>)} </div>\r\n                </Col>\r\n                <Col md={12} sm={12}>\r\n                  <div className=\"text-center\" style={{ fontWeight: 'bold', fontSize: \"18px\" }}>$ {' '}\r\n                    <NumberFormat value={allHistoryRecord.history_info !== undefined ? sumOfHistoryTotal + sumOfOpenTotal + allHistoryRecord.history_info : sumOfHistoryTotal + sumOfOpenTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} /> */}\r\n\r\n\r\n          {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\r\n\r\n          {/* </div>\r\n                </Col>\r\n\r\n                <div className=\"clearfix\"></div>\r\n              </div>\r\n            </Col>\r\n          </Row> */}\r\n          {/* </div> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default TableList;\r\n\r\n","import React, { Component } from \"react\";\r\n// import ChartistGraph from \"react-chartist\";\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\nimport TableList from '../views/TableList';\r\n// import { Card } from \"components/Card/Card.jsx\";\r\n// import { StatsCard } from \"components/StatsCard/StatsCard.jsx\";\r\n// import { Tasks } from \"components/Tasks/Tasks.jsx\";\r\nimport NumberFormat from 'react-number-format';\r\nimport ReactLoading from \"react-loading\";\r\nimport Loader from 'react-loader-spinner'\r\n\r\nimport Data from './Data';\r\nimport Moment from 'react-moment';\r\nimport config from '../constant/config.js';\r\n// import {DatatablePage} from './DatatablePage';\r\n\r\nimport {api} from '../api'\r\nimport myInitObject from '../api'\r\nconst axios = require('axios');\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      details: [],\r\n      accountlist: [],\r\n      filterlist: [],\r\n      errorMassege: false,\r\n      error: '',\r\n      dateTime: '',\r\n      fromAccounts: '',\r\n      fromSymbol: '',\r\n      toAccounts: '',\r\n      toSymbol: '',\r\n      fromOpenOrderInfos: '',\r\n      toOpenOrderInfos: '',\r\n      total: '',\r\n      totalTo: '',\r\n      blockloader: true,\r\n      activeProfileName: '',\r\n      autoClose: ' ',\r\n      //\r\n\r\n\r\n      allHistoryRecord: [],\r\n      allOpenRecord: [],\r\n      fromHistoryOrderInfo: [],\r\n      toHistoryOrderInfo: [],\r\n      commissionHistoryOrderInfo: [],\r\n      fromOpenOrderInfo: [],\r\n      toOpenOrderInfo: [],\r\n      loading: true,\r\n      //\r\n\r\n\r\n    }\r\n  }\r\n  componentWillMount() {\r\n    // this.fetchCloseAndOpenPositionTotal();\r\n    // this.getAllAccounts();\r\n    // this.fetchActivefilterData();\r\n    // this.fetchAllOpenTrade();\r\n    // this.fetchStatusData();\r\n    // fetchLastUpdatedTime()\r\n    setInterval(() => {\r\n    if((myInitObject.responsHT &&\r\n      myInitObject.responsOT &&\r\n      myInitObject.responsAC &&\r\n      myInitObject.responsAF &&\r\n      myInitObject.responsLUT &&\r\n      myInitObject.responsSD) === undefined){\r\n      console.log('no data');\r\n    }else{\r\n      this.setState({\r\n        //history trade\r\n        allHistoryRecord: myInitObject.fetchAllHistoryTrade.rows,\r\n        fromHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.fromHistoryOrderInfo,\r\n        toHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.toHistoryOrderInfo,\r\n        //open trade\r\n        allOpenRecord: myInitObject.fetchAllOpenTrade.rows,\r\n        fromOpenOrderInfo: myInitObject.fetchAllOpenTrade.fromOpenOrderInfo,\r\n        toOpenOrderInfo: myInitObject.fetchAllOpenTrade.toOpenOrderInfo,\r\n        //all Accounts\r\n        accountlist: myInitObject.fetchAllAccounts.rows,\r\n        //active filter data\r\n        filterlist: myInitObject.fetchActivefilterdata.rows,\r\n       \r\n        activeProfileName: myInitObject.fetchActivefilterdata.rows[0].profile_name,\r\n        autoClose: myInitObject.fetchActivefilterdata.rows[0].auto_close !== 0 ? 'ON' : 'OFF',     \r\n        //last updated time\r\n        dateTime: myInitObject.fetchLastUpdatedTime.filteredInfoTime,\r\n        // status data\r\n        loading: false,\r\n        fromAccounts: myInitObject.fetchStatusData.fromAccounts,\r\n        fromSymbol: myInitObject.fetchStatusData.fromSymbol,\r\n        toAccounts: myInitObject.fetchStatusData.toAccounts,\r\n        toSymbol: myInitObject.fetchStatusData.toSymbol,\r\n        fromOpenOrderInfos: myInitObject.fetchStatusData.fromOpenOrderInfos[0],\r\n        blockloader: myInitObject.fetchStatusData.fromOpenOrderInfos.length > 0 ? false : true,\r\n        total: myInitObject.fetchStatusData.fromOpenOrderInfos.length > 0 && myInitObject.fetchStatusData.fromOpenOrderInfos[0].order_type == 0 \r\n        ? myInitObject.fetchStatusData.fromSymbol?.contract_size * (myInitObject.fetchStatusData.fromOpenOrderInfos[0]?.lots)\r\n         : myInitObject.fetchStatusData.fromSymbol?.contract_size * -(myInitObject.fetchStatusData.fromOpenOrderInfos[0]?.lots),\r\n        toOpenOrderInfos: myInitObject.fetchStatusData.toOpenOrderInfos[0],\r\n        totalTo: myInitObject.fetchStatusData.toOpenOrderInfos.length > 0 && myInitObject.fetchStatusData.toOpenOrderInfos[0].order_type == 0 \r\n        ? myInitObject.fetchStatusData.toSymbol?.contract_size * (myInitObject.fetchStatusData.toOpenOrderInfos[0]?.lots) \r\n         : myInitObject.fetchStatusData.toSymbol?.contract_size * -(myInitObject.fetchStatusData.toOpenOrderInfos[0]?.lots),\r\n      \r\n        },() =>{\r\n          this.setState({ errorMassege:this.state.filterlist.length == 0 ?  true : false,})\r\n        })\r\n    }\r\n   },1000)\r\n\r\n  }\r\n\r\n  // fetchApiData = () => {\r\n\r\n  //   if(myInitObject.respons === true){\r\n  //     console.log(myInitObject)\r\n  //   }\r\n  // }\r\n  \r\n  // fetchCloseAndOpenPositionTotal = () => {\r\n  //   let self = this;\r\n  //   axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\r\n  //     .then(function (response) {\r\n  //       console.log(response.data, 'response.data his')\r\n  //       if (response.status == 200) {\r\n  //         self.setState({\r\n  //           allHistoryRecord: response.data.rows,\r\n  //           fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,\r\n  //           toHistoryOrderInfo: response.data.toHistoryOrderInfo,\r\n  //           commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\r\n  //         })\r\n  //       }\r\n  //     })\r\n\r\n  //   axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\r\n  //     .then(function (response) {\r\n  //       if (response.status == 200) {\r\n  //         self.setState({\r\n  //           allOpenRecord: response.data.rows,\r\n  //           fromOpenOrderInfo: response.data.fromOpenOrderInfo,\r\n  //           toOpenOrderInfo: response.data.toOpenOrderInfo\r\n  //         })\r\n  //       }\r\n  //     })\r\n  // }\r\n  createLegend(json) {\r\n    var legend = [];\r\n    for (var i = 0; i < json[\"names\"].length; i++) {\r\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\r\n      legend.push(<i className={type} key={i} />);\r\n      legend.push(\" \");\r\n      legend.push(json[\"names\"][i]);\r\n    }\r\n    return legend;\r\n  }\r\n\r\n  // getAllAccounts = () => {\r\n  //   let self = this;\r\n  //   axios.get(config.baseurl + '/accounts/fetchAllAccounts')\r\n  //     .then(function (response) {\r\n\r\n  //       if (response.status == 200) {\r\n  //         self.setState({ accountlist: response.data.rows })\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  // fetchActivefilterData = () => {\r\n  //   let self = this;\r\n  //   axios.get(config.baseurl + '/filter/fetchActivefilterdata')\r\n  //     .then(function (response) {\r\n  //       if (response.status == 200) {\r\n\r\n  //         self.setState({\r\n  //           filterlist: response.data.rows,\r\n\r\n  //         })\r\n  //         if (self.state.filterlist.length == 0) {\r\n\r\n  //           self.setState({ errorMassege: true })\r\n  //         }\r\n  //         else {\r\n  //           self.setState({\r\n\r\n  //             activeProfileName: response.data.rows[0].profile_name,\r\n  //             autoClose: response.data.rows[0].auto_close !== 0 ? 'ON' : 'OFF'\r\n  //           })\r\n  //         }\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  // fetchAllOpenTrade = () => {\r\n  //   let self = this;\r\n  //   axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\r\n  //     .then(function (response) {\r\n  //       if (response.status == 200) {\r\n  //         self.setState({ dateTime: response.data.filteredInfoTime })\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  // fetchStatusData = () => {\r\n  //   let self = this;\r\n  //   let tottal = 0;\r\n  //   axios.get(config.baseurl + '/accounts/fetchStatusData')\r\n  //     .then(function (response) {\r\n  //       console.log(response, \"active dat\")\r\n\r\n  //       if (response.status == 200) {\r\n  //         self.setState({ loading: false })\r\n\r\n  //         self.setState({ fromAccounts: response.data.fromAccounts })\r\n  //         self.setState({ fromSymbol: response.data.fromSymbol })\r\n  //         self.setState({ toAccounts: response.data.toAccounts })\r\n  //         self.setState({ toSymbol: response.data.toSymbol })\r\n  //         self.setState({ fromOpenOrderInfos: response.data.fromOpenOrderInfos[0] })\r\n  //         if (response.data.fromOpenOrderInfos.length > 0) {\r\n  //           self.setState({ blockloader: false })\r\n  //           if (response.data.fromOpenOrderInfos[0].order_type == 0) {\r\n  //             self.setState({ total: response.data.fromSymbol.contract_size * (response.data.fromOpenOrderInfos[0].lots) })\r\n  //           } else {\r\n  //             self.setState({ total: response.data.fromSymbol.contract_size * -(response.data.fromOpenOrderInfos[0].lots) })\r\n  //           }\r\n  //           console.log(response.data.fromSymbol.contract_size * -(response.data.fromOpenOrderInfos[0].lots), \"total\");\r\n  //           self.setState({ toOpenOrderInfos: response.data.toOpenOrderInfos[0] })\r\n  //         }\r\n  //         if (response.data.toOpenOrderInfos.length > 0) {\r\n  //           if (response.data.toOpenOrderInfos[0].order_type == 0) {\r\n  //             self.setState({ totalTo: response.data.toSymbol.contract_size * (response.data.toOpenOrderInfos[0].lots) })\r\n  //           } else {\r\n  //             self.setState({ totalTo: response.data.toSymbol.contract_size * -(response.data.toOpenOrderInfos[0].lots) })\r\n  //           }\r\n  //         }\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n\r\n\r\n\r\n  showData = (accountDetailValue) => {\r\n\r\n    return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\r\n      if (accountDetailValue === 'margin_level') {\r\n        return (\r\n          <>\r\n            <td className=\"tdClr2 tdClr boldText\" key={index}>\r\n              <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\r\n            </td>\r\n            <td className=\"tdClr2 boldText\" key={index}>\r\n              <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\r\n            </td>\r\n          </>\r\n        )\r\n      }\r\n      if (item.accountFromInfo.length > 0) {\r\n        return (\r\n          <>\r\n            <td className=\"tdClr2 tdClr boldText\" key={index}>\r\n              {item.accountFromInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''}  {' '}\r\n              <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n            </td>\r\n\r\n            <td className=\"tdClr2 boldText\" key={index}>\r\n              {item.accountToInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''} {' '}\r\n              <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n            </td>\r\n          </>\r\n        )\r\n\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  tableHeader = () => {\r\n\r\n    return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\r\n      return (\r\n        <>\r\n          <th key={index} className=\"bText colorDarkBlue text-center tdClr2 tdClr\">\r\n            <div className=\"colorDarkBlue\" >\r\n              {(item.accountFromInfo[0].alias != null) ? item.accountFromInfo[0].alias : '-'}\r\n            </div>\r\n            <span style={{ fontSize: 10 }}>\r\n              {item.accountFromInfo[0].login}\r\n            </span>\r\n\r\n          </th>\r\n          <th key={index} className=\"bText color2 text-center tdClr2\">\r\n            <div className=\"color2\" >\r\n              {(item.accountToInfo[0].alias != null) ? item.accountToInfo[0].alias : '-'}\r\n            </div>\r\n            <span style={{ fontSize: 10 }}>\r\n              {item.accountToInfo[0].login}\r\n            </span>\r\n\r\n          </th>\r\n        </>\r\n\r\n      )\r\n\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    // console.log(this.props, '================>');\r\n    const { allHistoryRecord, fromHistoryOrderInfo, toHistoryOrderInfo, commissionHistoryOrderInfo,\r\n      allOpenRecord, fromOpenOrderInfo, toOpenOrderInfo, } = this.state;\r\n\r\n\r\n    let fromsum = 0;\r\n    let tosum = 0;\r\n    let fromsum1 = 0;\r\n    let tosum1 = 0;\r\n\r\n\r\n    if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\r\n      fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\r\n    }\r\n    if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\r\n      tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\r\n    }\r\n\r\n    let sumOfTotal = tosum + fromsum;\r\n    if (fromOpenOrderInfo && fromOpenOrderInfo.length > 0) {\r\n\r\n      fromsum1 = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\r\n\r\n    }\r\n    if (toOpenOrderInfo && toOpenOrderInfo.length > 0) {\r\n\r\n      tosum1 = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n\r\n    }\r\n\r\n    let sumOfTotal1 = tosum1 + fromsum1;\r\n    const dateToFormat = new Date();\r\n    let FinalTotal = 0\r\n\r\n    return (\r\n\r\n      <div className=\"\">\r\n        {this.state.errorMassege == true &&\r\n          <div className=\"popup\">\r\n\r\n            <div className=\"card w-75 \">\r\n              <div className=\"card-body topmargin\">\r\n                <div className=\" card-text popuptext\" role=\"alert\">Please Select Filters To Continue...</div>\r\n              </div>\r\n            </div>\r\n          </div>}\r\n        <div className=\"content\">\r\n          {this.state.errorMassege != true &&\r\n\r\n            <Grid fluid>\r\n\r\n              <Row>\r\n                <div className=\"lastUpdate\">\r\n                  <span> Last Updated :  </span>\r\n                  {this.state.dateTime}(UTC)  </div>\r\n                <Col md={12} sm={6}>\r\n                  <div className=\"terminal-box  terminal-head-box\">\r\n\r\n                    <span className=\"terminal-text\">Profile</span>\r\n                  </div>\r\n                  <Row >\r\n                    <Col lg={4} sm={4}>\r\n                      <div className=\"card-margin card card-stats\">\r\n                        <div className=\"content\">\r\n                          <Row className=\"row\">\r\n                            <Col xs={5}>\r\n                              <div style={{ fontSize: '3em' }} className=\"icon-big text-center icon-warning\">\r\n                                <i className=\"pe-7s-display1 text-warning\"></i>\r\n                              </div>\r\n                            </Col>\r\n                            <div className=\"col-xs-7\">\r\n                              <div className=\"numbers\"><p style={{\r\n                                textAlign: 'center',\r\n                                fontSize: '17px',\r\n                                marginTop: '15px'\r\n                              }}>Active Profile </p></div>\r\n                            </div>\r\n                          </Row>\r\n                          <div className=\"footer\"><hr /><p style={{ textAlign: 'center', fontSize: '17px' }}>{this.state.activeProfileName}</p></div></div></div>\r\n                    </Col>\r\n\r\n                    <div className=\" col-lg-offset-4 col-sm-offset-4 col-lg-4 col-sm-4\">\r\n                      <div className=\"card-margin card card-stats\">\r\n                        <div className=\"content\">\r\n                          <div className=\"row\">\r\n                            <div className=\"col-xs-5\">\r\n                              <div style={{ fontSize: '3em' }} className=\"icon-big text-center icon-warning\">\r\n                                <i style={{ color: this.state.autoClose == 'OFF' ? '#312f2f' : 'green' }} className=\"pe-7s-switch text-warning-switch\"></i>\r\n                              </div></div>\r\n                            <div className=\"col-xs-7\">\r\n                              <div className=\"numbers\"><p style={{\r\n                                textAlign: 'center',\r\n                                fontSize: '17px',\r\n                                marginTop: '15px'\r\n                              }}>Auto-Close </p></div>\r\n                            </div></div><div className=\"footer\"><hr /><p style={{ textAlign: 'center', fontSize: '17px' }}>{this.state.autoClose}</p></div></div></div></div>\r\n\r\n                  </Row>\r\n                  <div className=\"terminal-box terminal-head-box\">\r\n                    {/* {(this.state.errorMassege) && <p style={{ color: 'red', fontSize: '10px' }}>Please Select Any Account</p>} */}\r\n                    <span className=\"terminal-text\">Profit/Loss</span>\r\n                  </div>\r\n                  <Row >\r\n                    <div className=\"col-lg-12 col-sm-12\">\r\n                      <div className=\"card-margin card card-stats\">\r\n                        <div className=\"content\">\r\n                          <div className=\"row\">\r\n                            <div className=\"col-xs-6\">\r\n                              <div className=\"numbers\"><p style={{\r\n                                textAlign: 'center',\r\n                                fontSize: '20px',\r\n                        \r\n                                color: sumOfTotal > 0 ? 'green' : 'red'\r\n                              }}>Realized : $ {sumOfTotal} </p></div>\r\n                            </div>\r\n                            <div className=\"col-xs-6\">\r\n                              <div className=\"numbers\"><p style={{\r\n                                textAlign: 'center',\r\n                                fontSize: '20px',\r\n                            \r\n                                color: sumOfTotal1 > 0 ? 'green' : 'red'\r\n\r\n                              }}>Unrealized : $ {sumOfTotal1} </p></div>\r\n                            </div>\r\n                          </div><div className=\"footer\"><hr /><p style={{ color: (sumOfTotal1 + sumOfTotal) > 0 ? 'green' : 'red', textAlign: 'center', fontSize: '20px' }}>Total : $ {(sumOfTotal1 + sumOfTotal).toFixed(2)}</p></div></div></div></div>\r\n                  </Row>\r\n                  <div className=\"terminal-box  terminal-head-box\">\r\n                    {/* {(this.state.errorMassege) && <p style={{ color: 'red', fontSize: '10px' }}>Please Select Any Account</p>} */}\r\n                    <span className=\"terminal-text\">Exposure</span>\r\n                  </div>\r\n                  {this.state.loading ? <Loader\r\n                    type=\"ThreeDots\"\r\n                    color=\"black\"\r\n                    height={100}\r\n                    width={100}\r\n                    style={{ textAlign: 'center' }}\r\n\r\n\r\n                  />\r\n                    :\r\n                    <Row>\r\n                      {this.state.fromOpenOrderInfos && this.state.total ?\r\n                        // this.state.fromOpenOrderInfos.order_type !== null &&\r\n                        <div className=\"col-sm-6\">\r\n                         \r\n                          <div className=\"c-callout c-callout-info\">\r\n                            <small className=\"text-muted text-muted-dashboard\">{this.state.fromOpenOrderInfos.order_type == 0 ? 'long ' : 'short '} </small>\r\n                            <br />\r\n                            <strong className=\"h4 buy-sell-h4\"><NumberFormat value={this.state.total} displayType={'text'} thousandSeparator={true} decimalScale={2} />   {this.state.fromSymbol.margin_currency}\r\n                              <br />  {this.state.fromOpenOrderInfos.lots} {(this.state.fromOpenOrderInfos.lots > 1) ? 'Lots' : 'Lot'}</strong>\r\n                          </div>\r\n                        </div> : ''}\r\n                      {this.state.toOpenOrderInfos && this.state.totalTo ?\r\n                        // this.state.toOpenOrderInfos.order_type !== null &&\r\n                        <div className=\"col-sm-6\">\r\n                          <div className=\"c-callout callout-danger\">\r\n                            <small className=\"text-muted text-muted-dashboard\">{this.state.toOpenOrderInfos.order_type == 0 ? 'long ' : 'short '} </small>\r\n                            <br />\r\n                            <strong className=\"h4 buy-sell-h4\"><NumberFormat value={this.state.totalTo} displayType={'text'} thousandSeparator={true} decimalScale={2} />   {this.state.toSymbol.margin_currency}\r\n                              <br /> {this.state.toOpenOrderInfos.lots}  {(this.state.toOpenOrderInfos.lots > 1) ? 'Lots' : 'Lot'} </strong>\r\n                          </div> \r\n                          </div>: '' }\r\n                          {!this.state.totalTo && !this.state.total ?\r\n                          <div className=\"col-sm-12\">\r\n                            <div className=\"c-callout c-callout-info\">\r\n                          <small className=\"text-muted text-muted-dashboard\">No Exposure</small>\r\n                          </div>\r\n                          </div> : ''}\r\n                    </Row>\r\n                  }\r\n                </Col>\r\n              </Row>\r\n              <Row style={{ margin: '20px 0px' }}></Row>\r\n            </Grid>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from 'react';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\r\nimport TagsInput from 'react-tagsinput'\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport config from '../../constant/config.js';\r\n\r\nimport Select from 'react-select'\r\nimport { createLogicalAnd } from 'typescript';\r\nconst axios = require('axios');\r\n\r\nclass FilterEdite extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedAccountOption: null,\r\n            selectedSymbolOption: null,\r\n            selectedSymbolOptionTo: null,\r\n            selectedAccountOptionTo: null,\r\n            selectedCommissionAccount: null,\r\n            startDate: null,\r\n            endDate: null,\r\n            startDateTo: null,\r\n            endDateTo: null,\r\n            allAccounts: [],\r\n            allSymbols: [],\r\n            profileName: '',\r\n            showCommission: false,\r\n            // showAddCommission: false,\r\n            id: '',\r\n            error: '',\r\n            autoSyncClose: false,\r\n            magicNumber: [],\r\n            magicNumberTo: [],\r\n            tags: [],\r\n            include_exclude_status: '',\r\n            showMagicNumber: false,\r\n            showMagicNumberTo: false,\r\n            exclude: false,\r\n            include: false,\r\n            excludeTo: false,\r\n            includeTo: false,\r\n            ticket:[],\r\n            ticketTo:[],\r\n            // showTicket: false,\r\n            // showTicketTo: false,\r\n            excludeTicket: false,\r\n            includeTicket: false,\r\n            excludeTicketTo: false,\r\n            includeTicketTo: false,\r\n\r\n        };\r\n\r\n\r\n    }\r\n    componentWillMount() {\r\n\r\n        let self = this;\r\n        axios.get(config.baseurl + '/accounts/fetchAllAccounts')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.setState({ allAccounts: response.data.rows })\r\n                }\r\n            })\r\n        axios.get(config.baseurl + '/accounts/fetchAllSymbol')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    // console.log( response,\"response ---------------fetchAllSymbol>\")\r\n                    self.setState({ allSymbols: response.data.rows })\r\n                }\r\n            })\r\n    }\r\n    componentDidMount() {\r\n\r\n        let abc = this.props.data;\r\n        console.log(abc, '------------------>>>');\r\n        if (abc) {\r\n            let from_symbol = JSON.parse(abc.from_symbols);\r\n            let to_symbol = JSON.parse(abc.to_symbols);\r\n\r\n            let all_from_symbols = from_symbol.map(data => { return ({ value: data, label: data }) });\r\n            let all_to_symbols = to_symbol.map(data => { return ({ value: data, label: data }) });\r\n\r\n            from_symbol = from_symbol.join(', ');\r\n            to_symbol = to_symbol.join(', ');\r\n\r\n            this.setState({\r\n                id: abc.id,\r\n                profileName: abc.profile_name,\r\n                selectedAccountOption: ({ value: abc.accountFromInfo[0].id, label: abc.accountFromInfo[0].login }),\r\n                selectedAccountOptionTo: ({ value: abc.accountToInfo[0].id, label: abc.accountToInfo[0].login }),\r\n                showCommission: abc.commission_acount_id !== 0 ? true : false,\r\n                selectedCommissionAccount: abc.commission_acount_id !== 0 ? ({ value: abc.accountCommissionInfo[0].id, label: abc.accountCommissionInfo[0].login }) : null,\r\n                showMagicNumber: abc.from_include_exclude_status !== 0 ? true : false,\r\n                showMagicNumberTo: abc.to_include_exclude_status !== 0 ? true : false,\r\n                magicNumber: abc.from_magic_number != \"0\" && abc.from_magic_number != \"\" ? JSON.parse(abc.from_magic_number) : [],\r\n                magicNumberTo: abc.to_magic_number != \"0\" && abc.to_magic_number != \"\" ? JSON.parse(abc.to_magic_number) : [],\r\n                include: abc.from_include_exclude_status === 1 ? true : false,\r\n                exclude: abc.from_include_exclude_status === 2 ? true : false,\r\n                includeTo: abc.to_include_exclude_status === 1 ? true : false,\r\n                excludeTo: abc.to_include_exclude_status === 2 ? true : false,\r\n                // showTicket: abc.from_include_exclude_status_ticket !== 0 ? true : false,\r\n                // showTicketTo: abc.to_include_exclude_status_ticket !== 0 ? true : false,\r\n                ticket: abc.from_ticket != \"0\" && abc.from_ticket != \"\" ? JSON.parse(abc.from_ticket) : [],\r\n                ticketTo: abc.to_ticket != \"0\" && abc.to_ticket != \"\" ? JSON.parse(abc.to_ticket) : [],\r\n                includeTicket: abc.from_include_exclude_status_ticket === 1 ? true : false,\r\n                excludeTicket: abc.from_include_exclude_status_ticket === 2 ? true : false,\r\n                includeTicketTo: abc.to_include_exclude_status_ticket === 1 ? true : false,\r\n                excludeTicketTo: abc.to_include_exclude_status_ticket === 2 ? true : false,\r\n                selectedSymbolOption: all_from_symbols,\r\n                autoSyncClose: abc.auto_close == 1 ? true : false,\r\n                selectedSymbolOptionTo: all_to_symbols,\r\n                startDate: new Date(abc.startdateFrom),\r\n                startDateTo: new Date(abc.startdateTo),\r\n                endDate: (abc.enddateFrom != null) ? new Date(abc.enddateFrom) : '',\r\n                endDateTo: (abc.enddateTo != null) ? new Date(abc.enddateTo) : '',\r\n            })\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    handleDropdownChange = (e) => {\r\n        this.setState({ selectValue: e.target.value });\r\n    }\r\n    handleChangeDate = date => {\r\n        this.setState({\r\n            startDate: date\r\n        });\r\n    }\r\n    handleEndDate = date => {\r\n\r\n        if (date < this.state.startDate && date != null) {\r\n            this.setState({ error: 'enddate', endDate: \"\" })\r\n            return\r\n        }\r\n        this.setState({\r\n            error: '',\r\n            endDate: date,\r\n        });\r\n    }\r\n    handleChangeDateTo = date => {\r\n        this.setState({\r\n            startDateTo: date\r\n        });\r\n    }\r\n    handleEndDateTo = date => {\r\n        if (date < this.state.startDateTo && date != null) {\r\n            this.setState({ error: 'enddateto', endDateTo: \"\" })\r\n            return\r\n        }\r\n        this.setState({\r\n            error: '',\r\n            endDateTo: date,\r\n        });\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({ value: Array.from(event.target.selectedOptions, (item) => item.value) });\r\n    }\r\n\r\n    handeChangeShowCommission = () => {\r\n        this.setState({ showCommission: !this.state.showCommission })\r\n    }\r\n    handleChangeCommissionAccount = selectedCommissionAccount => {\r\n        this.setState({ selectedCommissionAccount });\r\n    };\r\n\r\n    renderCommissionAccount = () => {\r\n        const { selectedCommissionAccount, allAccounts } = this.state;\r\n\r\n        let options = allAccounts.map(data => {\r\n            return { value: data.id, label: data.login };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Account\"\r\n                value={selectedCommissionAccount}\r\n                onChange={this.handleChangeCommissionAccount}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n\r\n    renderAccountSelect = () => {\r\n        const { selectedAccountOption, allAccounts } = this.state;\r\n        let options = allAccounts.map(data => {\r\n            return { value: data.id, label: data.login };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Account\"\r\n                value={selectedAccountOption}\r\n                onChange={this.handleChangeAccount} l\r\n                options={options}\r\n                rules={{ required: 'Please select an option' }}\r\n            />\r\n        )\r\n    }\r\n\r\n    handleChangeAccountTo = selectedAccountOptionTo => {\r\n        this.setState({ selectedAccountOptionTo, error: '' });\r\n    };\r\n    renderAccountSelectTo = () => {\r\n        const { selectedAccountOptionTo, allAccounts } = this.state;\r\n\r\n        let options = allAccounts.map(data => {\r\n            return { value: data.id, label: data.login };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Account\"\r\n                value={selectedAccountOptionTo}\r\n                onChange={this.handleChangeAccountTo}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n\r\n    handleChangeAccount = selectedAccountOption => {\r\n        this.setState({ selectedAccountOption });\r\n    };\r\n    handleChangeSymbol = selectedSymbolOption => {\r\n        this.setState({ selectedSymbolOption });\r\n    };\r\n    renderSymbolSelect = () => {\r\n        const { selectedSymbolOption, allSymbols } = this.state;\r\n        let options = allSymbols.map(data => {\r\n            return { value: data.name, label: data.name };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Symbol\"\r\n                value={selectedSymbolOption}\r\n                isMulti\r\n                onChange={this.handleChangeSymbol}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n    handleChangeSymbolTo = selectedSymbolOptionTo => {\r\n        this.setState({ selectedSymbolOptionTo });\r\n    };\r\n    renderSymbolSelectTo = () => {\r\n        const { selectedSymbolOptionTo, allSymbols } = this.state;\r\n        let options = allSymbols.map(data => {\r\n            return { value: data.name, label: data.name };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Symbol\"\r\n                value={selectedSymbolOptionTo}\r\n                isMulti\r\n                onChange={this.handleChangeSymbolTo}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n\r\n    handleChangeMagicNumber = (magicNumber) => {\r\n\r\n\r\n        // if(re.test(tags))\r\n        this.setState({ magicNumber })\r\n    }\r\n    handleChangeMagicNumberTo = (magicNumberTo) => {\r\n\r\n\r\n        // if(re.test(tags))\r\n        this.setState({ magicNumberTo })\r\n    }\r\n\r\n    handleChangeTicket = (ticket) => {\r\n\r\n\r\n        this.setState({ ticket })\r\n\r\n    }\r\n    handleChangeTicketTo = (ticketTo) => {\r\n\r\n        this.setState({ ticketTo })\r\n    }\r\n    changeIncludeDefaultProperty = () => {\r\n\r\n        this.setState({ include: !this.state.include, exclude: false })\r\n            \r\n        // if (!this.state.include == true) {\r\n        //     this.setState({ showMagicNumber: true })\r\n        // } else if (this.state.include == true) {\r\n        //     this.setState({ showMagicNumber: false })\r\n\r\n        // }\r\n\r\n\r\n    }\r\n    changeExcludeDefaultProperty = () => {\r\n        this.setState({ exclude: !this.state.exclude, include: false })\r\n        // if (!this.state.exclude == true) {\r\n        //     this.setState({ showMagicNumber: true })\r\n        // } else if (this.state.exclude == true) {\r\n        //     this.setState({ showMagicNumber: false })\r\n\r\n        // }\r\n\r\n    }\r\n\r\n    changeIncludeDefaultPropertyTo = () => {\r\n        this.setState({ includeTo: !this.state.includeTo, excludeTo: false })\r\n        // if (!this.state.includeTo == true) {\r\n        //     this.setState({ showMagicNumberTo: true })\r\n        // } else if (this.state.includeTo == true) {\r\n        //     this.setState({ showMagicNumberTo: false })\r\n\r\n        // }\r\n    }\r\n    changeExcludeDefaultPropertyTo = () => {\r\n        this.setState({ excludeTo: !this.state.excludeTo, includeTo: false })\r\n        // if (!this.state.excludeTo == true) {\r\n        //     this.setState({ showMagicNumberTo: true })\r\n        // } else if (this.state.excludeTo == true) {\r\n        //     this.setState({ showMagicNumberTo: false })\r\n\r\n        // }\r\n\r\n    }\r\n\r\n    changeIncludeDefaultPropertyTicket = () => {\r\n\r\n        this.setState({ includeTicket: !this.state.includeTicketTo, excludeTicket: false }\r\n        )\r\n        // if (!this.state.includeTicket == true) {\r\n        //     this.setState({ showTicket: true })\r\n        // } else if (this.state.includeTicket == true) {\r\n        //     this.setState({ showTicket: false })\r\n\r\n        // }\r\n\r\n\r\n    }\r\n    changeExcludeDefaultPropertyTicket = () => {\r\n        this.setState({ excludeTicket: !this.state.excludeTicket, includeTicket: false })\r\n        // if (!this.state.excludeTicket == true) {\r\n        //     this.setState({ showTicket: true })\r\n        // } else if (this.state.excludeTicket == true) {\r\n        //     this.setState({ showTicket: false })\r\n\r\n        // }\r\n\r\n    }\r\n\r\n    changeIncludeDefaultPropertyTicketTo = () => {\r\n        this.setState({ includeTicketTo: !this.state.includeTicketTo, excludeTicketTo: false })\r\n        // if (!this.state.includeTicketTo == true) {\r\n        //     this.setState({ showTicketTo: true })\r\n        // } else if (this.state.includeTicketTo == true) {\r\n        //     this.setState({ showTicketTo: false })\r\n\r\n        // }\r\n    }\r\n    changeExcludeDefaultPropertyTicketTo = () => {\r\n        this.setState({ excludeTicketTo: !this.state.excludeTicketTo, includeTicketTo: false })\r\n        // if (!this.state.excludeTicketTo == true) {\r\n        //     this.setState({ showTicketTo: true })\r\n        // } else if (this.state.excludeTicketTo == true) {\r\n        //     this.setState({ showTicketTo: false })\r\n\r\n        // }\r\n\r\n    }\r\n\r\n    handleprofileName(e) {\r\n\r\n        this.setState({ profileName: e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1), error: '' })\r\n\r\n    }\r\n    handleChangeAutoSync(e) {\r\n        this.setState({ autoSyncClose: !this.state.autoSyncClose }, () => {\r\n        })\r\n    }\r\n    formDataSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        let from_status = this.state.include === true && this.state.exclude === false ? 1 : this.state.exclude === true && this.state.include === false ? 2 : 0\r\n\r\n        let to_status = this.state.includeTo === true && this.state.excludeTo === false ? 1 : this.state.excludeTo === true && this.state.includeTo === false ? 2 : 0\r\n\r\n        let from_status_ticket = this.state.includeTicket === true && this.state.excludeTicket === false ? 1 : this.state.excludeTicket === true && this.state.includeTicket === false ? 2 : 0\r\n\r\n        let to_status_ticket = this.state.includeTicketTo === true && this.state.excludeTicketTo === false ? 1 : this.state.excludeTicketTo === true && this.state.includeTicketTo === false ? 2 : 0\r\n        \r\n        let self = this\r\n\r\n       \r\n        if (this.state.profileName == null || this.state.profileName == '') {\r\n            NotificationManager.listNotify = [];\r\n            NotificationManager.error ('Please select profile name !')\r\n            return\r\n        }\r\n        else if (this.state.selectedAccountOption == null || this.state.selectedAccountOption == '') {\r\n            this.setState({ error: 'accountoption' })\r\n            return\r\n        }\r\n        else if (this.state.showCommission == true  &&  (this.state.selectedCommissionAccount == null || this.state.selectedCommissionAccount == '')) {\r\n            this.setState({ error: 'selectedCommissionAccount' })\r\n            return\r\n        }\r\n        else if (this.state.startDate == null || this.state.startDate == '') {\r\n            this.setState({ error: 'startdate' })\r\n            return\r\n        } else if (this.state.selectedSymbolOption == null || this.state.selectedSymbolOption == '') {\r\n            this.setState({ error: 'symbolselect' })\r\n            return\r\n        }\r\n        else if (this.state.selectedAccountOptionTo == null || this.state.selectedAccountOptionTo == '') {\r\n            this.setState({ error: 'accountoptionto' })\r\n            return\r\n        } else if (this.state.startDateTo == null || this.state.startDateTo == '') {\r\n            this.setState({ error: 'startDateTo' })\r\n            return\r\n        }\r\n        else if (this.state.selectedSymbolOptionTo == null || this.state.selectedSymbolOptionTo == '') {\r\n            this.setState({ error: 'selectedSymbolOptionTo' })\r\n            return\r\n        }\r\n        else {\r\n            this.setState({ error: '' })\r\n        }\r\n        let fromSymbol = this.state.selectedSymbolOption;\r\n        let toSymbol = this.state.selectedSymbolOptionTo;\r\n\r\n        let symbolFrom = fromSymbol.map((data) => data.value)\r\n        let symbolto = toSymbol.map((data) => data.value)\r\n\r\n        let Data = {\r\n            id: this.state.id,\r\n            profile_name: this.state.profileName,\r\n            from_account_id: this.state.selectedAccountOption.value,\r\n            to_account_id: this.state.selectedAccountOptionTo.value,\r\n            commission_acount_id: this.state.showCommission == true ? this.state.selectedCommissionAccount.value : 0,\r\n            startdateFrom: this.state.startDate,\r\n            // enddateFrom: this.state.endDate,\r\n            enddateFrom: (this.state.endDate) ? this.state.endDate : null,\r\n            startdateTo: this.state.startDateTo,\r\n            enddateTo: (this.state.endDateTo) ? this.state.endDateTo : null,\r\n            from_symbols: JSON.stringify(symbolFrom),\r\n            to_symbols: JSON.stringify(symbolto),\r\n            auto_close: this.state.autoSyncClose ? 1 : 0,\r\n            from_magic_number: (from_status != 0) ? this.state.magicNumber.length > 0 ? JSON.stringify(this.state.magicNumber) : JSON.stringify([]) : \"\",\r\n            to_magic_number: (to_status != 0) ? this.state.magicNumberTo.length > 0 ? JSON.stringify(this.state.magicNumberTo) : JSON.stringify([]) : \"\",\r\n\r\n            from_include_exclude_status: from_status,\r\n            to_include_exclude_status: to_status,\r\n            from_ticket:(from_status_ticket != 0) ? this.state.ticket.length > 0 ? JSON.stringify(this.state.ticket) : JSON.stringify([]) : \"\",\r\n          to_ticket: (to_status_ticket != 0) ? this.state.ticketTo.length > 0 ? JSON.stringify(this.state.ticketTo) : JSON.stringify([]) : \"\",\r\n          from_include_exclude_status_ticket: from_status_ticket,\r\n                to_include_exclude_status_ticket: to_status_ticket, \r\n            createdAt: new Date(),\r\n            updatedAt: new Date()\r\n        }\r\n        \r\n        axios.post(config.baseurl + '/filter/updatefilterdatafull', Data)\r\n        .then(function (response) {\r\n            \r\n            if (response.status == 200) {\r\n                    self.props.onHide()\r\n\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n            });\r\n\r\n    }\r\n    crossClick(e) {\r\n        e.preventDefault();\r\n        this.props.onHide()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content\">\r\n                <Grid fluid>\r\n                    <div className=\"symbol-box\">\r\n                        <div className=\"cross_div\"><a onClick={(e) => this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\r\n                        <div className=\"terminal-text\" >\r\n                            <p className=\"profilename pnameadjust\"> Profile Name</p>\r\n                            <input type=\"text\" name=\"profilename\" value={this.state.profileName} className=\"Itext\" onChange={(e) => this.handleprofileName(e)} />\r\n                            {(this.state.error == 'profileName') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Fill Your Profile Name </p>}\r\n\r\n                        </div>\r\n                        <div className=\"synclose\">\r\n                            <label class=\"checkbox-inline\"><input type=\"checkbox\" checked={this.state.autoSyncClose} name=\"changeAutoSync\" onChange={(e) => this.handleChangeAutoSync(e)} /><b>Auto Sync Close</b></label>\r\n                        </div>\r\n                        <form>\r\n                            <Row>\r\n                                {/* <Col md={12}>\r\n                                    <div className=\"card\">\r\n                                        <div style={{ padding: '10px 20px 35px ', }}>\r\n                                            <div>\r\n                                                <h3 className=\" text-center\">Filter By Magic Numbers</h3>\r\n\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-6 text-center\">\r\n\r\n                                                    <button type=\"button\" class=\"text-center filter-add-button\">Include</button>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-md-6 text-center btnspace\">\r\n                                                    <button type=\"button\" class=\"filter-add-button\">Exclude</button>\r\n                                                </div>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col\">\r\n                                                        <div class=\"text-center  \">\r\n                                                            <input class=\"form-control input-css\" placeholder=\"Select Numbers\" type=\"number\"></input>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>from_include_exclude_status\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </Col> */}\r\n                                <Col md={6}>\r\n                                    <div className=\"card bottom\">\r\n                                        <div style={{ padding: '10px 20px 0px' }}>\r\n                                            <span style={{ fontWeight: 'bold' }}>Account A</span>\r\n                                        </div>\r\n                                        <table className=\"table mt20\">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr\">\r\n                                                        <span className=\"accnt\">Account :</span>\r\n                                                    </td>\r\n\r\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                        {this.renderAccountSelect()}\r\n                                                        {(this.state.error == 'accountoption') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">From:  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center datepicker_filter\">\r\n                                                        <DatePicker\r\n                                                            selected={this.state.startDate}\r\n                                                            onChange={this.handleChangeDate}\r\n                                                            isClearable\r\n                                                            placeholderText=\"dd/mm/yyyy\"\r\n                                                            dateFormat=\"dd/MM/yyyy\"\r\n                                                            startDate={this.state.startDate}\r\n                                                            endDate={this.state.endDate}\r\n                                                            strictParsing\r\n                                                        />\r\n                                                        {(this.state.error == 'startdate') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">To :  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center datepicker_filter\">\r\n                                                        <DatePicker\r\n\r\n                                                            selected={this.state.endDate}\r\n                                                            onChange={this.handleEndDate}\r\n                                                            isClearable\r\n                                                            placeholderText=\"dd/mm/yyyy\"\r\n                                                            dateFormat=\"dd/MM/yyyy\"\r\n                                                            startDate={this.state.startDate}\r\n                                                            endDate={this.state.endDate}\r\n                                                        />\r\n                                                        {(this.state.error == 'enddate') && <p style={{ color: 'red', fontSize: '13px' }}>*\r\n                                                        Please ensure that the End Date is greater than  the Start Date.</p>}\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">Symbol :  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center\" style={{ width: '50%' }}>\r\n                                                        {this.renderSymbolSelect()}\r\n                                                        {(this.state.error == 'symbolselect') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                            <span className=\"accnt\">Magic Number </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                        <TagsInput\r\n                                                        onValidationReject={() => console.log('rejected')}\r\n                                                        validationRegex={/^[0-9]*$/}\r\n                                                        inputProps={{ placeholder: this.state.magicNumber.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumber\r\n                                                        } onChange={this.handleChangeMagicNumber}></TagsInput>\r\n                                                            </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr dataAdjust\">\r\n                                                            <div onClick={this.changeIncludeDefaultProperty}>\r\n                                                                <input\r\n                                                                    type=\"radio\" id=\"include\" name=\"include\" checked={this.state.include} />\r\n                                                                <span className=\"accnt \">Include</span>\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\">\r\n                                                            <div onClick={this.changeExcludeDefaultProperty} >\r\n                                                                <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.exclude} />\r\n                                                                <span className=\"accnt \">Exclude</span>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                            <span className=\"accnt\">Ticket </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                        <TagsInput\r\n                                                        onValidationReject={() => console.log('rejected')}\r\n                                                        validationRegex={/^[0-9]*$/}\r\n                                                        inputProps={{ placeholder: this.state.ticket.length > 0 ? \"\" : \" Enter Ticket\" }} type=\"number\" value={this.state.ticket\r\n                                                        } onChange={this.handleChangeTicket}></TagsInput>\r\n                                                            </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr dataAdjust\">\r\n                                                            <div onClick={this.changeIncludeDefaultPropertyTicket}>\r\n                                                                <input\r\n                                                                    type=\"radio\" id=\"includeTicket\" name=\"includeTicket\" checked={this.state.includeTicket} />\r\n                                                                <span className=\"accnt \">Include</span>\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\">\r\n                                                            <div onClick={this.changeExcludeDefaultPropertyTicket} >\r\n                                                                <input type=\"radio\" id=\"excludeTicket\" name=\"excludeTicket\" checked={this.state.excludeTicket} />\r\n                                                                <span className=\"accnt \">Exclude</span>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n\r\n                                            </tbody>\r\n                                        </table>\r\n                                        {/* <div className=\"text-center\">\r\n                                            <span c> Magic Number :  </span>\r\n                                        </div>\r\n\r\n                                        <table className=\"table \">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr dataAdjust\">\r\n                                                        <div onClick={this.changeIncludeDefaultProperty}>\r\n                                                            <input\r\n                                                                type=\"radio\" id=\"include\" name=\"include\" checked={this.state.include} />\r\n                                                            <span class=\"accnt \">Include</span>\r\n\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <div onClick={this.changeExcludeDefaultProperty} >\r\n                                                            <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.exclude} />\r\n                                                            <span class=\"accnt \">Exclude</span>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n\r\n\r\n                                        {this.state.showMagicNumber &&\r\n                                            <div className=\"b-clr magicnumber\" style={{}}>\r\n                                                <TagsInput\r\n                                                    onValidationReject={() => console.log('rejected')}\r\n                                                    validationRegex={/^[0-9]*$/}\r\n                                                    inputProps={{ placeholder: this.state.magicNumber.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumber\r\n                                                    } onChange={this.handleChangeMagicNumber}></TagsInput>\r\n                                            </div>}\r\n\r\n                                            <div className=\"text-center\">\r\n                                                <span > Ticket   </span>\r\n                                            </div>\r\n\r\n                                            <table className=\"table \">\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr dataAdjust\">\r\n                                                            <div onClick={this.changeIncludeDefaultPropertyTicket}>\r\n                                                                <input\r\n                                                                    type=\"radio\" id=\"includeTicket\" name=\"includeTicket\" checked={this.state.includeTicket} />\r\n                                                                <span className=\"accnt \">Include</span>\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\">\r\n                                                            <div onClick={this.changeExcludeDefaultPropertyTicket} >\r\n                                                                <input type=\"radio\" id=\"excludeTicket\" name=\"excludeTicket\" checked={this.state.excludeTicket} />\r\n                                                                <span className=\"accnt \">Exclude</span>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n\r\n\r\n                                            {this.state.showTicket === true ?\r\n                                                <div className=\"b-clr magicnumber\" style={{}}>\r\n                                                    <TagsInput\r\n                                                        onValidationReject={() => console.log('rejected')}\r\n                                                        validationRegex={/^[0-9]*$/}\r\n                                                        inputProps={{ placeholder: this.state.ticket.length > 0 ? \"\" : \" Enter Ticket\" }} type=\"number\" value={this.state.ticket\r\n                                                        } onChange={this.handleChangeTicket}></TagsInput>\r\n                                                </div> : null} */}\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    <div className=\"card bottom\">\r\n                                        <div style={{ padding: '10px 20px 0px' }}>\r\n                                            <span style={{ fontWeight: 'bold' }}>Account B</span>\r\n                                        </div>\r\n\r\n                                        <table className=\"table mt20\">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">Account :</span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center\" style={{ width: '50%' }}>\r\n                                                        {this.renderAccountSelectTo()}\r\n                                                        {(this.state.error == 'accountoptionto') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\r\n\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">From:  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center datepicker_filter\">\r\n                                                        <DatePicker\r\n                                                            selected={this.state.startDateTo}\r\n                                                            onChange={this.handleChangeDateTo}\r\n                                                            isClearable\r\n                                                            placeholderText=\"dd/mm/yyyy\"\r\n                                                            dateFormat=\"dd/MM/yyyy\"\r\n                                                            startDate={this.state.startDateTo}\r\n                                                            endDate={this.state.endDateTo}\r\n                                                        />\r\n\r\n                                                        {(this.state.error == 'startDateTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">To :  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center datepicker_filter\">\r\n                                                        <DatePicker\r\n                                                            selected={this.state.endDateTo}\r\n                                                            onChange={this.handleEndDateTo}\r\n                                                            isClearable\r\n                                                            placeholderText=\"dd/mm/yyyy\"\r\n                                                            dateFormat=\"dd/MM/yyyy\"\r\n                                                            startDate={this.state.startDateTo}\r\n                                                            endDate={this.state.endDateTo}\r\n\r\n                                                        />\r\n\r\n                                                        {(this.state.error == 'enddateto') && <p style={{ color: 'red', fontSize: '13px' }}>*\r\n                                                        Please ensure that the End Date is greater than  the Start Date.</p>}\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr\">\r\n                                                        <span className=\"accnt\">Symbol :  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                        {this.renderSymbolSelectTo()}\r\n                                                        {(this.state.error == 'selectedSymbolOptionTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\r\n\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                            <span className=\"accnt\">Magic Number </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                        <TagsInput\r\n                                                            onValidationReject={() => console.log('rejected')}\r\n                                                            validationRegex={/^[0-9]*$/}\r\n                                                            inputProps={{ placeholder: this.state.magicNumberTo.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumberTo\r\n                                                            } onChange={this.handleChangeMagicNumberTo}></TagsInput>\r\n                                                            </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr checkboxAdjust\">\r\n                                                            <div onClick={this.changeIncludeDefaultPropertyTo} >\r\n                                                                <input\r\n                                                                    type=\"radio\" id=\"includeTo\" name=\"includeTo\" checked={this.state.includeTo} />\r\n                                                                <span className=\"accnt \">Include</span>\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr checkboxAdjust text-center\">\r\n                                                            <div onClick={this.changeExcludeDefaultPropertyTo} >\r\n                                                                <input type=\"radio\" id=\"excludeTo\" name=\"excludeTo\" checked={this.state.excludeTo} />\r\n                                                                <span className=\"accnt \">Exclude</span>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                            <span className=\"accnt\">Ticket </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                        <TagsInput\r\n                                                            onValidationReject={() => console.log('rejected')}\r\n                                                            validationRegex={/^[0-9]*$/}\r\n                                                            inputProps={{ placeholder: this.state.ticketTo.length > 0 ? \"\" : \" Enter Ticket\" }} type=\"number\" value={this.state.ticketTo\r\n                                                            } onChange={this.handleChangeTicketTo}></TagsInput>\r\n                                                            </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr checkboxAdjust\">\r\n                                                            <div onClick={this.changeIncludeDefaultPropertyTicketTo} >\r\n                                                                <input\r\n                                                                    type=\"radio\" id=\"includeTicketTo\" name=\"includeTicketTo\" checked={this.state.includeTicketTo} />\r\n                                                                <span className=\"accnt \">Include</span>\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr checkboxAdjust text-center\">\r\n                                                            <div onClick={this.changeExcludeDefaultPropertyTicketTo} >\r\n                                                                <input type=\"radio\" id=\"excludeTicketTo\" name=\"excludeTicketTo\" checked={this.state.excludeTicketTo} />\r\n                                                                <span className=\"accnt \">Exclude</span>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n\r\n\r\n                                        {/* <div className=\"text-center\">\r\n                                            <span > Magic Number :  </span>\r\n                                        </div>\r\n                                        <table className=\"table mt20\">\r\n                                            <tbody>\r\n\r\n                                                <tr>\r\n                                                    <td className=\"b-clr checkboxAdjust\">\r\n                                                        <div onClick={this.changeIncludeDefaultPropertyTo} >\r\n                                                            <input\r\n                                                                type=\"radio\" id=\"includeTo\" name=\"includeTo\" checked={this.state.includeTo} />\r\n                                                            <span class=\"accnt \">Include</span>\r\n\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr checkboxAdjust\">\r\n                                                        <div onClick={this.changeExcludeDefaultPropertyTo} >\r\n                                                            <input type=\"radio\" id=\"excludeTo\" name=\"excludeTo\" checked={this.state.excludeTo} />\r\n                                                            <span class=\"accnt \">Exclude</span>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                        <div>\r\n\r\n                                            {this.state.showMagicNumberTo === true ?\r\n                                                <div className=\"b-clr magicnumber\" style={{}}>\r\n                                                    <TagsInput\r\n                                                        onValidationReject={() => console.log('rejected')}\r\n                                                        validationRegex={/^[0-9]*$/}\r\n                                                        inputProps={{ placeholder: this.state.magicNumber.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumberTo\r\n                                                        } onChange={this.handleChangeMagicNumberTo}></TagsInput>\r\n                                                </div> : null}\r\n                                        </div>\r\n\r\n                                        <div className=\"text-center\">\r\n                                                <span > Ticket  </span>\r\n                                            </div>\r\n                                            <table className=\"table mt20\">\r\n                                                <tbody>\r\n\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr checkboxAdjust\">\r\n                                                            <div onClick={this.changeIncludeDefaultPropertyTicketTo} >\r\n                                                                <input\r\n                                                                    type=\"radio\" id=\"includeTicketTo\" name=\"includeTicketTo\" checked={this.state.includeTicketTo} />\r\n                                                                <span className=\"accnt \">Include</span>\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr checkboxAdjust text-center\">\r\n                                                            <div onClick={this.changeExcludeDefaultPropertyTicketTo} >\r\n                                                                <input type=\"radio\" id=\"excludeTicketTo\" name=\"excludeTicketTo\" checked={this.state.excludeTicketTo} />\r\n                                                                <span className=\"accnt \">Exclude</span>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                            <div>\r\n\r\n                                                {this.state.showTicketTo === true ?\r\n                                                    <div className=\"b-clr magicnumber\" style={{}}>\r\n                                                        <TagsInput\r\n                                                            onValidationReject={() => console.log('rejected')}\r\n                                                            validationRegex={/^[0-9]*$/}\r\n                                                            inputProps={{ placeholder: this.state.ticketTo.length > 0 ? \"\" : \" Enter Ticket\" }} type=\"number\" value={this.state.ticketTo\r\n                                                            } onChange={this.handleChangeTicketTo}></TagsInput>\r\n                                                    </div> : null}\r\n                                            </div> */}\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <hr></hr>\r\n                            <div className=\"chceckbox\">\r\n\r\n                                <label class=\"checkbox-inline\"><input type=\"checkbox\" checked={this.state.showCommission} onChange={this.handeChangeShowCommission} /><b>Add Commission</b></label>\r\n                            </div>\r\n\r\n\r\n\r\n                            {this.state.showCommission &&\r\n                                <div className=\"center-com d-flex\">\r\n                                    <div className=\"com\">\r\n                                        <h3 style={{ fontWeight: 'bold' }}>Commission</h3>\r\n\r\n                                    </div>\r\n                                    <table className=\"table mt20\">\r\n\r\n                                        <tbody>\r\n                                            <tr>\r\n\r\n                                                <td className=\"b-clr \">\r\n                                                    <span className=\"accnt\"> Account :</span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center\" style={{ width: '50%' }}>\r\n                                                    {this.renderCommissionAccount()}\r\n                                                    {(this.state.error == 'selectedCommissionAccount') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account </p>}\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n\r\n                            }\r\n                            <div className=\"save_button_filter\">\r\n                                <Button className=\"btn-primary savebutton\" variant=\"primary\" size=\"lg\" block onClick={(e) => this.formDataSubmit(e)}>\r\n                                    <b>Update</b>\r\n                                </Button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilterEdite;\r\n","import React, { Component } from 'react';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\r\nvar moment = require('moment');\r\n\r\nclass FilterDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            autoSyncClose: false,\r\n            exclude: false,\r\n            include: false,\r\n            excludeTo: false,\r\n            includeTo: false,\r\n            excludeTicket: false,\r\n            includeTicket: false,\r\n            excludeTicketTo: false,\r\n            includeTicketTo: false,\r\n            showMagicNumberFrom: false,\r\n            showMagicNumberTo: false,\r\n            showTicketFrom: false,\r\n            showTicketTo: false,\r\n        };\r\n    }\r\n    crossClick(e) {\r\n        e.preventDefault();\r\n        this.props.onHide()\r\n    }\r\n\r\n    componentDidMount() {\r\n        let data = this.props.data;\r\n        this.setState({\r\n            autoSyncClose: data.auto_close == 1 ? true : false,\r\n            include: data.from_include_exclude_status == 1 ? true : false,\r\n            exclude: data.from_include_exclude_status == 2 ? true : false,\r\n            includeTo: data.to_include_exclude_status == 1 ? true : false,\r\n            excludeTo: data.to_include_exclude_status == 2 ? true : false,\r\n            includeTicket: data.from_include_exclude_status_ticket == 1 ? true : false,\r\n            excludeTicket: data.from_include_exclude_status_ticket == 2 ? true : false,\r\n            includeTicketTo: data.to_include_exclude_status_ticket == 1 ? true : false,\r\n            excludeTicketTo: data.to_include_exclude_status_ticket == 2 ? true : false,\r\n            showMagicNumberFrom: data.from_include_exclude_status !== 0 ? true : false,\r\n            showMagicNumberTo:data.to_include_exclude_status !== 0? true: false,\r\n            showTicketFrom: data.from_include_exclude_status_ticket !== 0 ? true : false,\r\n            showTicketTo:data.to_include_exclude_status_ticket !== 0? true: false,\r\n        })\r\n\r\n    }\r\n\r\n    // componentWillMount = () => {\r\n    //     console.log(this.props,'props..................');\r\n    // }\r\n\r\n    render() {\r\n        let data = this.props.data;\r\n\r\n        let from_symbol = JSON.parse(data.from_symbols);\r\n        let to_symbol = JSON.parse(data.to_symbols);\r\n        from_symbol = from_symbol.join(', ');\r\n        to_symbol = to_symbol.join(', ');\r\n        return (\r\n            <div className=\"content\">\r\n                <Grid fluid>\r\n                    <div className=\"symbol-box\">\r\n                        <div className=\"cross_div\"><a onClick={(e) => this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\r\n                        <div className=\"detail-text\"><h3> {data.profile_name} </h3></div>\r\n                        <div className=\"synclose\">\r\n                            <label class=\"checkbox-inline\"><input type=\"checkbox\" checked={this.state.autoSyncClose} name=\"changeAutoSync\" /><b>Auto Sync Close</b></label>\r\n                        </div>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <div className=\"card\">\r\n                                    <div className=\"detail_account\" style={{ padding: '10px 20px 0px' }}>\r\n                                        <span style={{ fontWeight: 'bold' }}>Account A</span>\r\n                                    </div>\r\n                                    <table className=\"table mt20\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td className=\"b-clr\">\r\n                                                    <span>Account :</span>\r\n                                                </td>\r\n\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    {data.accountFromInfo[0].login}\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>From :  </span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center datepicker_filter\">\r\n                                                    {moment(data.startdateFrom).format(\"DD/MM/YYYY\")}\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>To :  </span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center datepicker_filter\">\r\n                                                    {data.enddateFrom !== null ? moment(data.enddateFrom).format(\"DD/MM/YYYY\") : \"-\"}\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>Symbol :  </span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    {from_symbol}\r\n                                                </td>\r\n                                            </tr>\r\n                                            {this.state.showMagicNumberFrom &&\r\n                                            <>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>Magic Number :  </span>\r\n                                                </td>\r\n\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    {data.from_magic_number}\r\n                                                </td>\r\n\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr dataAdjust\">\r\n                                                    <div onClick={this.changeIncludeDefaultProperty}>\r\n                                                        <input\r\n                                                            type=\"radio\" id=\"include\" name=\"include\" checked={this.state.include} />\r\n                                                        <span class=\"accnt \">Include</span>\r\n\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td className=\"b-clr \">\r\n                                                    <div onClick={this.changeExcludeDefaultProperty} >\r\n                                                        <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.exclude} />\r\n                                                        <span class=\"accnt \">Exclude</span>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                            </>}\r\n                                            {this.state.showTicketFrom &&\r\n                                            <>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>Ticket :  </span>\r\n                                                </td>\r\n\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    {data.from_ticket}\r\n                                                </td>\r\n\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr dataAdjust\">\r\n                                                    <div onClick={this.changeIncludeDefaultPropertyTicket}>\r\n                                                        <input\r\n                                                            type=\"radio\" id=\"includeTicket\" name=\"includeTicket\" checked={this.state.includeTicket} />\r\n                                                        <span class=\"accnt \">Include</span>\r\n\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td className=\"b-clr \">\r\n                                                    <div onClick={this.changeExcludeDefaultPropertyTicket} >\r\n                                                        <input type=\"radio\" id=\"excludeTicket\" name=\"excludeTicket\" checked={this.state.excludeTicket} />\r\n                                                        <span class=\"accnt \">Exclude</span>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                            </>}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </Col>\r\n                            <Col md={6}>\r\n                                <div className=\"card\">\r\n                                    <div className=\"detail_account\" style={{ padding: '10px 20px 0px' }}>\r\n                                        <span style={{ fontWeight: 'bold' }}>Account B</span>\r\n                                    </div>\r\n\r\n                                    <table className=\"table mt20\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>Account :</span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    {data.accountToInfo[0].login}\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>From :  </span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center datepicker_filter\">\r\n                                                    {moment(data.startdateTo).format(\"DD/MM/YYYY\")}\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>To :  </span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center datepicker_filter\">\r\n                                                    {data.enddateTo != null ? (moment(data.enddateTo).format(\"DD/MM/YYYY\")) : '-'}\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr\">\r\n                                                    <span>Symbol :  </span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    {to_symbol}\r\n                                                </td>\r\n                                            </tr>\r\n                                            {this.state.showMagicNumberTo &&\r\n                                                <>\r\n\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr\">\r\n                                                            <span>Magic Number :  </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                            {data.to_magic_number}\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n\r\n\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr checkboxAdjust\">\r\n                                                            <div onClick={this.changeIncludeDefaultPropertyTo} >\r\n                                                                <input\r\n                                                                    type=\"radio\" id=\"includeTo\" name=\"includeTO\" checked={this.state.includeTo} />\r\n                                                                <span class=\"accnt \">Include</span>\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr checkboxAdjust\">\r\n                                                            <div onClick={this.changeExcludeDefaultPropertyTo} >\r\n                                                                <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.excludeTo} />\r\n                                                                <span class=\"accnt \">Exclude</span>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </>}\r\n                                                {this.state.showTicketTo &&\r\n                                            <>\r\n                                                <tr>\r\n                                                        <td className=\"b-clr\">\r\n                                                            <span>Ticket :  </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                            {data.to_ticket}\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n\r\n\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr checkboxAdjust\">\r\n                                                            <div onClick={this.changeIncludeDefaultPropertyTicketTo} >\r\n                                                                <input\r\n                                                                    type=\"radio\" id=\"includeTicketTo\" name=\"includeTicketTo\" checked={this.state.includeTicketTo} />\r\n                                                                <span class=\"accnt \">Include</span>\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr checkboxAdjust\">\r\n                                                            <div onClick={this.changeExcludeDefaultPropertyTicketTo} >\r\n                                                                <input type=\"radio\" id=\"excludeTicketTo\" name=\"excludeTicketTo\" checked={this.state.excludeTicketTo} />\r\n                                                                <span class=\"accnt \">Exclude</span>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    </>}\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n\r\n                            </Col>\r\n                            {data.commission_acount_id !== 0 && <Col md={12}>\r\n                                <div className=\"card bottom\">\r\n                                    <div className=\"detail_account\" style={{ padding: '10px 20px 0px' }}>\r\n                                        <h3 style={{ fontWeight: 'bold' }}>Commission</h3>\r\n                                    </div>\r\n                                    <table className=\"table mt20\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    <span>Account :</span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    {data.accountCommissionInfo[0].login}\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n\r\n                            </Col>}\r\n                        </Row>\r\n\r\n                    </div>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilterDetail;\r\n\r\n","import React, { Component } from 'react';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\r\nimport Innerfilter from '../filter/innerfilter';\r\nimport FilterEdite from '../filter/filteredit';\r\nimport FilterDetail from '../filter/filterdetail';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport config from '../../constant/config.js';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { api } from 'api';\r\n\r\nconst axios = require('axios');\r\nvar moment = require('moment');\r\n\r\nclass Filterprofile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Innerfilter: false,\r\n            filter: true,\r\n            filterData: [],\r\n            deleteData: [],\r\n            editeData: [],\r\n            showDelete: false,\r\n            showEdit: false,\r\n            detailForm: false,\r\n            detailData: [],\r\n        };\r\n\r\n        // this.handleDropdownChange = this.handleDropdownChange.bind(this);\r\n    }\r\n    fetchfilterdata() {\r\n        let self = this;\r\n        axios.get(config.baseurl + '/filter/fetchfilterdata?page=1')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.setState({ filterData: response.data.rows })\r\n                }\r\n            })\r\n    }\r\n    showInnerfilter = () => {\r\n        this.setState({ Innerfilter: true, filter: false })\r\n    }\r\n    componentDidMount() {\r\n        this.fetchfilterdata();\r\n        // let self = this;\r\n        // axios.get(config.baseurl + '/filter/fetchfilterdata')\r\n        //     .then(function (response) {\r\n        //         if (response.status == 200) {\r\n        //             self.setState({ filterData: response.data.rows })\r\n        //         }\r\n        //     }) adfasdfsd\r\n    }\r\n\r\n\r\n    createNotification = (profile_name, type) => {\r\n        NotificationManager.listNotify = [];\r\n        NotificationManager.info('Profile Is Activated !', profile_name);\r\n    }\r\n\r\n    createWariningNotification = (profile_name, type) => {\r\n        NotificationManager.listNotify = [];\r\n        NotificationManager.error('Profile Is Deactivated !', profile_name);\r\n    }\r\n\r\n    activateClick(e, data) {\r\n        e.preventDefault();\r\n        let Data = {\r\n            id: data.id,\r\n            status: 1\r\n        }\r\n        let self = this;\r\n        axios.post(config.baseurl + '/filter/updatefilterdata', Data)\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.fetchfilterdata();\r\n                    self.createNotification(data.profile_name, 'info');\r\n                    // self.setState({ filterData: response.data.rows })\r\n                    api()\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    //  App(){\r\n    //     const notify = () => toast(\"Wow so easy !\");\r\n\r\n    //     return (\r\n    //       <div>\r\n    //         <button onClick={notify}>Notify !</button>\r\n    //         <ToastContainer />\r\n    //       </div>\r\n    //     );\r\n    //   }\r\n\r\n    deactivateClick(e, data) {\r\n        e.preventDefault();\r\n        let Data = {\r\n            id: data.id,\r\n            status: 0\r\n        }\r\n        let self = this;\r\n        axios.post(config.baseurl + '/filter/updatefilterdata', Data)\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.fetchfilterdata();\r\n                    self.createWariningNotification(data.profile_name, 'error');\r\n                    // self.setState({ filterData: response.data.rows })\r\n                }\r\n            })\r\n    }\r\n    editFilter = (e, data) => {\r\n        // e.preventDefault();\r\n        if (this.state.endDate == null || this.state.endDate == '') {\r\n            let newDate = new Date();\r\n            this.setState({endDate: newDate })\r\n            return\r\n        }\r\n        this.setState({ showEdit: true, editeData: data })\r\n\r\n    }\r\n\r\n    deleteFilter(e, data) {\r\n        e.preventDefault();\r\n        this.setState({ deleteData: data, showDelete: true })\r\n\r\n    }\r\n    deletepopupClick(e) {\r\n        e.preventDefault();\r\n        let Data = {\r\n            id: this.state.deleteData.id\r\n        }\r\n        let self = this;\r\n        axios.post(config.baseurl + '/filter/deletefilter', Data)\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.setState({ showDelete: false })\r\n                    self.fetchfilterdata();\r\n                }\r\n            })\r\n    }\r\n    deletepopupclose(e) {\r\n        e.preventDefault();\r\n        this.setState({ showDelete: false })\r\n    }\r\n    viewFilter(e, data) {\r\n        e.preventDefault();\r\n\r\n        this.setState({ detailForm: true, detailData: data })\r\n    }\r\n\r\n    createTr = () => {\r\n        return this.state.filterData.length > 0 && this.state.filterData.map((item, index) => {\r\n            return (\r\n                <tr key={index}>\r\n                    <th scope=\"row\">{index + 1}</th>\r\n                    <td>{item.profile_name}</td>\r\n                    <td>{moment(item.createdAt).format(\"DD/MM/YYYY\")}</td>\r\n                    {/* <td>{item.status == 1 ? 'Activated' : 'Deactivated' }</td> */}\r\n                    <td>{item.status == 0 ?\r\n                        <div className=\"activate_button pointer\"><span className=\"button_interactivate btcolor\" onClick={(e) => this.activateClick(e, item)}> Activate </span> </div>\r\n                        :\r\n                        <div className=\"deactivate_button pointer\"><span className=\"button_deactivate pointer\" onClick={(e) => this.deactivateClick(e, item)}>Deactivate</span></div>}</td>\r\n                    <td>\r\n                        <span onClick={(e) => this.viewFilter(e, item)}><i className=\"pointer fa fa-eye facolor\" aria-hidden=\"true\"></i></span>\r\n                        <span onClick={(e) => this.editFilter(e, item)}><i className=\"pointer fa fa-pencil-square-o facolor\" aria-hidden=\"true\"></i></span>\r\n                        {item.status == 0 &&\r\n                            <span onClick={(e) => this.deleteFilter(e, item)}><i className=\"pointer fa fa-trash facolor\" aria-hidden=\"true\"></i></span>\r\n                        }\r\n                    </td>\r\n                    {/* <td>{item.accountToInfo[0].login}</td>\r\n                    <td>{moment(item.startdateFrom).format(\"DD/MM/YYYY\") + ' - ' + moment(item.enddateFrom).format(\"DD/MM/YYYY\")}</td>\r\n                    <td>{moment(item.startdateTo).format(\"DD/MM/YYYY\") + ' - ' + moment(item.enddateTo).format(\"DD/MM/YYYY\")}</td>\r\n                    <td>{item.from_symbols}</td>\r\n                    <td>{item.to_symbols}</td> */}\r\n                    {/* <td style={{fontWeight:600}}>{item.status == 1 && 'Connected'}</td> */}\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <NotificationContainer />\r\n                <div className=\"content\">\r\n                    {this.state.detailForm ?\r\n                        <FilterDetail\r\n                            data={this.state.detailData}\r\n                            show={this.state.detailForm}\r\n                            onHide={() => this.setState({ detailForm: false })}\r\n                        />\r\n                        :\r\n                        <>\r\n                            {this.state.showEdit ?\r\n                                <FilterEdite\r\n                                    data={this.state.editeData}\r\n                                    show={this.state.showEdit}\r\n                                    // onHide={() => this.setState({ showEdit: false })}\r\n                                    onHide={() => this.setState({ showEdit: false }, () => this.fetchfilterdata())}\r\n                                />\r\n                                :\r\n                                <>\r\n                                    {!this.state.Innerfilter &&\r\n                                        <Grid fluid>\r\n                                            <div className=\"selection-box\">\r\n                                                <span className=\"terminal-text\"> Profiles </span>\r\n\r\n                                                {/* <span className=\"icon-style\">\r\n                            <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\r\n                        </span> */}\r\n                                                {/* <Link to=\"/innerfilter\">\r\n                       <button className=\"pull-right\">Add New</button>\r\n                       </Link> */}\r\n\r\n                                                {/* <Link to=\"/admin/innerfilter\">\r\n                       <button className=\"pull-right\">abc</button>\r\n                       </Link> */}\r\n                                            </div>\r\n                                            <button className=\"pull-right filter-add-button\" onClick={this.showInnerfilter}>Add New</button>\r\n\r\n                                        </Grid>\r\n                                    }\r\n                                    {\r\n                                        this.state.Innerfilter ?\r\n                                            <Innerfilter\r\n                                                show={this.state.Innerfilter}\r\n                                                onHide={() => this.setState({ Innerfilter: false }, () => {\r\n                                                    this.fetchfilterdata();\r\n                                                })}\r\n                                            />\r\n                                            :\r\n                                            <div style={{ background: '#ffffff' }}>\r\n                                                <Row>\r\n                                                    <Col md={12}>\r\n                                                        <div style={{ padding: '10px' }}>\r\n                                                            <table className=\"table table-striped\">\r\n                                                                <thead>\r\n                                                                    <tr>\r\n                                                                        <th scope=\"col\">Sr.No.</th>\r\n                                                                        <th scope=\"col\">Profile Name</th>\r\n                                                                        <th scope=\"col\">Created At</th>\r\n                                                                        <th scope=\"col\">Status</th>\r\n                                                                        <th scope=\"col\">Action</th>\r\n                                                                    </tr>\r\n                                                                </thead>\r\n                                                                <tbody>\r\n                                                                    {/* {this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => { */}\r\n\r\n                                                                    {this.createTr()}\r\n                                                                    {/* })} */}\r\n                                                                    {/* <tr>\r\n                                                <th scope=\"row\">2</th>\r\n                                                <td>Jacob</td>\r\n                                                <td>Thornton</td>\r\n                                                <td>5.1.2.9</td>\r\n                                                <td>Connected</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th scope=\"row\">3</th>\r\n                                                <td>Larry</td>\r\n                                                <td>the Bird</td>\r\n                                                <td>ab@123</td>\r\n                                                <td>Connected</td>\r\n                                            </tr> */}\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </div>\r\n                                        //     <div className=\"filter_page_table\">\r\n                                        //     <table className=\"table table-striped\">\r\n                                        //         <thead>\r\n                                        //             <tr>\r\n                                        //                 <th scope=\"col\">Sr.No.</th>\r\n                                        //                 <th scope=\"col\">Profile Name</th>\r\n                                        //                 <th scope=\"col\">Created At</th>\r\n                                        //                 <th scope=\"col\">Status</th>\r\n                                        //                 <th scope=\"col\">Action</th>\r\n                                        //             </tr>\r\n                                        //         </thead>\r\n                                        //         <tbody>\r\n                                        //             {this.createTr()}\r\n                                        //         </tbody>\r\n                                        //     </table>\r\n\r\n                                        // </div>\r\n\r\n                                    }\r\n\r\n                                    {this.state.showDelete &&\r\n                                        <div className=\"delete_popup\">\r\n                                            <h3>Are you sure ?</h3>\r\n                                            <span className=\"pointer dltbtn\" onClick={(e) => this.deletepopupClick(e)}>Delete</span>\r\n                                            <span className=\"pointer closebtn\" onClick={(e) => this.deletepopupclose(e)}>Close</span>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            }\r\n                        </>\r\n                    }\r\n\r\n\r\n\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Filterprofile;\r\n","import React from 'react';\r\nimport { MDBDataTable } from 'mdbreact';\r\nconst moment = require(\"moment\");\r\n\r\nconst DatatablePage = (props) => {\r\n    \r\n    const data = {\r\n        columns: [\r\n            {\r\n                label: 'Date',\r\n                field: 'date',\r\n                sort: 'asc',\r\n                width: 100\r\n            },\r\n            {\r\n                label: 'Login',\r\n                field: 'account_login',\r\n                sort: 'asc',\r\n                width: 100\r\n            },\r\n            {\r\n                label: 'Symbol',\r\n                field: 'symbol',\r\n                sort: 'asc',\r\n                width: 100\r\n            },\r\n            {\r\n                label: 'Long',\r\n                field: 'swap_long',\r\n                sort: 'asc',\r\n                width: 100\r\n            },\r\n            {\r\n                label: 'Short',\r\n                field: 'swap_short',\r\n                sort: 'asc',\r\n                width: 100\r\n            },\r\n            \r\n        ],\r\n        \r\n        rows: props.data.map(data => {\r\n            data.date = moment(data.date).format('L')\r\n            data.swap_long = Number.parseFloat(data.swap_long).toFixed(2);\r\n            data.swap_short = Number.parseFloat(data.swap_short).toFixed(2);\r\n            \r\n            return data\r\n        }\r\n            )\r\n    };\r\n    \r\n    return <MDBDataTable responsive bordered small data={data} />;\r\n}\r\nexport default DatatablePage;","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Col, Row } from \"reactstrap\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport myInitObject from \"../../api\";\r\nimport DatatablePage from \"views/DatatablePage\";\r\nimport DatePicker from \"react-datepicker\";\r\nconst moment = require(\"moment\");\r\nconst Swap = () => {\r\n  const [dailySwap, setdailySwap] = useState([]);\r\n  const [loading, setloading] = useState([]);\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      if (myInitObject.responsDS === undefined) {\r\n        console.log(\"no data\");\r\n      } else {\r\n        setloading(myInitObject.fetchdailyswaps === 0 ? true : false);\r\n        setdailySwap(myInitObject.fetchdailyswaps.rows);\r\n      }\r\n    }, 1000);\r\n\r\n  }, []);\r\n\r\n  let sd = moment(startDate).format(\"DD-MM-yyyy\");\r\n  let ed = moment(endDate).format(\"DD-MM-yyyy\");\r\n  let result = dailySwap.filter((d) => {\r\n    var time = moment(d.date).format(\"DD-MM-yyyy\");\r\n    if ((sd === 'Invalid date' && ed === 'Invalid date')) {\r\n      return dailySwap\r\n    }\r\n    else if ((sd !== 'Invalid date' && ed === 'Invalid date')) {\r\n      return (time >= sd)\r\n    }\r\n    else if ((sd === 'Invalid date' && ed !== 'Invalid date')) {\r\n      return (time <= ed)\r\n    }\r\n    if (time >= sd && time <= ed) {\r\n      return d;\r\n    }\r\n    //  return (sd <= time && time <= ed);\r\n  });\r\n\r\n  console.log(sd, ed, result, \"/////////\");\r\n  return (\r\n    <Container fluid>\r\n      <div className=\"pad-y\">\r\n        <div className=\"symbol-box\" style={{ marginBottom: \"20px\" }}>\r\n          <div className=\"openpositions\">\r\n            <span className=\"p-text\">Daily Swaps</span>\r\n          </div>\r\n        </div>\r\n        {loading ? (\r\n          <Loader\r\n            type=\"ThreeDots\"\r\n            color=\"black\"\r\n            height={100}\r\n            width={100}\r\n            style={{ textAlign: \"center\" }}\r\n          />\r\n        ) : (\r\n            <div className=\"symbol-box\">\r\n              <Row>\r\n                <Col md={12} className=\"filter-date\">\r\n                  <DatePicker\r\n                    selected={startDate}\r\n                    onChange={(date) => setStartDate(date)}\r\n                    selectsStart\r\n                    placeholderText=\"mm-dd-yyyy\"\r\n                    dateFormat=\"MM-dd-yyyy\"\r\n                    startDate={startDate}\r\n                    endDate={endDate}\r\n                  />\r\n                  <DatePicker\r\n                    selected={endDate}\r\n                    onChange={(date) => setEndDate(date)}\r\n                    selectsEnd\r\n                    placeholderText=\"mm-dd-yyyy\"\r\n                    dateFormat=\"MM-dd-yyyy\"\r\n                    startDate={startDate}\r\n                    endDate={endDate}\r\n                    minDate={startDate}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <DatatablePage data={result} />\r\n              {/* <select onChange={(e) => setSortType(e.target.value)}>\r\n              <option value=\"default\">Select Order</option>\r\n              <option value=\"date\">Date</option>\r\n              <option value=\"account_login\">Login</option>\r\n              <option value=\"symbol\">Symbol</option>\r\n              <option value=\"swap_long\">Swap Long</option>\r\n              <option value=\"swap_short\">Swap Short</option>\r\n            </select>\r\n            <table className=\"table table-responsive table-bordered border-bottom-0 align-th\">\r\n              <thead>\r\n                <tr className=\"text-center thUnset\">\r\n                  <th>Date</th>\r\n                  <th>Login</th>\r\n                  <th>Symbol</th>\r\n                  <th>Long</th>\r\n                  <th>Short</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {dailySwap.length === 0 ? (\r\n                  <tr className=\"text-center\">\r\n                    <td colSpan=\"5\">No Data</td>\r\n                  </tr>\r\n                ) : (\r\n                  dailySwap.map((item) => (\r\n                    <tr key={item.id} className=\"text-center\">\r\n                      <td>\r\n                        {moment(item.date).utc().format(\"DD-MM-YYYY HH:mm:ss\")}\r\n                      </td>\r\n                      <td>{item.account_login}</td>\r\n                      <td>{item.symbol}</td>\r\n                      <td\r\n                        style={{\r\n                          color: `${item.swap_long > 0 ? \"green\" : \"red\"}`,\r\n                        }}\r\n                      >\r\n                        <NumberFormat\r\n                          value={item.swap_long}\r\n                          displayType={\"text\"}\r\n                          thousandSeparator={true}\r\n                          decimalScale={2}\r\n                        />\r\n                      </td>\r\n                      <td\r\n                        style={{\r\n                          color: `${item.swap_short > 0 ? \"green\" : \"red\"}`,\r\n                        }}\r\n                      >\r\n                        <NumberFormat\r\n                          value={item.swap_short}\r\n                          displayType={\"text\"}\r\n                          thousandSeparator={true}\r\n                          decimalScale={2}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                )}\r\n              </tbody>\r\n            </table> */}\r\n            </div>\r\n          )}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Swap;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\r\nimport NumberFormat from 'react-number-format';\r\nimport { Collapse } from 'reactstrap';\r\nimport TableList from '../TableList'\r\nimport config from '../../constant/config.js';\r\nimport DatatablePage from '../DatatablePage';\r\nimport Loader from 'react-loader-spinner'\r\nimport { api } from '../../api'\r\nimport myInitObject from '../../api'\r\nconst axios = require('axios');\r\nconst moment = require('moment');\r\nlet dataTOtalcloseFrom = {\r\n    comissionTotal: 0,\r\n    lotsTotal: 0,\r\n    profitTotal: 0,\r\n    swapTotal: 0\r\n};\r\nlet dataTotalClosetTo = {\r\n    comissionTotal: 0,\r\n    lotsTotal: 0,\r\n    profitTotal: 0,\r\n    swapTotal: 0\r\n};\r\nlet dataTOtalOpenTo = {\r\n    comissionTotal: 0,\r\n    lotsTotal: 0,\r\n    profitTotal: 0,\r\n    swapTotal: 0\r\n};\r\nlet dataTOtalOpenFrom = {\r\n    comissionTotal: 0,\r\n    lotsTotal: 0,\r\n    profitTotal: 0,\r\n    swapTotal: 0\r\n}\r\nexport default function Calculating(props) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const toggle = () => { setIsOpen(!isOpen); setIsOpen2(false); setIsOpen3(false) };\r\n    const [isOpen2, setIsOpen2] = useState(true);\r\n    const [errormassage, setIErrormassage] = useState(false);\r\n    const toggle2 = () => { setIsOpen2(!isOpen2); setIsOpen(false); setIsOpen3(false) };\r\n    const [isOpen3, setIsOpen3] = useState(false);\r\n    const toggle3 = () => { setIsOpen3(!isOpen3); setIsOpen(false); setIsOpen2(false) };\r\n\r\n    const [fromAccountId, setFromAccountId] = useState(\"\");\r\n    const [toAccountId, setToAccountId] = useState(\"\");\r\n    const [fromOpenTrade, setFromOpenTrade] = useState([]);\r\n    const [toOpenTrade, setToOpenTrade] = useState([]);\r\n    const [fromHistoryTrade, setFromHistoryTrade] = useState([]);\r\n    const [toHistoryTrade, setToHistoryTrade] = useState([]);\r\n    const [commissionDetails, setCommissionDetails] = useState([]);\r\n    const [openTotal, setopenTotal] = useState();\r\n    const [historyTotal, sethistoryTotal] = useState();\r\n    const [totalOpenAndHistory, settotalOpenAndHistory] = useState();\r\n    const [commissionValue, setCommissionValue] = useState({});\r\n    const [dateTime, setdateTime] = useState('')\r\n    const [customSwap, setcustomSwap] = useState([]);\r\n    const [loading, setLoading] = useState(true)\r\n    const [allHistoryRecord, setallHistoryRecord] = useState([])\r\n    const [activeProfileName, setactiveProfileName] = useState('')\r\n\r\n\r\n    useEffect(() => {\r\n         setInterval(() => {\r\n            if ((myInitObject.responsLUT &&\r\n                myInitObject.responsCOT &&\r\n                myInitObject.responsCHT &&\r\n                myInitObject.responsCC &&\r\n                myInitObject.responsHT &&\r\n                myInitObject.responsAF) === undefined) {\r\n                console.log('no data');\r\n            } else {\r\n                \r\n                //calculate open Trade\r\n                setIErrormassage(myInitObject.calculatingOpenTrade === 0 ? (!errormassage) : false);\r\n                setFromAccountId(myInitObject.calculatingOpenTrade.rows.accountFromInfo[0])\r\n                setToAccountId(myInitObject.calculatingOpenTrade.rows.accountToInfo[0])\r\n                setFromOpenTrade(myInitObject.calculatingOpenTrade.fromOpenOrderInfo)\r\n                setToOpenTrade(myInitObject.calculatingOpenTrade.toOpenOrderInfo)\r\n                setopenTotal(myInitObject.calculatingOpenTrade.totalOfOpenOrder)\r\n                //calculate history trade\r\n                setLoading(myInitObject.calculatingHistoryTrade ? false : true)\r\n                setFromHistoryTrade(myInitObject.calculatingHistoryTrade.fromHistoryOrderInfo)\r\n                setToHistoryTrade(myInitObject.calculatingHistoryTrade.toHistoryOrderInfo)\r\n                setcustomSwap(myInitObject.calculatingHistoryTrade.customSwapTable)\r\n                sethistoryTotal(myInitObject.calculatingHistoryTrade.totalOfHistoryOrder);\r\n                setCommissionDetails(myInitObject.calculatingHistoryTrade.newCommissionRecord)\r\n                //calculate commission\r\n                setCommissionValue(myInitObject.calculatingCommission)\r\n                //last update time\r\n                setdateTime(myInitObject.fetchLastUpdatedTime.filteredInfoTime)\r\n                //fetch all history trade\r\n                setallHistoryRecord(myInitObject.fetchAllHistoryTrade.rows)\r\n                //fetch status data\r\n                setactiveProfileName(myInitObject.fetchActivefilterdata.rows[0].profile_name)\r\n               \r\n            }\r\n        }, 1000)\r\n        // fetchLastUpdatedTime()\r\n        // let fromAccountId;\r\n        // let toAccountId;\r\n        // let fromOpenTrade;\r\n        // let toOpenTrade;\r\n        // let fromHistoryTrade;\r\n        // let toHistoryTrade;\r\n        // let openTotal;\r\n        // let historyTotal;\r\n        // let commissionDetails;\r\n        // let customSwap;\r\n        // axios.get(config.baseurl + '/profilepositions/calculatingOpenTrade')\r\n        //     .then(function (response) {\r\n        //         console.log(response, \"response -------------->\")\r\n        //         if (response.status == 200) {\r\n        //             if (response.data.rows == 0) {\r\n\r\n        //                 setIErrormassage((!errormassage));\r\n\r\n        //             }\r\n        //             fromAccountId = response.data.rows.accountFromInfo[0];\r\n        //             toAccountId = response.data.rows.accountToInfo[0];\r\n        //             fromOpenTrade = response.data.fromOpenOrderInfo;\r\n        //             // fromOpenTrade.map((data) => {\r\n\r\n        //             //     data.open_time = moment(data.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')\r\n        //             // })\r\n\r\n        //             toOpenTrade = response.data.toOpenOrderInfo;\r\n        //             // toOpenTrade.map((data) => {\r\n        //             //     data.open_time = moment(data.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')\r\n        //             // })\r\n        //             // openTotal = response.data.totalOfOpenOrder;\r\n\r\n\r\n\r\n        //             axios.get(config.baseurl + '/profilepositions/calculatingHistoryTrade')\r\n        //                 .then(function (response) {\r\n\r\n        //                     if (response.status == 200) {\r\n        //                         setLoading(false)\r\n        //                         fromHistoryTrade = response.data.fromHistoryOrderInfo;\r\n        //                         toHistoryTrade = response.data.toHistoryOrderInfo;\r\n        //                         customSwap = response.data.customSwapTable\r\n\r\n        //                         console.log(toHistoryTrade, \"toHistoryTrade =========>\")\r\n        //                         // fromHistoryTrade.map((data) => {\r\n\r\n        //                         //     data.open_time = moment(data.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')\r\n        //                         //     data.close_time = moment(data.close_time).utc().format('DD-MM-YYYY  HH:mm:ss')\r\n\r\n        //                         // })\r\n\r\n\r\n        //                         // toHistoryTrade.map((data) => {\r\n        //                         //     data.open_time = moment(data.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')\r\n        //                         //     data.close_time = moment(data.close_time).utc().format('DD-MM-YYYY  HH:mm:ss')\r\n\r\n        //                         // })\r\n        //                         historyTotal = response.data.totalOfHistoryOrder;\r\n        //                         commissionDetails = response.data.newCommissionRecord\r\n\r\n        //                         axios.get(config.baseurl + '/profilepositions/calculatingCommission')\r\n        //                             .then(function (response) {\r\n\r\n        //                                 if (response.status == 200) {\r\n        //                                     // console.log(\"jhkfkjjkldwkjdwjkdwkbdwjhkwirvbwjh\");\r\n        //                                     setFromAccountId(fromAccountId);\r\n        //                                     setToAccountId(toAccountId);\r\n        //                                     setFromOpenTrade(fromOpenTrade);\r\n        //                                     setToOpenTrade(toOpenTrade);\r\n        //                                     setFromHistoryTrade(fromHistoryTrade);\r\n        //                                     setToHistoryTrade(toHistoryTrade);\r\n        //                                     setCommissionDetails(commissionDetails);\r\n        //                                     setopenTotal(openTotal);\r\n        //                                     sethistoryTotal(historyTotal);\r\n        //                                     settotalOpenAndHistory(historyTotal + openTotal + response.data.commission);\r\n        //                                     setCommissionValue(response.data);\r\n        //                                     setcustomSwap(customSwap)\r\n\r\n        //                                 }\r\n\r\n        //                             })\r\n        //                             .catch(function (error) {\r\n        //                             });\r\n        //                     }\r\n        //                 })\r\n        //                 .catch(function (error) {\r\n        //                 });\r\n        //         }\r\n        //     })\r\n        //     .catch(function (error) {\r\n        //     });\r\n    }, []);\r\n    // const fetchLastUpdatedTime = () => {\r\n    //     let self = this;\r\n    //     axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\r\n    //         .then(function (response) {\r\n    //             if (response.status == 200) {\r\n    //                 setdateTime(response.data.filteredInfoTime)\r\n    //                 // console.log(self.state.dataOpenTrade.accountFromInfo,\"outyfjhkjh\");\r\n    //             }\r\n    //         });\r\n    // }\r\n    let total = { openTotal } + { historyTotal }\r\n\r\n\r\n    let openFromOrderTotal = 0;\r\n    const fromOpenTradeTr = () => {//1//\r\n        let lotsTotal = 0;\r\n        // let open_Total = 0;\r\n        let comissionTotal = 0;\r\n        let profitTotal = 0;\r\n        let swapTotal = 0;\r\n        let contractSizeTotal = 0;\r\n        let openpricetotal = 0;\r\n        // console.log(fromOpenTrade, '1==================<>');\r\n        return fromOpenTrade.length > 0 && fromOpenTrade.map((item, index) => {\r\n\r\n            // customSwap.map((data) => {\r\n\r\n            //     if (data.account_id == item.account_id) {\r\n            //         item.swap = item.swap + data.open_value\r\n            //     }\r\n            // })\r\n            lotsTotal += item.lots;\r\n            comissionTotal += item.commission;\r\n            profitTotal += item.profit;\r\n            openFromOrderTotal = comissionTotal + profitTotal + swapTotal\r\n            contractSizeTotal += item.contract_size\r\n            openpricetotal += item.open_price\r\n            swapTotal += item.swap;\r\n            // console.log(openOrderTotal,'openOrderTotal----------');\r\n            {/* open_time,type,symbol,lot,contract_size,open_price,commission,swap,profit */ }\r\n            if (index == fromOpenTrade.length - 1) {\r\n                let a = {\r\n                    lotsTotal: lotsTotal,\r\n                    comissionTotal: comissionTotal,\r\n                    profitTotal: profitTotal,\r\n                    swapTotal: swapTotal\r\n                }\r\n                dataTOtalOpenFrom = a\r\n                // console.log(dataTOtalOpenFrom, 'data==========>>>>');\r\n                return (\r\n                    <><tr key={index} className=\" text-center\" style={{ background: item.order_type == 0 ? \"rgb(189 179 179 / 43%)\" : item.order_type == 1 ? \"rgb(181 178 178 / 21%)\" : \" \" }}>\r\n                        <td className=\"text-center colorDarkBlue no-padding \">{fromAccountId.login}</td>\r\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\r\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\r\n                        <td>{item.symbol}</td>\r\n                        <td>{item.lots}</td>\r\n                        <td>{item.order_type == 0 ? item.lots*item.contract_size : item.order_type == 1 ? - item.lots*item.contract_size : item.lots*item.contract_size}</td>\r\n                        <td>{item.open_price}</td>\r\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\r\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\r\n                        {/* <td>{item.magic_number !== 0 ? item.magic_number : ''}</td> */}\r\n                        <td>{item.profit}\r\n                            {/* {item.margin_currency} */}\r\n                        </td>\r\n\r\n                    </tr>\r\n                        <tr className=\"text-center\" key={index + 1}>\r\n                            <td className=\"buycolor\"><b>Total Buy Positions</b></td>\r\n                            <td></td>\r\n\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td><b>{lotsTotal.toFixed(2)}</b></td>\r\n                            <td></td>\r\n                            <td> </td>\r\n                            <td><b>{comissionTotal.toFixed(2)}</b></td>\r\n                            <td><b>{swapTotal.toFixed(2)}</b></td>\r\n\r\n                            <td><b>{profitTotal.toFixed(2)}</b></td>\r\n                        </tr>\r\n                    </>\r\n                )\r\n            } else {\r\n                return (\r\n                    <tr key={index} className=\"text-center\" style={{ background: item.order_type == 0 ? \"rgb(189 179 179 / 43%)\" : item.order_type == 1 ? \"rgb(181 178 178 / 21%)\" : \" \" }}>\r\n                        <td className=\"text-center colorDarkBlue no-padding \">{fromAccountId.login}</td>\r\n\r\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\r\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\r\n                        <td>{item.symbol}</td>\r\n                        <td>{item.lots}</td>\r\n                        <td>{item.order_type == 0 ? item.lots*item.contract_size : item.order_type == 1 ? - item.lots*item.contract_size : item.lots*item.contract_size}</td>\r\n                        <td>{item.open_price}</td>\r\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\r\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\r\n                        {/* <td>{item.magic_number !== 0 ? item.magic_number : ''}</td> */}\r\n                        <td>{item.profit}\r\n                            {/* {item.margin_currency} */}\r\n                        </td>\r\n\r\n\r\n                    </tr>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    let openFromHistoryTotal\r\n    const fromHistoryTradeTr = () => {//2//\r\n        let lotsTotal = 0;\r\n        let comissionTotal = 0;\r\n        let profitTotal = 0;\r\n        let swapTotal = 0;\r\n        let contractSizeTotal = 0;\r\n        let openpricetotal = 0;\r\n        let closepricetotal = 0;\r\n        // console.log(fromHistoryTrade, '2==================<>');\r\n        return fromHistoryTrade.length > 0 && fromHistoryTrade.map((item, index) => {\r\n            // customSwap.map((data) => {\r\n\r\n            //     if (data.account_id == item.account_id) {\r\n            //         item.swap = item.swap + data.open_value\r\n            //     }\r\n            // })\r\n\r\n            lotsTotal += item.lots;\r\n            comissionTotal += item.commission;\r\n            profitTotal += item.profit;\r\n            swapTotal += item.swap;\r\n            openFromHistoryTotal = comissionTotal + profitTotal + swapTotal;\r\n            contractSizeTotal += item.contract_size\r\n            openpricetotal += item.open_price;\r\n            closepricetotal += item.close_price\r\n\r\n            if (index == fromHistoryTrade.length - 1) {\r\n                let a = {\r\n                    lotsTotal: lotsTotal,\r\n                    comissionTotal: comissionTotal,\r\n                    profitTotal: profitTotal,\r\n                    swapTotal: swapTotal\r\n                }\r\n                dataTOtalcloseFrom = a\r\n                // console.log(dataTOtalcloseFrom, 'data2==========>>>>');\r\n                return (\r\n                    <><tr key={index} className=\"text-center\" style={{ background: item.order_type == 0 ? \"rgb(189 179 179 / 43%)\" : item.order_type == 1 ? \"rgb(181 178 178 / 21%)\" : \" \" }}>\r\n\r\n                        <td className=\"text-center colorDarkBlue no-padding\">{fromAccountId.login}</td>\r\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\r\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\r\n                        <td>{item.symbol}</td>\r\n                        <td>{item.lots}</td>\r\n                        <td>{item.order_type == 0 ? item.lots*item.contract_size : item.order_type == 1 ? - item.lots*item.contract_size : item.lots*item.contract_size}</td>\r\n                        <td>{item.open_price}</td>\r\n                        <td>{moment(item.close_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\r\n                        <td>{item.close_price}</td>\r\n\r\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\r\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\r\n                        <td>{item.profit}\r\n                            {/* {item.margin_currency} */}\r\n                        </td>\r\n\r\n                    </tr>\r\n                        <tr className=\"text-center\" key={index + 1}>\r\n                            <td className=\"buycolor\"><b>Total Buy Positions</b></td>\r\n                            <td></td>\r\n\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td ><b>{lotsTotal.toFixed(2)}</b></td>\r\n                            <td></td>\r\n\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n\r\n                            <td><b>{comissionTotal.toFixed(2)}</b></td>\r\n                            <td><b>{swapTotal.toFixed(2)}</b></td>\r\n                            {/* <td></td> */}\r\n\r\n                            <td><b>{profitTotal.toFixed(2)}</b></td>\r\n                        </tr>\r\n                    </>\r\n                )\r\n            } else {\r\n                return (\r\n                    <tr key={index} className=\"text-center\" style={{ background: item.order_type == 0 ? \"rgb(189 179 179 / 43%)\" : item.order_type == 1 ? \"rgb(181 178 178 / 21%)\" : \" \" }}>\r\n                        <td className=\"text-center colorDarkBlue no-padding\">{fromAccountId.login}</td>\r\n\r\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\r\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\r\n                        <td>{item.symbol}</td>\r\n                        <td>{item.lots}</td>\r\n                        <td>{item.order_type == 0 ? item.lots*item.contract_size : item.order_type == 1 ? - item.lots*item.contract_size : item.lots*item.contract_size}</td>\r\n                        <td>{item.open_price}</td>\r\n                        <td>{moment(item.close_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\r\n                        <td>{item.close_price}</td>\r\n\r\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\r\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\r\n\r\n                        <td>{item.profit}\r\n                            {/* {item.margin_currency} */}\r\n                        </td>\r\n\r\n                    </tr>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    let openToOrderTotal\r\n    const toOpenTradeTr = () => {//3//\r\n        let lotsTotal = 0;\r\n        let comissionTotal = 0;\r\n        let profitTotal = 0;\r\n        let swapTotal = 0;\r\n        let contractSizeTotal = 0;\r\n        let openpricetotal = 0;\r\n        // console.log(toOpenTrade, '3==================<>');\r\n        return toOpenTrade.length > 0 && toOpenTrade.map((item, index) => {\r\n\r\n            lotsTotal += item.lots;\r\n            comissionTotal += item.commission;\r\n            profitTotal += item.profit;\r\n            swapTotal += item.swap;\r\n            openToOrderTotal = comissionTotal + profitTotal + swapTotal\r\n            contractSizeTotal += item.contract_size\r\n            openpricetotal += item.open_price\r\n            if (index == toOpenTrade.length - 1) {\r\n                let a = {\r\n                    lotsTotal: lotsTotal,\r\n                    comissionTotal: comissionTotal,\r\n                    profitTotal: profitTotal,\r\n                    swapTotal: swapTotal\r\n                }\r\n                dataTOtalOpenTo = a\r\n                // console.log(dataTOtalOpenTo, 'data3==========>>>>');\r\n                return (\r\n                    <><tr key={index} className=\"text-center\" style={{ background: item.order_type == 0 ? \"rgb(189 179 179 / 43%)\" : item.order_type == 1 ? \"rgb(181 178 178 / 21%)\" : \" \" }}>\r\n                        <td className=\"text-center color2 no-padding\">{toAccountId.login}</td>\r\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\r\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\r\n                        <td>{item.symbol}</td>\r\n                        <td>{item.lots}</td>\r\n                        <td>{item.order_type == 0 ? item.lots*item.contract_size : item.order_type == 1 ? - item.lots*item.contract_size : item.lots*item.contract_size}</td>\r\n                        <td>{item.open_price}</td>\r\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\r\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\r\n                        {/* <td>{item.magic_number !== 0 ? item.magic_number : ''}</td> */}\r\n                        <td>{item.profit}\r\n                            {/* {item.margin_currency} */}\r\n                        </td>\r\n\r\n\r\n\r\n                    </tr>\r\n                        <tr className=\"text-center\" key={index + 1}>\r\n                            <td className=\"sellcolor\"><b>Total Sell Positions</b></td>\r\n                            <td></td>\r\n\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td><b>{lotsTotal.toFixed(2)}</b></td>\r\n                            <td></td>\r\n\r\n                            <td> </td>\r\n                            <td><b>{comissionTotal.toFixed(2)}</b></td>\r\n                            <td><b>{swapTotal.toFixed(2)}</b></td>\r\n\r\n                            <td><b>{profitTotal.toFixed(2)}</b></td>\r\n                        </tr>\r\n                    </>\r\n                )\r\n            } else {\r\n                return (\r\n                    <tr key={index} className=\"text-center\" style={{ background: item.order_type == 0 ? \"rgb(189 179 179 / 43%)\" : item.order_type == 1 ? \"rgb(181 178 178 / 21%)\" : \" \" }}>\r\n                        <td className=\"text-center color2 no-padding\">{toAccountId.login}</td>\r\n\r\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\r\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\r\n                        <td>{item.symbol}</td>\r\n                        <td>{item.lots}</td>\r\n                        <td>{item.order_type == 0 ? item.lots*item.contract_size : item.order_type == 1 ? - item.lots*item.contract_size : item.lots*item.contract_size}</td>\r\n                        <td>{item.open_price}</td>\r\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\r\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\r\n                        {/* <td>{item.magic_number !== 0 ? item.magic_number : ''}</td> */}\r\n                        <td>{item.profit}\r\n                            {/* {item.margin_currency} */}\r\n                        </td>\r\n\r\n\r\n                    </tr>\r\n                )\r\n            }\r\n        })\r\n    }\r\n    let openToHistoryTotal\r\n    const toHistoryTradeTr = () => {//4//\r\n        let lotsTotal = 0;\r\n        let comissionTotal = 0;\r\n        let profitTotal = 0;\r\n        let swapTotal = 0;\r\n        let contractSizeTotal = 0;\r\n        let openpricetotal = 0;\r\n        let closepricetotal = 0;\r\n        // console.log(toHistoryTrade, '4==================<>');\r\n        return toHistoryTrade.length > 0 && toHistoryTrade.map((item, index) => {\r\n            // customSwap.map((data) => {\r\n\r\n            //     if (data.account_id == item.account_id) {\r\n            //         item.swap = item.swap + data.open_value\r\n            //     }\r\n            // })\r\n            lotsTotal += item.lots;\r\n            comissionTotal += item.commission;\r\n            profitTotal += item.profit;\r\n            swapTotal += item.swap;\r\n            openToHistoryTotal = comissionTotal + profitTotal + swapTotal;\r\n            contractSizeTotal += item.contract_size\r\n            openpricetotal += item.open_price;\r\n            closepricetotal += item.close_price;\r\n            if (index == toHistoryTrade.length - 1) {\r\n                let a = {\r\n                    lotsTotal: lotsTotal,\r\n                    comissionTotal: comissionTotal,\r\n                    profitTotal: profitTotal,\r\n                    swapTotal: swapTotal\r\n                }\r\n                dataTotalClosetTo = a\r\n                // console.log(dataTotalClosetTo, 'data4==========>>>>');\r\n                return (\r\n                    <><tr key={index} className=\"text-center\" style={{ background: item.order_type == 0 ? \"rgb(189 179 179 / 43%)\" : item.order_type == 1 ? \"rgb(181 178 178 / 21%)\" : \" \" }}>\r\n                        <td className=\"text-center color2 no-padding\">{toAccountId.login}</td>\r\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\r\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\r\n                        <td>{item.symbol}</td>\r\n                        <td>{item.lots}</td>\r\n                        <td>{item.order_type == 0 ? item.lots*item.contract_size : item.order_type == 1 ? - item.lots*item.contract_size : item.lots*item.contract_size}</td>\r\n                        <td>{item.open_price}</td>\r\n                        <td>{moment(item.close_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\r\n                        <td>{item.close_price}</td>\r\n\r\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\r\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\r\n\r\n                        <td>{item.profit}\r\n                            {/* {item.margin_currency} */}\r\n                        </td>\r\n\r\n                    </tr>\r\n                        <tr className=\"text-center\" key={index + 1}>\r\n                            <td className=\"sellcolor\"><b>Total Sell Positions</b></td>\r\n                            <td></td>\r\n\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td ><b>{lotsTotal.toFixed(2)}</b></td>\r\n                            <td></td>\r\n\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n\r\n                            <td><b>{comissionTotal.toFixed(2)}</b></td>\r\n                            <td><b>{swapTotal.toFixed(2)}</b></td>\r\n                            {/* <td></td> */}\r\n\r\n                            <td><b>{profitTotal.toFixed(2)}</b></td>\r\n                        </tr>\r\n                    </>\r\n                )\r\n            } else {\r\n                return (\r\n                    <tr key={index} className=\"text-center\" style={{ background: item.order_type == 0 ? \"rgb(189 179 179 / 43%)\" : item.order_type == 1 ? \"rgb(181 178 178 / 21%)\" : \" \" }}>\r\n                        <td className=\"text-center color2 no-padding\">{toAccountId.login}</td>\r\n\r\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\r\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\r\n                        <td>{item.symbol}</td>\r\n                        <td>{item.lots}</td>\r\n                        <td>{item.order_type == 0 ? item.lots*item.contract_size : item.order_type == 1 ? - item.lots*item.contract_size : item.lots*item.contract_size} </td>\r\n                        <td>{item.open_price}</td>\r\n                        <td>{moment(item.close_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\r\n                        <td>{item.close_price}</td>\r\n\r\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\r\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\r\n                        <td>{item.profit}\r\n                            {/* {item.margin_currency} */}\r\n                        </td>\r\n\r\n                    </tr>\r\n                )\r\n            }\r\n        })\r\n    }\r\n    let fromclosedata = fromHistoryTrade.map(data => { return data })\r\n    let fromopendata = fromOpenTrade.map(data => { return data })\r\n    let toclosedata = toHistoryTrade.map(data => { return data })\r\n    let toopendata = toOpenTrade.map(data => { return data })\r\n    let newData = [...fromclosedata, ...fromopendata, ...toclosedata, ...toopendata]\r\n    newData = newData.sort((a, b) => new Date(...b.open_time.split('/').reverse()) - new Date(...a.open_time.split('/').reverse()));\r\n    let newopenData = [...fromopendata, ...toopendata]\r\n    let newcloseData = [...fromclosedata, ...toclosedata]\r\n    let totalOpen = newopenData.map(item => {\r\n        let openProfit = 0;\r\n        return openProfit += item.profit\r\n    }).reduce((a, b) => a + b, 0)\r\n    let totalClose = newcloseData.map(item => {\r\n        let closeProfit = 0;\r\n        return closeProfit += item.profit\r\n    }).reduce((a, b) => a + b, 0)\r\n    let totalfromCloseSwap = fromclosedata.reduce((a, item) => a + item.swap, 0)\r\n    let totalfromOpenSwap = fromopendata.reduce((a, item) => a + item.swap, 0)\r\n    let totalfromCloseCommission = fromclosedata.reduce((a, item) => a + item.commission, 0)\r\n    let totalfromOpenCommission = fromopendata.reduce((a, item) => a + item.commission, 0)\r\n    let totaltoCloseSwap = toclosedata.reduce((a, item) => a + item.swap, 0)\r\n    let totaltoOpenSwap = toopendata.reduce((a, item) => a + item.swap, 0)\r\n    let totaltoCloseCommission = toclosedata.reduce((a, item) => a + item.commission, 0)\r\n    let totaltoOpenCommission = toopendata.reduce((a, item) => a + item.commission, 0)\r\n\r\n\r\n    // console.log(totalOpenCommission, totalCloseCommission, 'historyinfo===============>><');\r\n    // console.log(fromHistoryTrade, fromOpenTrade, toHistoryTrade, toOpenTrade, '5--------->');\r\n    // console.log(dataTOtalcloseFrom,\r\n    //     dataTotalClosetTo,\r\n    //     dataTOtalOpenTo,\r\n    //     dataTOtalOpenFrom, 'redata==========<<<<<<<<<<>>>>>>>>>>');\r\n    // console.log(fromAccountId, toAccountId, fromOpenTrade, toOpenTrade, fromHistoryTrade, toHistoryTrade, commissionValue, 'commissionValue');\r\n    return (\r\n        <>\r\n\r\n\r\n            {errormassage ?\r\n                <div className=\"popup\">\r\n                    <div class=\"card w-75 \">\r\n                        <div class=\"card-body topmargin\">\r\n                            <div class=\" card-text popuptext\" role=\"alert\"> Please activate filter profile to view stats.\r\n                            ...\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> :\r\n                <>\r\n                    <Row className=\"no-margin\">\r\n                        <div className=\"lastUpdate\">\r\n                            <span> Last Updated :  </span>\r\n                            {dateTime}(UTC)\r\n                     </div>\r\n                    </Row>\r\n                    {loading ? <Loader\r\n                        type=\"ThreeDots\"\r\n                        color=\"black\"\r\n                        height={100}\r\n                        width={100}\r\n                        style={{ textAlign: 'center' }}\r\n\r\n\r\n                    />\r\n                        :\r\n\r\n                        <div style={{ overflowX: 'hidden' }} className=\"symbol-box shadoremove\">\r\n                            <Row>\r\n                                <Col md={12}>\r\n\r\n                                    <div className=\"symbol-box\" style={{ marginBottom: '20px' }}>\r\n                                        <div className=\"openpositions\" >\r\n                                            <span className=\"p-text\">Block view</span>\r\n                                            <span className=\"icon-style\" onClick={toggle2} >\r\n                                                {isOpen2 ?\r\n                                                    <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\r\n                                                    :\r\n                                                    <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\r\n                                                }\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Collapse isOpen={isOpen2}>\r\n                                        <div className=\"openOrder\" style={{ marginBottom: '20px' }}>\r\n\r\n                                            <table className=\"table table-responsive table-bordered border-bottom-0 align-th custom-thin\">\r\n                                                <thead>\r\n                                                    <tr className=\"text-center thUnset\">\r\n                                                        <th>Trades / Pair</th>\r\n                                                        <th>Date</th>\r\n                                                        <th>Account</th>\r\n                                                        <th>Direction</th>\r\n                                                        <th>Open Price</th>\r\n                                                        <th>Close Price</th>\r\n                                                        <th>Trade Quantity</th>\r\n                                                        <th>Realized P/L</th>\r\n                                                        <th>Unrealized P/L\r\n                                                            {/* <br /><span>L {fromOpenTrade ? fromOpenTrade[0]?.symbol : ''} = {fromOpenTrade ? fromOpenTrade[0]?.last_price : ''} </span> */}\r\n                                                            <br /><span>S {toOpenTrade ? toOpenTrade[0]?.symbol : ''} = {toOpenTrade ? toOpenTrade[0]?.last_price : ''} </span>\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {newData.length > 0 ? newData.map(item => {\r\n                                                        let profitTotal = 0;\r\n                                                        return <tr className=\"text-center\">\r\n                                                            <td>{item.order_type === 0 || item.order_type === 1 ? item.symbol : \"\"}</td>\r\n                                                            <td>\r\n                                                                {moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}\r\n                                                            </td>\r\n                                                            {item.account_id === toAccountId.id ?\r\n                                                                <td className=\"color2\">{toAccountId.alias}</td> : \"\"}\r\n                                                            {item.account_id === fromAccountId.id ?\r\n                                                                <td className=\"colorDarkBlue\">{fromAccountId.alias}</td> : \"\"}\r\n                                                            <td>{item.order_type == 0 ? item.lots : item.order_type == 1 ? \"-\"+item.lots : \"\"}</td>\r\n                                                            <td>{item.open_price}</td>\r\n                                                            <td>{item.close_price}</td>\r\n                                                            <td><NumberFormat value={item.lots*item.contract_size} displayType={'text'} thousandSeparator={true} decimalScale={2} /> </td>\r\n                                                            <td>{item.open_price && item.close_price ? profitTotal += item.profit : ''}</td>\r\n                                                            <td>{item.open_price && item.close_price ? \"\" : profitTotal += item.profit}</td>\r\n                                                        </tr>\r\n                                                    }) : ''}\r\n                                                    {(totalfromCloseCommission !== 0 && totalfromOpenCommission !== 0) ||\r\n                                                        (totalfromCloseCommission !== 0 && totalfromOpenCommission === 0) ||\r\n                                                        (totalfromCloseCommission === 0 && totalfromOpenCommission !== 0) ?\r\n                                                        <tr className=\"text-center\">\r\n                                                            <td><b>Commission</b></td>\r\n                                                            <td></td>\r\n                                                            <td className=\"colorDarkBlue\">{fromAccountId.alias}</td>\r\n                                                            <td></td>\r\n                                                            <td></td>\r\n                                                            <td></td>\r\n                                                            <td></td>\r\n                                                            <td><b>\r\n                                                                {totalfromCloseCommission}\r\n                                                            </b>\r\n                                                            </td>\r\n                                                            <td><b>\r\n                                                                {totalfromOpenCommission}\r\n                                                            </b>\r\n                                                            </td>\r\n                                                        </tr> : ''}\r\n                                                    {(totaltoCloseCommission !== 0 && totaltoOpenCommission !== 0) ||\r\n                                                        (totaltoCloseCommission !== 0 && totaltoOpenCommission === 0) ||\r\n                                                        (totaltoCloseCommission === 0 && totaltoOpenCommission !== 0) ?\r\n                                                        <tr className=\"text-center\">\r\n                                                            <td><b>{totalfromCloseCommission || totalfromOpenCommission ? \"\" : 'Commission'}</b></td>\r\n                                                            <td></td>\r\n                                                            <td className=\"color2\">{toAccountId.alias}</td>\r\n                                                            <td></td>\r\n                                                            <td></td>\r\n                                                            <td></td>\r\n                                                            <td></td>\r\n                                                            <td><b>\r\n                                                                {totaltoCloseCommission}\r\n                                                            </b>\r\n                                                            </td>\r\n                                                            <td><b>\r\n                                                                {totaltoOpenCommission}\r\n                                                            </b>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        : ''}\r\n                                                    {(totalfromCloseSwap !== 0 && totalfromOpenSwap !== 0) ||\r\n                                                        (totalfromCloseSwap !== 0 && totalfromOpenSwap === 0) ||\r\n                                                        (totalfromCloseSwap === 0 && totalfromOpenSwap !== 0) ?\r\n                                                        <tr className=\"text-center\">\r\n                                                            <td><b>Swap</b></td>\r\n                                                            <td></td>\r\n                                                            <td className=\"colorDarkBlue\">{fromAccountId.alias}</td>\r\n                                                            <td></td>\r\n                                                            <td></td>\r\n                                                            <td></td>\r\n                                                            <td></td>\r\n                                                            <td><b>\r\n                                                                {totalfromCloseSwap}\r\n                                                            </b>\r\n                                                            </td>\r\n                                                            <td><b>\r\n                                                                {totalfromOpenSwap}\r\n                                                            </b>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        : ''}\r\n                                                    {(totaltoCloseSwap !== 0 && totaltoOpenSwap !== 0) ||\r\n                                                        (totaltoCloseSwap !== 0 && totaltoOpenSwap === 0) ||\r\n                                                        (totaltoCloseSwap === 0 && totaltoOpenSwap !== 0) ?\r\n                                                        <tr className=\"text-center\">\r\n                                                            <td><b>{totalfromCloseSwap || totalfromOpenSwap ? '' : 'Swap'}</b></td>\r\n                                                            <td></td>\r\n                                                            <td className=\"color2\">{toAccountId.alias}</td>\r\n                                                            <td></td>\r\n                                                            <td></td>\r\n                                                            <td></td>\r\n                                                            <td></td>\r\n                                                            <td><b>\r\n                                                                {totaltoCloseSwap}\r\n                                                            </b>\r\n                                                            </td>\r\n                                                            <td><b>\r\n                                                                {totaltoOpenSwap}\r\n                                                            </b>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        : ''}\r\n                                                    <tr className=\"text-center\">\r\n                                                        <td></td>\r\n                                                        <td></td>\r\n                                                        <td></td>\r\n                                                        <td></td>\r\n                                                        <td></td>\r\n                                                        <td></td>\r\n                                                        <td><b>Trading</b></td>\r\n                                                        <td><b>\r\n                                                            {totalClose}\r\n                                                        </b>\r\n                                                        </td>\r\n                                                        <td><b>\r\n                                                            {totalOpen}\r\n                                                        </b>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr className=\"text-center\">\r\n                                                        <td></td>\r\n                                                        <td></td>\r\n                                                        <td></td>\r\n                                                        <td></td>\r\n                                                        <td></td>\r\n                                                        <td></td>\r\n                                                        <td><b>Comm & Swap</b></td>\r\n                                                        <td><b>\r\n                                                            {totalfromCloseSwap +\r\n                                                                totaltoCloseSwap +\r\n                                                                totalfromCloseCommission +\r\n                                                                totaltoCloseCommission}\r\n                                                        </b>\r\n                                                        </td>\r\n                                                        <td><b>\r\n                                                            {totalfromOpenSwap +\r\n                                                                totaltoOpenSwap +\r\n                                                                totalfromOpenCommission +\r\n                                                                totaltoOpenCommission}\r\n                                                        </b>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr className=\"text-center\">\r\n                                                        <td></td>\r\n                                                        <td></td>\r\n                                                        <td></td>\r\n                                                        <td></td>\r\n                                                        <td></td>\r\n                                                        <td></td>\r\n                                                        <td><b>Total</b></td>\r\n                                                        <td><b>\r\n                                                            <NumberFormat value={historyTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                                                            {fromAccountId[`accounts_details.currency`] === toAccountId[`accounts_details.currency`] ? `  ` + fromAccountId[`accounts_details.currency`] || toAccountId[`accounts_details.currency`] : ''}\r\n                                                        </b>\r\n                                                        </td>\r\n                                                        <td><b>\r\n                                                            <NumberFormat value={openTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                                                            {fromAccountId[`accounts_details.currency`] === toAccountId[`accounts_details.currency`] ? `  ` + fromAccountId[`accounts_details.currency`] || toAccountId[`accounts_details.currency`] : ''}\r\n                                                        </b>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n\r\n                                        </div>\r\n                                        <Row style={{ marginBottom: `20px` }}>\r\n\r\n                                            <Col md={12} sm={6}>\r\n                                                <div className={historyTotal + openTotal >= 0 ? \"summary-box\" : \"summary-box-red\"}>\r\n\r\n\r\n                                                    {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\r\n                                                    {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\r\n<span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\r\n\r\n                                                    <Col md={12} sm={12}>\r\n                                                        <div className=\"summary-text text-center\" style={{ fontWeight: 600, color: \"#797979\" }}>Unrealized & Realized P/L ({activeProfileName}) {allHistoryRecord.history_info !== 0 && (<span> + Commission</span>)} </div>\r\n                                                    </Col>\r\n                                                    <Col md={12} sm={12}>\r\n                                                        <div className=\"text-center\" style={{ fontWeight: 'bold', fontSize: \"18px\" }}>$ {' '}\r\n                                                            <NumberFormat value={allHistoryRecord.history_info !== undefined ? historyTotal + openTotal + allHistoryRecord.history_info : historyTotal + openTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n\r\n                                                            {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\r\n\r\n                                                        </div>\r\n                                                    </Col>\r\n\r\n                                                    <div className=\"clearfix\"></div>\r\n                                                </div>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Collapse>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col md={12} sm={6}>\r\n                                    <div className=\"symbol-box\" style={{ marginBottom: '20px' }}>\r\n                                        <div className=\"openpositions\" >\r\n                                            <span className=\"p-text\">Table view</span>\r\n                                            <span className=\"icon-style\" onClick={toggle} >\r\n                                                {isOpen ?\r\n                                                    <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\r\n                                                    :\r\n                                                    <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\r\n                                                }\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Collapse isOpen={isOpen}>\r\n                                        <div style={{ marginBottom: '20px' }}>\r\n                                            <div>\r\n\r\n\r\n                                                <div className=\"symbol-box terminal-head-box\">\r\n                                                    <div className=\"openpositions\" >\r\n                                                        <span className=\"p-text\">Unrealized Profit/Loss</span>\r\n                                                        <span className=\"icon-style\"\r\n                                                            onClick={toggle}\r\n                                                        >\r\n                                                            {/* {isOpen ?\r\n                                                <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\r\n                                                :\r\n                                                <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\r\n                                            } */}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"openOrder\">\r\n\r\n\r\n                                                    {fromOpenTrade && fromOpenTrade.length > 0 ? (\r\n                                                        <Row>\r\n                                                            <Col md={12} > {/*/1/*/}\r\n\r\n                                                                {/* <div className={'colorDarkBlue , boldText loginCenter'}>{fromAccountId.alias}</div>\r\n                                                    <span className=\"text-center colorDarkBlue no-padding \"> {fromAccountId.login}</span> */}\r\n\r\n\r\n                                                                <table className=\"table table-responsive table-bordered border-bottom-0 align-th\">\r\n                                                                    <thead>\r\n                                                                        <tr className=\"text-center thUnset\">\r\n                                                                            {/* open_time,type,symbol,lot,contract_size,open_price,commission,swap,profit */}\r\n                                                                            <th>Login</th>\r\n                                                                            <th>Open Time</th>\r\n                                                                            <th scope=\"col\">Type</th>\r\n\r\n                                                                            <th scope=\"col\">symbol</th>\r\n                                                                            <th scope=\"col\">lots</th>\r\n                                                                            {/* <th scope=\"col\">open_time</th> */}\r\n                                                                            <th>Contract size</th>\r\n                                                                            <th>Open Price</th>\r\n\r\n\r\n                                                                            <th scope=\"col\">commission</th>\r\n                                                                            <th scope=\"col\">swap</th>\r\n                                                                            {/* <th scope=\"col\">magic_number</th> */}\r\n                                                                            <th scope=\"col\">profit</th>\r\n                                                                        </tr>\r\n                                                                    </thead>\r\n                                                                    <tbody>\r\n                                                                        {fromOpenTradeTr()}\r\n                                                                        {toOpenTrade.length === 0 &&\r\n                                                                            <tr className=\"text-center opencolor\">\r\n                                                                                <td><b>Total Unrealized</b></td>\r\n                                                                                <td></td>\r\n                                                                                <td></td>\r\n                                                                                <td></td>\r\n                                                                                <td><b>{dataTOtalOpenFrom.lotsTotal + dataTOtalOpenTo.lotsTotal}</b></td>\r\n                                                                                <td></td>\r\n                                                                                <td></td>\r\n                                                                                <td><b>{dataTOtalOpenFrom.comissionTotal + dataTOtalOpenTo.comissionTotal}</b></td>\r\n                                                                                <td><b>{dataTOtalOpenFrom.swapTotal + dataTOtalOpenTo.swapTotal}</b></td>\r\n                                                                                <td><b>{dataTOtalOpenFrom.profitTotal + dataTOtalOpenTo.profitTotal}</b></td>\r\n                                                                            </tr>}\r\n                                                                    </tbody>\r\n                                                                </table>\r\n                                                                {toOpenTrade.length === 0 &&\r\n                                                                    <div className=\"text-right opencolor pad\"><b>Total {\r\n                                                                        dataTOtalOpenFrom.comissionTotal +\r\n                                                                        dataTOtalOpenTo.comissionTotal +\r\n                                                                        dataTOtalOpenFrom.swapTotal +\r\n                                                                        dataTOtalOpenTo.swapTotal +\r\n                                                                        dataTOtalOpenFrom.profitTotal +\r\n                                                                        dataTOtalOpenTo.profitTotal\r\n                                                                    }\r\n                                                                        {fromAccountId[`accounts_details.currency`] === toAccountId[`accounts_details.currency`] ? `  ` + fromAccountId[`accounts_details.currency`] || toAccountId[`accounts_details.currency`] : ''}\r\n                                                                    </b></div>}\r\n                                                            </Col>\r\n                                                        </Row>\r\n\r\n                                                    ) :\r\n                                                        (' '\r\n                                                            // <Col md={12} >\r\n                                                            //     <div className=\"card change noRecordCol\"> No Record Found</div>\r\n                                                            // </Col>\r\n                                                        )}\r\n\r\n\r\n\r\n\r\n\r\n                                                    {toOpenTrade && toOpenTrade.length > 0 ? (\r\n                                                        <Row >\r\n                                                            <Col md={12}> {/*3*/}\r\n                                                                {/* <div className={'color2 , boldText loginCenter'}>{toAccountId.alias}</div>\r\n                                                    <span className=\"text-center color2 no-padding\">{toAccountId.login}</span> */}\r\n\r\n                                                                <table class=\"table table-responsive table-bordered border-botttom-0 align-th\">\r\n                                                                    <thead>\r\n                                                                        <tr className=\"text-center thUnset\">  {/* open_time,type,symbol,lot,contract_size,open_price,close_time,close_price,commission,swap,profit */}\r\n                                                                            <th>Login</th>\r\n\r\n                                                                            <th>Open Time</th>\r\n                                                                            <th scope=\"col\">Type</th>\r\n\r\n                                                                            <th scope=\"col\">symbol</th>\r\n                                                                            <th scope=\"col\">lots</th>\r\n                                                                            <th>Contract size</th>\r\n                                                                            <th>Open Price</th>\r\n                                                                            <th scope=\"col\">commission</th>\r\n                                                                            <th scope=\"col\">swap</th>\r\n                                                                            <th scope=\"col\">profit</th>\r\n\r\n                                                                        </tr>\r\n                                                                    </thead>\r\n                                                                    <tbody>\r\n                                                                        {toOpenTradeTr()}\r\n                                                                        {dataTOtalOpenFrom && dataTOtalOpenTo &&\r\n                                                                            <tr className=\"text-center opencolor\">\r\n                                                                                <td><b>Total Unrealized</b></td>\r\n                                                                                <td></td>\r\n                                                                                <td></td>\r\n                                                                                <td></td>\r\n                                                                                <td><b>{dataTOtalOpenFrom.lotsTotal + dataTOtalOpenTo.lotsTotal}</b></td>\r\n                                                                                <td></td>\r\n                                                                                <td></td>\r\n                                                                                <td><b>{dataTOtalOpenFrom.comissionTotal + dataTOtalOpenTo.comissionTotal}</b></td>\r\n                                                                                <td><b>{dataTOtalOpenFrom.swapTotal + dataTOtalOpenTo.swapTotal}</b></td>\r\n                                                                                <td><b>{dataTOtalOpenFrom.profitTotal + dataTOtalOpenTo.profitTotal}</b></td>\r\n                                                                            </tr>}\r\n                                                                    </tbody>\r\n                                                                </table>\r\n                                                                <div className=\"text-right opencolor pad\"><b>Total {\r\n                                                                    dataTOtalOpenFrom.comissionTotal +\r\n                                                                    dataTOtalOpenTo.comissionTotal +\r\n                                                                    dataTOtalOpenFrom.swapTotal +\r\n                                                                    dataTOtalOpenTo.swapTotal +\r\n                                                                    dataTOtalOpenFrom.profitTotal +\r\n                                                                    dataTOtalOpenTo.profitTotal\r\n                                                                }\r\n                                                                    {fromAccountId[`accounts_details.currency`] === toAccountId[`accounts_details.currency`] ? `  ` + fromAccountId[`accounts_details.currency`] || toAccountId[`accounts_details.currency`] : ''}\r\n                                                                </b></div>\r\n                                                            </Col>\r\n                                                        </Row>\r\n\r\n                                                    ) : (' '\r\n                                                            // <Col md={12}>\r\n                                                            //     <div className=\"card change noRecordCol\"> No Record Found</div>\r\n                                                            // </Col>\r\n                                                        )}\r\n\r\n\r\n\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"symbol-box terminal-head-box topSet\" >\r\n                                                <div className=\"openpositions\" >\r\n                                                    <span className=\"p-text\">Realized Profit/Loss</span>\r\n                                                    <span className=\"icon-style\"\r\n                                                    // onClick={toggle2}\r\n                                                    >\r\n                                                        {/* {isOpen2 ?\r\n                                            <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\r\n                                            :\r\n                                            <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\r\n                                        } */}\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div>\r\n                                                {/* <Collapse isOpen={isOpen2}> */}\r\n\r\n                                                <div className=\"openOrder\">\r\n\r\n                                                    {/*2*/}\r\n                                                    {fromHistoryTrade.length > 0 || toHistoryTrade.length > 0 ? (\r\n                                                        <div>\r\n                                                            <Row >\r\n                                                                {fromHistoryTrade && fromHistoryTrade.length > 0 ? (\r\n                                                                    <Col md={12} >\r\n                                                                        {/* <div className={'colorDarkBlue , boldText loginCenter'}>{fromAccountId.alias}</div>\r\n                                                            <span className=\"text-center colorDarkBlue no-padding\">{fromAccountId.login}</span> */}\r\n                                                                        <table style={{ overflowY: 'scroll' }} className=\"table table-responsive table-bordered border-bottom-0 align-th\">\r\n                                                                            <thead>\r\n                                                                                <tr className=\"text-center thUnset\">\r\n                                                                                    <th>Login</th>\r\n\r\n                                                                                    <th>Open Time</th>\r\n                                                                                    <th scope=\"col\">Type</th>\r\n\r\n                                                                                    <th scope=\"col\">symbol</th>\r\n                                                                                    <th scope=\"col\">lots</th>\r\n\r\n                                                                                    <th>Contract size</th>\r\n                                                                                    <th>Open Price</th>\r\n                                                                                    <th>Close Time</th>\r\n\r\n                                                                                    <th>Close Price</th>\r\n\r\n                                                                                    <th scope=\"col\">commission</th>\r\n                                                                                    <th scope=\"col\">swap</th>\r\n\r\n                                                                                    <th scope=\"col\">profit</th>\r\n                                                                                </tr>\r\n                                                                            </thead>\r\n                                                                            <tbody>\r\n                                                                                {fromHistoryTradeTr()}\r\n                                                                                {toHistoryTrade.length === 0 &&\r\n                                                                                    <tr className=\"text-center closecolor\">\r\n                                                                                        <td><b>Total Realized</b></td>\r\n                                                                                        <td></td>\r\n                                                                                        <td></td>\r\n                                                                                        <td></td>\r\n                                                                                        <td><b>{dataTOtalcloseFrom.lotsTotal + dataTotalClosetTo.lotsTotal}</b></td>\r\n                                                                                        <td></td>\r\n                                                                                        <td></td>\r\n                                                                                        <td></td>\r\n                                                                                        <td></td>\r\n                                                                                        <td><b>{dataTOtalcloseFrom.comissionTotal + dataTotalClosetTo.comissionTotal}</b></td>\r\n                                                                                        <td><b>{dataTOtalcloseFrom.swapTotal + dataTotalClosetTo.swapTotal}</b></td>\r\n                                                                                        <td><b>{dataTOtalcloseFrom.profitTotal + dataTotalClosetTo.profitTotal}</b></td>\r\n                                                                                    </tr>}\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                        {toHistoryTrade.length === 0 &&\r\n                                                                            <div className=\"text-right closecolor pad\"><b>Total {\r\n                                                                                dataTOtalcloseFrom.comissionTotal +\r\n                                                                                dataTotalClosetTo.comissionTotal +\r\n                                                                                dataTOtalcloseFrom.swapTotal +\r\n                                                                                dataTotalClosetTo.swapTotal +\r\n                                                                                dataTOtalcloseFrom.profitTotal +\r\n                                                                                dataTotalClosetTo.profitTotal\r\n                                                                            }\r\n                                                                                {fromAccountId[`accounts_details.currency`] === toAccountId[`accounts_details.currency`] ? `  ` + fromAccountId[`accounts_details.currency`] || toAccountId[`accounts_details.currency`] : ''}\r\n                                                                            </b></div>}\r\n                                                                    </Col>\r\n\r\n\r\n                                                                ) : (''\r\n                                                                        // <Col md={12}>\r\n                                                                        //     <div className=\"card change noRecordCol\"> No Record Found</div>\r\n                                                                        // </Col>\r\n                                                                    )}\r\n\r\n                                                            </Row>\r\n                                                            {/**4 */}\r\n                                                            {\r\n                                                                toHistoryTrade && toHistoryTrade.length > 0 ? (\r\n                                                                    <Row >\r\n                                                                        <Col md={12} >\r\n                                                                            {/* <div className={'color2 , boldText loginCenter'}>{toAccountId.alias}</div>\r\n                                                                <span className=\"text-center color2 no-padding\">{toAccountId.login}</span> */}\r\n\r\n                                                                            <table className=\"table table-responsive table-bordered border-bottom-0 align-th\">\r\n                                                                                <thead>\r\n                                                                                    <tr className=\"text-center thUnset\">\r\n                                                                                        <th>Login</th>\r\n\r\n                                                                                        <th>Open Time</th>\r\n                                                                                        <th scope=\"col\">Type</th>\r\n\r\n                                                                                        <th scope=\"col\">symbol</th>\r\n                                                                                        <th scope=\"col\">lots</th>\r\n\r\n                                                                                        <th>Contract size</th>\r\n                                                                                        <th>Open Price</th>\r\n                                                                                        <th>Close Time</th>\r\n\r\n                                                                                        <th>Close Price</th>\r\n\r\n                                                                                        <th scope=\"col\">commission</th>\r\n                                                                                        <th scope=\"col\">swap</th>\r\n\r\n                                                                                        <th scope=\"col\">profit</th>\r\n                                                                                    </tr>\r\n                                                                                </thead>\r\n                                                                                <tbody>\r\n                                                                                    {toHistoryTradeTr()}\r\n                                                                                    {dataTOtalcloseFrom && dataTotalClosetTo &&\r\n                                                                                        <tr className=\"text-center closecolor\">\r\n                                                                                            <td><b>Total Realized</b></td>\r\n                                                                                            <td></td>\r\n                                                                                            <td></td>\r\n                                                                                            <td></td>\r\n                                                                                            <td><b>{dataTOtalcloseFrom.lotsTotal + dataTotalClosetTo.lotsTotal}</b></td>\r\n                                                                                            <td></td>\r\n                                                                                            <td></td>\r\n                                                                                            <td></td>\r\n                                                                                            <td></td>\r\n                                                                                            <td><b>{dataTOtalcloseFrom.comissionTotal + dataTotalClosetTo.comissionTotal}</b></td>\r\n                                                                                            <td><b>{dataTOtalcloseFrom.swapTotal + dataTotalClosetTo.swapTotal}</b></td>\r\n\r\n                                                                                            <td><b>{dataTOtalcloseFrom.profitTotal + dataTotalClosetTo.profitTotal}</b></td>\r\n                                                                                        </tr>\r\n                                                                                    }\r\n                                                                                </tbody>\r\n                                                                            </table>\r\n                                                                            <div className=\"text-right closecolor pad\"><b>Total {\r\n                                                                                dataTOtalcloseFrom.comissionTotal +\r\n                                                                                dataTotalClosetTo.comissionTotal +\r\n                                                                                dataTOtalcloseFrom.swapTotal +\r\n                                                                                dataTotalClosetTo.swapTotal +\r\n                                                                                dataTOtalcloseFrom.profitTotal +\r\n                                                                                dataTotalClosetTo.profitTotal\r\n                                                                            }\r\n                                                                                {fromAccountId[`accounts_details.currency`] === toAccountId[`accounts_details.currency`] ? `  ` + fromAccountId[`accounts_details.currency`] || toAccountId[`accounts_details.currency`] : ''}\r\n                                                                            </b></div>\r\n\r\n                                                                        </Col>\r\n                                                                    </Row>\r\n\r\n                                                                ) : (''\r\n                                                                        // <Col md={12}>\r\n                                                                        //     <div className=\"card change noRecordCol\"> No Record Found</div>\r\n                                                                        // </Col>\r\n                                                                    )\r\n                                                            }\r\n\r\n                                                        </div>\r\n\r\n                                                    ) : (\r\n                                                            <Col md={12} >\r\n                                                                <div className=\"card change noRecordCol\"> No Record Found</div>\r\n                                                            </Col>\r\n                                                        )}\r\n                                                    <Row className=\"no-margin\">\r\n                                                        {commissionValue && commissionValue.commission_acount_id > 0 && (\r\n                                                            <div className=\"card \">\r\n                                                                <div className=\"header ptheader\">\r\n                                                                    <h4 className=\"text-center bText1\"><b>Commission</b></h4>\r\n                                                                    {/* <h4 className=\"text-center\">{commissionDetails[0].login}</h4> */}\r\n\r\n                                                                    <div className=\"row\">\r\n                                                                        <div className=\"col-md-4 text-center\">\r\n                                                                            <h4 className=\"bText\"> Balance {' '}</h4>\r\n                                                                            <NumberFormat value={commissionValue.totalProfit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                                                                        </div>\r\n                                                                        <div className=\"col-md-4 text-center\">\r\n                                                                            <h4 className=\"bText\"> Equity  </h4><NumberFormat displayType={'text'} thousandSeparator={true} decimalScale={2} /><span>{commissionValue.equity}</span>\r\n\r\n                                                                        </div>\r\n                                                                        <div className=\"col-md-4 text-center\">\r\n                                                                            <h4 className=\"bText\"> Order Type  </h4>\r\n                                                                            <span>6</span>\r\n\r\n                                                                        </div>\r\n\r\n                                                                        <div className=\"col-md-12 text-center\">\r\n                                                                            <h4><b>Total</b>  </h4><NumberFormat value={commissionValue.commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )}\r\n\r\n                                                    </Row>\r\n                                                </div>\r\n                                                {/* </Collapse> */}\r\n\r\n                                            </div>\r\n\r\n                                            {/* <div className=\"symbol-box  topSet \" >\r\n                            <div className=\"text-center\" >\r\n                                <span className=\"  summrayAdjust \" style={{ fontWeight: 600, color: \"#797979\" }}>Summary</span>\r\n                                <h5 style={{ fontWeight: 600, color: \"#797979\" }}> Open Positions + Closed Positions {commissionValue.commission_acount_id > 0 && (<span> + Commission</span>)}</h5>\r\n                                <h5 className=\"bText\">\r\n                                    <NumberFormat value={totalOpenAndHistory} displayType={'text'} thousandSeparator={true} decimalScale={2} ></NumberFormat></h5>\r\n                            </div>\r\n\r\n                        </div> */}\r\n                                        </div>\r\n                                        <Row style={{ marginBottom: `20px` }}>\r\n\r\n                                            <Col md={12} sm={6}>\r\n                                                <div className={historyTotal + openTotal >= 0 ? \"summary-box\" : \"summary-box-red\"}>\r\n\r\n\r\n                                                    {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\r\n                                                    {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\r\n<span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\r\n\r\n                                                    <Col md={12} sm={12}>\r\n                                                        <div className=\"summary-text text-center\" style={{ fontWeight: 600, color: \"#797979\" }}>Unrealized & Realized P/L ({activeProfileName}) {allHistoryRecord.history_info !== 0 && (<span> + Commission</span>)} </div>\r\n                                                    </Col>\r\n                                                    <Col md={12} sm={12}>\r\n                                                        <div className=\"text-center\" style={{ fontWeight: 'bold', fontSize: \"18px\" }}>$ {' '}\r\n                                                            <NumberFormat value={allHistoryRecord.history_info !== undefined ? historyTotal + openTotal + allHistoryRecord.history_info : historyTotal + openTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n\r\n                                                            {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\r\n\r\n                                                        </div>\r\n                                                    </Col>\r\n\r\n                                                    <div className=\"clearfix\"></div>\r\n                                                </div>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Collapse>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col md={12} sm={6}>\r\n                                    <div className=\"symbol-box\" style={{ marginBottom: `20px` }}>\r\n                                        <span className=\"p-text\">Side by side View</span>\r\n                                        <span className=\"icon-style\" onClick={toggle3} >\r\n                                            {isOpen3 ?\r\n                                                <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\r\n                                                :\r\n                                                <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\r\n                                            }\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <Collapse isOpen={isOpen3}>\r\n                                        <TableList />\r\n                                        <Row style={{ marginBottom: `20px` }}>\r\n\r\n                                            <Col md={12} sm={6}>\r\n                                                <div className={historyTotal + openTotal >= 0 ? \"summary-box\" : \"summary-box-red\"}>\r\n\r\n\r\n                                                    {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\r\n                                                    {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\r\n<span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\r\n\r\n                                                    <Col md={12} sm={12}>\r\n                                                        <div className=\"summary-text text-center\" style={{ fontWeight: 600, color: \"#797979\" }}>Unrealized & Realized P/L ({activeProfileName}) {allHistoryRecord.history_info !== 0 && (<span> + Commission</span>)} </div>\r\n                                                    </Col>\r\n                                                    <Col md={12} sm={12}>\r\n                                                        <div className=\"text-center\" style={{ fontWeight: 'bold', fontSize: \"18px\" }}>$ {' '}\r\n                                                            <NumberFormat value={allHistoryRecord.history_info !== undefined ? historyTotal + openTotal + allHistoryRecord.history_info : historyTotal + openTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n\r\n                                                            {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\r\n\r\n                                                        </div>\r\n                                                    </Col>\r\n\r\n                                                    <div className=\"clearfix\"></div>\r\n                                                </div>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Collapse>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n\r\n                    }\r\n                    <Grid fluid>\r\n                        {/* <div className=\"symbol-box shadoremove\"> */}\r\n                        {/* <div className=\"openOrder\">\r\n\r\n                            <div className=\"border-box row\"> */}\r\n                        {/* <DatatablePage state={'open'} data={fromOpenTrade} /> */}\r\n                        {/* </div> */}\r\n                        {/* <div className=\"border-box row\"> */}\r\n\r\n                        {/* <DatatablePage state={'open'} data={toOpenTrade} /> */}\r\n                        {/* </div> */}\r\n                        {/* <div className=\"border-box row\"> */}\r\n\r\n                        {/* <DatatablePage state={'close'} data={fromHistoryTrade} /> */}\r\n                        {/* </div> */}\r\n                        {/* <div className=\"border-box row\"> */}\r\n\r\n                        {/* <DatatablePage state={'close'} data={toHistoryTrade} /> */}\r\n                        {/* </div> */}\r\n                        {/* </div> */}\r\n                        {/* </div> */}\r\n\r\n\r\n\r\n                    </Grid>\r\n                </>\r\n\r\n            }\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\r\n\r\nexport default class Exploser extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"boxFix\">\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <div className=\"card \">\r\n\r\n                            <div className=\"header\">\r\n\r\n                                <h6 className={'colorDarkBlue , loginCenter'}>Account - A</h6>\r\n                            </div>\r\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                <table className=\"table\">\r\n                                    <tbody>\r\n\r\n                                        <tr><td>Symbol </td>\r\n                                            <td className=\"td-actions text-right\">Symbol\r\n\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr><td>Lots </td>\r\n                                            <td className=\"td-actions text-right\">Lots\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr><td>BUY/SELL </td>\r\n                                            <td className=\"td-actions text-right\">Buy/Sell\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Contract Size </td>\r\n                                            <td className=\"td-actions text-right\">Size\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Exploser </td>\r\n                                            <td className=\"td-actions text-right\">Exploser Total\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n\r\n\r\n                    <Col md={6}>\r\n                        <div className=\"card \">\r\n\r\n                            <div className=\"header\">\r\n\r\n                                <h6 className={'colorDarkBlue , loginCenter'}>Account - B</h6>\r\n                            </div>\r\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                <table className=\"table\">\r\n                                    <tbody>\r\n\r\n                                        <tr><td>Symbol </td>\r\n                                            <td className=\"td-actions text-right\">Symbol\r\n\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr><td>Lots </td>\r\n                                            <td className=\"td-actions text-right\">Lots\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr><td>BUY/SELL </td>\r\n                                            <td className=\"td-actions text-right\">Sell\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Contract Size </td>\r\n                                            <td className=\"td-actions text-right\">Size\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Exploser </td>\r\n                                            <td className=\"td-actions text-right\">Total\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n\r\n\r\n                </Row>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport config from \"../../constant/config\";\r\nimport Data from \"../Data\";\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\nimport \"./ContractSize.css\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { api } from \"../../api\";\r\nimport myInitObject from \"../../api\";\r\nconst axios = require(\"axios\");\r\nexport default class ContractSize extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fromAccounts: \"\",\r\n      fromSymbol: \"\",\r\n      toAccounts: \"\",\r\n      toSymbol: \"\",\r\n      fromOpenOrderInfos: \"\",\r\n      toOpenOrderInfos: \"\",\r\n      total: \"\",\r\n      totalTo: \"\",\r\n      blockloader: true,\r\n      selectedOption: null,\r\n      allHistoryRecord: [],\r\n      allOpenRecord: [],\r\n      fromHistoryOrderInfo: [],\r\n      toHistoryOrderInfo: [],\r\n      commissionHistoryOrderInfo: [],\r\n      fromOpenOrderInfo: [],\r\n      toOpenOrderInfo: [],\r\n      filterlist: [],\r\n      loading: true,\r\n      dateTime: \"\",\r\n      errorMassege: true,\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    setInterval(() => {\r\n      if (\r\n        (myInitObject.responsHT &&\r\n          myInitObject.responsOT &&\r\n          myInitObject.responsSD) === undefined\r\n      ) {\r\n        console.log(\"no data\");\r\n      } else {\r\n        this.setState(\r\n          {\r\n            //last update time\r\n            dateTime: myInitObject.fetchLastUpdatedTime.filteredInfoTime,\r\n            // status data\r\n            loading: false,\r\n            fromAccounts: myInitObject.fetchStatusData.fromAccounts,\r\n            fromSymbol: myInitObject.fetchStatusData.fromSymbol,\r\n            toAccounts: myInitObject.fetchStatusData.toAccounts,\r\n            toSymbol: myInitObject.fetchStatusData.toSymbol,\r\n            fromOpenOrderInfos:\r\n              myInitObject.fetchStatusData.fromOpenOrderInfos.length > 0\r\n                ? myInitObject.fetchStatusData.fromOpenOrderInfos[0]\r\n                : \"\",\r\n            blockloader:\r\n              myInitObject.fetchStatusData.fromOpenOrderInfos.length > 0\r\n                ? false\r\n                : true,\r\n            total:\r\n              myInitObject.fetchStatusData.fromOpenOrderInfos.length > 0 &&\r\n              myInitObject.fetchStatusData.fromOpenOrderInfos[0].order_type == 0\r\n                ? myInitObject.fetchStatusData.fromSymbol?.contract_size *\r\n                  myInitObject.fetchStatusData.fromOpenOrderInfos[0]?.lots\r\n                : myInitObject.fetchStatusData.fromSymbol?.contract_size *\r\n                  -myInitObject.fetchStatusData.fromOpenOrderInfos[0]?.lots,\r\n            toOpenOrderInfos:\r\n              myInitObject.fetchStatusData.toOpenOrderInfos.length > 0\r\n                ? myInitObject.fetchStatusData.toOpenOrderInfos[0]\r\n                : \"\",\r\n            totalTo:\r\n              myInitObject.fetchStatusData.toOpenOrderInfos.length > 0 &&\r\n              myInitObject.fetchStatusData.toOpenOrderInfos[0].order_type == 0\r\n                ? myInitObject.fetchStatusData.toSymbol?.contract_size *\r\n                  myInitObject.fetchStatusData.toOpenOrderInfos[0]?.lots\r\n                : myInitObject.fetchStatusData.toSymbol?.contract_size *\r\n                  -myInitObject.fetchStatusData.toOpenOrderInfos[0]?.lots,\r\n            //history trade\r\n            allHistoryRecord: myInitObject.fetchAllHistoryTrade.rows,\r\n            fromHistoryOrderInfo:\r\n              myInitObject.fetchAllHistoryTrade.fromHistoryOrderInfo,\r\n            toHistoryOrderInfo:\r\n              myInitObject.fetchAllHistoryTrade.toHistoryOrderInfo,\r\n            //open trade\r\n            allOpenRecord: myInitObject.fetchAllOpenTrade.rows,\r\n            fromOpenOrderInfo: myInitObject.fetchAllOpenTrade.fromOpenOrderInfo,\r\n            toOpenOrderInfo: myInitObject.fetchAllOpenTrade.toOpenOrderInfo,\r\n          },\r\n          () => {\r\n            this.setState({\r\n              errorMassege:\r\n                this.state.allHistoryRecord.length == 0 ? true : false,\r\n            });\r\n          }\r\n        );\r\n      }\r\n    }, 1000);\r\n  }\r\n  // componentDidMount() {\r\n  //     // this.fetchAllHIstoryTrade();\r\n  //     // this.fetchStatusData();\r\n  //     axios.get(config.baseurl + '/accounts/fetchAllSymbol')\r\n  //         .then(function (response) {\r\n  //             if (response.status == 200) {\r\n  //                 console.log(response, \"response ---------------fetchAllSymbol>\")\r\n  //             }\r\n  //         })\r\n  //     // this.fetchLastUpdatedTime();\r\n  // }\r\n  // fetchLastUpdatedTime = () => {\r\n  //     let self = this;\r\n  //     axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\r\n  //         .then(function (response) {\r\n  //             if (response.status == 200) {\r\n  //                 self.setState({ dateTime: response.data.filteredInfoTime })\r\n  //                 // console.log(self.state.dataOpenTrade.accountFromInfo,\"outyfjhkjh\");\r\n  //             }\r\n  //         });\r\n  // }\r\n\r\n  // fetchStatusData = () => {\r\n  //     let self = this;\r\n  //     let tottal = 0;\r\n  //     axios.get(config.baseurl + '/accounts/fetchStatusData')\r\n  //         .then(function (response) {\r\n  //             if (response.status == 200) {\r\n  //                 self.setState({ loading: false })\r\n\r\n  //                 self.setState({ fromAccounts: response.data.fromAccounts })\r\n  //                 self.setState({ fromSymbol: response.data.fromSymbol })\r\n  //                 // console.log(fromSymbol,\"fromSymbol\");\r\n  //                 self.setState({ toAccounts: response.data.toAccounts })\r\n  //                 self.setState({ toSymbol: response.data.toSymbol })\r\n  //                 self.setState({ fromOpenOrderInfos: response.data.fromOpenOrderInfos.length > 0 ? response.data.fromOpenOrderInfos[0] : '' })\r\n  //                 if (response.data.fromOpenOrderInfos.length > 0) {\r\n  //                     self.setState({ blockloader: false })\r\n  //                     if (response.data.fromOpenOrderInfos[0].order_type == 0) {\r\n  //                         self.setState({ total: response.data.fromSymbol.contract_size * (response.data.fromOpenOrderInfos[0].lots) })\r\n  //                     } else {\r\n  //                         self.setState({ total: response.data.fromSymbol.contract_size * -(response.data.fromOpenOrderInfos[0].lots) })\r\n  //                     }\r\n\r\n  //                     self.setState({ toOpenOrderInfos: response.data.toOpenOrderInfos.length > 0 ? response.data.toOpenOrderInfos[0] : '' })\r\n  //                 }\r\n  //                 if (response.data.toOpenOrderInfos.length > 0) {\r\n  //                     if (response.data.toOpenOrderInfos[0].order_type == 0) {\r\n  //                         self.setState({ totalTo: response.data.toSymbol.contract_size * (response.data.toOpenOrderInfos[0].lots) })\r\n  //                     } else {\r\n  //                         self.setState({ totalTo: response.data.toSymbol.contract_size * -(response.data.toOpenOrderInfos[0].lots) })\r\n  //                     }\r\n  //                 }\r\n\r\n  //             }\r\n  //         });\r\n  // }\r\n  // fetchAllHIstoryTrade = () => {\r\n  //     let self = this;\r\n  //     axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\r\n  //         .then(function (response) {\r\n  //             // console.log(response.data, 'response.data his')\r\n  //             if (response.status == 200) {\r\n  //                 self.setState({ errorMassege: false })\r\n  //                 // self.setState({ allHistoryRecord: response.data.rows })\r\n  //                 self.setState({\r\n  //                     allHistoryRecord: response.data.rows,\r\n  //                     fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,sNaN(parseInt(s)\r\n  //                     toHistoryOrderInfo: response.data.toHistoryOrderInfo,\r\n  //                     commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\r\n  //                 })\r\n  //             }\r\n  //         })\r\n  //     // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\r\n  //     // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\r\n  //     axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\r\n  //         .then(function (response) {\r\n  //             if (response.status == 200) {\r\n\r\n  //                 // self.setState({ allOpenRecord: response.data.rows })\r\n  //                 self.setState({\r\n  //                     allOpenRecord: response.data.rows,\r\n  //                     fromOpenOrderInfo: response.data.fromOpenOrderInfo,\r\n  //                     toOpenOrderInfo: response.data.toOpenOrderInfo\r\n  //                 })\r\n  //             }\r\n  //         })\r\n  // }\r\n\r\n  render() {\r\n    const {\r\n      allHistoryRecord,\r\n      allOpenRecord,\r\n      selectedOption,\r\n      toOpenOrderInfo,\r\n      fromOpenOrderInfo,\r\n      fromHistoryOrderInfo,\r\n      commissionHistoryOrderInfo,\r\n      toHistoryOrderInfo,\r\n    } = this.state;\r\n    //   const sumOfOpenTotal = allOpenRecord.reduce((current, data) => {\r\n    //     return (Math.floor(data.commission + data.swap + data.profit+ current));\r\n    // }, 0);\r\n\r\n    //   const sumOfHistoryTotal = allHistoryRecord.reduce((current, data) => {\r\n    //     return (data.profit + current);\r\n    // }, 0);\r\n    let uniqueSymbols = \"\";\r\n    if (allOpenRecord && Object.entries(allOpenRecord).length > 0) {\r\n      let fromSymbols = JSON.parse(allOpenRecord.from_symbols);\r\n      // fromSymbols = (fromSymbols).map(data => data).join(', ');\r\n      let toSymbols = JSON.parse(allOpenRecord.to_symbols);\r\n      let combineSymbols = fromSymbols.concat(toSymbols);\r\n      uniqueSymbols = combineSymbols.filter(\r\n        (item, i, ar) => ar.indexOf(item) === i\r\n      );\r\n      uniqueSymbols = uniqueSymbols.map((data) => data).join(\", \");\r\n    }\r\n    let fromsum = 0;\r\n    let tosum = 0;\r\n    // if(fromHistoryOrderInfo && commissionHistoryOrderInfo && fromHistoryOrderInfo.length>0){\r\n    if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\r\n      fromsum =\r\n        fromHistoryOrderInfo[0].commission +\r\n        fromHistoryOrderInfo[0].swap +\r\n        fromHistoryOrderInfo[0].profit;\r\n    }\r\n\r\n    if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\r\n      tosum =\r\n        toHistoryOrderInfo[0].commission +\r\n        toHistoryOrderInfo[0].swap +\r\n        toHistoryOrderInfo[0].profit;\r\n    }\r\n\r\n    let sumOfHistoryTotal = tosum + fromsum;\r\n\r\n    let openfromsum = 0;\r\n    let opentosum = 0;\r\n    if (\r\n      fromOpenOrderInfo &&\r\n      fromOpenOrderInfo.length > 0 &&\r\n      fromOpenOrderInfo[0].total != null\r\n    ) {\r\n      openfromsum =\r\n        fromOpenOrderInfo[0].commission +\r\n        fromOpenOrderInfo[0].swap +\r\n        fromOpenOrderInfo[0].profit;\r\n    }\r\n    if (\r\n      toOpenOrderInfo &&\r\n      toOpenOrderInfo.length > 0 &&\r\n      toOpenOrderInfo[0].total != null\r\n    ) {\r\n      opentosum =\r\n        toOpenOrderInfo[0].commission +\r\n        toOpenOrderInfo[0].swap +\r\n        toOpenOrderInfo[0].profit;\r\n    }\r\n\r\n    let sumOfOpenTotal = opentosum + openfromsum;\r\n    this.state.total = isNaN(parseInt(this.state.total)) ? 0 : parseInt(this.state.total)\r\n    this.state.totalTo = isNaN(parseInt(this.state.totalTo)) ? 0 : parseInt(this.state.totalTo)\r\n\r\n    console.log(this.state.total , typeof isNaN(this.state.totalTo)  , \"jjjjjj\", this.state.totalTo);\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.errorMassege == true ? (\r\n          <div className=\"popup\">\r\n            <div className=\"card w-75 \">\r\n              <div className=\"card-body topmargin\">\r\n                <div className=\" card-text popuptext\" role=\"alert\">\r\n                  Please Select Filters To Continue...\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Row>\r\n              <div className=\"lastUpdate\">\r\n                <span> Last Updated : </span>\r\n                {this.state.dateTime}(UTC){\" \"}\r\n              </div>\r\n            </Row>\r\n            <div className=\"contractSize-wrapper\">\r\n              <div className=\" leftset card \">\r\n                {this.state.loading ? (\r\n                  <Loader\r\n                    type=\"ThreeDots\"\r\n                    color=\"black\"\r\n                    height={100}\r\n                    width={100}\r\n                    style={{ textAlign: \"center\" }}\r\n                  />\r\n                ) : (\r\n                  <Row>\r\n                    <h4 className=\"text-center \">\r\n                      <b>Exposure</b>\r\n                    </h4>\r\n                    {/* {this.state.fromOpenOrderInfos && this.state.fromOpenOrderInfos.order_type !== null || this.state.toOpenOrderInfos && this.state.toOpenOrderInfos.order_type !== null ? */}\r\n                    <>\r\n                      {\" \"}\r\n                      {this.state.fromOpenOrderInfos !== \"\" &&\r\n                      this.state.fromOpenOrderInfos.order_type !== null ? (\r\n                        <Col md={4}>\r\n                          <div className=\"card\">\r\n                            <div\r\n                              className={\"colorDarkBlue , boldText loginCenter\"}\r\n                            >\r\n                              {this.state.fromAccounts.alias}\r\n                            </div>\r\n\r\n                            <h6 className={\"colorDarkBlue loginCenter\"}>\r\n                              {this.state.fromAccounts.login}\r\n                            </h6>\r\n\r\n                            <div className=\"content table-full-width \">\r\n                              <div className=\"table-responsive\">\r\n                                <div className=\"text-center\">\r\n                                  <span>{this.state.fromSymbol.name}</span>\r\n                                  {this.state.fromOpenOrderInfos !== \"\" &&\r\n                                    this.state.fromOpenOrderInfos.order_type !==\r\n                                      null && (\r\n                                      <span\r\n                                        className=\"td-actions bText, clearBorder\"\r\n                                        style={{ display: \"block\" }}\r\n                                      >\r\n                                        {this.state.fromOpenOrderInfos\r\n                                          .order_type == 0\r\n                                          ? \"BUY \"\r\n                                          : \"SELL \"}\r\n                                        {this.state.fromOpenOrderInfos.lots}{\" \"}\r\n                                        {this.state.fromOpenOrderInfos.lots > 1\r\n                                          ? \"Lots\"\r\n                                          : \"Lot\"}\r\n                                      </span>\r\n                                    )}\r\n                                </div>\r\n                                <br></br>\r\n                                <div className=\"text-center\">\r\n                                  <span className=\"td-actions clearBorder text-right\">\r\n                                    <NumberFormat\r\n                                      value={this.state.total}\r\n                                      displayType={\"text\"}\r\n                                      thousandSeparator={true}\r\n                                      decimalScale={2}\r\n                                    />{\" \"}\r\n                                    {this.state.fromSymbol.margin_currency}\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </Col>\r\n                      ) : (\r\n                        <Col md={4}>\r\n                          <div className=\"card change noRecordCol\">\r\n                            {\" \"}\r\n                            No Record Found\r\n                          </div>\r\n                        </Col>\r\n                      )}\r\n                      <Col md={4}>\r\n                        <div className=\"card\">\r\n                          \r\n                            {(this.state.total + this.state.totalTo == 0) || \r\n                            ((this.state.total == 0) && \r\n                            (this.state.totalTo == 0)) ? (\r\n                            <h5 className=\"  text-center adjustMent\">\r\n                              <span style={{ color: \"green\" }}>\r\n                                <b> No Exposure</b>\r\n                              </span>\r\n                          </h5>)\r\n                              : ''}\r\n                          {this.state.total !== 0 &&\r\n                            this.state.totalTo !== 0 && \r\n                            this.state.total + this.state.totalTo != 0 && (\r\n                                <>\r\n                                 <h5 className=\"  text-center adjustMent\">\r\n                                  <b> Exposure</b> \r\n                              </h5>\r\n                              <div\r\n                                style={{ color: \"#b70606\" }}\r\n                                className=\" setBottom bText text-center\"\r\n                              >\r\n                                <NumberFormat\r\n                                  value={this.state.total + this.state.totalTo}\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  decimalScale={2}\r\n                                />\r\n                                {this.state.fromSymbol?.margin_currency ===\r\n                                this.state.toSymbol?.margin_currency\r\n                                  ? `  ` +\r\n                                      this.state.fromSymbol.margin_currency ||\r\n                                    this.state.toSymbol.margin_currency\r\n                                  : \"\"}\r\n                              </div>\r\n                              </>\r\n                            )}\r\n                          {this.state.totalTo !== 0 &&\r\n                            (isNaN(this.state.total) == true ||\r\n                              this.state.total == 0) && (\r\n                                  <>\r\n                                <h5 className=\"  text-center adjustMent\">\r\n                                  <b> Exposure</b> \r\n                              </h5>\r\n                              <div\r\n                                style={{ color: \"#b70606\" }}\r\n                                className=\" setBottom bText text-center\"\r\n                              >\r\n                                <NumberFormat\r\n                                  value={this.state.totalTo}\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  decimalScale={2}\r\n                                />\r\n                                {this.state.toSymbol?.margin_currency\r\n                                  ? `  ` + this.state.toSymbol.margin_currency\r\n                                  : \"\"}\r\n                              </div>\r\n                              </>\r\n                            )}\r\n                          {this.state.total != 0 &&\r\n                            (isNaN(this.state.totalTo) == true ||\r\n                              this.state.totalTo == 0) && (\r\n                                  <>\r\n                                <h5 className=\"  text-center adjustMent\">\r\n                                <b> Exposure</b> \r\n                            </h5>\r\n                              <div\r\n                                style={{ color: \"#b70606\" }}\r\n                                className=\" setBottom bText text-center\"\r\n                              >\r\n                                <NumberFormat\r\n                                  value={this.state.total}\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  decimalScale={2}\r\n                                />\r\n                                {this.state.fromSymbol?.margin_currency\r\n                                  ? `  ` + this.state.fromSymbol.margin_currency\r\n                                  : \"\"}\r\n                              </div>\r\n                              </>\r\n                            )}\r\n                        </div>\r\n                      </Col>\r\n                      {this.state.toOpenOrderInfos !== \"\" &&\r\n                      this.state.toOpenOrderInfos.order_type !== null ? (\r\n                        <Col md={4}>\r\n                          <div className=\" leftset1 card\">\r\n                            <div className={\"color2 , boldText loginCenter\"}>\r\n                              {this.state.toAccounts.alias}\r\n                            </div>\r\n\r\n                            <h6 className={\"color2 ,bText, loginCenter\"}>\r\n                              {this.state.toAccounts.login}\r\n                            </h6>\r\n\r\n                            <div className=\"content table-full-width \">\r\n                              <div className=\"table-responsive\">\r\n                                <div className=\"text-center\">\r\n                                  <span className=\"td-actions bText, clearBorder text-right\">\r\n                                    {this.state.toSymbol.name}\r\n                                  </span>\r\n                                  {this.state.toOpenOrderInfos !== \"\" &&\r\n                                    this.state.toOpenOrderInfos.order_type !==\r\n                                      null && (\r\n                                      <span\r\n                                        className=\"td-actions bText, clearBorder\"\r\n                                        style={{ display: \"block\" }}\r\n                                      >\r\n                                        {this.state.toOpenOrderInfos\r\n                                          .order_type == 0\r\n                                          ? \"BUY \"\r\n                                          : \"SELL \"}\r\n                                        {this.state.toOpenOrderInfos.lots}{\" \"}\r\n                                        {this.state.toOpenOrderInfos.lots > 1\r\n                                          ? \"Lots\"\r\n                                          : \"Lot\"}\r\n                                      </span>\r\n                                    )}\r\n                                </div>\r\n                                <br></br>\r\n                                <div className=\"text-center\">\r\n                                  <span>\r\n                                    <NumberFormat\r\n                                      value={this.state.totalTo}\r\n                                      displayType={\"text\"}\r\n                                      thousandSeparator={true}\r\n                                      decimalScale={2}\r\n                                    />{\" \"}\r\n                                    {this.state.toSymbol.margin_currency}\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </Col>\r\n                      ) : (\r\n                        <Col md={4}>\r\n                          <div className=\"card change noRecordCol\">\r\n                            {\" \"}\r\n                            No Record Found\r\n                          </div>\r\n                        </Col>\r\n                      )}\r\n                    </>\r\n                    {/* <Col md={12}>\r\n                                            <div className=\"card change noRecordCol\"> No Recor Found</div>\r\n                                        </Col> */}\r\n                    {/* } */}\r\n                  </Row>\r\n                )}\r\n                <Col md={12} sm={6}>\r\n                  <div\r\n                    className={\r\n                      sumOfHistoryTotal + sumOfOpenTotal >= 0\r\n                        ? \"summary-box\"\r\n                        : \"summary-box-red\"\r\n                    }\r\n                  >\r\n                    {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\r\n                    {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\r\n                <span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\r\n\r\n                    <Col md={12} sm={12}>\r\n                      <div\r\n                        className=\"summary-text text-center\"\r\n                        style={{ fontWeight: 600, color: \"#797979\" }}\r\n                      >\r\n                        Summary For ({uniqueSymbols}){\" \"}\r\n                        {allHistoryRecord.history_info !== 0 && (\r\n                          <span> + Commission</span>\r\n                        )}{\" \"}\r\n                      </div>\r\n                    </Col>\r\n                    <Col md={12} sm={12}>\r\n                      <div\r\n                        className=\"text-center\"\r\n                        style={{ fontWeight: \"bold\", fontSize: \"18px\" }}\r\n                      >\r\n                        ${\" \"}\r\n                        <NumberFormat\r\n                          value={\r\n                            allHistoryRecord.history_info !== undefined\r\n                              ? sumOfHistoryTotal +\r\n                                sumOfOpenTotal +\r\n                                allHistoryRecord.history_info\r\n                              : sumOfHistoryTotal + sumOfOpenTotal\r\n                          }\r\n                          displayType={\"text\"}\r\n                          thousandSeparator={true}\r\n                          decimalScale={2}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <div className=\"clearfix\"></div>\r\n                  </div>\r\n                </Col>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport NumberFormat from 'react-number-format';\r\nimport config from '../../constant/config';\r\nimport Data from '../Data';\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\nimport './Statistics.css'\r\nimport { api } from '../../api'\r\nimport myInitObject from '../../api'\r\nconst axios = require('axios');\r\nexport default class Statistics extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n            filterlist: [],\r\n            selectedOption: null,\r\n            allHistoryRecord: [],\r\n            allOpenRecord: [],\r\n            fromHistoryOrderInfo: [],\r\n            toHistoryOrderInfo: [],\r\n            commissionHistoryOrderInfo: [],\r\n            fromOpenOrderInfo: [],\r\n            dateTime: '',\r\n            activeProfileName: ''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        // this.fetchActivefilterData();\r\n        // this.fetchAllHIstoryTrade();\r\n        // this.fetchLastUpdatedTime()\r\n        setInterval(() => {\r\n         if((myInitObject.responsHT &&\r\n           myInitObject.responsOT &&\r\n           myInitObject.responsAC &&\r\n           myInitObject.responsAF &&\r\n           myInitObject.responsLUT &&\r\n           myInitObject.responsSD) === undefined){\r\n           console.log('no data');\r\n         }else{\r\n        //    console.log(myInitObject, '=========><')\r\n           this.setState({\r\n             //history trade\r\n             allHistoryRecord: myInitObject.fetchAllHistoryTrade.rows,\r\n             fromHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.fromHistoryOrderInfo,\r\n             toHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.toHistoryOrderInfo,\r\n             //open trade\r\n             allOpenRecord: myInitObject.fetchAllOpenTrade.rows,\r\n             fromOpenOrderInfo: myInitObject.fetchAllOpenTrade.fromOpenOrderInfo,\r\n             toOpenOrderInfo: myInitObject.fetchAllOpenTrade.toOpenOrderInfo,\r\n            \r\n             //active filter data\r\n             filterlist: myInitObject.fetchActivefilterdata.rows,\r\n            \r\n             activeProfileName: myInitObject.fetchActivefilterdata.rows[0].profile_name, \r\n             //last updated time\r\n             dateTime: myInitObject.fetchLastUpdatedTime.filteredInfoTime,\r\n             \r\n             },() =>{\r\n               this.setState({ errorMassege:this.state.filterlist.length == 0 ?  true : false,})\r\n             })\r\n         }\r\n        },1000)\r\n\r\n    }\r\n    // fetchLastUpdatedTime = () => {\r\n    //     let self = this;\r\n    //     axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\r\n    //         .then(function (response) {\r\n    //             if (response.status == 200) {\r\n    //                 self.setState({ dateTime: response.data.filteredInfoTime })\r\n    //                 // console.log(self.state.dataOpenTrade.accountFromInfo,\"outyfjhkjh\");\r\n    //             }\r\n    //         });\r\n    // }\r\n    // fetchActivefilterData = () => {\r\n    //     let self = this;\r\n    //     axios.get(config.baseurl + '/filter/fetchActivefilterdata')\r\n    //         .then(function (response) {\r\n    //             if (response.status == 200) {\r\n    //                 console.log(response, \"respp----------------->\")\r\n    //                 self.setState({ filterlist: response.data.rows, })\r\n    //                 if (self.state.filterlist.length == 0) {\r\n    //                     self.setState({ errorMassege: true ,})\r\n    //                     }\r\n    //                     else{\r\n    //                         self.setState({activeProfileName: response.data.rows[0].profile_name})\r\n    //                     }\r\n    //             }\r\n    //         });\r\n    // }\r\n\r\n    showData = (accountDetailValue) => {\r\n\r\n        return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\r\n            if (accountDetailValue === 'margin_level') {\r\n                return (\r\n                    <>\r\n                        <td className=\"tdClr2 tdClr boldText\" key={index}>\r\n                            <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\r\n                </td>\r\n                        <td className=\"tdClr2 boldText\" key={index}>\r\n                            {/* {item.accountToInfo[0].accounts_details[0][accountDetailValue]} % */}\r\n                            <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\r\n                </td>\r\n                    </>\r\n                )\r\n            }\r\n            if (item.accountFromInfo.length > 0) {\r\n                return (\r\n                    <>\r\n                        <td className=\"tdClr2 tdClr boldText\" key={index}>\r\n                            {item.accountFromInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''}  {' '}\r\n                            <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                        </td>\r\n\r\n                        <td className=\"tdClr2 boldText\" key={index}>\r\n                            {item.accountToInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''} {' '}\r\n                            {/* {item.accountToInfo[0].accounts_details[0][accountDetailValue]} */}\r\n                            <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                        </td>\r\n                    </>\r\n                )\r\n\r\n            }\r\n\r\n        })\r\n    }\r\n    tableHeader = () => {\r\n\r\n        return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\r\n            return (\r\n                <>\r\n                    <th key={index} className=\"bText colorDarkBlue text-center tdClr2 tdClr\">\r\n                        <div className=\"colorDarkBlue\" >\r\n                            {(item.accountFromInfo[0].alias != null) ? item.accountFromInfo[0].alias : '-'}\r\n                        </div>\r\n                        <span style={{ fontSize: 10 }}>\r\n                            {item.accountFromInfo[0].login}\r\n                        </span>\r\n\r\n                    </th>\r\n                    <th key={index} className=\"bText color2 text-center tdClr2\">\r\n                        <div className=\"color2\" >\r\n                            {(item.accountToInfo[0].alias != null) ? item.accountToInfo[0].alias : '-'}\r\n                        </div>\r\n                        <span style={{ fontSize: 10 }}>\r\n                            {item.accountToInfo[0].login}\r\n                        </span>\r\n\r\n                    </th>\r\n                </>\r\n\r\n            )\r\n\r\n        })\r\n    }\r\n    // fetchAllHIstoryTrade = () => {\r\n    //     let self = this;\r\n    //     axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\r\n    //         .then(function (response) {\r\n    //             // console.log(response.data, 'response.data his')\r\n    //             if (response.status == 200) {\r\n    //                 // self.setState({ allHistoryRecord: response.data.rows })\r\n    //                 self.setState({\r\n    //                     allHistoryRecord: response.data.rows,\r\n    //                     fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,\r\n    //                     toHistoryOrderInfo: response.data.toHistoryOrderInfo,\r\n    //                     commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\r\n    //                 })\r\n    //             }\r\n    //         })\r\n    //     // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\r\n    //     // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\r\n    //     axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\r\n    //         .then(function (response) {\r\n    //             if (response.status == 200) {\r\n\r\n    //                 // self.setState({ allOpenRecord: response.data.rows })\r\n    //                 self.setState({\r\n    //                     allOpenRecord: response.data.rows,\r\n    //                     fromOpenOrderInfo: response.data.fromOpenOrderInfo,\r\n    //                     toOpenOrderInfo: response.data.toOpenOrderInfo\r\n    //                 })\r\n    //             }\r\n    //         })\r\n    // }\r\n    render() {\r\n        const { allHistoryRecord, allOpenRecord, selectedOption, toOpenOrderInfo, fromOpenOrderInfo, fromHistoryOrderInfo, commissionHistoryOrderInfo, toHistoryOrderInfo } = this.state;\r\n        //   const sumOfOpenTotal = allOpenRecord.reduce((current, data) => {\r\n        //     return (Math.floor(data.commission + data.swap + data.profit+ current));\r\n        // }, 0);\r\n\r\n        //   const sumOfHistoryTotal = allHistoryRecord.reduce((current, data) => {\r\n        //     return (data.profit + current);\r\n        // }, 0);\r\n        let uniqueSymbols = \"\";\r\n        if (allOpenRecord && Object.entries(allOpenRecord).length > 0) {\r\n            let fromSymbols = JSON.parse(allOpenRecord.from_symbols);\r\n            // fromSymbols = (fromSymbols).map(data => data).join(', ');\r\n            let toSymbols = JSON.parse(allOpenRecord.to_symbols);\r\n            let combineSymbols = fromSymbols.concat(toSymbols);\r\n            uniqueSymbols = combineSymbols.filter((item, i, ar) => ar.indexOf(item) === i);\r\n            uniqueSymbols = (uniqueSymbols).map(data => data).join(', ')\r\n        }\r\n        let fromsum = 0;\r\n        let tosum = 0;\r\n        // if(fromHistoryOrderInfo && commissionHistoryOrderInfo && fromHistoryOrderInfo.length>0){\r\n        if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\r\n            fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\r\n        }\r\n\r\n        if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\r\n            tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\r\n        }\r\n\r\n        let sumOfHistoryTotal = tosum + fromsum;\r\n\r\n        let openfromsum = 0;\r\n        let opentosum = 0;\r\n        if ((fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total != null)) {\r\n            // if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\r\n            //   openfromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\r\n            // }else{\r\n            openfromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\r\n\r\n        }\r\n        if ((toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total != null)) {\r\n            // if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\r\n            //   opentosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit+ toOpenOrderInfo[0].swap);\r\n            // }\r\n\r\n            // else{\r\n            //   opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n            // }\r\n            opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n        }\r\n\r\n        let sumOfOpenTotal = opentosum + openfromsum;\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {(this.state.errorMassege) ? <div className=\"popup\">\r\n\r\n                    <div className=\"card w-75 \">\r\n                        <div className=\"card-body topmargin\">\r\n                            <div className=\" card-text popuptext\" role=\"alert\">Please activate filter profile to view stats.......</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                    :\r\n                    <div className=\"statistic-wrapper\">\r\n                        <Grid fluid>\r\n                            <Row>\r\n                                <div className=\"lastUpdate\">\r\n                                    <span> Last Updated :  </span>\r\n                                    {this.state.dateTime}(UTC)  </div>\r\n                            </Row>\r\n                            <div className=\"terminal-box\">\r\n\r\n                                <span className=\"terminal-text\">Terminal Statistics</span>\r\n                            </div>\r\n                            <Row noGutters={true}>\r\n                                {Data.dashBoardPage.items.map((item, index) =>\r\n\r\n                                    <Col md={4} sm={6} key={index}>\r\n                                        <div style={{ margin: '30px 0px' }} className=\"text-center\">\r\n                                            <span className=\"bText\">{item.title}</span>\r\n                                        </div>\r\n                                        <div className=\"balance-box Pmargin\"\r\n                                        // className={item.id == '1' ? 'balance-box' : item.id == '2' ?\r\n                                        //   'balance-box Pmargin' : item.id == '3' ? 'balance-box equity-box' :\r\n                                        //     item.id == '4' ? 'balance-box Fmargin' : item.id == '5' ? 'balance-box floating' : 'balance-box  margin-box'}\r\n                                        >\r\n                                            <div className=\"content\">\r\n                                                <div className=\"table-responsive\">\r\n\r\n                                                    <table className=\"table  text-center\">\r\n\r\n                                                        <tbody>\r\n                                                            <tr>\r\n                                                                {this.tableHeader()}\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                {item.title == 'Balance' && this.showData('balance')}\r\n                                                                {item.title == 'Equity' && this.showData('equity')}\r\n                                                                {item.title == 'Margin' && this.showData('margin')}\r\n                                                                {item.title == 'Free Margin' && this.showData('free_margin')}\r\n                                                                {item.title == 'Margin %' && this.showData('margin_level')}\r\n                                                                {item.title == 'Unrealized P/L' && this.showData('profit')}\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                    </table>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Col>\r\n\r\n                                )}\r\n                            </Row>\r\n                            <Col md={12} sm={6}>\r\n                                <div className={sumOfHistoryTotal + sumOfOpenTotal >= 0 ? \"summary-box\" : \"summary-box-red\"}>\r\n\r\n\r\n                                    {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\r\n                                    {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\r\n                <span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\r\n\r\n                                    <Col md={12} sm={12}>\r\n                                        <div className=\"summary-text text-center\" style={{ fontWeight: 600, color: \"#797979\" }}>Summary For ({this.state.activeProfileName}) {allHistoryRecord.history_info !== 0 && (<span> + Commission</span>)} </div>\r\n                                    </Col>\r\n                                    <Col md={12} sm={12}>\r\n                                        <div className=\"text-center\" style={{ fontWeight: 'bold', fontSize: \"18px\" }}>$ {' '}\r\n                                            <NumberFormat value={allHistoryRecord.history_info !== undefined ? sumOfHistoryTotal + sumOfOpenTotal + allHistoryRecord.history_info : sumOfHistoryTotal + sumOfOpenTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n\r\n                                            {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\r\n\r\n                                        </div>\r\n                                    </Col>\r\n\r\n                                    <div className=\"clearfix\"></div>\r\n                                </div>\r\n                            </Col>\r\n                        </Grid>\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import Dashboard from \"views/Dashboard.jsx\";\r\n// import UserProfile from \"views/UserProfile.jsx\";\r\n// import TableList from \"views/TableList.jsx\";\r\n// import Typography from \"views/Typography.jsx\";\r\n// import Icons from \"views/Icons.jsx\";\r\n// import Maps from \"views/Maps.jsx\";\r\n// import Notifications from \"views/Notifications.jsx\";\r\n// import Upgrade from \"views/Upgrade.jsx\";\r\n// import Filter from '../src/views/Filter';\r\nimport Innerlogin from 'views/Innerlogin';\r\nimport Filterprofile from './views/filter/Filterprofile';\r\nimport Swap from '../src/views/swap';\r\nimport calculating from '../src/views/calculating';\r\nimport Exploser from '../src/views/exploser';\r\nimport ContractSize from './views/ContractSize/ContractSize';\r\nimport Statistics from './views/Statistics/Statistics';\r\nimport myInitObject from './api'\r\n\r\nconst dashboardRoutes = [\r\n  {\r\n    id: 1,\r\n    child: false,\r\n    menu: false,\r\n    path: \"/dashboard\",\r\n    name: \"Dashboard\",\r\n    icon: \"pe-7s-graph\",\r\n    component: Dashboard,\r\n    layout: \"/dashboard\",\r\n    data: myInitObject\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    child: false,\r\n    menu: false,\r\n    path: \"/Statistics\",\r\n    name: \" Statistics\",\r\n    icon: \"pe-7s-filter\",\r\n    component: Statistics,\r\n    layout: \"/dashboard\",\r\n  },\r\n\r\n\r\n  {\r\n    id: 3,\r\n    child: false,\r\n    menu: false,\r\n    path: \"/calculating\",\r\n    name: \"Positions\",\r\n    icon: \"pe-7s-calculator\",\r\n    component: calculating,\r\n    layout: \"/dashboard\",\r\n  },\r\n  {\r\n    id: 3,\r\n    child: false,\r\n    menu: false,\r\n    path: \"/contractSize\",\r\n    name: \" Contract Size Exposure\",\r\n    icon: \"pe-7s-search\",\r\n    component: ContractSize,\r\n    // component: calculating,\r\n    layout: \"/dashboard\",\r\n  },\r\n \r\n\r\n\r\n  // {\r\n  //   path: \"/exploser\",\r\n  //   name: \"Exploser\",\r\n  //   icon: \"pe-7s-search\",\r\n  //   component: Exploser,\r\n  //   layout: \"/admin\"\r\n  // },\r\n\r\n\r\n  {\r\n    id: 4,\r\n    child: true,\r\n    menu: false,\r\n    // path: \"/innerlogin\",\r\n    name: \"Settings\",\r\n    // component: Innerlogin,\r\n    icon: \"pe-7s-note2\",\r\n    // layout: \"/admin\",\r\n\r\n\r\n    resources: [\r\n      {\r\n\r\n        path: \"/settings/innerlogin\",\r\n        name: \"Login/Accounts\",\r\n        icon: \"pe-7s-note2\",\r\n        component: Innerlogin,\r\n        layout: \"/dashboard\"\r\n      },\r\n\r\n\r\n      {\r\n\r\n        path: \"/settings/filterpage\",\r\n        name: \"Filter\",\r\n        icon: \"pe-7s-filter\",\r\n        component: Filterprofile,\r\n        layout: \"/dashboard\"\r\n      },\r\n\r\n\r\n      {\r\n\r\n        path: \"/settings/swap\",\r\n        name: \"Swap\",\r\n        icon: \"pe-7s-graph\",\r\n        component: Swap,\r\n        layout: \"/dashboard\",\r\n      },\r\n    ]\r\n  },\r\n\r\n  // {\r\n  //   path: \"/typography\",\r\n  //   name: \"Typography\",\r\n  //   icon: \"pe-7s-news-paper\",\r\n  //   component: Typography,\r\n  //   layout: \"/dashboard\"\r\n  // },\r\n  // {\r\n  //   path: \"/icons\",\r\n  //   name: \"Icons\",\r\n  //   icon: \"pe-7s-science\",\r\n  //   component: Icons,\r\n  //   layout: \"/dashboard\"\r\n  // },\r\n  // {\r\n  //   path: \"/maps\",\r\n  //   name: \"Maps\",\r\n  //   icon: \"pe-7s-map-marker\",\r\n  //   component: Maps,\r\n  //   layout: \"/dashboard\"\r\n  // },\r\n  // {\r\n  //   path: \"/notifications\",\r\n  //   name: \"Notifications\",\r\n  //   icon: \"pe-7s-bell\",\r\n  //   component: Notifications,\r\n  //   layout: \"/dashboard\"\r\n  // },\r\n  // {\r\n  //   upgrade: true,\r\n  //   path: \"/upgrade\",\r\n  //   name: \"Upgrade to PRO\",\r\n  //   icon: \"pe-7s-rocket\",\r\n  //   component: Upgrade,\r\n  //   layout: \"/dashboard\"\r\n  // }\r\n];\r\n\r\nexport default dashboardRoutes;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport NotificationSystem from \"react-notification-system\";\r\n\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\r\n// import Footer from \"components/Footer/Footer\";\r\nimport Sidebar from \"components/Sidebar/Sidebar\";\r\n// import FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\r\n\r\nimport { style } from \"variables/Variables.jsx\";\r\n\r\nimport routes from \"routes.js\";\r\n\r\nimport image from \"assets/img/sidebar-3.jpg\";\r\n\r\nimport { api } from '../api'\r\nimport myInitObject from '../api'\r\n\r\nclass Admin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      _notificationSystem: null,\r\n      image: image,\r\n      color: \"black\",\r\n      hasImage: true,\r\n      fixedClasses: \"dropdown show-dropdown open\"\r\n    };\r\n  }\r\n  // handleNotificationClick = position => {\r\n  //   var color = Math.floor(Math.random() * 4 + 1);\r\n  //   var level;\r\n  //   switch (color) {\r\n  //     case 1:\r\n  //       level = \"success\";\r\n  //       break;\r\n  //     case 2:\r\n  //       level = \"warning\";\r\n  //       break;\r\n  //     case 3:\r\n  //       level = \"error\";\r\n  //       break;\r\n  //     case 4:\r\n  //       level = \"info\";\r\n  //       break;\r\n  //     default:\r\n  //       break;\r\n  //   }\r\n  //   this.state._notificationSystem.addNotification({\r\n  //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\r\n  //     message: (\r\n  //       <div>\r\n  //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\r\n  //         every web developer.\r\n  //       </div>\r\n  //     ),\r\n  //     level: level,\r\n  //     position: position,\r\n  //     autoDismiss: 15\r\n  //   });\r\n  // };\r\n  getRoutes = routes => {\r\n    let routeArray = []\r\n    routes.map((data) => {\r\n      routeArray.push(data)\r\n      if (data.child === true) {\r\n        data.resources.map((prop) => {\r\n          routeArray.push(prop)\r\n        })\r\n      }\r\n    })\r\n    return routeArray.map((prop, key) => {\r\n      if (prop.layout === \"/dashboard\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            render={props => (\r\n              <prop.component\r\n                {...props}\r\n                handleClick={this.handleNotificationClick}\r\n              />\r\n            )}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  getBrandText = path => {\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (\r\n        this.props.location.pathname.indexOf(\r\n          routes[i].layout + routes[i].path\r\n        ) !== -1\r\n      ) {\r\n        return routes[i].name;\r\n      }\r\n    }\r\n    // return \"Brand\";\r\n  };\r\n  handleImageClick = image => {\r\n    this.setState({ image: image });\r\n  };\r\n  handleColorClick = color => {\r\n    this.setState({ color: color });\r\n  };\r\n  handleHasImage = hasImage => {\r\n    this.setState({ hasImage: hasImage });\r\n  };\r\n  handleFixedClick = () => {\r\n    if (this.state.fixedClasses === \"dropdown\") {\r\n      this.setState({ fixedClasses: \"dropdown show-dropdown open\" });\r\n    } else {\r\n      this.setState({ fixedClasses: \"dropdown\" });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    let currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    if (currentUser === null) {\r\n      this.props.history.push('/login')\r\n      return;\r\n    }else{\r\n      api()\r\n      setInterval(() => {\r\n        api()\r\n      }, 300000);\r\n      \r\n    }\r\n\r\n    //   this.setState({ _notificationSystem: this.refs.notificationSystem });\r\n    //   var _notificationSystem = this.refs.notificationSystem;\r\n    //   var color = Math.floor(Math.random() * 4 + 1);\r\n    //   var level;\r\n    //   switch (color) {\r\n    //     case 1:\r\n    //       level = \"success\";\r\n    //       break;\r\n    //     case 2:\r\n    //       level = \"warning\";\r\n    //       break;\r\n    //     case 3:\r\n    //       level = \"error\";\r\n    //       break;\r\n    //     case 4:\r\n    //       level = \"info\";\r\n    //       break;\r\n    //     default:\r\n    //       break;\r\n    //   }\r\n    //   _notificationSystem.addNotification({\r\n    //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\r\n    //     message: (\r\n    //       <div>\r\n    //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\r\n    //         every web developer.\r\n    //       </div>\r\n    //     ),\r\n    //     level: level,\r\n    //     position: \"tr\",\r\n    //     autoDismiss: 15\r\n    //   });\r\n  }\r\n  componentDidUpdate(e) {\r\n    if (\r\n      window.innerWidth < 993 &&\r\n      e.history.location.pathname !== e.location.pathname &&\r\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n    ) {\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n    }\r\n    if (e.history.action === \"PUSH\") {\r\n      document.documentElement.scrollTop = 0;\r\n      document.scrollingElement.scrollTop = 0;\r\n      this.refs.mainPanel.scrollTop = 0;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <NotificationSystem ref=\"notificationSystem\" style={style} />\r\n        <Sidebar {...this.props} routes={routes} image={this.state.image}\r\n          color={this.state.color}\r\n          hasImage={this.state.hasImage} />\r\n        <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\r\n          <AdminNavbar\r\n            {...this.props}\r\n            brandText={this.getBrandText(this.props.location.pathname)}\r\n          />\r\n          <Switch>{this.getRoutes(routes)}</Switch>\r\n          {/* <Footer /> */}\r\n          {/* <FixedPlugin\r\n            handleImageClick={this.handleImageClick}\r\n            handleColorClick={this.handleColorClick}\r\n            handleHasImage={this.handleHasImage}\r\n            bgColor={this.state[\"color\"]}\r\n            bgImage={this.state[\"image\"]}\r\n            mini={this.state[\"mini\"]}\r\n            handleFixedClick={this.handleFixedClick}\r\n            fixedClasses={this.state.fixedClasses}\r\n          /> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin;\r\n","\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./assets/css/animate.min.css\";\r\nimport \"./assets/sass/light-bootstrap-dashboard-react.scss?v=1.3.0\";\r\nimport \"./assets/css/demo.css\";\r\nimport \"./assets/css/pe-icon-7-stroke.css\";\r\nimport \"./assets/css/dashboard.css\";\r\nimport innerfilter from \"./views/filter/innerfilter\";\r\nimport Login from \"./views/login\";\r\n\r\n\r\nimport AdminLayout from \"./layouts/Admin.jsx\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route path=\"/dashboard\" render={props => <AdminLayout {...props} />} />\r\n\r\n      <Route exact path=\"/dashboard/innerfilter\" component={innerfilter} />\r\n      <Route exact from=\"/login\" component={Login} />\r\n      {/* <Redirect from=\"/\" to=\"/admin/dashboard\" /> */}\r\n      {/* <Redirect from=\"/\" component={Login} /> */}\r\n      <Redirect from=\"/\" to=\"/login\"/>\r\n      {/* <Route exact path=\"/innerfilter\" component={innerfilter} /> */}\r\n\r\n    </Switch>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}