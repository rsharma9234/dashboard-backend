{"version":3,"sources":["variables/Variables.jsx","assets/img/sidebar-3.jpg","../node_modules/typescript/lib sync","constant/config.js","views/filter/innerfilter.js","views/login/index.js","components/Navbars/AdminNavbarLinks.jsx","components/Navbars/AdminNavbar.jsx","components/Sidebar/Sidebar.jsx","views/Closeposition.js","views/Data.js","views/Openposition.js","api.js","views/Innerlogin.js","views/TableList.jsx","views/Dashboard.jsx","views/filter/filteredit.js","views/filter/filterdetail.js","views/filter/Filterprofile.js","views/DatatablePage.js","views/swap/index.js","views/calculating/index.js","views/exploser/index.js","views/ContractSize/ContractSize.js","views/Statistics/Statistics.js","routes.js","layouts/Admin.jsx","index.js"],"names":["defaultWidth","window","screen","width","style","Wrapper","Containers","DefaultStyle","position","padding","zIndex","WebkitBoxSizing","MozBoxSizing","boxSizing","height","display","border","fontSize","WebkitFontSmoothing","fontFamily","fontWeight","color","tl","top","bottom","left","right","tr","tc","margin","marginLeft","bl","br","bc","NotificationItem","cursor","borderRadius","opacity","transition","WebkitTransform","transform","willChange","isHidden","isVisible","success","borderTop","backgroundColor","WebkitBoxShadow","MozBoxShadow","boxShadow","error","warning","info","Title","marginTop","MessageWrapper","marginRight","maxWidthwidth","Dismiss","float","lineHeight","outline","textAlign","Action","background","ActionWrapper","module","exports","thArray","tdArray","iconsArray","dataPie","labels","series","legendPie","names","types","dataSales","optionsSales","low","high","showArea","axisX","showGrid","lineSmooth","showLine","showPoint","fullWidth","chartPadding","responsiveSales","labelInterpolationFnc","value","legendSales","dataBar","optionsBar","seriesBarDistance","responsiveBar","legendBar","webpackEmptyContext","req","e","Error","code","keys","resolve","id","config","baseurl","axios","require","Innerfilter","props","getSymbolInfo","self","get","then","response","status","setState","allAccounts","data","rows","allSymbols","handleDropdownChange","selectValue","target","handleChangeDate","date","startDate","handleEndDate","state","endDate","handleChangeDateTo","startDateTo","handleEndDateTo","endDateTo","handleChange","event","Array","from","selectedOptions","item","renderAccountSelect","selectedAccountOption","options","map","label","login","placeholder","onChange","handleChangeAccount","handeChangeShowCommission","showCommission","showAddCommission","handleChangeAccountTo","selectedAccountOptionTo","renderAccountSelectTo","handleChangeCommissionAccount","selectedCommissionAccount","renderCommissionAccount","handleChangeMagicNumber","magicNumber","handleChangeMagicNumberTo","magicNumberTo","handleChangeTicket","ticket","handleChangeTicketTo","ticketTo","handleChangeSymbol","selectedSymbolOption","renderSymbolSelect","name","isMulti","handleChangeSymbolTo","selectedSymbolOptionTo","renderSymbolSelectTo","changeIncludeDefaultProperty","include","exclude","changeExcludeDefaultProperty","changeIncludeDefaultPropertyTo","includeTo","excludeTo","changeExcludeDefaultPropertyTo","changeIncludeDefaultPropertyTicket","includeTicket","includeTicketTo","excludeTicket","changeExcludeDefaultPropertyTicket","changeIncludeDefaultPropertyTicketTo","excludeTicketTo","changeExcludeDefaultPropertyTicketTo","profileName","showCommisoin","autoSyncClose","profileValues","nameError","showMagicNumber","showMagicNumberTo","tags","include_exclude_status","this","fetchfilterdata","length","charAt","toUpperCase","slice","filter","profile_name","NotificationManager","listNotify","preventDefault","from_status","to_status","from_status_ticket","to_status_ticket","symbolFrom","symbolto","Data","from_account_id","to_account_id","commission_acount_id","startdateFrom","enddateFrom","startdateTo","enddateTo","from_symbols","JSON","stringify","to_symbols","auto_close","from_magic_number","to_magic_number","from_include_exclude_status","to_include_exclude_status","from_ticket","to_ticket","from_include_exclude_status_ticket","to_include_exclude_status_ticket","createdAt","Date","updatedAt","post","onHide","catch","className","Grid","fluid","onClick","crossClick","aria-hidden","type","handleprofileName","defaultChecked","handleChangeAutoSync","Row","Col","md","selected","isClearable","placeholderText","dateFormat","strictParsing","autoOk","onValidationReject","console","log","validationRegex","inputProps","checked","Button","variant","size","block","formDataSubmit","Component","Login","toogle","loginForm","handleClose","handleShow","setShow","createNotification","show","username","password","alert","persons","shwPwd","shwMsg","invalidUsername","invalidPassword","accountlist","bind","onSubmit","trim","userdetail","localStorage","setItem","history","push","message","err","parse","getItem","sm","disabled","AdminNavbarLinks","logout","clear","notification","Nav","NavItem","eventKey","href","NavDropdown","title","noCaret","MenuItem","pullRight","Header","mobileSidebarToggle","sidebarExists","document","documentElement","classList","toggle","node","createElement","onclick","parentElement","removeChild","body","appendChild","Navbar","Brand","brandText","Toggle","Collapse","Sidebar","routes","menu","innerWidth","routeName","location","pathname","indexOf","updateDimensions","addEventListener","image","data-color","data-image","hasImage","prop","key","redirect","upgrade","activeRoute","layout","path","to","activeClassName","icon","child","undefined","resources","sub","index","Closeposition","allHistoryRecord","fromHistoryOrderInfo","toHistoryOrderInfo","commissionHistoryOrderInfo","useState","fromSymbols","toSymbols","Object","entries","join","fromsum","tosum","commission","swap","profit","sumOfTotal","noRecord","total","accountFromInfo","alias","displayType","thousandSeparator","decimalScale","accountToInfo","marginBottom","accountCommissionInfo","history_info","tablePage","items","lot","closed","price","textA","dashBoardPage","textB","Openposition","allOpenRecord","fromOpenOrderInfo","toOpenOrderInfo","order_type","lots","intervalSet","timerWaitInterval","myInitObject","api","fetchAllHistoryTrade","responsHT","fetchAllOpenTrade","responsOT","fetchAllAccounts","responsAC","fetchActivefilterdata","responsAF","fetchLastUpdatedTime","responsLUT","fetchStatusData","responsSD","calculatingOpenTrade","responsCOT","calculatingHistoryTrade","responsCHT","calculatingCommission","responsCC","fetchAllSymbol","responsAS","fetchdailyswaps","responsDS","usersAllAccounts","responsAAC","responsFF","TableList","fetchDataAccordingSymbols","symbol","filterlist","selectedOption","renderSymbols","isOpen2","setInterval","activeProfileName","errorMassege","concat","i","ar","class","Dashboard","showData","accountDetailValue","accounts_details","currency","tableHeader","details","dateTime","fromAccounts","fromSymbol","toAccounts","toSymbol","fromOpenOrderInfos","toOpenOrderInfos","totalTo","blockloader","autoClose","loading","filteredInfoTime","contract_size","json","legend","fromsum1","tosum1","sumOfTotal1","role","lg","xs","toFixed","margin_currency","timerWait","Innerlogin","handlePageClick","page","fectheAllAccount","changeServer","is_server","checkUserConnected","broker","connected","currentAddLogin","currentAddBroker","currentAddAlias","clearInterval","timerShow","setIntervalCustom","content","innerHTML","closebtn","swal","timer","button","handleCloseEdit","editForm","handleCloseDetail","detailForm","createTr","scope","launched","viewFilter","editFilter","onUpdate","count","pages","re","test","text","user","edituser","editserver","editalias","editData","editstatus","Modal","Body","closeButton","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","editAlias","FilterEdite","l","rules","required","abc","from_symbol","to_symbol","all_from_symbols","all_to_symbols","moment","FilterDetail","showMagicNumberFrom","showTicketFrom","showTicketTo","format","Filterprofile","showInnerfilter","createWariningNotification","showEdit","editeData","newDate","filterData","activateClick","deactivateClick","deleteFilter","deleteData","showDelete","detailData","deletepopupClick","deletepopupclose","DatatablePage","columns","field","sort","swap_long","Number","parseFloat","swap_short","responsive","bordered","small","Swap","dailySwap","setdailySwap","setloading","setStartDate","setEndDate","useEffect","sd","ed","result","d","time","Container","Label","selectsStart","selectsEnd","minDate","dataTOtalcloseFrom","comissionTotal","lotsTotal","profitTotal","swapTotal","dataTotalClosetTo","dataTOtalOpenTo","dataTOtalOpenFrom","ContractSize","uniqueSymbols","sumOfHistoryTotal","openfromsum","opentosum","sumOfOpenTotal","isNaN","parseInt","Fragment","Statistics","noGutters","dashboardRoutes","component","isOpen","setIsOpen","setIsOpen2","setIsOpen3","errormassage","setIErrormassage","isOpen3","fromAccountId","setFromAccountId","toAccountId","setToAccountId","fromOpenTrade","setFromOpenTrade","toOpenTrade","setToOpenTrade","fromHistoryTrade","setFromHistoryTrade","toHistoryTrade","setToHistoryTrade","setCommissionDetails","openTotal","setopenTotal","historyTotal","sethistoryTotal","commissionValue","setCommissionValue","setdateTime","setcustomSwap","setLoading","setallHistoryRecord","setactiveProfileName","totalOfOpenOrder","customSwapTable","totalOfHistoryOrder","newCommissionRecord","fromclosedata","fromopendata","toclosedata","toopendata","newData","a","b","open_time","split","reverse","newopenData","newcloseData","totalOpen","reduce","totalClose","totalfromCloseSwap","totalfromOpenSwap","totalfromCloseCommission","totalfromOpenCommission","totaltoCloseSwap","totaltoOpenSwap","totaltoCloseCommission","totaltoOpenCommission","overflowX","last_price","utc","account_id","open_price","close_price","colSpan","fromOpenTradeTr","toOpenTradeTr","overflowY","close_time","fromHistoryTradeTr","toHistoryTradeTr","totalProfit","equity","Admin","getRoutes","routeArray","render","handleClick","handleNotificationClick","getBrandText","handleImageClick","handleColorClick","handleHasImage","handleFixedClick","fixedClasses","_notificationSystem","action","scrollTop","scrollingElement","refs","mainPanel","ref","AdminNavbar","ReactDOM","exact","innerfilter","getElementById"],"mappings":"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,kBACA,aACA,mBACA,aACA,cACA,eACA,qBACA,iBACA,cACA,cACA,eACA,kBACA,eACA,iBACA,eACA,cACA,YACA,eACA,aACA,qBACA,aACA,cACA,kBACA,uBACA,YACA,qBACA,WACA,iBACA,mBACA,wBACA,cACA,oBACA,eACA,2BACA,cACA,mBACA,oBACA,0BACA,iBACA,mBACA,eACA,0BACA,iBACA,eACA,aACA,gBACA,gBACA,kBACA,cACA,aACA,eACA,eACA,iBACA,cACA,cACA,cACA,eACA,eACA,YACA,cACA,kBACA,aACA,gBACA,eACA,gBACA,gBACA,cACA,eACA,eACA,aACA,gBACA,aACA,eACA,eACA,gBACA,iBACA,sBACA,kBACA,cACA,cACA,cACA,gBACA,aACA,aACA,cACA,cACA,kBACA,cACA,aACA,mBACA,aACA,YACA,cACA,YACA,sBACA,YACA,cACA,aACA,YACA,oBACA,oBACA,oBACA,cACA,qBACA,iBACA,aACA,aACA,mBACA,kBACA,cACA,cACA,aACA,aACA,gBACA,cACA,aACA,YACA,mBACA,aACA,kBACA,uBACA,eACA,aACA,aACA,aACA,gBACA,aACA,aACA,cACA,aACA,eACA,aACA,aACA,aACA,cACA,cACA,eACA,eACA,eACA,cACA,eACA,cACA,gBACA,aACA,eACA,aACA,eACA,aACA,gBACA,gBACA,aACA,aACA,eACA,iBACA,iBACA,iBACA,iBACA,aACA,YACA,gBACA,aACA,eACA,kBACA,eACA,gBACA,gBACA,eACA,cACA,cACA,cACA,aACA,aACA,eACA,aACA,mBACA,gBACA,aACA,aACA,kBACA,gBACA,aACA,gBACA,aACA,aACA,kBACA,eACA,eACA,cACA,iBAwHAC,QA/GY,CACZC,OAAQ,CAAC,MAAO,MAAO,OACvBC,OAAQ,CAAC,GAAI,GAAI,KA8GjBC,UA5Gc,CACdC,MAAO,CAAC,OAAQ,SAAU,eAC1BC,MAAO,CAAC,OAAQ,SAAU,YA2G1BC,UAvGc,CACdL,OAAQ,CACN,SACA,UACA,SACA,SACA,SACA,UA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","file":"static/js/main.1010f7bb.chunk.js","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n//\n// //\n// // // For notifications\n// //\n//\nvar defaultWidth =\n  window.screen.width > 768\n    ? (window.screen.width * 1) / 3\n    : window.screen.width;\n\nvar style = {\n  Wrapper: {},\n  Containers: {\n    DefaultStyle: {\n      position: \"fixed\",\n      width: defaultWidth,\n      padding: \"10px 10px 10px 20px\",\n      zIndex: 9998,\n      WebkitBoxSizing: \"\",\n      MozBoxSizing: \"\",\n      boxSizing: \"\",\n      height: \"auto\",\n      display: \"inline-block\",\n      border: \"0\",\n      fontSize: \"14px\",\n      WebkitFontSmoothing: \"antialiased\",\n      fontFamily: '\"Roboto\",\"Helvetica Neue\",Arial,sans-serif',\n      fontWeight: \"400\",\n      color: \"#FFFFFF\"\n    },\n\n    tl: {\n      top: \"0px\",\n      bottom: \"auto\",\n      left: \"0px\",\n      right: \"auto\"\n    },\n\n    tr: {\n      top: \"0px\",\n      bottom: \"auto\",\n      left: \"auto\",\n      right: \"0px\"\n    },\n\n    tc: {\n      top: \"0px\",\n      bottom: \"auto\",\n      margin: \"0 auto\",\n      left: \"50%\",\n      marginLeft: -(defaultWidth / 2)\n    },\n\n    bl: {\n      top: \"auto\",\n      bottom: \"0px\",\n      left: \"0px\",\n      right: \"auto\"\n    },\n\n    br: {\n      top: \"auto\",\n      bottom: \"0px\",\n      left: \"auto\",\n      right: \"0px\"\n    },\n\n    bc: {\n      top: \"auto\",\n      bottom: \"0px\",\n      margin: \"0 auto\",\n      left: \"50%\",\n      marginLeft: -(defaultWidth / 2)\n    }\n  },\n\n  NotificationItem: {\n    DefaultStyle: {\n      position: \"relative\",\n      width: \"100%\",\n      cursor: \"pointer\",\n      borderRadius: \"4px\",\n      fontSize: \"14px\",\n      margin: \"10px 0 0\",\n      padding: \"10px\",\n      display: \"block\",\n      WebkitBoxSizing: \"border-box\",\n      MozBoxSizing: \"border-box\",\n      boxSizing: \"border-box\",\n      opacity: 0,\n      transition: \"all 0.5s ease-in-out\",\n      WebkitTransform: \"translate3d(0, 0, 0)\",\n      transform: \"translate3d(0, 0, 0)\",\n      willChange: \"transform, opacity\",\n\n      isHidden: {\n        opacity: 0\n      },\n\n      isVisible: {\n        opacity: 1\n      }\n    },\n\n    success: {\n      borderTop: 0,\n      backgroundColor: \"#a1e82c\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    error: {\n      borderTop: 0,\n      backgroundColor: \"#fc727a\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    warning: {\n      borderTop: 0,\n      backgroundColor: \"#ffbc67\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    info: {\n      borderTop: 0,\n      backgroundColor: \"#63d8f1\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    }\n  },\n\n  Title: {\n    DefaultStyle: {\n      fontSize: \"30px\",\n      margin: \"0\",\n      padding: 0,\n      fontWeight: \"bold\",\n      color: \"#FFFFFF\",\n      display: \"block\",\n      left: \"15px\",\n      position: \"absolute\",\n      top: \"50%\",\n      marginTop: \"-15px\"\n    }\n  },\n\n  MessageWrapper: {\n    DefaultStyle: {\n      marginLeft: \"55px\",\n      marginRight: \"30px\",\n      padding: \"0 12px 0 0\",\n      color: \"#FFFFFF\",\n      maxWidthwidth: \"89%\"\n    }\n  },\n\n  Dismiss: {\n    DefaultStyle: {\n      fontFamily: \"inherit\",\n      fontSize: \"21px\",\n      color: \"#000\",\n      float: \"right\",\n      position: \"absolute\",\n      right: \"10px\",\n      top: \"50%\",\n      marginTop: \"-13px\",\n      backgroundColor: \"#FFFFFF\",\n      display: \"block\",\n      borderRadius: \"50%\",\n      opacity: \".4\",\n      lineHeight: \"11px\",\n      width: \"25px\",\n      height: \"25px\",\n      outline: \"0 !important\",\n      textAlign: \"center\",\n      padding: \"6px 3px 3px 3px\",\n      fontWeight: \"300\",\n      marginLeft: \"65px\"\n    },\n\n    success: {\n      // color: '#f0f5ea',\n      // backgroundColor: '#a1e82c'\n    },\n\n    error: {\n      // color: '#f4e9e9',\n      // backgroundColor: '#fc727a'\n    },\n\n    warning: {\n      // color: '#f9f6f0',\n      // backgroundColor: '#ffbc67'\n    },\n\n    info: {\n      // color: '#e8f0f4',\n      // backgroundColor: '#63d8f1'\n    }\n  },\n\n  Action: {\n    DefaultStyle: {\n      background: \"#ffffff\",\n      borderRadius: \"2px\",\n      padding: \"6px 20px\",\n      fontWeight: \"bold\",\n      margin: \"10px 0 0 0\",\n      border: 0\n    },\n\n    success: {\n      backgroundColor: \"#a1e82c\",\n      color: \"#ffffff\"\n    },\n\n    error: {\n      backgroundColor: \"#fc727a\",\n      color: \"#ffffff\"\n    },\n\n    warning: {\n      backgroundColor: \"#ffbc67\",\n      color: \"#ffffff\"\n    },\n\n    info: {\n      backgroundColor: \"#63d8f1\",\n      color: \"#ffffff\"\n    }\n  },\n\n  ActionWrapper: {\n    DefaultStyle: {\n      margin: 0,\n      padding: 0\n    }\n  }\n};\n\n//\n// //\n// // // For tables\n// //\n//\nconst thArray = [\"ID\", \"Name\", \"Salary\", \"Country\", \"City\"];\nconst tdArray = [\n  [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\", \"Oud-Turnhout\"],\n  [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\", \"Sinaai-Waas\"],\n  [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\", \"Baileux\"],\n  [\"4\", \"Philip Chaney\", \"$38,735\", \"Korea, South\", \"Overland Park\"],\n  [\"5\", \"Doris Greene\", \"$63,542\", \"Malawi\", \"Feldkirchen in Kärnten\"],\n  [\"6\", \"Mason Porter\", \"$78,615\", \"Chile\", \"Gloucester\"]\n];\n\n//\n// //\n// // // For icons\n// //\n//\nconst iconsArray = [\n  \"pe-7s-album\",\n  \"pe-7s-arc\",\n  \"pe-7s-back-2\",\n  \"pe-7s-bandaid\",\n  \"pe-7s-car\",\n  \"pe-7s-diamond\",\n  \"pe-7s-door-lock\",\n  \"pe-7s-eyedropper\",\n  \"pe-7s-female\",\n  \"pe-7s-gym\",\n  \"pe-7s-hammer\",\n  \"pe-7s-headphones\",\n  \"pe-7s-helm\",\n  \"pe-7s-hourglass\",\n  \"pe-7s-leaf\",\n  \"pe-7s-magic-wand\",\n  \"pe-7s-male\",\n  \"pe-7s-map-2\",\n  \"pe-7s-next-2\",\n  \"pe-7s-paint-bucket\",\n  \"pe-7s-pendrive\",\n  \"pe-7s-photo\",\n  \"pe-7s-piggy\",\n  \"pe-7s-plugin\",\n  \"pe-7s-refresh-2\",\n  \"pe-7s-rocket\",\n  \"pe-7s-settings\",\n  \"pe-7s-shield\",\n  \"pe-7s-smile\",\n  \"pe-7s-usb\",\n  \"pe-7s-vector\",\n  \"pe-7s-wine\",\n  \"pe-7s-cloud-upload\",\n  \"pe-7s-cash\",\n  \"pe-7s-close\",\n  \"pe-7s-bluetooth\",\n  \"pe-7s-cloud-download\",\n  \"pe-7s-way\",\n  \"pe-7s-close-circle\",\n  \"pe-7s-id\",\n  \"pe-7s-angle-up\",\n  \"pe-7s-wristwatch\",\n  \"pe-7s-angle-up-circle\",\n  \"pe-7s-world\",\n  \"pe-7s-angle-right\",\n  \"pe-7s-volume\",\n  \"pe-7s-angle-right-circle\",\n  \"pe-7s-users\",\n  \"pe-7s-angle-left\",\n  \"pe-7s-user-female\",\n  \"pe-7s-angle-left-circle\",\n  \"pe-7s-up-arrow\",\n  \"pe-7s-angle-down\",\n  \"pe-7s-switch\",\n  \"pe-7s-angle-down-circle\",\n  \"pe-7s-scissors\",\n  \"pe-7s-wallet\",\n  \"pe-7s-safe\",\n  \"pe-7s-volume2\",\n  \"pe-7s-volume1\",\n  \"pe-7s-voicemail\",\n  \"pe-7s-video\",\n  \"pe-7s-user\",\n  \"pe-7s-upload\",\n  \"pe-7s-unlock\",\n  \"pe-7s-umbrella\",\n  \"pe-7s-trash\",\n  \"pe-7s-tools\",\n  \"pe-7s-timer\",\n  \"pe-7s-ticket\",\n  \"pe-7s-target\",\n  \"pe-7s-sun\",\n  \"pe-7s-study\",\n  \"pe-7s-stopwatch\",\n  \"pe-7s-star\",\n  \"pe-7s-speaker\",\n  \"pe-7s-signal\",\n  \"pe-7s-shuffle\",\n  \"pe-7s-shopbag\",\n  \"pe-7s-share\",\n  \"pe-7s-server\",\n  \"pe-7s-search\",\n  \"pe-7s-film\",\n  \"pe-7s-science\",\n  \"pe-7s-disk\",\n  \"pe-7s-ribbon\",\n  \"pe-7s-repeat\",\n  \"pe-7s-refresh\",\n  \"pe-7s-add-user\",\n  \"pe-7s-refresh-cloud\",\n  \"pe-7s-paperclip\",\n  \"pe-7s-radio\",\n  \"pe-7s-note2\",\n  \"pe-7s-print\",\n  \"pe-7s-network\",\n  \"pe-7s-prev\",\n  \"pe-7s-mute\",\n  \"pe-7s-power\",\n  \"pe-7s-medal\",\n  \"pe-7s-portfolio\",\n  \"pe-7s-like2\",\n  \"pe-7s-plus\",\n  \"pe-7s-left-arrow\",\n  \"pe-7s-play\",\n  \"pe-7s-key\",\n  \"pe-7s-plane\",\n  \"pe-7s-joy\",\n  \"pe-7s-photo-gallery\",\n  \"pe-7s-pin\",\n  \"pe-7s-phone\",\n  \"pe-7s-plug\",\n  \"pe-7s-pen\",\n  \"pe-7s-right-arrow\",\n  \"pe-7s-paper-plane\",\n  \"pe-7s-delete-user\",\n  \"pe-7s-paint\",\n  \"pe-7s-bottom-arrow\",\n  \"pe-7s-notebook\",\n  \"pe-7s-note\",\n  \"pe-7s-next\",\n  \"pe-7s-news-paper\",\n  \"pe-7s-musiclist\",\n  \"pe-7s-music\",\n  \"pe-7s-mouse\",\n  \"pe-7s-more\",\n  \"pe-7s-moon\",\n  \"pe-7s-monitor\",\n  \"pe-7s-micro\",\n  \"pe-7s-menu\",\n  \"pe-7s-map\",\n  \"pe-7s-map-marker\",\n  \"pe-7s-mail\",\n  \"pe-7s-mail-open\",\n  \"pe-7s-mail-open-file\",\n  \"pe-7s-magnet\",\n  \"pe-7s-loop\",\n  \"pe-7s-look\",\n  \"pe-7s-lock\",\n  \"pe-7s-lintern\",\n  \"pe-7s-link\",\n  \"pe-7s-like\",\n  \"pe-7s-light\",\n  \"pe-7s-less\",\n  \"pe-7s-keypad\",\n  \"pe-7s-junk\",\n  \"pe-7s-info\",\n  \"pe-7s-home\",\n  \"pe-7s-help2\",\n  \"pe-7s-help1\",\n  \"pe-7s-graph3\",\n  \"pe-7s-graph2\",\n  \"pe-7s-graph1\",\n  \"pe-7s-graph\",\n  \"pe-7s-global\",\n  \"pe-7s-gleam\",\n  \"pe-7s-glasses\",\n  \"pe-7s-gift\",\n  \"pe-7s-folder\",\n  \"pe-7s-flag\",\n  \"pe-7s-filter\",\n  \"pe-7s-file\",\n  \"pe-7s-expand1\",\n  \"pe-7s-exapnd2\",\n  \"pe-7s-edit\",\n  \"pe-7s-drop\",\n  \"pe-7s-drawer\",\n  \"pe-7s-download\",\n  \"pe-7s-display2\",\n  \"pe-7s-display1\",\n  \"pe-7s-diskette\",\n  \"pe-7s-date\",\n  \"pe-7s-cup\",\n  \"pe-7s-culture\",\n  \"pe-7s-crop\",\n  \"pe-7s-credit\",\n  \"pe-7s-copy-file\",\n  \"pe-7s-config\",\n  \"pe-7s-compass\",\n  \"pe-7s-comment\",\n  \"pe-7s-coffee\",\n  \"pe-7s-cloud\",\n  \"pe-7s-clock\",\n  \"pe-7s-check\",\n  \"pe-7s-chat\",\n  \"pe-7s-cart\",\n  \"pe-7s-camera\",\n  \"pe-7s-call\",\n  \"pe-7s-calculator\",\n  \"pe-7s-browser\",\n  \"pe-7s-box2\",\n  \"pe-7s-box1\",\n  \"pe-7s-bookmarks\",\n  \"pe-7s-bicycle\",\n  \"pe-7s-bell\",\n  \"pe-7s-battery\",\n  \"pe-7s-ball\",\n  \"pe-7s-back\",\n  \"pe-7s-attention\",\n  \"pe-7s-anchor\",\n  \"pe-7s-albums\",\n  \"pe-7s-alarm\",\n  \"pe-7s-airplay\"\n];\n\n//\n// //\n// // // // For dashboard's charts\n// //\n//\n// Data for Pie Chart\nvar dataPie = {\n  labels: [\"40%\", \"20%\", \"40%\"],\n  series: [40, 20, 40]\n};\nvar legendPie = {\n  names: [\"Open\", \"Bounce\", \"Unsubscribe\"],\n  types: [\"info\", \"danger\", \"warning\"]\n};\n\n// Data for Line Chart\nvar dataSales = {\n  labels: [\n    \"9:00AM\",\n    \"12:00AM\",\n    \"3:00PM\",\n    \"6:00PM\",\n    \"9:00PM\",\n    \"12:00PM\",\n    \"3:00AM\",\n    \"6:00AM\"\n  ],\n  series: [\n    [287, 385, 490, 492, 554, 586, 698, 695],\n    [67, 152, 143, 240, 287, 335, 435, 437],\n    [23, 113, 67, 108, 190, 239, 307, 308]\n  ]\n};\nvar optionsSales = {\n  low: 0,\n  high: 800,\n  showArea: false,\n  height: \"245px\",\n  axisX: {\n    showGrid: false\n  },\n  lineSmooth: true,\n  showLine: true,\n  showPoint: true,\n  fullWidth: true,\n  chartPadding: {\n    right: 50\n  }\n};\nvar responsiveSales = [\n  [\n    \"screen and (max-width: 640px)\",\n    {\n      axisX: {\n        labelInterpolationFnc: function(value) {\n          return value[0];\n        }\n      }\n    }\n  ]\n];\nvar legendSales = {\n  names: [\"Open\", \"Click\", \"Click Second Time\"],\n  types: [\"info\", \"danger\", \"warning\"]\n};\n\n// Data for Bar Chart\nvar dataBar = {\n  labels: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"Mai\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n  ],\n  series: [\n    [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895],\n    [412, 243, 280, 580, 453, 353, 300, 364, 368, 410, 636, 695]\n  ]\n};\nvar optionsBar = {\n  seriesBarDistance: 10,\n  axisX: {\n    showGrid: false\n  },\n  height: \"245px\"\n};\nvar responsiveBar = [\n  [\n    \"screen and (max-width: 640px)\",\n    {\n      seriesBarDistance: 5,\n      axisX: {\n        labelInterpolationFnc: function(value) {\n          return value[0];\n        }\n      }\n    }\n  ]\n];\nvar legendBar = {\n  names: [\"Tesla Model S\", \"BMW 5 Series\"],\n  types: [\"info\", \"danger\"]\n};\n\nmodule.exports = {\n  style, // For notifications (App container and Notifications view)\n  thArray,\n  tdArray, // For tables (TableList view)\n  iconsArray, // For icons (Icons view)\n  dataPie,\n  legendPie,\n  dataSales,\n  optionsSales,\n  responsiveSales,\n  legendSales,\n  dataBar,\n  optionsBar,\n  responsiveBar,\n  legendBar // For charts (Dashboard view)\n};\n","module.exports = __webpack_public_path__ + \"static/media/sidebar-3.34535b95.jpg\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 623;","const config= {\n    baseurl:(process.env.NODE_ENV==\"development\") ? \"http://localhost:4000/api\": \"https://qa.top4.trade/api\"\n}\n\nexport default config;","import React, { Component } from \"react\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport config from \"../../constant/config.js\";\nimport Select from \"react-select\";\nimport TagsInput from \"react-tagsinput\";\nimport \"react-tagsinput/react-tagsinput.css\";\nimport { times } from \"chartist\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\nconst axios = require(\"axios\");\n\nclass Innerfilter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedAccountOption: null,\n      selectedSymbolOption: null,\n      selectedSymbolOptionTo: null,\n      selectedAccountOptionTo: null,\n      selectedCommissionAccount: null,\n      startDate: null,\n      endDate: null,\n      startDateTo: null,\n      endDateTo: null,\n      allAccounts: [],\n      allSymbols: [],\n      profileName: \"\",\n      error: \"\",\n      showCommisoin: false,\n      showAddCommission: false,\n      autoSyncClose: false,\n      profileValues: [],\n      nameError: false,\n      magicNumber: [],\n      magicNumberTo: [],\n      showMagicNumber: false,\n      showMagicNumberTo: false,\n      tags: [],\n      include_exclude_status: \"\",\n      exclude: false,\n      include: false,\n      excludeTo: false,\n      includeTo: false,\n      ticket: [],\n      ticketTo: [],\n      excludeTicket: false,\n      includeTicket: false,\n      excludeTicketTo: false,\n      includeTicketTo: false,\n\n      // options: [{ name: 'Srigar', id: 1 }, { name: 'Sam', id: 2 }],\n\n      // plainArray: [\"Option 1\", \"Option 2\", \"Option 3\", \"Option 4\", \"Option 5\"],\n      // objectArray: [\n      //     { key: \"Option 1\", cat: \"Group 1\" },\n      //     { key: \"Option 2\", cat: \"Group 1\" },\n      //     { key: \"Option 3\", cat: \"Group 1\" },\n      //     { key: \"Option 4\", cat: \"Group 2\" },\n      //     { key: \"Option 5\", cat: \"Group 2\" },\n      //     { key: \"Option 6\", cat: \"Group 2\" },\n      //     { key: \"Option 7\", cat: \"Group 2\" }\n      // ],\n      // selectedValues: [\n      //     { key: \"Option 1\", cat: \"Group 1\" },\n      //     { key: \"Option 2\", cat: \"Group 1\" }\n      // ]\n    };\n  }\n  componentDidMount() {\n    this.getSymbolInfo();\n    this.fetchfilterdata();\n  }\n  getSymbolInfo = () => {\n    let self = this;\n    axios\n      .get(config.baseurl + \"/accounts/fetchAllAccounts\")\n      .then(function (response) {\n        if (response.status == 200) {\n          self.setState({ allAccounts: response.data.rows });\n        }\n      });\n    axios\n      .get(config.baseurl + \"/accounts/fetchAllSymbol\")\n      .then(function (response) {\n        if (response.status == 200) {\n          self.setState({ allSymbols: response.data.rows });\n        }\n      });\n  };\n  // addItem = () => {\n  //     this.selectedValues.push({ key: \"Option 3\", cat: \"Group 1\" });\n  // }\n  handleDropdownChange = (e) => {\n    this.setState({ selectValue: e.target.value });\n  };\n  handleChangeDate = (date) => {\n    this.setState({\n      startDate: date,\n    });\n  };\n\n  handleEndDate = (date) => {\n    if (date < this.state.startDate && date != null) {\n      this.setState({ error: \"enddate\", endDate: \"\" });\n      return;\n    }\n    this.setState({\n      error: \"\",\n      endDate: date,\n    });\n  };\n  handleChangeDateTo = (date) => {\n    this.setState({\n      startDateTo: date,\n      error: \"\",\n    });\n  };\n  handleEndDateTo = (date) => {\n    if (date < this.state.startDateTo && date != null) {\n      this.setState({ error: \"enddateto\", endDateTo: \"\" });\n      return;\n    }\n    this.setState({\n      error: \"\",\n      endDateTo: date,\n    });\n  };\n  handleChange = (event) => {\n    //this.setState({value: event.option});\n    this.setState({\n      value: Array.from(event.target.selectedOptions, (item) => item.value),\n    });\n  };\n  renderAccountSelect = () => {\n    const { selectedAccountOption, allAccounts } = this.state;\n    let Data = {\n      account: selectedAccountOption,\n    };\n    // axios.post(config.baseurl + '/filter/fetchSymbolData', Data)\n    //     .then(function (response) {\n    //         if (response.status == 200) {\n    //             this.props.onHide()\n    //         }\n    //     })\n    //     .catch(function (error) {\n    //     });\n\n    let options = allAccounts.map((data) => {\n      return { value: data.id, label: data.login };\n    });\n    return (\n      <Select\n        placeholder=\"Select Account\"\n        value={selectedAccountOption}\n        onChange={this.handleChangeAccount}\n        options={options}\n      />\n    );\n  };\n  handeChangeShowCommission = (e) => {\n    this.setState({ showCommission: true }, () => {\n      this.setState({ showAddCommission: !this.state.showAddCommission });\n    });\n  };\n  handleChangeAccountTo = (selectedAccountOptionTo) => {\n    this.setState({ selectedAccountOptionTo, error: \"\" });\n  };\n  renderAccountSelectTo = () => {\n    const { selectedAccountOptionTo, allAccounts } = this.state;\n\n    let options = allAccounts.map((data) => {\n      return { value: data.id, label: data.login };\n    });\n    return (\n      <Select\n        placeholder=\"Select Account\"\n        value={selectedAccountOptionTo}\n        onChange={this.handleChangeAccountTo}\n        options={options}\n      />\n    );\n  };\n  handleChangeCommissionAccount = (selectedCommissionAccount) => {\n    this.setState({ selectedCommissionAccount });\n  };\n  renderCommissionAccount = () => {\n    const { selectedCommissionAccount, allAccounts } = this.state;\n\n    let options = allAccounts.map((data) => {\n      return { value: data.id, label: data.login };\n    });\n    return (\n      <Select\n        placeholder=\"Select Account\"\n        value={selectedCommissionAccount}\n        onChange={this.handleChangeCommissionAccount}\n        options={options}\n      />\n    );\n  };\n  handleChangeMagicNumber = (magicNumber) => {\n    this.setState({ magicNumber });\n  };\n  handleChangeMagicNumberTo = (magicNumberTo) => {\n    this.setState({ magicNumberTo });\n  };\n\n  handleChangeTicket = (ticket) => {\n    this.setState({ ticket });\n  };\n  handleChangeTicketTo = (ticketTo) => {\n    this.setState({ ticketTo });\n  };\n\n  handleChangeAccount = (selectedAccountOption) => {\n    this.setState({ selectedAccountOption });\n  };\n  handleChangeSymbol = (selectedSymbolOption) => {\n    this.setState({ selectedSymbolOption });\n  };\n  renderSymbolSelect = () => {\n    const { selectedSymbolOption, allSymbols } = this.state;\n    // console.log(selectedSymbolOption, allSymbols, \"selectedSymbolOption, allSymbols--------->\")\n    let options = allSymbols.map((data) => {\n      return { value: data.name, label: data.name };\n    });\n    return (\n      <Select\n        placeholder=\"Select Symbol\"\n        value={selectedSymbolOption}\n        isMulti\n        onChange={this.handleChangeSymbol}\n        options={options}\n      />\n    );\n  };\n  handleChangeSymbolTo = (selectedSymbolOptionTo) => {\n    this.setState({ selectedSymbolOptionTo });\n  };\n  renderSymbolSelectTo = () => {\n    const { selectedSymbolOptionTo, allSymbols } = this.state;\n    let options = allSymbols.map((data) => {\n      return { value: data.name, label: data.name };\n    });\n\n    return (\n      <Select\n        placeholder=\"Select Symbol...\"\n        value={selectedSymbolOptionTo}\n        isMulti\n        onChange={this.handleChangeSymbolTo}\n        options={options}\n      />\n    );\n  };\n  fetchfilterdata() {\n    let self = this;\n    axios\n      .get(config.baseurl + \"/filter/fetchfilterdata?page=1\")\n      .then(function (response) {\n        if (response.status == 200) {\n          self.setState({ profileValues: response.data.rows });\n        }\n      });\n  }\n\n  handleprofileName(e) {\n      this.setState({ nameError: false });\n      if (this.state.profileValues.length <= 0) {\n        this.setState({\n        profileName:\n          e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1),\n        error: \"\",\n      });\n    } else {\n      this.state.profileValues.filter((data) => {\n         if (data.profile_name.toUpperCase() !== e.target.value.toUpperCase()) {\n          this.setState({profileName: e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1),\n            error: \"\",\n          });\n        } else {\n          this.setState({ nameError: true }, () => {});\n          NotificationManager.listNotify = [];\n          NotificationManager.error(\"Profile already exits!\");\n        }\n      });\n    }\n  }\n  // handlemagicNumber(e){\n  //     this.setState({ magicNumber: e.target.value})\n  // }\n\n  // handlemagicNumberTo(e){\n  //     this.setState({ magicNumberTo: e.target.value})\n  // }\n\n  formDataSubmit(e) {\n    e.preventDefault();\n\n    let from_status =\n      this.state.include === true && this.state.exclude === false\n        ? 1\n        : this.state.exclude === true && this.state.include === false\n        ? 2\n        : 0;\n\n    let to_status =\n      this.state.includeTo === true && this.state.excludeTo === false\n        ? 1\n        : this.state.excludeTo === true && this.state.includeTo === false\n        ? 2\n        : 0;\n\n    let from_status_ticket =\n      this.state.includeTicket === true && this.state.excludeTicket === false\n        ? 1\n        : this.state.excludeTicket === true &&\n          this.state.includeTicket === false\n        ? 2\n        : 0;\n\n    let to_status_ticket =\n      this.state.includeTicketTo === true &&\n      this.state.excludeTicketTo === false\n        ? 1\n        : this.state.excludeTicketTo === true &&\n          this.state.includeTicketTo === false\n        ? 2\n        : 0;\n\n    let self = this;\n\n    if (this.state.profileName == null || this.state.profileName == \"\") {\n      NotificationManager.listNotify = [];\n      NotificationManager.error(\"Profile name is required !\");\n      return;\n    } else if (\n      this.state.selectedAccountOption == null ||\n      this.state.selectedAccountOption == \"\"\n    ) {\n      this.setState({ error: \"accountoption\" });\n      return;\n    } else if (\n      this.state.showCommission == true &&\n      (this.state.selectedCommissionAccount == null ||\n        this.state.selectedCommissionAccount == \"\")\n    ) {\n      this.setState({ error: \"selectedCommissionAccount\" });\n      return;\n    } else if (this.state.startDate == null || this.state.startDate == \"\") {\n      this.setState({ error: \"startdate\" });\n      return;\n    } else if (\n      this.state.selectedSymbolOption == null ||\n      this.state.selectedSymbolOption == \"\"\n    ) {\n      this.setState({ error: \"symbolselect\" });\n      return;\n    } else if (\n      this.state.selectedAccountOptionTo == null ||\n      this.state.selectedAccountOptionTo == \"\"\n    ) {\n      this.setState({ error: \"accountoptionto\" });\n      return;\n    } else if (this.state.startDateTo == null || this.state.startDateTo == \"\") {\n      this.setState({ error: \"startDateTo\" });\n      return;\n    } else if (\n      this.state.selectedSymbolOptionTo == null ||\n      this.state.selectedSymbolOptionTo == \"\"\n    ) {\n      this.setState({ error: \"selectedSymbolOptionTo\" });\n      return;\n    } else if (this.state.nameError) {\n      NotificationManager.listNotify = [];\n      NotificationManager.error(\"Profile Name Already Exist!\");\n    } else {\n      this.setState({ error: \" \" });\n      let fromSymbol = this.state.selectedSymbolOption;\n      let symbolFrom = fromSymbol.map((data) => {\n        return data.value;\n      });\n      let toSymbol = this.state.selectedSymbolOptionTo;\n      let symbolto = toSymbol.map((data) => {\n        return data.value;\n      });\n      // console.log(this.state.selectedCommissionAccount, 'this.state.selectedCommissionAccount')\n\n      let Data = {\n        profile_name: this.state.profileName,\n        from_account_id: this.state.selectedAccountOption.value,\n        to_account_id: this.state.selectedAccountOptionTo.value,\n        commission_acount_id: this.state.showAddCommission\n          ? this.state.selectedCommissionAccount.value\n          : 0,\n        startdateFrom: this.state.startDate,\n        enddateFrom: this.state.endDate,\n        startdateTo: this.state.startDateTo,\n        enddateTo: this.state.endDateTo,\n        from_symbols: JSON.stringify(symbolFrom),\n        to_symbols: JSON.stringify(symbolto),\n        auto_close: this.state.autoSyncClose ? 1 : 0,\n        from_magic_number:\n          from_status != 0\n            ? this.state.magicNumber.length > 0\n              ? JSON.stringify(this.state.magicNumber)\n              : JSON.stringify(\"\")\n            : \"\",\n        to_magic_number:\n          to_status != 0\n            ? this.state.magicNumberTo.length > 0\n              ? JSON.stringify(this.state.magicNumberTo)\n              : JSON.stringify(\"\")\n            : \"\",\n        from_include_exclude_status: from_status,\n        to_include_exclude_status: to_status,\n        from_ticket:\n          from_status_ticket != 0\n            ? this.state.ticket.length > 0\n              ? JSON.stringify(this.state.ticket)\n              : JSON.stringify(\"\")\n            : \"\",\n        to_ticket:\n          to_status_ticket != 0\n            ? this.state.ticketTo.length > 0\n              ? JSON.stringify(this.state.ticketTo)\n              : JSON.stringify(\"\")\n            : \"\",\n        from_include_exclude_status_ticket: from_status_ticket,\n        to_include_exclude_status_ticket: to_status_ticket,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      };\n    //   console.log(Data, \"dat-------------\");\n\n      axios\n        .post(config.baseurl + \"/filter/addfilterdata\", Data)\n        .then(function (response) {\n          if (response.status == 200) {\n            self.props.onHide();\n          }\n        })\n        .catch(function (error) {});\n    }\n  }\n  crossClick(e) {\n    e.preventDefault();\n    this.props.onHide();\n  }\n  handleChangeAutoSync(e) {\n    this.setState({ autoSyncClose: !this.state.autoSyncClose }, () => {});\n  }\n\n  changeIncludeDefaultProperty = () => {\n    this.setState({ include: !this.state.include, exclude: false });\n    // if (!this.state.include == true) {\n    //     this.setState({ showMagicNumber: true })\n    // } else if (this.state.include == true) {\n    //     this.setState({ showMagicNumber: false })\n\n    // }\n  };\n  changeExcludeDefaultProperty = () => {\n    this.setState({ exclude: !this.state.exclude, include: false });\n    // if (!this.state.exclude == true) {\n    //     this.setState({ showMagicNumber: true })\n    // } else if (this.state.exclude == true) {\n    //     this.setState({ showMagicNumber: false })\n\n    // }\n  };\n\n  changeIncludeDefaultPropertyTo = () => {\n    this.setState({ includeTo: !this.state.includeTo, excludeTo: false });\n    // if (!this.state.includeTo == true) {\n    //     this.setState({ showMagicNumberTo: true })\n    // } else if (this.state.includeTo == true) {\n    //     this.setState({ showMagicNumberTo: false })\n\n    // }\n  };\n  changeExcludeDefaultPropertyTo = () => {\n    this.setState({ excludeTo: !this.state.excludeTo, includeTo: false });\n    // if (!this.state.excludeTo == true) {\n    //     this.setState({ showMagicNumberTo: true })\n    // } else if (this.state.excludeTo == true) {\n    //     this.setState({ showMagicNumberTo: false })\n\n    // }\n  };\n  changeIncludeDefaultPropertyTicket = () => {\n    this.setState({\n      includeTicket: !this.state.includeTicketTo,\n      excludeTicket: false,\n    });\n  };\n  changeExcludeDefaultPropertyTicket = () => {\n    this.setState({\n      excludeTicket: !this.state.excludeTicket,\n      includeTicket: false,\n    });\n  };\n\n  changeIncludeDefaultPropertyTicketTo = () => {\n    this.setState({\n      includeTicketTo: !this.state.includeTicketTo,\n      excludeTicketTo: false,\n    });\n  };\n  changeExcludeDefaultPropertyTicketTo = () => {\n    this.setState({\n      excludeTicketTo: !this.state.excludeTicketTo,\n      includeTicketTo: false,\n    });\n  };\n  render() {\n    let s = this;\n    return (\n      <>\n        <NotificationContainer />\n        <div className=\"content\">\n          <Grid fluid>\n            <div className=\"symbol-box\">\n              <div className=\"cross_div\">\n                <a onClick={(e) => this.crossClick(e)}>\n                  <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n                </a>\n              </div>\n              <div className=\"terminal-text\">\n                <label className=\"pnameadjust\"> Profile Name </label>\n                <input type=\"text\" name=\"profilename\" className=\"Itext\" placeholder=\"Profile Name\" onChange={(e) => this.handleprofileName(e)} />\n              </div>\n              <div className=\"synclose\">\n                <label className=\"checkbox-inline\">\n                  <input\n                    type=\"checkbox\"\n                    defaultChecked={this.state.autoSyncClose}\n                    name=\"changeAutoSync\"\n                    onChange={(e) => this.handleChangeAutoSync(e)}\n                  />\n                  <b>Auto Sync Close</b>\n                </label>\n              </div>\n\n              <form>\n                <Row>\n                  <Col md={6}>\n                    <div className=\"card bottom\">\n                      <div style={{ padding: \"10px 20px 0px\" }}>\n                        <span style={{ fontWeight: \"bold\" }}>Account A</span>\n                      </div>\n                      <table className=\"table mt20\">\n                        <tbody>\n                          <tr>\n                            <td className=\"b-clr\">\n                              <span className=\"accnt\">Account </span>\n                            </td>\n\n                            <td\n                              className=\"b-clr text-center\"\n                              style={{ width: \"50%\" }}\n                            >\n                              {/* <Multiselect\n                                                        options={objectArray}\n                                                        singleSelect\n                                                        displayValue=\"key\"\n                                                    /> */}\n                              {this.renderAccountSelect()}\n                              {this.state.error == \"accountoption\" && (\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\n                                  *Please Select Your Account\n                                </p>\n                              )}\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"b-clr \">\n                              <span className=\"accnt\">From </span>\n                            </td>\n                            <td className=\"b-clr text-center datepicker_filter\">\n                              <DatePicker\n                                selected={this.state.startDate}\n                                onChange={this.handleChangeDate}\n                                isClearable\n                                placeholderText=\"dd/mm/yyyy\"\n                                dateFormat=\"dd/MM/yyyy\"\n                                startDate={this.state.startDate}\n                                endDate={this.state.endDate}\n                                strictParsing\n                              />\n                              {/* <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                                            <KeyboardDatePicker\n                                                                // margin=\"normal\"\n                                                                clearable={false}\n                                                                id=\"date-picker-dialog\"\n                                                                label=\"dd/MM/yyyy\"\n                                                                format=\"dd/MM/yyyy\"\n                                                                onError={() => { return null }}\n                                                                value={this.state.startDate}\n                                                                onChange={this.handleChangeDate}\n                                                                KeyboardButtonProps={{\n                                                                    'aria-label': 'change date',\n                                                                }}\n                                                            />\n                                                        </MuiPickersUtilsProvider> */}\n                              {this.state.error == \"startdate\" && (\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\n                                  *Please Select Start Date\n                                </p>\n                              )}\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"b-clr \">\n                              <span className=\"accnt\">To </span>\n                            </td>\n                            <td className=\"b-clr text-center datepicker_filter\">\n                              <DatePicker\n                                autoOk={true}\n                                selected={this.state.endDate}\n                                onChange={this.handleEndDate}\n                                isClearable\n                                placeholderText=\"dd/mm/yyyy\"\n                                dateFormat=\"dd/MM/yyyy\"\n                                startDate={this.state.startDate}\n                                endDate={this.state.endDate}\n                              />\n                              {this.state.error == \"enddate\" && (\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\n                                  * Please ensure that the End Date is greater\n                                  than the Start Date.\n                                </p>\n                              )}\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"b-clr \">\n                              <span className=\"accnt\">Symbol </span>\n                            </td>\n                            <td\n                              className=\"b-clr text-center\"\n                              style={{ width: \"40%\" }}\n                            >\n                              {/* <Multiselect\n                                                        options={objectArray}\n                                                        displayValue=\"key\"\n                                                        showCheckbox={true}\n                                                    /> */}\n                              {this.renderSymbolSelect()}\n                              {this.state.error == \"symbolselect\" && (\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\n                                  *Please Select Your Symbol{\" \"}\n                                </p>\n                              )}\n                            </td>\n                          </tr>\n\n                          <tr>\n                            <td className=\"b-clr \">\n                              <span className=\"accnt\">Magic Number </span>\n                            </td>\n                            <td\n                              className=\"b-clr text-center\"\n                              style={{ width: \"40%\" }}\n                            >\n                              <TagsInput\n                                onValidationReject={() =>\n                                  console.log(\"rejected\")\n                                }\n                                validationRegex={/^[0-9]*$/}\n                                inputProps={{\n                                  placeholder:\n                                    this.state.magicNumber.length > 0\n                                      ? \"\"\n                                      : \" Enter Magic Number\",\n                                }}\n                                type=\"number\"\n                                value={this.state.magicNumber}\n                                onChange={this.handleChangeMagicNumber}\n                              ></TagsInput>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"b-clr dataAdjust\">\n                              <div onClick={this.changeIncludeDefaultProperty}>\n                                <input\n                                  type=\"radio\"\n                                  id=\"include\"\n                                  name=\"include\"\n                                  checked={this.state.include}\n                                />\n                                <span className=\"accnt \">Include</span>\n                              </div>\n                            </td>\n                            <td className=\"b-clr text-center\">\n                              <div onClick={this.changeExcludeDefaultProperty}>\n                                <input\n                                  type=\"radio\"\n                                  id=\"exclude\"\n                                  name=\"exclude\"\n                                  checked={this.state.exclude}\n                                />\n                                <span className=\"accnt \">Exclude</span>\n                              </div>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"b-clr \">\n                              <span className=\"accnt\">Ticket </span>\n                            </td>\n                            <td\n                              className=\"b-clr text-center\"\n                              style={{ width: \"40%\" }}\n                            >\n                              <TagsInput\n                                onValidationReject={() =>\n                                  console.log(\"rejected\")\n                                }\n                                validationRegex={/^[0-9]*$/}\n                                inputProps={{\n                                  placeholder:\n                                    this.state.ticket.length > 0\n                                      ? \"\"\n                                      : \" Enter Ticket\",\n                                }}\n                                type=\"number\"\n                                value={this.state.ticket}\n                                onChange={this.handleChangeTicket}\n                              ></TagsInput>\n                            </td>\n                          </tr>\n\n                          <tr>\n                            <td className=\"b-clr dataAdjust\">\n                              <div\n                                onClick={\n                                  this.changeIncludeDefaultPropertyTicket\n                                }\n                              >\n                                <input\n                                  type=\"radio\"\n                                  id=\"includeTicket\"\n                                  name=\"includeTicket\"\n                                  checked={this.state.includeTicket}\n                                />\n                                <span className=\"accnt \">Include</span>\n                              </div>\n                            </td>\n                            <td className=\"b-clr text-center\">\n                              <div\n                                onClick={\n                                  this.changeExcludeDefaultPropertyTicket\n                                }\n                              >\n                                <input\n                                  type=\"radio\"\n                                  id=\"excludeTicket\"\n                                  name=\"excludeTicket\"\n                                  checked={this.state.excludeTicket}\n                                />\n                                <span className=\"accnt \">Exclude</span>\n                              </div>\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  </Col>\n                  <Col md={6}>\n                    <div className=\"card bottom\">\n                      <div style={{ padding: \"10px 20px 0px\" }}>\n                        <span style={{ fontWeight: \"bold\" }}>Account B</span>\n                      </div>\n                      <table className=\"table mt20\">\n                        <tbody>\n                          <tr>\n                            <td className=\"b-clr \">\n                              <span className=\"accnt\"> Account</span>\n                            </td>\n                            <td\n                              className=\"b-clr text-center\"\n                              style={{ width: \"50%\" }}\n                            >\n                              {this.renderAccountSelectTo()}\n                              {this.state.error == \"accountoptionto\" && (\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\n                                  *Please Select Your Account\n                                </p>\n                              )}\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"b-clr \">\n                              <span className=\"accnt\">From </span>\n                            </td>\n                            <td className=\"b-clr text-center datepicker_filter\">\n                              <DatePicker\n                                selected={this.state.startDateTo}\n                                onChange={this.handleChangeDateTo}\n                                isClearable\n                                placeholderText=\"dd/mm/yyyy\"\n                                dateFormat=\"dd/MM/yyyy\"\n                                startDate={this.state.startDateTo}\n                                endDate={this.state.endDateTo}\n                                strictParsing\n                              />\n                              {this.state.error == \"startDateTo\" && (\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\n                                  *Please Select Start Date\n                                </p>\n                              )}\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"b-clr \">\n                              <span className=\"accnt\">To </span>\n                            </td>\n                            <td className=\"b-clr text-center datepicker_filter\">\n                              <DatePicker\n                                selected={this.state.endDateTo}\n                                onChange={this.handleEndDateTo}\n                                isClearable\n                                placeholderText=\"dd/mm/yyyy\"\n                                dateFormat=\"dd/MM/yyyy\"\n                                startDate={this.state.startDateTo}\n                                endDate={this.state.endDateTo}\n                              />\n                              {this.state.error == \"enddateto\" && (\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\n                                  * Please ensure that the End Date is greater\n                                  than the Start Date.\n                                </p>\n                              )}\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"b-clr\">\n                              <span className=\"accnt\"> Symbol </span>\n                            </td>\n                            <td\n                              className=\"b-clr text-center\"\n                              style={{ width: \"40%\" }}\n                            >\n                              {/* <Multiselect\n                                                        options={objectArray}\n                                                        displayValue=\"key\"\n                                                        showCheckbox={true}\n                                                    /> */}\n                              {this.renderSymbolSelectTo()}\n                              {this.state.error == \"selectedSymbolOptionTo\" && (\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\n                                  *Please Select Your Symbol{\" \"}\n                                </p>\n                              )}\n                            </td>\n                          </tr>\n\n                          <tr>\n                            <td className=\"b-clr \">\n                              <span className=\"accnt\">Magic Number </span>\n                            </td>\n                            <td\n                              className=\"b-clr text-center\"\n                              style={{ width: \"40%\" }}\n                            >\n                              <TagsInput\n                                onValidationReject={() =>\n                                  console.log(\"rejected\")\n                                }\n                                validationRegex={/^[0-9]*$/}\n                                inputProps={{\n                                  placeholder:\n                                    this.state.magicNumberTo.length > 0\n                                      ? \"\"\n                                      : \" Enter Magic Number\",\n                                }}\n                                type=\"number\"\n                                value={this.state.magicNumberTo}\n                                onChange={this.handleChangeMagicNumberTo}\n                              ></TagsInput>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"b-clr dataAdjust\">\n                              <div\n                                onClick={this.changeIncludeDefaultPropertyTo}\n                              >\n                                <input\n                                  type=\"radio\"\n                                  id=\"includeTo\"\n                                  name=\"includeTo\"\n                                  checked={this.state.includeTo}\n                                />\n                                <span className=\"accnt \">Include</span>\n                              </div>\n                            </td>\n                            <td className=\"b-clr text-center\">\n                              <div\n                                onClick={this.changeExcludeDefaultPropertyTo}\n                              >\n                                <input\n                                  type=\"radio\"\n                                  id=\"excludeTo\"\n                                  name=\"excludeTo\"\n                                  checked={this.state.excludeTo}\n                                />\n                                <span className=\"accnt \">Exclude</span>\n                              </div>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"b-clr \">\n                              <span className=\"accnt\">Ticket </span>\n                            </td>\n                            <td\n                              className=\"b-clr text-center\"\n                              style={{ width: \"40%\" }}\n                            >\n                              <TagsInput\n                                onValidationReject={() =>\n                                  console.log(\"rejected\")\n                                }\n                                validationRegex={/^[0-9]*$/}\n                                inputProps={{\n                                  placeholder:\n                                    this.state.ticketTo.length > 0\n                                      ? \"\"\n                                      : \" Enter Ticket\",\n                                }}\n                                type=\"number\"\n                                value={this.state.ticketTo}\n                                onChange={this.handleChangeTicketTo}\n                              ></TagsInput>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"b-clr dataAdjust\">\n                              <div\n                                onClick={\n                                  this.changeIncludeDefaultPropertyTicketTo\n                                }\n                              >\n                                <input\n                                  type=\"radio\"\n                                  id=\"includeTicketTo\"\n                                  name=\"includeTicketTo\"\n                                  checked={this.state.includeTicketTo}\n                                />\n                                <span className=\"accnt \">Include</span>\n                              </div>\n                            </td>\n                            <td className=\"b-clr text-center\">\n                              <div\n                                onClick={\n                                  this.changeExcludeDefaultPropertyTicketTo\n                                }\n                              >\n                                <input\n                                  type=\"radio\"\n                                  id=\"excludeTicketTo\"\n                                  name=\"excludeTicketTo\"\n                                  checked={this.state.excludeTicketTo}\n                                />\n                                <span className=\"accnt \">Exclude</span>\n                              </div>\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  </Col>\n                </Row>\n                <hr></hr>\n                <div className=\"chceckbox\">\n                  <label className=\"checkbox-inline\">\n                    <input\n                      type=\"checkbox\"\n                      defaultChecked={this.state.showCommisoin}\n                      onChange={(e) => this.handeChangeShowCommission(e)}\n                    />\n                    <b>Add Commission</b>\n                  </label>\n                </div>\n                {this.state.showAddCommission && (\n                  <div className=\"center-com d-flex\">\n                    <div className=\"com\">\n                      <h3 style={{ fontWeight: \"bold\" }}>Commission</h3>\n                    </div>\n                    <table className=\"table mt20\">\n                      <tbody>\n                        <tr>\n                          <td className=\"b-clr \">\n                            <span className=\"accnt\"> Account </span>\n                          </td>\n                          <td\n                            className=\"b-clr text-center\"\n                            style={{ width: \"50%\" }}\n                          >\n                            {this.renderCommissionAccount()}\n\n                            {this.state.error ==\n                              \"selectedCommissionAccount\" && (\n                              <p style={{ color: \"red\", fontSize: \"13px\" }}>\n                                *Please Select Your Account{\" \"}\n                              </p>\n                            )}\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                )}\n                <div className=\"save_button_filter\">\n                  <div className=\"savebtn\">\n                    <Button\n                      className=\"btn-primary savebutton\"\n                      variant=\"primary\"\n                      size=\"lg\"\n                      block\n                      onClick={(e) => this.formDataSubmit(e)}\n                    >\n                      <b>Save</b>\n                    </Button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Grid>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Innerfilter;\n","import React, { Component } from 'react';\nimport { Grid, Row, Col, Modal, Alert } from \"react-bootstrap\";\nimport swal from 'sweetalert';\nimport config from '../../constant/config.js';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nconst axios = require('axios');\n\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loginForm: false,\n            setShow: false,\n            show: true,\n            username: '',\n            password: '',\n            alert: null,\n            persons: [],\n            shwPwd: false,\n            shwMsg: false,\n            invalidUsername: '',\n            invalidPassword: '',\n            accountlist: []\n\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value.trim() })\n    }\n    onSubmit(e) {\n        e.preventDefault();\n        const userdetail = {\n            username: this.state.username,\n            password: this.state.password\n        }\n        if (this.state.username == '') {\n            this.setState({ shwPwd: true })\n        }\n\n        let self = this;\n        axios.post(config.baseurl + '/users/mainLogin', userdetail)\n            .then(function (response) {\n                if (response.status == 200) {\n                    // self.handleClose();\n                    if (response.data.rows && response.data.rows.length > 0) {\n                        localStorage.setItem('currentUser', JSON.stringify(response.data.rows));\n                        self.props.history.push('/dashboard/dashboard')\n                    }\n                    if (response.data.message) {\n                        if (response.data.name == 'username') {\n                            self.setState({ invalidUsername: response.data.message })\n                            if (self.state.invalidUsername == '' || self.state.invalidUsername == 'Invalid username.' || self.state.invalidUsername == \"Invalid username\") {\n                                self.createNotification()\n                            }\n                        }\n                        if (response.data.name == 'password') {\n                            if (self.state.invalidPassword == '' || self.state.invalidPassword == 'Invalid password.') {\n                                self.createNotification()\n                            }\n                            self.setState({ invalidPassword: response.data.message, invalidUsername: '' })\n\n                        }\n                    }\n                }\n            })\n            .catch(function (err) {\n            });\n    }\n    toogle = () => {\n        this.setState({ loginForm: !this.state.loginForm })\n    }\n    handleClose = () => {\n        this.setState({ loginForm: false })\n    }\n    handleShow = () => {\n        this.setState({ setShow: true })\n    }\n    createNotification = () => {\n        NotificationManager.listNotify = [];\n        NotificationManager.error('Invalid Credentials !');\n    }\n\n    componentDidMount() {\n        // let self = this;\n\n        let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n        if (currentUser !== null) {\n            this.props.history.push('dashboard/dashboard')\n            return;\n        }\n        // axios.get(config.baseurl + '/users/allAccounts')\n        //     .then(function (response) {\n        //         if (response.status == 200) {\n        //             self.setState({ accountlist: response.data.rows })\n        //         }\n        //     })\n    }\n    render() {\n        const { invalidPassword, invalidUsername } = this.state;\n        return (\n            <div className=\"content\">\n                <Grid fluid style={{ marginTop: '20vh' }}>\n                    <Row>\n                        <Col md={4} />\n                        <Col\n                            md={4}\n                            sm={6}\n                        >\n                            <span className=\"login-form-header\">Rimon Hedge Funds Monitoring</span>\n                            <div className=\"form-box login-box\">\n                                {/* <Modal.Title className=\"text-center\"><b>Log In</b></Modal.Title> */}\n\n                                {/* <div className=\"container-fluid\" style={{ background: '#eee', padding: 15, marginTop: 10 }}>\n                                    <div>\n                                        <span style={{ fontWeight: 'bold' }}> Username: </span>\n                                                    testaccount\n                                                </div>\n                                    <div>\n                                        <span style={{ fontWeight: 'bold' }}> Password: </span>\n                                                    1234567\n                                                </div>\n                                </div> */}\n                                <form style={{ marginTop: '20px' }} onSubmit={this.onSubmit}>\n                                    <label>Username</label>\n\n                                    <input className=\"Itext\" placeholder=\"Enter Username\" name=\"username\" value={this.state.username} onChange={this.onChange}\n                                    // onKeyUp={this.checkValidUser}\n                                    ></input>\n                                    <label>Password</label>\n\n                                    <input className=\"Itext\" placeholder=\"Enter Password\" name=\"password\" type=\"password\" value={this.state.password} onChange={this.onChange}></input>\n\n                                    <div className=\"clearfix\">\n                                        <button type=\"submit\" disabled={!this.state.username || !this.state.password} className={!this.state.username || !this.state.password ? \"loginButton\" : \"loginButton save2 save1\"}>Login</button>\n\n                                    </div>\n                                    <div className=\"login-footer-text\">\n                                        alpha ver 0.11\n                                        <br />\n                                        ©Rimon Hedge Funds LTD\n                                    </div>\n                                </form>\n                            </div>\n\n                            {/* </Modal.Body>\n                                </Modal> */}\n\n\n                        </Col>\n                        <Col md={4} />\n                    </Row>\n                </Grid>\n                <NotificationContainer />\n\n            </div >\n        );\n    }\n}\n\nexport default Login;","import React, { Component } from \"react\";\nimport { NavItem, Nav, NavDropdown, MenuItem } from \"react-bootstrap\";\n\nclass AdminNavbarLinks extends Component {\n  constructor(props) {\n    super(props);\n  }\n  logout = () => {\n    localStorage.clear();\n    this.props.history.push('/login');\n  }\n  render() {\n    const notification = (\n      <div>\n        {/* <i className=\"fa fa-globe\" />\n        <b className=\"caret\" /> */}\n        {/* <span className=\"notification\">5</span> */}\n        <p className=\"hidden-lg hidden-md\">Notification</p>\n      </div>\n    );\n    return (\n      <div>\n        <Nav>\n          <NavItem eventKey={1} href=\"#\">\n            {/* <i className=\"fa fa-dashboard\" /> */}\n            <p className=\"hidden-lg hidden-md\">Dashboard</p>\n          </NavItem>\n          <NavDropdown\n            eventKey={2}\n            title={notification}\n            noCaret\n            id=\"basic-nav-dropdown\"\n          >\n            <MenuItem eventKey={2.1}>Notification 1</MenuItem>\n            <MenuItem eventKey={2.2}>Notification 2</MenuItem>\n            <MenuItem eventKey={2.3}>Notification 3</MenuItem>\n            <MenuItem eventKey={2.4}>Notification 4</MenuItem>\n            <MenuItem eventKey={2.5}>Another notifications</MenuItem>\n          </NavDropdown>\n          <NavItem eventKey={3} href=\"#\">\n            {/* <i className=\"fa fa-search\" />\n            <p className=\"hidden-lg hidden-md\">Search</p> */}\n          </NavItem>\n        </Nav>\n        <Nav pullRight>\n          {/* <NavItem eventKey={1} href=\"#\">\n            Account\n          </NavItem>\n          <NavDropdown\n            eventKey={2}\n            title=\"Dropdown\"\n            id=\"basic-nav-dropdown-right\"\n          >\n            <MenuItem eventKey={2.1}>Action</MenuItem>\n            <MenuItem eventKey={2.2}>Another action</MenuItem>\n            <MenuItem eventKey={2.3}>Something</MenuItem>\n            <MenuItem eventKey={2.4}>Another action</MenuItem>\n            <MenuItem eventKey={2.5}>Something</MenuItem>\n            <MenuItem divider />\n            <MenuItem eventKey={2.5}>Separated link</MenuItem>\n          </NavDropdown> */}\n          <NavItem  eventKey={3} onClick={() => this.logout()}>\n           <span className=\"logOutbtn\">Logout</span> \n          </NavItem>\n        </Nav>\n      </div>\n    );\n  }\n}\n\nexport default AdminNavbarLinks;\n","import React, { Component } from \"react\";\nimport { Navbar } from \"react-bootstrap\";\n\nimport AdminNavbarLinks from \"./AdminNavbarLinks\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.mobileSidebarToggle = this.mobileSidebarToggle.bind(this);\n    this.state = {\n      sidebarExists: false\n    };\n  }\n  mobileSidebarToggle(e) {\n    if (this.state.sidebarExists === false) {\n      this.setState({\n        sidebarExists: true\n      });\n    }\n    e.preventDefault();\n    document.documentElement.classList.toggle(\"nav-open\");\n    var node = document.createElement(\"div\");\n    node.id = \"bodyClick\";\n    node.onclick = function() {\n      this.parentElement.removeChild(this);\n      document.documentElement.classList.toggle(\"nav-open\");\n    };\n    document.body.appendChild(node);\n  }\n  render() {\n    return (\n      <Navbar fluid>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <a href=\"#\">{this.props.brandText== \"Dashboard\" ? \"Dashboard\" : this.props.brandText }</a>\n          </Navbar.Brand>\n          <Navbar.Toggle onClick={this.mobileSidebarToggle} />\n        </Navbar.Header>\n        <Navbar.Collapse>\n          <AdminNavbarLinks {...this.props}/>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Dropdown, DropdownButton } from 'react-bootstrap'\nimport AdminNavbarLinks from \"../Navbars/AdminNavbarLinks.jsx\";\n\n// import logo from \"assets/img/reactlogo.png\";\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth,\n    \n    };\n  }\n  toggle = (id) => {\n\n    // console.log(this.props.routes)\n    this.props.routes.filter((data) => {\n      if (data.id == id) {\n        data.menu = !data.menu\n      }\n      else {\n        data.menu = false\n      }\n    })\n  }\n\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  updateDimensions() {\n    this.setState({ width: window.innerWidth });\n  }\n  componentDidMount() {\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n  render() {\n    // console.log(this.props, \"props\")\n    const sidebarBackground = {\n      backgroundImage: \"url(\" + this.props.image + \")\"\n    };\n    return (\n\n\n      <div\n        id=\"sidebar\"\n        className=\"sidebar\"\n        data-color={this.props.color}\n        data-image={this.props.image}\n      >\n        {this.props.hasImage ? (\n          <div className=\"sidebar-background\" />\n        ) : (\n            null\n          )}\n        <div className=\"logo\">\n          {/* <a\n            href=\"https://www.creative-tim.com?ref=lbd-sidebar\"\n            className=\"simple-text logo-mini\"\n          > */}\n          {/* <div className=\"logo-img\">\n\n            </div> */}\n          {/* </a> */}\n          <span className=\"logo-text simple-text logo-normal\">\n          Hedging Interest Differentials\n\n          </span>\n          {/* <a\n            href=\"https://www.creative-tim.com?ref=lbd-sidebar\"\n            className=\"simple-text logo-normal\"\n          >\n            Dashboard\n          </a> */}\n        </div>\n        <div className=\"sidebar-wrapper\">\n\n          <ul className=\"nav\">\n            {this.state.width <= 991 ? <AdminNavbarLinks {...this.props} /> : null}\n            {this.props.routes.map((prop, key) => {\n              if (!prop.redirect)\n                // console.log(prop.resources, 'resouces');\n                return (\n                  <li\n                    className={\n                      prop.upgrade\n                        ? \"active active-pro\"\n                        : this.activeRoute(prop.layout + prop.path)\n                    }\n\n                    key={key}\n                  >\n                    <NavLink\n                      to={prop.layout + prop.path}\n                      className=\"nav-link\"\n                      activeClassName=\"active\"\n                    >\n                      <i className={prop.icon} />\n                      <p\n                        onClick={() => this.toggle(prop.id)}\n\n                      >{prop.name}\n                        {prop.child !== false && <b style={{ transform: prop.menu ? 'rotate(360deg)' : 'rotate(270deg)' }} className=\"caret\"></b>}\n                      </p>\n\n                    </NavLink>\n                    {prop.menu &&\n                      <ul className='dropdown-menu-cutomize'>\n                        {prop.resources != undefined && prop.resources.map((sub, index) => (\n                          <NavLink\n                            to={sub.layout + sub.path}\n                            className=\"nav-link\"\n                            activeClassName=\"active\"\n                          >\n                            <li\n\n                              key={index}>\n                              {/* <i className={sub.icon} /> */}\n                              <p >{sub.name}</p>\n                            </li>\n                          </NavLink>\n                        ))}\n\n                      </ul>\n                    }\n\n                  </li>\n                );\n              // return null;\n            })}\n          </ul>\n        </div>\n        {/* <NavLink>\n          <DropdownButton id=\"dropdown-item-button\" title=\"Dropdown button\">\n            <Dropdown.ItemText>Dropdown item text</Dropdown.ItemText>\n            <Dropdown.Item as=\"button\">Action</Dropdown.Item>\n            <Dropdown.Item as=\"button\">Another action</Dropdown.Item>\n            <Dropdown.Item as=\"button\">Something else</Dropdown.Item>\n          </DropdownButton>\n        </NavLink> */}\n\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n\n","\nimport React, { useState, Fragment } from 'react';\nimport { Collapse } from 'reactstrap';\nimport { Row, Col } from \"react-bootstrap\";\nimport NumberFormat from 'react-number-format';\nimport Login from './login';\n\n// import Data from './Data';\n\nconst Closeposition = (props) => {\n    const { allHistoryRecord, fromHistoryOrderInfo, toHistoryOrderInfo, commissionHistoryOrderInfo } = props;\n    const [isOpen2, setIsOpen2] = useState(false);\n    const toggle2 = () => setIsOpen2(!isOpen2);\n\n    // const sumOfTotal = allHistoryRecord.reduce((current, data) => {\n    //     return (data.total + current);\n    // }, 0);\n    let fromSymbols = '';\n    let toSymbols = '';\n    if (allHistoryRecord && Object.entries(allHistoryRecord).length > 0) {\n        fromSymbols = JSON.parse(allHistoryRecord.from_symbols);\n        fromSymbols = (fromSymbols).map(data => data).join(', ');\n        toSymbols = JSON.parse(allHistoryRecord.to_symbols);\n        toSymbols = (toSymbols).map(data => data).join(', ')\n    }\n    let fromsum = 0;\n    let tosum = 0;\n    let commissionSum = 0;\n\n    if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\n        fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\n    }\n    if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\n        tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\n    }\n    if (commissionHistoryOrderInfo && commissionHistoryOrderInfo.length > 0) {\n        commissionSum = (commissionHistoryOrderInfo[0].commission + commissionHistoryOrderInfo[0].swap + commissionHistoryOrderInfo[0].profit);\n    }\n\n    let sumOfTotal = tosum + fromsum;\n\n    let noRecord = ((fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0 && fromHistoryOrderInfo[0].total == null) && (toHistoryOrderInfo && toHistoryOrderInfo.length > 0 && toHistoryOrderInfo[0].total == null)) ? true : false;\n    return (\n        <div>\n            <div className=\"openpositions symbol-box terminal-head-box\" style={{ margin: '20px 0px' }}>\n                <span className=\"p-text\">Realized Profit/Loss</span>\n                {/* <span className=\"icon-style\" onClick={toggle2}>\n                    {!isOpen2 ?\n                        <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n                        :\n                        <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\n                    }\n                </span> */}\n            </div>\n            <div>\n                {/* <Collapse isOpen={isOpen2}> */}\n                <Row>\n                    {/* {Data.tablePage.items.map((item, index) =>\n                            <Col md={6} key={index}>\n                                <div className=\"card\">\n                                    <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\n                                    </div>\n                                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                        <table className=\"table\">\n                                            <tbody>\n                                                <tr><td>{item.closed} </td>\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\n                                                </tr>\n                                                <tr><td>{item.commission} </td>\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\n                                                </tr>\n                                                <tr><td>{item.swap} </td>\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\n                                                </tr>\n                                                <tr><td>{item.total} </td>\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                    </div>\n                                </div>\n                            </Col>\n                        )} */}\n                    {/* {(allHistoryRecord && allHistoryRecord.length>0) && allHistoryRecord.map((item, index) =>\n                            <Fragment>\n\n                            <Col md={6} key={index}>\n                                <div className=\"card\">\n                                    <div className=\"header\">\n                                        <h5 className={item.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{item.account.login}</h5>\n                                        <h6 className={'colorDarkBlue'} style={{fontSize:10}}>({item.account.alias})</h6>\n                                    </div>\n                                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                        <table className=\"table\">\n                                            <tbody>\n                                                <tr><td>Closed P/L </td>\n                                                    <td className=\"td-actions text-right\">$ {item.profit}</td>\n                                                </tr>\n                                                <tr><td>Commission </td>\n                                                    <td className=\"td-actions text-right\">$ {item.commission}</td>\n                                                </tr>\n                                                <tr><td>Swap </td>\n                                                    <td className=\"td-actions text-right\">$ {item.swap}</td>\n                                                </tr>\n                                                <tr><td>Total </td>\n                                                    <td className=\"td-actions text-right\">$ {item.total}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                    </div>\n                                </div>\n                            </Col>\n                            </Fragment>\n                        )}\n                        {(allHistoryRecord && allHistoryRecord.length>0) && \n                            <Row>\n                                <Col md={12}>\n                                    <div>\n                                        <div className=\"total-box\">\n                                            <span className=\"text\">Sum of closed positions</span>\n                                            <span className=\"text\" style={{ float: 'right' }}>$ {sumOfTotal}</span>\n                                        </div>\n                                    </div>\n                                </Col>\n                            </Row>\n                        } */}\n                    {noRecord ? (\n                        <div className=\"text-center\">\n                            No Record Found!\n                        </div>) :\n\n                        <Fragment>\n\n                            {(fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0 && fromHistoryOrderInfo[0].total != null) ? (\n                                <Col md={6}>\n                                    <div className=\"card\">\n                                        <div className=\"header\">\n                                            <h5 className={allHistoryRecord.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{allHistoryRecord.accountFromInfo[0].login}</h5>\n                                            <h6 className={'colorDarkBlue'} style={{ fontSize: 10 }}>({allHistoryRecord.accountFromInfo[0].alias})</h6>\n                                        </div>\n                                        <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                            <table className=\"table\">\n                                                <tbody>\n                                                    <tr>\n                                                        <td className=\"symbolStyle removeBorder\">{fromSymbols}</td>\n                                                        {/* <td>{fromSymbols}</td> */}\n                                                        {/* <td className=\"td-actions text-right\">$ {fromHistoryOrderInfo[0].profit}</td> */}\n                                                    </tr>\n                                                    <tr><td>Closed P/L </td>\n                                                        <td className=\"td-actions text-right\">$ {' '}\n                                                            <NumberFormat value={fromHistoryOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                            {/* {fromHistoryOrderInfo[0].profit} */}\n                                                        </td>\n                                                    </tr>\n                                                    <tr><td>Commission </td>\n                                                        <td className=\"td-actions text-right\">$ {' '}\n                                                            {/* {fromHistoryOrderInfo[0].commission} */}\n                                                            <NumberFormat value={fromHistoryOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                        </td>\n                                                    </tr>\n                                                    <tr><td>Swap </td>\n                                                        <td className=\"td-actions text-right\">$ {' '}\n                                                            <NumberFormat value={fromHistoryOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                            {/* {fromHistoryOrderInfo[0].swap} */}\n                                                        </td>\n                                                    </tr>\n                                                    <tr><td>Total </td>\n                                                        <td className=\"td-actions text-right\">$ {' '}\n                                                            <NumberFormat value={fromHistoryOrderInfo[0].total} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                            {/* {fromHistoryOrderInfo[0].total} */}\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                        </div>\n                                    </div>\n                                </Col>\n                            ) : (\n                                    <Col md={6}>\n                                        <div className=\"card noRecordCol\"> No Record Found</div>\n                                    </Col>\n                                )}\n                            {(toHistoryOrderInfo && toHistoryOrderInfo.length > 0 && toHistoryOrderInfo[0].total != null) ? (\n                                <Col md={6}>\n                                    <div className=\"card\">\n                                        <div className=\"header\">\n                                            <h5 className={allHistoryRecord.id == '1' ? 'acntText color2' : 'acntText color2'}>{allHistoryRecord.accountToInfo[0].login}</h5>\n                                            <h6 className={'color2'} style={{ fontSize: 10 }}>({allHistoryRecord.accountToInfo[0].alias})</h6>\n                                        </div>\n                                        <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                            <table className=\"table\">\n                                                <tbody>\n                                                    <tr>\n                                                        <span className=\"symbolStyle\">{toSymbols}</span>\n\n                                                        {/* <td>{toSymbols}</td> */}\n                                                        {/* <td className=\"td-actions text-right\">$ {fromHistoryOrderInfo[0].profit}</td> */}\n                                                    </tr>\n                                                    <tr><td>Closed P/L </td>\n                                                        <td className=\"td-actions text-right\">$ {' '}\n                                                            <NumberFormat value={toHistoryOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                            {/* {toHistoryOrderInfo[0].profit} */}\n                                                        </td>\n                                                    </tr>\n                                                    <tr><td>Commission </td>\n                                                        <td className=\"td-actions text-right\">$ {' '}\n                                                            {/* {toHistoryOrderInfo[0].commission} */}\n                                                            <NumberFormat value={toHistoryOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                        </td>\n                                                    </tr>\n                                                    <tr><td>Swap </td>\n                                                        <td className=\"td-actions text-right\">$ {' '}\n                                                            {/* {toHistoryOrderInfo[0].swap} */}\n\n\n                                                            {\n                                                                <NumberFormat value={(toHistoryOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                                                // toOpenOrderInfo[0].swap\n                                                            }\n                                                        </td>\n                                                    </tr>\n                                                    <tr><td>Total </td>\n                                                        <td className=\"td-actions text-right\">$ {' '}\n                                                            {/* {toHistoryOrderInfo[0].total} */}\n                                                            <NumberFormat value={toHistoryOrderInfo[0].total} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                        </div>\n                                    </div>\n                                </Col>\n                            ) : (\n                                    <Col md={6}>\n                                        <div className=\"card noRecordCol\"> No Record Found</div>\n                                    </Col>\n                                )\n\n                            }\n                            {(sumOfTotal != 0) &&\n                                <Row>\n                                    <Col md={12} style={{ marginBottom: 20 }}>\n                                        <div>\n                                            <div className=\"total-box\">\n                                                <span className=\"text\">Sum of closed positions</span>\n                                                <span className=\"text\" style={{ float: 'right' }}>$ {' '}\n                                                    <NumberFormat value={sumOfTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                    {/* {sumOfTotal} */}\n                                                </span>\n                                            </div>\n                                        </div>\n                                    </Col>\n                                </Row>\n                            }\n\n\n\n\n\n                        </Fragment>\n                    }\n                </Row>\n                {/* </Collapse> */}\n                {allHistoryRecord.commission_acount_id !== 0 && allHistoryRecord.commission_acount_id !== undefined &&\n                    <Col md={12}>\n\n                        <div className=\"card \">\n                            <div className=\"header ptheader\">\n                                <h4 className=\"text-center\"><b>Commission</b></h4>\n                                <div className=\"row\">\n                                    <div className=\"col-md-12 text-center\">\n\n                                        <h5 className={allHistoryRecord.id == '1' ? 'acntText color2' : 'acntText acadjust color2'}>{allHistoryRecord.accountCommissionInfo !== undefined && allHistoryRecord.accountCommissionInfo[0].login} <span>({allHistoryRecord.accountCommissionInfo !== undefined && allHistoryRecord.accountCommissionInfo[0].alias})</span></h5>\n\n\n                                    </div>\n\n\n                                    <div className=\"col-md-12 total text-center\">\n\n\n                                        <tr>\n                                            <td className=\"td-actions total_comm text-right\">\n\n                                                Total : $ {' '}\n                                                {/* {toHistoryOrderInfo[0].total} */}\n                                                <NumberFormat value={allHistoryRecord.history_info} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                            </td>\n                                        </tr>\n\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Col>}\n            </div>\n        </div >\n\n    );\n}\n\nexport default Closeposition;\n","const Data = {\n \n  tablePage: {\n    items: [\n      {id: 1,lot:'Buy 10 Lot', closed: 'Closed P/L', commission: 'Commission', swap: 'Swap', total: 'Total', price:'$ 1110',textA: 'Account A'},\n      {id: 2, lot:'Sell 10 Lot', closed: 'Closed P/L', commission: 'Commission', swap: 'Swap', total: 'Total', price:'$ 1111', textA: 'Account B'},\n    ]\n  },\n  dashBoardPage: {\n    items: [\n      {id: 1, title: 'Balance', textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 2, title: 'Equity',textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 3, title: 'Margin', textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 4, title: 'Free Margin', textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 5, title: 'Margin %', textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 5, title: 'Unrealized P/L', textA: 'Account A', textB: 'Account B',price:'$ 400'}\n    ],\n  }\n};\n\nexport default Data;\n","import React, { useState, Fragment } from 'react';\nimport { Collapse } from 'reactstrap';\nimport { Row, Col } from \"react-bootstrap\";\nimport NumberFormat from 'react-number-format';\n\nimport Data from './Data';\n\nexport default function Openposition(props) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n  const { allOpenRecord, fromOpenOrderInfo, toOpenOrderInfo, } = props;\n\n\n  let fromsum = 0;\n  let tosum = 0;\n  let fromSymbols = '';\n  let toSymbols = '';\n  if (allOpenRecord && Object.entries(allOpenRecord).length > 0) {\n    fromSymbols = JSON.parse(allOpenRecord.from_symbols);\n    fromSymbols = (fromSymbols).map(data => data).join(', ');\n    toSymbols = JSON.parse(allOpenRecord.to_symbols);\n    toSymbols = (toSymbols).map(data => data).join(', ')\n  }\n  // if(fromOpenOrderInfo && fromOpenOrderInfo.length>0){\n  //   fromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\n  // }\n  // if(toOpenOrderInfo && toOpenOrderInfo.length>0){\n  //   tosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n  // }\n  if (fromOpenOrderInfo && fromOpenOrderInfo.length > 0) {\n    // if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\n    //   fromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\n    // }else{\n    fromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\n    // }\n  }\n  if (toOpenOrderInfo && toOpenOrderInfo.length > 0) {\n    // if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\n    //   tosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap);\n    // }else{\n    tosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n    // }\n    // opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n  }\n\n  let sumOfTotal = tosum + fromsum;\n  let noRecord = ((fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total == null) && (toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total == null)) ? true : false;\n\n  return (\n    <div>\n      <div className=\"openpositions symbol-box terminal-head-box\" style={{ margin: '20px 0px' }}>\n        <span className=\"p-text\">Unrealized Profit/Loss</span>\n        {/* <span className=\"icon-style\" onClick={toggle}>\n          {!isOpen ?\n            <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n            :\n            <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\n          }\n        </span> */}\n      </div>\n\n      <div>\n        {/* <Collapse isOpen={isOpen}> */}\n        <Row>\n\n\n\n          {/* {Data.tablePage.items.map((item, index) =>\n                  <Col md={6} key={index}>\n                    <div className=\"card\">\n                      <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\n                      </div>\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                        <table className=\"table\">\n                          <tbody>\n                            <tr><td>{item.lot} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.commission} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.swap} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.total} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                      </div>\n                    </div>\n                  </Col>\n                )} */}\n\n          {/* {(allOpenRecord && allOpenRecord.length>0) && allOpenRecord.map((item, index) =>\n                    \n                    <Col md={6} key={index}>\n                            <div className=\"card\">\n                            <div className=\"header\">\n                              <h5 className={item.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{item.account.login}</h5>\n                              <h6 style={{fontSize:10}} className={'colorDarkBlue'}>({item.account.alias})</h6>\n                            </div>\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                <table className=\"table\">\n                                <tbody>\n                                    <tr>\n                                        <td>\n                                            {item.order_type ===0 ? 'BUY ' : 'SELL ' } \n                                            {item.lots} {(item.lots>1) ? 'Lots':'Lot'}\n                                        </td>\n                                        <td className=\"td-actions text-right\"> {''}</td>\n                                    </tr>\n                                    <tr><td>Floating P/L </td>\n                                        <td className=\"td-actions text-right\">$ {item.profit}</td>\n                                    </tr>\n                                    <tr><td>Commission </td>\n                                        <td className=\"td-actions text-right\">$ {item.commission}</td>\n                                    </tr>\n                                    <tr><td>Swap </td>\n                                        <td className=\"td-actions text-right\">$ {item.swap}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Total </td>\n                                        <td className=\"td-actions text-right\">\n                                          $ {Math.floor(item.commission + item.swap + item.profit)}\n                                        </td>\n                                    </tr>\n                                </tbody>\n                                </table>\n                            </div>\n                            </div>\n                            </div>\n                        </Col>\n                )} */}\n          {/* {(allOpenRecord && allOpenRecord.length>0) &&\n                    <Row>\n                        <Col md={12}>\n                            <div>\n                            <div className=\"total-box\">\n                                <span className=\"text\">Sum of open positions</span>\n                                <span className=\"text\" style={{ float: 'right' }}>$ {sumOfTotal}</span>\n                            </div>\n                            </div>\n                        </Col>\n                    </Row>\n                } */}\n          {(noRecord) ?\n            <div className=\"text-center\">\n              No Record Found!\n                    </div>\n            :\n            <Fragment>\n              {(fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total !== null) ?\n\n                <Col md={6}>\n                  <div className=\"card\">\n                    <div className=\"header\">\n                      <h5 className={allOpenRecord.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{allOpenRecord.accountFromInfo[0].login}</h5>\n                      <h6 style={{ fontSize: 10 }} className={'colorDarkBlue'}>({allOpenRecord.accountFromInfo[0].alias})</h6>\n                    </div>\n                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                      <table className=\"table\">\n                        <tbody>\n                          <tr>\n                            <span className=\"symbolStyle \">{fromSymbols}</span>\n                          </tr>\n                          {/* Buy 10 Lot  */}\n                          <tr>\n                            <td>\n                              {fromOpenOrderInfo[0].order_type == 0 ? 'BUY ' : 'SELL '}\n\n                              {fromOpenOrderInfo[0].lots} {(fromOpenOrderInfo[0].lots > 1) ? 'Lots' : 'Lot'}\n                            </td>\n                            <td className=\"td-actions text-right\"> {''}</td>\n                          </tr>\n                          {/* <tr><td>{(fromOpenOrderInfo[0].lots>1) ? 'Lots':'Lot'}</td>\n                                        <td className=\"td-actions text-right\">{fromOpenOrderInfo[0].lots}</td>\n                                    </tr> */}\n                          <tr><td>Floating P/L </td>\n                            <td className=\"td-actions text-right\">$ {' '}\n                              {/* {fromOpenOrderInfo[0].profit} */}\n                              <NumberFormat value={fromOpenOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                            </td>\n                          </tr>\n                          <tr><td>Commission </td>\n                            <td className=\"td-actions text-right\">$ {' '}\n                              {/* {fromOpenOrderInfo[0].commission} */}\n                              <NumberFormat value={fromOpenOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                            </td>\n                          </tr>\n                          <tr><td>Swap </td>\n                            <td className=\"td-actions text-right\">$ {' '}\n                              {/* {fromOpenOrderInfo[0].swap} */}\n                              {/* {allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length > 0 ?\n                                  <NumberFormat value={allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                  // (allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].swap) \n                                  : */}\n                              <NumberFormat value={fromOpenOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                              {/* // fromOpenOrderInfo[0].swap */}\n                              {/* } */}\n                            </td>\n                          </tr>\n                          <tr>\n                            <td>Total </td>\n                            <td className=\"td-actions text-right\">$ {' '}\n                              {/* $ {Math.floor(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)} */}\n                              {/* {allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length > 0 ?\n                                  <NumberFormat value={(fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} /> */}\n                              {/* // Math.floor(fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap) \n                                  // : */}\n                              <NumberFormat value={(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                              {/* //  Math.floor(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)\n                                // } */}\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                    </div>\n                  </div>\n                </Col>\n                :\n                <Col md={6}>\n                  <div className=\"card noRecordCol\"> No Record Found</div>\n                </Col>\n              }\n\n              {(toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total !== null) ?\n\n                <Col md={6}>\n                  <div className=\"card\">\n                    <div className=\"header\">\n                      <h5 className={allOpenRecord.id == '1' ? 'acntText color2' : 'acntText color2'}>{allOpenRecord.accountToInfo[0].login}</h5>\n                      <h6 style={{ fontSize: 10 }} className={'color2'}>({allOpenRecord.accountToInfo[0].alias})</h6>\n                    </div>\n                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                      <table className=\"table\">\n                        <tbody>\n                          {/* Buy 10 Lot  */}\n                          <tr>\n                            <span className=\"symbolStyle\">{toSymbols}</span>\n                          </tr>\n                          <tr>\n                            <td>\n                              {toOpenOrderInfo[0].order_type == 0 ? 'BUY ' : 'SELL '}\n                              {toOpenOrderInfo[0].lots} {(toOpenOrderInfo[0].lots > 1) ? 'Lots' : 'Lot'}\n                            </td>\n                            <td className=\"td-actions text-right\"> {''}</td>\n                          </tr>\n                          {/* <tr><td>{(fromOpenOrderInfo[0].lots>1) ? 'Lots':'Lot'}</td>\n                                        <td className=\"td-actions text-right\">{fromOpenOrderInfo[0].lots}</td>\n                                    </tr> */}\n                          <tr><td>Floating P/L </td>\n                            <td className=\"td-actions text-right\">$ {' '}\n                              {/* {toOpenOrderInfo[0].profit} */}\n                              <NumberFormat value={toOpenOrderInfo[0].profit !== null ? toOpenOrderInfo[0].profit : 0} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                            </td>\n                          </tr>\n                          <tr><td>Commission </td>\n                            <td className=\"td-actions text-right\">$ {' '}\n                              {/* {toOpenOrderInfo[0].commission} */}\n                              <NumberFormat value={toOpenOrderInfo[0].commission !== null ? toOpenOrderInfo[0].commission : 0} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                            </td>\n                          </tr>\n                          <tr><td>Swap </td>\n                            <td className=\"td-actions text-right\">$ {' '}\n                              {/* {toOpenOrderInfo[0].swap} */}\n                              {/* {allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length > 0 ?\n                                  // (allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].swap) \n                                  <NumberFormat value={(allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                  : */}\n                              <NumberFormat value={(toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                              {/* // toOpenOrderInfo[0].swap\n                                // } */}\n                            </td>\n\n                          </tr>\n                          <tr>\n                            <td>Total </td>\n                            <td className=\"td-actions text-right\"> $ {' '}\n                              {/* {allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length > 0 ?\n                                  //  Math.floor(toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap)\n                                  <NumberFormat value={(toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                  : */}\n                              <NumberFormat value={(toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                              {/* \n                                  //  Math.floor(toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit)\n                                } */}\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                    </div>\n                  </div>\n                </Col>\n                :\n                <Col md={6}>\n                  <div className=\"card noRecordCol\"> No Record Found</div>\n                </Col>\n              }\n              {\n                sumOfTotal != 0 &&\n                <Row>\n                  <Col md={12}>\n                    <div>\n                      <div className=\"total-box\">\n                        <span className=\"text\">Sum of open positions</span>\n                        <span className=\"text\" style={{ float: 'right' }}>$ {' '}\n                          <NumberFormat value={sumOfTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                          {/* {sumOfTotal} */}\n                        </span>\n                      </div>\n                    </div>\n                  </Col>\n                </Row>\n              }\n            </Fragment>\n          }\n        </Row>\n        {/* </Collapse> */}\n      </div>\n    </div>\n  )\n}\n","import config from './constant/config';\n\nconst axios = require('axios');\n\n\nconst myInitObject = {}\nexport default myInitObject;\n\n\nexport const api = () => {\n    \n    // Object.keys(myInitObject).forEach(key=> myInitObject[key]=null)\n    // console.log(myInitObject, '-----------------+++++');\n    axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\n        .then(function (response) {\n            if (response.status == 200) {\n                myInitObject.fetchAllHistoryTrade = response.data\n                myInitObject.responsHT = true\n            }\n        })\n\n    axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\n        .then(function (response) {\n            if (response.status == 200) {\n                myInitObject.fetchAllOpenTrade = response.data\n                myInitObject.responsOT = true\n            }\n        })\n\n    axios.get(config.baseurl + '/accounts/fetchAllAccounts')\n        .then(function (response) {\n            if (response.status == 200) {\n                myInitObject.fetchAllAccounts = response.data\n                myInitObject.responsAC = true\n            }\n        });\n\n    axios.get(config.baseurl + '/filter/fetchActivefilterdata')\n        .then(function (response) {\n            if (response.status == 200) {\n                myInitObject.fetchActivefilterdata = response.data\n                myInitObject.responsAF = true\n            }\n        });\n\n    axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\n        .then(function (response) {\n            if (response.status == 200) {\n                myInitObject.fetchLastUpdatedTime = response.data\n                myInitObject.responsLUT = true\n            }\n        });\n\n    axios.get(config.baseurl + '/accounts/fetchStatusData')\n        .then(function (response) {\n            if (response.status == 200) {\n                myInitObject.fetchStatusData = response.data\n                myInitObject.responsSD = true\n            }\n        });\n\n    axios.get(config.baseurl + '/profilepositions/calculatingOpenTrade')\n        .then(function (response) {\n            if (response.status == 200) {\n                myInitObject.calculatingOpenTrade = response.data\n                myInitObject.responsCOT = true\n\n                axios.get(config.baseurl + '/profilepositions/calculatingHistoryTrade')\n                    .then(function (response) {\n                        if (response.status == 200) {\n                            myInitObject.calculatingHistoryTrade = response.data\n                            myInitObject.responsCHT = true\n\n                            axios.get(config.baseurl + '/profilepositions/calculatingCommission')\n                                .then(function (response) {\n                                    if (response.status == 200) {\n                                        myInitObject.calculatingCommission = response.data\n                                        myInitObject.responsCC = true\n                                    }\n                                })\n                        }\n                    })\n            }\n        })\n    axios.get(config.baseurl + '/accounts/fetchAllSymbol')\n        .then(function (response) {\n            if (response.status == 200) {\n                myInitObject.fetchAllSymbol = response.data\n                myInitObject.responsAS = true\n            }\n        })\n    axios.get(config.baseurl + '/filter/fetchdailyswaps')\n    .then(function (response) {\n        if (response.status == 200) {\n            myInitObject.fetchdailyswaps = response.data\n            myInitObject.responsDS = true\n        }\n    })\n    axios.get(config.baseurl + '/users/allAccounts?page=1')\n        .then(function (response) {\n            if (response.status == 200) {\n                myInitObject.usersAllAccounts = response.data\n                myInitObject.responsAAC = true\n            }\n        })\n\n    axios.get(config.baseurl + '/filter/fetchfilterdata?page=1')\n        .then(function (response) {\n            if (response.status == 200) {\n                myInitObject.fetchfilterdata = response.data\n                myInitObject.responsFF = true\n            }\n        })\n}\n","import React, { Component } from \"react\";\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\n// import SweetAlert from 'react-bootstrap-sweetalert';\nimport swal from \"sweetalert\";\nimport config from \"../constant/config.js\";\nimport ReactPaginate from 'react-paginate';\nconst axios = require(\"axios\");\n\nlet intervalSet;\nlet timerWaitInterval;\nlet timerWait = 100;\nclass Innerlogin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loginForm: false,\n      setShow: false,\n      show: true,\n      login: \"\",\n      password: \"\",\n      broker: \"\",\n      alias: \"\",\n      is_server: false,\n      alert: null,\n      persons: [],\n      shwPwd: false,\n      shwPwd: false,\n      shwLogin: false,\n      shwbroker: false,\n      accountlist: [],\n      count: \"\",\n      pages:'',\n      page: 1,\n      editForm: false,\n      detailForm: false,\n      editData: [],\n      edituser: \"\",\n      editserver: \"\",\n      editalias: \"\",\n      editstatus: \"\",\n      id: \"\",\n      // tryAgainConnection: false,\n      currentAddLogin: null,\n      currentAddBroker: null,\n      currentAddAlias: null,\n      timerShow: false,\n      closebtn: true,\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onUpdate = this.onUpdate.bind(this);\n  }\n  // delete alert\n  // deleteThisGoal() {\n  //     const getAlert = () => (\n  //         <SweetAlert\n  //             success\n  //             title=\"Woot!\"\n  //             onConfirm={() => this.hideAlert()}\n  //         >\n  //             Hello world!\n  //       </SweetAlert>\n  //     );\n\n  //     this.setState({\n  //         alert: getAlert()\n  //     });\n  // }\n  fectheAllAccount() {\n   \n    let self = this;\n    axios\n      .get(config.baseurl + `/users/allAccounts?page=${self.state.page}`)\n      .then(function (response) {\n        if (response.status == 200) {\n          self.setState({\n            accountlist: response.data.rows,\n            count: response.data.count,\n            pages: response.data.pages,\n          });\n        }\n      });\n    // console.log(response.status,\"accountlist\");\n  }\n  \n  handlePageClick = (data) => {\n    this.setState({page :data.selected + 1},()=> {\n     this.fectheAllAccount(this.state.page)\n    })\n  }\n  changeServer = (e) => {\n    this.setState({ is_server: !this.state.is_server }, () => {});\n    console.log(this.state.is_server, \"ooooo\");\n  };\n  onChange(e) {\n    this.setState({ error: \"\" });\n    if (e.target.name === \"login\") {\n      const re = /^[0-9\\b]+$/;\n      if (e.target.value === \"\" || re.test(e.target.value)) {\n        this.setState({ [e.target.name]: e.target.value });\n      } else if (e.target.value !== re) {\n        this.setState({ error: \"alphabet\" });\n      }\n    } else {\n      this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n  }\n\n  checkUserConnected = (login, broker) => {\n    let self = this;\n    axios\n      .post(config.baseurl + \"/users/checkUserConnected\", {\n        login: login,\n        broker: broker,\n      })\n      .then(function (response) {\n        if (response.status == 200) {\n          if (response.data.connected) {\n            self.setState({\n              currentAddLogin: null,\n              currentAddBroker: null,\n              currentAddAlias: null,\n            });\n            clearInterval(intervalSet);\n            clearInterval(timerWaitInterval);\n            self.setState({ timerShow: false });\n\n            timerWait = 100;\n            // self.setState({ tryAgainConnection: false });\n            self.setState({ loginForm: false });\n            self.handleClose();\n            self.fectheAllAccount();\n            // swal({\n            //     text: \"Connected\",\n            //     timer: 2000,\n            //     button: false\n            // })\n          }\n        } else {\n        }\n      });\n  };\n\n  setIntervalCustom = () => {\n    let self = this;\n    var name = \"Authorization Process Failed\";\n    var content = document.createElement(\"div\");\n    content.innerHTML = \" <strong>\" + name + \"</strong>\";\n\n    timerWaitInterval = setInterval(function () {\n      timerWait--;\n      if (timerWait <= 0) {\n        self.setState({\n          currentAddLogin: null,\n          currentAddBroker: null,\n          currentAddAlias: null,\n        });\n        clearInterval(intervalSet);\n        clearInterval(timerWaitInterval);\n        self.setState({ timerShow: false });\n        self.setState({ loginForm: false });\n        self.setState({ closebtn: true });\n        timerWait = 100;\n        swal({\n          content: content,\n          timer: 2000,\n          button: false,\n        });\n      } else {\n        self.setState({ timerShow: true });\n      }\n    }, 1000);\n  };\n\n  onSubmit(e) {\n    e.preventDefault();\n    const userdetail = {\n      login: this.state.login,\n      password: this.state.password,\n      broker: this.state.broker,\n      alias: this.state.alias,\n      is_server: this.state.is_server ? 1 : 0,\n    };\n    if (this.state.login == \"\") {\n      this.setState({ error: \"login\" });\n    } else if (this.state.password == \"\") {\n      this.setState({ error: \"password\" });\n    } else if (this.state.broker == \"\") {\n      this.setState({ error: \"broker\" });\n    } else {\n      this.setState({ error: \"\" });\n    }\n    if (\n      this.state.login !== \"\" &&\n      this.state.password !== \"\" &&\n      this.state.broker !== \"\"\n    ) {\n      // {\n      //     swal({\n      //         text: \"User Already Connected\",\n      //         timer: 2000,\n      //         button: false\n      //     })\n      // }\n      let self = this;\n      self.setState({ closebtn: false });\n      axios\n        .post(config.baseurl + \"/users/addUser\", userdetail)\n        .then(function (response) {\n          if (response.data.status === true) {\n            self.setIntervalCustom();\n            self.fectheAllAccount();\n            self.setState({\n              currentAddLogin: userdetail.login,\n              currentAddBroker: userdetail.broker,\n              currentAddAlias: userdetail.alias,\n            });\n            intervalSet = setInterval(function () {\n              self.checkUserConnected(userdetail.login, userdetail.broker);\n            }, 5000);\n          }\n          if (response.data.status == 202) {\n            swal({\n              text: \"User doesn't exist\",\n              timer: 2000,\n              button: false,\n            });\n          }\n          if (response.data.status == \"500\") {\n            swal({\n              text: \"User Already Connected!\",\n              timer: 2000,\n              button: false,\n            });\n            self.setState({ closebtn: true });\n          } else if (response.status == 201) {\n            swal({\n              title: \"Done!\",\n              text: response.data,\n              // icon: \"{response.status == 200 ? 'warning ':'success'}\",\n              timer: 2000,\n              button: false,\n            });\n          }\n        })\n        .catch(function (error) {\n          self.handleClose();\n        });\n\n      /////////////////// redirect to dashboard\n      // login(user).then(res => {\n      //     if (res) {\n      //         this.props.history.push(`\\profile`)\n      //     }\n      // })\n    }\n  }\n  onUpdate(e) {\n    e.preventDefault();\n    const userdetail = {\n      id: this.state.id,\n      user: this.state.edituser,\n      broker: this.state.editserver,\n      alias: this.state.editalias,\n      is_server: this.state.is_server ? 1 : 0,\n    };\n    let self = this;\n    axios\n      .post(config.baseurl + \"/users/updateuser\", userdetail)\n      .then(function (response) {\n        if (response.status == 200) {\n          // self.setState({ accountlist: response.data.rows })\n          self.fectheAllAccount();\n          self.handleCloseEdit();\n        }\n      })\n      .catch(function (error) {});\n  }\n  // checkValidUser = ()=> {\n  //     console.log(this.state,'loginnnnnnnnnnnnnnnnnnnnnnnn')\n  //     const userdetail = {\n  //         login: this.state.login,\n  //         password: this.state.password,\n  //         broker: this.state.broker,\n  //         alias: this.state.alias\n  //     }\n  //     axios.get(config.baseurl + '/accounts/matchUser',userdetail)\n  //     .then(function (response) {\n\n  //         if (response.status == 200) {\n  //             // alert(response.data)\n  //             swal({\n  //                 title: \"Done!\",\n  //                 text: response.data,\n  //                 // icon: \"{response.status == 200 ? 'warning ':'success'}\",\n  //                 timer: 2000,\n  //                 button: false\n  //             })\n\n  //         }\n  //         // console.log(response);\n  //     })\n  //     .catch(function (error) {\n  //         console.log(error);\n  //     });\n  // }\n  toogle = () => {\n    this.setState({ loginForm: !this.state.loginForm });\n    this.setState({\n      login: \"\",\n      password: \"\",\n      broker: \"\",\n      alias: \"\",\n      is_server: false,\n    });\n  };\n\n  handleClose = () => {\n    this.setState({ loginForm: false });\n  };\n  handleCloseEdit = () => {\n    this.setState({ editForm: false });\n  };\n  handleCloseDetail = () => {\n    this.setState({ detailForm: false });\n  };\n  handleShow = () => {\n    this.setState({ setShow: true });\n  };\n\n  componentDidMount() {\n    this.fectheAllAccount();\n  }\n  createTr = () => {\n    return (\n      this.state.accountlist.length > 0 &&\n      this.state.accountlist.map((item, index) => {\n        return (\n          <tr key={index}>\n            <th scope=\"row\">{index + 1}</th>\n            <td>{item.login}</td>\n            <td>{item.broker}</td>\n            <td>{item.alias}</td>\n            <td style={{ fontWeight: 600 }}>\n              {item.launched == 1 ? \"Connected\" : \"Disconnected\"}\n            </td>\n            <td>\n              <a href=\"\" onClick={(e) => this.viewFilter(e, item)}>\n                <i className=\"fa fa-eye facolor\" aria-hidden=\"true\"></i>\n              </a>\n              <a href=\"\" onClick={(e) => this.editFilter(e, item)}>\n                <i\n                  className=\"fa fa-pencil-square-o facolor\"\n                  aria-hidden=\"true\"\n                ></i>\n              </a>\n              {/* <a href=\"\" onClick={(e)=> this.deleteFilter(e,item)}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></a> */}\n            </td>\n          </tr>\n        );\n      })\n    );\n  };\n  editFilter(e, data) {\n    e.preventDefault();\n    this.setState({\n      editForm: true,\n      editData: data,\n      id: data.id,\n      edituser: data.login,\n      editserver: data.broker,\n      editalias: data.alias,\n    });\n  }\n  editAlias(e) {\n    this.setState({ editalias: e.target.value });\n  }\n  viewFilter(e, data) {\n    e.preventDefault();\n    this.setState({\n      detailForm: true,\n      edituser: data.login,\n      editserver: data.broker,\n      editalias: data.alias,\n      editstatus: data.status,\n    });\n  }\n  render() {\n    let val = this.state.page\n    return (\n      <div className=\"content\">\n        <Grid fluid>\n          <Row>\n            <Col md={12} sm={6}>\n              <div className=\"terminal-box\">\n                <span className=\"terminal-text\">Terminal Accounts</span>\n                {/* <div style={{ padding: '20px' }}>\n                                    <a\n                                        onClick={() => this.deleteThisGoal()}\n                                        className='btn btn-danger'\n                                    >\n                                        <i className=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete Goal\n                                     </a>\n                                    {this.state.alert}\n                                </div> */}\n              </div>\n              <button className=\"pull-right add-button\" onClick={this.toogle}>\n                Add New\n              </button>\n\n              {this.state.loginForm && (\n                <Modal\n                  show={this.state.show}\n                  onHide={\n                    this.state.closebtn\n                      ? this.handleClose\n                      : () => console.log(\"error\")\n                  }\n                >\n                  {/* <Modal.Header closeButton>\n                                        <Modal.Title>Log In</Modal.Title>\n                                    </Modal.Header> */}\n                  <Modal.Body>\n                    <div className=\"form-box\">\n                      <Modal.Header\n                        closeButton={this.state.closebtn ? true : false}\n                      >\n                        <Modal.Title className=\"text-center\">\n                          <b>Log In</b>\n                        </Modal.Title>\n                      </Modal.Header>\n                      <form\n                        style={{ marginTop: \"20px\" }}\n                        onSubmit={this.onSubmit}\n                      >\n                        <label>User Name</label>\n                        <input\n                          type=\"text\"\n                          className=\"Itext labelSet \"\n                          placeholder=\"Enter Username\"\n                          name=\"login\"\n                          value={this.state.login}\n                          onChange={this.onChange}\n                          disabled={this.state.currentAddLogin ? true : false}\n                          // onKeyUp={this.checkValidUser}\n                        ></input>\n\n                        {this.state.error == \"login\" && (\n                          <span style={{ color: \"red\", fontSize: \"13px\" }}>\n                            Please enter Username{\" \"}\n                          </span>\n                        )}\n\n                        {this.state.error == \"alphabet\" && (\n                          <span style={{ color: \"red\", fontSize: \"13px\" }}>\n                            \"Invalid format. login should contain only digits.\"\n                          </span>\n                        )}\n                        <br></br>\n                        <label className=\"labeAdjust\">Password</label>\n                        <input\n                          className=\"Itext labelSet\"\n                          placeholder=\"Password\"\n                          name=\"password\"\n                          type=\"password\"\n                          value={this.state.password}\n                          onChange={this.onChange}\n                          disabled={this.state.currentAddLogin ? true : false}\n                        ></input>\n                        {this.state.error == \"password\" && (\n                          <span style={{ color: \"red\", fontSize: \"13px\" }}>\n                            Please enter Password{\" \"}\n                          </span>\n                        )}\n                        <br></br>\n                        <label className=\"labeAdjust\">Server</label>\n                        <input\n                          className=\"Itext labelSet\"\n                          name=\"broker\"\n                          placeholder=\"Server\"\n                          value={this.state.broker}\n                          onChange={this.onChange}\n                          disabled={this.state.currentAddBroker ? true : false}\n                        ></input>\n                        {this.state.error == \"broker\" && (\n                          <span style={{ color: \"red\", fontSize: \"13px\" }}>\n                            Please enter Server{\" \"}\n                          </span>\n                        )}\n                        <br></br>\n                        <label className=\"labeAdjust\">Alias</label>\n                        <input\n                          className=\"Itext labelSet\"\n                          placeholder=\"Alias\"\n                          value={this.state.alias}\n                          onChange={this.onChange}\n                          name=\"alias\"\n                          disabled={this.state.currentAddAlias ? true : false}\n                        ></input>\n                        <br></br>\n                        <div className=\"chceckbox\">\n                          <label className=\"checkbox-inline\">\n                            <input\n                              type=\"checkbox\"\n                              defaultChecked={this.state.is_server}\n                              onChange={(e) => this.changeServer(e)}\n                            />\n                            <b>Is Server</b>\n                          </label>\n                        </div>\n                        {this.state.timerShow && (\n                          <p>\n                            Connecting to server... {timerWait} seconds remains\n                          </p>\n                        )}\n                        <div className=\" topadjust clearfix\">\n                          {/* {this.state.tryAgainConnection === false ? */}\n                          {/* ( */}\n                          {this.state.timerShow == false && (\n                            <button\n                              type=\"submit\"\n                              className=\"save\"\n                              className={\n                                !this.state.login ||\n                                !this.state.password ||\n                                !this.state.broker\n                                  ? \"loginButton\"\n                                  : \"loginButton save2 save1\"\n                              }\n                            >\n                              Submit\n                            </button>\n                          )}\n                          {/* ) */}\n                          {/* //     :\n                                                    //     (this.state.timerShow == false && <div ></div>)\n                                                    // } */}\n                        </div>\n                      </form>\n                    </div>\n                  </Modal.Body>\n                  {/* <Modal.Footer>\n                                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                                            Close\n                                  </Button>\n                                        \n                                    </Modal.Footer> */}\n                </Modal>\n              )}\n            </Col>\n          </Row>\n          <div style={{ background: \"#ffffff\" }}>\n            <Row>\n              <Col md={12}>\n                <div style={{ padding: \"10px\" }}>\n                  <table className=\"table table-striped table-bordered\">\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">Sr.No.</th>\n                        <th scope=\"col\">User Name</th>\n                        <th scope=\"col\">Server</th>\n                        <th scope=\"col\">Alias</th>\n                        <th scope=\"col\">Status</th>\n                        <th scope=\"col\">Action</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {/* {this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => { */}\n                      {/* // console.log(\"hhhhhhhhhhh\") */}\n                      {this.createTr()}\n                      {/* })} */}\n                      {/* <tr>\n                                                <th scope=\"row\">2</th>\n                                                <td>Jacob</td>\n                                                <td>Thornton</td>\n                                                <td>5.1.2.9</td>\n                                                <td>Connected</td>\n                                            </tr>\n                                            <tr>\n                                                <th scope=\"row\">3</th>\n                                                <td>Larry</td>\n                                                <td>the Bird</td>\n                                                <td>ab@123</td>\n                                                <td>Connected</td>\n                                            </tr> */}\n                    </tbody>\n                  </table>\n                  <ReactPaginate\n                    previousLabel={\"prev\"}\n                    nextLabel={\"next\"}\n                    breakLabel={\"...\"}\n                    pageCount={this.state.pages}\n                    marginPagesDisplayed={9}\n                    pageRangeDisplayed={9}\n                    onPageChange={(e)=>this.handlePageClick(e)}\n                    containerClassName={\"pagination\"}\n                    subContainerClassName={\"pages pagination\"}\n                    activeClassName={\"active\"}\n                    />\n                </div>\n              </Col>\n              <div className=\"centerbtn\"></div>\n            </Row>\n          </div>\n        </Grid>\n\n        {this.state.editForm && (\n          <Modal show={this.state.show} onHide={this.handleCloseEdit}>\n            {/* <Modal.Header closeButton>\n                                        <Modal.Title>Log In</Modal.Title>\n                                    </Modal.Header> */}\n            <Modal.Body>\n              <div className=\"form-box\">\n                <Modal.Header closeButton>\n                  <Modal.Title className=\"text-center\">\n                    <b>Edit</b>\n                  </Modal.Title>\n                </Modal.Header>\n                <form style={{ marginTop: \"20px\" }} onSubmit={this.onUpdate}>\n                  <label>User</label>\n                  <input\n                    className=\"Itext\"\n                    disabled\n                    name=\"broker\"\n                    placeholder=\"Server\"\n                    value={this.state.edituser}\n                  ></input>\n\n                  <label>Server</label>\n                  <input\n                    className=\"Itext\"\n                    disabled\n                    name=\"broker\"\n                    placeholder=\"Server\"\n                    value={this.state.editserver}\n                  ></input>\n                  <label>Alias</label>\n                  <input\n                    className=\"Itext\"\n                    placeholder=\"Alias\"\n                    value={this.state.editalias}\n                    name=\"alias\"\n                    onChange={(e) => this.editAlias(e)}\n                  ></input>\n                  <div className=\"clearfix\">\n                    <button type=\"submit\" className=\"save\">\n                      Update\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </Modal.Body>\n            {/* <Modal.Footer>\n                                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                                            Close\n                                  </Button>\n                                        \n                                    </Modal.Footer> */}\n          </Modal>\n        )}\n\n        {this.state.detailForm && (\n          <Modal show={this.state.show} onHide={this.handleCloseDetail}>\n            {/* <Modal.Header closeButton>\n                                        <Modal.Title>Log In</Modal.Title>\n                                    </Modal.Header> */}\n            <Modal.Body>\n              <div className=\"form-box\">\n                <Modal.Header closeButton>\n                  <Modal.Title className=\"text-center\">\n                    <b>Details</b>\n                  </Modal.Title>\n                </Modal.Header>\n                <div className=\"detail_div\">\n                  <table>\n                    <tr>\n                      <td>\n                        <label>User Name</label>\n                      </td>\n                      <td>\n                        <label>{this.state.edituser}</label>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        <label>Server</label>\n                      </td>\n                      <td>\n                        <label>{this.state.editserver}</label>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        <label>Alias</label>\n                      </td>\n                      <td>\n                        <label>{this.state.editalias}</label>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        <label>Status</label>\n                      </td>\n                      <td>\n                        <label>\n                          {this.state.editstatus == 1\n                            ? \"Connected\"\n                            : \"Disconnected\"}\n                        </label>\n                      </td>\n                    </tr>\n                  </table>\n                </div>\n              </div>\n            </Modal.Body>\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Innerlogin;\n","import React, { Component } from 'react';\nimport { Collapse } from 'reactstrap';\nimport Select from 'react-select';\nimport { Grid, Row, Col } from \"react-bootstrap\";\n// import Data from './Data';\nimport NumberFormat from 'react-number-format';\nimport Closeposition from 'views/Closeposition';\nimport Openposition from 'views/Openposition';\n\n// import config from '../constant/config.js';\nimport config from '../constant/config.js';\nimport myInitObject from '../api'\nconst axios = require('axios');\n\n// import Card from \"components/Card/Card.jsx\";\n// import { thArray, tdArray } from \"variables/Variables.jsx\";\n\nclass TableList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isOpen2: false,\n      allSymbols: [],\n      selectedOption: null,\n      allHistoryRecord: [],\n      allOpenRecord: [],\n      fromHistoryOrderInfo: [],\n      toHistoryOrderInfo: [],\n      commissionHistoryOrderInfo: [],\n      fromOpenOrderInfo: [],\n      toOpenOrderInfo: [],\n      filterlist: [],\n      allSymbols: [],\n      symbolsObj: [],\n      activeProfileName: ''\n    }\n\n  }\n  // toggle = () => {\n  //   this.setState({ isOpen: !this.state.isOpen })\n  // }\n  // componentWillMount() {\n  //   let self = this;\n  // axios.get(config.baseurl + '/accounts/fetchAllSymbol')\n  // .then(function (response) {\n  //   if (response.status == 200) {\n  //     self.setState({ allSymbols: response.data.rows })\n  //   }\n  // })\n\n  // axios.get(config.baseurl + '/filter/fetchfilterdata')\n  // .then(function (response) {\n  //   if (response.status == 200) {\n  //     self.setState({ filterlist: response.data.rows })\n  //   }\n  // })\n\n  // axios.get(config.baseurl + '/filter/fetchActivefilterdata')\n  // .then(function (response) {\n  //   if (response.status == 200) {\n  //     if(response.data.rows && response.data.rows.length>0){\n  //       // let symbolsObj = (response.data.rows[0].symbols).map(data => { return ({value:data, label:data})})\n  //         self.setState({ filterlist: response.data.rows, allSymbols: response.data.rows[0].symbols, \n  //         // selectedOption:symbolsObj\n  //        })\n  //     }\n  //   }\n  // });\n  // }\n\n  componentDidMount() {\n    setInterval(() => {\n      if((myInitObject.responsHT &&\n        myInitObject.responsOT &&\n        myInitObject.responsAC ) === undefined){\n        // console.log('no data');\n      }else{ \n        this.setState({\n          //history trade\n          allHistoryRecord: myInitObject.fetchAllHistoryTrade.rows,\n          fromHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.fromHistoryOrderInfo,\n          toHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.toHistoryOrderInfo,\n          //open trade\n          allOpenRecord: myInitObject.fetchAllOpenTrade.rows,\n          fromOpenOrderInfo: myInitObject.fetchAllOpenTrade.fromOpenOrderInfo,\n          toOpenOrderInfo: myInitObject.fetchAllOpenTrade.toOpenOrderInfo,\n          //active filter data\n          filterlist: myInitObject.fetchActivefilterdata.rows,\n          activeProfileName: myInitObject.fetchActivefilterdata.rows[0].profile_name,\n        },() =>{\n          this.setState({ errorMassege:this.state.filterlist.length == 0 ?  true : false,})\n        })\n      }}, 1000)\n    // let self = this;\n    // axios.get(config.baseurl + '/filter/fetchActivefilterdata')\n    //   .then(function (response) {\n    //     if (response.status == 200) {\n    //       console.log(response, \"respp----------------->\")\n    //       self.setState({ filterlist: response.data.rows, })\n    //       if (self.state.filterlist.length == 0) {\n    //         self.setState({ errorMassege: true, })\n    //       }\n    //       else {\n    //         self.setState({ activeProfileName: response.data.rows[0].profile_name })\n    //       }\n    //     }\n    //   });\n    // axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\n    //   .then(function (response) {\n    //     // console.log(response.data, 'response.data his')\n    //     if (response.status == 200) {\n    //       // self.setState({ allHistoryRecord: response.data.rows })\n    //       self.setState({\n    //         allHistoryRecord: response.data.rows,\n    //         fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,\n    //         toHistoryOrderInfo: response.data.toHistoryOrderInfo,\n    //         commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\n    //       })\n    //     }\n    //   })\n    // // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\n    // // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\n    // axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\n    //   .then(function (response) {\n    //     if (response.status == 200) {\n\n    //       // self.setState({ allOpenRecord: response.data.rows })\n    //       self.setState({\n    //         allOpenRecord: response.data.rows,\n    //         fromOpenOrderInfo: response.data.fromOpenOrderInfo,\n    //         toOpenOrderInfo: response.data.toOpenOrderInfo\n    //       })\n    //     }\n    //   })\n  }\n\n\n\n\n  fetchDataAccordingSymbols = (symbol) => {\n    let self = this;\n    let { startdateFrom, startdateTo, enddateFrom, enddateTo, to_account_id, from_account_id } = this.state.filterlist[0];\n\n    let postData = { \"to_account_id\": to_account_id, \"from_account_id\": from_account_id, \"startdateFrom\": startdateFrom, \"startdateTo\": startdateTo, \"enddateFrom\": enddateFrom, \"enddateTo\": enddateTo, \"symbol\": symbol }\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolHistory', {'symbol':symbol})\n\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolHistory', postData)\n    axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\n      .then(function (response) {\n        // console.log(response.data, 'response.data his')\n        if (response.status == 200) {\n          // self.setState({ allHistoryRecord: response.data.rows })\n          self.setState({\n            allHistoryRecord: response.data.rows,\n            fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,\n            toHistoryOrderInfo: response.data.toHistoryOrderInfo,\n            commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\n\n          })\n        }\n      })\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\n    axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\n      .then(function (response) {\n        if (response.status == 200) {\n          // console.log(response.data, 'response.data open')\n\n          // self.setState({ allOpenRecord: response.data.rows })\n          self.setState({\n            allOpenRecord: response.data.rows,\n            fromOpenOrderInfo: response.data.fromOpenOrderInfo,\n            toOpenOrderInfo: response.data.toOpenOrderInfo\n          })\n        }\n      })\n  }\n\n  handleChange = selectedOption => {\n    this.setState({ selectedOption });\n    this.fetchDataAccordingSymbols(selectedOption.value);\n  };\n\n  renderSymbols = () => {\n    const { selectedOption, allSymbols } = this.state;\n    // let options = allSymbols.map(data => {\n    //   return {value:data.name, label:data.name};\n    // })\n    let options = allSymbols.map(data => {\n      return { value: data, label: data };\n    });\n\n    return (\n      <Select\n        placeholder=\"Select Symbol...\"\n        className=\"S-text\"\n        // isMulti\n        value={selectedOption}\n        onChange={this.handleChange}\n        options={options}\n      />\n    )\n  }\n  // toggle2 = () => {\n  //   this.setState({ isOpen2: !this.state.isOpen2 })\n  // };\n  render() {\n    const { activeProfileName, allHistoryRecord, allOpenRecord, selectedOption, toOpenOrderInfo, fromOpenOrderInfo, fromHistoryOrderInfo, commissionHistoryOrderInfo, toHistoryOrderInfo } = this.state;\n    //   const sumOfOpenTotal = allOpenRecord.reduce((current, data) => {\n    //     return (Math.floor(data.commission + data.swap + data.profit+ current));\n    // }, 0);\n\n    //   const sumOfHistoryTotal = allHistoryRecord.reduce((current, data) => {\n    //     return (data.profit + current);\n    // }, 0);\n    let uniqueSymbols = \"\";\n    if (allOpenRecord && Object.entries(allOpenRecord).length > 0) {\n      let fromSymbols = JSON.parse(allOpenRecord.from_symbols);\n      // fromSymbols = (fromSymbols).map(data => data).join(', ');\n      let toSymbols = JSON.parse(allOpenRecord.to_symbols);\n      let combineSymbols = fromSymbols.concat(toSymbols);\n      uniqueSymbols = combineSymbols.filter((item, i, ar) => ar.indexOf(item) === i);\n      uniqueSymbols = (uniqueSymbols).map(data => data).join(', ')\n    }\n    let fromsum = 0;\n    let tosum = 0;\n    // if(fromHistoryOrderInfo && commissionHistoryOrderInfo && fromHistoryOrderInfo.length>0){\n    if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\n      fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\n    }\n\n    if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\n      tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\n    }\n\n    let sumOfHistoryTotal = tosum + fromsum;\n\n    let openfromsum = 0;\n    let opentosum = 0;\n    if ((fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total != null)) {\n      // if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\n      //   openfromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\n      // }else{\n      openfromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\n\n    }\n    if ((toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total != null)) {\n      // if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\n      //   opentosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit+ toOpenOrderInfo[0].swap);\n      // }\n\n      // else{\n      //   opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n      // }\n      opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n    }\n\n    let sumOfOpenTotal = opentosum + openfromsum;\n\n    //   console.log(opentosum, 'opentosum')\n    //   console.log(openfromsum, 'openfromsum')\n    //  console.log(sumOfHistoryTotal, \"sumOfHistoryTotal------\");\n    //  console.log(sumOfOpenTotal, \"sumOfOpenTotal-----\");\n    //  console.log(allOpenRecord, 'allOpenRecord')\n\n\n\n    return (\n      <div>\n        <div class=\"shadoremove\">\n          {/* <div className=\"symbol-box\"> */}\n          {/* <span className=\"S-text\">EURUSD</span> */}\n          {/* <div style={{ borderBottom: '2px solid grey' }}>\n            {this.renderSymbols()}\n\n          </div> */}\n          {/* <div style={{ margin: '20px 0px' }}>\n            <span className=\"p-text\">Open Positions</span>\n            <span className=\"icon-style\" onClick={this.toggle}>\n              <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\n            </span>\n          </div>\n          <div>\n\n            <Collapse isOpen={this.state.isOpen}>\n              <Row>\n                {Data.tablePage.items.map((item, index) =>\n                  <Col md={6} key={index}>\n                    <div className=\"card\">\n                      <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\n                      </div>\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                        <table className=\"table\">\n                          <tbody>\n                            <tr><td>{item.lot} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.commission} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.swap} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.total} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                      </div>\n                    </div>\n                  </Col>\n                )}\n                <Row>\n                  <Col md={12}>\n                    <div>\n                      <div className=\"total-box\">\n                        <span className=\"text\">Sum of open position</span>\n                        <span className=\"text\" style={{ float: 'right' }}>$111111</span>\n                      </div>\n                    </div>\n                  </Col>\n                </Row>\n              </Row>\n            </Collapse>\n          </div> */}\n          {/* closed position */}\n\n          <Openposition\n            allOpenRecord={allOpenRecord}\n            toOpenOrderInfo={toOpenOrderInfo}\n            fromOpenOrderInfo={fromOpenOrderInfo}\n          />\n          <Closeposition\n            allHistoryRecord={allHistoryRecord}\n            fromHistoryOrderInfo={fromHistoryOrderInfo}\n            commissionHistoryOrderInfo={commissionHistoryOrderInfo}\n            toHistoryOrderInfo={toHistoryOrderInfo}\n          />\n          {/* <Row>\n\n            <Col md={12} sm={6}>\n              <div className={sumOfHistoryTotal + sumOfOpenTotal >= 0 ? \"summary-box\" : \"summary-box-red\"}>\n\n\n                {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\n          {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\n                <span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\n\n          {/* <Col md={12} sm={12}>\n                  <div className=\"summary-text text-center\" style={{ fontWeight: 600, color: \"#797979\" }}>Unrealized & Realized P/L ({activeProfileName}) {allHistoryRecord.history_info !== 0 && (<span> + Commission</span>)} </div>\n                </Col>\n                <Col md={12} sm={12}>\n                  <div className=\"text-center\" style={{ fontWeight: 'bold', fontSize: \"18px\" }}>$ {' '}\n                    <NumberFormat value={allHistoryRecord.history_info !== undefined ? sumOfHistoryTotal + sumOfOpenTotal + allHistoryRecord.history_info : sumOfHistoryTotal + sumOfOpenTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} /> */}\n\n\n          {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\n\n          {/* </div>\n                </Col>\n\n                <div className=\"clearfix\"></div>\n              </div>\n            </Col>\n          </Row> */}\n          {/* </div> */}\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default TableList;\n\n","import React, { Component } from \"react\";\n// import ChartistGraph from \"react-chartist\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport TableList from '../views/TableList';\n// import { Card } from \"components/Card/Card.jsx\";\n// import { StatsCard } from \"components/StatsCard/StatsCard.jsx\";\n// import { Tasks } from \"components/Tasks/Tasks.jsx\";\nimport NumberFormat from 'react-number-format';\nimport ReactLoading from \"react-loading\";\nimport Loader from 'react-loader-spinner'\n\nimport Data from './Data';\nimport Moment from 'react-moment';\nimport config from '../constant/config.js';\n// import {DatatablePage} from './DatatablePage';\n\nimport {api} from '../api'\nimport myInitObject from '../api'\nconst axios = require('axios');\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      details: [],\n      accountlist: [],\n      filterlist: [],\n      errorMassege: false,\n      error: '',\n      dateTime: '',\n      fromAccounts: '',\n      fromSymbol: '',\n      toAccounts: '',\n      toSymbol: '',\n      fromOpenOrderInfos: '',\n      toOpenOrderInfos: '',\n      total: '',\n      totalTo: '',\n      blockloader: true,\n      activeProfileName: '',\n      autoClose: ' ',\n      //\n\n\n      allHistoryRecord: [],\n      allOpenRecord: [],\n      fromHistoryOrderInfo: [],\n      toHistoryOrderInfo: [],\n      commissionHistoryOrderInfo: [],\n      fromOpenOrderInfo: [],\n      toOpenOrderInfo: [],\n      loading: true,\n      //\n\n\n    }\n  }\n  componentWillMount() {\n    // this.fetchCloseAndOpenPositionTotal();\n    // this.getAllAccounts();\n    // this.fetchActivefilterData();\n    // this.fetchAllOpenTrade();\n    // this.fetchStatusData();\n    // fetchLastUpdatedTime()\n    setInterval(() => {\n    if((myInitObject.responsHT &&\n      myInitObject.responsOT &&\n      myInitObject.responsAC &&\n      myInitObject.responsAF &&\n      myInitObject.responsLUT &&\n      myInitObject.responsSD) === undefined){\n      console.log('no data');\n    }else{\n      this.setState({\n        //history trade\n        allHistoryRecord: myInitObject.fetchAllHistoryTrade.rows,\n        fromHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.fromHistoryOrderInfo,\n        toHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.toHistoryOrderInfo,\n        //open trade\n        allOpenRecord: myInitObject.fetchAllOpenTrade.rows,\n        fromOpenOrderInfo: myInitObject.fetchAllOpenTrade.fromOpenOrderInfo,\n        toOpenOrderInfo: myInitObject.fetchAllOpenTrade.toOpenOrderInfo,\n        //all Accounts\n        accountlist: myInitObject.fetchAllAccounts.rows,\n        //active filter data\n        filterlist: myInitObject.fetchActivefilterdata.rows,\n       \n        activeProfileName: myInitObject.fetchActivefilterdata.rows[0].profile_name,\n        autoClose: myInitObject.fetchActivefilterdata.rows[0].auto_close !== 0 ? 'ON' : 'OFF',     \n        //last updated time\n        dateTime: myInitObject.fetchLastUpdatedTime.filteredInfoTime,\n        // status data\n        loading: false,\n        fromAccounts: myInitObject.fetchStatusData.fromAccounts,\n        fromSymbol: myInitObject.fetchStatusData.fromSymbol,\n        toAccounts: myInitObject.fetchStatusData.toAccounts,\n        toSymbol: myInitObject.fetchStatusData.toSymbol,\n        fromOpenOrderInfos: myInitObject.fetchStatusData.fromOpenOrderInfos[0],\n        blockloader: myInitObject.fetchStatusData.fromOpenOrderInfos.length > 0 ? false : true,\n        total: myInitObject.fetchStatusData.fromOpenOrderInfos.length > 0 && myInitObject.fetchStatusData.fromOpenOrderInfos[0].order_type == 0 \n        ? myInitObject.fetchStatusData.fromSymbol?.contract_size * (myInitObject.fetchStatusData.fromOpenOrderInfos[0]?.lots)\n         : myInitObject.fetchStatusData.fromSymbol?.contract_size * -(myInitObject.fetchStatusData.fromOpenOrderInfos[0]?.lots),\n        toOpenOrderInfos: myInitObject.fetchStatusData.toOpenOrderInfos[0],\n        totalTo: myInitObject.fetchStatusData.toOpenOrderInfos.length > 0 && myInitObject.fetchStatusData.toOpenOrderInfos[0].order_type == 0 \n        ? myInitObject.fetchStatusData.toSymbol?.contract_size * (myInitObject.fetchStatusData.toOpenOrderInfos[0]?.lots) \n         : myInitObject.fetchStatusData.toSymbol?.contract_size * -(myInitObject.fetchStatusData.toOpenOrderInfos[0]?.lots),\n      \n        },() =>{\n          this.setState({ errorMassege:this.state.filterlist.length == 0 ?  true : false,})\n        })\n    }\n   },1000)\n\n  }\n\n  // fetchApiData = () => {\n\n  //   if(myInitObject.respons === true){\n  //     console.log(myInitObject)\n  //   }\n  // }\n  \n  // fetchCloseAndOpenPositionTotal = () => {\n  //   let self = this;\n  //   axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\n  //     .then(function (response) {\n  //       console.log(response.data, 'response.data his')\n  //       if (response.status == 200) {\n  //         self.setState({\n  //           allHistoryRecord: response.data.rows,\n  //           fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,\n  //           toHistoryOrderInfo: response.data.toHistoryOrderInfo,\n  //           commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\n  //         })\n  //       }\n  //     })\n\n  //   axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\n  //     .then(function (response) {\n  //       if (response.status == 200) {\n  //         self.setState({\n  //           allOpenRecord: response.data.rows,\n  //           fromOpenOrderInfo: response.data.fromOpenOrderInfo,\n  //           toOpenOrderInfo: response.data.toOpenOrderInfo\n  //         })\n  //       }\n  //     })\n  // }\n  createLegend(json) {\n    var legend = [];\n    for (var i = 0; i < json[\"names\"].length; i++) {\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\n      legend.push(<i className={type} key={i} />);\n      legend.push(\" \");\n      legend.push(json[\"names\"][i]);\n    }\n    return legend;\n  }\n\n  // getAllAccounts = () => {\n  //   let self = this;\n  //   axios.get(config.baseurl + '/accounts/fetchAllAccounts')\n  //     .then(function (response) {\n\n  //       if (response.status == 200) {\n  //         self.setState({ accountlist: response.data.rows })\n  //       }\n  //     });\n  // }\n\n  // fetchActivefilterData = () => {\n  //   let self = this;\n  //   axios.get(config.baseurl + '/filter/fetchActivefilterdata')\n  //     .then(function (response) {\n  //       if (response.status == 200) {\n\n  //         self.setState({\n  //           filterlist: response.data.rows,\n\n  //         })\n  //         if (self.state.filterlist.length == 0) {\n\n  //           self.setState({ errorMassege: true })\n  //         }\n  //         else {\n  //           self.setState({\n\n  //             activeProfileName: response.data.rows[0].profile_name,\n  //             autoClose: response.data.rows[0].auto_close !== 0 ? 'ON' : 'OFF'\n  //           })\n  //         }\n  //       }\n  //     });\n  // }\n\n  // fetchAllOpenTrade = () => {\n  //   let self = this;\n  //   axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\n  //     .then(function (response) {\n  //       if (response.status == 200) {\n  //         self.setState({ dateTime: response.data.filteredInfoTime })\n  //       }\n  //     });\n  // }\n\n  // fetchStatusData = () => {\n  //   let self = this;\n  //   let tottal = 0;\n  //   axios.get(config.baseurl + '/accounts/fetchStatusData')\n  //     .then(function (response) {\n  //       console.log(response, \"active dat\")\n\n  //       if (response.status == 200) {\n  //         self.setState({ loading: false })\n\n  //         self.setState({ fromAccounts: response.data.fromAccounts })\n  //         self.setState({ fromSymbol: response.data.fromSymbol })\n  //         self.setState({ toAccounts: response.data.toAccounts })\n  //         self.setState({ toSymbol: response.data.toSymbol })\n  //         self.setState({ fromOpenOrderInfos: response.data.fromOpenOrderInfos[0] })\n  //         if (response.data.fromOpenOrderInfos.length > 0) {\n  //           self.setState({ blockloader: false })\n  //           if (response.data.fromOpenOrderInfos[0].order_type == 0) {\n  //             self.setState({ total: response.data.fromSymbol.contract_size * (response.data.fromOpenOrderInfos[0].lots) })\n  //           } else {\n  //             self.setState({ total: response.data.fromSymbol.contract_size * -(response.data.fromOpenOrderInfos[0].lots) })\n  //           }\n  //           console.log(response.data.fromSymbol.contract_size * -(response.data.fromOpenOrderInfos[0].lots), \"total\");\n  //           self.setState({ toOpenOrderInfos: response.data.toOpenOrderInfos[0] })\n  //         }\n  //         if (response.data.toOpenOrderInfos.length > 0) {\n  //           if (response.data.toOpenOrderInfos[0].order_type == 0) {\n  //             self.setState({ totalTo: response.data.toSymbol.contract_size * (response.data.toOpenOrderInfos[0].lots) })\n  //           } else {\n  //             self.setState({ totalTo: response.data.toSymbol.contract_size * -(response.data.toOpenOrderInfos[0].lots) })\n  //           }\n  //         }\n  //       }\n  //     });\n  // }\n\n\n\n\n  showData = (accountDetailValue) => {\n\n    return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\n      if (accountDetailValue === 'margin_level') {\n        return (\n          <>\n            <td className=\"tdClr2 tdClr boldText\" key={index}>\n              <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\n            </td>\n            <td className=\"tdClr2 boldText\" key={index}>\n              <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\n            </td>\n          </>\n        )\n      }\n      if (item.accountFromInfo.length > 0) {\n        return (\n          <>\n            <td className=\"tdClr2 tdClr boldText\" key={index}>\n              {item.accountFromInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''}  {' '}\n              <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n            </td>\n\n            <td className=\"tdClr2 boldText\" key={index}>\n              {item.accountToInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''} {' '}\n              <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n            </td>\n          </>\n        )\n\n      }\n\n    })\n  }\n\n  tableHeader = () => {\n\n    return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\n      return (\n        <>\n          <th key={index} className=\"bText colorDarkBlue text-center tdClr2 tdClr\">\n            <div className=\"colorDarkBlue\" >\n              {(item.accountFromInfo[0].alias != null) ? item.accountFromInfo[0].alias : '-'}\n            </div>\n            <span style={{ fontSize: 10 }}>\n              {item.accountFromInfo[0].login}\n            </span>\n\n          </th>\n          <th key={index} className=\"bText color2 text-center tdClr2\">\n            <div className=\"color2\" >\n              {(item.accountToInfo[0].alias != null) ? item.accountToInfo[0].alias : '-'}\n            </div>\n            <span style={{ fontSize: 10 }}>\n              {item.accountToInfo[0].login}\n            </span>\n\n          </th>\n        </>\n\n      )\n\n    })\n  }\n\n\n\n\n\n  render() {\n    // console.log(this.props, '================>');\n    const { allHistoryRecord, fromHistoryOrderInfo, toHistoryOrderInfo, commissionHistoryOrderInfo,\n      allOpenRecord, fromOpenOrderInfo, toOpenOrderInfo, } = this.state;\n\n\n    let fromsum = 0;\n    let tosum = 0;\n    let fromsum1 = 0;\n    let tosum1 = 0;\n\n\n    if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\n      fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\n    }\n    if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\n      tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\n    }\n\n    let sumOfTotal = tosum + fromsum;\n    if (fromOpenOrderInfo && fromOpenOrderInfo.length > 0) {\n\n      fromsum1 = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\n\n    }\n    if (toOpenOrderInfo && toOpenOrderInfo.length > 0) {\n\n      tosum1 = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n\n    }\n\n    let sumOfTotal1 = tosum1 + fromsum1;\n    const dateToFormat = new Date();\n    let FinalTotal = 0\n\n    return (\n\n      <div className=\"\">\n        {this.state.errorMassege === true &&\n          <div className=\"popup\">\n\n            <div className=\"card w-75 \">\n              <div className=\"card-body topmargin\">\n                <div className=\" card-text popuptext\" role=\"alert\">Please Select Filters To Continue...</div>\n              </div>\n            </div>\n          </div>}\n        <div className=\"content\">\n          {this.state.errorMassege !== true &&\n\n            <Grid fluid>\n\n              <Row>\n                <div className=\"lastUpdate\">\n                  <span> Last Updated :  </span>\n                  {this.state.dateTime}(UTC)  </div>\n                <Col md={12} sm={6}>\n                  <div className=\"terminal-box  terminal-head-box\">\n\n                    <span className=\"terminal-text\">Profile</span>\n                  </div>\n                  <Row >\n                    <Col lg={4} sm={4}>\n                      <div className=\"card-margin card card-stats\">\n                        <div className=\"content\">\n                          <Row className=\"row\">\n                            <Col xs={5}>\n                              <div style={{ fontSize: '3em' }} className=\"icon-big text-center icon-warning\">\n                                <i className=\"pe-7s-display1 text-warning\"></i>\n                              </div>\n                            </Col>\n                            <div className=\"col-xs-7\">\n                              <div className=\"numbers\"><p style={{\n                                textAlign: 'center',\n                                fontSize: '17px',\n                                marginTop: '15px'\n                              }}>Active Profile </p></div>\n                            </div>\n                          </Row>\n                          <div className=\"footer\"><hr /><p style={{ textAlign: 'center', fontSize: '17px' }}>{this.state.activeProfileName}</p></div></div></div>\n                    </Col>\n\n                    <div className=\" col-lg-offset-4 col-sm-offset-4 col-lg-4 col-sm-4\">\n                      <div className=\"card-margin card card-stats\">\n                        <div className=\"content\">\n                          <div className=\"row\">\n                            <div className=\"col-xs-5\">\n                              <div style={{ fontSize: '3em' }} className=\"icon-big text-center icon-warning\">\n                                <i style={{ color: this.state.autoClose == 'OFF' ? '#312f2f' : 'green' }} className=\"pe-7s-switch text-warning-switch\"></i>\n                              </div></div>\n                            <div className=\"col-xs-7\">\n                              <div className=\"numbers\"><p style={{\n                                textAlign: 'center',\n                                fontSize: '17px',\n                                marginTop: '15px'\n                              }}>Auto-Close </p></div>\n                            </div></div><div className=\"footer\"><hr /><p style={{ textAlign: 'center', fontSize: '17px' }}>{this.state.autoClose}</p></div></div></div></div>\n\n                  </Row>\n                  <div className=\"terminal-box terminal-head-box\">\n                    {/* {(this.state.errorMassege) && <p style={{ color: 'red', fontSize: '10px' }}>Please Select Any Account</p>} */}\n                    <span className=\"terminal-text\">Profit/Loss</span>\n                  </div>\n                  <Row >\n                    <div className=\"col-lg-12 col-sm-12\">\n                      <div className=\"card-margin card card-stats\">\n                        <div className=\"content\">\n                          <div className=\"row\">\n                            <div className=\"col-xs-6\">\n                              <div className=\"numbers\"><p style={{\n                                textAlign: 'center',\n                                fontSize: '20px',\n                        \n                                color: sumOfTotal > 0 ? 'green' : 'red'\n                              }}>Realized : $ {sumOfTotal} </p></div>\n                            </div>\n                            <div className=\"col-xs-6\">\n                              <div className=\"numbers\"><p style={{\n                                textAlign: 'center',\n                                fontSize: '20px',\n                            \n                                color: sumOfTotal1 > 0 ? 'green' : 'red'\n\n                              }}>Unrealized : $ {sumOfTotal1} </p></div>\n                            </div>\n                          </div><div className=\"footer\"><hr /><p style={{ color: (sumOfTotal1 + sumOfTotal) > 0 ? 'green' : 'red', textAlign: 'center', fontSize: '20px' }}>Total : $ {(sumOfTotal1 + sumOfTotal).toFixed(2)}</p></div></div></div></div>\n                  </Row>\n                  <div className=\"terminal-box  terminal-head-box\">\n                    {/* {(this.state.errorMassege) && <p style={{ color: 'red', fontSize: '10px' }}>Please Select Any Account</p>} */}\n                    <span className=\"terminal-text\">Exposure</span>\n                  </div>\n                  {this.state.loading ? <Loader\n                    type=\"ThreeDots\"\n                    color=\"black\"\n                    height={100}\n                    width={100}\n                    style={{ textAlign: 'center' }}\n\n\n                  />\n                    :\n                    <Row>\n                      {this.state.fromOpenOrderInfos && this.state.total ?\n                        // this.state.fromOpenOrderInfos.order_type !== null &&\n                        <div className=\"col-sm-6\">\n                         \n                          <div className=\"c-callout c-callout-info\">\n                            <small className=\"text-muted text-muted-dashboard\">{this.state.fromOpenOrderInfos.order_type == 0 ? 'long ' : 'short '} </small>\n                            <br />\n                            <strong className=\"h4 buy-sell-h4\"><NumberFormat value={this.state.total} displayType={'text'} thousandSeparator={true} decimalScale={2} />   {this.state.fromSymbol.margin_currency}\n                              <br />  {this.state.fromOpenOrderInfos.lots} {(this.state.fromOpenOrderInfos.lots > 1) ? 'Lots' : 'Lot'}</strong>\n                          </div>\n                        </div> : ''}\n                      {this.state.toOpenOrderInfos && this.state.totalTo ?\n                        // this.state.toOpenOrderInfos.order_type !== null &&\n                        <div className=\"col-sm-6\">\n                          <div className=\"c-callout callout-danger\">\n                            <small className=\"text-muted text-muted-dashboard\">{this.state.toOpenOrderInfos.order_type == 0 ? 'long ' : 'short '} </small>\n                            <br />\n                            <strong className=\"h4 buy-sell-h4\"><NumberFormat value={this.state.totalTo} displayType={'text'} thousandSeparator={true} decimalScale={2} />   {this.state.toSymbol.margin_currency}\n                              <br /> {this.state.toOpenOrderInfos.lots}  {(this.state.toOpenOrderInfos.lots > 1) ? 'Lots' : 'Lot'} </strong>\n                          </div> \n                          </div>: '' }\n                          {!this.state.totalTo && !this.state.total ?\n                          <div className=\"col-sm-12 text-center\">\n                            <div className=\"c-callout c-callout-info\">\n                          <small className=\"text-muted text-muted-dashboard\">No Exposure</small>\n                          </div>\n                          </div> : ''}\n                    </Row>\n                  }\n                </Col>\n              </Row>\n              <Row style={{ margin: '20px 0px' }}></Row>\n            </Grid>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\nimport TagsInput from 'react-tagsinput'\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\n\nimport DatePicker from \"react-datepicker\";\nimport config from '../../constant/config.js';\n\nimport Select from 'react-select'\nimport { createLogicalAnd } from 'typescript';\nconst axios = require('axios');\n\nclass FilterEdite extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedAccountOption: null,\n            selectedSymbolOption: null,\n            selectedSymbolOptionTo: null,\n            selectedAccountOptionTo: null,\n            selectedCommissionAccount: null,\n            startDate: null,\n            endDate: null,\n            startDateTo: null,\n            endDateTo: null,\n            allAccounts: [],\n            allSymbols: [],\n            profileName: '',\n            showCommission: false,\n            // showAddCommission: false,\n            id: '',\n            error: '',\n            autoSyncClose: false,\n            magicNumber: [],\n            magicNumberTo: [],\n            tags: [],\n            include_exclude_status: '',\n            showMagicNumber: false,\n            showMagicNumberTo: false,\n            exclude: false,\n            include: false,\n            excludeTo: false,\n            includeTo: false,\n            ticket:[],\n            ticketTo:[],\n            // showTicket: false,\n            // showTicketTo: false,\n            excludeTicket: false,\n            includeTicket: false,\n            excludeTicketTo: false,\n            includeTicketTo: false,\n\n        };\n\n\n    }\n    componentWillMount() {\n\n        let self = this;\n        axios.get(config.baseurl + '/accounts/fetchAllAccounts')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ allAccounts: response.data.rows })\n                }\n            })\n        axios.get(config.baseurl + '/accounts/fetchAllSymbol')\n            .then(function (response) {\n                if (response.status == 200) {\n                    // console.log( response,\"response ---------------fetchAllSymbol>\")\n                    self.setState({ allSymbols: response.data.rows })\n                }\n            })\n    }\n    componentDidMount() {\n\n        let abc = this.props.data;\n        console.log(abc, '------------------>>>');\n        if (abc) {\n            let from_symbol = JSON.parse(abc.from_symbols);\n            let to_symbol = JSON.parse(abc.to_symbols);\n\n            let all_from_symbols = from_symbol.map(data => { return ({ value: data, label: data }) });\n            let all_to_symbols = to_symbol.map(data => { return ({ value: data, label: data }) });\n\n            from_symbol = from_symbol.join(', ');\n            to_symbol = to_symbol.join(', ');\n\n            this.setState({\n                id: abc.id,\n                profileName: abc.profile_name,\n                selectedAccountOption: ({ value: abc.accountFromInfo[0].id, label: abc.accountFromInfo[0].login }),\n                selectedAccountOptionTo: ({ value: abc.accountToInfo[0].id, label: abc.accountToInfo[0].login }),\n                showCommission: abc.commission_acount_id !== 0 ? true : false,\n                selectedCommissionAccount: abc.commission_acount_id !== 0 ? ({ value: abc.accountCommissionInfo[0].id, label: abc.accountCommissionInfo[0].login }) : null,\n                showMagicNumber: abc.from_include_exclude_status !== 0 ? true : false,\n                showMagicNumberTo: abc.to_include_exclude_status !== 0 ? true : false,\n                magicNumber: abc.from_magic_number != \"0\" && abc.from_magic_number != \"\" ? JSON.parse(abc.from_magic_number) : [],\n                magicNumberTo: abc.to_magic_number != \"0\" && abc.to_magic_number != \"\" ? JSON.parse(abc.to_magic_number) : [],\n                include: abc.from_include_exclude_status === 1 ? true : false,\n                exclude: abc.from_include_exclude_status === 2 ? true : false,\n                includeTo: abc.to_include_exclude_status === 1 ? true : false,\n                excludeTo: abc.to_include_exclude_status === 2 ? true : false,\n                // showTicket: abc.from_include_exclude_status_ticket !== 0 ? true : false,\n                // showTicketTo: abc.to_include_exclude_status_ticket !== 0 ? true : false,\n                ticket: abc.from_ticket != \"0\" && abc.from_ticket != \"\" ? JSON.parse(abc.from_ticket) : [],\n                ticketTo: abc.to_ticket != \"0\" && abc.to_ticket != \"\" ? JSON.parse(abc.to_ticket) : [],\n                includeTicket: abc.from_include_exclude_status_ticket === 1 ? true : false,\n                excludeTicket: abc.from_include_exclude_status_ticket === 2 ? true : false,\n                includeTicketTo: abc.to_include_exclude_status_ticket === 1 ? true : false,\n                excludeTicketTo: abc.to_include_exclude_status_ticket === 2 ? true : false,\n                selectedSymbolOption: all_from_symbols,\n                autoSyncClose: abc.auto_close == 1 ? true : false,\n                selectedSymbolOptionTo: all_to_symbols,\n                startDate: new Date(abc.startdateFrom),\n                startDateTo: new Date(abc.startdateTo),\n                endDate: (abc.enddateFrom != null) ? new Date(abc.enddateFrom) : '',\n                endDateTo: (abc.enddateTo != null) ? new Date(abc.enddateTo) : '',\n            })\n\n\n        }\n\n\n\n    }\n\n    handleDropdownChange = (e) => {\n        this.setState({ selectValue: e.target.value });\n    }\n    handleChangeDate = date => {\n        this.setState({\n            startDate: date\n        });\n    }\n    handleEndDate = date => {\n\n        if (date < this.state.startDate && date != null) {\n            this.setState({ error: 'enddate', endDate: \"\" })\n            return\n        }\n        this.setState({\n            error: '',\n            endDate: date,\n        });\n    }\n    handleChangeDateTo = date => {\n        this.setState({\n            startDateTo: date\n        });\n    }\n    handleEndDateTo = date => {\n        if (date < this.state.startDateTo && date != null) {\n            this.setState({ error: 'enddateto', endDateTo: \"\" })\n            return\n        }\n        this.setState({\n            error: '',\n            endDateTo: date,\n        });\n    }\n    handleChange = (event) => {\n        this.setState({ value: Array.from(event.target.selectedOptions, (item) => item.value) });\n    }\n\n    handeChangeShowCommission = () => {\n        this.setState({ showCommission: !this.state.showCommission })\n    }\n    handleChangeCommissionAccount = selectedCommissionAccount => {\n        this.setState({ selectedCommissionAccount });\n    };\n\n    renderCommissionAccount = () => {\n        const { selectedCommissionAccount, allAccounts } = this.state;\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account\"\n                value={selectedCommissionAccount}\n                onChange={this.handleChangeCommissionAccount}\n                options={options}\n            />\n        )\n    }\n\n\n\n    renderAccountSelect = () => {\n        const { selectedAccountOption, allAccounts } = this.state;\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account\"\n                value={selectedAccountOption}\n                onChange={this.handleChangeAccount} l\n                options={options}\n                rules={{ required: 'Please select an option' }}\n            />\n        )\n    }\n\n    handleChangeAccountTo = selectedAccountOptionTo => {\n        this.setState({ selectedAccountOptionTo, error: '' });\n    };\n    renderAccountSelectTo = () => {\n        const { selectedAccountOptionTo, allAccounts } = this.state;\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account\"\n                value={selectedAccountOptionTo}\n                onChange={this.handleChangeAccountTo}\n                options={options}\n            />\n        )\n    }\n\n    handleChangeAccount = selectedAccountOption => {\n        this.setState({ selectedAccountOption });\n    };\n    handleChangeSymbol = selectedSymbolOption => {\n        this.setState({ selectedSymbolOption });\n    };\n    renderSymbolSelect = () => {\n        const { selectedSymbolOption, allSymbols } = this.state;\n        let options = allSymbols.map(data => {\n            return { value: data.name, label: data.name };\n        })\n        return (\n            <Select\n                placeholder=\"Select Symbol\"\n                value={selectedSymbolOption}\n                isMulti\n                onChange={this.handleChangeSymbol}\n                options={options}\n            />\n        )\n    }\n    handleChangeSymbolTo = selectedSymbolOptionTo => {\n        this.setState({ selectedSymbolOptionTo });\n    };\n    renderSymbolSelectTo = () => {\n        const { selectedSymbolOptionTo, allSymbols } = this.state;\n        let options = allSymbols.map(data => {\n            return { value: data.name, label: data.name };\n        })\n        return (\n            <Select\n                placeholder=\"Select Symbol\"\n                value={selectedSymbolOptionTo}\n                isMulti\n                onChange={this.handleChangeSymbolTo}\n                options={options}\n            />\n        )\n    }\n\n    handleChangeMagicNumber = (magicNumber) => {\n\n\n        // if(re.test(tags))\n        this.setState({ magicNumber })\n    }\n    handleChangeMagicNumberTo = (magicNumberTo) => {\n\n\n        // if(re.test(tags))\n        this.setState({ magicNumberTo })\n    }\n\n    handleChangeTicket = (ticket) => {\n\n\n        this.setState({ ticket })\n\n    }\n    handleChangeTicketTo = (ticketTo) => {\n\n        this.setState({ ticketTo })\n    }\n    changeIncludeDefaultProperty = () => {\n\n        this.setState({ include: !this.state.include, exclude: false })\n            \n        // if (!this.state.include == true) {\n        //     this.setState({ showMagicNumber: true })\n        // } else if (this.state.include == true) {\n        //     this.setState({ showMagicNumber: false })\n\n        // }\n\n\n    }\n    changeExcludeDefaultProperty = () => {\n        this.setState({ exclude: !this.state.exclude, include: false })\n        // if (!this.state.exclude == true) {\n        //     this.setState({ showMagicNumber: true })\n        // } else if (this.state.exclude == true) {\n        //     this.setState({ showMagicNumber: false })\n\n        // }\n\n    }\n\n    changeIncludeDefaultPropertyTo = () => {\n        this.setState({ includeTo: !this.state.includeTo, excludeTo: false })\n        // if (!this.state.includeTo == true) {\n        //     this.setState({ showMagicNumberTo: true })\n        // } else if (this.state.includeTo == true) {\n        //     this.setState({ showMagicNumberTo: false })\n\n        // }\n    }\n    changeExcludeDefaultPropertyTo = () => {\n        this.setState({ excludeTo: !this.state.excludeTo, includeTo: false })\n        // if (!this.state.excludeTo == true) {\n        //     this.setState({ showMagicNumberTo: true })\n        // } else if (this.state.excludeTo == true) {\n        //     this.setState({ showMagicNumberTo: false })\n\n        // }\n\n    }\n\n    changeIncludeDefaultPropertyTicket = () => {\n\n        this.setState({ includeTicket: !this.state.includeTicketTo, excludeTicket: false }\n        )\n        // if (!this.state.includeTicket == true) {\n        //     this.setState({ showTicket: true })\n        // } else if (this.state.includeTicket == true) {\n        //     this.setState({ showTicket: false })\n\n        // }\n\n\n    }\n    changeExcludeDefaultPropertyTicket = () => {\n        this.setState({ excludeTicket: !this.state.excludeTicket, includeTicket: false })\n        // if (!this.state.excludeTicket == true) {\n        //     this.setState({ showTicket: true })\n        // } else if (this.state.excludeTicket == true) {\n        //     this.setState({ showTicket: false })\n\n        // }\n\n    }\n\n    changeIncludeDefaultPropertyTicketTo = () => {\n        this.setState({ includeTicketTo: !this.state.includeTicketTo, excludeTicketTo: false })\n        // if (!this.state.includeTicketTo == true) {\n        //     this.setState({ showTicketTo: true })\n        // } else if (this.state.includeTicketTo == true) {\n        //     this.setState({ showTicketTo: false })\n\n        // }\n    }\n    changeExcludeDefaultPropertyTicketTo = () => {\n        this.setState({ excludeTicketTo: !this.state.excludeTicketTo, includeTicketTo: false })\n        // if (!this.state.excludeTicketTo == true) {\n        //     this.setState({ showTicketTo: true })\n        // } else if (this.state.excludeTicketTo == true) {\n        //     this.setState({ showTicketTo: false })\n\n        // }\n\n    }\n\n    handleprofileName(e) {\n\n        this.setState({ profileName: e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1), error: '' })\n\n    }\n    handleChangeAutoSync(e) {\n        this.setState({ autoSyncClose: !this.state.autoSyncClose }, () => {\n        })\n    }\n    formDataSubmit(e) {\n        e.preventDefault();\n\n        let from_status = this.state.include === true && this.state.exclude === false ? 1 : this.state.exclude === true && this.state.include === false ? 2 : 0\n\n        let to_status = this.state.includeTo === true && this.state.excludeTo === false ? 1 : this.state.excludeTo === true && this.state.includeTo === false ? 2 : 0\n\n        let from_status_ticket = this.state.includeTicket === true && this.state.excludeTicket === false ? 1 : this.state.excludeTicket === true && this.state.includeTicket === false ? 2 : 0\n\n        let to_status_ticket = this.state.includeTicketTo === true && this.state.excludeTicketTo === false ? 1 : this.state.excludeTicketTo === true && this.state.includeTicketTo === false ? 2 : 0\n        \n        let self = this\n\n       \n        if (this.state.profileName == null || this.state.profileName == '') {\n            NotificationManager.listNotify = [];\n            NotificationManager.error ('Please select profile name !')\n            return\n        }\n        else if (this.state.selectedAccountOption == null || this.state.selectedAccountOption == '') {\n            this.setState({ error: 'accountoption' })\n            return\n        }\n        else if (this.state.showCommission == true  &&  (this.state.selectedCommissionAccount == null || this.state.selectedCommissionAccount == '')) {\n            this.setState({ error: 'selectedCommissionAccount' })\n            return\n        }\n        else if (this.state.startDate == null || this.state.startDate == '') {\n            this.setState({ error: 'startdate' })\n            return\n        } else if (this.state.selectedSymbolOption == null || this.state.selectedSymbolOption == '') {\n            this.setState({ error: 'symbolselect' })\n            return\n        }\n        else if (this.state.selectedAccountOptionTo == null || this.state.selectedAccountOptionTo == '') {\n            this.setState({ error: 'accountoptionto' })\n            return\n        } else if (this.state.startDateTo == null || this.state.startDateTo == '') {\n            this.setState({ error: 'startDateTo' })\n            return\n        }\n        else if (this.state.selectedSymbolOptionTo == null || this.state.selectedSymbolOptionTo == '') {\n            this.setState({ error: 'selectedSymbolOptionTo' })\n            return\n        }\n        else {\n            this.setState({ error: '' })\n        }\n        let fromSymbol = this.state.selectedSymbolOption;\n        let toSymbol = this.state.selectedSymbolOptionTo;\n\n        let symbolFrom = fromSymbol.map((data) => data.value)\n        let symbolto = toSymbol.map((data) => data.value)\n\n        let Data = {\n            id: this.state.id,\n            profile_name: this.state.profileName,\n            from_account_id: this.state.selectedAccountOption.value,\n            to_account_id: this.state.selectedAccountOptionTo.value,\n            commission_acount_id: this.state.showCommission == true ? this.state.selectedCommissionAccount.value : 0,\n            startdateFrom: this.state.startDate,\n            // enddateFrom: this.state.endDate,\n            enddateFrom: (this.state.endDate) ? this.state.endDate : null,\n            startdateTo: this.state.startDateTo,\n            enddateTo: (this.state.endDateTo) ? this.state.endDateTo : null,\n            from_symbols: JSON.stringify(symbolFrom),\n            to_symbols: JSON.stringify(symbolto),\n            auto_close: this.state.autoSyncClose ? 1 : 0,\n            from_magic_number: (from_status != 0) ? this.state.magicNumber.length > 0 ? JSON.stringify(this.state.magicNumber) : JSON.stringify([]) : \"\",\n            to_magic_number: (to_status != 0) ? this.state.magicNumberTo.length > 0 ? JSON.stringify(this.state.magicNumberTo) : JSON.stringify([]) : \"\",\n\n            from_include_exclude_status: from_status,\n            to_include_exclude_status: to_status,\n            from_ticket:(from_status_ticket != 0) ? this.state.ticket.length > 0 ? JSON.stringify(this.state.ticket) : JSON.stringify([]) : \"\",\n          to_ticket: (to_status_ticket != 0) ? this.state.ticketTo.length > 0 ? JSON.stringify(this.state.ticketTo) : JSON.stringify([]) : \"\",\n          from_include_exclude_status_ticket: from_status_ticket,\n                to_include_exclude_status_ticket: to_status_ticket, \n            createdAt: new Date(),\n            updatedAt: new Date()\n        }\n        \n        axios.post(config.baseurl + '/filter/updatefilterdatafull', Data)\n        .then(function (response) {\n            \n            if (response.status == 200) {\n                    self.props.onHide()\n\n                }\n            })\n            .catch(function (error) {\n            });\n\n    }\n    crossClick(e) {\n        e.preventDefault();\n        this.props.onHide()\n    }\n\n    render() {\n        return (\n            <div className=\"content\">\n                <Grid fluid>\n                    <div className=\"symbol-box\">\n                        <div className=\"cross_div\"><a onClick={(e) => this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\n                        <div className=\"terminal-text\" >\n                            <p className=\"profilename pnameadjust\"> Profile Name</p>\n                            <input type=\"text\" name=\"profilename\" value={this.state.profileName} className=\"Itext\" onChange={(e) => this.handleprofileName(e)} />\n                            {(this.state.error == 'profileName') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Fill Your Profile Name </p>}\n\n                        </div>\n                        <div className=\"synclose\">\n                            <label class=\"checkbox-inline\"><input type=\"checkbox\" checked={this.state.autoSyncClose} name=\"changeAutoSync\" onChange={(e) => this.handleChangeAutoSync(e)} /><b>Auto Sync Close</b></label>\n                        </div>\n                        <form>\n                            <Row>\n                                {/* <Col md={12}>\n                                    <div className=\"card\">\n                                        <div style={{ padding: '10px 20px 35px ', }}>\n                                            <div>\n                                                <h3 className=\" text-center\">Filter By Magic Numbers</h3>\n\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6 text-center\">\n\n                                                    <button type=\"button\" class=\"text-center filter-add-button\">Include</button>\n                                                </div>\n\n                                                <div className=\"col-md-6 text-center btnspace\">\n                                                    <button type=\"button\" class=\"filter-add-button\">Exclude</button>\n                                                </div>\n                                                <div className=\"row\">\n                                                    <div className=\"col\">\n                                                        <div class=\"text-center  \">\n                                                            <input class=\"form-control input-css\" placeholder=\"Select Numbers\" type=\"number\"></input>\n                                                        </div>\n                                                    </div>\n                                                </div>from_include_exclude_status\n\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                </Col> */}\n                                <Col md={6}>\n                                    <div className=\"card bottom\">\n                                        <div style={{ padding: '10px 20px 0px' }}>\n                                            <span style={{ fontWeight: 'bold' }}>Account A</span>\n                                        </div>\n                                        <table className=\"table mt20\">\n                                            <tbody>\n                                                <tr>\n                                                    <td className=\"b-clr\">\n                                                        <span className=\"accnt\">Account :</span>\n                                                    </td>\n\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        {this.renderAccountSelect()}\n                                                        {(this.state.error == 'accountoption') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">From:  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            selected={this.state.startDate}\n                                                            onChange={this.handleChangeDate}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDate}\n                                                            endDate={this.state.endDate}\n                                                            strictParsing\n                                                        />\n                                                        {(this.state.error == 'startdate') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">To :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n\n                                                            selected={this.state.endDate}\n                                                            onChange={this.handleEndDate}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDate}\n                                                            endDate={this.state.endDate}\n                                                        />\n                                                        {(this.state.error == 'enddate') && <p style={{ color: 'red', fontSize: '13px' }}>*\n                                                        Please ensure that the End Date is greater than  the Start Date.</p>}\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">Symbol :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '50%' }}>\n                                                        {this.renderSymbolSelect()}\n                                                        {(this.state.error == 'symbolselect') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                            <span className=\"accnt\">Magic Number </span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        <TagsInput\n                                                        onValidationReject={() => console.log('rejected')}\n                                                        validationRegex={/^[0-9]*$/}\n                                                        inputProps={{ placeholder: this.state.magicNumber.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumber\n                                                        } onChange={this.handleChangeMagicNumber}></TagsInput>\n                                                            </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td className=\"b-clr dataAdjust\">\n                                                            <div onClick={this.changeIncludeDefaultProperty}>\n                                                                <input\n                                                                    type=\"radio\" id=\"include\" name=\"include\" checked={this.state.include} />\n                                                                <span className=\"accnt \">Include</span>\n\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"b-clr text-center\">\n                                                            <div onClick={this.changeExcludeDefaultProperty} >\n                                                                <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.exclude} />\n                                                                <span className=\"accnt \">Exclude</span>\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                    <td className=\"b-clr \">\n                                                            <span className=\"accnt\">Ticket </span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        <TagsInput\n                                                        onValidationReject={() => console.log('rejected')}\n                                                        validationRegex={/^[0-9]*$/}\n                                                        inputProps={{ placeholder: this.state.ticket.length > 0 ? \"\" : \" Enter Ticket\" }} type=\"number\" value={this.state.ticket\n                                                        } onChange={this.handleChangeTicket}></TagsInput>\n                                                            </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td className=\"b-clr dataAdjust\">\n                                                            <div onClick={this.changeIncludeDefaultPropertyTicket}>\n                                                                <input\n                                                                    type=\"radio\" id=\"includeTicket\" name=\"includeTicket\" checked={this.state.includeTicket} />\n                                                                <span className=\"accnt \">Include</span>\n\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"b-clr text-center\">\n                                                            <div onClick={this.changeExcludeDefaultPropertyTicket} >\n                                                                <input type=\"radio\" id=\"excludeTicket\" name=\"excludeTicket\" checked={this.state.excludeTicket} />\n                                                                <span className=\"accnt \">Exclude</span>\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n\n                                            </tbody>\n                                        </table>\n                                        {/* <div className=\"text-center\">\n                                            <span c> Magic Number :  </span>\n                                        </div>\n\n                                        <table className=\"table \">\n                                            <tbody>\n                                                <tr>\n                                                    <td className=\"b-clr dataAdjust\">\n                                                        <div onClick={this.changeIncludeDefaultProperty}>\n                                                            <input\n                                                                type=\"radio\" id=\"include\" name=\"include\" checked={this.state.include} />\n                                                            <span class=\"accnt \">Include</span>\n\n                                                        </div>\n                                                    </td>\n                                                    <td className=\"b-clr \">\n                                                        <div onClick={this.changeExcludeDefaultProperty} >\n                                                            <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.exclude} />\n                                                            <span class=\"accnt \">Exclude</span>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n\n\n                                        {this.state.showMagicNumber &&\n                                            <div className=\"b-clr magicnumber\" style={{}}>\n                                                <TagsInput\n                                                    onValidationReject={() => console.log('rejected')}\n                                                    validationRegex={/^[0-9]*$/}\n                                                    inputProps={{ placeholder: this.state.magicNumber.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumber\n                                                    } onChange={this.handleChangeMagicNumber}></TagsInput>\n                                            </div>}\n\n                                            <div className=\"text-center\">\n                                                <span > Ticket   </span>\n                                            </div>\n\n                                            <table className=\"table \">\n                                                <tbody>\n                                                    <tr>\n                                                        <td className=\"b-clr dataAdjust\">\n                                                            <div onClick={this.changeIncludeDefaultPropertyTicket}>\n                                                                <input\n                                                                    type=\"radio\" id=\"includeTicket\" name=\"includeTicket\" checked={this.state.includeTicket} />\n                                                                <span className=\"accnt \">Include</span>\n\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"b-clr text-center\">\n                                                            <div onClick={this.changeExcludeDefaultPropertyTicket} >\n                                                                <input type=\"radio\" id=\"excludeTicket\" name=\"excludeTicket\" checked={this.state.excludeTicket} />\n                                                                <span className=\"accnt \">Exclude</span>\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n\n\n                                            {this.state.showTicket === true ?\n                                                <div className=\"b-clr magicnumber\" style={{}}>\n                                                    <TagsInput\n                                                        onValidationReject={() => console.log('rejected')}\n                                                        validationRegex={/^[0-9]*$/}\n                                                        inputProps={{ placeholder: this.state.ticket.length > 0 ? \"\" : \" Enter Ticket\" }} type=\"number\" value={this.state.ticket\n                                                        } onChange={this.handleChangeTicket}></TagsInput>\n                                                </div> : null} */}\n                                    </div>\n                                </Col>\n                                <Col md={6}>\n                                    <div className=\"card bottom\">\n                                        <div style={{ padding: '10px 20px 0px' }}>\n                                            <span style={{ fontWeight: 'bold' }}>Account B</span>\n                                        </div>\n\n                                        <table className=\"table mt20\">\n                                            <tbody>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">Account :</span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '50%' }}>\n                                                        {this.renderAccountSelectTo()}\n                                                        {(this.state.error == 'accountoptionto') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\n\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">From:  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            selected={this.state.startDateTo}\n                                                            onChange={this.handleChangeDateTo}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDateTo}\n                                                            endDate={this.state.endDateTo}\n                                                        />\n\n                                                        {(this.state.error == 'startDateTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">To :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            selected={this.state.endDateTo}\n                                                            onChange={this.handleEndDateTo}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDateTo}\n                                                            endDate={this.state.endDateTo}\n\n                                                        />\n\n                                                        {(this.state.error == 'enddateto') && <p style={{ color: 'red', fontSize: '13px' }}>*\n                                                        Please ensure that the End Date is greater than  the Start Date.</p>}\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr\">\n                                                        <span className=\"accnt\">Symbol :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        {this.renderSymbolSelectTo()}\n                                                        {(this.state.error == 'selectedSymbolOptionTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\n\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                            <span className=\"accnt\">Magic Number </span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        <TagsInput\n                                                            onValidationReject={() => console.log('rejected')}\n                                                            validationRegex={/^[0-9]*$/}\n                                                            inputProps={{ placeholder: this.state.magicNumberTo.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumberTo\n                                                            } onChange={this.handleChangeMagicNumberTo}></TagsInput>\n                                                            </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td className=\"b-clr checkboxAdjust\">\n                                                            <div onClick={this.changeIncludeDefaultPropertyTo} >\n                                                                <input\n                                                                    type=\"radio\" id=\"includeTo\" name=\"includeTo\" checked={this.state.includeTo} />\n                                                                <span className=\"accnt \">Include</span>\n\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"b-clr checkboxAdjust text-center\">\n                                                            <div onClick={this.changeExcludeDefaultPropertyTo} >\n                                                                <input type=\"radio\" id=\"excludeTo\" name=\"excludeTo\" checked={this.state.excludeTo} />\n                                                                <span className=\"accnt \">Exclude</span>\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                    <td className=\"b-clr \">\n                                                            <span className=\"accnt\">Ticket </span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        <TagsInput\n                                                            onValidationReject={() => console.log('rejected')}\n                                                            validationRegex={/^[0-9]*$/}\n                                                            inputProps={{ placeholder: this.state.ticketTo.length > 0 ? \"\" : \" Enter Ticket\" }} type=\"number\" value={this.state.ticketTo\n                                                            } onChange={this.handleChangeTicketTo}></TagsInput>\n                                                            </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td className=\"b-clr checkboxAdjust\">\n                                                            <div onClick={this.changeIncludeDefaultPropertyTicketTo} >\n                                                                <input\n                                                                    type=\"radio\" id=\"includeTicketTo\" name=\"includeTicketTo\" checked={this.state.includeTicketTo} />\n                                                                <span className=\"accnt \">Include</span>\n\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"b-clr checkboxAdjust text-center\">\n                                                            <div onClick={this.changeExcludeDefaultPropertyTicketTo} >\n                                                                <input type=\"radio\" id=\"excludeTicketTo\" name=\"excludeTicketTo\" checked={this.state.excludeTicketTo} />\n                                                                <span className=\"accnt \">Exclude</span>\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n                                            </tbody>\n                                        </table>\n\n\n                                        {/* <div className=\"text-center\">\n                                            <span > Magic Number :  </span>\n                                        </div>\n                                        <table className=\"table mt20\">\n                                            <tbody>\n\n                                                <tr>\n                                                    <td className=\"b-clr checkboxAdjust\">\n                                                        <div onClick={this.changeIncludeDefaultPropertyTo} >\n                                                            <input\n                                                                type=\"radio\" id=\"includeTo\" name=\"includeTo\" checked={this.state.includeTo} />\n                                                            <span class=\"accnt \">Include</span>\n\n                                                        </div>\n                                                    </td>\n                                                    <td className=\"b-clr checkboxAdjust\">\n                                                        <div onClick={this.changeExcludeDefaultPropertyTo} >\n                                                            <input type=\"radio\" id=\"excludeTo\" name=\"excludeTo\" checked={this.state.excludeTo} />\n                                                            <span class=\"accnt \">Exclude</span>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                        <div>\n\n                                            {this.state.showMagicNumberTo === true ?\n                                                <div className=\"b-clr magicnumber\" style={{}}>\n                                                    <TagsInput\n                                                        onValidationReject={() => console.log('rejected')}\n                                                        validationRegex={/^[0-9]*$/}\n                                                        inputProps={{ placeholder: this.state.magicNumber.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumberTo\n                                                        } onChange={this.handleChangeMagicNumberTo}></TagsInput>\n                                                </div> : null}\n                                        </div>\n\n                                        <div className=\"text-center\">\n                                                <span > Ticket  </span>\n                                            </div>\n                                            <table className=\"table mt20\">\n                                                <tbody>\n\n                                                    <tr>\n                                                        <td className=\"b-clr checkboxAdjust\">\n                                                            <div onClick={this.changeIncludeDefaultPropertyTicketTo} >\n                                                                <input\n                                                                    type=\"radio\" id=\"includeTicketTo\" name=\"includeTicketTo\" checked={this.state.includeTicketTo} />\n                                                                <span className=\"accnt \">Include</span>\n\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"b-clr checkboxAdjust text-center\">\n                                                            <div onClick={this.changeExcludeDefaultPropertyTicketTo} >\n                                                                <input type=\"radio\" id=\"excludeTicketTo\" name=\"excludeTicketTo\" checked={this.state.excludeTicketTo} />\n                                                                <span className=\"accnt \">Exclude</span>\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n                                            <div>\n\n                                                {this.state.showTicketTo === true ?\n                                                    <div className=\"b-clr magicnumber\" style={{}}>\n                                                        <TagsInput\n                                                            onValidationReject={() => console.log('rejected')}\n                                                            validationRegex={/^[0-9]*$/}\n                                                            inputProps={{ placeholder: this.state.ticketTo.length > 0 ? \"\" : \" Enter Ticket\" }} type=\"number\" value={this.state.ticketTo\n                                                            } onChange={this.handleChangeTicketTo}></TagsInput>\n                                                    </div> : null}\n                                            </div> */}\n                                    </div>\n                                </Col>\n                            </Row>\n                            <hr></hr>\n                            <div className=\"chceckbox\">\n\n                                <label class=\"checkbox-inline\"><input type=\"checkbox\" checked={this.state.showCommission} onChange={this.handeChangeShowCommission} /><b>Add Commission</b></label>\n                            </div>\n\n\n\n                            {this.state.showCommission &&\n                                <div className=\"center-com d-flex\">\n                                    <div className=\"com\">\n                                        <h3 style={{ fontWeight: 'bold' }}>Commission</h3>\n\n                                    </div>\n                                    <table className=\"table mt20\">\n\n                                        <tbody>\n                                            <tr>\n\n                                                <td className=\"b-clr \">\n                                                    <span className=\"accnt\"> Account :</span>\n                                                </td>\n                                                <td className=\"b-clr text-center\" style={{ width: '50%' }}>\n                                                    {this.renderCommissionAccount()}\n                                                    {(this.state.error == 'selectedCommissionAccount') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account </p>}\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n\n                            }\n                            <div className=\"save_button_filter\">\n                                <Button className=\"btn-primary savebutton\" variant=\"primary\" size=\"lg\" block onClick={(e) => this.formDataSubmit(e)}>\n                                    <b>Update</b>\n                                </Button>\n                            </div>\n                        </form>\n                    </div>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default FilterEdite;\n","import React, { Component } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\nvar moment = require('moment');\n\nclass FilterDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            autoSyncClose: false,\n            exclude: false,\n            include: false,\n            excludeTo: false,\n            includeTo: false,\n            excludeTicket: false,\n            includeTicket: false,\n            excludeTicketTo: false,\n            includeTicketTo: false,\n            showMagicNumberFrom: false,\n            showMagicNumberTo: false,\n            showTicketFrom: false,\n            showTicketTo: false,\n        };\n    }\n    crossClick(e) {\n        e.preventDefault();\n        this.props.onHide()\n    }\n\n    componentDidMount() {\n        let data = this.props.data;\n        this.setState({\n            autoSyncClose: data.auto_close == 1 ? true : false,\n            include: data.from_include_exclude_status == 1 ? true : false,\n            exclude: data.from_include_exclude_status == 2 ? true : false,\n            includeTo: data.to_include_exclude_status == 1 ? true : false,\n            excludeTo: data.to_include_exclude_status == 2 ? true : false,\n            includeTicket: data.from_include_exclude_status_ticket == 1 ? true : false,\n            excludeTicket: data.from_include_exclude_status_ticket == 2 ? true : false,\n            includeTicketTo: data.to_include_exclude_status_ticket == 1 ? true : false,\n            excludeTicketTo: data.to_include_exclude_status_ticket == 2 ? true : false,\n            showMagicNumberFrom: data.from_include_exclude_status !== 0 ? true : false,\n            showMagicNumberTo:data.to_include_exclude_status !== 0? true: false,\n            showTicketFrom: data.from_include_exclude_status_ticket !== 0 ? true : false,\n            showTicketTo:data.to_include_exclude_status_ticket !== 0? true: false,\n        })\n\n    }\n\n    // componentWillMount = () => {\n    //     console.log(this.props,'props..................');\n    // }\n\n    render() {\n        let data = this.props.data;\n\n        let from_symbol = JSON.parse(data.from_symbols);\n        let to_symbol = JSON.parse(data.to_symbols);\n        from_symbol = from_symbol.join(', ');\n        to_symbol = to_symbol.join(', ');\n        return (\n            <div className=\"content\">\n                <Grid fluid>\n                    <div className=\"symbol-box\">\n                        <div className=\"cross_div\"><a onClick={(e) => this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\n                        <div className=\"detail-text\"><h3> {data.profile_name} </h3></div>\n                        <div className=\"synclose\">\n                            <label class=\"checkbox-inline\"><input type=\"checkbox\" checked={this.state.autoSyncClose} name=\"changeAutoSync\" /><b>Auto Sync Close</b></label>\n                        </div>\n                        <Row>\n                            <Col md={6}>\n                                <div className=\"card\">\n                                    <div className=\"detail_account\" style={{ padding: '10px 20px 0px' }}>\n                                        <span style={{ fontWeight: 'bold' }}>Account A</span>\n                                    </div>\n                                    <table className=\"table mt20\">\n                                        <tbody>\n                                            <tr>\n                                                <td className=\"b-clr\">\n                                                    <span>Account :</span>\n                                                </td>\n\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {data.accountFromInfo[0].login}\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>From :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center datepicker_filter\">\n                                                    {moment(data.startdateFrom).format(\"DD/MM/YYYY\")}\n\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>To :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center datepicker_filter\">\n                                                    {data.enddateFrom !== null ? moment(data.enddateFrom).format(\"DD/MM/YYYY\") : \"-\"}\n\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>Symbol :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {from_symbol}\n                                                </td>\n                                            </tr>\n                                            {this.state.showMagicNumberFrom &&\n                                            <>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>Magic Number :  </span>\n                                                </td>\n\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {data.from_magic_number}\n                                                </td>\n\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr dataAdjust\">\n                                                    <div onClick={this.changeIncludeDefaultProperty}>\n                                                        <input\n                                                            type=\"radio\" id=\"include\" name=\"include\" checked={this.state.include} />\n                                                        <span class=\"accnt \">Include</span>\n\n                                                    </div>\n                                                </td>\n                                                <td className=\"b-clr \">\n                                                    <div onClick={this.changeExcludeDefaultProperty} >\n                                                        <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.exclude} />\n                                                        <span class=\"accnt \">Exclude</span>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                            </>}\n                                            {this.state.showTicketFrom &&\n                                            <>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>Ticket :  </span>\n                                                </td>\n\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {data.from_ticket}\n                                                </td>\n\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr dataAdjust\">\n                                                    <div onClick={this.changeIncludeDefaultPropertyTicket}>\n                                                        <input\n                                                            type=\"radio\" id=\"includeTicket\" name=\"includeTicket\" checked={this.state.includeTicket} />\n                                                        <span class=\"accnt \">Include</span>\n\n                                                    </div>\n                                                </td>\n                                                <td className=\"b-clr \">\n                                                    <div onClick={this.changeExcludeDefaultPropertyTicket} >\n                                                        <input type=\"radio\" id=\"excludeTicket\" name=\"excludeTicket\" checked={this.state.excludeTicket} />\n                                                        <span class=\"accnt \">Exclude</span>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                            </>}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </Col>\n                            <Col md={6}>\n                                <div className=\"card\">\n                                    <div className=\"detail_account\" style={{ padding: '10px 20px 0px' }}>\n                                        <span style={{ fontWeight: 'bold' }}>Account B</span>\n                                    </div>\n\n                                    <table className=\"table mt20\">\n                                        <tbody>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>Account :</span>\n                                                </td>\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {data.accountToInfo[0].login}\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>From :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center datepicker_filter\">\n                                                    {moment(data.startdateTo).format(\"DD/MM/YYYY\")}\n\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>To :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center datepicker_filter\">\n                                                    {data.enddateTo != null ? (moment(data.enddateTo).format(\"DD/MM/YYYY\")) : '-'}\n\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr\">\n                                                    <span>Symbol :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {to_symbol}\n                                                </td>\n                                            </tr>\n                                            {this.state.showMagicNumberTo &&\n                                                <>\n\n                                                    <tr>\n                                                        <td className=\"b-clr\">\n                                                            <span>Magic Number :  </span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                            {data.to_magic_number}\n\n                                                        </td>\n                                                    </tr>\n\n\n                                                    <tr>\n                                                        <td className=\"b-clr checkboxAdjust\">\n                                                            <div onClick={this.changeIncludeDefaultPropertyTo} >\n                                                                <input\n                                                                    type=\"radio\" id=\"includeTo\" name=\"includeTO\" checked={this.state.includeTo} />\n                                                                <span class=\"accnt \">Include</span>\n\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"b-clr checkboxAdjust\">\n                                                            <div onClick={this.changeExcludeDefaultPropertyTo} >\n                                                                <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.excludeTo} />\n                                                                <span class=\"accnt \">Exclude</span>\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n                                                </>}\n                                                {this.state.showTicketTo &&\n                                            <>\n                                                <tr>\n                                                        <td className=\"b-clr\">\n                                                            <span>Ticket :  </span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                            {data.to_ticket}\n\n                                                        </td>\n                                                    </tr>\n\n\n                                                    <tr>\n                                                        <td className=\"b-clr checkboxAdjust\">\n                                                            <div onClick={this.changeIncludeDefaultPropertyTicketTo} >\n                                                                <input\n                                                                    type=\"radio\" id=\"includeTicketTo\" name=\"includeTicketTo\" checked={this.state.includeTicketTo} />\n                                                                <span class=\"accnt \">Include</span>\n\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"b-clr checkboxAdjust\">\n                                                            <div onClick={this.changeExcludeDefaultPropertyTicketTo} >\n                                                                <input type=\"radio\" id=\"excludeTicketTo\" name=\"excludeTicketTo\" checked={this.state.excludeTicketTo} />\n                                                                <span class=\"accnt \">Exclude</span>\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n                                                    </>}\n\n                                        </tbody>\n                                    </table>\n                                </div>\n\n                            </Col>\n                            {data.commission_acount_id !== 0 && <Col md={12}>\n                                <div className=\"card bottom\">\n                                    <div className=\"detail_account\" style={{ padding: '10px 20px 0px' }}>\n                                        <h3 style={{ fontWeight: 'bold' }}>Commission</h3>\n                                    </div>\n                                    <table className=\"table mt20\">\n                                        <tbody>\n                                            <tr>\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    <span>Account :</span>\n                                                </td>\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {data.accountCommissionInfo[0].login}\n\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n\n                            </Col>}\n                        </Row>\n\n                    </div>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default FilterDetail;\n\n","import React, { Component } from \"react\";\nimport \"react-calendar/dist/Calendar.css\";\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\nimport Innerfilter from \"../filter/innerfilter\";\nimport FilterEdite from \"../filter/filteredit\";\nimport FilterDetail from \"../filter/filterdetail\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport config from \"../../constant/config.js\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\nimport { api } from \"api\";\nimport ReactPaginate from \"react-paginate\";\n\nconst axios = require(\"axios\");\nvar moment = require(\"moment\");\n\nclass Filterprofile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Innerfilter: false,\n      filter: true,\n      filterData: [],\n      deleteData: [],\n      editeData: [],\n      showDelete: false,\n      showEdit: false,\n      detailForm: false,\n      detailData: [],\n      count: \"\",\n      pages: \"\",\n    };\n\n    // this.handleDropdownChange = this.handleDropdownChange.bind(this);\n  }\n  fetchfilterdata() {\n    let self = this;\n    axios\n      .get(config.baseurl + \"/filter/fetchfilterdata?page=1\")\n      .then(function (response) {\n        if (response.status == 200) {\n          self.setState({\n            filterData: response.data.rows,\n            count: response.data.count,\n            pages: response.data.pages,\n          });\n        }\n      });\n  }\n  handlePageClick = (data) => {\n    this.setState({ page: data.selected + 1 }, () => {\n      this.fectheAllAccount(this.state.page);\n    });\n  };\n  showInnerfilter = () => {\n    this.setState({ Innerfilter: true, filter: false });\n  };\n  componentDidMount() {\n    this.fetchfilterdata();\n    // let self = this;\n    // axios.get(config.baseurl + '/filter/fetchfilterdata')\n    //     .then(function (response) {\n    //         if (response.status == 200) {\n    //             self.setState({ filterData: response.data.rows })\n    //         }\n    //     }) adfasdfsd\n  }\n\n  createNotification = (profile_name, type) => {\n    NotificationManager.listNotify = [];\n    NotificationManager.info(\"Profile Is Activated !\", profile_name);\n  };\n\n  createWariningNotification = (profile_name, type) => {\n    NotificationManager.listNotify = [];\n    NotificationManager.error(\"Profile Is Deactivated !\", profile_name);\n  };\n\n  activateClick(e, data) {\n    e.preventDefault();\n    let Data = {\n      id: data.id,\n      status: 1,\n    };\n    let self = this;\n    axios\n      .post(config.baseurl + \"/filter/updatefilterdata\", Data)\n      .then(function (response) {\n        if (response.status == 200) {\n          self.fetchfilterdata();\n          self.createNotification(data.profile_name, \"info\");\n          // self.setState({ filterData: response.data.rows })\n          api();\n        }\n      });\n  }\n\n  //  App(){\n  //     const notify = () => toast(\"Wow so easy !\");\n\n  //     return (\n  //       <div>\n  //         <button onClick={notify}>Notify !</button>\n  //         <ToastContainer />\n  //       </div>\n  //     );\n  //   }\n\n  deactivateClick(e, data) {\n    e.preventDefault();\n    let Data = {\n      id: data.id,\n      status: 0,\n    };\n    let self = this;\n    axios\n      .post(config.baseurl + \"/filter/updatefilterdata\", Data)\n      .then(function (response) {\n        if (response.status == 200) {\n          self.fetchfilterdata();\n          self.createWariningNotification(data.profile_name, \"error\");\n          // self.setState({ filterData: response.data.rows })\n        }\n      });\n  }\n  editFilter = (e, data) => {\n    // e.preventDefault();\n    if (this.state.endDate == null || this.state.endDate == \"\") {\n      let newDate = new Date();\n      this.setState({ endDate: newDate });\n      return;\n    }\n    this.setState({ showEdit: true, editeData: data });\n  };\n\n  deleteFilter(e, data) {\n    e.preventDefault();\n    this.setState({ deleteData: data, showDelete: true });\n  }\n  deletepopupClick(e) {\n    e.preventDefault();\n    let Data = {\n      id: this.state.deleteData.id,\n    };\n    let self = this;\n    axios\n      .post(config.baseurl + \"/filter/deletefilter\", Data)\n      .then(function (response) {\n        if (response.status == 200) {\n          self.setState({ showDelete: false });\n          self.fetchfilterdata();\n        }\n      });\n  }\n  deletepopupclose(e) {\n    e.preventDefault();\n    this.setState({ showDelete: false });\n  }\n  viewFilter(e, data) {\n    e.preventDefault();\n\n    this.setState({ detailForm: true, detailData: data });\n  }\n\n  createTr = () => {\n    return (\n      this.state.filterData.length > 0 &&\n      this.state.filterData.map((item, index) => {\n        return (\n          <tr key={index}>\n            <th scope=\"row\">{index + 1}</th>\n            <td>{item.profile_name}</td>\n            <td>{moment(item.createdAt).format(\"DD/MM/YYYY\")}</td>\n            {/* <td>{item.status == 1 ? 'Activated' : 'Deactivated' }</td> */}\n            <td>\n              {item.status == 0 ? (\n                <div className=\"activate_button pointer\">\n                  <span\n                    className=\"button_interactivate btcolor\"\n                    onClick={(e) => this.activateClick(e, item)}\n                  >\n                    {\" \"}\n                    Activate{\" \"}\n                  </span>{\" \"}\n                </div>\n              ) : (\n                <div className=\"deactivate_button pointer\">\n                  <span\n                    className=\"button_deactivate pointer\"\n                    onClick={(e) => this.deactivateClick(e, item)}\n                  >\n                    Deactivate\n                  </span>\n                </div>\n              )}\n            </td>\n            <td>\n              <span onClick={(e) => this.viewFilter(e, item)}>\n                <i className=\"pointer fa fa-eye facolor\" aria-hidden=\"true\"></i>\n              </span>\n              <span onClick={(e) => this.editFilter(e, item)}>\n                <i\n                  className=\"pointer fa fa-pencil-square-o facolor\"\n                  aria-hidden=\"true\"\n                ></i>\n              </span>\n              {item.status == 0 && (\n                <span onClick={(e) => this.deleteFilter(e, item)}>\n                  <i\n                    className=\"pointer fa fa-trash facolor\"\n                    aria-hidden=\"true\"\n                  ></i>\n                </span>\n              )}\n            </td>\n            {/* <td>{item.accountToInfo[0].login}</td>\n                    <td>{moment(item.startdateFrom).format(\"DD/MM/YYYY\") + ' - ' + moment(item.enddateFrom).format(\"DD/MM/YYYY\")}</td>\n                    <td>{moment(item.startdateTo).format(\"DD/MM/YYYY\") + ' - ' + moment(item.enddateTo).format(\"DD/MM/YYYY\")}</td>\n                    <td>{item.from_symbols}</td>\n                    <td>{item.to_symbols}</td> */}\n            {/* <td style={{fontWeight:600}}>{item.status == 1 && 'Connected'}</td> */}\n          </tr>\n        );\n      })\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <NotificationContainer />\n        <div className=\"content\">\n          {this.state.detailForm ? (\n            <FilterDetail\n              data={this.state.detailData}\n              show={this.state.detailForm}\n              onHide={() => this.setState({ detailForm: false })}\n            />\n          ) : (\n            <>\n              {this.state.showEdit ? (\n                <FilterEdite\n                  data={this.state.editeData}\n                  show={this.state.showEdit}\n                  // onHide={() => this.setState({ showEdit: false })}\n                  onHide={() =>\n                    this.setState({ showEdit: false }, () =>\n                      this.fetchfilterdata()\n                    )\n                  }\n                />\n              ) : (\n                <>\n                  {!this.state.Innerfilter && (\n                    <Grid fluid>\n                      <div className=\"selection-box\">\n                        <span className=\"terminal-text\"> Profiles </span>\n\n                        {/* <span className=\"icon-style\">\n                            <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\n                        </span> */}\n                        {/* <Link to=\"/innerfilter\">\n                       <button className=\"pull-right\">Add New</button>\n                       </Link> */}\n\n                        {/* <Link to=\"/admin/innerfilter\">\n                       <button className=\"pull-right\">abc</button>\n                       </Link> */}\n                      </div>\n                      <button\n                        className=\"pull-right filter-add-button\"\n                        onClick={this.showInnerfilter}\n                      >\n                        Add New\n                      </button>\n                    </Grid>\n                  )}\n                  {\n                    this.state.Innerfilter ? (\n                      <Innerfilter\n                        show={this.state.Innerfilter}\n                        onHide={() =>\n                          this.setState({ Innerfilter: false }, () => {\n                            this.fetchfilterdata();\n                          })\n                        }\n                      />\n                    ) : (\n                      <div style={{ background: \"#ffffff\" }}>\n                        <Row>\n                          <Col md={12}>\n                            <div style={{ padding: \"10px\" }}>\n                              <table className=\"table table-striped table-bordered\">\n                                <thead>\n                                  <tr>\n                                    <th scope=\"col\">Sr.No.</th>\n                                    <th scope=\"col\">Profile Name</th>\n                                    <th scope=\"col\">Created At</th>\n                                    <th scope=\"col\">Status</th>\n                                    <th scope=\"col\">Action</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  {/* {this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => { */}\n\n                                  {this.createTr()}\n                                  {/* })} */}\n                                  {/* <tr>\n                                                <th scope=\"row\">2</th>\n                                                <td>Jacob</td>\n                                                <td>Thornton</td>\n                                                <td>5.1.2.9</td>\n                                                <td>Connected</td>\n                                            </tr>\n                                            <tr>\n                                                <th scope=\"row\">3</th>\n                                                <td>Larry</td>\n                                                <td>the Bird</td>\n                                                <td>ab@123</td>\n                                                <td>Connected</td>\n                                            </tr> */}\n                                </tbody>\n                              </table>\n                              <ReactPaginate\n                                previousLabel={\"prev\"}\n                                nextLabel={\"next\"}\n                                breakLabel={\"...\"}\n                                pageCount={this.state.pages}\n                                marginPagesDisplayed={9}\n                                pageRangeDisplayed={9}\n                                onPageChange={(e) => this.handlePageClick(e)}\n                                containerClassName={\"pagination\"}\n                                subContainerClassName={\"pages pagination\"}\n                                activeClassName={\"active\"}\n                              />\n                            </div>\n                          </Col>\n                        </Row>\n                      </div>\n                    )\n                    //     <div className=\"filter_page_table\">\n                    //     <table className=\"table table-striped\">\n                    //         <thead>\n                    //             <tr>\n                    //                 <th scope=\"col\">Sr.No.</th>\n                    //                 <th scope=\"col\">Profile Name</th>\n                    //                 <th scope=\"col\">Created At</th>\n                    //                 <th scope=\"col\">Status</th>\n                    //                 <th scope=\"col\">Action</th>\n                    //             </tr>\n                    //         </thead>\n                    //         <tbody>\n                    //             {this.createTr()}\n                    //         </tbody>\n                    //     </table>\n\n                    // </div>\n                  }\n\n                  {this.state.showDelete && (\n                    <div className=\"delete_popup\">\n                      <h3>Are you sure ?</h3>\n                      <span\n                        className=\"pointer dltbtn\"\n                        onClick={(e) => this.deletepopupClick(e)}\n                      >\n                        Delete\n                      </span>\n                      <span\n                        className=\"pointer closebtn\"\n                        onClick={(e) => this.deletepopupclose(e)}\n                      >\n                        Close\n                      </span>\n                    </div>\n                  )}\n                </>\n              )}\n            </>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Filterprofile;\n","import React from 'react';\nimport { MDBDataTable } from 'mdbreact';\nconst moment = require(\"moment\");\n\nconst DatatablePage = (props) => {\n    \n    const data = {\n        columns: [\n            {\n                label: 'Date',\n                field: 'date',\n                sort: 'asc',\n                width: 100\n            },\n            {\n                label: 'Login',\n                field: 'account_login',\n                sort: 'asc',\n                width: 100\n            },\n            {\n                label: 'Symbol',\n                field: 'symbol',\n                sort: 'asc',\n                width: 100\n            },\n            {\n                label: 'Long',\n                field: 'swap_long',\n                sort: 'asc',\n                width: 100\n            },\n            {\n                label: 'Short',\n                field: 'swap_short',\n                sort: 'asc',\n                width: 100\n            },\n            \n        ],\n        \n        rows: props.data.map(data => {\n            data.date = moment(data.date).format('L')\n            data.swap_long = Number.parseFloat(data.swap_long).toFixed(2);\n            data.swap_short = Number.parseFloat(data.swap_short).toFixed(2);\n            \n            return data\n        }\n            )\n    };\n    \n    return <MDBDataTable responsive bordered small data={data} />;\n}\nexport default DatatablePage;","import React, { useState, useEffect } from \"react\";\nimport { Container, Col, Row, Label } from \"reactstrap\";\nimport Loader from \"react-loader-spinner\";\nimport myInitObject from \"../../api\";\nimport DatatablePage from \"views/DatatablePage\";\nimport DatePicker from \"react-datepicker\";\nconst moment = require(\"moment\");\nconst Swap = () => {\n  const [dailySwap, setdailySwap] = useState([]);\n  const [loading, setloading] = useState([]);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n\n  useEffect(() => {\n    setInterval(() => {\n      if (myInitObject.responsDS === undefined) {\n        console.log(\"no data\");\n      } else {\n        setloading(myInitObject.fetchdailyswaps === 0 ? true : false);\n        setdailySwap(myInitObject.fetchdailyswaps.rows);\n      }\n    }, 1000);\n\n  }, []);\n\n  let sd = moment(startDate).format(\"DD-MM-yyyy\");\n  let ed = moment(endDate).format(\"DD-MM-yyyy\");\n  let result = dailySwap.filter((d) => {\n    var time = moment(d.date).format(\"DD-MM-yyyy\");\n    if ((sd === 'Invalid date' && ed === 'Invalid date')) {\n      return dailySwap\n    }\n    else if ((sd !== 'Invalid date' && ed === 'Invalid date')) {\n      return (time >= sd)\n    }\n    else if ((sd === 'Invalid date' && ed !== 'Invalid date')) {\n      return (time <= ed)\n    }\n    if (time >= sd && time <= ed) {\n      return d;\n    }\n    //  return (sd <= time && time <= ed);\n  });\n\n  console.log(sd, ed, result, \"/////////\");\n  return (\n    <Container fluid>\n      <div className=\"pad-y\">\n        <div className=\"symbol-box\" style={{ marginBottom: \"20px\" }}>\n          <div className=\"openpositions\">\n            <span className=\"p-text\">Daily Swaps</span>\n          </div>\n        </div>\n        {loading ? (\n          <Loader\n            type=\"ThreeDots\"\n            color=\"black\"\n            height={100}\n            width={100}\n            style={{ textAlign: \"center\" }}\n          />\n        ) : (\n            <div className=\"symbol-box\">\n              <Row>\n                <Col md={12} className=\"filter-date\">\n                  <Label>Start Date</Label>\n                  <DatePicker\n                    selected={startDate}\n                    onChange={(date) => setStartDate(date)}\n                    selectsStart\n                    placeholderText=\"mm-dd-yyyy\"\n                    dateFormat=\"MM-dd-yyyy\"\n                    startDate={startDate}\n                    endDate={endDate}\n                    />\n                    <Label>End Date</Label>\n                  <DatePicker\n                    selected={endDate}\n                    onChange={(date) => setEndDate(date)}\n                    selectsEnd\n                    placeholderText=\"mm-dd-yyyy\"\n                    dateFormat=\"MM-dd-yyyy\"\n                    startDate={startDate}\n                    endDate={endDate}\n                    minDate={startDate}\n                  />\n                </Col>\n              </Row>\n              <DatatablePage data={result} />\n              {/* <select onChange={(e) => setSortType(e.target.value)}>\n              <option value=\"default\">Select Order</option>\n              <option value=\"date\">Date</option>\n              <option value=\"account_login\">Login</option>\n              <option value=\"symbol\">Symbol</option>\n              <option value=\"swap_long\">Swap Long</option>\n              <option value=\"swap_short\">Swap Short</option>\n            </select>\n            <table className=\"table table-responsive table-bordered border-bottom-0 align-th\">\n              <thead>\n                <tr className=\"text-center thUnset\">\n                  <th>Date</th>\n                  <th>Login</th>\n                  <th>Symbol</th>\n                  <th>Long</th>\n                  <th>Short</th>\n                </tr>\n              </thead>\n              <tbody>\n                {dailySwap.length === 0 ? (\n                  <tr className=\"text-center\">\n                    <td colSpan=\"5\">No Data</td>\n                  </tr>\n                ) : (\n                  dailySwap.map((item) => (\n                    <tr key={item.id} className=\"text-center\">\n                      <td>\n                        {moment(item.date).utc().format(\"DD-MM-YYYY HH:mm:ss\")}\n                      </td>\n                      <td>{item.account_login}</td>\n                      <td>{item.symbol}</td>\n                      <td\n                        style={{\n                          color: `${item.swap_long > 0 ? \"green\" : \"red\"}`,\n                        }}\n                      >\n                        <NumberFormat\n                          value={item.swap_long}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                        />\n                      </td>\n                      <td\n                        style={{\n                          color: `${item.swap_short > 0 ? \"green\" : \"red\"}`,\n                        }}\n                      >\n                        <NumberFormat\n                          value={item.swap_short}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                        />\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table> */}\n            </div>\n          )}\n      </div>\n    </Container>\n  );\n};\n\nexport default Swap;\n","import React, { useState, useEffect } from 'react'\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\nimport NumberFormat from 'react-number-format';\nimport { Collapse } from 'reactstrap';\nimport TableList from '../TableList'\nimport config from '../../constant/config.js';\nimport DatatablePage from '../DatatablePage';\nimport Loader from 'react-loader-spinner'\nimport { api } from '../../api'\nimport myInitObject from '../../api'\nconst axios = require('axios');\nconst moment = require('moment');\nlet dataTOtalcloseFrom = {\n    comissionTotal: 0,\n    lotsTotal: 0,\n    profitTotal: 0,\n    swapTotal: 0\n};\nlet dataTotalClosetTo = {\n    comissionTotal: 0,\n    lotsTotal: 0,\n    profitTotal: 0,\n    swapTotal: 0\n};\nlet dataTOtalOpenTo = {\n    comissionTotal: 0,\n    lotsTotal: 0,\n    profitTotal: 0,\n    swapTotal: 0\n};\nlet dataTOtalOpenFrom = {\n    comissionTotal: 0,\n    lotsTotal: 0,\n    profitTotal: 0,\n    swapTotal: 0\n}\nexport default function Calculating(props) {\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => { setIsOpen(!isOpen); setIsOpen2(false); setIsOpen3(false) };\n    const [isOpen2, setIsOpen2] = useState(true);\n    const [errormassage, setIErrormassage] = useState(false);\n    const toggle2 = () => { setIsOpen2(!isOpen2); setIsOpen(false); setIsOpen3(false) };\n    const [isOpen3, setIsOpen3] = useState(false);\n    const toggle3 = () => { setIsOpen3(!isOpen3); setIsOpen(false); setIsOpen2(false) };\n\n    const [fromAccountId, setFromAccountId] = useState(\"\");\n    const [toAccountId, setToAccountId] = useState(\"\");\n    const [fromOpenTrade, setFromOpenTrade] = useState([]);\n    const [toOpenTrade, setToOpenTrade] = useState([]);\n    const [fromHistoryTrade, setFromHistoryTrade] = useState([]);\n    const [toHistoryTrade, setToHistoryTrade] = useState([]);\n    const [commissionDetails, setCommissionDetails] = useState([]);\n    const [openTotal, setopenTotal] = useState();\n    const [historyTotal, sethistoryTotal] = useState();\n    const [totalOpenAndHistory, settotalOpenAndHistory] = useState();\n    const [commissionValue, setCommissionValue] = useState({});\n    const [dateTime, setdateTime] = useState('')\n    const [customSwap, setcustomSwap] = useState([]);\n    const [loading, setLoading] = useState(true)\n    const [allHistoryRecord, setallHistoryRecord] = useState([])\n    const [activeProfileName, setactiveProfileName] = useState('')\n\n\n    useEffect(() => {\n         setInterval(() => {\n            if ((myInitObject.responsLUT &&\n                myInitObject.responsCOT &&\n                myInitObject.responsCHT &&\n                myInitObject.responsCC &&\n                myInitObject.responsHT &&\n                myInitObject.responsAF) === undefined) {\n                console.log('no data');\n            } else {\n                \n                //calculate open Trade\n                setIErrormassage(myInitObject.calculatingOpenTrade === 0 ? (!errormassage) : false);\n                setFromAccountId(myInitObject.calculatingOpenTrade.rows.accountFromInfo[0])\n                setToAccountId(myInitObject.calculatingOpenTrade.rows.accountToInfo[0])\n                setFromOpenTrade(myInitObject.calculatingOpenTrade.fromOpenOrderInfo)\n                setToOpenTrade(myInitObject.calculatingOpenTrade.toOpenOrderInfo)\n                setopenTotal(myInitObject.calculatingOpenTrade.totalOfOpenOrder)\n                //calculate history trade\n                setLoading(myInitObject.calculatingHistoryTrade ? false : true)\n                setFromHistoryTrade(myInitObject.calculatingHistoryTrade.fromHistoryOrderInfo)\n                setToHistoryTrade(myInitObject.calculatingHistoryTrade.toHistoryOrderInfo)\n                setcustomSwap(myInitObject.calculatingHistoryTrade.customSwapTable)\n                sethistoryTotal(myInitObject.calculatingHistoryTrade.totalOfHistoryOrder);\n                setCommissionDetails(myInitObject.calculatingHistoryTrade.newCommissionRecord)\n                //calculate commission\n                setCommissionValue(myInitObject.calculatingCommission)\n                //last update time\n                setdateTime(myInitObject.fetchLastUpdatedTime.filteredInfoTime)\n                //fetch all history trade\n                setallHistoryRecord(myInitObject.fetchAllHistoryTrade.rows)\n                //fetch status data\n                setactiveProfileName(myInitObject.fetchActivefilterdata.rows[0].profile_name)\n               \n            }\n        }, 1000)\n        // fetchLastUpdatedTime()\n        // let fromAccountId;\n        // let toAccountId;\n        // let fromOpenTrade;\n        // let toOpenTrade;\n        // let fromHistoryTrade;\n        // let toHistoryTrade;\n        // let openTotal;\n        // let historyTotal;\n        // let commissionDetails;\n        // let customSwap;\n        // axios.get(config.baseurl + '/profilepositions/calculatingOpenTrade')\n        //     .then(function (response) {\n        //         console.log(response, \"response -------------->\")\n        //         if (response.status == 200) {\n        //             if (response.data.rows == 0) {\n\n        //                 setIErrormassage((!errormassage));\n\n        //             }\n        //             fromAccountId = response.data.rows.accountFromInfo[0];\n        //             toAccountId = response.data.rows.accountToInfo[0];\n        //             fromOpenTrade = response.data.fromOpenOrderInfo;\n        //             // fromOpenTrade.map((data) => {\n\n        //             //     data.open_time = moment(data.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')\n        //             // })\n\n        //             toOpenTrade = response.data.toOpenOrderInfo;\n        //             // toOpenTrade.map((data) => {\n        //             //     data.open_time = moment(data.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')\n        //             // })\n        //             // openTotal = response.data.totalOfOpenOrder;\n\n\n\n        //             axios.get(config.baseurl + '/profilepositions/calculatingHistoryTrade')\n        //                 .then(function (response) {\n\n        //                     if (response.status == 200) {\n        //                         setLoading(false)\n        //                         fromHistoryTrade = response.data.fromHistoryOrderInfo;\n        //                         toHistoryTrade = response.data.toHistoryOrderInfo;\n        //                         customSwap = response.data.customSwapTable\n\n        //                         console.log(toHistoryTrade, \"toHistoryTrade =========>\")\n        //                         // fromHistoryTrade.map((data) => {\n\n        //                         //     data.open_time = moment(data.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')\n        //                         //     data.close_time = moment(data.close_time).utc().format('DD-MM-YYYY  HH:mm:ss')\n\n        //                         // })\n\n\n        //                         // toHistoryTrade.map((data) => {\n        //                         //     data.open_time = moment(data.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')\n        //                         //     data.close_time = moment(data.close_time).utc().format('DD-MM-YYYY  HH:mm:ss')\n\n        //                         // })\n        //                         historyTotal = response.data.totalOfHistoryOrder;\n        //                         commissionDetails = response.data.newCommissionRecord\n\n        //                         axios.get(config.baseurl + '/profilepositions/calculatingCommission')\n        //                             .then(function (response) {\n\n        //                                 if (response.status == 200) {\n        //                                     // console.log(\"jhkfkjjkldwkjdwjkdwkbdwjhkwirvbwjh\");\n        //                                     setFromAccountId(fromAccountId);\n        //                                     setToAccountId(toAccountId);\n        //                                     setFromOpenTrade(fromOpenTrade);\n        //                                     setToOpenTrade(toOpenTrade);\n        //                                     setFromHistoryTrade(fromHistoryTrade);\n        //                                     setToHistoryTrade(toHistoryTrade);\n        //                                     setCommissionDetails(commissionDetails);\n        //                                     setopenTotal(openTotal);\n        //                                     sethistoryTotal(historyTotal);\n        //                                     settotalOpenAndHistory(historyTotal + openTotal + response.data.commission);\n        //                                     setCommissionValue(response.data);\n        //                                     setcustomSwap(customSwap)\n\n        //                                 }\n\n        //                             })\n        //                             .catch(function (error) {\n        //                             });\n        //                     }\n        //                 })\n        //                 .catch(function (error) {\n        //                 });\n        //         }\n        //     })\n        //     .catch(function (error) {\n        //     });\n    }, []);\n    // const fetchLastUpdatedTime = () => {\n    //     let self = this;\n    //     axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\n    //         .then(function (response) {\n    //             if (response.status == 200) {\n    //                 setdateTime(response.data.filteredInfoTime)\n    //                 // console.log(self.state.dataOpenTrade.accountFromInfo,\"outyfjhkjh\");\n    //             }\n    //         });\n    // }\n    let total = { openTotal } + { historyTotal }\n\n\n    let openFromOrderTotal = 0;\n    const fromOpenTradeTr = () => {//1//\n        let lotsTotal = 0;\n        // let open_Total = 0;\n        let comissionTotal = 0;\n        let profitTotal = 0;\n        let swapTotal = 0;\n        let contractSizeTotal = 0;\n        let openpricetotal = 0;\n        // console.log(fromOpenTrade, '1==================<>');\n        return fromOpenTrade.length > 0 && fromOpenTrade.map((item, index) => {\n\n            // customSwap.map((data) => {\n\n            //     if (data.account_id == item.account_id) {\n            //         item.swap = item.swap + data.open_value\n            //     }\n            // })\n            lotsTotal += item.lots;\n            comissionTotal += item.commission;\n            profitTotal += item.profit;\n            openFromOrderTotal = comissionTotal + profitTotal + swapTotal\n            contractSizeTotal += item.contract_size\n            openpricetotal += item.open_price\n            swapTotal += item.swap;\n            // console.log(openOrderTotal,'openOrderTotal----------');\n            {/* open_time,type,symbol,lot,contract_size,open_price,commission,swap,profit */ }\n            if (index == fromOpenTrade.length - 1) {\n                let a = {\n                    lotsTotal: lotsTotal,\n                    comissionTotal: comissionTotal,\n                    profitTotal: profitTotal,\n                    swapTotal: swapTotal\n                }\n                dataTOtalOpenFrom = a\n                // console.log(dataTOtalOpenFrom, 'data==========>>>>');\n                return (\n                    <><tr key={index} className=\" text-center\" style={{ background: item.order_type == 0 ? \"rgb(189 179 179 / 43%)\" : item.order_type == 1 ? \"rgb(181 178 178 / 21%)\" : \" \" }}>\n                        <td className=\"text-center colorDarkBlue no-padding \">{fromAccountId.login}</td>\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\n                        <td>{item.symbol}</td>\n                        <td>{item.lots}</td>\n                        <td>{item.order_type == 0 ? item.lots*item.contract_size : item.order_type == 1 ? - item.lots*item.contract_size : item.lots*item.contract_size}</td>\n                        <td>{item.open_price}</td>\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\n                        {/* <td>{item.magic_number !== 0 ? item.magic_number : ''}</td> */}\n                        <td>{item.profit}\n                            {/* {item.margin_currency} */}\n                        </td>\n\n                    </tr>\n                        <tr className=\"text-center\" key={index + 1}>\n                            <td className=\"buycolor\"><b>Total Buy Positions</b></td>\n                            <td></td>\n\n                            <td></td>\n                            <td></td>\n                            <td><b>{lotsTotal.toFixed(2)}</b></td>\n                            <td></td>\n                            <td> </td>\n                            <td><b>{comissionTotal.toFixed(2)}</b></td>\n                            <td><b>{swapTotal.toFixed(2)}</b></td>\n\n                            <td><b>{profitTotal.toFixed(2)}</b></td>\n                        </tr>\n                    </>\n                )\n            } else {\n                return (\n                    <tr key={index} className=\"text-center\" style={{ background: item.order_type == 0 ? \"rgb(189 179 179 / 43%)\" : item.order_type == 1 ? \"rgb(181 178 178 / 21%)\" : \" \" }}>\n                        <td className=\"text-center colorDarkBlue no-padding \">{fromAccountId.login}</td>\n\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\n                        <td>{item.symbol}</td>\n                        <td>{item.lots}</td>\n                        <td>{item.order_type == 0 ? item.lots*item.contract_size : item.order_type == 1 ? - item.lots*item.contract_size : item.lots*item.contract_size}</td>\n                        <td>{item.open_price}</td>\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\n                        {/* <td>{item.magic_number !== 0 ? item.magic_number : ''}</td> */}\n                        <td>{item.profit}\n                            {/* {item.margin_currency} */}\n                        </td>\n\n\n                    </tr>\n                )\n            }\n        })\n    }\n\n\n    let openFromHistoryTotal\n    const fromHistoryTradeTr = () => {//2//\n        let lotsTotal = 0;\n        let comissionTotal = 0;\n        let profitTotal = 0;\n        let swapTotal = 0;\n        let contractSizeTotal = 0;\n        let openpricetotal = 0;\n        let closepricetotal = 0;\n        // console.log(fromHistoryTrade, '2==================<>');\n        return fromHistoryTrade.length > 0 && fromHistoryTrade.map((item, index) => {\n            // customSwap.map((data) => {\n\n            //     if (data.account_id == item.account_id) {\n            //         item.swap = item.swap + data.open_value\n            //     }\n            // })\n\n            lotsTotal += item.lots;\n            comissionTotal += item.commission;\n            profitTotal += item.profit;\n            swapTotal += item.swap;\n            openFromHistoryTotal = comissionTotal + profitTotal + swapTotal;\n            contractSizeTotal += item.contract_size\n            openpricetotal += item.open_price;\n            closepricetotal += item.close_price\n\n            if (index == fromHistoryTrade.length - 1) {\n                let a = {\n                    lotsTotal: lotsTotal,\n                    comissionTotal: comissionTotal,\n                    profitTotal: profitTotal,\n                    swapTotal: swapTotal\n                }\n                dataTOtalcloseFrom = a\n                // console.log(dataTOtalcloseFrom, 'data2==========>>>>');\n                return (\n                    <><tr key={index} className=\"text-center\" style={{ background: item.order_type == 0 ? \"rgb(189 179 179 / 43%)\" : item.order_type == 1 ? \"rgb(181 178 178 / 21%)\" : \" \" }}>\n\n                        <td className=\"text-center colorDarkBlue no-padding\">{fromAccountId.login}</td>\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\n                        <td>{item.symbol}</td>\n                        <td>{item.lots}</td>\n                        <td>{item.order_type == 0 ? item.lots*item.contract_size : item.order_type == 1 ? - item.lots*item.contract_size : item.lots*item.contract_size}</td>\n                        <td>{item.open_price}</td>\n                        <td>{moment(item.close_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\n                        <td>{item.close_price}</td>\n\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\n                        <td>{item.profit}\n                            {/* {item.margin_currency} */}\n                        </td>\n\n                    </tr>\n                        <tr className=\"text-center\" key={index + 1}>\n                            <td className=\"buycolor\"><b>Total Buy Positions</b></td>\n                            <td></td>\n\n                            <td></td>\n                            <td></td>\n                            <td ><b>{lotsTotal.toFixed(2)}</b></td>\n                            <td></td>\n\n                            <td></td>\n                            <td></td>\n                            <td></td>\n\n                            <td><b>{comissionTotal.toFixed(2)}</b></td>\n                            <td><b>{swapTotal.toFixed(2)}</b></td>\n                            {/* <td></td> */}\n\n                            <td><b>{profitTotal.toFixed(2)}</b></td>\n                        </tr>\n                    </>\n                )\n            } else {\n                return (\n                    <tr key={index} className=\"text-center\" style={{ background: item.order_type == 0 ? \"rgb(189 179 179 / 43%)\" : item.order_type == 1 ? \"rgb(181 178 178 / 21%)\" : \" \" }}>\n                        <td className=\"text-center colorDarkBlue no-padding\">{fromAccountId.login}</td>\n\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\n                        <td>{item.symbol}</td>\n                        <td>{item.lots}</td>\n                        <td>{item.order_type == 0 ? item.lots*item.contract_size : item.order_type == 1 ? - item.lots*item.contract_size : item.lots*item.contract_size}</td>\n                        <td>{item.open_price}</td>\n                        <td>{moment(item.close_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\n                        <td>{item.close_price}</td>\n\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\n\n                        <td>{item.profit}\n                            {/* {item.margin_currency} */}\n                        </td>\n\n                    </tr>\n                )\n            }\n        })\n    }\n\n    let openToOrderTotal\n    const toOpenTradeTr = () => {//3//\n        let lotsTotal = 0;\n        let comissionTotal = 0;\n        let profitTotal = 0;\n        let swapTotal = 0;\n        let contractSizeTotal = 0;\n        let openpricetotal = 0;\n        // console.log(toOpenTrade, '3==================<>');\n        return toOpenTrade.length > 0 && toOpenTrade.map((item, index) => {\n\n            lotsTotal += item.lots;\n            comissionTotal += item.commission;\n            profitTotal += item.profit;\n            swapTotal += item.swap;\n            openToOrderTotal = comissionTotal + profitTotal + swapTotal\n            contractSizeTotal += item.contract_size\n            openpricetotal += item.open_price\n            if (index == toOpenTrade.length - 1) {\n                let a = {\n                    lotsTotal: lotsTotal,\n                    comissionTotal: comissionTotal,\n                    profitTotal: profitTotal,\n                    swapTotal: swapTotal\n                }\n                dataTOtalOpenTo = a\n                // console.log(dataTOtalOpenTo, 'data3==========>>>>');\n                return (\n                    <><tr key={index} className=\"text-center\" style={{ background: item.order_type == 0 ? \"rgb(189 179 179 / 43%)\" : item.order_type == 1 ? \"rgb(181 178 178 / 21%)\" : \" \" }}>\n                        <td className=\"text-center color2 no-padding\">{toAccountId.login}</td>\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\n                        <td>{item.symbol}</td>\n                        <td>{item.lots}</td>\n                        <td>{item.order_type == 0 ? item.lots*item.contract_size : item.order_type == 1 ? - item.lots*item.contract_size : item.lots*item.contract_size}</td>\n                        <td>{item.open_price}</td>\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\n                        {/* <td>{item.magic_number !== 0 ? item.magic_number : ''}</td> */}\n                        <td>{item.profit}\n                            {/* {item.margin_currency} */}\n                        </td>\n\n\n\n                    </tr>\n                        <tr className=\"text-center\" key={index + 1}>\n                            <td className=\"sellcolor\"><b>Total Sell Positions</b></td>\n                            <td></td>\n\n                            <td></td>\n                            <td></td>\n                            <td><b>{lotsTotal.toFixed(2)}</b></td>\n                            <td></td>\n\n                            <td> </td>\n                            <td><b>{comissionTotal.toFixed(2)}</b></td>\n                            <td><b>{swapTotal.toFixed(2)}</b></td>\n\n                            <td><b>{profitTotal.toFixed(2)}</b></td>\n                        </tr>\n                    </>\n                )\n            } else {\n                return (\n                    <tr key={index} className=\"text-center\" style={{ background: item.order_type == 0 ? \"rgb(189 179 179 / 43%)\" : item.order_type == 1 ? \"rgb(181 178 178 / 21%)\" : \" \" }}>\n                        <td className=\"text-center color2 no-padding\">{toAccountId.login}</td>\n\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\n                        <td>{item.symbol}</td>\n                        <td>{item.lots}</td>\n                        <td>{item.order_type == 0 ? item.lots*item.contract_size : item.order_type == 1 ? - item.lots*item.contract_size : item.lots*item.contract_size}</td>\n                        <td>{item.open_price}</td>\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\n                        {/* <td>{item.magic_number !== 0 ? item.magic_number : ''}</td> */}\n                        <td>{item.profit}\n                            {/* {item.margin_currency} */}\n                        </td>\n\n\n                    </tr>\n                )\n            }\n        })\n    }\n    let openToHistoryTotal\n    const toHistoryTradeTr = () => {//4//\n        let lotsTotal = 0;\n        let comissionTotal = 0;\n        let profitTotal = 0;\n        let swapTotal = 0;\n        let contractSizeTotal = 0;\n        let openpricetotal = 0;\n        let closepricetotal = 0;\n        // console.log(toHistoryTrade, '4==================<>');\n        return toHistoryTrade.length > 0 && toHistoryTrade.map((item, index) => {\n            // customSwap.map((data) => {\n\n            //     if (data.account_id == item.account_id) {\n            //         item.swap = item.swap + data.open_value\n            //     }\n            // })\n            lotsTotal += item.lots;\n            comissionTotal += item.commission;\n            profitTotal += item.profit;\n            swapTotal += item.swap;\n            openToHistoryTotal = comissionTotal + profitTotal + swapTotal;\n            contractSizeTotal += item.contract_size\n            openpricetotal += item.open_price;\n            closepricetotal += item.close_price;\n            if (index == toHistoryTrade.length - 1) {\n                let a = {\n                    lotsTotal: lotsTotal,\n                    comissionTotal: comissionTotal,\n                    profitTotal: profitTotal,\n                    swapTotal: swapTotal\n                }\n                dataTotalClosetTo = a\n                // console.log(dataTotalClosetTo, 'data4==========>>>>');\n                return (\n                    <><tr key={index} className=\"text-center\" style={{ background: item.order_type == 0 ? \"rgb(189 179 179 / 43%)\" : item.order_type == 1 ? \"rgb(181 178 178 / 21%)\" : \" \" }}>\n                        <td className=\"text-center color2 no-padding\">{toAccountId.login}</td>\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\n                        <td>{item.symbol}</td>\n                        <td>{item.lots}</td>\n                        <td>{item.order_type == 0 ? item.lots*item.contract_size : item.order_type == 1 ? - item.lots*item.contract_size : item.lots*item.contract_size}</td>\n                        <td>{item.open_price}</td>\n                        <td>{moment(item.close_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\n                        <td>{item.close_price}</td>\n\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\n\n                        <td>{item.profit}\n                            {/* {item.margin_currency} */}\n                        </td>\n\n                    </tr>\n                        <tr className=\"text-center\" key={index + 1}>\n                            <td className=\"sellcolor\"><b>Total Sell Positions</b></td>\n                            <td></td>\n\n                            <td></td>\n                            <td></td>\n                            <td ><b>{lotsTotal.toFixed(2)}</b></td>\n                            <td></td>\n\n                            <td></td>\n                            <td></td>\n                            <td></td>\n\n                            <td><b>{comissionTotal.toFixed(2)}</b></td>\n                            <td><b>{swapTotal.toFixed(2)}</b></td>\n                            {/* <td></td> */}\n\n                            <td><b>{profitTotal.toFixed(2)}</b></td>\n                        </tr>\n                    </>\n                )\n            } else {\n                return (\n                    <tr key={index} className=\"text-center\" style={{ background: item.order_type == 0 ? \"rgb(189 179 179 / 43%)\" : item.order_type == 1 ? \"rgb(181 178 178 / 21%)\" : \" \" }}>\n                        <td className=\"text-center color2 no-padding\">{toAccountId.login}</td>\n\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\n                        <td>{item.symbol}</td>\n                        <td>{item.lots}</td>\n                        <td>{item.order_type == 0 ? item.lots*item.contract_size : item.order_type == 1 ? - item.lots*item.contract_size : item.lots*item.contract_size} </td>\n                        <td>{item.open_price}</td>\n                        <td>{moment(item.close_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\n                        <td>{item.close_price}</td>\n\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\n                        <td>{item.profit}\n                            {/* {item.margin_currency} */}\n                        </td>\n\n                    </tr>\n                )\n            }\n        })\n    }\n    let fromclosedata = fromHistoryTrade.map(data => { return data })\n    let fromopendata = fromOpenTrade.map(data => { return data })\n    let toclosedata = toHistoryTrade.map(data => { return data })\n    let toopendata = toOpenTrade.map(data => { return data })\n    let newData = [...fromclosedata, ...fromopendata, ...toclosedata, ...toopendata]\n    newData = newData.sort((a, b) => new Date(...b.open_time.split('/').reverse()) - new Date(...a.open_time.split('/').reverse()));\n    let newopenData = [...fromopendata, ...toopendata]\n    let newcloseData = [...fromclosedata, ...toclosedata]\n    let totalOpen = newopenData.map(item => {\n        let openProfit = 0;\n        return openProfit += item.profit\n    }).reduce((a, b) => a + b, 0)\n    let totalClose = newcloseData.map(item => {\n        let closeProfit = 0;\n        return closeProfit += item.profit\n    }).reduce((a, b) => a + b, 0)\n    let totalfromCloseSwap = fromclosedata.reduce((a, item) => a + item.swap, 0)\n    let totalfromOpenSwap = fromopendata.reduce((a, item) => a + item.swap, 0)\n    let totalfromCloseCommission = fromclosedata.reduce((a, item) => a + item.commission, 0)\n    let totalfromOpenCommission = fromopendata.reduce((a, item) => a + item.commission, 0)\n    let totaltoCloseSwap = toclosedata.reduce((a, item) => a + item.swap, 0)\n    let totaltoOpenSwap = toopendata.reduce((a, item) => a + item.swap, 0)\n    let totaltoCloseCommission = toclosedata.reduce((a, item) => a + item.commission, 0)\n    let totaltoOpenCommission = toopendata.reduce((a, item) => a + item.commission, 0)\n\n\n    // console.log(totalOpenCommission, totalCloseCommission, 'historyinfo===============>><');\n    // console.log(fromHistoryTrade, fromOpenTrade, toHistoryTrade, toOpenTrade, '5--------->');\n    // console.log(dataTOtalcloseFrom,\n    //     dataTotalClosetTo,\n    //     dataTOtalOpenTo,\n    //     dataTOtalOpenFrom, 'redata==========<<<<<<<<<<>>>>>>>>>>');\n    // console.log(fromAccountId, toAccountId, fromOpenTrade, toOpenTrade, fromHistoryTrade, toHistoryTrade, commissionValue, 'commissionValue');\n    return (\n        <>\n\n\n            {errormassage ?\n                <div className=\"popup\">\n                    <div class=\"card w-75 \">\n                        <div class=\"card-body topmargin\">\n                            <div class=\" card-text popuptext\" role=\"alert\"> Please activate filter profile to view stats.\n                            ...\n                            </div>\n                        </div>\n                    </div>\n                </div> :\n                <>\n                    <Row className=\"no-margin\">\n                        <div className=\"lastUpdate\">\n                            <span> Last Updated :  </span>\n                            {dateTime}(UTC)\n                     </div>\n                    </Row>\n                    {loading ? <Loader\n                        type=\"ThreeDots\"\n                        color=\"black\"\n                        height={100}\n                        width={100}\n                        style={{ textAlign: 'center' }}\n\n\n                    />\n                        :\n\n                        <div style={{ overflowX: 'hidden' }} className=\"symbol-box shadoremove\">\n                            <Row>\n                                <Col md={12}>\n\n                                    <div className=\"symbol-box\" style={{ marginBottom: '20px' }}>\n                                        <div className=\"openpositions\" >\n                                            <span className=\"p-text\">Block view</span>\n                                            <span className=\"icon-style\" onClick={toggle2} >\n                                                {isOpen2 ?\n                                                    <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\n                                                    :\n                                                    <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n                                                }\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <Collapse isOpen={isOpen2}>\n                                        <div className=\"openOrder\" style={{ marginBottom: '20px' }}>\n\n                                            <table className=\"table table-responsive table-bordered border-bottom-0 align-th custom-thin\">\n                                                <thead>\n                                                    <tr className=\"text-center thUnset\">\n                                                        <th>Trades / Pair</th>\n                                                        <th>Date</th>\n                                                        <th>Account</th>\n                                                        <th>Direction</th>\n                                                        <th>Open Price</th>\n                                                        <th>Close Price</th>\n                                                        <th>Trade Quantity</th>\n                                                        <th>Realized P/L</th>\n                                                        <th>Unrealized P/L\n                                                            {/* <br /><span>L {fromOpenTrade ? fromOpenTrade[0]?.symbol : ''} = {fromOpenTrade ? fromOpenTrade[0]?.last_price : ''} </span> */}\n                                            <br /><span>{toOpenTrade[0] && <>S {toOpenTrade ? toOpenTrade[0]?.symbol : ''} = {toOpenTrade ? toOpenTrade[0]?.last_price : ''} </>} </span>\n                                                        </th>\n                                                    </tr>\n                                                </thead>\n                                                {newData.length > 0 ?\n                                                <tbody>\n                                                    {newData.length > 0 ? newData.map(item => {\n                                                        let profitTotal = 0;\n                                                        return <tr className=\"text-center\">\n                                                            <td>{item.order_type === 0 || item.order_type === 1 ? item.symbol : \"\"}</td>\n                                                            <td>\n                                                                {moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}\n                                                            </td>\n                                                            {item.account_id === toAccountId.id ?\n                                                                <td className=\"color2\">{toAccountId.alias}</td> : \"\"}\n                                                            {item.account_id === fromAccountId.id ?\n                                                                <td className=\"colorDarkBlue\">{fromAccountId.alias}</td> : \"\"}\n                                                            <td>{item.order_type == 0 ? item.lots : item.order_type == 1 ? \"-\"+item.lots : \"\"}</td>\n                                                            <td>{item.open_price}</td>\n                                                            <td>{item.close_price}</td>\n                                                            <td><NumberFormat value={item.lots*item.contract_size} displayType={'text'} thousandSeparator={true} decimalScale={2} /> </td>\n                                                            <td>{item.open_price && item.close_price ? profitTotal += item.profit : ''}</td>\n                                                            <td>{item.open_price && item.close_price ? \"\" : profitTotal += item.profit}</td>\n                                                        </tr>\n                                                    }) : ''}\n                                                    {(totalfromCloseCommission !== 0 && totalfromOpenCommission !== 0) ||\n                                                        (totalfromCloseCommission !== 0 && totalfromOpenCommission === 0) ||\n                                                        (totalfromCloseCommission === 0 && totalfromOpenCommission !== 0) ?\n                                                        <tr className=\"text-center\">\n                                                            <td><b>Commission</b></td>\n                                                            <td></td>\n                                                            <td className=\"colorDarkBlue\">{fromAccountId.alias}</td>\n                                                            <td></td>\n                                                            <td></td>\n                                                            <td></td>\n                                                            <td></td>\n                                                            <td><b>\n                                                                {totalfromCloseCommission}\n                                                            </b>\n                                                            </td>\n                                                            <td><b>\n                                                                {totalfromOpenCommission}\n                                                            </b>\n                                                            </td>\n                                                        </tr> : ''}\n                                                    {(totaltoCloseCommission !== 0 && totaltoOpenCommission !== 0) ||\n                                                        (totaltoCloseCommission !== 0 && totaltoOpenCommission === 0) ||\n                                                        (totaltoCloseCommission === 0 && totaltoOpenCommission !== 0) ?\n                                                        <tr className=\"text-center\">\n                                                            <td><b>{totalfromCloseCommission || totalfromOpenCommission ? \"\" : 'Commission'}</b></td>\n                                                            <td></td>\n                                                            <td className=\"color2\">{toAccountId.alias}</td>\n                                                            <td></td>\n                                                            <td></td>\n                                                            <td></td>\n                                                            <td></td>\n                                                            <td><b>\n                                                                {totaltoCloseCommission}\n                                                            </b>\n                                                            </td>\n                                                            <td><b>\n                                                                {totaltoOpenCommission}\n                                                            </b>\n                                                            </td>\n                                                        </tr>\n                                                        : ''}\n                                                    {(totalfromCloseSwap !== 0 && totalfromOpenSwap !== 0) ||\n                                                        (totalfromCloseSwap !== 0 && totalfromOpenSwap === 0) ||\n                                                        (totalfromCloseSwap === 0 && totalfromOpenSwap !== 0) ?\n                                                        <tr className=\"text-center\">\n                                                            <td><b>Swap</b></td>\n                                                            <td></td>\n                                                            <td className=\"colorDarkBlue\">{fromAccountId.alias}</td>\n                                                            <td></td>\n                                                            <td></td>\n                                                            <td></td>\n                                                            <td></td>\n                                                            <td><b>\n                                                                {totalfromCloseSwap}\n                                                            </b>\n                                                            </td>\n                                                            <td><b>\n                                                                {totalfromOpenSwap}\n                                                            </b>\n                                                            </td>\n                                                        </tr>\n                                                        : ''}\n                                                    {(totaltoCloseSwap !== 0 && totaltoOpenSwap !== 0) ||\n                                                        (totaltoCloseSwap !== 0 && totaltoOpenSwap === 0) ||\n                                                        (totaltoCloseSwap === 0 && totaltoOpenSwap !== 0) ?\n                                                        <tr className=\"text-center\">\n                                                            <td><b>{totalfromCloseSwap || totalfromOpenSwap ? '' : 'Swap'}</b></td>\n                                                            <td></td>\n                                                            <td className=\"color2\">{toAccountId.alias}</td>\n                                                            <td></td>\n                                                            <td></td>\n                                                            <td></td>\n                                                            <td></td>\n                                                            <td><b>\n                                                                {totaltoCloseSwap}\n                                                            </b>\n                                                            </td>\n                                                            <td><b>\n                                                                {totaltoOpenSwap}\n                                                            </b>\n                                                            </td>\n                                                        </tr>\n                                                        : ''}\n                                                    <tr className=\"text-center\">\n                                                        <td></td>\n                                                        <td></td>\n                                                        <td></td>\n                                                        <td></td>\n                                                        <td></td>\n                                                        <td></td>\n                                                        <td><b>Trading</b></td>\n                                                        <td><b>\n                                                            {totalClose}\n                                                        </b>\n                                                        </td>\n                                                        <td><b>\n                                                            {totalOpen}\n                                                        </b>\n                                                        </td>\n                                                    </tr>\n                                                    <tr className=\"text-center\">\n                                                        <td></td>\n                                                        <td></td>\n                                                        <td></td>\n                                                        <td></td>\n                                                        <td></td>\n                                                        <td></td>\n                                                        <td><b>Comm & Swap</b></td>\n                                                        <td><b>\n                                                            {totalfromCloseSwap +\n                                                                totaltoCloseSwap +\n                                                                totalfromCloseCommission +\n                                                                totaltoCloseCommission}\n                                                        </b>\n                                                        </td>\n                                                        <td><b>\n                                                            {totalfromOpenSwap +\n                                                                totaltoOpenSwap +\n                                                                totalfromOpenCommission +\n                                                                totaltoOpenCommission}\n                                                        </b>\n                                                        </td>\n                                                    </tr>\n                                                    <tr className=\"text-center\">\n                                                        <td></td>\n                                                        <td></td>\n                                                        <td></td>\n                                                        <td></td>\n                                                        <td></td>\n                                                        <td></td>\n                                                        <td><b>Total</b></td>\n                                                        <td><b>\n                                                            <NumberFormat value={historyTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                                            {fromAccountId[`accounts_details.currency`] === toAccountId[`accounts_details.currency`] ? `  ` + fromAccountId[`accounts_details.currency`] || toAccountId[`accounts_details.currency`] : ''}\n                                                        </b>\n                                                        </td>\n                                                        <td><b>\n                                                            <NumberFormat value={openTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                                            {fromAccountId[`accounts_details.currency`] === toAccountId[`accounts_details.currency`] ? `  ` + fromAccountId[`accounts_details.currency`] || toAccountId[`accounts_details.currency`] : ''}\n                                                        </b>\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                                      : <tbody className=\"text-center\">\n                                                          <tr>\n                                                              <td colSpan=\"9\">No Record Found</td>\n                                                              </tr>\n                                                      </tbody>      }\n                                            </table>\n                                        </div>\n                                        <Row style={{ marginBottom: `20px` }}>\n\n                                            <Col md={12} sm={6}>\n                                                <div className={historyTotal + openTotal >= 0 ? \"summary-box\" : \"summary-box-red\"}>\n\n\n                                                    {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\n                                                    {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\n<span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\n\n                                                    <Col md={12} sm={12}>\n                                                        <div className=\"summary-text text-center\" style={{ fontWeight: 600, color: \"#797979\" }}>Unrealized & Realized P/L ({activeProfileName}) {allHistoryRecord.history_info !== 0 && (<span> + Commission</span>)} </div>\n                                                    </Col>\n                                                    <Col md={12} sm={12}>\n                                                        <div className=\"text-center\" style={{ fontWeight: 'bold', fontSize: \"18px\" }}>$ {' '}\n                                                            <NumberFormat value={allHistoryRecord.history_info !== undefined ? historyTotal + openTotal + allHistoryRecord.history_info : historyTotal + openTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n\n                                                            {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\n\n                                                        </div>\n                                                    </Col>\n\n                                                    <div className=\"clearfix\"></div>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </Collapse>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col md={12} sm={6}>\n                                    <div className=\"symbol-box\" style={{ marginBottom: '20px' }}>\n                                        <div className=\"openpositions\" >\n                                            <span className=\"p-text\">Table view</span>\n                                            <span className=\"icon-style\" onClick={toggle} >\n                                                {isOpen ?\n                                                    <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\n                                                    :\n                                                    <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n                                                }\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <Collapse isOpen={isOpen}>\n                                        <div style={{ marginBottom: '20px' }}>\n                                            <div>\n\n\n                                                <div className=\"symbol-box terminal-head-box\">\n                                                    <div className=\"openpositions\" >\n                                                        <span className=\"p-text\">Unrealized Profit/Loss</span>\n                                                        <span className=\"icon-style\"\n                                                            onClick={toggle}\n                                                        >\n                                                            {/* {isOpen ?\n                                                <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\n                                                :\n                                                <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n                                            } */}\n                                                        </span>\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"openOrder\">\n\n\n                                                    {fromOpenTrade && fromOpenTrade.length > 0 ? (\n                                                        <Row>\n                                                            <Col md={12} > {/*/1/*/}\n\n                                                                {/* <div className={'colorDarkBlue , boldText loginCenter'}>{fromAccountId.alias}</div>\n                                                    <span className=\"text-center colorDarkBlue no-padding \"> {fromAccountId.login}</span> */}\n\n\n                                                                <table className=\"table table-responsive table-bordered border-bottom-0 align-th\">\n                                                                    <thead>\n                                                                        <tr className=\"text-center thUnset\">\n                                                                            {/* open_time,type,symbol,lot,contract_size,open_price,commission,swap,profit */}\n                                                                            <th>Login</th>\n                                                                            <th>Open Time</th>\n                                                                            <th scope=\"col\">Type</th>\n\n                                                                            <th scope=\"col\">symbol</th>\n                                                                            <th scope=\"col\">lots</th>\n                                                                            {/* <th scope=\"col\">open_time</th> */}\n                                                                            <th>Contract size</th>\n                                                                            <th>Open Price</th>\n\n\n                                                                            <th scope=\"col\">commission</th>\n                                                                            <th scope=\"col\">swap</th>\n                                                                            {/* <th scope=\"col\">magic_number</th> */}\n                                                                            <th scope=\"col\">profit</th>\n                                                                        </tr>\n                                                                    </thead>\n                                                                    <tbody>\n                                                                        {fromOpenTradeTr()}\n                                                                        {toOpenTrade.length === 0 &&\n                                                                            <tr className=\"text-center opencolor\">\n                                                                                <td><b>Total Unrealized</b></td>\n                                                                                <td></td>\n                                                                                <td></td>\n                                                                                <td></td>\n                                                                                <td><b>{dataTOtalOpenFrom.lotsTotal + dataTOtalOpenTo.lotsTotal}</b></td>\n                                                                                <td></td>\n                                                                                <td></td>\n                                                                                <td><b>{dataTOtalOpenFrom.comissionTotal + dataTOtalOpenTo.comissionTotal}</b></td>\n                                                                                <td><b>{dataTOtalOpenFrom.swapTotal + dataTOtalOpenTo.swapTotal}</b></td>\n                                                                                <td><b>{dataTOtalOpenFrom.profitTotal + dataTOtalOpenTo.profitTotal}</b></td>\n                                                                            </tr>}\n                                                                    </tbody>\n                                                                </table>\n                                                                {toOpenTrade.length === 0 &&\n                                                                    <div className=\"text-right opencolor pad\"><b>Total {\n                                                                        dataTOtalOpenFrom.comissionTotal +\n                                                                        dataTOtalOpenTo.comissionTotal +\n                                                                        dataTOtalOpenFrom.swapTotal +\n                                                                        dataTOtalOpenTo.swapTotal +\n                                                                        dataTOtalOpenFrom.profitTotal +\n                                                                        dataTOtalOpenTo.profitTotal\n                                                                    }\n                                                                        {fromAccountId[`accounts_details.currency`] === toAccountId[`accounts_details.currency`] ? `  ` + fromAccountId[`accounts_details.currency`] || toAccountId[`accounts_details.currency`] : ''}\n                                                                    </b></div>}\n                                                            </Col>\n                                                        </Row>\n\n                                                    ) :\n                                                        (' '\n                                                            // <Col md={12} >\n                                                            //     <div className=\"card change noRecordCol\"> No Record Found</div>\n                                                            // </Col>\n                                                        )}\n\n\n\n\n\n                                                    {toOpenTrade && toOpenTrade.length > 0 ? (\n                                                        <Row >\n                                                            <Col md={12}> {/*3*/}\n                                                                {/* <div className={'color2 , boldText loginCenter'}>{toAccountId.alias}</div>\n                                                    <span className=\"text-center color2 no-padding\">{toAccountId.login}</span> */}\n\n                                                                <table class=\"table table-responsive table-bordered border-botttom-0 align-th\">\n                                                                    <thead>\n                                                                        <tr className=\"text-center thUnset\">  {/* open_time,type,symbol,lot,contract_size,open_price,close_time,close_price,commission,swap,profit */}\n                                                                            <th>Login</th>\n\n                                                                            <th>Open Time</th>\n                                                                            <th scope=\"col\">Type</th>\n\n                                                                            <th scope=\"col\">symbol</th>\n                                                                            <th scope=\"col\">lots</th>\n                                                                            <th>Contract size</th>\n                                                                            <th>Open Price</th>\n                                                                            <th scope=\"col\">commission</th>\n                                                                            <th scope=\"col\">swap</th>\n                                                                            <th scope=\"col\">profit</th>\n\n                                                                        </tr>\n                                                                    </thead>\n                                                                    <tbody>\n                                                                        {toOpenTradeTr()}\n                                                                        {dataTOtalOpenFrom && dataTOtalOpenTo &&\n                                                                            <tr className=\"text-center opencolor\">\n                                                                                <td><b>Total Unrealized</b></td>\n                                                                                <td></td>\n                                                                                <td></td>\n                                                                                <td></td>\n                                                                                <td><b>{dataTOtalOpenFrom.lotsTotal + dataTOtalOpenTo.lotsTotal}</b></td>\n                                                                                <td></td>\n                                                                                <td></td>\n                                                                                <td><b>{dataTOtalOpenFrom.comissionTotal + dataTOtalOpenTo.comissionTotal}</b></td>\n                                                                                <td><b>{dataTOtalOpenFrom.swapTotal + dataTOtalOpenTo.swapTotal}</b></td>\n                                                                                <td><b>{dataTOtalOpenFrom.profitTotal + dataTOtalOpenTo.profitTotal}</b></td>\n                                                                            </tr>}\n                                                                    </tbody>\n                                                                </table>\n                                                                <div className=\"text-right opencolor pad\"><b>Total {\n                                                                    dataTOtalOpenFrom.comissionTotal +\n                                                                    dataTOtalOpenTo.comissionTotal +\n                                                                    dataTOtalOpenFrom.swapTotal +\n                                                                    dataTOtalOpenTo.swapTotal +\n                                                                    dataTOtalOpenFrom.profitTotal +\n                                                                    dataTOtalOpenTo.profitTotal\n                                                                }\n                                                                    {fromAccountId[`accounts_details.currency`] === toAccountId[`accounts_details.currency`] ? `  ` + fromAccountId[`accounts_details.currency`] || toAccountId[`accounts_details.currency`] : ''}\n                                                                </b></div>\n                                                            </Col>\n                                                        </Row>\n\n                                                    ) : (' '\n                                                            // <Col md={12}>\n                                                            //     <div className=\"card change noRecordCol\"> No Record Found</div>\n                                                            // </Col>\n                                                        )}\n\n\n\n                                                </div>\n                                            </div>\n\n                                            <div className=\"symbol-box terminal-head-box topSet\" >\n                                                <div className=\"openpositions\" >\n                                                    <span className=\"p-text\">Realized Profit/Loss</span>\n                                                    <span className=\"icon-style\"\n                                                    // onClick={toggle2}\n                                                    >\n                                                        {/* {isOpen2 ?\n                                            <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\n                                            :\n                                            <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n                                        } */}\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            <div>\n                                                {/* <Collapse isOpen={isOpen2}> */}\n\n                                                <div className=\"openOrder\">\n\n                                                    {/*2*/}\n                                                    {fromHistoryTrade.length > 0 || toHistoryTrade.length > 0 ? (\n                                                        <div>\n                                                            <Row >\n                                                                {fromHistoryTrade && fromHistoryTrade.length > 0 ? (\n                                                                    <Col md={12} >\n                                                                        {/* <div className={'colorDarkBlue , boldText loginCenter'}>{fromAccountId.alias}</div>\n                                                            <span className=\"text-center colorDarkBlue no-padding\">{fromAccountId.login}</span> */}\n                                                                        <table style={{ overflowY: 'scroll' }} className=\"table table-responsive table-bordered border-bottom-0 align-th\">\n                                                                            <thead>\n                                                                                <tr className=\"text-center thUnset\">\n                                                                                    <th>Login</th>\n\n                                                                                    <th>Open Time</th>\n                                                                                    <th scope=\"col\">Type</th>\n\n                                                                                    <th scope=\"col\">symbol</th>\n                                                                                    <th scope=\"col\">lots</th>\n\n                                                                                    <th>Contract size</th>\n                                                                                    <th>Open Price</th>\n                                                                                    <th>Close Time</th>\n\n                                                                                    <th>Close Price</th>\n\n                                                                                    <th scope=\"col\">commission</th>\n                                                                                    <th scope=\"col\">swap</th>\n\n                                                                                    <th scope=\"col\">profit</th>\n                                                                                </tr>\n                                                                            </thead>\n                                                                            <tbody>\n                                                                                {fromHistoryTradeTr()}\n                                                                                {toHistoryTrade.length === 0 &&\n                                                                                    <tr className=\"text-center closecolor\">\n                                                                                        <td><b>Total Realized</b></td>\n                                                                                        <td></td>\n                                                                                        <td></td>\n                                                                                        <td></td>\n                                                                                        <td><b>{dataTOtalcloseFrom.lotsTotal + dataTotalClosetTo.lotsTotal}</b></td>\n                                                                                        <td></td>\n                                                                                        <td></td>\n                                                                                        <td></td>\n                                                                                        <td></td>\n                                                                                        <td><b>{dataTOtalcloseFrom.comissionTotal + dataTotalClosetTo.comissionTotal}</b></td>\n                                                                                        <td><b>{dataTOtalcloseFrom.swapTotal + dataTotalClosetTo.swapTotal}</b></td>\n                                                                                        <td><b>{dataTOtalcloseFrom.profitTotal + dataTotalClosetTo.profitTotal}</b></td>\n                                                                                    </tr>}\n                                                                            </tbody>\n                                                                        </table>\n                                                                        {toHistoryTrade.length === 0 &&\n                                                                            <div className=\"text-right closecolor pad\"><b>Total {\n                                                                                dataTOtalcloseFrom.comissionTotal +\n                                                                                dataTotalClosetTo.comissionTotal +\n                                                                                dataTOtalcloseFrom.swapTotal +\n                                                                                dataTotalClosetTo.swapTotal +\n                                                                                dataTOtalcloseFrom.profitTotal +\n                                                                                dataTotalClosetTo.profitTotal\n                                                                            }\n                                                                                {fromAccountId[`accounts_details.currency`] === toAccountId[`accounts_details.currency`] ? `  ` + fromAccountId[`accounts_details.currency`] || toAccountId[`accounts_details.currency`] : ''}\n                                                                            </b></div>}\n                                                                    </Col>\n\n\n                                                                ) : (''\n                                                                        // <Col md={12}>\n                                                                        //     <div className=\"card change noRecordCol\"> No Record Found</div>\n                                                                        // </Col>\n                                                                    )}\n\n                                                            </Row>\n                                                            {/**4 */}\n                                                            {\n                                                                toHistoryTrade && toHistoryTrade.length > 0 ? (\n                                                                    <Row >\n                                                                        <Col md={12} >\n                                                                            {/* <div className={'color2 , boldText loginCenter'}>{toAccountId.alias}</div>\n                                                                <span className=\"text-center color2 no-padding\">{toAccountId.login}</span> */}\n\n                                                                            <table className=\"table table-responsive table-bordered border-bottom-0 align-th\">\n                                                                                <thead>\n                                                                                    <tr className=\"text-center thUnset\">\n                                                                                        <th>Login</th>\n\n                                                                                        <th>Open Time</th>\n                                                                                        <th scope=\"col\">Type</th>\n\n                                                                                        <th scope=\"col\">symbol</th>\n                                                                                        <th scope=\"col\">lots</th>\n\n                                                                                        <th>Contract size</th>\n                                                                                        <th>Open Price</th>\n                                                                                        <th>Close Time</th>\n\n                                                                                        <th>Close Price</th>\n\n                                                                                        <th scope=\"col\">commission</th>\n                                                                                        <th scope=\"col\">swap</th>\n\n                                                                                        <th scope=\"col\">profit</th>\n                                                                                    </tr>\n                                                                                </thead>\n                                                                                <tbody>\n                                                                                    {toHistoryTradeTr()}\n                                                                                    {dataTOtalcloseFrom && dataTotalClosetTo &&\n                                                                                        <tr className=\"text-center closecolor\">\n                                                                                            <td><b>Total Realized</b></td>\n                                                                                            <td></td>\n                                                                                            <td></td>\n                                                                                            <td></td>\n                                                                                            <td><b>{dataTOtalcloseFrom.lotsTotal + dataTotalClosetTo.lotsTotal}</b></td>\n                                                                                            <td></td>\n                                                                                            <td></td>\n                                                                                            <td></td>\n                                                                                            <td></td>\n                                                                                            <td><b>{dataTOtalcloseFrom.comissionTotal + dataTotalClosetTo.comissionTotal}</b></td>\n                                                                                            <td><b>{dataTOtalcloseFrom.swapTotal + dataTotalClosetTo.swapTotal}</b></td>\n\n                                                                                            <td><b>{dataTOtalcloseFrom.profitTotal + dataTotalClosetTo.profitTotal}</b></td>\n                                                                                        </tr>\n                                                                                    }\n                                                                                </tbody>\n                                                                            </table>\n                                                                            <div className=\"text-right closecolor pad\"><b>Total {\n                                                                                dataTOtalcloseFrom.comissionTotal +\n                                                                                dataTotalClosetTo.comissionTotal +\n                                                                                dataTOtalcloseFrom.swapTotal +\n                                                                                dataTotalClosetTo.swapTotal +\n                                                                                dataTOtalcloseFrom.profitTotal +\n                                                                                dataTotalClosetTo.profitTotal\n                                                                            }\n                                                                                {fromAccountId[`accounts_details.currency`] === toAccountId[`accounts_details.currency`] ? `  ` + fromAccountId[`accounts_details.currency`] || toAccountId[`accounts_details.currency`] : ''}\n                                                                            </b></div>\n\n                                                                        </Col>\n                                                                    </Row>\n\n                                                                ) : (''\n                                                                        // <Col md={12}>\n                                                                        //     <div className=\"card change noRecordCol\"> No Record Found</div>\n                                                                        // </Col>\n                                                                    )\n                                                            }\n\n                                                        </div>\n\n                                                    ) : (''\n                                                            // <Col md={12} >\n                                                            //     <div className=\"card change noRecordCol\"> No Record Found</div>\n                                                            // </Col>\n                                                        )}\n                                                    <Row className=\"no-margin\">\n                                                        {commissionValue && commissionValue.commission_acount_id > 0 && (\n                                                            <div className=\"card pad-x\">\n                                                                <div className=\"header ptheader b-shadow\">\n                                                                    <h4 className=\"text-center bText1\"><b>Commission</b></h4>\n                                                                    {/* <h4 className=\"text-center\">{commissionDetails[0].login}</h4> */}\n\n                                                                    <div className=\"row\">\n                                                                        <div className=\"col-md-4 text-center\">\n                                                                            <h4 className=\"bText\"> Balance {' '}</h4>\n                                                                            <NumberFormat value={commissionValue.totalProfit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                                                        </div>\n                                                                        <div className=\"col-md-4 text-center\">\n                                                                            <h4 className=\"bText\"> Equity  </h4><NumberFormat displayType={'text'} thousandSeparator={true} decimalScale={2} /><span>{commissionValue.equity}</span>\n\n                                                                        </div>\n                                                                        <div className=\"col-md-4 text-center\">\n                                                                            <h4 className=\"bText\"> Order Type  </h4>\n                                                                            <span>6</span>\n\n                                                                        </div>\n\n                                                                        <div className=\"col-md-12 text-center\">\n                                                                            <h4><b>Total</b>  </h4><NumberFormat value={commissionValue.commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        )}\n\n                                                    </Row>\n                                                </div>\n                                                {/* </Collapse> */}\n\n                                            </div>\n\n                                            {/* <div className=\"symbol-box  topSet \" >\n                            <div className=\"text-center\" >\n                                <span className=\"  summrayAdjust \" style={{ fontWeight: 600, color: \"#797979\" }}>Summary</span>\n                                <h5 style={{ fontWeight: 600, color: \"#797979\" }}> Open Positions + Closed Positions {commissionValue.commission_acount_id > 0 && (<span> + Commission</span>)}</h5>\n                                <h5 className=\"bText\">\n                                    <NumberFormat value={totalOpenAndHistory} displayType={'text'} thousandSeparator={true} decimalScale={2} ></NumberFormat></h5>\n                            </div>\n\n                        </div> */}\n                                        </div>\n                                        <Row style={{ marginBottom: `20px` }}>\n\n                                            <Col md={12} sm={6}>\n                                                <div className={historyTotal + openTotal >= 0 ? \"summary-box\" : \"summary-box-red\"}>\n\n\n                                                    {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\n                                                    {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\n<span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\n\n                                                    <Col md={12} sm={12}>\n                                                        <div className=\"summary-text text-center\" style={{ fontWeight: 600, color: \"#797979\" }}>Unrealized & Realized P/L ({activeProfileName}) {allHistoryRecord.history_info !== 0 && (<span> + Commission</span>)} </div>\n                                                    </Col>\n                                                    <Col md={12} sm={12}>\n                                                        <div className=\"text-center\" style={{ fontWeight: 'bold', fontSize: \"18px\" }}>$ {' '}\n                                                            <NumberFormat value={allHistoryRecord.history_info !== undefined ? historyTotal + openTotal + allHistoryRecord.history_info : historyTotal + openTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n\n                                                            {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\n\n                                                        </div>\n                                                    </Col>\n\n                                                    <div className=\"clearfix\"></div>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </Collapse>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col md={12} sm={6}>\n                                    <div className=\"symbol-box\" style={{ marginBottom: `20px` }}>\n                                        <span className=\"p-text\">Side by side View</span>\n                                        <span className=\"icon-style\" onClick={toggle3} >\n                                            {isOpen3 ?\n                                                <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\n                                                :\n                                                <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n                                            }\n                                        </span>\n                                    </div>\n\n                                    <Collapse isOpen={isOpen3}>\n                                        <TableList />\n                                        <Row style={{ marginBottom: `20px` }}>\n\n                                            <Col md={12} sm={6}>\n                                                <div className={historyTotal + openTotal >= 0 ? \"summary-box\" : \"summary-box-red\"}>\n\n\n                                                    {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\n                                                    {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\n<span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\n\n                                                    <Col md={12} sm={12}>\n                                                        <div className=\"summary-text text-center\" style={{ fontWeight: 600, color: \"#797979\" }}>Unrealized & Realized P/L ({activeProfileName}) {allHistoryRecord.history_info !== 0 && (<span> + Commission</span>)} </div>\n                                                    </Col>\n                                                    <Col md={12} sm={12}>\n                                                        <div className=\"text-center\" style={{ fontWeight: 'bold', fontSize: \"18px\" }}>$ {' '}\n                                                            <NumberFormat value={allHistoryRecord.history_info !== undefined ? historyTotal + openTotal + allHistoryRecord.history_info : historyTotal + openTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n\n                                                            {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\n\n                                                        </div>\n                                                    </Col>\n\n                                                    <div className=\"clearfix\"></div>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </Collapse>\n                                </Col>\n                            </Row>\n                        </div>\n\n                    }\n                    <Grid fluid>\n                        {/* <div className=\"symbol-box shadoremove\"> */}\n                        {/* <div className=\"openOrder\">\n\n                            <div className=\"border-box row\"> */}\n                        {/* <DatatablePage state={'open'} data={fromOpenTrade} /> */}\n                        {/* </div> */}\n                        {/* <div className=\"border-box row\"> */}\n\n                        {/* <DatatablePage state={'open'} data={toOpenTrade} /> */}\n                        {/* </div> */}\n                        {/* <div className=\"border-box row\"> */}\n\n                        {/* <DatatablePage state={'close'} data={fromHistoryTrade} /> */}\n                        {/* </div> */}\n                        {/* <div className=\"border-box row\"> */}\n\n                        {/* <DatatablePage state={'close'} data={toHistoryTrade} /> */}\n                        {/* </div> */}\n                        {/* </div> */}\n                        {/* </div> */}\n\n\n\n                    </Grid>\n                </>\n\n            }\n        </>\n\n    )\n\n}\n","import React, { Component } from 'react'\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\n\nexport default class Exploser extends Component {\n    render() {\n        return (\n            <div className=\"boxFix\">\n                <Row>\n                    <Col md={6}>\n                        <div className=\"card \">\n\n                            <div className=\"header\">\n\n                                <h6 className={'colorDarkBlue , loginCenter'}>Account - A</h6>\n                            </div>\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                <table className=\"table\">\n                                    <tbody>\n\n                                        <tr><td>Symbol </td>\n                                            <td className=\"td-actions text-right\">Symbol\n\n                                            </td>\n                                        </tr>\n                                        <tr><td>Lots </td>\n                                            <td className=\"td-actions text-right\">Lots\n                                            </td>\n                                        </tr>\n                                        <tr><td>BUY/SELL </td>\n                                            <td className=\"td-actions text-right\">Buy/Sell\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>Contract Size </td>\n                                            <td className=\"td-actions text-right\">Size\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>Exploser </td>\n                                            <td className=\"td-actions text-right\">Exploser Total\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                            </div>\n                        </div>\n                    </Col>\n\n\n                    <Col md={6}>\n                        <div className=\"card \">\n\n                            <div className=\"header\">\n\n                                <h6 className={'colorDarkBlue , loginCenter'}>Account - B</h6>\n                            </div>\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                <table className=\"table\">\n                                    <tbody>\n\n                                        <tr><td>Symbol </td>\n                                            <td className=\"td-actions text-right\">Symbol\n\n                                            </td>\n                                        </tr>\n                                        <tr><td>Lots </td>\n                                            <td className=\"td-actions text-right\">Lots\n                                            </td>\n                                        </tr>\n                                        <tr><td>BUY/SELL </td>\n                                            <td className=\"td-actions text-right\">Sell\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>Contract Size </td>\n                                            <td className=\"td-actions text-right\">Size\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>Exploser </td>\n                                            <td className=\"td-actions text-right\">Total\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                            </div>\n                        </div>\n                    </Col>\n\n\n                </Row>\n            </div>\n\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport NumberFormat from \"react-number-format\";\nimport config from \"../../constant/config\";\nimport Data from \"../Data\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport \"./ContractSize.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport { api } from \"../../api\";\nimport myInitObject from \"../../api\";\nconst axios = require(\"axios\");\nexport default class ContractSize extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fromAccounts: \"\",\n      fromSymbol: \"\",\n      toAccounts: \"\",\n      toSymbol: \"\",\n      fromOpenOrderInfos: \"\",\n      toOpenOrderInfos: \"\",\n      total: \"\",\n      totalTo: \"\",\n      blockloader: true,\n      selectedOption: null,\n      allHistoryRecord: [],\n      allOpenRecord: [],\n      fromHistoryOrderInfo: [],\n      toHistoryOrderInfo: [],\n      commissionHistoryOrderInfo: [],\n      fromOpenOrderInfo: [],\n      toOpenOrderInfo: [],\n      filterlist: [],\n      loading: true,\n      dateTime: \"\",\n      errorMassege: true,\n    };\n  }\n  componentWillMount() {\n    setInterval(() => {\n      if (\n        (myInitObject.responsHT &&\n          myInitObject.responsOT &&\n          myInitObject.responsSD) === undefined\n      ) {\n        console.log(\"no data\");\n      } else {\n        this.setState(\n          {\n            //last update time\n            dateTime: myInitObject.fetchLastUpdatedTime.filteredInfoTime,\n            // status data\n            loading: false,\n            fromAccounts: myInitObject.fetchStatusData.fromAccounts,\n            fromSymbol: myInitObject.fetchStatusData.fromSymbol,\n            toAccounts: myInitObject.fetchStatusData.toAccounts,\n            toSymbol: myInitObject.fetchStatusData.toSymbol,\n            fromOpenOrderInfos:\n              myInitObject.fetchStatusData.fromOpenOrderInfos.length > 0\n                ? myInitObject.fetchStatusData.fromOpenOrderInfos[0]\n                : \"\",\n            blockloader:\n              myInitObject.fetchStatusData.fromOpenOrderInfos.length > 0\n                ? false\n                : true,\n            total:\n              myInitObject.fetchStatusData.fromOpenOrderInfos.length > 0 &&\n              myInitObject.fetchStatusData.fromOpenOrderInfos[0].order_type == 0\n                ? myInitObject.fetchStatusData.fromSymbol?.contract_size *\n                  myInitObject.fetchStatusData.fromOpenOrderInfos[0]?.lots\n                : myInitObject.fetchStatusData.fromSymbol?.contract_size *\n                  -myInitObject.fetchStatusData.fromOpenOrderInfos[0]?.lots,\n            toOpenOrderInfos:\n              myInitObject.fetchStatusData.toOpenOrderInfos.length > 0\n                ? myInitObject.fetchStatusData.toOpenOrderInfos[0]\n                : \"\",\n            totalTo:\n              myInitObject.fetchStatusData.toOpenOrderInfos.length > 0 &&\n              myInitObject.fetchStatusData.toOpenOrderInfos[0].order_type == 0\n                ? myInitObject.fetchStatusData.toSymbol?.contract_size *\n                  myInitObject.fetchStatusData.toOpenOrderInfos[0]?.lots\n                : myInitObject.fetchStatusData.toSymbol?.contract_size *\n                  -myInitObject.fetchStatusData.toOpenOrderInfos[0]?.lots,\n            //history trade\n            allHistoryRecord: myInitObject.fetchAllHistoryTrade.rows,\n            fromHistoryOrderInfo:\n              myInitObject.fetchAllHistoryTrade.fromHistoryOrderInfo,\n            toHistoryOrderInfo:\n              myInitObject.fetchAllHistoryTrade.toHistoryOrderInfo,\n            //open trade\n            allOpenRecord: myInitObject.fetchAllOpenTrade.rows,\n            fromOpenOrderInfo: myInitObject.fetchAllOpenTrade.fromOpenOrderInfo,\n            toOpenOrderInfo: myInitObject.fetchAllOpenTrade.toOpenOrderInfo,\n          },\n          () => {\n            this.setState({\n              errorMassege:\n                this.state.allHistoryRecord.length == 0 ? true : false,\n            });\n          }\n        );\n      }\n    }, 1000);\n  }\n  // componentDidMount() {\n  //     // this.fetchAllHIstoryTrade();\n  //     // this.fetchStatusData();\n  //     axios.get(config.baseurl + '/accounts/fetchAllSymbol')\n  //         .then(function (response) {\n  //             if (response.status == 200) {\n  //                 console.log(response, \"response ---------------fetchAllSymbol>\")\n  //             }\n  //         })\n  //     // this.fetchLastUpdatedTime();\n  // }\n  // fetchLastUpdatedTime = () => {\n  //     let self = this;\n  //     axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\n  //         .then(function (response) {\n  //             if (response.status == 200) {\n  //                 self.setState({ dateTime: response.data.filteredInfoTime })\n  //                 // console.log(self.state.dataOpenTrade.accountFromInfo,\"outyfjhkjh\");\n  //             }\n  //         });\n  // }\n\n  // fetchStatusData = () => {\n  //     let self = this;\n  //     let tottal = 0;\n  //     axios.get(config.baseurl + '/accounts/fetchStatusData')\n  //         .then(function (response) {\n  //             if (response.status == 200) {\n  //                 self.setState({ loading: false })\n\n  //                 self.setState({ fromAccounts: response.data.fromAccounts })\n  //                 self.setState({ fromSymbol: response.data.fromSymbol })\n  //                 // console.log(fromSymbol,\"fromSymbol\");\n  //                 self.setState({ toAccounts: response.data.toAccounts })\n  //                 self.setState({ toSymbol: response.data.toSymbol })\n  //                 self.setState({ fromOpenOrderInfos: response.data.fromOpenOrderInfos.length > 0 ? response.data.fromOpenOrderInfos[0] : '' })\n  //                 if (response.data.fromOpenOrderInfos.length > 0) {\n  //                     self.setState({ blockloader: false })\n  //                     if (response.data.fromOpenOrderInfos[0].order_type == 0) {\n  //                         self.setState({ total: response.data.fromSymbol.contract_size * (response.data.fromOpenOrderInfos[0].lots) })\n  //                     } else {\n  //                         self.setState({ total: response.data.fromSymbol.contract_size * -(response.data.fromOpenOrderInfos[0].lots) })\n  //                     }\n\n  //                     self.setState({ toOpenOrderInfos: response.data.toOpenOrderInfos.length > 0 ? response.data.toOpenOrderInfos[0] : '' })\n  //                 }\n  //                 if (response.data.toOpenOrderInfos.length > 0) {\n  //                     if (response.data.toOpenOrderInfos[0].order_type == 0) {\n  //                         self.setState({ totalTo: response.data.toSymbol.contract_size * (response.data.toOpenOrderInfos[0].lots) })\n  //                     } else {\n  //                         self.setState({ totalTo: response.data.toSymbol.contract_size * -(response.data.toOpenOrderInfos[0].lots) })\n  //                     }\n  //                 }\n\n  //             }\n  //         });\n  // }\n  // fetchAllHIstoryTrade = () => {\n  //     let self = this;\n  //     axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\n  //         .then(function (response) {\n  //             // console.log(response.data, 'response.data his')\n  //             if (response.status == 200) {\n  //                 self.setState({ errorMassege: false })\n  //                 // self.setState({ allHistoryRecord: response.data.rows })\n  //                 self.setState({\n  //                     allHistoryRecord: response.data.rows,\n  //                     fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,sNaN(parseInt(s)\n  //                     toHistoryOrderInfo: response.data.toHistoryOrderInfo,\n  //                     commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\n  //                 })\n  //             }\n  //         })\n  //     // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\n  //     // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\n  //     axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\n  //         .then(function (response) {\n  //             if (response.status == 200) {\n\n  //                 // self.setState({ allOpenRecord: response.data.rows })\n  //                 self.setState({\n  //                     allOpenRecord: response.data.rows,\n  //                     fromOpenOrderInfo: response.data.fromOpenOrderInfo,\n  //                     toOpenOrderInfo: response.data.toOpenOrderInfo\n  //                 })\n  //             }\n  //         })\n  // }\n\n  render() {\n    const {\n      allHistoryRecord,\n      allOpenRecord,\n      selectedOption,\n      toOpenOrderInfo,\n      fromOpenOrderInfo,\n      fromHistoryOrderInfo,\n      commissionHistoryOrderInfo,\n      toHistoryOrderInfo,\n    } = this.state;\n    //   const sumOfOpenTotal = allOpenRecord.reduce((current, data) => {\n    //     return (Math.floor(data.commission + data.swap + data.profit+ current));\n    // }, 0);\n\n    //   const sumOfHistoryTotal = allHistoryRecord.reduce((current, data) => {\n    //     return (data.profit + current);\n    // }, 0);\n    let uniqueSymbols = \"\";\n    if (allOpenRecord && Object.entries(allOpenRecord).length > 0) {\n      let fromSymbols = JSON.parse(allOpenRecord.from_symbols);\n      // fromSymbols = (fromSymbols).map(data => data).join(', ');\n      let toSymbols = JSON.parse(allOpenRecord.to_symbols);\n      let combineSymbols = fromSymbols.concat(toSymbols);\n      uniqueSymbols = combineSymbols.filter(\n        (item, i, ar) => ar.indexOf(item) === i\n      );\n      uniqueSymbols = uniqueSymbols.map((data) => data).join(\", \");\n    }\n    let fromsum = 0;\n    let tosum = 0;\n    // if(fromHistoryOrderInfo && commissionHistoryOrderInfo && fromHistoryOrderInfo.length>0){\n    if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\n      fromsum =\n        fromHistoryOrderInfo[0].commission +\n        fromHistoryOrderInfo[0].swap +\n        fromHistoryOrderInfo[0].profit;\n    }\n\n    if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\n      tosum =\n        toHistoryOrderInfo[0].commission +\n        toHistoryOrderInfo[0].swap +\n        toHistoryOrderInfo[0].profit;\n    }\n\n    let sumOfHistoryTotal = tosum + fromsum;\n\n    let openfromsum = 0;\n    let opentosum = 0;\n    if (\n      fromOpenOrderInfo &&\n      fromOpenOrderInfo.length > 0 &&\n      fromOpenOrderInfo[0].total != null\n    ) {\n      openfromsum =\n        fromOpenOrderInfo[0].commission +\n        fromOpenOrderInfo[0].swap +\n        fromOpenOrderInfo[0].profit;\n    }\n    if (\n      toOpenOrderInfo &&\n      toOpenOrderInfo.length > 0 &&\n      toOpenOrderInfo[0].total != null\n    ) {\n      opentosum =\n        toOpenOrderInfo[0].commission +\n        toOpenOrderInfo[0].swap +\n        toOpenOrderInfo[0].profit;\n    }\n\n    let sumOfOpenTotal = opentosum + openfromsum;\n    this.state.total = isNaN(parseInt(this.state.total)) ? 0 : parseInt(this.state.total)\n    this.state.totalTo = isNaN(parseInt(this.state.totalTo)) ? 0 : parseInt(this.state.totalTo)\n\n    console.log(this.state.total , typeof isNaN(this.state.totalTo)  , \"jjjjjj\", this.state.totalTo);\n    return (\n      <React.Fragment>\n        {this.state.errorMassege == true ? (\n          <div className=\"popup\">\n            <div className=\"card w-75 \">\n              <div className=\"card-body topmargin\">\n                <div className=\" card-text popuptext\" role=\"alert\">\n                  Please Select Filters To Continue...\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <>\n            <Row>\n              <div className=\"lastUpdate\">\n                <span> Last Updated : </span>\n                {this.state.dateTime}(UTC){\" \"}\n              </div>\n            </Row>\n            <div className=\"contractSize-wrapper\">\n              <div className=\" leftset card \">\n                {this.state.loading ? (\n                  <Loader\n                    type=\"ThreeDots\"\n                    color=\"black\"\n                    height={100}\n                    width={100}\n                    style={{ textAlign: \"center\" }}\n                  />\n                ) : (\n                  <Row>\n                    <h4 className=\"text-center \">\n                      <b>Exposure</b>\n                    </h4>\n                    {/* {this.state.fromOpenOrderInfos && this.state.fromOpenOrderInfos.order_type !== null || this.state.toOpenOrderInfos && this.state.toOpenOrderInfos.order_type !== null ? */}\n                    <>\n                      {\" \"}\n                      {this.state.fromOpenOrderInfos !== \"\" &&\n                      this.state.fromOpenOrderInfos.order_type !== null ? (\n                        <Col md={4}>\n                          <div className=\"card\">\n                            <div\n                              className={\"colorDarkBlue , boldText loginCenter\"}\n                            >\n                              {this.state.fromAccounts.alias}\n                            </div>\n\n                            <h6 className={\"colorDarkBlue loginCenter\"}>\n                              {this.state.fromAccounts.login}\n                            </h6>\n\n                            <div className=\"content table-full-width \">\n                              <div className=\"table-responsive\">\n                                <div className=\"text-center\">\n                                  <span>{this.state.fromSymbol.name}</span>\n                                  {this.state.fromOpenOrderInfos !== \"\" &&\n                                    this.state.fromOpenOrderInfos.order_type !==\n                                      null && (\n                                      <span\n                                        className=\"td-actions bText, clearBorder\"\n                                        style={{ display: \"block\" }}\n                                      >\n                                        {this.state.fromOpenOrderInfos\n                                          .order_type == 0\n                                          ? \"BUY \"\n                                          : \"SELL \"}\n                                        {this.state.fromOpenOrderInfos.lots}{\" \"}\n                                        {this.state.fromOpenOrderInfos.lots > 1\n                                          ? \"Lots\"\n                                          : \"Lot\"}\n                                      </span>\n                                    )}\n                                </div>\n                                <br></br>\n                                <div className=\"text-center\">\n                                  <span className=\"td-actions clearBorder text-right\">\n                                    <NumberFormat\n                                      value={this.state.total}\n                                      displayType={\"text\"}\n                                      thousandSeparator={true}\n                                      decimalScale={2}\n                                    />{\" \"}\n                                    {this.state.fromSymbol.margin_currency}\n                                  </span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </Col>\n                      ) : (\n                        <Col md={4}>\n                          <div className=\"card change noRecordCol\">\n                            {\" \"}\n                            No Record Found\n                          </div>\n                        </Col>\n                      )}\n                      <Col md={4}>\n                        <div className=\"card\">\n                          \n                            {(this.state.total + this.state.totalTo == 0) && \n                            this.state.total !== 0 && \n                            this.state.totalTo !== 0 ? (\n                            <h5 className=\"  text-center adjustMent\">\n                              <span style={{ color: \"green\" }}>\n                                <b> No Exposure</b>\n                              </span>\n                          </h5>)\n                              : ''}\n                              {this.state.total == 0 && this.state.totalTo == 0 ? (\n                            <h5 className=\"  text-center adjustMent\">\n                              <span style={{ color: \"green\" }}>\n                                <b> No Record Found</b>\n                              </span>\n                          </h5>)\n                              : ''}\n                          {this.state.total !== 0 &&\n                            this.state.totalTo !== 0 && \n                            this.state.total + this.state.totalTo != 0 && (\n                                <>\n                                 <h5 className=\"  text-center adjustMent\">\n                                  <b> Exposure</b> \n                              </h5>\n                              <div\n                                style={{ color: \"#b70606\" }}\n                                className=\" setBottom bText text-center\"\n                              >\n                                <NumberFormat\n                                  value={this.state.total + this.state.totalTo}\n                                  displayType={\"text\"}\n                                  thousandSeparator={true}\n                                  decimalScale={2}\n                                />\n                                {this.state.fromSymbol?.margin_currency ===\n                                this.state.toSymbol?.margin_currency\n                                  ? `  ` +\n                                      this.state.fromSymbol.margin_currency ||\n                                    this.state.toSymbol.margin_currency\n                                  : \"\"}\n                              </div>\n                              </>\n                            )}\n                          {this.state.totalTo !== 0 &&\n                            (isNaN(this.state.total) == true ||\n                              this.state.total == 0) && (\n                                  <>\n                                <h5 className=\"  text-center adjustMent\">\n                                  <b> Exposure</b> \n                              </h5>\n                              <div\n                                style={{ color: \"#b70606\" }}\n                                className=\" setBottom bText text-center\"\n                              >\n                                <NumberFormat\n                                  value={this.state.totalTo}\n                                  displayType={\"text\"}\n                                  thousandSeparator={true}\n                                  decimalScale={2}\n                                />\n                                {this.state.toSymbol?.margin_currency\n                                  ? `  ` + this.state.toSymbol.margin_currency\n                                  : \"\"}\n                              </div>\n                              </>\n                            )}\n                          {this.state.total != 0 &&\n                            (isNaN(this.state.totalTo) == true ||\n                              this.state.totalTo == 0) && (\n                                  <>\n                                <h5 className=\"  text-center adjustMent\">\n                                <b> Exposure</b> \n                            </h5>\n                              <div\n                                style={{ color: \"#b70606\" }}\n                                className=\" setBottom bText text-center\"\n                              >\n                                <NumberFormat\n                                  value={this.state.total}\n                                  displayType={\"text\"}\n                                  thousandSeparator={true}\n                                  decimalScale={2}\n                                />\n                                {this.state.fromSymbol?.margin_currency\n                                  ? `  ` + this.state.fromSymbol.margin_currency\n                                  : \"\"}\n                              </div>\n                              </>\n                            )}\n                        </div>\n                      </Col>\n                      {this.state.toOpenOrderInfos !== \"\" &&\n                      this.state.toOpenOrderInfos.order_type !== null ? (\n                        <Col md={4}>\n                          <div className=\" leftset1 card\">\n                            <div className={\"color2 , boldText loginCenter\"}>\n                              {this.state.toAccounts.alias}\n                            </div>\n\n                            <h6 className={\"color2 ,bText, loginCenter\"}>\n                              {this.state.toAccounts.login}\n                            </h6>\n\n                            <div className=\"content table-full-width \">\n                              <div className=\"table-responsive\">\n                                <div className=\"text-center\">\n                                  <span className=\"td-actions bText, clearBorder text-right\">\n                                    {this.state.toSymbol.name}\n                                  </span>\n                                  {this.state.toOpenOrderInfos !== \"\" &&\n                                    this.state.toOpenOrderInfos.order_type !==\n                                      null && (\n                                      <span\n                                        className=\"td-actions bText, clearBorder\"\n                                        style={{ display: \"block\" }}\n                                      >\n                                        {this.state.toOpenOrderInfos\n                                          .order_type == 0\n                                          ? \"BUY \"\n                                          : \"SELL \"}\n                                        {this.state.toOpenOrderInfos.lots}{\" \"}\n                                        {this.state.toOpenOrderInfos.lots > 1\n                                          ? \"Lots\"\n                                          : \"Lot\"}\n                                      </span>\n                                    )}\n                                </div>\n                                <br></br>\n                                <div className=\"text-center\">\n                                  <span>\n                                    <NumberFormat\n                                      value={this.state.totalTo}\n                                      displayType={\"text\"}\n                                      thousandSeparator={true}\n                                      decimalScale={2}\n                                    />{\" \"}\n                                    {this.state.toSymbol.margin_currency}\n                                  </span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </Col>\n                      ) : (\n                        <Col md={4}>\n                          <div className=\"card change noRecordCol\">\n                            {\" \"}\n                            No Record Found\n                          </div>\n                        </Col>\n                      )}\n                    </>\n                    {/* <Col md={12}>\n                                            <div className=\"card change noRecordCol\"> No Recor Found</div>\n                                        </Col> */}\n                    {/* } */}\n                  </Row>\n                )}\n                <Col md={12} sm={6}>\n                  <div\n                    className={\n                      sumOfHistoryTotal + sumOfOpenTotal >= 0\n                        ? \"summary-box\"\n                        : \"summary-box-red\"\n                    }\n                  >\n                    {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\n                    {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\n                <span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\n\n                    <Col md={12} sm={12}>\n                      <div\n                        className=\"summary-text text-center\"\n                        style={{ fontWeight: 600, color: \"#797979\" }}\n                      >\n                        Summary For ({uniqueSymbols}){\" \"}\n                        {allHistoryRecord.history_info !== 0 && (\n                          <span> + Commission</span>\n                        )}{\" \"}\n                      </div>\n                    </Col>\n                    <Col md={12} sm={12}>\n                      <div\n                        className=\"text-center\"\n                        style={{ fontWeight: \"bold\", fontSize: \"18px\" }}\n                      >\n                        ${\" \"}\n                        <NumberFormat\n                          value={\n                            allHistoryRecord.history_info !== undefined\n                              ? sumOfHistoryTotal +\n                                sumOfOpenTotal +\n                                allHistoryRecord.history_info\n                              : sumOfHistoryTotal + sumOfOpenTotal\n                          }\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                        />\n                      </div>\n                    </Col>\n\n                    <div className=\"clearfix\"></div>\n                  </div>\n                </Col>\n              </div>\n            </div>\n          </>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport NumberFormat from 'react-number-format';\nimport config from '../../constant/config';\nimport Data from '../Data';\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport './Statistics.css'\nimport { api } from '../../api'\nimport myInitObject from '../../api'\nconst axios = require('axios');\nexport default class Statistics extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n\n            filterlist: [],\n            selectedOption: null,\n            allHistoryRecord: [],\n            allOpenRecord: [],\n            fromHistoryOrderInfo: [],\n            toHistoryOrderInfo: [],\n            commissionHistoryOrderInfo: [],\n            fromOpenOrderInfo: [],\n            dateTime: '',\n            activeProfileName: ''\n        }\n    }\n    componentDidMount() {\n        // this.fetchActivefilterData();\n        // this.fetchAllHIstoryTrade();\n        // this.fetchLastUpdatedTime()\n        setInterval(() => {\n         if((myInitObject.responsHT &&\n           myInitObject.responsOT &&\n           myInitObject.responsAC &&\n           myInitObject.responsAF &&\n           myInitObject.responsLUT &&\n           myInitObject.responsSD) === undefined){\n           console.log('no data');\n         }else{\n        //    console.log(myInitObject, '=========><')\n           this.setState({\n             //history trade\n             allHistoryRecord: myInitObject.fetchAllHistoryTrade.rows,\n             fromHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.fromHistoryOrderInfo,\n             toHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.toHistoryOrderInfo,\n             //open trade\n             allOpenRecord: myInitObject.fetchAllOpenTrade.rows,\n             fromOpenOrderInfo: myInitObject.fetchAllOpenTrade.fromOpenOrderInfo,\n             toOpenOrderInfo: myInitObject.fetchAllOpenTrade.toOpenOrderInfo,\n            \n             //active filter data\n             filterlist: myInitObject.fetchActivefilterdata.rows,\n            \n             activeProfileName: myInitObject.fetchActivefilterdata.rows[0].profile_name, \n             //last updated time\n             dateTime: myInitObject.fetchLastUpdatedTime.filteredInfoTime,\n             \n             },() =>{\n               this.setState({ errorMassege:this.state.filterlist.length == 0 ?  true : false,})\n             })\n         }\n        },1000)\n\n    }\n    // fetchLastUpdatedTime = () => {\n    //     let self = this;\n    //     axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\n    //         .then(function (response) {\n    //             if (response.status == 200) {\n    //                 self.setState({ dateTime: response.data.filteredInfoTime })\n    //                 // console.log(self.state.dataOpenTrade.accountFromInfo,\"outyfjhkjh\");\n    //             }\n    //         });\n    // }\n    // fetchActivefilterData = () => {\n    //     let self = this;\n    //     axios.get(config.baseurl + '/filter/fetchActivefilterdata')\n    //         .then(function (response) {\n    //             if (response.status == 200) {\n    //                 console.log(response, \"respp----------------->\")\n    //                 self.setState({ filterlist: response.data.rows, })\n    //                 if (self.state.filterlist.length == 0) {\n    //                     self.setState({ errorMassege: true ,})\n    //                     }\n    //                     else{\n    //                         self.setState({activeProfileName: response.data.rows[0].profile_name})\n    //                     }\n    //             }\n    //         });\n    // }\n\n    showData = (accountDetailValue) => {\n\n        return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\n            if (accountDetailValue === 'margin_level') {\n                return (\n                    <>\n                        <td className=\"tdClr2 tdClr boldText\" key={index}>\n                            <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\n                </td>\n                        <td className=\"tdClr2 boldText\" key={index}>\n                            {/* {item.accountToInfo[0].accounts_details[0][accountDetailValue]} % */}\n                            <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\n                </td>\n                    </>\n                )\n            }\n            if (item.accountFromInfo.length > 0) {\n                return (\n                    <>\n                        <td className=\"tdClr2 tdClr boldText\" key={index}>\n                            {item.accountFromInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''}  {' '}\n                            <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                        </td>\n\n                        <td className=\"tdClr2 boldText\" key={index}>\n                            {item.accountToInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''} {' '}\n                            {/* {item.accountToInfo[0].accounts_details[0][accountDetailValue]} */}\n                            <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                        </td>\n                    </>\n                )\n\n            }\n\n        })\n    }\n    tableHeader = () => {\n\n        return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\n            return (\n                <>\n                    <th key={index} className=\"bText colorDarkBlue text-center tdClr2 tdClr\">\n                        <div className=\"colorDarkBlue\" >\n                            {(item.accountFromInfo[0].alias != null) ? item.accountFromInfo[0].alias : '-'}\n                        </div>\n                        <span style={{ fontSize: 10 }}>\n                            {item.accountFromInfo[0].login}\n                        </span>\n\n                    </th>\n                    <th key={index} className=\"bText color2 text-center tdClr2\">\n                        <div className=\"color2\" >\n                            {(item.accountToInfo[0].alias != null) ? item.accountToInfo[0].alias : '-'}\n                        </div>\n                        <span style={{ fontSize: 10 }}>\n                            {item.accountToInfo[0].login}\n                        </span>\n\n                    </th>\n                </>\n\n            )\n\n        })\n    }\n    // fetchAllHIstoryTrade = () => {\n    //     let self = this;\n    //     axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\n    //         .then(function (response) {\n    //             // console.log(response.data, 'response.data his')\n    //             if (response.status == 200) {\n    //                 // self.setState({ allHistoryRecord: response.data.rows })\n    //                 self.setState({\n    //                     allHistoryRecord: response.data.rows,\n    //                     fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,\n    //                     toHistoryOrderInfo: response.data.toHistoryOrderInfo,\n    //                     commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\n    //                 })\n    //             }\n    //         })\n    //     // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\n    //     // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\n    //     axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\n    //         .then(function (response) {\n    //             if (response.status == 200) {\n\n    //                 // self.setState({ allOpenRecord: response.data.rows })\n    //                 self.setState({\n    //                     allOpenRecord: response.data.rows,\n    //                     fromOpenOrderInfo: response.data.fromOpenOrderInfo,\n    //                     toOpenOrderInfo: response.data.toOpenOrderInfo\n    //                 })\n    //             }\n    //         })\n    // }\n    render() {\n        const { allHistoryRecord, allOpenRecord, selectedOption, toOpenOrderInfo, fromOpenOrderInfo, fromHistoryOrderInfo, commissionHistoryOrderInfo, toHistoryOrderInfo } = this.state;\n        //   const sumOfOpenTotal = allOpenRecord.reduce((current, data) => {\n        //     return (Math.floor(data.commission + data.swap + data.profit+ current));\n        // }, 0);\n\n        //   const sumOfHistoryTotal = allHistoryRecord.reduce((current, data) => {\n        //     return (data.profit + current);\n        // }, 0);\n        let uniqueSymbols = \"\";\n        if (allOpenRecord && Object.entries(allOpenRecord).length > 0) {\n            let fromSymbols = JSON.parse(allOpenRecord.from_symbols);\n            // fromSymbols = (fromSymbols).map(data => data).join(', ');\n            let toSymbols = JSON.parse(allOpenRecord.to_symbols);\n            let combineSymbols = fromSymbols.concat(toSymbols);\n            uniqueSymbols = combineSymbols.filter((item, i, ar) => ar.indexOf(item) === i);\n            uniqueSymbols = (uniqueSymbols).map(data => data).join(', ')\n        }\n        let fromsum = 0;\n        let tosum = 0;\n        // if(fromHistoryOrderInfo && commissionHistoryOrderInfo && fromHistoryOrderInfo.length>0){\n        if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\n            fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\n        }\n\n        if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\n            tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\n        }\n\n        let sumOfHistoryTotal = tosum + fromsum;\n\n        let openfromsum = 0;\n        let opentosum = 0;\n        if ((fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total != null)) {\n            // if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\n            //   openfromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\n            // }else{\n            openfromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\n\n        }\n        if ((toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total != null)) {\n            // if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\n            //   opentosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit+ toOpenOrderInfo[0].swap);\n            // }\n\n            // else{\n            //   opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n            // }\n            opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n        }\n\n        let sumOfOpenTotal = opentosum + openfromsum;\n\n\n\n\n\n        return (\n            <React.Fragment>\n                {(this.state.errorMassege) ? <div className=\"popup\">\n\n                    <div className=\"card w-75 \">\n                        <div className=\"card-body topmargin\">\n                            <div className=\" card-text popuptext\" role=\"alert\">Please activate filter profile to view stats.......</div>\n                        </div>\n                    </div>\n                </div>\n                    :\n                    <div className=\"statistic-wrapper\">\n                        <Grid fluid>\n                            <Row>\n                                <div className=\"lastUpdate\">\n                                    <span> Last Updated :  </span>\n                                    {this.state.dateTime}(UTC)  </div>\n                            </Row>\n                            <div className=\"terminal-box\">\n\n                                <span className=\"terminal-text\">Terminal Statistics</span>\n                            </div>\n                            <Row noGutters={true}>\n                                {Data.dashBoardPage.items.map((item, index) =>\n\n                                    <Col md={4} sm={6} key={index}>\n                                        <div style={{ margin: '30px 0px' }} className=\"text-center\">\n                                            <span className=\"bText\">{item.title}</span>\n                                        </div>\n                                        <div className=\"balance-box Pmargin\"\n                                        // className={item.id == '1' ? 'balance-box' : item.id == '2' ?\n                                        //   'balance-box Pmargin' : item.id == '3' ? 'balance-box equity-box' :\n                                        //     item.id == '4' ? 'balance-box Fmargin' : item.id == '5' ? 'balance-box floating' : 'balance-box  margin-box'}\n                                        >\n                                            <div className=\"content\">\n                                                <div className=\"table-responsive\">\n\n                                                    <table className=\"table  text-center\">\n\n                                                        <tbody>\n                                                            <tr>\n                                                                {this.tableHeader()}\n                                                            </tr>\n                                                            <tr>\n                                                                {item.title == 'Balance' && this.showData('balance')}\n                                                                {item.title == 'Equity' && this.showData('equity')}\n                                                                {item.title == 'Margin' && this.showData('margin')}\n                                                                {item.title == 'Free Margin' && this.showData('free_margin')}\n                                                                {item.title == 'Margin %' && this.showData('margin_level')}\n                                                                {item.title == 'Unrealized P/L' && this.showData('profit')}\n                                                            </tr>\n                                                        </tbody>\n                                                    </table>\n\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </Col>\n\n                                )}\n                            </Row>\n                            <Col md={12} sm={6}>\n                                <div className={sumOfHistoryTotal + sumOfOpenTotal >= 0 ? \"summary-box\" : \"summary-box-red\"}>\n\n\n                                    {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\n                                    {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\n                <span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\n\n                                    <Col md={12} sm={12}>\n                                        <div className=\"summary-text text-center\" style={{ fontWeight: 600, color: \"#797979\" }}>Summary For ({this.state.activeProfileName}) {allHistoryRecord.history_info !== 0 && (<span> + Commission</span>)} </div>\n                                    </Col>\n                                    <Col md={12} sm={12}>\n                                        <div className=\"text-center\" style={{ fontWeight: 'bold', fontSize: \"18px\" }}>$ {' '}\n                                            <NumberFormat value={allHistoryRecord.history_info !== undefined ? sumOfHistoryTotal + sumOfOpenTotal + allHistoryRecord.history_info : sumOfHistoryTotal + sumOfOpenTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n\n                                            {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\n\n                                        </div>\n                                    </Col>\n\n                                    <div className=\"clearfix\"></div>\n                                </div>\n                            </Col>\n                        </Grid>\n                    </div>\n                }\n            </React.Fragment>\n        )\n    }\n}\n","import Dashboard from \"views/Dashboard.jsx\";\n// import UserProfile from \"views/UserProfile.jsx\";\n// import TableList from \"views/TableList.jsx\";\n// import Typography from \"views/Typography.jsx\";\n// import Icons from \"views/Icons.jsx\";\n// import Maps from \"views/Maps.jsx\";\n// import Notifications from \"views/Notifications.jsx\";\n// import Upgrade from \"views/Upgrade.jsx\";\n// import Filter from '../src/views/Filter';\nimport Innerlogin from 'views/Innerlogin';\nimport Filterprofile from './views/filter/Filterprofile';\nimport Swap from '../src/views/swap';\nimport calculating from '../src/views/calculating';\nimport Exploser from '../src/views/exploser';\nimport ContractSize from './views/ContractSize/ContractSize';\nimport Statistics from './views/Statistics/Statistics';\nimport myInitObject from './api'\n\nconst dashboardRoutes = [\n  {\n    id: 1,\n    child: false,\n    menu: false,\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"pe-7s-graph\",\n    component: Dashboard,\n    layout: \"/dashboard\",\n    data: myInitObject\n  },\n\n  {\n    id: 2,\n    child: false,\n    menu: false,\n    path: \"/Statistics\",\n    name: \" Statistics\",\n    icon: \"pe-7s-filter\",\n    component: Statistics,\n    layout: \"/dashboard\",\n  },\n\n\n  {\n    id: 3,\n    child: false,\n    menu: false,\n    path: \"/calculating\",\n    name: \"Positions\",\n    icon: \"pe-7s-calculator\",\n    component: calculating,\n    layout: \"/dashboard\",\n  },\n  {\n    id: 3,\n    child: false,\n    menu: false,\n    path: \"/contractSize\",\n    name: \" Contract Size Exposure\",\n    icon: \"pe-7s-search\",\n    component: ContractSize,\n    // component: calculating,\n    layout: \"/dashboard\",\n  },\n \n\n\n  // {\n  //   path: \"/exploser\",\n  //   name: \"Exploser\",\n  //   icon: \"pe-7s-search\",\n  //   component: Exploser,\n  //   layout: \"/admin\"\n  // },\n\n\n  {\n    id: 4,\n    child: true,\n    menu: false,\n    // path: \"/innerlogin\",\n    name: \"Settings\",\n    // component: Innerlogin,\n    icon: \"pe-7s-note2\",\n    // layout: \"/admin\",\n\n\n    resources: [\n      {\n\n        path: \"/settings/innerlogin\",\n        name: \"Login/Accounts\",\n        icon: \"pe-7s-note2\",\n        component: Innerlogin,\n        layout: \"/dashboard\"\n      },\n\n\n      {\n\n        path: \"/settings/filterpage\",\n        name: \"Filter\",\n        icon: \"pe-7s-filter\",\n        component: Filterprofile,\n        layout: \"/dashboard\"\n      },\n\n\n      {\n\n        path: \"/settings/swap\",\n        name: \"Swap\",\n        icon: \"pe-7s-graph\",\n        component: Swap,\n        layout: \"/dashboard\",\n      },\n    ]\n  },\n\n  // {\n  //   path: \"/typography\",\n  //   name: \"Typography\",\n  //   icon: \"pe-7s-news-paper\",\n  //   component: Typography,\n  //   layout: \"/dashboard\"\n  // },\n  // {\n  //   path: \"/icons\",\n  //   name: \"Icons\",\n  //   icon: \"pe-7s-science\",\n  //   component: Icons,\n  //   layout: \"/dashboard\"\n  // },\n  // {\n  //   path: \"/maps\",\n  //   name: \"Maps\",\n  //   icon: \"pe-7s-map-marker\",\n  //   component: Maps,\n  //   layout: \"/dashboard\"\n  // },\n  // {\n  //   path: \"/notifications\",\n  //   name: \"Notifications\",\n  //   icon: \"pe-7s-bell\",\n  //   component: Notifications,\n  //   layout: \"/dashboard\"\n  // },\n  // {\n  //   upgrade: true,\n  //   path: \"/upgrade\",\n  //   name: \"Upgrade to PRO\",\n  //   icon: \"pe-7s-rocket\",\n  //   component: Upgrade,\n  //   layout: \"/dashboard\"\n  // }\n];\n\nexport default dashboardRoutes;\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport NotificationSystem from \"react-notification-system\";\n\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\n// import Footer from \"components/Footer/Footer\";\nimport Sidebar from \"components/Sidebar/Sidebar\";\n// import FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\n\nimport { style } from \"variables/Variables.jsx\";\n\nimport routes from \"routes.js\";\n\nimport image from \"assets/img/sidebar-3.jpg\";\n\nimport { api } from '../api'\nimport myInitObject from '../api'\n\nclass Admin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      _notificationSystem: null,\n      image: image,\n      color: \"black\",\n      hasImage: true,\n      fixedClasses: \"dropdown show-dropdown open\"\n    };\n  }\n  // handleNotificationClick = position => {\n  //   var color = Math.floor(Math.random() * 4 + 1);\n  //   var level;\n  //   switch (color) {\n  //     case 1:\n  //       level = \"success\";\n  //       break;\n  //     case 2:\n  //       level = \"warning\";\n  //       break;\n  //     case 3:\n  //       level = \"error\";\n  //       break;\n  //     case 4:\n  //       level = \"info\";\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  //   this.state._notificationSystem.addNotification({\n  //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n  //     message: (\n  //       <div>\n  //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n  //         every web developer.\n  //       </div>\n  //     ),\n  //     level: level,\n  //     position: position,\n  //     autoDismiss: 15\n  //   });\n  // };\n  getRoutes = routes => {\n    let routeArray = []\n    routes.map((data) => {\n      routeArray.push(data)\n      if (data.child === true) {\n        data.resources.map((prop) => {\n          routeArray.push(prop)\n        })\n      }\n    })\n    return routeArray.map((prop, key) => {\n      if (prop.layout === \"/dashboard\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            render={props => (\n              <prop.component\n                {...props}\n                handleClick={this.handleNotificationClick}\n              />\n            )}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    // return \"Brand\";\n  };\n  handleImageClick = image => {\n    this.setState({ image: image });\n  };\n  handleColorClick = color => {\n    this.setState({ color: color });\n  };\n  handleHasImage = hasImage => {\n    this.setState({ hasImage: hasImage });\n  };\n  handleFixedClick = () => {\n    if (this.state.fixedClasses === \"dropdown\") {\n      this.setState({ fixedClasses: \"dropdown show-dropdown open\" });\n    } else {\n      this.setState({ fixedClasses: \"dropdown\" });\n    }\n  };\n  componentDidMount() {\n    let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    if (currentUser === null) {\n      this.props.history.push('/login')\n      return;\n    }else{\n      api()\n      setInterval(() => {\n        api()\n      }, 300000);\n      \n    }\n\n    //   this.setState({ _notificationSystem: this.refs.notificationSystem });\n    //   var _notificationSystem = this.refs.notificationSystem;\n    //   var color = Math.floor(Math.random() * 4 + 1);\n    //   var level;\n    //   switch (color) {\n    //     case 1:\n    //       level = \"success\";\n    //       break;\n    //     case 2:\n    //       level = \"warning\";\n    //       break;\n    //     case 3:\n    //       level = \"error\";\n    //       break;\n    //     case 4:\n    //       level = \"info\";\n    //       break;\n    //     default:\n    //       break;\n    //   }\n    //   _notificationSystem.addNotification({\n    //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n    //     message: (\n    //       <div>\n    //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n    //         every web developer.\n    //       </div>\n    //     ),\n    //     level: level,\n    //     position: \"tr\",\n    //     autoDismiss: 15\n    //   });\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n    }\n    if (e.history.action === \"PUSH\") {\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n\n\n\n  render() {\n\n    return (\n      <div className=\"wrapper\">\n        <NotificationSystem ref=\"notificationSystem\" style={style} />\n        <Sidebar {...this.props} routes={routes} image={this.state.image}\n          color={this.state.color}\n          hasImage={this.state.hasImage} />\n        <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getBrandText(this.props.location.pathname)}\n          />\n          <Switch>{this.getRoutes(routes)}</Switch>\n          {/* <Footer /> */}\n          {/* <FixedPlugin\n            handleImageClick={this.handleImageClick}\n            handleColorClick={this.handleColorClick}\n            handleHasImage={this.handleHasImage}\n            bgColor={this.state[\"color\"]}\n            bgImage={this.state[\"image\"]}\n            mini={this.state[\"mini\"]}\n            handleFixedClick={this.handleFixedClick}\n            fixedClasses={this.state.fixedClasses}\n          /> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Admin;\n","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/css/animate.min.css\";\nimport \"./assets/sass/light-bootstrap-dashboard-react.scss?v=1.3.0\";\nimport \"./assets/css/demo.css\";\nimport \"./assets/css/pe-icon-7-stroke.css\";\nimport \"./assets/css/dashboard.css\";\nimport innerfilter from \"./views/filter/innerfilter\";\nimport Login from \"./views/login\";\n\n\nimport AdminLayout from \"./layouts/Admin.jsx\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/dashboard\" render={props => <AdminLayout {...props} />} />\n\n      <Route exact path=\"/dashboard/innerfilter\" component={innerfilter} />\n      <Route exact from=\"/login\" component={Login} />\n      {/* <Redirect from=\"/\" to=\"/admin/dashboard\" /> */}\n      {/* <Redirect from=\"/\" component={Login} /> */}\n      <Redirect from=\"/\" to=\"/login\"/>\n      {/* <Route exact path=\"/innerfilter\" component={innerfilter} /> */}\n\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}