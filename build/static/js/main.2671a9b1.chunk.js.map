{"version":3,"sources":["variables/Variables.jsx","assets/img/sidebar-3.jpg","../node_modules/typescript/lib sync","constant/config.js","views/filter/innerfilter.js","views/login/index.js","components/Navbars/AdminNavbarLinks.jsx","components/Navbars/AdminNavbar.jsx","components/Sidebar/Sidebar.jsx","views/Closeposition.js","views/Data.js","views/Openposition.js","views/TableList.jsx","views/Innerlogin.js","views/Dashboard.jsx","views/filter/filteredit.js","views/filter/filterdetail.js","views/filter/Filterprofile.js","views/swap/index.js","views/calculating/index.js","routes.js","layouts/Admin.jsx","index.js"],"names":["defaultWidth","window","screen","width","style","Wrapper","Containers","DefaultStyle","position","padding","zIndex","WebkitBoxSizing","MozBoxSizing","boxSizing","height","display","border","fontSize","WebkitFontSmoothing","fontFamily","fontWeight","color","tl","top","bottom","left","right","tr","tc","margin","marginLeft","bl","br","bc","NotificationItem","cursor","borderRadius","opacity","transition","WebkitTransform","transform","willChange","isHidden","isVisible","success","borderTop","backgroundColor","WebkitBoxShadow","MozBoxShadow","boxShadow","error","warning","info","Title","marginTop","MessageWrapper","marginRight","maxWidthwidth","Dismiss","float","lineHeight","outline","textAlign","Action","background","ActionWrapper","module","exports","thArray","tdArray","iconsArray","dataPie","labels","series","legendPie","names","types","dataSales","optionsSales","low","high","showArea","axisX","showGrid","lineSmooth","showLine","showPoint","fullWidth","chartPadding","responsiveSales","labelInterpolationFnc","value","legendSales","dataBar","optionsBar","seriesBarDistance","responsiveBar","legendBar","webpackEmptyContext","req","e","Error","code","keys","resolve","id","config","baseurl","axios","require","Innerfilter","props","handleDropdownChange","setState","selectValue","target","handleChangeDate","date","startDate","handleEndDate","state","endDate","handleChangeDateTo","startDateTo","handleEndDateTo","endDateTo","handleChange","event","Array","from","selectedOptions","item","renderAccountSelect","selectedAccountOption","allAccounts","Data","account","post","then","response","status","this","onHide","catch","options","map","data","label","login","placeholder","onChange","handleChangeAccount","handeChangeShowCommission","showCommission","showAddCommission","handleChangeAccountTo","selectedAccountOptionTo","renderAccountSelectTo","handleChangeCommissionAccount","selectedCommissionAccount","renderCommissionAccount","handleChangeMagicNumber","magicNumber","console","log","handleChangeMagicNumberTo","magicNumberTo","handleChangeSymbol","selectedSymbolOption","renderSymbolSelect","allSymbols","name","isMulti","handleChangeSymbolTo","selectedSymbolOptionTo","renderSymbolSelectTo","changeIncludeDefaultProperty","include","exclude","showMagicNumber","changeExcludeDefaultProperty","changeIncludeDefaultPropertyTo","includeTo","excludeTo","showMagicNumberTo","changeExcludeDefaultPropertyTo","profileName","showCommisoin","autoSyncClose","profileValues","nameError","tags","include_exclude_status","fetchfilterdata","self","get","rows","filter","profile_name","charAt","toUpperCase","slice","NotificationManager","listNotify","preventDefault","from_status","to_status","symbolFrom","symbolto","from_account_id","to_account_id","commission_acount_id","startdateFrom","enddateFrom","startdateTo","enddateTo","from_symbols","JSON","stringify","to_symbols","auto_close","from_magic_number","length","to_magic_number","from_include_exclude_status","to_include_exclude_status","createdAt","Date","updatedAt","className","Grid","fluid","onClick","crossClick","aria-hidden","type","handleprofileName","defaultChecked","handleChangeAutoSync","Row","Col","md","selected","isClearable","placeholderText","dateFormat","strictParsing","autoOk","checked","class","onValidationReject","validationRegex","inputProps","Button","variant","size","block","formDataSubmit","Component","Login","toogle","loginForm","handleClose","handleShow","setShow","createNotification","show","username","password","alert","persons","shwPwd","shwMsg","invalidUsername","invalidPassword","accountlist","bind","onSubmit","trim","userdetail","localStorage","setItem","history","push","message","err","parse","getItem","sm","Modal","disabled","AdminNavbarLinks","logout","clear","notification","Nav","NavItem","eventKey","href","NavDropdown","title","noCaret","MenuItem","pullRight","Header","mobileSidebarToggle","sidebarExists","document","documentElement","classList","toggle","node","createElement","onclick","parentElement","removeChild","body","appendChild","Navbar","Brand","brandText","Toggle","Collapse","Sidebar","menu","innerWidth","routeName","location","pathname","indexOf","updateDimensions","addEventListener","image","data-color","data-image","hasImage","routes","prop","key","redirect","upgrade","activeRoute","layout","path","to","activeClassName","icon","undefined","resources","sub","index","Closeposition","allHistoryRecord","fromHistoryOrderInfo","toHistoryOrderInfo","commissionHistoryOrderInfo","useState","isOpen2","setIsOpen2","fromSymbols","toSymbols","Object","entries","join","fromsum","tosum","commission","swap","profit","sumOfTotal","noRecord","total","isOpen","accountFromInfo","alias","displayType","thousandSeparator","decimalScale","accountToInfo","marginBottom","accountCommissionInfo","history_info","tablePage","items","lot","closed","price","textA","dashBoardPage","textB","Openposition","setIsOpen","allOpenRecord","fromOpenOrderInfo","toOpenOrderInfo","swapFrominfo","order_type","lots","open_value","swapToinfo","intervalSet","timerWaitInterval","TableList","fetchDataAccordingSymbols","symbol","filterlist","selectedOption","renderSymbols","uniqueSymbols","concat","i","ar","sumOfHistoryTotal","openfromsum","opentosum","sumOfOpenTotal","Dashboard","getAllAccounts","fetchActivefilterData","errorMassege","fetchAllOpenTrade","dateTime","filteredInfoTime","showData","accountDetailValue","accounts_details","currency","tableHeader","details","formData","json","legend","role","timerWait","Innerlogin","checkUserConnected","broker","connected","currentAddLogin","currentAddBroker","clearInterval","timerShow","fectheAllAccount","setIntervalCustom","content","innerHTML","setInterval","closebtn","swal","timer","button","handleCloseEdit","editForm","handleCloseDetail","detailForm","createTr","scope","launched","viewFilter","editFilter","onUpdate","test","text","user","edituser","editserver","editalias","editData","editstatus","Body","closeButton","editAlias","FilterEdite","l","rules","required","abc","from_symbol","to_symbol","all_from_symbols","all_to_symbols","fromSymbol","toSymbol","c","moment","FilterDetail","showMagicNumberFrom","format","Filterprofile","showInnerfilter","createWariningNotification","filterData","activateClick","deactivateClick","deleteFilter","deleteData","editeData","showDelete","showEdit","detailData","newDate","deletepopupClick","deletepopupclose","Swap","dashboardRoutes","component","Admin","getRoutes","render","handleClick","handleNotificationClick","getBrandText","handleImageClick","handleColorClick","handleHasImage","handleFixedClick","fixedClasses","_notificationSystem","action","scrollTop","scrollingElement","refs","mainPanel","ref","AdminNavbar","ReactDOM","exact","innerfilter","getElementById"],"mappings":"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,kBACA,aACA,mBACA,aACA,cACA,eACA,qBACA,iBACA,cACA,cACA,eACA,kBACA,eACA,iBACA,eACA,cACA,YACA,eACA,aACA,qBACA,aACA,cACA,kBACA,uBACA,YACA,qBACA,WACA,iBACA,mBACA,wBACA,cACA,oBACA,eACA,2BACA,cACA,mBACA,oBACA,0BACA,iBACA,mBACA,eACA,0BACA,iBACA,eACA,aACA,gBACA,gBACA,kBACA,cACA,aACA,eACA,eACA,iBACA,cACA,cACA,cACA,eACA,eACA,YACA,cACA,kBACA,aACA,gBACA,eACA,gBACA,gBACA,cACA,eACA,eACA,aACA,gBACA,aACA,eACA,eACA,gBACA,iBACA,sBACA,kBACA,cACA,cACA,cACA,gBACA,aACA,aACA,cACA,cACA,kBACA,cACA,aACA,mBACA,aACA,YACA,cACA,YACA,sBACA,YACA,cACA,aACA,YACA,oBACA,oBACA,oBACA,cACA,qBACA,iBACA,aACA,aACA,mBACA,kBACA,cACA,cACA,aACA,aACA,gBACA,cACA,aACA,YACA,mBACA,aACA,kBACA,uBACA,eACA,aACA,aACA,aACA,gBACA,aACA,aACA,cACA,aACA,eACA,aACA,aACA,aACA,cACA,cACA,eACA,eACA,eACA,cACA,eACA,cACA,gBACA,aACA,eACA,aACA,eACA,aACA,gBACA,gBACA,aACA,aACA,eACA,iBACA,iBACA,iBACA,iBACA,aACA,YACA,gBACA,aACA,eACA,kBACA,eACA,gBACA,gBACA,eACA,cACA,cACA,cACA,aACA,aACA,eACA,aACA,mBACA,gBACA,aACA,aACA,kBACA,gBACA,aACA,gBACA,aACA,aACA,kBACA,eACA,eACA,cACA,iBAwHAC,QA/GY,CACZC,OAAQ,CAAC,MAAO,MAAO,OACvBC,OAAQ,CAAC,GAAI,GAAI,KA8GjBC,UA5Gc,CACdC,MAAO,CAAC,OAAQ,SAAU,eAC1BC,MAAO,CAAC,OAAQ,SAAU,YA2G1BC,UAvGc,CACdL,OAAQ,CACN,SACA,UACA,SACA,SACA,SACA,UA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","file":"static/js/main.2671a9b1.chunk.js","sourcesContent":["/*!\r\n\r\n=========================================================\r\n* Light Bootstrap Dashboard React - v1.3.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\n//\r\n// //\r\n// // // For notifications\r\n// //\r\n//\r\nvar defaultWidth =\r\n  window.screen.width > 768\r\n    ? (window.screen.width * 1) / 3\r\n    : window.screen.width;\r\n\r\nvar style = {\r\n  Wrapper: {},\r\n  Containers: {\r\n    DefaultStyle: {\r\n      position: \"fixed\",\r\n      width: defaultWidth,\r\n      padding: \"10px 10px 10px 20px\",\r\n      zIndex: 9998,\r\n      WebkitBoxSizing: \"\",\r\n      MozBoxSizing: \"\",\r\n      boxSizing: \"\",\r\n      height: \"auto\",\r\n      display: \"inline-block\",\r\n      border: \"0\",\r\n      fontSize: \"14px\",\r\n      WebkitFontSmoothing: \"antialiased\",\r\n      fontFamily: '\"Roboto\",\"Helvetica Neue\",Arial,sans-serif',\r\n      fontWeight: \"400\",\r\n      color: \"#FFFFFF\"\r\n    },\r\n\r\n    tl: {\r\n      top: \"0px\",\r\n      bottom: \"auto\",\r\n      left: \"0px\",\r\n      right: \"auto\"\r\n    },\r\n\r\n    tr: {\r\n      top: \"0px\",\r\n      bottom: \"auto\",\r\n      left: \"auto\",\r\n      right: \"0px\"\r\n    },\r\n\r\n    tc: {\r\n      top: \"0px\",\r\n      bottom: \"auto\",\r\n      margin: \"0 auto\",\r\n      left: \"50%\",\r\n      marginLeft: -(defaultWidth / 2)\r\n    },\r\n\r\n    bl: {\r\n      top: \"auto\",\r\n      bottom: \"0px\",\r\n      left: \"0px\",\r\n      right: \"auto\"\r\n    },\r\n\r\n    br: {\r\n      top: \"auto\",\r\n      bottom: \"0px\",\r\n      left: \"auto\",\r\n      right: \"0px\"\r\n    },\r\n\r\n    bc: {\r\n      top: \"auto\",\r\n      bottom: \"0px\",\r\n      margin: \"0 auto\",\r\n      left: \"50%\",\r\n      marginLeft: -(defaultWidth / 2)\r\n    }\r\n  },\r\n\r\n  NotificationItem: {\r\n    DefaultStyle: {\r\n      position: \"relative\",\r\n      width: \"100%\",\r\n      cursor: \"pointer\",\r\n      borderRadius: \"4px\",\r\n      fontSize: \"14px\",\r\n      margin: \"10px 0 0\",\r\n      padding: \"10px\",\r\n      display: \"block\",\r\n      WebkitBoxSizing: \"border-box\",\r\n      MozBoxSizing: \"border-box\",\r\n      boxSizing: \"border-box\",\r\n      opacity: 0,\r\n      transition: \"all 0.5s ease-in-out\",\r\n      WebkitTransform: \"translate3d(0, 0, 0)\",\r\n      transform: \"translate3d(0, 0, 0)\",\r\n      willChange: \"transform, opacity\",\r\n\r\n      isHidden: {\r\n        opacity: 0\r\n      },\r\n\r\n      isVisible: {\r\n        opacity: 1\r\n      }\r\n    },\r\n\r\n    success: {\r\n      borderTop: 0,\r\n      backgroundColor: \"#a1e82c\",\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0\r\n    },\r\n\r\n    error: {\r\n      borderTop: 0,\r\n      backgroundColor: \"#fc727a\",\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0\r\n    },\r\n\r\n    warning: {\r\n      borderTop: 0,\r\n      backgroundColor: \"#ffbc67\",\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0\r\n    },\r\n\r\n    info: {\r\n      borderTop: 0,\r\n      backgroundColor: \"#63d8f1\",\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0\r\n    }\r\n  },\r\n\r\n  Title: {\r\n    DefaultStyle: {\r\n      fontSize: \"30px\",\r\n      margin: \"0\",\r\n      padding: 0,\r\n      fontWeight: \"bold\",\r\n      color: \"#FFFFFF\",\r\n      display: \"block\",\r\n      left: \"15px\",\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      marginTop: \"-15px\"\r\n    }\r\n  },\r\n\r\n  MessageWrapper: {\r\n    DefaultStyle: {\r\n      marginLeft: \"55px\",\r\n      marginRight: \"30px\",\r\n      padding: \"0 12px 0 0\",\r\n      color: \"#FFFFFF\",\r\n      maxWidthwidth: \"89%\"\r\n    }\r\n  },\r\n\r\n  Dismiss: {\r\n    DefaultStyle: {\r\n      fontFamily: \"inherit\",\r\n      fontSize: \"21px\",\r\n      color: \"#000\",\r\n      float: \"right\",\r\n      position: \"absolute\",\r\n      right: \"10px\",\r\n      top: \"50%\",\r\n      marginTop: \"-13px\",\r\n      backgroundColor: \"#FFFFFF\",\r\n      display: \"block\",\r\n      borderRadius: \"50%\",\r\n      opacity: \".4\",\r\n      lineHeight: \"11px\",\r\n      width: \"25px\",\r\n      height: \"25px\",\r\n      outline: \"0 !important\",\r\n      textAlign: \"center\",\r\n      padding: \"6px 3px 3px 3px\",\r\n      fontWeight: \"300\",\r\n      marginLeft: \"65px\"\r\n    },\r\n\r\n    success: {\r\n      // color: '#f0f5ea',\r\n      // backgroundColor: '#a1e82c'\r\n    },\r\n\r\n    error: {\r\n      // color: '#f4e9e9',\r\n      // backgroundColor: '#fc727a'\r\n    },\r\n\r\n    warning: {\r\n      // color: '#f9f6f0',\r\n      // backgroundColor: '#ffbc67'\r\n    },\r\n\r\n    info: {\r\n      // color: '#e8f0f4',\r\n      // backgroundColor: '#63d8f1'\r\n    }\r\n  },\r\n\r\n  Action: {\r\n    DefaultStyle: {\r\n      background: \"#ffffff\",\r\n      borderRadius: \"2px\",\r\n      padding: \"6px 20px\",\r\n      fontWeight: \"bold\",\r\n      margin: \"10px 0 0 0\",\r\n      border: 0\r\n    },\r\n\r\n    success: {\r\n      backgroundColor: \"#a1e82c\",\r\n      color: \"#ffffff\"\r\n    },\r\n\r\n    error: {\r\n      backgroundColor: \"#fc727a\",\r\n      color: \"#ffffff\"\r\n    },\r\n\r\n    warning: {\r\n      backgroundColor: \"#ffbc67\",\r\n      color: \"#ffffff\"\r\n    },\r\n\r\n    info: {\r\n      backgroundColor: \"#63d8f1\",\r\n      color: \"#ffffff\"\r\n    }\r\n  },\r\n\r\n  ActionWrapper: {\r\n    DefaultStyle: {\r\n      margin: 0,\r\n      padding: 0\r\n    }\r\n  }\r\n};\r\n\r\n//\r\n// //\r\n// // // For tables\r\n// //\r\n//\r\nconst thArray = [\"ID\", \"Name\", \"Salary\", \"Country\", \"City\"];\r\nconst tdArray = [\r\n  [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\", \"Oud-Turnhout\"],\r\n  [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\", \"Sinaai-Waas\"],\r\n  [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\", \"Baileux\"],\r\n  [\"4\", \"Philip Chaney\", \"$38,735\", \"Korea, South\", \"Overland Park\"],\r\n  [\"5\", \"Doris Greene\", \"$63,542\", \"Malawi\", \"Feldkirchen in Kärnten\"],\r\n  [\"6\", \"Mason Porter\", \"$78,615\", \"Chile\", \"Gloucester\"]\r\n];\r\n\r\n//\r\n// //\r\n// // // For icons\r\n// //\r\n//\r\nconst iconsArray = [\r\n  \"pe-7s-album\",\r\n  \"pe-7s-arc\",\r\n  \"pe-7s-back-2\",\r\n  \"pe-7s-bandaid\",\r\n  \"pe-7s-car\",\r\n  \"pe-7s-diamond\",\r\n  \"pe-7s-door-lock\",\r\n  \"pe-7s-eyedropper\",\r\n  \"pe-7s-female\",\r\n  \"pe-7s-gym\",\r\n  \"pe-7s-hammer\",\r\n  \"pe-7s-headphones\",\r\n  \"pe-7s-helm\",\r\n  \"pe-7s-hourglass\",\r\n  \"pe-7s-leaf\",\r\n  \"pe-7s-magic-wand\",\r\n  \"pe-7s-male\",\r\n  \"pe-7s-map-2\",\r\n  \"pe-7s-next-2\",\r\n  \"pe-7s-paint-bucket\",\r\n  \"pe-7s-pendrive\",\r\n  \"pe-7s-photo\",\r\n  \"pe-7s-piggy\",\r\n  \"pe-7s-plugin\",\r\n  \"pe-7s-refresh-2\",\r\n  \"pe-7s-rocket\",\r\n  \"pe-7s-settings\",\r\n  \"pe-7s-shield\",\r\n  \"pe-7s-smile\",\r\n  \"pe-7s-usb\",\r\n  \"pe-7s-vector\",\r\n  \"pe-7s-wine\",\r\n  \"pe-7s-cloud-upload\",\r\n  \"pe-7s-cash\",\r\n  \"pe-7s-close\",\r\n  \"pe-7s-bluetooth\",\r\n  \"pe-7s-cloud-download\",\r\n  \"pe-7s-way\",\r\n  \"pe-7s-close-circle\",\r\n  \"pe-7s-id\",\r\n  \"pe-7s-angle-up\",\r\n  \"pe-7s-wristwatch\",\r\n  \"pe-7s-angle-up-circle\",\r\n  \"pe-7s-world\",\r\n  \"pe-7s-angle-right\",\r\n  \"pe-7s-volume\",\r\n  \"pe-7s-angle-right-circle\",\r\n  \"pe-7s-users\",\r\n  \"pe-7s-angle-left\",\r\n  \"pe-7s-user-female\",\r\n  \"pe-7s-angle-left-circle\",\r\n  \"pe-7s-up-arrow\",\r\n  \"pe-7s-angle-down\",\r\n  \"pe-7s-switch\",\r\n  \"pe-7s-angle-down-circle\",\r\n  \"pe-7s-scissors\",\r\n  \"pe-7s-wallet\",\r\n  \"pe-7s-safe\",\r\n  \"pe-7s-volume2\",\r\n  \"pe-7s-volume1\",\r\n  \"pe-7s-voicemail\",\r\n  \"pe-7s-video\",\r\n  \"pe-7s-user\",\r\n  \"pe-7s-upload\",\r\n  \"pe-7s-unlock\",\r\n  \"pe-7s-umbrella\",\r\n  \"pe-7s-trash\",\r\n  \"pe-7s-tools\",\r\n  \"pe-7s-timer\",\r\n  \"pe-7s-ticket\",\r\n  \"pe-7s-target\",\r\n  \"pe-7s-sun\",\r\n  \"pe-7s-study\",\r\n  \"pe-7s-stopwatch\",\r\n  \"pe-7s-star\",\r\n  \"pe-7s-speaker\",\r\n  \"pe-7s-signal\",\r\n  \"pe-7s-shuffle\",\r\n  \"pe-7s-shopbag\",\r\n  \"pe-7s-share\",\r\n  \"pe-7s-server\",\r\n  \"pe-7s-search\",\r\n  \"pe-7s-film\",\r\n  \"pe-7s-science\",\r\n  \"pe-7s-disk\",\r\n  \"pe-7s-ribbon\",\r\n  \"pe-7s-repeat\",\r\n  \"pe-7s-refresh\",\r\n  \"pe-7s-add-user\",\r\n  \"pe-7s-refresh-cloud\",\r\n  \"pe-7s-paperclip\",\r\n  \"pe-7s-radio\",\r\n  \"pe-7s-note2\",\r\n  \"pe-7s-print\",\r\n  \"pe-7s-network\",\r\n  \"pe-7s-prev\",\r\n  \"pe-7s-mute\",\r\n  \"pe-7s-power\",\r\n  \"pe-7s-medal\",\r\n  \"pe-7s-portfolio\",\r\n  \"pe-7s-like2\",\r\n  \"pe-7s-plus\",\r\n  \"pe-7s-left-arrow\",\r\n  \"pe-7s-play\",\r\n  \"pe-7s-key\",\r\n  \"pe-7s-plane\",\r\n  \"pe-7s-joy\",\r\n  \"pe-7s-photo-gallery\",\r\n  \"pe-7s-pin\",\r\n  \"pe-7s-phone\",\r\n  \"pe-7s-plug\",\r\n  \"pe-7s-pen\",\r\n  \"pe-7s-right-arrow\",\r\n  \"pe-7s-paper-plane\",\r\n  \"pe-7s-delete-user\",\r\n  \"pe-7s-paint\",\r\n  \"pe-7s-bottom-arrow\",\r\n  \"pe-7s-notebook\",\r\n  \"pe-7s-note\",\r\n  \"pe-7s-next\",\r\n  \"pe-7s-news-paper\",\r\n  \"pe-7s-musiclist\",\r\n  \"pe-7s-music\",\r\n  \"pe-7s-mouse\",\r\n  \"pe-7s-more\",\r\n  \"pe-7s-moon\",\r\n  \"pe-7s-monitor\",\r\n  \"pe-7s-micro\",\r\n  \"pe-7s-menu\",\r\n  \"pe-7s-map\",\r\n  \"pe-7s-map-marker\",\r\n  \"pe-7s-mail\",\r\n  \"pe-7s-mail-open\",\r\n  \"pe-7s-mail-open-file\",\r\n  \"pe-7s-magnet\",\r\n  \"pe-7s-loop\",\r\n  \"pe-7s-look\",\r\n  \"pe-7s-lock\",\r\n  \"pe-7s-lintern\",\r\n  \"pe-7s-link\",\r\n  \"pe-7s-like\",\r\n  \"pe-7s-light\",\r\n  \"pe-7s-less\",\r\n  \"pe-7s-keypad\",\r\n  \"pe-7s-junk\",\r\n  \"pe-7s-info\",\r\n  \"pe-7s-home\",\r\n  \"pe-7s-help2\",\r\n  \"pe-7s-help1\",\r\n  \"pe-7s-graph3\",\r\n  \"pe-7s-graph2\",\r\n  \"pe-7s-graph1\",\r\n  \"pe-7s-graph\",\r\n  \"pe-7s-global\",\r\n  \"pe-7s-gleam\",\r\n  \"pe-7s-glasses\",\r\n  \"pe-7s-gift\",\r\n  \"pe-7s-folder\",\r\n  \"pe-7s-flag\",\r\n  \"pe-7s-filter\",\r\n  \"pe-7s-file\",\r\n  \"pe-7s-expand1\",\r\n  \"pe-7s-exapnd2\",\r\n  \"pe-7s-edit\",\r\n  \"pe-7s-drop\",\r\n  \"pe-7s-drawer\",\r\n  \"pe-7s-download\",\r\n  \"pe-7s-display2\",\r\n  \"pe-7s-display1\",\r\n  \"pe-7s-diskette\",\r\n  \"pe-7s-date\",\r\n  \"pe-7s-cup\",\r\n  \"pe-7s-culture\",\r\n  \"pe-7s-crop\",\r\n  \"pe-7s-credit\",\r\n  \"pe-7s-copy-file\",\r\n  \"pe-7s-config\",\r\n  \"pe-7s-compass\",\r\n  \"pe-7s-comment\",\r\n  \"pe-7s-coffee\",\r\n  \"pe-7s-cloud\",\r\n  \"pe-7s-clock\",\r\n  \"pe-7s-check\",\r\n  \"pe-7s-chat\",\r\n  \"pe-7s-cart\",\r\n  \"pe-7s-camera\",\r\n  \"pe-7s-call\",\r\n  \"pe-7s-calculator\",\r\n  \"pe-7s-browser\",\r\n  \"pe-7s-box2\",\r\n  \"pe-7s-box1\",\r\n  \"pe-7s-bookmarks\",\r\n  \"pe-7s-bicycle\",\r\n  \"pe-7s-bell\",\r\n  \"pe-7s-battery\",\r\n  \"pe-7s-ball\",\r\n  \"pe-7s-back\",\r\n  \"pe-7s-attention\",\r\n  \"pe-7s-anchor\",\r\n  \"pe-7s-albums\",\r\n  \"pe-7s-alarm\",\r\n  \"pe-7s-airplay\"\r\n];\r\n\r\n//\r\n// //\r\n// // // // For dashboard's charts\r\n// //\r\n//\r\n// Data for Pie Chart\r\nvar dataPie = {\r\n  labels: [\"40%\", \"20%\", \"40%\"],\r\n  series: [40, 20, 40]\r\n};\r\nvar legendPie = {\r\n  names: [\"Open\", \"Bounce\", \"Unsubscribe\"],\r\n  types: [\"info\", \"danger\", \"warning\"]\r\n};\r\n\r\n// Data for Line Chart\r\nvar dataSales = {\r\n  labels: [\r\n    \"9:00AM\",\r\n    \"12:00AM\",\r\n    \"3:00PM\",\r\n    \"6:00PM\",\r\n    \"9:00PM\",\r\n    \"12:00PM\",\r\n    \"3:00AM\",\r\n    \"6:00AM\"\r\n  ],\r\n  series: [\r\n    [287, 385, 490, 492, 554, 586, 698, 695],\r\n    [67, 152, 143, 240, 287, 335, 435, 437],\r\n    [23, 113, 67, 108, 190, 239, 307, 308]\r\n  ]\r\n};\r\nvar optionsSales = {\r\n  low: 0,\r\n  high: 800,\r\n  showArea: false,\r\n  height: \"245px\",\r\n  axisX: {\r\n    showGrid: false\r\n  },\r\n  lineSmooth: true,\r\n  showLine: true,\r\n  showPoint: true,\r\n  fullWidth: true,\r\n  chartPadding: {\r\n    right: 50\r\n  }\r\n};\r\nvar responsiveSales = [\r\n  [\r\n    \"screen and (max-width: 640px)\",\r\n    {\r\n      axisX: {\r\n        labelInterpolationFnc: function(value) {\r\n          return value[0];\r\n        }\r\n      }\r\n    }\r\n  ]\r\n];\r\nvar legendSales = {\r\n  names: [\"Open\", \"Click\", \"Click Second Time\"],\r\n  types: [\"info\", \"danger\", \"warning\"]\r\n};\r\n\r\n// Data for Bar Chart\r\nvar dataBar = {\r\n  labels: [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"Mai\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n  ],\r\n  series: [\r\n    [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895],\r\n    [412, 243, 280, 580, 453, 353, 300, 364, 368, 410, 636, 695]\r\n  ]\r\n};\r\nvar optionsBar = {\r\n  seriesBarDistance: 10,\r\n  axisX: {\r\n    showGrid: false\r\n  },\r\n  height: \"245px\"\r\n};\r\nvar responsiveBar = [\r\n  [\r\n    \"screen and (max-width: 640px)\",\r\n    {\r\n      seriesBarDistance: 5,\r\n      axisX: {\r\n        labelInterpolationFnc: function(value) {\r\n          return value[0];\r\n        }\r\n      }\r\n    }\r\n  ]\r\n];\r\nvar legendBar = {\r\n  names: [\"Tesla Model S\", \"BMW 5 Series\"],\r\n  types: [\"info\", \"danger\"]\r\n};\r\n\r\nmodule.exports = {\r\n  style, // For notifications (App container and Notifications view)\r\n  thArray,\r\n  tdArray, // For tables (TableList view)\r\n  iconsArray, // For icons (Icons view)\r\n  dataPie,\r\n  legendPie,\r\n  dataSales,\r\n  optionsSales,\r\n  responsiveSales,\r\n  legendSales,\r\n  dataBar,\r\n  optionsBar,\r\n  responsiveBar,\r\n  legendBar // For charts (Dashboard view)\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/sidebar-3.34535b95.jpg\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 585;","const config= {\r\n    baseurl:(process.env.NODE_ENV==\"development\") ? \"http://localhost:4000/api\": \"https://top4.trade/api\"\r\n}\r\n\r\nexport default config;","import React, { Component } from 'react';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport config from '../../constant/config.js';\r\nimport Select from 'react-select'\r\nimport TagsInput from 'react-tagsinput'\r\nimport 'react-tagsinput/react-tagsinput.css'\r\nimport { times } from 'chartist';\r\n// import DateFnsUtils from '@date-io/date-fns';\r\n// import {\r\n//     // DatePicker,\r\n//     KeyboardDatePicker,\r\n//     // TimePicker,\r\n//     DateTimePicker,\r\n//     MuiPickersUtilsProvider,\r\n// } from '@material-ui/pickers';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nconst axios = require('axios');\r\n\r\n// import { Multiselect } from \"multiselect-react-dropdown\";\r\n\r\n// const options = [\r\n//     { value: 'chocolate', label: 'Chocolate' },\r\n//     { value: 'strawberry', label: 'Strawberry' },\r\n//     { value: 'vanilla', label: 'Vanilla' }\r\n// ]\r\n\r\nclass Innerfilter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // startDate: new Date(),\r\n            // endDate: new Date(),\r\n            selectedAccountOption: null,\r\n            selectedSymbolOption: null,\r\n            selectedSymbolOptionTo: null,\r\n            selectedAccountOptionTo: null,\r\n            selectedCommissionAccount: null,\r\n            startDate: null,\r\n            endDate: null,\r\n            startDateTo: null,\r\n            endDateTo: null,\r\n            allAccounts: [],\r\n            allSymbols: [],\r\n            profileName: '',\r\n            error: '',\r\n            showCommisoin: false,\r\n            showAddCommission: false,\r\n            autoSyncClose: false,\r\n            profileValues: [],\r\n            nameError: false,\r\n            magicNumber: [],\r\n            magicNumberTo: [],\r\n            showMagicNumber: false,\r\n            showMagicNumberTo: false,\r\n            tags: [],\r\n            include_exclude_status: '',\r\n            exclude: false,\r\n            include: false,\r\n            excludeTo: false,\r\n            includeTo: false,\r\n            // options: [{ name: 'Srigar', id: 1 }, { name: 'Sam', id: 2 }],\r\n\r\n            // plainArray: [\"Option 1\", \"Option 2\", \"Option 3\", \"Option 4\", \"Option 5\"],\r\n            // objectArray: [\r\n            //     { key: \"Option 1\", cat: \"Group 1\" },\r\n            //     { key: \"Option 2\", cat: \"Group 1\" },\r\n            //     { key: \"Option 3\", cat: \"Group 1\" },\r\n            //     { key: \"Option 4\", cat: \"Group 2\" },\r\n            //     { key: \"Option 5\", cat: \"Group 2\" },\r\n            //     { key: \"Option 6\", cat: \"Group 2\" },\r\n            //     { key: \"Option 7\", cat: \"Group 2\" }\r\n            // ],\r\n            // selectedValues: [\r\n            //     { key: \"Option 1\", cat: \"Group 1\" },\r\n            //     { key: \"Option 2\", cat: \"Group 1\" }\r\n            // ]\r\n        };\r\n\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.fetchfilterdata()\r\n        let self = this;\r\n        axios.get(config.baseurl + '/accounts/fetchAllAccounts')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.setState({ allAccounts: response.data.rows })\r\n                }\r\n            })\r\n        axios.get(config.baseurl + '/accounts/fetchAllSymbol')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.setState({ allSymbols: response.data.rows })\r\n                }\r\n            })\r\n    }\r\n    // addItem = () => {\r\n    //     this.selectedValues.push({ key: \"Option 3\", cat: \"Group 1\" });\r\n    // }\r\n    handleDropdownChange = (e) => {\r\n        this.setState({ selectValue: e.target.value });\r\n    }\r\n    handleChangeDate = date => {\r\n        this.setState({\r\n            startDate: date\r\n        });\r\n    }\r\n\r\n    handleEndDate = date => {\r\n        if (date < this.state.startDate && date != null) {\r\n            this.setState({ error: 'enddate', endDate: \"\" })\r\n            return\r\n        }\r\n        this.setState({\r\n            error: '',\r\n            endDate: date\r\n        })\r\n    }\r\n    handleChangeDateTo = date => {\r\n\r\n        this.setState({\r\n            startDateTo: date,\r\n            error: ''\r\n        });\r\n    }\r\n    handleEndDateTo = date => {\r\n        if (date < this.state.startDateTo && date != null) {\r\n            this.setState({ error: 'enddateto', endDateTo: \"\" })\r\n            return\r\n        }\r\n        this.setState({\r\n            error: '',\r\n            endDateTo: date\r\n        });\r\n    }\r\n    handleChange = (event) => {\r\n        //this.setState({value: event.option});\r\n        this.setState({ value: Array.from(event.target.selectedOptions, (item) => item.value) });\r\n    }\r\n    renderAccountSelect = () => {\r\n        const { selectedAccountOption, allAccounts } = this.state;\r\n        let Data = {\r\n            account: selectedAccountOption\r\n        }\r\n        axios.post(config.baseurl + '/filter/fetchSymbolData', Data)\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    this.props.onHide()\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n            });\r\n\r\n        let options = allAccounts.map(data => {\r\n            return { value: data.id, label: data.login };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Account...\"\r\n                value={selectedAccountOption}\r\n                onChange={this.handleChangeAccount}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n    handeChangeShowCommission = (e) => {\r\n        this.setState({ showCommission: true }, () => {\r\n            this.setState({ showAddCommission: !this.state.showAddCommission })\r\n        })\r\n    }\r\n    handleChangeAccountTo = selectedAccountOptionTo => {\r\n        if (selectedAccountOptionTo.label == this.state.selectedAccountOption.label) {\r\n            this.setState({ error: 'err' })\r\n        } else\r\n            this.setState({ selectedAccountOptionTo, error: '' });\r\n    };\r\n    renderAccountSelectTo = () => {\r\n        const { selectedAccountOptionTo, allAccounts } = this.state;\r\n\r\n        let options = allAccounts.map(data => {\r\n            return { value: data.id, label: data.login };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Account...\"\r\n                value={selectedAccountOptionTo}\r\n                onChange={this.handleChangeAccountTo}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n    handleChangeCommissionAccount = selectedCommissionAccount => {\r\n        this.setState({ selectedCommissionAccount, });\r\n    };\r\n    renderCommissionAccount = () => {\r\n        const { selectedCommissionAccount, allAccounts } = this.state;\r\n\r\n        let options = allAccounts.map(data => {\r\n            return { value: data.id, label: data.login };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Account...\"\r\n                value={selectedCommissionAccount}\r\n                onChange={this.handleChangeCommissionAccount}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n    handleChangeMagicNumber = (magicNumber) => {\r\n\r\n        console.log(magicNumber)\r\n\r\n        // if(re.test(tags))\r\n        this.setState({ magicNumber })\r\n    }\r\n    handleChangeMagicNumberTo = (magicNumberTo) => {\r\n\r\n        console.log(magicNumberTo)\r\n\r\n        // if(re.test(tags))\r\n        this.setState({ magicNumberTo })\r\n    }\r\n\r\n\r\n    handleChangeAccount = selectedAccountOption => {\r\n        this.setState({ selectedAccountOption });\r\n    };\r\n    handleChangeSymbol = selectedSymbolOption => {\r\n        this.setState({ selectedSymbolOption });\r\n    };\r\n    renderSymbolSelect = () => {\r\n        const { selectedSymbolOption, allSymbols } = this.state;\r\n        let options = allSymbols.map(data => {\r\n            return { value: data.name, label: data.name };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Symbol...\"\r\n                value={selectedSymbolOption}\r\n                isMulti\r\n                onChange={this.handleChangeSymbol}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n    handleChangeSymbolTo = selectedSymbolOptionTo => {\r\n        this.setState({ selectedSymbolOptionTo });\r\n    };\r\n    renderSymbolSelectTo = () => {\r\n        const { selectedSymbolOptionTo, allSymbols } = this.state;\r\n        let options = allSymbols.map(data => {\r\n            return { value: data.name, label: data.name };\r\n        })\r\n\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Symbol...\"\r\n                value={selectedSymbolOptionTo}\r\n                isMulti\r\n                onChange={this.handleChangeSymbolTo}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n    fetchfilterdata() {\r\n        let self = this;\r\n        axios.get(config.baseurl + '/filter/fetchfilterdata')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n\r\n                    self.setState({ profileValues: response.data.rows })\r\n                }\r\n            })\r\n    }\r\n\r\n    handleprofileName(e) {\r\n        this.setState({ nameError: false })\r\n        this.state.profileValues.filter((data) => {\r\n            if (data.profile_name !== e.target.value) {\r\n                this.setState({ profileName: e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1), error: '', })\r\n            }\r\n            else {\r\n                this.setState({ nameError: true }, () => {\r\n                })\r\n                NotificationManager.listNotify = [];\r\n                NotificationManager.error('Profile Already Exist!');\r\n\r\n            }\r\n        })\r\n    }\r\n    // handlemagicNumber(e){\r\n    //     this.setState({ magicNumber: e.target.value})\r\n    // }\r\n\r\n    // handlemagicNumberTo(e){\r\n    //     this.setState({ magicNumberTo: e.target.value})\r\n    // }\r\n\r\n    formDataSubmit(e) {\r\n\r\n        e.preventDefault();\r\n\r\n\r\n        console.log(this.state.include, this.state.exclude)\r\n\r\n        let from_status = this.state.include === true && this.state.exclude === false ? 1 : this.state.exclude === true && this.state.include === false ? 2 : 0\r\n\r\n\r\n        let to_status = this.state.includeTo === true && this.state.excludeTo === false ? 1 : this.state.excludeTo === true && this.state.includeTo === false ? 2 : 0\r\n        let self = this\r\n\r\n\r\n        if (this.state.profileName == null || this.state.profileName == '') {\r\n            this.setState({ error: 'profileName' })\r\n            return\r\n        }\r\n        else if (this.state.selectedAccountOption == null || this.state.selectedAccountOption == '') {\r\n            this.setState({ error: 'accountoption' })\r\n            return\r\n        }\r\n\r\n        else if (this.state.startDate == null || this.state.startDate == '') {\r\n            this.setState({ error: 'startdate' })\r\n            return\r\n        } else if (this.state.selectedSymbolOption == null || this.state.selectedSymbolOption == '') {\r\n            this.setState({ error: 'symbolselect' })\r\n            return\r\n        }\r\n        else if (this.state.selectedAccountOptionTo == null || this.state.selectedAccountOptionTo == '') {\r\n            this.setState({ error: 'accountoptionto' })\r\n            return\r\n        }\r\n\r\n        else if (this.state.startDateTo == null || this.state.startDateTo == '') {\r\n            this.setState({ error: 'startDateTo' })\r\n            return\r\n        }\r\n        else if (this.state.selectedSymbolOptionTo == null || this.state.selectedSymbolOptionTo == '') {\r\n            this.setState({ error: 'selectedSymbolOptionTo' })\r\n            return\r\n        }\r\n        else if (this.state.nameError) {\r\n            NotificationManager.listNotify = [];\r\n            NotificationManager.error('Profile Name Already Exist!');\r\n        }\r\n        // else if(this.state.selectedCommissionAccount === null){\r\n        //     this.setState({ error: 'addComiission' })\r\n\r\n        // }\r\n        else {\r\n            this.setState({ error: ' ' })\r\n            let fromSymbol = this.state.selectedSymbolOption;\r\n            let symbolFrom = fromSymbol.map((data) => {\r\n                return data.value\r\n            })\r\n            let toSymbol = this.state.selectedSymbolOptionTo;\r\n            let symbolto = toSymbol.map((data) => {\r\n                return data.value\r\n            })\r\n\r\n            let Data = {\r\n                profile_name: this.state.profileName,\r\n                from_account_id: this.state.selectedAccountOption.value,\r\n                to_account_id: this.state.selectedAccountOptionTo.value,\r\n                commission_acount_id: this.state.showAddCommission ? this.state.selectedCommissionAccount.value : 0,\r\n                startdateFrom: this.state.startDate,\r\n                enddateFrom: this.state.endDate,\r\n                startdateTo: this.state.startDateTo,\r\n                enddateTo: this.state.endDateTo,\r\n                from_symbols: JSON.stringify(symbolFrom),\r\n                to_symbols: JSON.stringify(symbolto),\r\n                auto_close: this.state.autoSyncClose ? 1 : 0,\r\n                from_magic_number: this.state.magicNumber.length > 0 ? JSON.stringify(this.state.magicNumber) : 0,\r\n                to_magic_number: this.state.magicNumberTo.length > 0 ? JSON.stringify(this.state.magicNumberTo) : 0,\r\n                from_include_exclude_status: from_status,\r\n                to_include_exclude_status: to_status,\r\n                createdAt: new Date(),\r\n                updatedAt: new Date(),\r\n\r\n            }\r\n\r\n\r\n            axios.post(config.baseurl + '/filter/addfilterdata', Data)\r\n                .then(function (response) {\r\n                    if (response.status == 200) {\r\n                        self.props.onHide()\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n        }\r\n    }\r\n    crossClick(e) {\r\n        e.preventDefault();\r\n        this.props.onHide()\r\n    }\r\n    handleChangeAutoSync(e) {\r\n\r\n        this.setState({ autoSyncClose: !this.state.autoSyncClose }, () => {\r\n\r\n        })\r\n    }\r\n    // onChangeIncludeExcludeHandler = (e) => {\r\n    //     console.log(e.target)\r\n    // }\r\n    // onChangeIncludeExcludeHandler1 = (e) => {\r\n    //     console.log(e.target)\r\n    // }\r\n    changeIncludeDefaultProperty = () => {\r\n\r\n        this.setState({ include: !this.state.include, exclude: false }, () => {\r\n            console.log(this.state.include, this.state.exclude)\r\n        })\r\n        if (!this.state.include == true) {\r\n            this.setState({ showMagicNumber: true })\r\n        } else if (this.state.include == true) {\r\n            this.setState({ showMagicNumber: false })\r\n\r\n        }\r\n\r\n\r\n    }\r\n    changeExcludeDefaultProperty = () => {\r\n        this.setState({ exclude: !this.state.exclude, include: false }, () => {\r\n            console.log(this.state.include, this.state.exclude)\r\n\r\n        })\r\n        if (!this.state.exclude == true) {\r\n            this.setState({ showMagicNumber: true })\r\n        } else if (this.state.exclude == true) {\r\n            this.setState({ showMagicNumber: false })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    changeIncludeDefaultPropertyTo = () => {\r\n        this.setState({ includeTo: !this.state.includeTo, excludeTo: false }, () => {\r\n            console.log(this.state.includeTo, this.state.excludeTo)\r\n        })\r\n        if (!this.state.includeTo == true) {\r\n            this.setState({ showMagicNumberTo: true })\r\n        } else if (this.state.includeTo == true) {\r\n            this.setState({ showMagicNumberTo: false })\r\n\r\n        }\r\n    }\r\n    changeExcludeDefaultPropertyTo = () => {\r\n        this.setState({ excludeTo: !this.state.excludeTo, includeTo: false }, () => {\r\n            console.log(this.state.includeTo, this.state.excludeTo)\r\n\r\n        })\r\n        if (!this.state.excludeTo == true) {\r\n            this.setState({ showMagicNumberTo: true })\r\n        } else if (this.state.excludeTo == true) {\r\n            this.setState({ showMagicNumberTo: false })\r\n\r\n        }\r\n\r\n    }\r\n    render() {\r\n        console.log(this.state.exclude, this.state.exclude)\r\n        let s = this\r\n        return (\r\n            <>\r\n                <NotificationContainer />\r\n                <div className=\"content\">\r\n                    <Grid fluid>\r\n                        <div className=\"symbol-box\">\r\n                            <div className=\"cross_div\"><a onClick={(e) => this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\r\n                            <div className=\"terminal-text\" >\r\n                                <label className=\"pnameadjust\"> Profile Name </label>\r\n                                <input type=\"text\" name=\"profilename\" className=\"Itext\" placeholder=\"Type Profile Name\" onChange={(e) => this.handleprofileName(e)} />\r\n                                {(this.state.error == 'profileName') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Fill Your Profile Name </p>}\r\n\r\n\r\n                            </div>\r\n                            <div className=\"synclose\">\r\n                                <label className=\"checkbox-inline\"><input type=\"checkbox\" defaultChecked={this.state.autoSyncClose} name=\"changeAutoSync\" onChange={(e) => this.handleChangeAutoSync(e)} /><b>Auto Sync Close</b></label>\r\n                            </div>\r\n\r\n                            <form>\r\n                                <Row>\r\n                                    {/* <Col md={12}>\r\n                                        <div className=\"card\">\r\n                                            <div style={{ padding: '10px 20px 35px ', }}>\r\n                                                <div>\r\n                                                    <h3 className=\" text-center\">Filter By Magic Numbers</h3>\r\n                                                </div>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-md-6 text-center\">\r\n                                                        <button type=\"button\" class=\"text-center filter-add-button\">Include</button>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6 text-center btnspace\">\r\n                                                        <button type=\"button\" class=\"filter-add-button\">Exclude</button>\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col\">\r\n                                                            <div class=\"text-center  \">\r\n                                                                <input class=\"form-control input-css\" placeholder=\"Select Numbers\" type=\"number\"></input>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Col> */}\r\n                                    <Col md={6}>\r\n                                        <div className=\"card bottom\">\r\n                                            <div style={{ padding: '10px 20px 0px' }}>\r\n                                                <span style={{ fontWeight: 'bold' }}>Account A</span>\r\n                                            </div>\r\n                                            <table className=\"table mt20\">\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr\">\r\n                                                            <span className=\"accnt\">Account :</span>\r\n                                                        </td>\r\n\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '50%' }}>\r\n                                                            {/* <Multiselect\r\n                                                        options={objectArray}\r\n                                                        singleSelect\r\n                                                        displayValue=\"key\"\r\n                                                    /> */}\r\n                                                            {this.renderAccountSelect()}\r\n                                                            {(this.state.error == 'accountoption') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr \">\r\n                                                            <span className=\"accnt\">From:  </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center datepicker_filter\">\r\n                                                            <DatePicker\r\n                                                                selected={this.state.startDate}\r\n                                                                onChange={this.handleChangeDate}\r\n                                                                isClearable\r\n                                                                placeholderText=\"dd/mm/yyyy\"\r\n                                                                dateFormat=\"dd/MM/yyyy\"\r\n                                                                startDate={this.state.startDate}\r\n                                                                endDate={this.state.endDate}\r\n                                                                strictParsing\r\n                                                            />\r\n                                                             {/* <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                                            <KeyboardDatePicker\r\n                                                                // margin=\"normal\"\r\n                                                                clearable={false}\r\n                                                                id=\"date-picker-dialog\"\r\n                                                                label=\"dd/MM/yyyy\"\r\n                                                                format=\"dd/MM/yyyy\"\r\n                                                                onError={() => { return null }}\r\n                                                                value={this.state.startDate}\r\n                                                                onChange={this.handleChangeDate}\r\n                                                                KeyboardButtonProps={{\r\n                                                                    'aria-label': 'change date',\r\n                                                                }}\r\n                                                            />\r\n                                                        </MuiPickersUtilsProvider> */}\r\n                                                            {(this.state.error == 'startdate') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr \">\r\n                                                            <span className=\"accnt\">To :  </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center datepicker_filter\">\r\n                                                            <DatePicker\r\n                                                                autoOk={true}\r\n                                                                selected={this.state.endDate}\r\n                                                                onChange={this.handleEndDate}\r\n                                                                isClearable\r\n                                                                placeholderText=\"dd/mm/yyyy\"\r\n                                                                dateFormat=\"dd/MM/yyyy\"\r\n                                                                startDate={this.state.startDate}\r\n                                                                endDate={this.state.endDate}\r\n                                                            />\r\n                                                            {(this.state.error == 'enddate') && <p style={{ color: 'red', fontSize: '13px' }}>*\r\n                                                        Please ensure that the End Date is greater than the Start Date.</p>}\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr \">\r\n                                                            <span className=\"accnt\">Symbol :  </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                            {/* <Multiselect\r\n                                                        options={objectArray}\r\n                                                        displayValue=\"key\"\r\n                                                        showCheckbox={true}\r\n                                                    /> */}\r\n                                                            {this.renderSymbolSelect()}\r\n                                                            {(this.state.error == 'symbolselect') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n\r\n\r\n                                            <div className=\"text-center\">\r\n                                                <span > Magic Number :  </span>\r\n                                            </div>\r\n\r\n                                            <table className=\"table \">\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr dataAdjust\">\r\n                                                            <div onClick={this.changeIncludeDefaultProperty}>\r\n                                                                <input\r\n                                                                    type=\"radio\" id=\"include\" name=\"include\" checked={this.state.include} />\r\n                                                                <span class=\"accnt \">Include</span>\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr \">\r\n                                                            <div onClick={this.changeExcludeDefaultProperty} >\r\n                                                                <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.exclude} />\r\n                                                                <span class=\"accnt \">Exclude</span>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n\r\n\r\n                                            {this.state.showMagicNumber === true ?\r\n                                                <div className=\"b-clr magicnumber\" style={{}}>\r\n                                                    <TagsInput\r\n                                                        onValidationReject={() => console.log('rejected')}\r\n                                                        validationRegex={/^[0-9]*$/}\r\n                                                        inputProps={{ placeholder: \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumber\r\n                                                        } onChange={this.handleChangeMagicNumber}></TagsInput>\r\n                                                </div> : null}\r\n\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col md={6}>\r\n                                        <div className=\"card bottom\">\r\n                                            <div style={{ padding: '10px 20px 0px' }}>\r\n                                                <span style={{ fontWeight: 'bold' }}>Account B</span>\r\n                                            </div>\r\n                                            <table className=\"table mt20\">\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr \">\r\n                                                            <span className=\"accnt\"> Account :</span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '50%' }}>\r\n                                                            {this.renderAccountSelectTo()}\r\n                                                            {(this.state.error == 'accountoptionto') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\r\n                                                            {(this.state.error == 'err') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Diffrent Account</p>}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr \">\r\n                                                            <span className=\"accnt\">From:  </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center datepicker_filter\">\r\n                                                            <DatePicker\r\n                                                                selected={this.state.startDateTo}\r\n                                                                onChange={this.handleChangeDateTo}\r\n                                                                isClearable\r\n                                                                placeholderText=\"dd/mm/yyyy\"\r\n                                                                dateFormat=\"dd/MM/yyyy\"\r\n                                                                startDate={this.state.startDateTo}\r\n                                                                endDate={this.state.endDateTo}\r\n                                                                strictParsing\r\n                                                            />\r\n                                                            {(this.state.error == 'startDateTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr \">\r\n                                                            <span className=\"accnt\">To :  </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center datepicker_filter\">\r\n                                                            <DatePicker\r\n                                                                selected={this.state.endDateTo}\r\n                                                                onChange={this.handleEndDateTo}\r\n                                                                isClearable\r\n                                                                placeholderText=\"dd/mm/yyyy\"\r\n                                                                dateFormat=\"dd/MM/yyyy\"\r\n                                                                startDate={this.state.startDateTo}\r\n                                                                endDate={this.state.endDateTo}\r\n                                                            />\r\n                                                            {(this.state.error == 'enddateto') && <p style={{ color: 'red', fontSize: '13px' }}>*\r\n                                                        Please ensure that the End Date is greater than the Start Date.</p>}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr\">\r\n                                                            <span className=\"accnt\"> Symbol :  </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                            {/* <Multiselect\r\n                                                        options={objectArray}\r\n                                                        displayValue=\"key\"\r\n                                                        showCheckbox={true}\r\n                                                    /> */}\r\n                                                            {this.renderSymbolSelectTo()}\r\n                                                            {(this.state.error == 'selectedSymbolOptionTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n\r\n                                            <div className=\"text-center\">\r\n                                                <span > Magic Number :  </span>\r\n                                            </div>\r\n                                            <table className=\"table mt20\">\r\n                                                <tbody>\r\n\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr checkboxAdjust\">\r\n                                                            <div onClick={this.changeIncludeDefaultPropertyTo} >\r\n                                                                <input\r\n                                                                    type=\"radio\" id=\"includeTo\" name=\"includeTo\" checked={this.state.includeTo} />\r\n                                                                <span class=\"accnt \">Include</span>\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr checkboxAdjust\">\r\n                                                            <div onClick={this.changeExcludeDefaultPropertyTo} >\r\n                                                                <input type=\"radio\" id=\"excludeTo\" name=\"excludeTo\" checked={this.state.excludeTo} />\r\n                                                                <span class=\"accnt \">Exclude</span>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                            <div>\r\n\r\n                                                {this.state.showMagicNumberTo === true ?\r\n                                                    <div className=\"b-clr magicnumber\" style={{}}>\r\n                                                        <TagsInput\r\n                                                            onValidationReject={() => console.log('rejected')}\r\n                                                            validationRegex={/^[0-9]*$/}\r\n                                                            inputProps={{ placeholder: \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumberTo\r\n                                                            } onChange={this.handleChangeMagicNumberTo}></TagsInput>\r\n                                                    </div> : null}\r\n                                            </div>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                                <hr></hr>\r\n                                <div className=\"chceckbox\">\r\n\r\n                                    <label class=\"checkbox-inline\"><input type=\"checkbox\" defaultChecked={this.state.showCommisoin} onChange={(e) => this.handeChangeShowCommission(e)} /><b>Add Commission</b></label>\r\n                                </div>\r\n                                {this.state.showAddCommission &&\r\n                                    <div className=\"center-com d-flex\">\r\n                                        <div className=\"com\">\r\n                                            <h3 style={{ fontWeight: 'bold' }}>Commission</h3>\r\n                                        </div>\r\n                                        <table className=\"table mt20\">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\"> Account :</span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                        {this.renderCommissionAccount()}\r\n                                                        {(this.state.error == 'accountoptionto') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\r\n                                                        {(this.state.error == 'addComiission') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account </p>}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                }\r\n                                <div className=\"save_button_filter\">\r\n                                    <div className=\"savebtn\">\r\n                                        <Button className=\"btn-primary savebutton\" variant=\"primary\" size=\"lg\" block onClick={(e) => this.formDataSubmit(e)}>\r\n                                            <b>Save</b>\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </Grid>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Innerfilter;\r\n","import React, { Component } from 'react';\r\nimport { Grid, Row, Col, Modal, Alert } from \"react-bootstrap\";\r\nimport swal from 'sweetalert';\r\nimport config from '../../constant/config.js';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nconst axios = require('axios');\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loginForm: false,\r\n            setShow: false,\r\n            show: true,\r\n            username: '',\r\n            password: '',\r\n            alert: null,\r\n            persons: [],\r\n            shwPwd: false,\r\n            shwMsg: false,\r\n            invalidUsername: '',\r\n            invalidPassword: '',\r\n            accountlist: []\r\n\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value.trim() })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const userdetail = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }\r\n        if (this.state.username == '') {\r\n            this.setState({ shwPwd: true })\r\n        }\r\n\r\n        let self = this;\r\n        axios.post(config.baseurl + '/users/mainLogin', userdetail)\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    // self.handleClose();\r\n                    if (response.data.rows && response.data.rows.length > 0) {\r\n                        localStorage.setItem('currentUser', JSON.stringify(response.data.rows));\r\n                        self.props.history.push('/admin/dashboard')\r\n                    }\r\n                    if (response.data.message) {\r\n                        if (response.data.name == 'username') {\r\n                            self.setState({ invalidUsername: response.data.message })\r\n                            if (self.state.invalidUsername == '' || self.state.invalidUsername == 'Invalid username.' || self.state.invalidUsername == \"Invalid username\") {\r\n                                self.createNotification()\r\n                            }\r\n                        }\r\n                        if (response.data.name == 'password') {\r\n                            if (self.state.invalidPassword == '' || self.state.invalidPassword == 'Invalid password.') {\r\n                                self.createNotification()\r\n                            }\r\n                            self.setState({ invalidPassword: response.data.message, invalidUsername: '' })\r\n\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n            });\r\n    }\r\n    toogle = () => {\r\n        this.setState({ loginForm: !this.state.loginForm })\r\n    }\r\n    handleClose = () => {\r\n        this.setState({ loginForm: false })\r\n    }\r\n    handleShow = () => {\r\n        this.setState({ setShow: true })\r\n    }\r\n    createNotification = () => {\r\n        NotificationManager.listNotify = [];\r\n        NotificationManager.error('Invalid Credentials !');\r\n    }\r\n\r\n    componentDidMount() {\r\n        // let self = this;\r\n\r\n        let currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n        if (currentUser !== null) {\r\n            this.props.history.push('admin/dashboard')\r\n            return;\r\n        }\r\n        // axios.get(config.baseurl + '/users/allAccounts')\r\n        //     .then(function (response) {\r\n        //         if (response.status == 200) {\r\n        //             self.setState({ accountlist: response.data.rows })\r\n        //         }\r\n        //     })\r\n    }\r\n    render() {\r\n        const { invalidPassword, invalidUsername } = this.state;\r\n        return (\r\n            <div className=\"content\">\r\n                <Grid fluid style={{ marginTop: '20vh' }}>\r\n                    <Row>\r\n                        <Col md={4} />\r\n                        <Col\r\n                            md={4}\r\n                            sm={6}\r\n                        >\r\n                            {/* <Modal show={show}>\r\n                                    <Modal.Body> */}\r\n                            <div className=\"form-box login-box\">\r\n                                <Modal.Title className=\"text-center\"><b>Log In</b></Modal.Title>\r\n\r\n                                <div className=\"container-fluid\" style={{ background: '#eee', padding: 15, marginTop: 10 }}>\r\n                                    <div>\r\n                                        <span style={{ fontWeight: 'bold' }}> Username: </span>\r\n                                                    testaccount\r\n                                                </div>\r\n                                    <div>\r\n                                        <span style={{ fontWeight: 'bold' }}> Password: </span>\r\n                                                    1234567\r\n                                                </div>\r\n                                </div>\r\n                                <form style={{ marginTop: '20px' }} onSubmit={this.onSubmit}>\r\n                                    <label>Username</label>\r\n\r\n                                    <input className=\"Itext\" placeholder=\"User Name\" name=\"username\" value={this.state.username} onChange={this.onChange}\r\n                                    // onKeyUp={this.checkValidUser}\r\n                                    ></input>\r\n                                    <label>Password</label>\r\n\r\n                                    <input className=\"Itext\" placeholder=\"Password\" name=\"password\" type=\"password\" value={this.state.password} onChange={this.onChange}></input>\r\n\r\n                                    <div className=\"clearfix\">\r\n                                        <button type=\"submit\" disabled={!this.state.username || !this.state.password} className={!this.state.username || !this.state.password ? \"save\" : \"save save1\"}>Login</button>\r\n\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n\r\n                            {/* </Modal.Body>\r\n                                </Modal> */}\r\n\r\n\r\n                        </Col>\r\n                        <Col md={4} />\r\n                    </Row>\r\n                </Grid>\r\n                <NotificationContainer />\r\n\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport { NavItem, Nav, NavDropdown, MenuItem } from \"react-bootstrap\";\r\n\r\nclass AdminNavbarLinks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  logout = () => {\r\n    localStorage.clear();\r\n    this.props.history.push('/login');\r\n  }\r\n  render() {\r\n    const notification = (\r\n      <div>\r\n        {/* <i className=\"fa fa-globe\" />\r\n        <b className=\"caret\" /> */}\r\n        {/* <span className=\"notification\">5</span> */}\r\n        <p className=\"hidden-lg hidden-md\">Notification</p>\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        <Nav>\r\n          <NavItem eventKey={1} href=\"#\">\r\n            {/* <i className=\"fa fa-dashboard\" /> */}\r\n            <p className=\"hidden-lg hidden-md\">Dashboard</p>\r\n          </NavItem>\r\n          <NavDropdown\r\n            eventKey={2}\r\n            title={notification}\r\n            noCaret\r\n            id=\"basic-nav-dropdown\"\r\n          >\r\n            <MenuItem eventKey={2.1}>Notification 1</MenuItem>\r\n            <MenuItem eventKey={2.2}>Notification 2</MenuItem>\r\n            <MenuItem eventKey={2.3}>Notification 3</MenuItem>\r\n            <MenuItem eventKey={2.4}>Notification 4</MenuItem>\r\n            <MenuItem eventKey={2.5}>Another notifications</MenuItem>\r\n          </NavDropdown>\r\n          <NavItem eventKey={3} href=\"#\">\r\n            {/* <i className=\"fa fa-search\" />\r\n            <p className=\"hidden-lg hidden-md\">Search</p> */}\r\n          </NavItem>\r\n        </Nav>\r\n        <Nav pullRight>\r\n          {/* <NavItem eventKey={1} href=\"#\">\r\n            Account\r\n          </NavItem>\r\n          <NavDropdown\r\n            eventKey={2}\r\n            title=\"Dropdown\"\r\n            id=\"basic-nav-dropdown-right\"\r\n          >\r\n            <MenuItem eventKey={2.1}>Action</MenuItem>\r\n            <MenuItem eventKey={2.2}>Another action</MenuItem>\r\n            <MenuItem eventKey={2.3}>Something</MenuItem>\r\n            <MenuItem eventKey={2.4}>Another action</MenuItem>\r\n            <MenuItem eventKey={2.5}>Something</MenuItem>\r\n            <MenuItem divider />\r\n            <MenuItem eventKey={2.5}>Separated link</MenuItem>\r\n          </NavDropdown> */}\r\n          <NavItem  eventKey={3} onClick={() => this.logout()}>\r\n           <span className=\"logOutbtn\">Logout</span> \r\n          </NavItem>\r\n        </Nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminNavbarLinks;\r\n","import React, { Component } from \"react\";\r\nimport { Navbar } from \"react-bootstrap\";\r\n\r\nimport AdminNavbarLinks from \"./AdminNavbarLinks\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.mobileSidebarToggle = this.mobileSidebarToggle.bind(this);\r\n    this.state = {\r\n      sidebarExists: false\r\n    };\r\n  }\r\n  mobileSidebarToggle(e) {\r\n    if (this.state.sidebarExists === false) {\r\n      this.setState({\r\n        sidebarExists: true\r\n      });\r\n    }\r\n    e.preventDefault();\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    var node = document.createElement(\"div\");\r\n    node.id = \"bodyClick\";\r\n    node.onclick = function() {\r\n      this.parentElement.removeChild(this);\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n    };\r\n    document.body.appendChild(node);\r\n  }\r\n  render() {\r\n    return (\r\n      <Navbar fluid>\r\n        <Navbar.Header>\r\n          <Navbar.Brand>\r\n            <a href=\"#\">{this.props.brandText== \"Dashboard\" ? \"Hedging Interest Differentials Monitoring\" : this.props.brandText }</a>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle onClick={this.mobileSidebarToggle} />\r\n        </Navbar.Header>\r\n        <Navbar.Collapse>\r\n          <AdminNavbarLinks {...this.props}/>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Dropdown, DropdownButton } from 'react-bootstrap'\r\nimport AdminNavbarLinks from \"../Navbars/AdminNavbarLinks.jsx\";\r\n\r\n// import logo from \"assets/img/reactlogo.png\";\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: window.innerWidth,\r\n      menu: false\r\n    };\r\n  }\r\n  toggle = () => {\r\n    this.setState({ menu: !this.state.menu })\r\n  }\r\n\r\n  activeRoute(routeName) {\r\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\r\n  }\r\n  updateDimensions() {\r\n    this.setState({ width: window.innerWidth });\r\n  }\r\n  componentDidMount() {\r\n    this.updateDimensions();\r\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\r\n  }\r\n\r\n  render() {\r\n    const sidebarBackground = {\r\n      backgroundImage: \"url(\" + this.props.image + \")\"\r\n    };\r\n    return (\r\n\r\n\r\n      <div\r\n        id=\"sidebar\"\r\n        className=\"sidebar\"\r\n        data-color={this.props.color}\r\n        data-image={this.props.image}\r\n      >\r\n        {this.props.hasImage ? (\r\n          <div className=\"sidebar-background\" />\r\n        ) : (\r\n            null\r\n          )}\r\n        <div className=\"logo\">\r\n          <a\r\n            href=\"https://www.creative-tim.com?ref=lbd-sidebar\"\r\n            className=\"simple-text logo-mini\"\r\n          >\r\n            <div className=\"logo-img\">\r\n\r\n            </div>\r\n          </a>\r\n          <span className=\"simple-text logo-normal\">\r\n            Dashboard\r\n          </span>\r\n          {/* <a\r\n            href=\"https://www.creative-tim.com?ref=lbd-sidebar\"\r\n            className=\"simple-text logo-normal\"\r\n          >\r\n            Dashboard\r\n          </a> */}\r\n        </div>\r\n        <div className=\"sidebar-wrapper\">\r\n          {/* <ul className=\"nav\" style={{margin:'0px 20px'}}>\r\n            <li className=\"side-list\">\r\n              <p> Dashboard </p>\r\n            </li>\r\n            <li className=\"side-list\">\r\n              <p onClick={this.toggle}>Filter\r\n                      <i className=\"fa fa-angle-down\" aria-hidden=\"true\" style={{ float: 'right' }}></i>\r\n              </p>\r\n              {this.state.menu &&\r\n                <ul>\r\n\r\n                  <li>\r\n                    <p>abc\r\n                  </p>\r\n                  </li>\r\n\r\n                </ul>\r\n              }\r\n            </li>\r\n            <li className=\"side-list\">\r\n              <p onClick={this.toggle}>Log In\r\n                      <i className=\"fa fa-angle-down\" aria-hidden=\"true\" style={{ float: 'right' }}></i>\r\n              </p>\r\n            </li>\r\n            <li className=\"side-list\">\r\n              <p>Symbol Managing\r\n              </p>\r\n            </li>\r\n            <li className=\"side-list\">\r\n              <p>Swap\r\n              </p>\r\n            </li> */}\r\n          <ul className=\"nav\" style={{ margin: '0px 20px' }}>\r\n            {this.state.width <= 991 ? <AdminNavbarLinks {...this.props} /> : null}\r\n            {this.props.routes.map((prop, key) => {\r\n              if (!prop.redirect)\r\n                // console.log(prop.resources, 'resouces');\r\n                return (\r\n                  <li\r\n                    className={\r\n                      prop.upgrade\r\n                        ? \"active active-pro\"\r\n                        : this.activeRoute(prop.layout + prop.path)\r\n                    }\r\n                    key={key}\r\n                  >\r\n                    <NavLink\r\n                      to={prop.layout + prop.path}\r\n                      className=\"nav-link\"\r\n                      activeClassName=\"active\"\r\n                    >\r\n                      <i className={prop.icon} />\r\n                      <p onClick={this.toggle}>{prop.name}\r\n                        {/* <i className=\"fa fa-angle-down\" aria-hidden=\"true\" style={{float:'right'}}></i> */}\r\n                      </p>\r\n                      {this.state.menu &&\r\n                        <ul>\r\n                          {prop.resources != undefined && prop.resources.map((sub, index) => (\r\n                            <li key={index}>\r\n                              <p>{sub.name}\r\n                              </p>\r\n\r\n                            </li>\r\n                          ))}\r\n\r\n                        </ul>\r\n                      }\r\n                    </NavLink>\r\n\r\n                  </li>\r\n                );\r\n              // return null;\r\n            })}\r\n          </ul>\r\n        </div>\r\n        {/* <NavLink>\r\n          <DropdownButton id=\"dropdown-item-button\" title=\"Dropdown button\">\r\n            <Dropdown.ItemText>Dropdown item text</Dropdown.ItemText>\r\n            <Dropdown.Item as=\"button\">Action</Dropdown.Item>\r\n            <Dropdown.Item as=\"button\">Another action</Dropdown.Item>\r\n            <Dropdown.Item as=\"button\">Something else</Dropdown.Item>\r\n          </DropdownButton>\r\n        </NavLink> */}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n\r\n","\r\nimport React, { useState, Fragment } from 'react';\r\nimport { Collapse } from 'reactstrap';\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport NumberFormat from 'react-number-format';\r\nimport Login from './login';\r\n\r\n// import Data from './Data';\r\n\r\nconst Closeposition = (props) => {\r\n    const { allHistoryRecord, fromHistoryOrderInfo, toHistoryOrderInfo, commissionHistoryOrderInfo } = props;\r\n    const [isOpen2, setIsOpen2] = useState(false);\r\n    const toggle2 = () => setIsOpen2(!isOpen2);\r\n\r\n    // const sumOfTotal = allHistoryRecord.reduce((current, data) => {\r\n    //     return (data.total + current);\r\n    // }, 0);\r\n    let fromSymbols = '';\r\n    let toSymbols = '';\r\n    if (allHistoryRecord && Object.entries(allHistoryRecord).length > 0) {\r\n        fromSymbols = JSON.parse(allHistoryRecord.from_symbols);\r\n        fromSymbols = (fromSymbols).map(data => data).join(', ');\r\n        toSymbols = JSON.parse(allHistoryRecord.to_symbols);\r\n        toSymbols = (toSymbols).map(data => data).join(', ')\r\n    }\r\n    let fromsum = 0;\r\n    let tosum = 0;\r\n    let commissionSum = 0;\r\n\r\n    if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\r\n        fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\r\n    }\r\n    if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\r\n        tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\r\n    }\r\n    if (commissionHistoryOrderInfo && commissionHistoryOrderInfo.length > 0) {\r\n        commissionSum = (commissionHistoryOrderInfo[0].commission + commissionHistoryOrderInfo[0].swap + commissionHistoryOrderInfo[0].profit);\r\n    }\r\n\r\n    let sumOfTotal = tosum + fromsum;\r\n\r\n    let noRecord = ((fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0 && fromHistoryOrderInfo[0].total == null) && (toHistoryOrderInfo && toHistoryOrderInfo.length > 0 && toHistoryOrderInfo[0].total == null)) ? true : false;\r\n    return (\r\n        <div>\r\n            <div className=\"openpositions\" style={{ margin: '20px 0px' }}>\r\n                <span className=\"p-text\">Closed Positions</span>\r\n                <span className=\"icon-style\" onClick={toggle2}>\r\n                    {!isOpen2 ?\r\n                        <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\r\n                        :\r\n                        <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\r\n                    }\r\n                </span>\r\n            </div>\r\n            <div>\r\n                <Collapse isOpen={isOpen2}>\r\n                    <Row>\r\n                        {/* {Data.tablePage.items.map((item, index) =>\r\n                            <Col md={6} key={index}>\r\n                                <div className=\"card\">\r\n                                    <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\r\n                                    </div>\r\n                                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                        <table className=\"table\">\r\n                                            <tbody>\r\n                                                <tr><td>{item.closed} </td>\r\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\r\n                                                </tr>\r\n                                                <tr><td>{item.commission} </td>\r\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\r\n                                                </tr>\r\n                                                <tr><td>{item.swap} </td>\r\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\r\n                                                </tr>\r\n                                                <tr><td>{item.total} </td>\r\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n                        )} */}\r\n                        {/* {(allHistoryRecord && allHistoryRecord.length>0) && allHistoryRecord.map((item, index) =>\r\n                            <Fragment>\r\n\r\n                            <Col md={6} key={index}>\r\n                                <div className=\"card\">\r\n                                    <div className=\"header\">\r\n                                        <h5 className={item.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{item.account.login}</h5>\r\n                                        <h6 className={'colorDarkBlue'} style={{fontSize:10}}>({item.account.alias})</h6>\r\n                                    </div>\r\n                                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                        <table className=\"table\">\r\n                                            <tbody>\r\n                                                <tr><td>Closed P/L </td>\r\n                                                    <td className=\"td-actions text-right\">$ {item.profit}</td>\r\n                                                </tr>\r\n                                                <tr><td>Commission </td>\r\n                                                    <td className=\"td-actions text-right\">$ {item.commission}</td>\r\n                                                </tr>\r\n                                                <tr><td>Swap </td>\r\n                                                    <td className=\"td-actions text-right\">$ {item.swap}</td>\r\n                                                </tr>\r\n                                                <tr><td>Total </td>\r\n                                                    <td className=\"td-actions text-right\">$ {item.total}</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n                            </Fragment>\r\n                        )}\r\n                        {(allHistoryRecord && allHistoryRecord.length>0) && \r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <div>\r\n                                        <div className=\"total-box\">\r\n                                            <span className=\"text\">Sum of closed positions</span>\r\n                                            <span className=\"text\" style={{ float: 'right' }}>$ {sumOfTotal}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        } */}\r\n                        {noRecord ? (\r\n                            <div className=\"text-center\">\r\n                                No Record Found!\r\n                            </div>) :\r\n\r\n                            <Fragment>\r\n\r\n                                {(fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0 && fromHistoryOrderInfo[0].total != null) ? (\r\n                                    <Col md={6}>\r\n                                        <div className=\"card\">\r\n                                            <div className=\"header\">\r\n                                                <h5 className={allHistoryRecord.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{allHistoryRecord.accountFromInfo[0].login}</h5>\r\n                                                <h6 className={'colorDarkBlue'} style={{ fontSize: 10 }}>({allHistoryRecord.accountFromInfo[0].alias})</h6>\r\n                                            </div>\r\n                                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                                <table className=\"table\">\r\n                                                    <tbody>\r\n                                                        <tr>\r\n                                                            <span className=\"symbolStyle\">{fromSymbols}</span>\r\n                                                            {/* <td>{fromSymbols}</td> */}\r\n                                                            {/* <td className=\"td-actions text-right\">$ {fromHistoryOrderInfo[0].profit}</td> */}\r\n                                                        </tr>\r\n                                                        <tr><td>Closed P/L </td>\r\n                                                            <td className=\"td-actions text-right\">$ {' '}\r\n                                                                <NumberFormat value={fromHistoryOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                                {/* {fromHistoryOrderInfo[0].profit} */}\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr><td>Commission </td>\r\n                                                            <td className=\"td-actions text-right\">$ {' '}\r\n                                                                {/* {fromHistoryOrderInfo[0].commission} */}\r\n                                                                <NumberFormat value={fromHistoryOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr><td>Swap </td>\r\n                                                            <td className=\"td-actions text-right\">$ {' '}\r\n                                                                <NumberFormat value={fromHistoryOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                                {/* {fromHistoryOrderInfo[0].swap} */}\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr><td>Total </td>\r\n                                                            <td className=\"td-actions text-right\">$ {' '}\r\n                                                                <NumberFormat value={fromHistoryOrderInfo[0].total} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                                {/* {fromHistoryOrderInfo[0].total} */}\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Col>\r\n                                ) : (\r\n                                        <Col md={6}>\r\n                                            <div className=\"card noRecordCol\"> No Record Found</div>\r\n                                        </Col>\r\n                                    )}\r\n                                {(toHistoryOrderInfo && toHistoryOrderInfo.length > 0 && toHistoryOrderInfo[0].total != null) ? (\r\n                                    <Col md={6}>\r\n                                        <div className=\"card\">\r\n                                            <div className=\"header\">\r\n                                                <h5 className={allHistoryRecord.id == '1' ? 'acntText color2' : 'acntText color2'}>{allHistoryRecord.accountToInfo[0].login}</h5>\r\n                                                <h6 className={'color2'} style={{ fontSize: 10 }}>({allHistoryRecord.accountToInfo[0].alias})</h6>\r\n                                            </div>\r\n                                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                                <table className=\"table\">\r\n                                                    <tbody>\r\n                                                        <tr>\r\n                                                            <span className=\"symbolStyle\">{toSymbols}</span>\r\n\r\n                                                            {/* <td>{toSymbols}</td> */}\r\n                                                            {/* <td className=\"td-actions text-right\">$ {fromHistoryOrderInfo[0].profit}</td> */}\r\n                                                        </tr>\r\n                                                        <tr><td>Closed P/L </td>\r\n                                                            <td className=\"td-actions text-right\">$ {' '}\r\n                                                                <NumberFormat value={toHistoryOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                                {/* {toHistoryOrderInfo[0].profit} */}\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr><td>Commission </td>\r\n                                                            <td className=\"td-actions text-right\">$ {' '}\r\n                                                                {/* {toHistoryOrderInfo[0].commission} */}\r\n                                                                <NumberFormat value={toHistoryOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr><td>Swap </td>\r\n                                                            <td className=\"td-actions text-right\">$ {' '}\r\n                                                                {/* {toHistoryOrderInfo[0].swap} */}\r\n\r\n\r\n                                                                {\r\n                                                                    <NumberFormat value={(toHistoryOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                                                                    // toOpenOrderInfo[0].swap\r\n                                                                }\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr><td>Total </td>\r\n                                                            <td className=\"td-actions text-right\">$ {' '}\r\n                                                                {/* {toHistoryOrderInfo[0].total} */}\r\n                                                                <NumberFormat value={toHistoryOrderInfo[0].total} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Col>\r\n                                ) : (\r\n                                        <Col md={6}>\r\n                                            <div className=\"card noRecordCol\"> No Record Found</div>\r\n                                        </Col>\r\n                                    )\r\n\r\n                                }\r\n                                {(sumOfTotal != 0) &&\r\n                                    <Row>\r\n                                        <Col md={12} style={{ marginBottom: 20 }}>\r\n                                            <div>\r\n                                                <div className=\"total-box\">\r\n                                                    <span className=\"text\">Sum of closed positions</span>\r\n                                                    <span className=\"text\" style={{ float: 'right' }}>$ {' '}\r\n                                                        <NumberFormat value={sumOfTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                        {/* {sumOfTotal} */}\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n\r\n\r\n\r\n\r\n                            </Fragment>\r\n                        }\r\n                    </Row>\r\n                </Collapse>\r\n                {allHistoryRecord.commission_acount_id !== 0 && allHistoryRecord.commission_acount_id !== undefined &&\r\n                    <Col md={12}>\r\n\r\n                        <div className=\"card \">\r\n                            <div className=\"header ptheader\">\r\n                                <h4 className=\"text-center\"><b>Commission</b></h4>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12 text-center\">\r\n\r\n                                        <h5 className={allHistoryRecord.id == '1' ? 'acntText color2' : 'acntText acadjust color2'}>{allHistoryRecord.accountCommissionInfo !== undefined && allHistoryRecord.accountCommissionInfo[0].login} <span>({allHistoryRecord.accountCommissionInfo !== undefined && allHistoryRecord.accountCommissionInfo[0].alias})</span></h5>\r\n\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"col-md-12 total text-center\">\r\n\r\n\r\n                                        <tr>\r\n                                            <td className=\"td-actions total_comm text-right\">\r\n\r\n                                                Total : $ {' '}\r\n                                                {/* {toHistoryOrderInfo[0].total} */}\r\n                                                <NumberFormat value={allHistoryRecord.history_info} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                            </td>\r\n                                        </tr>\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>}\r\n            </div>\r\n        </div >\r\n\r\n    );\r\n}\r\n\r\nexport default Closeposition;\r\n","const Data = {\r\n \r\n  tablePage: {\r\n    items: [\r\n      {id: 1,lot:'Buy 10 Lot', closed: 'Closed P/L', commission: 'Commission', swap: 'Swap', total: 'Total', price:'$ 1110',textA: 'Account A'},\r\n      {id: 2, lot:'Sell 10 Lot', closed: 'Closed P/L', commission: 'Commission', swap: 'Swap', total: 'Total', price:'$ 1111', textA: 'Account B'},\r\n    ]\r\n  },\r\n  dashBoardPage: {\r\n    items: [\r\n      {id: 1, title: 'Balance', textA: 'Account A', textB: 'Account B',price:'$ 400'},\r\n      {id: 2, title: 'Equity',textA: 'Account A', textB: 'Account B',price:'$ 400'},\r\n      {id: 3, title: 'Margin', textA: 'Account A', textB: 'Account B',price:'$ 400'},\r\n      {id: 4, title: 'Free Margin', textA: 'Account A', textB: 'Account B',price:'$ 400'},\r\n      {id: 5, title: 'Margin %', textA: 'Account A', textB: 'Account B',price:'$ 400'},\r\n      {id: 5, title: 'Floating P/L', textA: 'Account A', textB: 'Account B',price:'$ 400'}\r\n    ],\r\n  }\r\n};\r\n\r\nexport default Data;\r\n","import React, { useState, Fragment } from 'react';\r\nimport { Collapse } from 'reactstrap';\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport Data from './Data';\r\n\r\nexport default function Openposition(props) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const { allOpenRecord, fromOpenOrderInfo, toOpenOrderInfo, } = props;\r\n\r\n  // const sumOfTotal = allOpenRecord.reduce((current, data) => {\r\n  //     return (Math.floor(data.commission + data.swap + data.profit+ current))\r\n  //     // return (data.profit + current);\r\n  // }, 0);\r\n\r\n  let fromsum = 0;\r\n  let tosum = 0;\r\n  let fromSymbols = '';\r\n  let toSymbols = '';\r\n  if (allOpenRecord && Object.entries(allOpenRecord).length > 0) {\r\n    fromSymbols = JSON.parse(allOpenRecord.from_symbols);\r\n    fromSymbols = (fromSymbols).map(data => data).join(', ');\r\n    toSymbols = JSON.parse(allOpenRecord.to_symbols);\r\n    toSymbols = (toSymbols).map(data => data).join(', ')\r\n  }\r\n  // if(fromOpenOrderInfo && fromOpenOrderInfo.length>0){\r\n  //   fromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\r\n  // }\r\n  // if(toOpenOrderInfo && toOpenOrderInfo.length>0){\r\n  //   tosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n  // }\r\n  if (fromOpenOrderInfo && fromOpenOrderInfo.length > 0) {\r\n    // if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\r\n    //   fromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\r\n    // }else{\r\n    fromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\r\n    // }\r\n  }\r\n  if (toOpenOrderInfo && toOpenOrderInfo.length > 0) {\r\n    // if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\r\n    //   tosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap);\r\n    // }else{\r\n    tosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n    // }\r\n    // opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n  }\r\n\r\n  let sumOfTotal = tosum + fromsum;\r\n  let noRecord = ((fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total == null) && (toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total == null)) ? true : false;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"openpositions\" style={{ margin: '20px 0px' }}>\r\n        <span className=\"p-text\">Open Positions</span>\r\n        <span className=\"icon-style\" onClick={toggle}>\r\n          {!isOpen ?\r\n            <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\r\n            :\r\n            <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\r\n          }\r\n        </span>\r\n      </div>\r\n      <div>\r\n\r\n        <Collapse isOpen={isOpen}>\r\n          <Row>\r\n\r\n\r\n\r\n            {/* {Data.tablePage.items.map((item, index) =>\r\n                  <Col md={6} key={index}>\r\n                    <div className=\"card\">\r\n                      <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\r\n                      </div>\r\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                        <table className=\"table\">\r\n                          <tbody>\r\n                            <tr><td>{item.lot} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.commission} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.swap} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.total} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                )} */}\r\n\r\n            {/* {(allOpenRecord && allOpenRecord.length>0) && allOpenRecord.map((item, index) =>\r\n                    \r\n                    <Col md={6} key={index}>\r\n                            <div className=\"card\">\r\n                            <div className=\"header\">\r\n                              <h5 className={item.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{item.account.login}</h5>\r\n                              <h6 style={{fontSize:10}} className={'colorDarkBlue'}>({item.account.alias})</h6>\r\n                            </div>\r\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>\r\n                                            {item.order_type ===0 ? 'BUY ' : 'SELL ' } \r\n                                            {item.lots} {(item.lots>1) ? 'Lots':'Lot'}\r\n                                        </td>\r\n                                        <td className=\"td-actions text-right\"> {''}</td>\r\n                                    </tr>\r\n                                    <tr><td>Floating P/L </td>\r\n                                        <td className=\"td-actions text-right\">$ {item.profit}</td>\r\n                                    </tr>\r\n                                    <tr><td>Commission </td>\r\n                                        <td className=\"td-actions text-right\">$ {item.commission}</td>\r\n                                    </tr>\r\n                                    <tr><td>Swap </td>\r\n                                        <td className=\"td-actions text-right\">$ {item.swap}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Total </td>\r\n                                        <td className=\"td-actions text-right\">\r\n                                          $ {Math.floor(item.commission + item.swap + item.profit)}\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                </table>\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                        </Col>\r\n                )} */}\r\n            {/* {(allOpenRecord && allOpenRecord.length>0) &&\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <div>\r\n                            <div className=\"total-box\">\r\n                                <span className=\"text\">Sum of open positions</span>\r\n                                <span className=\"text\" style={{ float: 'right' }}>$ {sumOfTotal}</span>\r\n                            </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                } */}\r\n            {(noRecord) ?\r\n              <div className=\"text-center\">\r\n                No Record Found!\r\n                    </div>\r\n              :\r\n              <Fragment>\r\n                {(fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total !== null && (fromOpenOrderInfo && allOpenRecord.swapFrominfo)) ?\r\n\r\n                  <Col md={6}>\r\n                    <div className=\"card\">\r\n                      <div className=\"header\">\r\n                        <h5 className={allOpenRecord.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{allOpenRecord.accountFromInfo[0].login}</h5>\r\n                        <h6 style={{ fontSize: 10 }} className={'colorDarkBlue'}>({allOpenRecord.accountFromInfo[0].alias})</h6>\r\n                      </div>\r\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                        <table className=\"table\">\r\n                          <tbody>\r\n                            <tr>\r\n                              <span className=\"symbolStyle\">{fromSymbols}</span>\r\n                            </tr>\r\n                            {/* Buy 10 Lot  */}\r\n                            <tr>\r\n                              <td>\r\n                                {fromOpenOrderInfo[0].order_type == 0 ? 'BUY ' : 'SELL '}\r\n                                {fromOpenOrderInfo[0].lots} {(fromOpenOrderInfo[0].lots > 1) ? 'Lots' : 'Lot'}\r\n                              </td>\r\n                              <td className=\"td-actions text-right\"> {''}</td>\r\n                            </tr>\r\n                            {/* <tr><td>{(fromOpenOrderInfo[0].lots>1) ? 'Lots':'Lot'}</td>\r\n                                        <td className=\"td-actions text-right\">{fromOpenOrderInfo[0].lots}</td>\r\n                                    </tr> */}\r\n                            <tr><td>Floating P/L </td>\r\n                              <td className=\"td-actions text-right\">$ {' '}\r\n                                {/* {fromOpenOrderInfo[0].profit} */}\r\n                                <NumberFormat value={fromOpenOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                              </td>\r\n                            </tr>\r\n                            <tr><td>Commission </td>\r\n                              <td className=\"td-actions text-right\">$ {' '}\r\n                                {/* {fromOpenOrderInfo[0].commission} */}\r\n                                <NumberFormat value={fromOpenOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                              </td>\r\n                            </tr>\r\n                            <tr><td>Swap </td>\r\n                              <td className=\"td-actions text-right\">$ {' '}\r\n                                {/* {fromOpenOrderInfo[0].swap} */}\r\n                                {allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length > 0 ?\r\n                                  <NumberFormat value={allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                  // (allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].swap) \r\n                                  :\r\n                                  <NumberFormat value={fromOpenOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                  // fromOpenOrderInfo[0].swap\r\n                                }\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>Total </td>\r\n                              <td className=\"td-actions text-right\">$ {' '}\r\n                                {/* $ {Math.floor(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)} */}\r\n                                {allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length > 0 ?\r\n                                  <NumberFormat value={(fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                                  // Math.floor(fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap) \r\n                                  :\r\n                                  <NumberFormat value={(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                                  //  Math.floor(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)\r\n                                }\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                  :\r\n                  <Col md={6}>\r\n                    <div className=\"card noRecordCol\"> No Record Found</div>\r\n                  </Col>\r\n                }\r\n\r\n                {(toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total !== null && (toOpenOrderInfo && allOpenRecord.swapToinfo)) ?\r\n\r\n                  <Col md={6}>\r\n                    <div className=\"card\">\r\n                      <div className=\"header\">\r\n                        <h5 className={allOpenRecord.id == '1' ? 'acntText color2' : 'acntText color2'}>{allOpenRecord.accountToInfo[0].login}</h5>\r\n                        <h6 style={{ fontSize: 10 }} className={'color2'}>({allOpenRecord.accountToInfo[0].alias})</h6>\r\n                      </div>\r\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                        <table className=\"table\">\r\n                          <tbody>\r\n                            {/* Buy 10 Lot  */}\r\n                            <tr>\r\n                              <span className=\"symbolStyle\">{toSymbols}</span>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>\r\n                                {toOpenOrderInfo[0].order_type == 0 ? 'BUY ' : 'SELL '}\r\n                                {toOpenOrderInfo[0].lots} {(toOpenOrderInfo[0].lots > 1) ? 'Lots' : 'Lot'}\r\n                              </td>\r\n                              <td className=\"td-actions text-right\"> {''}</td>\r\n                            </tr>\r\n                            {/* <tr><td>{(fromOpenOrderInfo[0].lots>1) ? 'Lots':'Lot'}</td>\r\n                                        <td className=\"td-actions text-right\">{fromOpenOrderInfo[0].lots}</td>\r\n                                    </tr> */}\r\n                            <tr><td>Floating P/L </td>\r\n                              <td className=\"td-actions text-right\">$ {' '}\r\n                                {/* {toOpenOrderInfo[0].profit} */}\r\n                                <NumberFormat value={toOpenOrderInfo[0].profit !== null ? toOpenOrderInfo[0].profit : 0} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                              </td>\r\n                            </tr>\r\n                            <tr><td>Commission </td>\r\n                              <td className=\"td-actions text-right\">$ {' '}\r\n                                {/* {toOpenOrderInfo[0].commission} */}\r\n                                <NumberFormat value={toOpenOrderInfo[0].commission !== null ? toOpenOrderInfo[0].commission : 0} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                              </td>\r\n                            </tr>\r\n                            <tr><td>Swap </td>\r\n                              <td className=\"td-actions text-right\">$ {' '}\r\n                                {/* {toOpenOrderInfo[0].swap} */}\r\n                                {allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length > 0 ?\r\n                                  // (allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].swap) \r\n                                  <NumberFormat value={(allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                  :\r\n                                  <NumberFormat value={(toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                                  // toOpenOrderInfo[0].swap\r\n                                }\r\n                              </td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                              <td>Total </td>\r\n                              <td className=\"td-actions text-right\"> $ {' '}\r\n                                {allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length > 0 ?\r\n                                  //  Math.floor(toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap)\r\n                                  <NumberFormat value={(toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                  :\r\n                                  <NumberFormat value={(toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                  //  Math.floor(toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit)\r\n                                }\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                  :\r\n                  <Col md={6}>\r\n                    <div className=\"card noRecordCol\"> No Record Found</div>\r\n                  </Col>\r\n                }\r\n                {\r\n                  sumOfTotal != 0 &&\r\n                  <Row>\r\n                    <Col md={12}>\r\n                      <div>\r\n                        <div className=\"total-box\">\r\n                          <span className=\"text\">Sum of open positions</span>\r\n                          <span className=\"text\" style={{ float: 'right' }}>$ {' '}\r\n                            <NumberFormat value={sumOfTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                            {/* {sumOfTotal} */}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                }\r\n              </Fragment>\r\n            }\r\n          </Row>\r\n        </Collapse>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Collapse } from 'reactstrap';\r\nimport Select from 'react-select';\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\n// import Data from './Data';\r\nimport NumberFormat from 'react-number-format';\r\nimport Closeposition from 'views/Closeposition';\r\nimport Openposition from 'views/Openposition';\r\n\r\n// import config from '../constant/config.js';\r\nimport config from '../constant/config.js';\r\nconst axios = require('axios');\r\n\r\n// import Card from \"components/Card/Card.jsx\";\r\n// import { thArray, tdArray } from \"variables/Variables.jsx\";\r\n\r\nclass TableList extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      // isOpen: false,\r\n      allSymbols:[],\r\n      selectedOption:null,\r\n      allHistoryRecord:[],\r\n      allOpenRecord:[],\r\n      fromHistoryOrderInfo:[],\r\n      toHistoryOrderInfo:[],\r\n      commissionHistoryOrderInfo:[],\r\n      fromOpenOrderInfo:[],\r\n      toOpenOrderInfo:[],\r\n      filterlist:[],\r\n      allSymbols:[],\r\n      symbolsObj:[]\r\n    }\r\n\r\n  }\r\n  // toggle = () => {\r\n  //   this.setState({ isOpen: !this.state.isOpen })\r\n  // }\r\n  // componentWillMount() {\r\n  //   let self = this;\r\n      // axios.get(config.baseurl + '/accounts/fetchAllSymbol')\r\n      // .then(function (response) {\r\n      //   if (response.status == 200) {\r\n      //     self.setState({ allSymbols: response.data.rows })\r\n      //   }\r\n      // })\r\n\r\n      // axios.get(config.baseurl + '/filter/fetchfilterdata')\r\n      // .then(function (response) {\r\n      //   if (response.status == 200) {\r\n      //     self.setState({ filterlist: response.data.rows })\r\n      //   }\r\n      // })\r\n\r\n      // axios.get(config.baseurl + '/filter/fetchActivefilterdata')\r\n      // .then(function (response) {\r\n      //   if (response.status == 200) {\r\n      //     if(response.data.rows && response.data.rows.length>0){\r\n      //       // let symbolsObj = (response.data.rows[0].symbols).map(data => { return ({value:data, label:data})})\r\n      //         self.setState({ filterlist: response.data.rows, allSymbols: response.data.rows[0].symbols, \r\n      //         // selectedOption:symbolsObj\r\n      //        })\r\n      //     }\r\n      //   }\r\n      // });\r\n  // }\r\n\r\n  componentDidMount(){\r\n    let self = this;\r\n    axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\r\n    .then(function (response) {\r\n      // console.log(response.data, 'response.data his')\r\n      if (response.status == 200) {\r\n        // self.setState({ allHistoryRecord: response.data.rows })\r\n        self.setState({ \r\n          allHistoryRecord: response.data.rows ,\r\n          fromHistoryOrderInfo:response.data.fromHistoryOrderInfo,\r\n          toHistoryOrderInfo:response.data.toHistoryOrderInfo,\r\n          commissionHistoryOrderInfo:response.data.commissionHistoryOrderInfo\r\n        })\r\n      }\r\n    })\r\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\r\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\r\n    axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\r\n    .then(function (response) {\r\n      if (response.status == 200) {\r\n      console.log(response.data, 'response.data open')\r\n\r\n        // self.setState({ allOpenRecord: response.data.rows })\r\n        self.setState({ \r\n          allOpenRecord: response.data.rows ,\r\n          fromOpenOrderInfo:response.data.fromOpenOrderInfo,\r\n          toOpenOrderInfo:response.data.toOpenOrderInfo\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  fetchDataAccordingSymbols = (symbol) => {\r\n    let self = this;\r\n    let {startdateFrom, startdateTo,enddateFrom, enddateTo, to_account_id, from_account_id} = this.state.filterlist[0];\r\n    \r\n    let postData =  {\"to_account_id\":to_account_id, \"from_account_id\":from_account_id, \"startdateFrom\":startdateFrom, \"startdateTo\":startdateTo,\"enddateFrom\": enddateFrom, \"enddateTo\":enddateTo, \"symbol\":symbol}\r\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolHistory', {'symbol':symbol})\r\n    \r\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolHistory', postData)\r\n    axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\r\n    .then(function (response) {\r\n      // console.log(response.data, 'response.data his')\r\n      if (response.status == 200) {\r\n        // self.setState({ allHistoryRecord: response.data.rows })\r\n        self.setState({ \r\n          allHistoryRecord: response.data.rows ,\r\n          fromHistoryOrderInfo:response.data.fromHistoryOrderInfo,\r\n          toHistoryOrderInfo:response.data.toHistoryOrderInfo,\r\n          commissionHistoryOrderInfo:response.data.commissionHistoryOrderInfo\r\n\r\n        })\r\n      }\r\n    })\r\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\r\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\r\n    axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\r\n    .then(function (response) {\r\n      if (response.status == 200) {\r\n      // console.log(response.data, 'response.data open')\r\n\r\n        // self.setState({ allOpenRecord: response.data.rows })\r\n        self.setState({ \r\n          allOpenRecord: response.data.rows ,\r\n          fromOpenOrderInfo:response.data.fromOpenOrderInfo,\r\n          toOpenOrderInfo:response.data.toOpenOrderInfo\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  handleChange = selectedOption => {\r\n    this.setState({ selectedOption });\r\n    this.fetchDataAccordingSymbols(selectedOption.value);\r\n  };\r\n\r\n  renderSymbols = () => {\r\n    const { selectedOption, allSymbols } = this.state;\r\n    // let options = allSymbols.map(data => {\r\n    //   return {value:data.name, label:data.name};\r\n    // })\r\n    let options = allSymbols.map(data => {\r\n      return {value:data, label:data};\r\n    });\r\n   \r\n    return(\r\n      <Select\r\n        placeholder=\"Select Symbol...\"\r\n        className=\"S-text\"\r\n        // isMulti\r\n        value={selectedOption}\r\n        onChange={this.handleChange}\r\n        options={options}\r\n      />\r\n      )\r\n  }\r\n\r\n  render() {\r\n    const {allHistoryRecord, allOpenRecord, selectedOption, toOpenOrderInfo, fromOpenOrderInfo,fromHistoryOrderInfo,commissionHistoryOrderInfo ,toHistoryOrderInfo} = this.state;\r\n  //   const sumOfOpenTotal = allOpenRecord.reduce((current, data) => {\r\n  //     return (Math.floor(data.commission + data.swap + data.profit+ current));\r\n  // }, 0);\r\n\r\n  //   const sumOfHistoryTotal = allHistoryRecord.reduce((current, data) => {\r\n  //     return (data.profit + current);\r\n  // }, 0);\r\n    let uniqueSymbols=\"\";\r\n    if(allOpenRecord && Object.entries(allOpenRecord).length>0){\r\n      let fromSymbols = JSON.parse(allOpenRecord.from_symbols);\r\n      // fromSymbols = (fromSymbols).map(data => data).join(', ');\r\n      let toSymbols = JSON.parse(allOpenRecord.to_symbols);\r\n      let combineSymbols = fromSymbols.concat(toSymbols);\r\n      uniqueSymbols = combineSymbols.filter((item, i, ar) => ar.indexOf(item) === i);\r\n      uniqueSymbols = (uniqueSymbols).map(data => data).join(', ')\r\n    }\r\n    let fromsum=0; \r\n    let tosum=0;\r\n    // if(fromHistoryOrderInfo && commissionHistoryOrderInfo && fromHistoryOrderInfo.length>0){\r\n      if(fromHistoryOrderInfo && fromHistoryOrderInfo.length>0){\r\n      fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\r\n    }\r\n   \r\n    if(toHistoryOrderInfo && toHistoryOrderInfo.length>0){\r\n      tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\r\n    }\r\n\r\n    let sumOfHistoryTotal = tosum + fromsum;\r\n\r\n    let openfromsum=0; \r\n    let opentosum=0;\r\n    if((fromOpenOrderInfo && fromOpenOrderInfo.length>0 && fromOpenOrderInfo[0].total!=null) || (allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0)){\r\n      if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\r\n        openfromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\r\n      }else{\r\n        openfromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\r\n      }\r\n    }\r\n    if((toOpenOrderInfo && toOpenOrderInfo.length>0  && toOpenOrderInfo[0].total!=null) || (allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0)){\r\n      if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\r\n        opentosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit+ toOpenOrderInfo[0].swap);\r\n      }else{\r\n        opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n      }\r\n      // opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n    }\r\n\r\n    let sumOfOpenTotal = opentosum + openfromsum;\r\n\r\n  //   console.log(opentosum, 'opentosum')\r\n  //   console.log(openfromsum, 'openfromsum')\r\n  //  console.log(sumOfHistoryTotal, \"sumOfHistoryTotal------\");\r\n  //  console.log(sumOfOpenTotal, \"sumOfOpenTotal-----\");\r\n  //  console.log(allOpenRecord, 'allOpenRecord')\r\n   \r\n\r\n\r\n    return (\r\n      <div className=\"content col-md-12 col-sm-6\">\r\n        <Grid fluid className=\"symbol-box\">\r\n          {/* <div className=\"symbol-box\"> */}\r\n          {/* <span className=\"S-text\">EURUSD</span> */}\r\n          {/* <div style={{ borderBottom: '2px solid grey' }}>\r\n            {this.renderSymbols()}\r\n\r\n          </div> */}\r\n          {/* <div style={{ margin: '20px 0px' }}>\r\n            <span className=\"p-text\">Open Positions</span>\r\n            <span className=\"icon-style\" onClick={this.toggle}>\r\n              <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\r\n            </span>\r\n          </div>\r\n          <div>\r\n\r\n            <Collapse isOpen={this.state.isOpen}>\r\n              <Row>\r\n                {Data.tablePage.items.map((item, index) =>\r\n                  <Col md={6} key={index}>\r\n                    <div className=\"card\">\r\n                      <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\r\n                      </div>\r\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                        <table className=\"table\">\r\n                          <tbody>\r\n                            <tr><td>{item.lot} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.commission} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.swap} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.total} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                )}\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <div>\r\n                      <div className=\"total-box\">\r\n                        <span className=\"text\">Sum of open position</span>\r\n                        <span className=\"text\" style={{ float: 'right' }}>$111111</span>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Row>\r\n            </Collapse>\r\n          </div> */}\r\n          {/* closed position */}\r\n          <Openposition \r\n            allOpenRecord={allOpenRecord}\r\n            toOpenOrderInfo={toOpenOrderInfo}\r\n            fromOpenOrderInfo={fromOpenOrderInfo}\r\n            />\r\n          <Closeposition \r\n            allHistoryRecord={allHistoryRecord}\r\n            fromHistoryOrderInfo={fromHistoryOrderInfo}\r\n            commissionHistoryOrderInfo={commissionHistoryOrderInfo}\r\n            toHistoryOrderInfo={toHistoryOrderInfo}\r\n            />\r\n          <Row>\r\n            \r\n            <Col md={12} sm={6}>\r\n              <div className={sumOfHistoryTotal + sumOfOpenTotal >= 0 ? \"summary-box\" : \"summary-box-red\"}>\r\n                \r\n                \r\n                {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\r\n                {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\r\n                <span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\r\n                \r\n                <Col md={12} sm={12}>\r\n                  <div className=\"summary-text text-center\" style={{fontWeight:600,color:\"#797979\"}}>Summary For ({uniqueSymbols}) {allHistoryRecord.history_info && <span>+ Commission</span>} </div>\r\n                </Col>\r\n                <Col md={12} sm={12}>\r\n                  <div className=\"text-center\" style={{fontWeight:'bold',fontSize:\"18px\"}}>$ {' '}\r\n                  \r\n                  <NumberFormat value={allHistoryRecord.history_info !== undefined ?  sumOfHistoryTotal + sumOfOpenTotal + allHistoryRecord.history_info : sumOfHistoryTotal + sumOfOpenTotal } displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                  \r\n                  \r\n                  {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\r\n                  \r\n                  </div>\r\n                </Col>\r\n                \r\n                <div className=\"clearfix\"></div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          {/* </div> */}\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default TableList;","import React, { Component } from 'react';\r\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\r\n// import SweetAlert from 'react-bootstrap-sweetalert';\r\nimport swal from 'sweetalert';\r\nimport config from '../constant/config.js';\r\nconst axios = require('axios');\r\n\r\nlet intervalSet;\r\nlet timerWaitInterval;\r\nlet timerWait = 100;\r\nclass Innerlogin extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loginForm: false,\r\n            setShow: false,\r\n            show: true,\r\n            login: '',\r\n            password: '',\r\n            broker: '',\r\n            alias: '',\r\n            alert: null,\r\n            persons: [],\r\n            shwPwd: false,\r\n            shwPwd: false,\r\n            shwLogin: false,\r\n            shwbroker: false,\r\n            accountlist: [],\r\n            editForm: false,\r\n            detailForm: false,\r\n            editData: [],\r\n            edituser: '',\r\n            editserver: '',\r\n            editalias: '',\r\n            editstatus: '',\r\n            id: '',\r\n            // tryAgainConnection: false,\r\n            currentAddLogin: null,\r\n            currentAddBroker: null,\r\n            timerShow: false,\r\n            closebtn: true\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onUpdate = this.onUpdate.bind(this);\r\n\r\n    }\r\n    // delete alert\r\n    // deleteThisGoal() {\r\n    //     const getAlert = () => (\r\n    //         <SweetAlert\r\n    //             success\r\n    //             title=\"Woot!\"\r\n    //             onConfirm={() => this.hideAlert()}\r\n    //         >\r\n    //             Hello world!\r\n    //       </SweetAlert>\r\n    //     );\r\n\r\n    //     this.setState({\r\n    //         alert: getAlert()\r\n    //     });\r\n    // }\r\n    fectheAllAccount() {\r\n        let self = this;\r\n        axios.get(config.baseurl + '/users/allAccounts')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.setState({ accountlist: response.data.rows })\r\n                }\r\n            })\r\n            // console.log(response.status,\"accountlist\");\r\n    }\r\n    onChange(e) {\r\n\r\n        this.setState({ error: '' })\r\n        if (e.target.name === 'login') {\r\n            const re = /^[0-9\\b]+$/;\r\n            if (e.target.value === '' || re.test(e.target.value)) {\r\n                this.setState({ [e.target.name]: e.target.value })\r\n            }\r\n        }\r\n        else {\r\n\r\n            this.setState({ [e.target.name]: e.target.value.trim() })\r\n        }\r\n\r\n    }\r\n\r\n    checkUserConnected = (login, broker) => {\r\n        let self = this;\r\n        axios.post(config.baseurl + '/users/checkUserConnected', { login: login, broker: broker })\r\n            .then(function (response) {\r\n\r\n                if (response.status == 200) {\r\n                    if (response.data.connected) {\r\n                        self.setState({ currentAddLogin: null, currentAddBroker: null });\r\n                        clearInterval(intervalSet);\r\n                        clearInterval(timerWaitInterval);\r\n                        self.setState({ timerShow: false });\r\n                        timerWait = 100\r\n                        // self.setState({ tryAgainConnection: false });\r\n                        self.setState({ loginForm: false })\r\n                        self.handleClose();\r\n                        self.fectheAllAccount()\r\n                        // swal({\r\n                        //     text: \"Connected\",\r\n                        //     timer: 2000,\r\n                        //     button: false\r\n                        // })\r\n                    }\r\n                } else {\r\n\r\n                }\r\n            })\r\n    }\r\n\r\n    setIntervalCustom = () => {\r\n        let self = this;\r\n        var name = \"Authorization Process Failed\";\r\n        var content = document.createElement('div');\r\n            content.innerHTML = ' <strong>'+ name +'</strong>';\r\n        \r\n           \r\n        timerWaitInterval = setInterval(function () {\r\n            timerWait--;\r\n            if (timerWait <= 0) {\r\n                self.setState({ currentAddLogin: null, currentAddBroker: null });\r\n                clearInterval(intervalSet);\r\n                clearInterval(timerWaitInterval);\r\n                self.setState({ timerShow: false });\r\n                self.setState({ loginForm: false })\r\n                // self.setState({closeButton:false})\r\n                self.setState({ closebtn: true })\r\n                timerWait = 100\r\n                swal({\r\n                \r\n\r\n                    content: content,\r\n                    timer: 2000,\r\n                    button: false\r\n                    \r\n                })\r\n            }\r\n\r\n            else {\r\n                self.setState({ timerShow: true });\r\n\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    // tryAgainConnectionFun = () => {\r\n    //     let self = this;\r\n    //     self.setState({ closebtn: true })\r\n    //     self.setIntervalCustom();\r\n    //     intervalSet = setInterval(function () {\r\n    //         self.checkUserConnected(self.state.currentAddLogin, self.state.currentAddBroker)\r\n    //     }, 5000);\r\n    // }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const userdetail = {\r\n            login: this.state.login,\r\n            password: this.state.password,\r\n            broker: this.state.broker,\r\n            alias: this.state.alias\r\n\r\n\r\n        }\r\n        if (this.state.login == '') {\r\n            this.setState({ error: 'login' })\r\n        }\r\n        else if (this.state.password == '') {\r\n            this.setState({ error: 'password' })\r\n        }\r\n        else if (this.state.broker == '') {\r\n            this.setState({ error: 'broker' })\r\n        } else {\r\n            this.setState({ error: '' })\r\n        }\r\n        if (this.state.login !== '' && this.state.password !== '' && this.state.broker !== '') {\r\n\r\n            // {\r\n            //     swal({\r\n            //         text: \"User Already Connected\",\r\n            //         timer: 2000,\r\n            //         button: false\r\n            //     })\r\n            // }\r\n            let self = this;\r\n            self.setState({ closebtn: false })\r\n            axios.post(config.baseurl + '/users/addUser', userdetail)\r\n                .then(function (response) {\r\n                    if (response.data.status === true) {\r\n                        self.setIntervalCustom();\r\n                        self.fectheAllAccount();\r\n                        self.setState({ currentAddLogin: userdetail.login, currentAddBroker: userdetail.broker });\r\n                        intervalSet = setInterval(function () {\r\n                            self.checkUserConnected(userdetail.login, userdetail.broker)\r\n                        }, 5000);\r\n\r\n                    }\r\n                    if (response.data.status == 202) {\r\n                        swal({\r\n                            text: \"User doesn't exist\",\r\n                            timer: 2000,\r\n                            button: false\r\n                        })\r\n\r\n                    }\r\n                    if (response.data.status == '500') {\r\n                        swal({\r\n                            text: \"User Already Connected!\",\r\n                            timer: 2000,\r\n                            button: false\r\n                        })\r\n                        self.setState({ closebtn: true })\r\n\r\n\r\n                    }\r\n                    else if (response.status == 201) {\r\n                        swal({\r\n                            title: \"Done!\",\r\n                            text: response.data,\r\n                            // icon: \"{response.status == 200 ? 'warning ':'success'}\",\r\n                            timer: 2000,\r\n                            button: false\r\n                        })\r\n                    }\r\n\r\n                })\r\n                .catch(function (error) {\r\n\r\n                    self.handleClose();\r\n                });\r\n\r\n\r\n\r\n            /////////////////// redirect to dashboard\r\n            // login(user).then(res => {\r\n            //     if (res) {\r\n            //         this.props.history.push(`\\profile`)\r\n            //     }\r\n            // })\r\n        }\r\n    }\r\n    onUpdate(e) {\r\n        e.preventDefault();\r\n        const userdetail = {\r\n            id: this.state.id,\r\n            user: this.state.edituser,\r\n            broker: this.state.editserver,\r\n            alias: this.state.editalias\r\n        }\r\n        let self = this;\r\n        axios.post(config.baseurl + '/users/updateuser', userdetail)\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    // self.setState({ accountlist: response.data.rows })\r\n                    self.fectheAllAccount();\r\n                    self.handleCloseEdit();\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n            });\r\n    }\r\n    // checkValidUser = ()=> {\r\n    //     console.log(this.state,'loginnnnnnnnnnnnnnnnnnnnnnnn')\r\n    //     const userdetail = {\r\n    //         login: this.state.login,\r\n    //         password: this.state.password,\r\n    //         broker: this.state.broker,\r\n    //         alias: this.state.alias\r\n    //     }\r\n    //     axios.get(config.baseurl + '/accounts/matchUser',userdetail)\r\n    //     .then(function (response) {\r\n\r\n    //         if (response.status == 200) {\r\n    //             // alert(response.data)\r\n    //             swal({\r\n    //                 title: \"Done!\",\r\n    //                 text: response.data,\r\n    //                 // icon: \"{response.status == 200 ? 'warning ':'success'}\",\r\n    //                 timer: 2000,\r\n    //                 button: false\r\n    //             })\r\n\r\n    //         }\r\n    //         // console.log(response);\r\n    //     })\r\n    //     .catch(function (error) {\r\n    //         console.log(error);\r\n    //     });\r\n    // }\r\n    toogle = () => {\r\n        this.setState({ loginForm: !this.state.loginForm, })\r\n        this.setState({ login: '', password: '', broker: '', alias: '' })\r\n    }\r\n    \r\n    handleClose = () => {\r\n        this.setState({ loginForm: false })\r\n\r\n    }\r\n    handleCloseEdit = () => {\r\n        this.setState({ editForm: false })\r\n    }\r\n    handleCloseDetail = () => {\r\n        this.setState({ detailForm: false })\r\n    }\r\n    handleShow = () => {\r\n        this.setState({ setShow: true })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fectheAllAccount();\r\n    \r\n    }\r\n    createTr = () => {\r\n        return this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => {\r\n            console.log(this.state.accountlist,'this.state.accountlist');\r\n            return (\r\n                <tr key={index}>\r\n                    <th scope=\"row\">{index + 1}</th>\r\n                    <td>{item.login}</td>\r\n                    <td>{item.broker}</td>\r\n                    <td>{item.alias}</td>\r\n                    <td style={{ fontWeight: 600 }}>{item.launched == 1 ? 'Connected' : 'Disconnected'}</td>\r\n                    <td>\r\n                        <a href=\"\" onClick={(e) => this.viewFilter(e, item)}><i className=\"fa fa-eye facolor\" aria-hidden=\"true\"></i></a>\r\n                        <a href=\"\" onClick={(e) => this.editFilter(e, item)}><i className=\"fa fa-pencil-square-o facolor\" aria-hidden=\"true\"></i></a>\r\n                        {/* <a href=\"\" onClick={(e)=> this.deleteFilter(e,item)}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></a> */}\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n    editFilter(e, data) {\r\n        e.preventDefault();\r\n        this.setState({ editForm: true, editData: data, id: data.id, edituser: data.login, editserver: data.broker, editalias: data.alias })\r\n    }\r\n    editAlias(e) {\r\n        this.setState({ editalias: e.target.value })\r\n    }\r\n    viewFilter(e, data) {\r\n        e.preventDefault();\r\n        this.setState({ detailForm: true, edituser: data.login, editserver: data.broker, editalias: data.alias, editstatus: data.status })\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"content\">\r\n                <Grid fluid>\r\n                    <Row>\r\n                        <Col md={12} sm={6}>\r\n                            <div className=\"terminal-box\">\r\n                                <span className=\"terminal-text\">Terminal Accounts</span>\r\n                                {/* <div style={{ padding: '20px' }}>\r\n                                    <a\r\n                                        onClick={() => this.deleteThisGoal()}\r\n                                        className='btn btn-danger'\r\n                                    >\r\n                                        <i className=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete Goal\r\n                                     </a>\r\n                                    {this.state.alert}\r\n                                </div> */}\r\n                            </div>\r\n                            <button className=\"pull-right add-button\" onClick={this.toogle}>Add New</button>\r\n\r\n                            {this.state.loginForm &&\r\n                                <Modal show={this.state.show} onHide={this.state.closebtn ? this.handleClose : () => console.log('error')} >\r\n                                    {/* <Modal.Header closeButton>\r\n                                        <Modal.Title>Log In</Modal.Title>\r\n                                    </Modal.Header> */}\r\n                                    <Modal.Body>\r\n                                        <div className=\"form-box\">\r\n                                            <Modal.Header closeButton={this.state.closebtn?true:false}>\r\n                                                <Modal.Title className=\"text-center\"><b>Log In</b></Modal.Title>\r\n                                            </Modal.Header>\r\n                                            <form style={{ marginTop: '20px' }} onSubmit={this.onSubmit}>\r\n                                                <label>User Name</label>\r\n                                                <input type='text'\r\n                                                    className=\"Itext\" placeholder=\"User Name\" name=\"login\" value={this.state.login} onChange={this.onChange} disabled={this.state.currentAddLogin ? true : false}\r\n                                                // onKeyUp={this.checkValidUser}\r\n                                                ></input>\r\n\r\n\r\n                                                {(this.state.error == \"login\") &&\r\n                                                    <span style={{ color: 'red', fontSize: '13px' }}>Please Fill the UserName field</span>\r\n                                                }\r\n                                                <br></br>\r\n                                                <label>Password</label>\r\n                                                <input className=\"Itext\" placeholder=\"Password\" name=\"password\" type=\"password\" value={this.state.password} onChange={this.onChange} disabled={this.state.currentAddLogin ? true : false}></input>\r\n                                                {(this.state.error == \"password\") &&\r\n                                                    <span style={{ color: 'red', fontSize: '13px' }}>Please Fill the Password field</span>\r\n                                                }\r\n                                                <br></br>\r\n                                                <label>Server</label>\r\n                                                <input className=\"Itext\" name=\"broker\" placeholder=\"Server\" value={this.state.broker} onChange={this.onChange} disabled={this.state.currentAddBroker ? true : false}></input>\r\n                                                {(this.state.error == \"broker\") &&\r\n                                                    <span style={{ color: 'red', fontSize: '13px' }}>Please Fill the Server field</span>\r\n                                                }\r\n                                                <br></br>\r\n                                                <label>Alias</label>\r\n                                                <input className=\"Itext\" placeholder=\"Alias\" value={this.state.alias} onChange={this.onChange} name=\"alias\"></input>\r\n                                                {this.state.timerShow &&\r\n                                                    <p>\r\n                                                        Connecting to server... {timerWait} seconds remains\r\n                                                </p>\r\n                                                }\r\n                                                <div className=\"clearfix\">\r\n                                                    {/* {this.state.tryAgainConnection === false ? */}\r\n                                                        {/* ( */}\r\n                                                            {this.state.timerShow == false &&\r\n                                                            <button type=\"submit\" className=\"save\">Submit</button>}\r\n                                                        {/* ) */}\r\n                                                    {/* //     :\r\n                                                    //     (this.state.timerShow == false && <div ></div>)\r\n                                                    // } */}\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n\r\n                                    </Modal.Body>\r\n                                    {/* <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                                            Close\r\n                                  </Button>\r\n                                        \r\n                                    </Modal.Footer> */}\r\n                                </Modal>\r\n\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                    <div style={{ background: '#ffffff' }}>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                <div style={{ padding: '10px' }}>\r\n                                    <table className=\"table table-striped\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th scope=\"col\">Sr.No.</th>\r\n                                                <th scope=\"col\">User Name</th>\r\n                                                <th scope=\"col\">Server</th>\r\n                                                <th scope=\"col\">Alias</th>\r\n                                                <th scope=\"col\">Status</th>\r\n                                                <th scope=\"col\">Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {/* {this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => { */}\r\n                                            {/* // console.log(\"hhhhhhhhhhh\") */}\r\n                                            {this.createTr()}\r\n                                            {/* })} */}\r\n                                            {/* <tr>\r\n                                                <th scope=\"row\">2</th>\r\n                                                <td>Jacob</td>\r\n                                                <td>Thornton</td>\r\n                                                <td>5.1.2.9</td>\r\n                                                <td>Connected</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th scope=\"row\">3</th>\r\n                                                <td>Larry</td>\r\n                                                <td>the Bird</td>\r\n                                                <td>ab@123</td>\r\n                                                <td>Connected</td>\r\n                                            </tr> */}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </Col>\r\n                            <div className=\"centerbtn\">\r\n                            </div>\r\n\r\n                        </Row>\r\n                    </div>\r\n\r\n                </Grid>\r\n\r\n                {this.state.editForm &&\r\n                    <Modal show={this.state.show} onHide={this.handleCloseEdit}>\r\n                        {/* <Modal.Header closeButton>\r\n                                        <Modal.Title>Log In</Modal.Title>\r\n                                    </Modal.Header> */}\r\n                        <Modal.Body>\r\n                            <div className=\"form-box\">\r\n                                <Modal.Header closeButton>\r\n                                    <Modal.Title className=\"text-center\"><b>Edit</b></Modal.Title>\r\n                                </Modal.Header>\r\n                                <form style={{ marginTop: '20px' }} onSubmit={this.onUpdate}>\r\n                                    <label>USER</label>\r\n                                    <input className=\"Itext\" disabled name=\"broker\" placeholder=\"Server\" value={this.state.edituser} ></input>\r\n\r\n                                    <label>Server</label>\r\n                                    <input className=\"Itext\" disabled name=\"broker\" placeholder=\"Server\" value={this.state.editserver} ></input>\r\n                                    <label>Alias</label>\r\n                                    <input className=\"Itext\" placeholder=\"Alias\" value={this.state.editalias} name=\"alias\" onChange={(e) => this.editAlias(e)}></input>\r\n                                    <div className=\"clearfix\">\r\n                                        <button type=\"submit\" className=\"save\">Update</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n\r\n                        </Modal.Body>\r\n                        {/* <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                                            Close\r\n                                  </Button>\r\n                                        \r\n                                    </Modal.Footer> */}\r\n                    </Modal>\r\n\r\n                }\r\n\r\n                {this.state.detailForm &&\r\n                    <Modal show={this.state.show} onHide={this.handleCloseDetail}>\r\n                        {/* <Modal.Header closeButton>\r\n                                        <Modal.Title>Log In</Modal.Title>\r\n                                    </Modal.Header> */}\r\n                        <Modal.Body>\r\n                            <div className=\"form-box\">\r\n                                <Modal.Header closeButton>\r\n                                    <Modal.Title className=\"text-center\"><b>Details</b></Modal.Title>\r\n                                </Modal.Header>\r\n                                <div className=\"detail_div\">\r\n                                    <table>\r\n                                        <tr>\r\n                                            <td><label>User Name</label></td>\r\n                                            <td><label>{this.state.edituser}</label></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><label>Server</label></td>\r\n                                            <td><label>{this.state.editserver}</label></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><label>Alias</label></td>\r\n                                            <td><label>{this.state.editalias}</label></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><label>Status</label></td>\r\n                                            <td><label>{this.state.editstatus == 1 ? 'Connected' : 'Disconnected'}</label></td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </Modal.Body>\r\n                    </Modal>\r\n\r\n                }\r\n\r\n\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Innerlogin;","import React, { Component } from \"react\";\r\n// import ChartistGraph from \"react-chartist\";\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\nimport TableList from '../views/TableList';\r\n// import { Card } from \"components/Card/Card.jsx\";\r\n// import { StatsCard } from \"components/StatsCard/StatsCard.jsx\";\r\n// import { Tasks } from \"components/Tasks/Tasks.jsx\";\r\nimport NumberFormat from 'react-number-format';\r\nimport Data from './Data';\r\nimport Moment from 'react-moment';\r\n\r\n// import {\r\n//   dataPie,\r\n//   legendPie,\r\n//   dataSales,\r\n//   optionsSales,\r\n//   responsiveSales,\r\n//   legendSales,\r\n//   dataBar,\r\n//   optionsBar,\r\n//   responsiveBar,\r\n//   legendBar\r\n// } from \"variables/Variables.jsx\";\r\nimport config from '../constant/config.js';\r\nconst axios = require('axios');\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      details: [],\r\n      accountlist: [],\r\n      persons: [],\r\n      filterlist: [],\r\n      formData: [],\r\n      errorMassege: false,\r\n      error: '',\r\n      dateTime:''\r\n      // allSymbols:[],\r\n      // symbolsObj:[]\r\n    }\r\n  }\r\n  createLegend(json) {\r\n    var legend = [];\r\n    for (var i = 0; i < json[\"names\"].length; i++) {\r\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\r\n      legend.push(<i className={type} key={i} />);\r\n      legend.push(\" \");\r\n      legend.push(json[\"names\"][i]);\r\n    }\r\n    return legend;\r\n  }\r\n\r\n  getAllAccounts = () => {\r\n    let self = this;\r\n    axios.get(config.baseurl + '/accounts/fetchAllAccounts')\r\n    .then(function (response) {\r\n      if (response.status == 200) {\r\n        self.setState({ accountlist: response.data.rows })\r\n      }\r\n    });\r\n  }\r\n\r\n  fetchActivefilterData = () => {\r\n    let self = this;\r\n    axios.get(config.baseurl + '/filter/fetchActivefilterdata')\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          self.setState({ filterlist: response.data.rows })\r\n\r\n          if (self.state.filterlist.length == 0) {\r\n            self.setState({ errorMassege: true })\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  fetchAllOpenTrade = () => {\r\n    let self = this;\r\n    axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n\r\n          self.setState({ dateTime: response.data.filteredInfoTime })\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  componentWillMount() {\r\n    this.getAllAccounts();\r\n    this.fetchActivefilterData();\r\n    this.fetchAllOpenTrade();\r\n    // axios.get(config.baseurl + '/filter/fetchfilterdata')\r\n    // .then(function (response) {\r\n    //   console.log(response.data,'hghghjghghj')\r\n    //   if (response.status == 200) {\r\n    //     // self.setState({ formData: response.data.rows })\r\n    //     // console.log(formData);\r\n\r\n    //     response.data.rows.map((item, index) => {\r\n    //       console.log(item,'item');\r\n    //         if (item.status==1){\r\n    //           self.setState({errorMassege: false},()=>{\r\n    //             console.log(self.state, \"display\");\r\n\r\n    //           })\r\n    //           // console.log(self.state.errorMassege);\r\n\r\n\r\n    //         }\r\n\r\n    //     })\r\n    //   }\r\n    // });\r\n    // axios.get(config.baseurl + '/filter/fetchfilterdata')\r\n    // .then(function (response) {\r\n    //   if (response.status == 200) {\r\n    //     self.setState({ filterlist: response.data.rows })\r\n    //   }\r\n    // })\r\n\r\n    // axios.get(config.baseurl + '/filter/fetchActivefilterdata')\r\n    // .then(function (response) {\r\n    //   if (response.status == 200) {\r\n\r\n    //     if(response.data.rows && response.data.rows.length>0){\r\n    //       let symbolsObj = (response.data.rows[0].symbols).map(data => {\r\n    //         return ({value:data, label:data})\r\n    //       })\r\n    //       self.setState({ filterlist: response.data.rows, allSymbols: response.data.rows[0].symbols, symbolsObj:symbolsObj })\r\n    //     }\r\n    //   }\r\n    // });\r\n    \r\n  }\r\n\r\n  showData = (accountDetailValue) => {\r\n    \r\n\r\n    //    if (this.state.accountDetailValue == null || this.state.accountDetailValue == '') {\r\n    //     this.setState({ error: 'accountDetailValue' })\r\n    //     return\r\n    //  }\r\n    //  else{\r\n    //     this.setState({error:''})\r\n    // }\r\n    // return this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => {\r\n    //   if(accountDetailValue==='margin_level'){\r\n    //       return (\r\n    //         <td className={index !== (this.state.accountlist.length - 1) ? 'tdClr2 tdClr' : 'tdClr2'} key={index}>\r\n    //         {item.accounts_details[0][accountDetailValue]} %</td>\r\n    //       )\r\n    //   }\r\n    //   return (\r\n    //     <td className={index !== (this.state.accountlist.length - 1) ? 'tdClr2 tdClr' : 'tdClr2'} key={index}>\r\n    //     {item.accounts_details[0].currency == 'USD' ? '$' : ''} {item.accounts_details[0][accountDetailValue]}</td>\r\n    //   )\r\n    // })\r\n    return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\r\n      if (accountDetailValue === 'margin_level') {\r\n        return (\r\n          <>\r\n            <td className=\"tdClr2 tdClr\" key={index}> \r\n              <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true}  decimalScale={2} /> %\r\n            </td>\r\n            <td className=\"tdClr2\" key={index}>\r\n              {/* {item.accountToInfo[0].accounts_details[0][accountDetailValue]} % */}\r\n              <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true}  decimalScale={2} /> %\r\n            </td>\r\n          </>\r\n        )\r\n      }\r\n      if (item.accountFromInfo.length > 0) {\r\n        return (\r\n          <>\r\n            <td className=\"tdClr2 tdClr\" key={index}>\r\n              {item.accountFromInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''}  {' '}\r\n              <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true}  decimalScale={2} />\r\n            </td>\r\n\r\n            <td className=\"tdClr2\" key={index}>\r\n              {item.accountToInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''} {' '}\r\n              {/* {item.accountToInfo[0].accounts_details[0][accountDetailValue]} */}\r\n              <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n            </td>\r\n          </>\r\n        )\r\n\r\n      }\r\n\r\n    })\r\n  }\r\n  tableHeader = () => {\r\n\r\n    // return this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => {\r\n    //   return (\r\n    //     <th key={index} className={item.accounts_details[0].account_id == 1 && index !== (this.state.accountlist.length - 1) ? 'bText colorDarkBlue text-center tdClr2 tdClr' : 'bText colorDarkBlue text-center tdClr2'}>\r\n    //       <span>\r\n    //         {item.login}\r\n    //       </span>\r\n    //     <div className=\"colorDarkBlue\" style={{fontSize:10}}> \r\n    //       ({(item.alias!=null) ? item.alias : '-'})\r\n    //     </div>\r\n    //     </th>\r\n\r\n    //   )\r\n    // }\r\n    // )\r\n    return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\r\n      return (\r\n        <>\r\n          <th key={index} className=\"bText colorDarkBlue text-center tdClr2 tdClr\">\r\n            <span>\r\n              {item.accountFromInfo[0].login}\r\n            </span>\r\n            <div className=\"colorDarkBlue\" style={{ fontSize: 10 }}>\r\n              ({(item.accountFromInfo[0].alias != null) ? item.accountFromInfo[0].alias : '-'})\r\n          </div>\r\n          </th>\r\n          <th key={index} className=\"bText color2 text-center tdClr2\">\r\n            <span>\r\n              {item.accountToInfo[0].login}\r\n            </span>\r\n            <div className=\"color2\" style={{ fontSize: 10 }}>\r\n              ({(item.accountToInfo[0].alias != null) ? item.accountToInfo[0].alias : '-'})\r\n          </div>\r\n          </th>\r\n        </>\r\n\r\n      )\r\n\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const dateToFormat = new Date();\r\n    return (\r\n\r\n      <div className=\"\">\r\n      {this.state.errorMassege == true &&\r\n        <div className=\"popup\">\r\n\r\n          <div class=\"card w-75 \">\r\n            <div class=\"card-body topmargin\">\r\n            <div class=\" card-text popuptext\" role=\"alert\">Please Select Filters To Continue...</div>\r\n            </div>\r\n          </div>\r\n        </div>}\r\n\r\n        <div className=\"content\">\r\n        {this.state.errorMassege != true &&\r\n        \r\n          <Grid fluid>\r\n            <Row>\r\n          <div className=\"lastUpdate\">\r\n             <span> Last Updated :  </span>\r\n            {this.state.dateTime}  </div>\r\n              <Col md={12} sm={6}>\r\n\r\n                <div className=\"terminal-box\">\r\n                  {(this.state.errorMassege) && <p style={{ color: 'red', fontSize: '10px' }}>Please Select Any Account</p>}\r\n                  <span className=\"terminal-text\">Terminal Statistics</span>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ margin: '20px 0px' }}>\r\n\r\n              <Row>\r\n                {Data.dashBoardPage.items.map((item, index) =>\r\n\r\n                  <Col md={4} sm={6} key={index}>\r\n                    <div style={{ margin: '30px 0px' }} className=\"text-center\">\r\n                      <span className=\"bText\">{item.title}</span>\r\n                    </div>\r\n                    <div className=\"balance-box Pmargin\"\r\n                    // className={item.id == '1' ? 'balance-box' : item.id == '2' ?\r\n                    //   'balance-box Pmargin' : item.id == '3' ? 'balance-box equity-box' :\r\n                    //     item.id == '4' ? 'balance-box Fmargin' : item.id == '5' ? 'balance-box floating' : 'balance-box  margin-box'}\r\n                    >\r\n                      <div className=\"content\">\r\n                        <div className=\"table-responsive\">\r\n\r\n                          <table className=\"table  text-center\">\r\n\r\n                            <tbody>\r\n                              <tr>\r\n                                {this.tableHeader()}\r\n                              </tr>\r\n                              <tr>\r\n                                {item.title == 'Balance' && this.showData('balance')}\r\n                                {item.title == 'Equity' && this.showData('equity')}\r\n                                {item.title == 'Margin' && this.showData('margin')}\r\n                                {item.title == 'Free Margin' && this.showData('free_margin')}\r\n                                {item.title == 'Margin %' && this.showData('margin_level')}\r\n                                {item.title == 'Floating P/L' && this.showData('profit')}\r\n                              </tr>\r\n                            </tbody>\r\n                          </table>\r\n\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n\r\n                )}\r\n              </Row>\r\n\r\n              {/* \r\n            <Row>\r\n              <Col md={4}>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <Row>\r\n                      <Col md={2}>\r\n                        <div>\r\n                          <div>\r\n                            <div>\r\n                              <span>Logn in</span>\r\n                            </div>\r\n                            <div>\r\n                              <span>Balance</span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md={2}>\r\n                        <div>\r\n                          <div>\r\n                            <div>\r\n                              <span>Logn in</span>\r\n                            </div>\r\n                            <div>\r\n                              <span>Balance</span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md={2}>\r\n                        <div>\r\n                          <div>\r\n                            <div>\r\n                              <span>Logn in</span>\r\n                            </div>\r\n                            <div>\r\n                              <span>Balance</span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row> */}\r\n\r\n            </Row>\r\n            <Row>\r\n              <Col md={12} sm={6}>\r\n                <div className=\"terminal-box\">\r\n                  <span className=\"terminal-text\">Statistics Per Symbol</span>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <TableList />\r\n            </Row>\r\n          </Grid>\r\n        }\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from 'react';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\r\nimport TagsInput from 'react-tagsinput'\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport config from '../../constant/config.js';\r\n\r\nimport Select from 'react-select'\r\nimport { createLogicalAnd } from 'typescript';\r\nconst axios = require('axios');\r\n\r\nclass FilterEdite extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedAccountOption: null,\r\n            selectedSymbolOption: null,\r\n            selectedSymbolOptionTo: null,\r\n            selectedAccountOptionTo: null,\r\n            selectedCommissionAccount: null,\r\n            startDate: null,\r\n            endDate: null,\r\n            startDateTo: null,\r\n            endDateTo: null,\r\n            allAccounts: [],\r\n            allSymbols: [],\r\n            profileName: '',\r\n            showCommission: false,\r\n            // showAddCommission: false,\r\n            id: '',\r\n            error: '',\r\n            autoSyncClose: false,\r\n            magicNumber: [],\r\n            magicNumberTo: [],\r\n            tags: [],\r\n            include_exclude_status: '',\r\n            showMagicNumber: false,\r\n            showMagicNumberTo: false,\r\n            exclude: false,\r\n            include: false,\r\n            excludeTo: false,\r\n            includeTo: false,\r\n\r\n\r\n        };\r\n\r\n\r\n    }\r\n    componentWillMount() {\r\n\r\n        let self = this;\r\n        axios.get(config.baseurl + '/accounts/fetchAllAccounts')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.setState({ allAccounts: response.data.rows })\r\n                }\r\n            })\r\n        axios.get(config.baseurl + '/accounts/fetchAllSymbol')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.setState({ allSymbols: response.data.rows })\r\n                }\r\n            })\r\n    }\r\n    componentDidMount() {\r\n\r\n        let abc = this.props.data;\r\n        console.log(abc);\r\n        if (abc) {\r\n\r\n\r\n            let from_symbol = JSON.parse(abc.from_symbols);\r\n            let to_symbol = JSON.parse(abc.to_symbols);\r\n\r\n            let all_from_symbols = from_symbol.map(data => { return ({ value: data, label: data }) });\r\n            let all_to_symbols = to_symbol.map(data => { return ({ value: data, label: data }) });\r\n\r\n            from_symbol = from_symbol.join(', ');\r\n            to_symbol = to_symbol.join(', ');\r\n\r\n            // if(this.state.selectedCommissionAccount !== null ){\r\n            //  this.setState({selectedCommissionAccount: null})\r\n            // }else\r\n            this.setState({\r\n                id: abc.id,\r\n                profileName: abc.profile_name,\r\n                selectedAccountOption: ({ value: abc.accountFromInfo[0].id, label: abc.accountFromInfo[0].login }),\r\n                selectedAccountOptionTo: ({ value: abc.accountToInfo[0].id, label: abc.accountToInfo[0].login }),\r\n                // showAddCommission: abc.commission_acount_id !== 0 ? true : false,\r\n                showCommission: abc.commission_acount_id !== 0 ? true : false,\r\n                selectedCommissionAccount: abc.commission_acount_id !== 0 ? ({ value: abc.accountCommissionInfo[0].id, label: abc.accountCommissionInfo[0].login }) : null,\r\n                showMagicNumber: abc.from_include_exclude_status !== 0 ? true : false,\r\n                showMagicNumberTo: abc.to_include_exclude_status !== 0 ? true : false,\r\n                magicNumber: abc.from_magic_number != \"0\" && abc.from_magic_number != \"\"? JSON.parse(abc.from_magic_number):[],\r\n                magicNumberTo: abc.to_magic_number != \"0\" && abc.to_magic_number != \"\"? JSON.parse(abc.to_magic_number):[],\r\n                include: abc.from_include_exclude_status === 1 ? true : false,\r\n                exclude: abc.from_include_exclude_status === 2 ? true : false,\r\n                includeTo: abc.to_include_exclude_status === 1 ? true : false,\r\n                excludeTo: abc.to_include_exclude_status === 2 ? true : false,\r\n\r\n\r\n                selectedSymbolOption: all_from_symbols,\r\n                autoSyncClose: abc.auto_close == 1 ? true : false,\r\n                selectedSymbolOptionTo: all_to_symbols,\r\n                startDate: new Date(abc.startdateFrom),\r\n                startDateTo: new Date(abc.startdateTo),\r\n\r\n                endDate: (abc.enddateFrom != null) ? new Date(abc.enddateFrom) : '',\r\n                endDateTo: (abc.enddateTo != null) ? new Date(abc.enddateTo) : '',\r\n                //     endDate: (abc.enddateFrom!=null) ? new Date(abc.enddateFrom) : new Date(),\r\n                //     endDateTo: (abc.enddateTo!=null) ? new Date(abc.enddateTo) : new Date(),\r\n            })\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    handleDropdownChange = (e) => {\r\n        this.setState({ selectValue: e.target.value });\r\n    }\r\n    handleChangeDate = date => {\r\n        this.setState({\r\n            startDate: date\r\n        });\r\n    }\r\n    handleEndDate = date => {\r\n\r\n        if (date < this.state.startDate && date != null) {\r\n            this.setState({ error: 'enddate', endDate: \"\" })\r\n            return\r\n        }\r\n        this.setState({\r\n            error: '',\r\n            endDate: date,\r\n        });\r\n    }\r\n    handleChangeDateTo = date => {\r\n        this.setState({\r\n            startDateTo: date\r\n        });\r\n    }\r\n    handleEndDateTo = date => {\r\n        if (date < this.state.startDateTo && date != null) {\r\n            this.setState({ error: 'enddateto', endDateTo: \"\" })\r\n            return\r\n        }\r\n        this.setState({\r\n            error: '',\r\n            endDateTo: date,\r\n        });\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({ value: Array.from(event.target.selectedOptions, (item) => item.value) });\r\n    }\r\n\r\n    handeChangeShowCommission = () => {\r\n        this.setState({ showCommission: !this.state.showCommission })\r\n    }\r\n    handleChangeCommissionAccount = selectedCommissionAccount => {\r\n        this.setState({ selectedCommissionAccount });\r\n    };\r\n\r\n    renderCommissionAccount = () => {\r\n        const { selectedCommissionAccount, allAccounts } = this.state;\r\n\r\n        let options = allAccounts.map(data => {\r\n            return { value: data.id, label: data.login };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Account...\"\r\n                value={selectedCommissionAccount}\r\n                onChange={this.handleChangeCommissionAccount}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n\r\n    renderAccountSelect = () => {\r\n        const { selectedAccountOption, allAccounts } = this.state;\r\n\r\n\r\n        let options = allAccounts.map(data => {\r\n            return { value: data.id, label: data.login };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Account...\"\r\n                value={selectedAccountOption}\r\n                onChange={this.handleChangeAccount} l\r\n                options={options}\r\n                rules={{ required: 'Please select an option' }}\r\n            />\r\n        )\r\n    }\r\n\r\n    handleChangeAccountTo = selectedAccountOptionTo => {\r\n        if (selectedAccountOptionTo.label == this.state.selectedAccountOption.label) {\r\n            this.setState({ error: 'err' })\r\n        } else\r\n            this.setState({ selectedAccountOptionTo });\r\n    };\r\n    renderAccountSelectTo = () => {\r\n        const { selectedAccountOptionTo, allAccounts } = this.state;\r\n\r\n        let options = allAccounts.map(data => {\r\n            return { value: data.id, label: data.login };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Account...\"\r\n                value={selectedAccountOptionTo}\r\n                onChange={this.handleChangeAccountTo}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n\r\n    handleChangeAccount = selectedAccountOption => {\r\n        this.setState({ selectedAccountOption });\r\n    };\r\n    handleChangeSymbol = selectedSymbolOption => {\r\n        this.setState({ selectedSymbolOption });\r\n    };\r\n    renderSymbolSelect = () => {\r\n        const { selectedSymbolOption, allSymbols } = this.state;\r\n        let options = allSymbols.map(data => {\r\n            return { value: data.name, label: data.name };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Symbol...\"\r\n                value={selectedSymbolOption}\r\n                isMulti\r\n                onChange={this.handleChangeSymbol}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n    handleChangeSymbolTo = selectedSymbolOptionTo => {\r\n        this.setState({ selectedSymbolOptionTo });\r\n    };\r\n    renderSymbolSelectTo = () => {\r\n        const { selectedSymbolOptionTo, allSymbols } = this.state;\r\n        let options = allSymbols.map(data => {\r\n            return { value: data.name, label: data.name };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Symbol...\"\r\n                value={selectedSymbolOptionTo}\r\n                isMulti\r\n                onChange={this.handleChangeSymbolTo}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n\r\n    handleChangeMagicNumber = (magicNumber) => {\r\n\r\n        console.log(magicNumber)\r\n\r\n        // if(re.test(tags))\r\n        this.setState({ magicNumber })\r\n    }\r\n    handleChangeMagicNumberTo = (magicNumberTo) => {\r\n\r\n        console.log(magicNumberTo)\r\n\r\n        // if(re.test(tags))\r\n        this.setState({ magicNumberTo })\r\n    }\r\n    changeIncludeDefaultProperty = () => {\r\n\r\n        this.setState({ include: !this.state.include, exclude: false }, () => {\r\n           \r\n            console.log(this.state.include, this.state.exclude)\r\n        })\r\n        if (!this.state.include == true) {\r\n            this.setState({ showMagicNumber: true })\r\n        } else if (this.state.include == true) {\r\n            this.setState({ showMagicNumber: false })\r\n\r\n        }\r\n\r\n\r\n    }\r\n    changeExcludeDefaultProperty = () => {\r\n        this.setState({ exclude: !this.state.exclude, include: false }, () => {\r\n            console.log(this.state.include, this.state.exclude)\r\n\r\n        })\r\n        if (!this.state.exclude == true) {\r\n            this.setState({ showMagicNumber: true })\r\n        } else if (this.state.exclude == true) {\r\n            this.setState({ showMagicNumber: false })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    changeIncludeDefaultPropertyTo = () => {\r\n        this.setState({ includeTo: !this.state.includeTo, excludeTo: false }, () => {\r\n            console.log(this.state.includeTo, this.state.excludeTo)\r\n        })\r\n        if (!this.state.includeTo == true) {\r\n            this.setState({ showMagicNumberTo: true })\r\n        } else if (this.state.includeTo == true) {\r\n            this.setState({ showMagicNumberTo: false })\r\n\r\n        }\r\n    }\r\n    changeExcludeDefaultPropertyTo = () => {\r\n        this.setState({ excludeTo: !this.state.excludeTo, includeTo: false }, () => {\r\n            console.log(this.state.includeTo, this.state.excludeTo)\r\n\r\n        })\r\n        if (!this.state.excludeTo == true) {\r\n            this.setState({ showMagicNumberTo: true })\r\n        } else if (this.state.excludeTo == true) {\r\n            this.setState({ showMagicNumberTo: false })\r\n\r\n        }\r\n\r\n    }\r\n    handleprofileName(e) {\r\n\r\n        this.setState({ profileName: e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1), error: '' })\r\n\r\n    }\r\n    handleChangeAutoSync(e) {\r\n        this.setState({ autoSyncClose: !this.state.autoSyncClose }, () => {\r\n        })\r\n    }\r\n    formDataSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        let from_status = this.state.include === true && this.state.exclude === false ? 1 : this.state.exclude === true && this.state.include === false ? 2 : 0\r\n\r\n        let to_status = this.state.includeTo === true && this.state.excludeTo === false ? 1 : this.state.excludeTo === true && this.state.includeTo === false ? 2 : 0\r\n        let self = this\r\n\r\n        if (this.state.profileName == null || this.state.profileName == '') {\r\n            this.setState({ error: 'profileName' })\r\n            return\r\n        }\r\n        else if (this.state.selectedAccountOption == null || this.state.selectedAccountOption == '') {\r\n            this.setState({ error: 'accountoption' })\r\n            return\r\n        } else if (this.state.startDate == null || this.state.startDate == '') {\r\n            this.setState({ error: 'startdate' })\r\n            return\r\n        } else if (this.state.selectedSymbolOption == null || this.state.selectedSymbolOption == '') {\r\n            this.setState({ error: 'symbolselect' })\r\n            return\r\n        }\r\n        else if (this.state.selectedAccountOptionTo == null || this.state.selectedAccountOptionTo == '') {\r\n            this.setState({ error: 'accountoptionto' })\r\n            return\r\n        } else if (this.state.startDateTo == null || this.state.startDateTo == '') {\r\n            this.setState({ error: 'startDateTo' })\r\n            return\r\n        }\r\n        else if (this.state.selectedSymbolOptionTo == null || this.state.selectedSymbolOptionTo == '') {\r\n            this.setState({ error: 'selectedSymbolOptionTo' })\r\n            return\r\n        }\r\n        else {\r\n            this.setState({ error: '' })\r\n        }\r\n        let fromSymbol = this.state.selectedSymbolOption;\r\n        let toSymbol = this.state.selectedSymbolOptionTo;\r\n\r\n        let symbolFrom = fromSymbol.map((data) => data.value)\r\n        let symbolto = toSymbol.map((data) => data.value)\r\n        let Data = {\r\n            id: this.state.id,\r\n            profile_name: this.state.profileName,\r\n            from_account_id: this.state.selectedAccountOption.value,\r\n            to_account_id: this.state.selectedAccountOptionTo.value,\r\n            commission_acount_id: this.state.showAddCommission ? this.state.selectedCommissionAccount.value : 0,\r\n            startdateFrom: this.state.startDate,\r\n            // enddateFrom: this.state.endDate,\r\n            enddateFrom: (this.state.endDate) ? this.state.endDate : null,\r\n            startdateTo: this.state.startDateTo,\r\n            enddateTo: (this.state.endDateTo) ? this.state.endDateTo : null,\r\n            from_symbols: JSON.stringify(symbolFrom),\r\n            to_symbols: JSON.stringify(symbolto),\r\n            auto_close: this.state.autoSyncClose ? 1 : 0,\r\n            from_magic_number: this.state.magicNumber.length > 0 ? JSON.stringify(this.state.magicNumber) : 0,\r\n            to_magic_number: this.state.magicNumberTo.length > 0 ? JSON.stringify(this.state.magicNumberTo) : 0,\r\n            from_include_exclude_status: from_status,\r\n            to_include_exclude_status: to_status,\r\n            createdAt: new Date(),\r\n            updatedAt: new Date(),\r\n\r\n        }\r\n        axios.post(config.baseurl + '/filter/updatefilterdatafull', Data)\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.props.onHide()\r\n\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n            });\r\n\r\n    }\r\n    crossClick(e) {\r\n        e.preventDefault();\r\n        this.props.onHide()\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.magicNumber);\r\n        return (\r\n            <div className=\"content\">\r\n                <Grid fluid>\r\n                    <div className=\"symbol-box\">\r\n                        <div className=\"cross_div\"><a onClick={(e) => this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\r\n                        <div className=\"terminal-text\" >\r\n                            <p className=\"profilename pnameadjust\"> Profile Name</p>\r\n                            <input type=\"text\" name=\"profilename\" value={this.state.profileName} className=\"Itext\" onChange={(e) => this.handleprofileName(e)} />\r\n                            {(this.state.error == 'profileName') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Fill Your Profile Name </p>}\r\n\r\n                        </div>\r\n                        <div className=\"synclose\">\r\n                            <label class=\"checkbox-inline\"><input type=\"checkbox\" checked={this.state.autoSyncClose} name=\"changeAutoSync\" onChange={(e) => this.handleChangeAutoSync(e)} /><b>Auto Sync Close</b></label>\r\n                        </div>\r\n                        <form>\r\n                            <Row>\r\n                                {/* <Col md={12}>\r\n                                    <div className=\"card\">\r\n                                        <div style={{ padding: '10px 20px 35px ', }}>\r\n                                            <div>\r\n                                                <h3 className=\" text-center\">Filter By Magic Numbers</h3>\r\n\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-6 text-center\">\r\n\r\n                                                    <button type=\"button\" class=\"text-center filter-add-button\">Include</button>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-md-6 text-center btnspace\">\r\n                                                    <button type=\"button\" class=\"filter-add-button\">Exclude</button>\r\n                                                </div>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col\">\r\n                                                        <div class=\"text-center  \">\r\n                                                            <input class=\"form-control input-css\" placeholder=\"Select Numbers\" type=\"number\"></input>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>from_include_exclude_status\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </Col> */}\r\n                                <Col md={6}>\r\n                                    <div className=\"card bottom\">\r\n                                        <div style={{ padding: '10px 20px 0px' }}>\r\n                                            <span style={{ fontWeight: 'bold' }}>Account A</span>\r\n                                        </div>\r\n                                        <table className=\"table mt20\">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr\">\r\n                                                        <span className=\"accnt\">Account :</span>\r\n                                                    </td>\r\n\r\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                        {this.renderAccountSelect()}\r\n                                                        {(this.state.error == 'accountoption') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">From:  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center datepicker_filter\">\r\n                                                        <DatePicker\r\n                                                            selected={this.state.startDate}\r\n                                                            onChange={this.handleChangeDate}\r\n                                                            isClearable\r\n                                                            placeholderText=\"dd/mm/yyyy\"\r\n                                                            dateFormat=\"dd/MM/yyyy\"\r\n                                                            startDate={this.state.startDate}\r\n                                                            endDate={this.state.endDate}\r\n                                                            strictParsing\r\n                                                        />\r\n                                                        {(this.state.error == 'startdate') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">To :  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center datepicker_filter\">\r\n                                                        <DatePicker\r\n\r\n                                                            selected={this.state.endDate}\r\n                                                            onChange={this.handleEndDate}\r\n                                                            isClearable\r\n                                                            placeholderText=\"dd/mm/yyyy\"\r\n                                                            dateFormat=\"dd/MM/yyyy\"\r\n                                                            startDate={this.state.startDate}\r\n                                                            endDate={this.state.endDate}\r\n                                                        />\r\n                                                        {(this.state.error == 'enddate') && <p style={{ color: 'red', fontSize: '13px' }}>*\r\n                                                        Please ensure that the End Date is greater than  the Start Date.</p>}\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">Symbol :  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center\" style={{ width: '50%' }}>\r\n                                                        {this.renderSymbolSelect()}\r\n                                                        {(this.state.error == 'symbolselect') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n\r\n\r\n                                            </tbody>\r\n                                        </table>\r\n                                        <div className=\"text-center\">\r\n                                            <span c> Magic Number :  </span>\r\n                                        </div>\r\n\r\n                                        <table className=\"table \">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr dataAdjust\">\r\n                                                        <div onClick={this.changeIncludeDefaultProperty}>\r\n                                                            <input\r\n                                                                type=\"radio\" id=\"include\" name=\"include\" checked={this.state.include} />\r\n                                                            <span class=\"accnt \">Include</span>\r\n\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <div onClick={this.changeExcludeDefaultProperty} >\r\n                                                            <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.exclude} />\r\n                                                            <span class=\"accnt \">Exclude</span>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n\r\n\r\n                                        {this.state.showMagicNumber &&\r\n                                            <div className=\"b-clr magicnumber\" style={{}}>\r\n                                                <TagsInput\r\n                                                    onValidationReject={() => console.log('rejected')}\r\n                                                    validationRegex={/^[0-9]*$/}\r\n                                                    inputProps={{ placeholder: \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumber\r\n                                                    } onChange={this.handleChangeMagicNumber}></TagsInput>\r\n                                            </div>}\r\n\r\n\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    <div className=\"card bottom\">\r\n                                        <div style={{ padding: '10px 20px 0px' }}>\r\n                                            <span style={{ fontWeight: 'bold' }}>Account B</span>\r\n                                        </div>\r\n\r\n                                        <table className=\"table mt20\">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">Account :</span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center\" style={{ width: '50%' }}>\r\n                                                        {this.renderAccountSelectTo()}\r\n                                                        {(this.state.error == 'accountoptionto') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\r\n                                                        {(this.state.error == 'err') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Diffrent Account</p>}\r\n\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">From:  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center datepicker_filter\">\r\n                                                        <DatePicker\r\n                                                            selected={this.state.startDateTo}\r\n                                                            onChange={this.handleChangeDateTo}\r\n                                                            isClearable\r\n                                                            placeholderText=\"dd/mm/yyyy\"\r\n                                                            dateFormat=\"dd/MM/yyyy\"\r\n                                                            startDate={this.state.startDateTo}\r\n                                                            endDate={this.state.endDateTo}\r\n                                                        />\r\n\r\n                                                        {(this.state.error == 'startDateTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">To :  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center datepicker_filter\">\r\n                                                        <DatePicker\r\n                                                            selected={this.state.endDateTo}\r\n                                                            onChange={this.handleEndDateTo}\r\n                                                            isClearable\r\n                                                            placeholderText=\"dd/mm/yyyy\"\r\n                                                            dateFormat=\"dd/MM/yyyy\"\r\n                                                            startDate={this.state.startDateTo}\r\n                                                            endDate={this.state.endDateTo}\r\n\r\n                                                        />\r\n\r\n                                                        {(this.state.error == 'enddateto') && <p style={{ color: 'red', fontSize: '13px' }}>*\r\n                                                        Please ensure that the End Date is greater than  the Start Date.</p>}\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr\">\r\n                                                        <span className=\"accnt\">Symbol :  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                        {this.renderSymbolSelectTo()}\r\n                                                        {(this.state.error == 'selectedSymbolOptionTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\r\n\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n\r\n                                            </tbody>\r\n                                        </table>\r\n\r\n\r\n                                        <div className=\"text-center\">\r\n                                            <span > Magic Number :  </span>\r\n                                        </div>\r\n                                        <table className=\"table mt20\">\r\n                                            <tbody>\r\n\r\n                                                <tr>\r\n                                                    <td className=\"b-clr checkboxAdjust\">\r\n                                                        <div onClick={this.changeIncludeDefaultPropertyTo} >\r\n                                                            <input\r\n                                                                type=\"radio\" id=\"includeTo\" name=\"includeTo\" checked={this.state.includeTo} />\r\n                                                            <span class=\"accnt \">Include</span>\r\n\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr checkboxAdjust\">\r\n                                                        <div onClick={this.changeExcludeDefaultPropertyTo} >\r\n                                                            <input type=\"radio\" id=\"excludeTo\" name=\"excludeTo\" checked={this.state.excludeTo} />\r\n                                                            <span class=\"accnt \">Exclude</span>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                        <div>\r\n\r\n                                            {this.state.showMagicNumberTo === true ?\r\n                                                <div className=\"b-clr magicnumber\" style={{}}>\r\n                                                    <TagsInput\r\n                                                        onValidationReject={() => console.log('rejected')}\r\n                                                        validationRegex={/^[0-9]*$/}\r\n                                                        inputProps={{ placeholder: \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumberTo\r\n                                                        } onChange={this.handleChangeMagicNumberTo}></TagsInput>\r\n                                                </div> : null}\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <hr></hr>\r\n                            <div className=\"chceckbox\">\r\n\r\n                                <label class=\"checkbox-inline\"><input type=\"checkbox\" checked={this.state.showCommission} onChange={this.handeChangeShowCommission} /><b>Add Commission</b></label>\r\n                            </div>\r\n\r\n\r\n\r\n                            {this.state.showCommission &&\r\n                                <div className=\"center-com d-flex\">\r\n                                    <div className=\"com\">\r\n                                        <h3 style={{ fontWeight: 'bold' }}>Commission</h3>\r\n\r\n                                    </div>\r\n                                    <table className=\"table mt20\">\r\n\r\n                                        <tbody>\r\n                                            <tr>\r\n\r\n                                                <td className=\"b-clr \">\r\n                                                    <span className=\"accnt\"> Account :</span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    {this.renderCommissionAccount()}\r\n                                                    {(this.state.error == 'accountoptionto') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n\r\n                            }\r\n                            <div className=\"save_button_filter\">\r\n                                <Button className=\"btn-primary savebutton\" variant=\"primary\" size=\"lg\" block onClick={(e) => this.formDataSubmit(e)}>\r\n                                    <b>Update</b>\r\n                                </Button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilterEdite;\r\n","import React, { Component } from 'react';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\r\nvar moment = require('moment');\r\n\r\nclass FilterDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            autoSyncClose: false,\r\n            exclude: false,\r\n            include: false,\r\n            excludeTo: false,\r\n            includeTo: false,\r\n            showMagicNumberFrom: false,\r\n            showMagicNumberTo: false,\r\n        };\r\n    }\r\n    crossClick(e) {\r\n        e.preventDefault();\r\n        this.props.onHide()\r\n    }\r\n\r\n    componentDidMount() {\r\n        let data = this.props.data;\r\n        console.log(data, 'data----------------->')\r\n        this.setState({\r\n            autoSyncClose: data.auto_close == 1 ? true : false,\r\n            include: data.from_include_exclude_status == 1 ? true : false,\r\n            exclude: data.from_include_exclude_status == 2 ? true : false,\r\n            includeTo: data.to_include_exclude_status == 1 ? true : false,\r\n            excludeTo: data.to_include_exclude_status == 2 ? true : false,\r\n            showMagicNumberFrom: data.from_include_exclude_status !== 0 ? true : false,\r\n            showMagicNumberTo:data.to_include_exclude_status !== 0? true: false\r\n\r\n\r\n\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    // componentWillMount = () => {\r\n    //     console.log(this.props,'props..................');\r\n    // }\r\n\r\n    render() {\r\n        console.log(this.props, '------------------------------');\r\n        let data = this.props.data;\r\n        console.log(data, 'dtaaaaaaaaaaaaaaaaaaaaaaaaaaaaa');\r\n\r\n        let from_symbol = JSON.parse(data.from_symbols);\r\n        let to_symbol = JSON.parse(data.to_symbols);\r\n        from_symbol = from_symbol.join(', ');\r\n        to_symbol = to_symbol.join(', ');\r\n        return (\r\n            <div className=\"content\">\r\n                <Grid fluid>\r\n                    <div className=\"symbol-box\">\r\n                        <div className=\"cross_div\"><a onClick={(e) => this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\r\n                        <div className=\"detail-text\"><h3> {data.profile_name} </h3></div>\r\n                        <div className=\"synclose\">\r\n                            <label class=\"checkbox-inline\"><input type=\"checkbox\" checked={this.state.autoSyncClose} name=\"changeAutoSync\" /><b>Auto Sync Close</b></label>\r\n                        </div>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <div className=\"card\">\r\n                                    <div className=\"detail_account\" style={{ padding: '10px 20px 0px' }}>\r\n                                        <span style={{ fontWeight: 'bold' }}>Account A</span>\r\n                                    </div>\r\n                                    <table className=\"table mt20\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td className=\"b-clr\">\r\n                                                    <span>Account :</span>\r\n                                                </td>\r\n\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    {data.accountFromInfo[0].login}\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>From :  </span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center datepicker_filter\">\r\n                                                    {moment(data.startdateFrom).format(\"DD/MM/YYYY\")}\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>To :  </span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center datepicker_filter\">\r\n                                                    {data.enddateFrom !== null ? moment(data.enddateFrom).format(\"DD/MM/YYYY\") : \"-\"}\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>Symbol :  </span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    {from_symbol}\r\n                                                </td>\r\n                                            </tr>\r\n                                            {this.state.showMagicNumberFrom &&\r\n                                            <>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>Magic Number :  </span>\r\n                                                </td>\r\n\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    {data.from_magic_number}\r\n                                                </td>\r\n\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr dataAdjust\">\r\n                                                    <div onClick={this.changeIncludeDefaultProperty}>\r\n                                                        <input\r\n                                                            type=\"radio\" id=\"include\" name=\"include\" checked={this.state.include} />\r\n                                                        <span class=\"accnt \">Include</span>\r\n\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td className=\"b-clr \">\r\n                                                    <div onClick={this.changeExcludeDefaultProperty} >\r\n                                                        <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.exclude} />\r\n                                                        <span class=\"accnt \">Exclude</span>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                            </>}\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </Col>\r\n                            <Col md={6}>\r\n                                <div className=\"card\">\r\n                                    <div className=\"detail_account\" style={{ padding: '10px 20px 0px' }}>\r\n                                        <span style={{ fontWeight: 'bold' }}>Account B</span>\r\n                                    </div>\r\n\r\n                                    <table className=\"table mt20\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>Account :</span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    {data.accountToInfo[0].login}\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>From :  </span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center datepicker_filter\">\r\n                                                    {moment(data.startdateTo).format(\"DD/MM/YYYY\")}\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>To :  </span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center datepicker_filter\">\r\n                                                    {data.enddateTo != null ? (moment(data.enddateTo).format(\"DD/MM/YYYY\")) : '-'}\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr\">\r\n                                                    <span>Symbol :  </span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    {to_symbol}\r\n                                                </td>\r\n                                            </tr>\r\n                                            {this.state.showMagicNumberTo &&\r\n                                                <>\r\n\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr\">\r\n                                                            <span>Magic Number :  </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                            {data.to_magic_number}\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n\r\n\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr checkboxAdjust\">\r\n                                                            <div onClick={this.changeIncludeDefaultPropertyTo} >\r\n                                                                <input\r\n                                                                    type=\"radio\" id=\"includeTo\" name=\"includeTO\" checked={this.state.includeTo} />\r\n                                                                <span class=\"accnt \">Include</span>\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr checkboxAdjust\">\r\n                                                            <div onClick={this.changeExcludeDefaultPropertyTo} >\r\n                                                                <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.excludeTo} />\r\n                                                                <span class=\"accnt \">Exclude</span>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </>}\r\n\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n\r\n                            </Col>\r\n                            {data.commission_acount_id !== 0 && <Col md={12}>\r\n                                <div className=\"card bottom\">\r\n                                    <div className=\"detail_account\" style={{ padding: '10px 20px 0px' }}>\r\n                                        <h3 style={{ fontWeight: 'bold' }}>Commission</h3>\r\n                                    </div>\r\n                                    <table className=\"table mt20\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    <span>Account :</span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    {data.accountCommissionInfo[0].login}\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n\r\n                            </Col>}\r\n                        </Row>\r\n\r\n                    </div>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilterDetail;\r\n\r\n","import React, { Component } from 'react';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\r\nimport Innerfilter from '../filter/innerfilter';\r\nimport FilterEdite from '../filter/filteredit';\r\nimport FilterDetail from '../filter/filterdetail';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport config from '../../constant/config.js';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nconst axios = require('axios');\r\nvar moment = require('moment');\r\n\r\nclass Filterprofile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Innerfilter: false,\r\n            filter: true,\r\n            filterData: [],\r\n            deleteData: [],\r\n            editeData: [],\r\n            showDelete: false,\r\n            showEdit: false,\r\n            detailForm: false,\r\n            detailData: [],\r\n        };\r\n\r\n        // this.handleDropdownChange = this.handleDropdownChange.bind(this);\r\n    }\r\n    fetchfilterdata() {\r\n        let self = this;\r\n        axios.get(config.baseurl + '/filter/fetchfilterdata')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.setState({ filterData: response.data.rows })\r\n                }\r\n            })\r\n    }\r\n    showInnerfilter = () => {\r\n        this.setState({ Innerfilter: true, filter: false })\r\n    }\r\n    componentDidMount() {\r\n        this.fetchfilterdata();\r\n        // let self = this;\r\n        // axios.get(config.baseurl + '/filter/fetchfilterdata')\r\n        //     .then(function (response) {\r\n        //         if (response.status == 200) {\r\n        //             self.setState({ filterData: response.data.rows })\r\n        //         }\r\n        //     }) adfasdfsd\r\n    }\r\n\r\n\r\n    createNotification = (profile_name, type) => {\r\n        NotificationManager.listNotify = [];\r\n        NotificationManager.info('Profile Is Activated !', profile_name);\r\n    }\r\n\r\n    createWariningNotification = (profile_name, type) => {\r\n        NotificationManager.listNotify = [];\r\n        NotificationManager.error('Profile Is Deactivated !', profile_name);\r\n    }\r\n\r\n    activateClick(e, data) {\r\n        e.preventDefault();\r\n        let Data = {\r\n            id: data.id,\r\n            status: 1\r\n        }\r\n        let self = this;\r\n        axios.post(config.baseurl + '/filter/updatefilterdata', Data)\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.fetchfilterdata();\r\n                    self.createNotification(data.profile_name, 'info');\r\n                    // self.setState({ filterData: response.data.rows })\r\n                }\r\n            })\r\n    }\r\n\r\n    //  App(){\r\n    //     const notify = () => toast(\"Wow so easy !\");\r\n\r\n    //     return (\r\n    //       <div>\r\n    //         <button onClick={notify}>Notify !</button>\r\n    //         <ToastContainer />\r\n    //       </div>\r\n    //     );\r\n    //   }\r\n\r\n    deactivateClick(e, data) {\r\n        e.preventDefault();\r\n        let Data = {\r\n            id: data.id,\r\n            status: 0\r\n        }\r\n        let self = this;\r\n        axios.post(config.baseurl + '/filter/updatefilterdata', Data)\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.fetchfilterdata();\r\n                    self.createWariningNotification(data.profile_name, 'error');\r\n                    // self.setState({ filterData: response.data.rows })\r\n                }\r\n            })\r\n    }\r\n    editFilter(e, data) {\r\n        e.preventDefault();\r\n        if (this.state.endDate == null || this.state.endDate == '') {\r\n            let newDate = new Date();\r\n            this.setState({ endDate: newDate })\r\n            return\r\n        }\r\n        this.setState({ showEdit: true, editeData: data })\r\n\r\n    }\r\n\r\n    deleteFilter(e, data) {\r\n        e.preventDefault();\r\n        this.setState({ deleteData: data, showDelete: true })\r\n\r\n    }\r\n    deletepopupClick(e) {\r\n        e.preventDefault();\r\n        let Data = {\r\n            id: this.state.deleteData.id\r\n        }\r\n        let self = this;\r\n        axios.post(config.baseurl + '/filter/deletefilter', Data)\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.setState({ showDelete: false })\r\n                    self.fetchfilterdata();\r\n                }\r\n            })\r\n    }\r\n    deletepopupclose(e) {\r\n        e.preventDefault();\r\n        this.setState({ showDelete: false })\r\n    }\r\n    viewFilter(e, data) {\r\n        e.preventDefault();\r\n\r\n        this.setState({ detailForm: true, detailData: data })\r\n    }\r\n\r\n    createTr = () => {\r\n        return this.state.filterData.length > 0 && this.state.filterData.map((item, index) => {\r\n            return (\r\n                <tr key={index}>\r\n                    <th scope=\"row\">{index + 1}</th>\r\n                    <td>{item.profile_name}</td>\r\n                    <td>{moment(item.createdAt).format(\"DD/MM/YYYY\")}</td>\r\n                    {/* <td>{item.status == 1 ? 'Activated' : 'Deactivated' }</td> */}\r\n                    <td>{item.status == 0 ?\r\n                        <div className=\"activate_button pointer\"><span className=\"button_interactivate btcolor\" onClick={(e) => this.activateClick(e, item)}> Activate </span> </div>\r\n                        :\r\n                        <div className=\"deactivate_button pointer\"><span className=\"button_deactivate pointer\" onClick={(e) => this.deactivateClick(e, item)}>Deactivate</span></div>}</td>\r\n                    <td>\r\n                        <span onClick={(e) => this.viewFilter(e, item)}><i className=\"pointer fa fa-eye facolor\" aria-hidden=\"true\"></i></span>\r\n                        <span onClick={(e) => this.editFilter(e, item)}><i className=\"pointer fa fa-pencil-square-o facolor\" aria-hidden=\"true\"></i></span>\r\n                        {item.status == 0 &&\r\n                            <span onClick={(e) => this.deleteFilter(e, item)}><i className=\"pointer fa fa-trash facolor\" aria-hidden=\"true\"></i></span>\r\n                        }\r\n                    </td>\r\n                    {/* <td>{item.accountToInfo[0].login}</td>\r\n                    <td>{moment(item.startdateFrom).format(\"DD/MM/YYYY\") + ' - ' + moment(item.enddateFrom).format(\"DD/MM/YYYY\")}</td>\r\n                    <td>{moment(item.startdateTo).format(\"DD/MM/YYYY\") + ' - ' + moment(item.enddateTo).format(\"DD/MM/YYYY\")}</td>\r\n                    <td>{item.from_symbols}</td>\r\n                    <td>{item.to_symbols}</td> */}\r\n                    {/* <td style={{fontWeight:600}}>{item.status == 1 && 'Connected'}</td> */}\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <NotificationContainer />\r\n                <div className=\"content\">\r\n                    {this.state.detailForm ?\r\n                        <FilterDetail\r\n                            data={this.state.detailData}\r\n                            show={this.state.detailForm}\r\n                            onHide={() => this.setState({ detailForm: false })}\r\n                        />\r\n                        :\r\n                        <>\r\n                            {this.state.showEdit ?\r\n                                <FilterEdite\r\n                                    data={this.state.editeData}\r\n                                    show={this.state.showEdit}\r\n                                    // onHide={() => this.setState({ showEdit: false })}\r\n                                    onHide={() => this.setState({ showEdit: false }, () => this.fetchfilterdata())}\r\n                                />\r\n                                :\r\n                                <>\r\n                                    {!this.state.Innerfilter &&\r\n                                        <Grid fluid>\r\n                                            <div className=\"selection-box\">\r\n                                                <span className=\"terminal-text\"> Profiles </span>\r\n\r\n                                                {/* <span className=\"icon-style\">\r\n                            <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\r\n                        </span> */}\r\n                                                {/* <Link to=\"/innerfilter\">\r\n                       <button className=\"pull-right\">Add New</button>\r\n                       </Link> */}\r\n\r\n                                                {/* <Link to=\"/admin/innerfilter\">\r\n                       <button className=\"pull-right\">abc</button>\r\n                       </Link> */}\r\n                                            </div>\r\n                                            <button className=\"pull-right filter-add-button\" onClick={this.showInnerfilter}>Add New</button>\r\n\r\n                                        </Grid>\r\n                                    }\r\n                                    {\r\n                                        this.state.Innerfilter ?\r\n                                            <Innerfilter\r\n                                                show={this.state.Innerfilter}\r\n                                                onHide={() => this.setState({ Innerfilter: false }, () => {\r\n                                                    this.fetchfilterdata();\r\n                                                })}\r\n                                            />\r\n                                            :\r\n                                            <div style={{ background: '#ffffff' }}>\r\n                                                <Row>\r\n                                                    <Col md={12}>\r\n                                                        <div style={{ padding: '10px' }}>\r\n                                                            <table className=\"table table-striped\">\r\n                                                                <thead>\r\n                                                                    <tr>\r\n                                                                        <th scope=\"col\">Sr.No.</th>\r\n                                                                        <th scope=\"col\">Profile Name</th>\r\n                                                                        <th scope=\"col\">Created At</th>\r\n                                                                        <th scope=\"col\">Status</th>\r\n                                                                        <th scope=\"col\">Action</th>\r\n                                                                    </tr>\r\n                                                                </thead>\r\n                                                                <tbody>\r\n                                                                    {/* {this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => { */}\r\n\r\n                                                                    {this.createTr()}\r\n                                                                    {/* })} */}\r\n                                                                    {/* <tr>\r\n                                                <th scope=\"row\">2</th>\r\n                                                <td>Jacob</td>\r\n                                                <td>Thornton</td>\r\n                                                <td>5.1.2.9</td>\r\n                                                <td>Connected</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th scope=\"row\">3</th>\r\n                                                <td>Larry</td>\r\n                                                <td>the Bird</td>\r\n                                                <td>ab@123</td>\r\n                                                <td>Connected</td>\r\n                                            </tr> */}\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </div>\r\n                                        //     <div className=\"filter_page_table\">\r\n                                        //     <table className=\"table table-striped\">\r\n                                        //         <thead>\r\n                                        //             <tr>\r\n                                        //                 <th scope=\"col\">Sr.No.</th>\r\n                                        //                 <th scope=\"col\">Profile Name</th>\r\n                                        //                 <th scope=\"col\">Created At</th>\r\n                                        //                 <th scope=\"col\">Status</th>\r\n                                        //                 <th scope=\"col\">Action</th>\r\n                                        //             </tr>\r\n                                        //         </thead>\r\n                                        //         <tbody>\r\n                                        //             {this.createTr()}\r\n                                        //         </tbody>\r\n                                        //     </table>\r\n\r\n                                        // </div>\r\n\r\n                                    }\r\n\r\n                                    {this.state.showDelete &&\r\n                                        <div className=\"delete_popup\">\r\n                                            <h3>Are you sure ?</h3>\r\n                                            <span className=\"pointer dltbtn\" onClick={(e) => this.deletepopupClick(e)}>Delete</span>\r\n                                            <span className=\"pointer closebtn\" onClick={(e) => this.deletepopupclose(e)}>Close</span>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            }\r\n                        </>\r\n                    }\r\n\r\n\r\n\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Filterprofile;\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Swap extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"text-center\" style={{height:'50%'}}>\r\n                Coming Soon...\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\r\nimport config from '../../constant/config.js';\r\nconst axios = require('axios');\r\nexport default class calculating extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            accountlist: [],\r\n            accountDetailTable: [],\r\n            customDepositeTable: [],\r\n            customSwapTable: [],\r\n            OpenOrderTable: [],\r\n            HistoryOrderTable: [],\r\n\r\n        }\r\n    }\r\n\r\n    fectheAllAccount() {\r\n        let self = this;\r\n        axios.get(config.baseurl + '/users/allAccounts')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.setState({ accountlist: response.data.rows })\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n\r\n    fetchAllOpenTrade() {\r\n        let self = this;\r\n        axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.setState({\r\n                        accountDetailTable: response.data.accountTableDetails,\r\n                        OpenOrderTable: response.data.openOrderData,\r\n                        customSwapTable: response.data.customSwapTable,\r\n                        customDepositeTable: response.data.customDepositeTable,\r\n                        HistoryOrderTable:response.data.historyOrderData,\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fectheAllAccount();\r\n        this.fetchAllOpenTrade();\r\n    }\r\n\r\n    createTr = () => {\r\n        return this.state.accountlist.map((item, index) => {\r\n            return (\r\n                <tr >\r\n                    <td>{item.login}</td>\r\n                    <td>{item.broker}</td>\r\n                    <td>{item.alias}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    customSwap = () => {\r\n        return this.state.customSwapTable.map((item, index) => {\r\n            return (\r\n                <tr >\r\n                    <td>{item.account_id}</td>\r\n                    <td>{item.open_value}</td>\r\n                    <td>{item.close_value}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    customDeposite = () => {\r\n        return this.state.customDepositeTable.map((item, index) => {\r\n            return (\r\n                <tr >\r\n                    <td>{item.account_id}</td>\r\n                    <td>{item.value}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n\r\n    Open = () => {\r\n        return this.state.OpenOrderTable.map((item, index) => {\r\n            return (\r\n                <tr >\r\n                    <td>{item.account_id}</td>\r\n                    <td>{item.ticket}</td>\r\n                    <td>{item.open_time}</td>\r\n                    <td>{item.order_type}</td>\r\n                    <td>{item.lots}</td>\r\n                    <td>{item.symbol}</td>\r\n                    <td>{item.magic_number}</td>\r\n                    <td>{item.open_price}</td>\r\n                    <td>{item.last_price}</td>\r\n                    <td>{item.sl}</td>\r\n                    <td>{item.tp}</td>\r\n                    <td>{item.commission}</td>\r\n                    <td>{item.taxes}</td>\r\n                    <td>{item.swap}</td>\r\n                    <td>{item.profit}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    HistoryOrderData = () => {\r\n        return this.state.HistoryOrderTable.map((item, index) => {\r\n            return (\r\n                <tr >\r\n                    <td>{item.account_id}</td>\r\n                    <td>{item.ticket}</td>\r\n                    <td>{item.open_time}</td>\r\n                    <td>{item.order_type}</td>\r\n                    <td>{item.lots}</td>\r\n                    <td>{item.symbol}</td>\r\n                    <td>{item.magic_number}</td>\r\n                    <td>{item.open_price}</td>\r\n                    <td>{item.last_price}</td>\r\n                    <td>{item.sl}</td>\r\n                    <td>{item.tp}</td>\r\n                    <td>{item.commission}</td>\r\n                    <td>{item.taxes}</td>\r\n                    <td>{item.swap}</td>\r\n                    <td>{item.profit}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n    createDeatailTable = () => {\r\n        return this.state.accountDetailTable.map((item, index) => {\r\n            return (\r\n                <tr>\r\n                    <td>{item.account_id}</td>\r\n                    <td>{item.balance}</td>\r\n                    <td>{item.equity}</td>\r\n                    <td>{item.margin}</td>\r\n                    <td>{item.margin_level}</td>\r\n                    <td>{item.free_margin}</td>\r\n                    <td>{item.profit}</td>\r\n                    <td>{item.currency}</td>\r\n                    <td>{item.last_seen}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Grid fluid>\r\n\r\n                <div style={{ background: '#ffffff' }}>\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <div style={{ padding: '10px' }}>\r\n                                <h5 className=\"text-center\">Accounts</h5>\r\n\r\n                                <table className=\"table lowercase table-sm\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">login</th>\r\n                                            <th scope=\"col\">server</th>\r\n                                            <th scope=\"col\">alias</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n\r\n                                        {this.createTr()}\r\n\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <div style={{ padding: '10px' }}>\r\n                            <h5 className=\"text-center\">Account Details</h5>\r\n\r\n                            <table className=\"table lowercase table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">account_id</th>\r\n                                        <th scope=\"col\">balance</th>\r\n                                        <th scope=\"col\">equity</th>\r\n                                        <th scope=\"col\">margin</th>\r\n                                        <th scope=\"col\">margin_level</th>\r\n                                        <th scope=\"col\">free_margin</th>\r\n                                        <th scope=\"col\">profit</th>\r\n                                        <th scope=\"col\">currency</th>\r\n                                        <th scope=\"col\">last_seen</th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {this.createDeatailTable()}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <div style={{ padding: '10px' }}>\r\n                            <h5 className=\"text-center\">Custom Swap</h5>\r\n                            <table className=\"table lowercase table-striped\">\r\n\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">account_id</th>\r\n                                        <th scope=\"col\">opne_value</th>\r\n                                        <th scope=\"col\">close_value</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n\r\n                                    {this.customSwap()}\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </Col>\r\n\r\n                    <Col md={6}>\r\n                        <div style={{ padding: '10px' }}>\r\n                            <h5 className=\"text-center\">Custom Deposite</h5>\r\n                            <table className=\"table lowercase table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">account_id</th>\r\n                                        <th scope=\"col\">value</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.customDeposite()}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Col md={12}>\r\n                    <div style={{ padding: '10px' }}>\r\n                    <h5 className=\"text-center\">Open Orders</h5>\r\n                        \r\n                        <table className=\"table lowercase table-responsive\">\r\n\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">account_id</th>\r\n                                    <th scope=\"col\">ticket</th>\r\n                                    <th scope=\"col\">open_time</th>\r\n                                    <th scope=\"col\">order_type</th>\r\n                                    <th scope=\"col\">lots</th>\r\n                                    <th scope=\"col\">symbol</th>\r\n                                    <th scope=\"col\">magic_number</th>\r\n                                    <th scope=\"col\">open_price</th>\r\n                                    <th scope=\"col\">last_price</th>\r\n                                    <th scope=\"col\">sl</th>\r\n                                    <th scope=\"col\">tp</th>\r\n                                    <th scope=\"col\">commission</th>\r\n                                    <th scope=\"col\">taxes</th>\r\n                                    <th scope=\"col\">swap</th>\r\n                                    <th scope=\"col\">profit</th>\r\n\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n\r\n                                {this.Open()}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </Col>\r\n\r\n\r\n                <Col md={12}>\r\n                    <div style={{ padding: '10px' }}>\r\n                    <h5 className=\"text-center\">History Orders</h5>\r\n                        \r\n                        <table className=\"table lowercase table-responsive\">\r\n\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">account_id</th>\r\n                                    <th scope=\"col\">ticket</th>\r\n                                    <th scope=\"col\">open_time</th>\r\n                                    <th scope=\"col\">order_type</th>\r\n                                    <th scope=\"col\">lots</th>\r\n                                    <th scope=\"col\">symbol</th>\r\n                                    <th scope=\"col\">magic_number</th>\r\n                                    <th scope=\"col\">open_price</th>\r\n                                    <th scope=\"col\">last_price</th>\r\n                                    <th scope=\"col\">sl</th>\r\n                                    <th scope=\"col\">tp</th>\r\n                                    <th scope=\"col\">commission</th>\r\n                                    <th scope=\"col\">taxes</th>\r\n                                    <th scope=\"col\">swap</th>\r\n                                    <th scope=\"col\">profit</th>\r\n\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n\r\n                                {this.HistoryOrderData()}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </Col>\r\n            </Grid>\r\n        )\r\n\r\n    }\r\n}\r\n","import Dashboard from \"views/Dashboard.jsx\";\r\n// import UserProfile from \"views/UserProfile.jsx\";\r\n// import TableList from \"views/TableList.jsx\";\r\n// import Typography from \"views/Typography.jsx\";\r\n// import Icons from \"views/Icons.jsx\";\r\n// import Maps from \"views/Maps.jsx\";\r\n// import Notifications from \"views/Notifications.jsx\";\r\n// import Upgrade from \"views/Upgrade.jsx\";\r\n// import Filter from '../src/views/Filter';\r\nimport Innerlogin from 'views/Innerlogin';\r\nimport Filterprofile from './views/filter/Filterprofile';\r\nimport Swap from '../src/views/swap';\r\nimport calculating from '../src/views/calculating';\r\nconst dashboardRoutes = [\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"Dashboard\",\r\n    icon: \"pe-7s-graph\",\r\n    component: Dashboard,\r\n    layout: \"/admin\",\r\n  },\r\n  // {\r\n  //   path: \"/filter\",\r\n  //   name: \"Filter\",\r\n  //   icon: \"pe-7s-filter\",\r\n  //   component: Filter,\r\n  //   layout: \"/admin\",\r\n  // },\r\n\r\n\r\n  {\r\n    path: \"/innerlogin\",\r\n    name: \"Login/Accounts\",\r\n    icon: \"pe-7s-note2\",\r\n    component: Innerlogin,\r\n    layout: \"/admin\"\r\n  },\r\n\r\n\r\n  {\r\n    path: \"/filterpage\",\r\n    name: \"Filter\",\r\n    icon: \"pe-7s-filter\",\r\n    component: Filterprofile,\r\n    layout: \"/admin\"\r\n  },  \r\n  \r\n\r\n\r\n  \r\n  // {\r\n  //   path: \"/symbolmanaging\",\r\n  //   name: \"Symbol Managing\",\r\n  //   icon: \"pe-7s-science\",\r\n  //   // component: Filter,\r\n  //   layout: \"/admin\",\r\n  // },\r\n\r\n\r\n  {\r\n    path: \"/swap\",\r\n    name: \"Swap\",\r\n    icon: \"pe-7s-graph\",\r\n    component: Swap,\r\n    layout: \"/admin\",\r\n  },\r\n  \r\n  // {\r\n  //   path: \"/calculating\",\r\n  //   name: \" What Am Calculating?\",\r\n  //   icon: \"pe-7s-calculator\",\r\n  //   component: calculating ,\r\n  //   layout: \"/admin\",\r\n  // },\r\n\r\n\r\n  // {\r\n  //   path: \"/user\",\r\n  //   name: \"User Profile\",\r\n  //   icon: \"pe-7s-user\",\r\n  //   component: UserProfile,\r\n  //   layout: \"/admin\"\r\n  // },\r\n  // {\r\n  //   path: \"/table\",\r\n  //   name: \"Table\",\r\n  //   icon: \"pe-7s-note2\",\r\n  //   component: TableList,\r\n  //   layout: \"/admin\",\r\n    // for sub menu listing\r\n    // resources: [\r\n    //   {\r\n       \r\n    //     name: \"Table abc\",\r\n        \r\n    //   },\r\n    //   {\r\n       \r\n    //     name: 'React AHA Moments',\r\n       \r\n    //   }\r\n    // ]\r\n  // },\r\n  \r\n  // {\r\n  //   path: \"/typography\",\r\n  //   name: \"Typography\",\r\n  //   icon: \"pe-7s-news-paper\",\r\n  //   component: Typography,\r\n  //   layout: \"/admin\"\r\n  // },\r\n  // {\r\n  //   path: \"/icons\",\r\n  //   name: \"Icons\",\r\n  //   icon: \"pe-7s-science\",\r\n  //   component: Icons,\r\n  //   layout: \"/admin\"\r\n  // },\r\n  // {\r\n  //   path: \"/maps\",\r\n  //   name: \"Maps\",\r\n  //   icon: \"pe-7s-map-marker\",\r\n  //   component: Maps,\r\n  //   layout: \"/admin\"\r\n  // },\r\n  // {\r\n  //   path: \"/notifications\",\r\n  //   name: \"Notifications\",\r\n  //   icon: \"pe-7s-bell\",\r\n  //   component: Notifications,\r\n  //   layout: \"/admin\"\r\n  // },\r\n  // {\r\n  //   upgrade: true,\r\n  //   path: \"/upgrade\",\r\n  //   name: \"Upgrade to PRO\",\r\n  //   icon: \"pe-7s-rocket\",\r\n  //   component: Upgrade,\r\n  //   layout: \"/admin\"\r\n  // }\r\n];\r\n\r\nexport default dashboardRoutes;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport NotificationSystem from \"react-notification-system\";\r\n\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\r\n// import Footer from \"components/Footer/Footer\";\r\nimport Sidebar from \"components/Sidebar/Sidebar\";\r\n// import FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\r\n\r\nimport { style } from \"variables/Variables.jsx\";\r\n\r\nimport routes from \"routes.js\";\r\n\r\nimport image from \"assets/img/sidebar-3.jpg\";\r\n\r\nclass Admin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      _notificationSystem: null,\r\n      image: image,\r\n      color: \"black\",\r\n      hasImage: true,\r\n      fixedClasses: \"dropdown show-dropdown open\"\r\n    };\r\n  }\r\n  // handleNotificationClick = position => {\r\n  //   var color = Math.floor(Math.random() * 4 + 1);\r\n  //   var level;\r\n  //   switch (color) {\r\n  //     case 1:\r\n  //       level = \"success\";\r\n  //       break;\r\n  //     case 2:\r\n  //       level = \"warning\";\r\n  //       break;\r\n  //     case 3:\r\n  //       level = \"error\";\r\n  //       break;\r\n  //     case 4:\r\n  //       level = \"info\";\r\n  //       break;\r\n  //     default:\r\n  //       break;\r\n  //   }\r\n  //   this.state._notificationSystem.addNotification({\r\n  //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\r\n  //     message: (\r\n  //       <div>\r\n  //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\r\n  //         every web developer.\r\n  //       </div>\r\n  //     ),\r\n  //     level: level,\r\n  //     position: position,\r\n  //     autoDismiss: 15\r\n  //   });\r\n  // };\r\n  getRoutes = routes => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.layout === \"/admin\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            render={props => (\r\n              <prop.component\r\n                {...props}\r\n                handleClick={this.handleNotificationClick}\r\n              />\r\n            )}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  getBrandText = path => {\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (\r\n        this.props.location.pathname.indexOf(\r\n          routes[i].layout + routes[i].path\r\n        ) !== -1\r\n      ) {\r\n        return routes[i].name;\r\n      }\r\n    }\r\n    // return \"Brand\";\r\n  };\r\n  handleImageClick = image => {\r\n    this.setState({ image: image });\r\n  };\r\n  handleColorClick = color => {\r\n    this.setState({ color: color });\r\n  };\r\n  handleHasImage = hasImage => {\r\n    this.setState({ hasImage: hasImage });\r\n  };\r\n  handleFixedClick = () => {\r\n    if (this.state.fixedClasses === \"dropdown\") {\r\n      this.setState({ fixedClasses: \"dropdown show-dropdown open\" });\r\n    } else {\r\n      this.setState({ fixedClasses: \"dropdown\" });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    let currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    if(currentUser===null){\r\n        this.props.history.push('/login')\r\n        return;\r\n    }\r\n  //   this.setState({ _notificationSystem: this.refs.notificationSystem });\r\n  //   var _notificationSystem = this.refs.notificationSystem;\r\n  //   var color = Math.floor(Math.random() * 4 + 1);\r\n  //   var level;\r\n  //   switch (color) {\r\n  //     case 1:\r\n  //       level = \"success\";\r\n  //       break;\r\n  //     case 2:\r\n  //       level = \"warning\";\r\n  //       break;\r\n  //     case 3:\r\n  //       level = \"error\";\r\n  //       break;\r\n  //     case 4:\r\n  //       level = \"info\";\r\n  //       break;\r\n  //     default:\r\n  //       break;\r\n  //   }\r\n  //   _notificationSystem.addNotification({\r\n  //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\r\n  //     message: (\r\n  //       <div>\r\n  //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\r\n  //         every web developer.\r\n  //       </div>\r\n  //     ),\r\n  //     level: level,\r\n  //     position: \"tr\",\r\n  //     autoDismiss: 15\r\n  //   });\r\n  }\r\n  componentDidUpdate(e) {\r\n    if (\r\n      window.innerWidth < 993 &&\r\n      e.history.location.pathname !== e.location.pathname &&\r\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n    ) {\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n    }\r\n    if (e.history.action === \"PUSH\") {\r\n      document.documentElement.scrollTop = 0;\r\n      document.scrollingElement.scrollTop = 0;\r\n      this.refs.mainPanel.scrollTop = 0;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <NotificationSystem ref=\"notificationSystem\" style={style} />\r\n        <Sidebar {...this.props} routes={routes} image={this.state.image}\r\n        color={this.state.color}\r\n        hasImage={this.state.hasImage}/>\r\n        <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\r\n          <AdminNavbar\r\n            {...this.props}\r\n            brandText={this.getBrandText(this.props.location.pathname)}\r\n          />\r\n          <Switch>{this.getRoutes(routes)}</Switch>\r\n          {/* <Footer /> */}\r\n          {/* <FixedPlugin\r\n            handleImageClick={this.handleImageClick}\r\n            handleColorClick={this.handleColorClick}\r\n            handleHasImage={this.handleHasImage}\r\n            bgColor={this.state[\"color\"]}\r\n            bgImage={this.state[\"image\"]}\r\n            mini={this.state[\"mini\"]}\r\n            handleFixedClick={this.handleFixedClick}\r\n            fixedClasses={this.state.fixedClasses}\r\n          /> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin;\r\n","\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./assets/css/animate.min.css\";\r\nimport \"./assets/sass/light-bootstrap-dashboard-react.scss?v=1.3.0\";\r\nimport \"./assets/css/demo.css\";\r\nimport \"./assets/css/pe-icon-7-stroke.css\";\r\nimport \"./assets/css/dashboard.css\";\r\nimport innerfilter from \"./views/filter/innerfilter\";\r\nimport Login from \"./views/login\";\r\n\r\n\r\nimport AdminLayout from \"./layouts/Admin.jsx\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\r\n\r\n      <Route exact path=\"/admin/innerfilter\" component={innerfilter} />\r\n      <Route exact from=\"/login\" component={Login} />\r\n      {/* <Redirect from=\"/\" to=\"/admin/dashboard\" /> */}\r\n      {/* <Redirect from=\"/\" component={Login} /> */}\r\n      <Redirect from=\"/\" to=\"/login\"/>\r\n      {/* <Route exact path=\"/innerfilter\" component={innerfilter} /> */}\r\n\r\n    </Switch>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}