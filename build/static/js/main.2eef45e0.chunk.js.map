{"version":3,"sources":["variables/Variables.jsx","assets/img/sidebar-3.jpg","../node_modules/typescript/lib sync","constant/config.js","views/filter/innerfilter.js","views/login/index.js","components/Navbars/AdminNavbarLinks.jsx","components/Navbars/AdminNavbar.jsx","components/Sidebar/Sidebar.jsx","views/Closeposition.js","views/Data.js","views/Openposition.js","views/TableList.jsx","views/Innerlogin.js","views/Dashboard.jsx","views/filter/filteredit.js","views/filter/filterdetail.js","views/filter/Filterprofile.js","views/swap/index.js","views/calculating/index.js","views/exploser/index.js","views/ContractSize/ContractSize.js","views/Statistics/Statistics.js","routes.js","layouts/Admin.jsx","index.js"],"names":["defaultWidth","window","screen","width","style","Wrapper","Containers","DefaultStyle","position","padding","zIndex","WebkitBoxSizing","MozBoxSizing","boxSizing","height","display","border","fontSize","WebkitFontSmoothing","fontFamily","fontWeight","color","tl","top","bottom","left","right","tr","tc","margin","marginLeft","bl","br","bc","NotificationItem","cursor","borderRadius","opacity","transition","WebkitTransform","transform","willChange","isHidden","isVisible","success","borderTop","backgroundColor","WebkitBoxShadow","MozBoxShadow","boxShadow","error","warning","info","Title","marginTop","MessageWrapper","marginRight","maxWidthwidth","Dismiss","float","lineHeight","outline","textAlign","Action","background","ActionWrapper","module","exports","thArray","tdArray","iconsArray","dataPie","labels","series","legendPie","names","types","dataSales","optionsSales","low","high","showArea","axisX","showGrid","lineSmooth","showLine","showPoint","fullWidth","chartPadding","responsiveSales","labelInterpolationFnc","value","legendSales","dataBar","optionsBar","seriesBarDistance","responsiveBar","legendBar","webpackEmptyContext","req","e","Error","code","keys","resolve","id","config","baseurl","axios","require","Innerfilter","props","handleDropdownChange","setState","selectValue","target","handleChangeDate","date","startDate","handleEndDate","state","endDate","handleChangeDateTo","startDateTo","handleEndDateTo","endDateTo","handleChange","event","Array","from","selectedOptions","item","renderAccountSelect","selectedAccountOption","options","allAccounts","map","data","label","login","placeholder","onChange","handleChangeAccount","handeChangeShowCommission","showCommission","showAddCommission","handleChangeAccountTo","selectedAccountOptionTo","renderAccountSelectTo","handleChangeCommissionAccount","selectedCommissionAccount","renderCommissionAccount","handleChangeMagicNumber","magicNumber","console","log","handleChangeMagicNumberTo","magicNumberTo","handleChangeSymbol","selectedSymbolOption","renderSymbolSelect","allSymbols","name","isMulti","handleChangeSymbolTo","selectedSymbolOptionTo","renderSymbolSelectTo","changeIncludeDefaultProperty","include","exclude","showMagicNumber","changeExcludeDefaultProperty","changeIncludeDefaultPropertyTo","includeTo","excludeTo","showMagicNumberTo","changeExcludeDefaultPropertyTo","profileName","showCommisoin","autoSyncClose","profileValues","nameError","tags","include_exclude_status","this","fetchfilterdata","self","get","then","response","status","rows","filter","profile_name","toUpperCase","charAt","slice","NotificationManager","listNotify","preventDefault","from_status","to_status","symbolFrom","symbolto","Data","from_account_id","to_account_id","commission_acount_id","startdateFrom","enddateFrom","startdateTo","enddateTo","from_symbols","JSON","stringify","to_symbols","auto_close","from_magic_number","length","to_magic_number","from_include_exclude_status","to_include_exclude_status","createdAt","Date","updatedAt","post","onHide","catch","className","Grid","fluid","onClick","crossClick","aria-hidden","type","handleprofileName","defaultChecked","handleChangeAutoSync","Row","Col","md","selected","isClearable","placeholderText","dateFormat","strictParsing","autoOk","checked","onValidationReject","validationRegex","inputProps","Button","variant","size","block","formDataSubmit","Component","Login","toogle","loginForm","handleClose","handleShow","setShow","createNotification","show","username","password","alert","persons","shwPwd","shwMsg","invalidUsername","invalidPassword","accountlist","bind","onSubmit","trim","userdetail","localStorage","setItem","history","push","message","err","parse","getItem","sm","Modal","disabled","AdminNavbarLinks","logout","clear","notification","Nav","NavItem","eventKey","href","NavDropdown","title","noCaret","MenuItem","pullRight","Header","mobileSidebarToggle","sidebarExists","document","documentElement","classList","toggle","node","createElement","onclick","parentElement","removeChild","body","appendChild","Navbar","Brand","brandText","Toggle","Collapse","Sidebar","routes","menu","innerWidth","routeName","location","pathname","indexOf","updateDimensions","addEventListener","image","data-color","data-image","hasImage","prop","key","redirect","upgrade","activeRoute","layout","path","to","activeClassName","icon","child","undefined","resources","sub","index","Closeposition","allHistoryRecord","fromHistoryOrderInfo","toHistoryOrderInfo","commissionHistoryOrderInfo","useState","isOpen2","setIsOpen2","fromSymbols","toSymbols","Object","entries","join","fromsum","tosum","commission","swap","profit","sumOfTotal","noRecord","total","isOpen","accountFromInfo","alias","displayType","thousandSeparator","decimalScale","accountToInfo","marginBottom","accountCommissionInfo","history_info","tablePage","items","lot","closed","price","textA","dashBoardPage","textB","Openposition","setIsOpen","allOpenRecord","fromOpenOrderInfo","toOpenOrderInfo","swapFrominfo","order_type","lots","swapToinfo","intervalSet","timerWaitInterval","TableList","fetchDataAccordingSymbols","symbol","filterlist","selectedOption","renderSymbols","uniqueSymbols","concat","i","ar","sumOfHistoryTotal","openfromsum","opentosum","sumOfOpenTotal","Dashboard","getAllAccounts","fetchActivefilterData","errorMassege","fetchAllOpenTrade","dateTime","filteredInfoTime","fetchStatusData","fromAccounts","fromSymbol","toAccounts","toSymbol","fromOpenOrderInfos","blockloader","contract_size","toOpenOrderInfos","totalTo","showData","accountDetailValue","accounts_details","currency","tableHeader","details","formData","json","legend","class","role","timerWait","Innerlogin","checkUserConnected","broker","connected","currentAddLogin","currentAddBroker","currentAddAlias","clearInterval","timerShow","fectheAllAccount","setIntervalCustom","content","innerHTML","setInterval","closebtn","swal","timer","button","handleCloseEdit","editForm","handleCloseDetail","detailForm","createTr","scope","launched","viewFilter","editFilter","onUpdate","re","test","text","user","edituser","editserver","editalias","editData","editstatus","Body","closeButton","editAlias","FilterEdite","l","rules","required","abc","from_symbol","to_symbol","all_from_symbols","all_to_symbols","c","moment","FilterDetail","showMagicNumberFrom","format","Filterprofile","showInnerfilter","createWariningNotification","showEdit","editeData","newDate","filterData","activateClick","deactivateClick","deleteFilter","deleteData","showDelete","detailData","deletepopupClick","deletepopupclose","Swap","ContractSize","loading","fetchAllHIstoryTrade","Fragment","margin_currency","dashboardRoutes","component","errormassage","setIErrormassage","fromAccountId","setFromAccountId","toAccountId","setToAccountId","fromOpenTrade","setFromOpenTrade","toOpenTrade","setToOpenTrade","fromHistoryTrade","setFromHistoryTrade","toHistoryTrade","setToHistoryTrade","setCommissionDetails","setopenTotal","sethistoryTotal","settotalOpenAndHistory","commissionValue","setCommissionValue","useEffect","openTotal","historyTotal","commissionDetails","totalOfOpenOrder","totalOfHistoryOrder","newCommissionRecord","openFromHistoryTotal","openToOrderTotal","openToHistoryTotal","openFromOrderTotal","lotsTotal","comissionTotal","profitTotal","swapTotal","open_time","utc","magic_number","fromOpenTradeTr","toOpenTradeTr","fromHistoryTradeTr","toHistoryTradeTr","totalProfit","equity","noGutters","Admin","getRoutes","routeArray","render","handleClick","handleNotificationClick","getBrandText","handleImageClick","handleColorClick","handleHasImage","handleFixedClick","fixedClasses","_notificationSystem","action","scrollTop","scrollingElement","refs","mainPanel","ref","AdminNavbar","ReactDOM","exact","innerfilter","getElementById"],"mappings":"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,kBACA,aACA,mBACA,aACA,cACA,eACA,qBACA,iBACA,cACA,cACA,eACA,kBACA,eACA,iBACA,eACA,cACA,YACA,eACA,aACA,qBACA,aACA,cACA,kBACA,uBACA,YACA,qBACA,WACA,iBACA,mBACA,wBACA,cACA,oBACA,eACA,2BACA,cACA,mBACA,oBACA,0BACA,iBACA,mBACA,eACA,0BACA,iBACA,eACA,aACA,gBACA,gBACA,kBACA,cACA,aACA,eACA,eACA,iBACA,cACA,cACA,cACA,eACA,eACA,YACA,cACA,kBACA,aACA,gBACA,eACA,gBACA,gBACA,cACA,eACA,eACA,aACA,gBACA,aACA,eACA,eACA,gBACA,iBACA,sBACA,kBACA,cACA,cACA,cACA,gBACA,aACA,aACA,cACA,cACA,kBACA,cACA,aACA,mBACA,aACA,YACA,cACA,YACA,sBACA,YACA,cACA,aACA,YACA,oBACA,oBACA,oBACA,cACA,qBACA,iBACA,aACA,aACA,mBACA,kBACA,cACA,cACA,aACA,aACA,gBACA,cACA,aACA,YACA,mBACA,aACA,kBACA,uBACA,eACA,aACA,aACA,aACA,gBACA,aACA,aACA,cACA,aACA,eACA,aACA,aACA,aACA,cACA,cACA,eACA,eACA,eACA,cACA,eACA,cACA,gBACA,aACA,eACA,aACA,eACA,aACA,gBACA,gBACA,aACA,aACA,eACA,iBACA,iBACA,iBACA,iBACA,aACA,YACA,gBACA,aACA,eACA,kBACA,eACA,gBACA,gBACA,eACA,cACA,cACA,cACA,aACA,aACA,eACA,aACA,mBACA,gBACA,aACA,aACA,kBACA,gBACA,aACA,gBACA,aACA,aACA,kBACA,eACA,eACA,cACA,iBAwHAC,QA/GY,CACZC,OAAQ,CAAC,MAAO,MAAO,OACvBC,OAAQ,CAAC,GAAI,GAAI,KA8GjBC,UA5Gc,CACdC,MAAO,CAAC,OAAQ,SAAU,eAC1BC,MAAO,CAAC,OAAQ,SAAU,YA2G1BC,UAvGc,CACdL,OAAQ,CACN,SACA,UACA,SACA,SACA,SACA,UA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","file":"static/js/main.2eef45e0.chunk.js","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n//\n// //\n// // // For notifications\n// //\n//\nvar defaultWidth =\n  window.screen.width > 768\n    ? (window.screen.width * 1) / 3\n    : window.screen.width;\n\nvar style = {\n  Wrapper: {},\n  Containers: {\n    DefaultStyle: {\n      position: \"fixed\",\n      width: defaultWidth,\n      padding: \"10px 10px 10px 20px\",\n      zIndex: 9998,\n      WebkitBoxSizing: \"\",\n      MozBoxSizing: \"\",\n      boxSizing: \"\",\n      height: \"auto\",\n      display: \"inline-block\",\n      border: \"0\",\n      fontSize: \"14px\",\n      WebkitFontSmoothing: \"antialiased\",\n      fontFamily: '\"Roboto\",\"Helvetica Neue\",Arial,sans-serif',\n      fontWeight: \"400\",\n      color: \"#FFFFFF\"\n    },\n\n    tl: {\n      top: \"0px\",\n      bottom: \"auto\",\n      left: \"0px\",\n      right: \"auto\"\n    },\n\n    tr: {\n      top: \"0px\",\n      bottom: \"auto\",\n      left: \"auto\",\n      right: \"0px\"\n    },\n\n    tc: {\n      top: \"0px\",\n      bottom: \"auto\",\n      margin: \"0 auto\",\n      left: \"50%\",\n      marginLeft: -(defaultWidth / 2)\n    },\n\n    bl: {\n      top: \"auto\",\n      bottom: \"0px\",\n      left: \"0px\",\n      right: \"auto\"\n    },\n\n    br: {\n      top: \"auto\",\n      bottom: \"0px\",\n      left: \"auto\",\n      right: \"0px\"\n    },\n\n    bc: {\n      top: \"auto\",\n      bottom: \"0px\",\n      margin: \"0 auto\",\n      left: \"50%\",\n      marginLeft: -(defaultWidth / 2)\n    }\n  },\n\n  NotificationItem: {\n    DefaultStyle: {\n      position: \"relative\",\n      width: \"100%\",\n      cursor: \"pointer\",\n      borderRadius: \"4px\",\n      fontSize: \"14px\",\n      margin: \"10px 0 0\",\n      padding: \"10px\",\n      display: \"block\",\n      WebkitBoxSizing: \"border-box\",\n      MozBoxSizing: \"border-box\",\n      boxSizing: \"border-box\",\n      opacity: 0,\n      transition: \"all 0.5s ease-in-out\",\n      WebkitTransform: \"translate3d(0, 0, 0)\",\n      transform: \"translate3d(0, 0, 0)\",\n      willChange: \"transform, opacity\",\n\n      isHidden: {\n        opacity: 0\n      },\n\n      isVisible: {\n        opacity: 1\n      }\n    },\n\n    success: {\n      borderTop: 0,\n      backgroundColor: \"#a1e82c\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    error: {\n      borderTop: 0,\n      backgroundColor: \"#fc727a\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    warning: {\n      borderTop: 0,\n      backgroundColor: \"#ffbc67\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    info: {\n      borderTop: 0,\n      backgroundColor: \"#63d8f1\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    }\n  },\n\n  Title: {\n    DefaultStyle: {\n      fontSize: \"30px\",\n      margin: \"0\",\n      padding: 0,\n      fontWeight: \"bold\",\n      color: \"#FFFFFF\",\n      display: \"block\",\n      left: \"15px\",\n      position: \"absolute\",\n      top: \"50%\",\n      marginTop: \"-15px\"\n    }\n  },\n\n  MessageWrapper: {\n    DefaultStyle: {\n      marginLeft: \"55px\",\n      marginRight: \"30px\",\n      padding: \"0 12px 0 0\",\n      color: \"#FFFFFF\",\n      maxWidthwidth: \"89%\"\n    }\n  },\n\n  Dismiss: {\n    DefaultStyle: {\n      fontFamily: \"inherit\",\n      fontSize: \"21px\",\n      color: \"#000\",\n      float: \"right\",\n      position: \"absolute\",\n      right: \"10px\",\n      top: \"50%\",\n      marginTop: \"-13px\",\n      backgroundColor: \"#FFFFFF\",\n      display: \"block\",\n      borderRadius: \"50%\",\n      opacity: \".4\",\n      lineHeight: \"11px\",\n      width: \"25px\",\n      height: \"25px\",\n      outline: \"0 !important\",\n      textAlign: \"center\",\n      padding: \"6px 3px 3px 3px\",\n      fontWeight: \"300\",\n      marginLeft: \"65px\"\n    },\n\n    success: {\n      // color: '#f0f5ea',\n      // backgroundColor: '#a1e82c'\n    },\n\n    error: {\n      // color: '#f4e9e9',\n      // backgroundColor: '#fc727a'\n    },\n\n    warning: {\n      // color: '#f9f6f0',\n      // backgroundColor: '#ffbc67'\n    },\n\n    info: {\n      // color: '#e8f0f4',\n      // backgroundColor: '#63d8f1'\n    }\n  },\n\n  Action: {\n    DefaultStyle: {\n      background: \"#ffffff\",\n      borderRadius: \"2px\",\n      padding: \"6px 20px\",\n      fontWeight: \"bold\",\n      margin: \"10px 0 0 0\",\n      border: 0\n    },\n\n    success: {\n      backgroundColor: \"#a1e82c\",\n      color: \"#ffffff\"\n    },\n\n    error: {\n      backgroundColor: \"#fc727a\",\n      color: \"#ffffff\"\n    },\n\n    warning: {\n      backgroundColor: \"#ffbc67\",\n      color: \"#ffffff\"\n    },\n\n    info: {\n      backgroundColor: \"#63d8f1\",\n      color: \"#ffffff\"\n    }\n  },\n\n  ActionWrapper: {\n    DefaultStyle: {\n      margin: 0,\n      padding: 0\n    }\n  }\n};\n\n//\n// //\n// // // For tables\n// //\n//\nconst thArray = [\"ID\", \"Name\", \"Salary\", \"Country\", \"City\"];\nconst tdArray = [\n  [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\", \"Oud-Turnhout\"],\n  [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\", \"Sinaai-Waas\"],\n  [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\", \"Baileux\"],\n  [\"4\", \"Philip Chaney\", \"$38,735\", \"Korea, South\", \"Overland Park\"],\n  [\"5\", \"Doris Greene\", \"$63,542\", \"Malawi\", \"Feldkirchen in Kärnten\"],\n  [\"6\", \"Mason Porter\", \"$78,615\", \"Chile\", \"Gloucester\"]\n];\n\n//\n// //\n// // // For icons\n// //\n//\nconst iconsArray = [\n  \"pe-7s-album\",\n  \"pe-7s-arc\",\n  \"pe-7s-back-2\",\n  \"pe-7s-bandaid\",\n  \"pe-7s-car\",\n  \"pe-7s-diamond\",\n  \"pe-7s-door-lock\",\n  \"pe-7s-eyedropper\",\n  \"pe-7s-female\",\n  \"pe-7s-gym\",\n  \"pe-7s-hammer\",\n  \"pe-7s-headphones\",\n  \"pe-7s-helm\",\n  \"pe-7s-hourglass\",\n  \"pe-7s-leaf\",\n  \"pe-7s-magic-wand\",\n  \"pe-7s-male\",\n  \"pe-7s-map-2\",\n  \"pe-7s-next-2\",\n  \"pe-7s-paint-bucket\",\n  \"pe-7s-pendrive\",\n  \"pe-7s-photo\",\n  \"pe-7s-piggy\",\n  \"pe-7s-plugin\",\n  \"pe-7s-refresh-2\",\n  \"pe-7s-rocket\",\n  \"pe-7s-settings\",\n  \"pe-7s-shield\",\n  \"pe-7s-smile\",\n  \"pe-7s-usb\",\n  \"pe-7s-vector\",\n  \"pe-7s-wine\",\n  \"pe-7s-cloud-upload\",\n  \"pe-7s-cash\",\n  \"pe-7s-close\",\n  \"pe-7s-bluetooth\",\n  \"pe-7s-cloud-download\",\n  \"pe-7s-way\",\n  \"pe-7s-close-circle\",\n  \"pe-7s-id\",\n  \"pe-7s-angle-up\",\n  \"pe-7s-wristwatch\",\n  \"pe-7s-angle-up-circle\",\n  \"pe-7s-world\",\n  \"pe-7s-angle-right\",\n  \"pe-7s-volume\",\n  \"pe-7s-angle-right-circle\",\n  \"pe-7s-users\",\n  \"pe-7s-angle-left\",\n  \"pe-7s-user-female\",\n  \"pe-7s-angle-left-circle\",\n  \"pe-7s-up-arrow\",\n  \"pe-7s-angle-down\",\n  \"pe-7s-switch\",\n  \"pe-7s-angle-down-circle\",\n  \"pe-7s-scissors\",\n  \"pe-7s-wallet\",\n  \"pe-7s-safe\",\n  \"pe-7s-volume2\",\n  \"pe-7s-volume1\",\n  \"pe-7s-voicemail\",\n  \"pe-7s-video\",\n  \"pe-7s-user\",\n  \"pe-7s-upload\",\n  \"pe-7s-unlock\",\n  \"pe-7s-umbrella\",\n  \"pe-7s-trash\",\n  \"pe-7s-tools\",\n  \"pe-7s-timer\",\n  \"pe-7s-ticket\",\n  \"pe-7s-target\",\n  \"pe-7s-sun\",\n  \"pe-7s-study\",\n  \"pe-7s-stopwatch\",\n  \"pe-7s-star\",\n  \"pe-7s-speaker\",\n  \"pe-7s-signal\",\n  \"pe-7s-shuffle\",\n  \"pe-7s-shopbag\",\n  \"pe-7s-share\",\n  \"pe-7s-server\",\n  \"pe-7s-search\",\n  \"pe-7s-film\",\n  \"pe-7s-science\",\n  \"pe-7s-disk\",\n  \"pe-7s-ribbon\",\n  \"pe-7s-repeat\",\n  \"pe-7s-refresh\",\n  \"pe-7s-add-user\",\n  \"pe-7s-refresh-cloud\",\n  \"pe-7s-paperclip\",\n  \"pe-7s-radio\",\n  \"pe-7s-note2\",\n  \"pe-7s-print\",\n  \"pe-7s-network\",\n  \"pe-7s-prev\",\n  \"pe-7s-mute\",\n  \"pe-7s-power\",\n  \"pe-7s-medal\",\n  \"pe-7s-portfolio\",\n  \"pe-7s-like2\",\n  \"pe-7s-plus\",\n  \"pe-7s-left-arrow\",\n  \"pe-7s-play\",\n  \"pe-7s-key\",\n  \"pe-7s-plane\",\n  \"pe-7s-joy\",\n  \"pe-7s-photo-gallery\",\n  \"pe-7s-pin\",\n  \"pe-7s-phone\",\n  \"pe-7s-plug\",\n  \"pe-7s-pen\",\n  \"pe-7s-right-arrow\",\n  \"pe-7s-paper-plane\",\n  \"pe-7s-delete-user\",\n  \"pe-7s-paint\",\n  \"pe-7s-bottom-arrow\",\n  \"pe-7s-notebook\",\n  \"pe-7s-note\",\n  \"pe-7s-next\",\n  \"pe-7s-news-paper\",\n  \"pe-7s-musiclist\",\n  \"pe-7s-music\",\n  \"pe-7s-mouse\",\n  \"pe-7s-more\",\n  \"pe-7s-moon\",\n  \"pe-7s-monitor\",\n  \"pe-7s-micro\",\n  \"pe-7s-menu\",\n  \"pe-7s-map\",\n  \"pe-7s-map-marker\",\n  \"pe-7s-mail\",\n  \"pe-7s-mail-open\",\n  \"pe-7s-mail-open-file\",\n  \"pe-7s-magnet\",\n  \"pe-7s-loop\",\n  \"pe-7s-look\",\n  \"pe-7s-lock\",\n  \"pe-7s-lintern\",\n  \"pe-7s-link\",\n  \"pe-7s-like\",\n  \"pe-7s-light\",\n  \"pe-7s-less\",\n  \"pe-7s-keypad\",\n  \"pe-7s-junk\",\n  \"pe-7s-info\",\n  \"pe-7s-home\",\n  \"pe-7s-help2\",\n  \"pe-7s-help1\",\n  \"pe-7s-graph3\",\n  \"pe-7s-graph2\",\n  \"pe-7s-graph1\",\n  \"pe-7s-graph\",\n  \"pe-7s-global\",\n  \"pe-7s-gleam\",\n  \"pe-7s-glasses\",\n  \"pe-7s-gift\",\n  \"pe-7s-folder\",\n  \"pe-7s-flag\",\n  \"pe-7s-filter\",\n  \"pe-7s-file\",\n  \"pe-7s-expand1\",\n  \"pe-7s-exapnd2\",\n  \"pe-7s-edit\",\n  \"pe-7s-drop\",\n  \"pe-7s-drawer\",\n  \"pe-7s-download\",\n  \"pe-7s-display2\",\n  \"pe-7s-display1\",\n  \"pe-7s-diskette\",\n  \"pe-7s-date\",\n  \"pe-7s-cup\",\n  \"pe-7s-culture\",\n  \"pe-7s-crop\",\n  \"pe-7s-credit\",\n  \"pe-7s-copy-file\",\n  \"pe-7s-config\",\n  \"pe-7s-compass\",\n  \"pe-7s-comment\",\n  \"pe-7s-coffee\",\n  \"pe-7s-cloud\",\n  \"pe-7s-clock\",\n  \"pe-7s-check\",\n  \"pe-7s-chat\",\n  \"pe-7s-cart\",\n  \"pe-7s-camera\",\n  \"pe-7s-call\",\n  \"pe-7s-calculator\",\n  \"pe-7s-browser\",\n  \"pe-7s-box2\",\n  \"pe-7s-box1\",\n  \"pe-7s-bookmarks\",\n  \"pe-7s-bicycle\",\n  \"pe-7s-bell\",\n  \"pe-7s-battery\",\n  \"pe-7s-ball\",\n  \"pe-7s-back\",\n  \"pe-7s-attention\",\n  \"pe-7s-anchor\",\n  \"pe-7s-albums\",\n  \"pe-7s-alarm\",\n  \"pe-7s-airplay\"\n];\n\n//\n// //\n// // // // For dashboard's charts\n// //\n//\n// Data for Pie Chart\nvar dataPie = {\n  labels: [\"40%\", \"20%\", \"40%\"],\n  series: [40, 20, 40]\n};\nvar legendPie = {\n  names: [\"Open\", \"Bounce\", \"Unsubscribe\"],\n  types: [\"info\", \"danger\", \"warning\"]\n};\n\n// Data for Line Chart\nvar dataSales = {\n  labels: [\n    \"9:00AM\",\n    \"12:00AM\",\n    \"3:00PM\",\n    \"6:00PM\",\n    \"9:00PM\",\n    \"12:00PM\",\n    \"3:00AM\",\n    \"6:00AM\"\n  ],\n  series: [\n    [287, 385, 490, 492, 554, 586, 698, 695],\n    [67, 152, 143, 240, 287, 335, 435, 437],\n    [23, 113, 67, 108, 190, 239, 307, 308]\n  ]\n};\nvar optionsSales = {\n  low: 0,\n  high: 800,\n  showArea: false,\n  height: \"245px\",\n  axisX: {\n    showGrid: false\n  },\n  lineSmooth: true,\n  showLine: true,\n  showPoint: true,\n  fullWidth: true,\n  chartPadding: {\n    right: 50\n  }\n};\nvar responsiveSales = [\n  [\n    \"screen and (max-width: 640px)\",\n    {\n      axisX: {\n        labelInterpolationFnc: function(value) {\n          return value[0];\n        }\n      }\n    }\n  ]\n];\nvar legendSales = {\n  names: [\"Open\", \"Click\", \"Click Second Time\"],\n  types: [\"info\", \"danger\", \"warning\"]\n};\n\n// Data for Bar Chart\nvar dataBar = {\n  labels: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"Mai\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n  ],\n  series: [\n    [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895],\n    [412, 243, 280, 580, 453, 353, 300, 364, 368, 410, 636, 695]\n  ]\n};\nvar optionsBar = {\n  seriesBarDistance: 10,\n  axisX: {\n    showGrid: false\n  },\n  height: \"245px\"\n};\nvar responsiveBar = [\n  [\n    \"screen and (max-width: 640px)\",\n    {\n      seriesBarDistance: 5,\n      axisX: {\n        labelInterpolationFnc: function(value) {\n          return value[0];\n        }\n      }\n    }\n  ]\n];\nvar legendBar = {\n  names: [\"Tesla Model S\", \"BMW 5 Series\"],\n  types: [\"info\", \"danger\"]\n};\n\nmodule.exports = {\n  style, // For notifications (App container and Notifications view)\n  thArray,\n  tdArray, // For tables (TableList view)\n  iconsArray, // For icons (Icons view)\n  dataPie,\n  legendPie,\n  dataSales,\n  optionsSales,\n  responsiveSales,\n  legendSales,\n  dataBar,\n  optionsBar,\n  responsiveBar,\n  legendBar // For charts (Dashboard view)\n};\n","module.exports = __webpack_public_path__ + \"static/media/sidebar-3.34535b95.jpg\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 587;","const config= {\n    baseurl:(process.env.NODE_ENV==\"development\") ? \"http://localhost:4000/api\": \"https://top4.trade/api\"\n}\n\nexport default config;","import React, { Component } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport config from '../../constant/config.js';\nimport Select from 'react-select'\nimport TagsInput from 'react-tagsinput'\nimport 'react-tagsinput/react-tagsinput.css'\nimport { times } from 'chartist';\n// import DateFnsUtils from '@date-io/date-fns';\n// import {\n//     // DatePicker,\n//     KeyboardDatePicker,\n//     // TimePicker,\n//     DateTimePicker,\n//     MuiPickersUtilsProvider,\n// } from '@material-ui/pickers';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nconst axios = require('axios');\n\n// import { Multiselect } from \"multiselect-react-dropdown\";\n\n// const options = [\n//     { value: 'chocolate', label: 'Chocolate' },\n//     { value: 'strawberry', label: 'Strawberry' },\n//     { value: 'vanilla', label: 'Vanilla' }\n// ]\n\nclass Innerfilter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // startDate: new Date(),\n            // endDate: new Date(),\n            selectedAccountOption: null,\n            selectedSymbolOption: null,\n            selectedSymbolOptionTo: null,\n            selectedAccountOptionTo: null,\n            selectedCommissionAccount: null,\n            startDate: null,\n            endDate: null,\n            startDateTo: null,\n            endDateTo: null,\n            allAccounts: [],\n            allSymbols: [],\n            profileName: '',\n            error: '',\n            showCommisoin: false,\n            showAddCommission: false,\n            autoSyncClose: false,\n            profileValues: [],\n            nameError: false,\n            magicNumber: [],\n            magicNumberTo: [],\n            showMagicNumber: false,\n            showMagicNumberTo: false,\n            tags: [],\n            include_exclude_status: '',\n            exclude: false,\n            include: false,\n            excludeTo: false,\n            includeTo: false,\n            // options: [{ name: 'Srigar', id: 1 }, { name: 'Sam', id: 2 }],\n\n            // plainArray: [\"Option 1\", \"Option 2\", \"Option 3\", \"Option 4\", \"Option 5\"],\n            // objectArray: [\n            //     { key: \"Option 1\", cat: \"Group 1\" },\n            //     { key: \"Option 2\", cat: \"Group 1\" },\n            //     { key: \"Option 3\", cat: \"Group 1\" },\n            //     { key: \"Option 4\", cat: \"Group 2\" },\n            //     { key: \"Option 5\", cat: \"Group 2\" },\n            //     { key: \"Option 6\", cat: \"Group 2\" },\n            //     { key: \"Option 7\", cat: \"Group 2\" }\n            // ],\n            // selectedValues: [\n            //     { key: \"Option 1\", cat: \"Group 1\" },\n            //     { key: \"Option 2\", cat: \"Group 1\" }\n            // ]\n        };\n\n\n    }\n    componentDidMount() {\n        this.fetchfilterdata()\n        let self = this;\n        axios.get(config.baseurl + '/accounts/fetchAllAccounts')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ allAccounts: response.data.rows })\n                }\n            })\n        axios.get(config.baseurl + '/accounts/fetchAllSymbol')\n            .then(function (response) {\n                console.log(response, 'response.......');\n                if (response.status == 200) {\n                    self.setState({ allSymbols: response.data.rows })\n                }\n            })\n    }\n    // addItem = () => {\n    //     this.selectedValues.push({ key: \"Option 3\", cat: \"Group 1\" });\n    // }\n    handleDropdownChange = (e) => {\n        this.setState({ selectValue: e.target.value });\n    }\n    handleChangeDate = date => {\n        this.setState({\n            startDate: date\n        });\n    }\n\n    handleEndDate = date => {\n        if (date < this.state.startDate && date != null) {\n            this.setState({ error: 'enddate', endDate: \"\" })\n            return\n        }\n        this.setState({\n            error: '',\n            endDate: date\n        })\n    }\n    handleChangeDateTo = date => {\n\n        this.setState({\n            startDateTo: date,\n            error: ''\n        });\n    }\n    handleEndDateTo = date => {\n        if (date < this.state.startDateTo && date != null) {\n            this.setState({ error: 'enddateto', endDateTo: \"\" })\n            return\n        }\n        this.setState({\n            error: '',\n            endDateTo: date\n        });\n    }\n    handleChange = (event) => {\n        //this.setState({value: event.option});\n        this.setState({ value: Array.from(event.target.selectedOptions, (item) => item.value) });\n    }\n    renderAccountSelect = () => {\n        const { selectedAccountOption, allAccounts } = this.state;\n        let Data = {\n            account: selectedAccountOption\n        }\n        // axios.post(config.baseurl + '/filter/fetchSymbolData', Data)\n        //     .then(function (response) {\n        //         if (response.status == 200) {\n        //             this.props.onHide()\n        //         }\n        //     })\n        //     .catch(function (error) {\n        //     });\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account\"\n                value={selectedAccountOption}\n                onChange={this.handleChangeAccount}\n                options={options}\n            />\n        )\n    }\n    handeChangeShowCommission = (e) => {\n        this.setState({ showCommission: true }, () => {\n            this.setState({ showAddCommission: !this.state.showAddCommission })\n        })\n    }\n    handleChangeAccountTo = selectedAccountOptionTo => {\n\n        this.setState({ selectedAccountOptionTo, error: '' });\n    };\n    renderAccountSelectTo = () => {\n        const { selectedAccountOptionTo, allAccounts } = this.state;\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account\"\n                value={selectedAccountOptionTo}\n                onChange={this.handleChangeAccountTo}\n                options={options}\n            />\n        )\n    }\n    handleChangeCommissionAccount = selectedCommissionAccount => {\n        this.setState({ selectedCommissionAccount, });\n    };\n    renderCommissionAccount = () => {\n        const { selectedCommissionAccount, allAccounts } = this.state;\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account\"\n                value={selectedCommissionAccount}\n                onChange={this.handleChangeCommissionAccount}\n                options={options}\n            />\n        )\n    }\n    handleChangeMagicNumber = (magicNumber) => {\n        console.log(magicNumber, 'jhcvjkjk');\n        // if(re.test(tags))\n        this.setState({ magicNumber })\n        // this.state.magicNumber.push(magicNumber);\n    }\n    handleChangeMagicNumberTo = (magicNumberTo) => {\n\n\n        // if(re.test(tags))\n        this.setState({ magicNumberTo })\n    }\n\n\n    handleChangeAccount = selectedAccountOption => {\n        this.setState({ selectedAccountOption });\n    };\n    handleChangeSymbol = selectedSymbolOption => {\n        this.setState({ selectedSymbolOption });\n    };\n    renderSymbolSelect = () => {\n        const { selectedSymbolOption, allSymbols } = this.state;\n        let options = allSymbols.map(data => {\n            return { value: data.name, label: data.name };\n        })\n        return (\n            <Select\n                placeholder=\"Select Symbol\"\n                value={selectedSymbolOption}\n                isMulti\n                onChange={this.handleChangeSymbol}\n                options={options}\n            />\n        )\n    }\n    handleChangeSymbolTo = selectedSymbolOptionTo => {\n        this.setState({ selectedSymbolOptionTo });\n    };\n    renderSymbolSelectTo = () => {\n        const { selectedSymbolOptionTo, allSymbols } = this.state;\n        let options = allSymbols.map(data => {\n            return { value: data.name, label: data.name };\n        })\n\n        return (\n            <Select\n                placeholder=\"Select Symbol...\"\n                value={selectedSymbolOptionTo}\n                isMulti\n                onChange={this.handleChangeSymbolTo}\n                options={options}\n            />\n        )\n    }\n    fetchfilterdata() {\n        let self = this;\n        axios.get(config.baseurl + '/filter/fetchfilterdata')\n            .then(function (response) {\n                if (response.status == 200) {\n\n                    self.setState({ profileValues: response.data.rows })\n                }\n            })\n    }\n\n    handleprofileName(e) {\n        this.setState({ nameError: false })\n        this.state.profileValues.filter((data) => {\n            if (data.profile_name.toUpperCase() !== e.target.value.toUpperCase()) {\n                this.setState({ profileName: e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1), error: '', })\n            }\n            else {\n                this.setState({ nameError: true }, () => {\n                })\n                NotificationManager.listNotify = [];\n                NotificationManager.error('Profile already exits!');\n\n            }\n        })\n    }\n    // handlemagicNumber(e){\n    //     this.setState({ magicNumber: e.target.value})\n    // }\n\n    // handlemagicNumberTo(e){\n    //     this.setState({ magicNumberTo: e.target.value})\n    // }\n\n    formDataSubmit(e) {\n\n        e.preventDefault();\n\n\n\n        let from_status = this.state.include === true && this.state.exclude === false ? 1 : this.state.exclude === true && this.state.include === false ? 2 : 0\n\n\n        let to_status = this.state.includeTo === true && this.state.excludeTo === false ? 1 : this.state.excludeTo === true && this.state.includeTo === false ? 2 : 0\n        let self = this\n\n\n        if (this.state.profileName == null || this.state.profileName == '') {\n            NotificationManager.listNotify = [];\n            NotificationManager.error('Please name is required !')\n            return\n        }\n        else if (this.state.selectedAccountOption == null || this.state.selectedAccountOption == '') {\n            this.setState({ error: 'accountoption' })\n            return\n        }\n        else if (this.state.showCommission == true && (this.state.selectedCommissionAccount == null || this.state.selectedCommissionAccount == '')) {\n            this.setState({ error: 'selectedCommissionAccount' })\n            return\n        }\n\n        else if (this.state.startDate == null || this.state.startDate == '') {\n            this.setState({ error: 'startdate' })\n            return\n        } else if (this.state.selectedSymbolOption == null || this.state.selectedSymbolOption == '') {\n            this.setState({ error: 'symbolselect' })\n            return\n        }\n        else if (this.state.selectedAccountOptionTo == null || this.state.selectedAccountOptionTo == '') {\n            this.setState({ error: 'accountoptionto' })\n            return\n        }\n\n        else if (this.state.startDateTo == null || this.state.startDateTo == '') {\n            this.setState({ error: 'startDateTo' })\n            return\n        }\n        else if (this.state.selectedSymbolOptionTo == null || this.state.selectedSymbolOptionTo == '') {\n            this.setState({ error: 'selectedSymbolOptionTo' })\n            return\n        }\n        else if (this.state.nameError) {\n            NotificationManager.listNotify = [];\n            NotificationManager.error('Profile Name Already Exist!');\n        }\n\n        else {\n            this.setState({ error: ' ' })\n            let fromSymbol = this.state.selectedSymbolOption;\n            let symbolFrom = fromSymbol.map((data) => {\n                return data.value\n            })\n            let toSymbol = this.state.selectedSymbolOptionTo;\n            let symbolto = toSymbol.map((data) => {\n                return data.value\n            })\n            console.log(this.state.selectedCommissionAccount, 'this.state.selectedCommissionAccount')\n\n            let Data = {\n                profile_name: this.state.profileName,\n                from_account_id: this.state.selectedAccountOption.value,\n                to_account_id: this.state.selectedAccountOptionTo.value,\n                commission_acount_id: this.state.showAddCommission ? this.state.selectedCommissionAccount.value : 0,\n                startdateFrom: this.state.startDate,\n                enddateFrom: this.state.endDate,\n                startdateTo: this.state.startDateTo,\n                enddateTo: this.state.endDateTo,\n                from_symbols: JSON.stringify(symbolFrom),\n                to_symbols: JSON.stringify(symbolto),\n                auto_close: this.state.autoSyncClose ? 1 : 0,\n                from_magic_number: (from_status != 0) ? this.state.magicNumber.length > \"0\" ? JSON.stringify(this.state.magicNumber) : [] : \"\",\n                to_magic_number: (to_status != 0) ? this.state.magicNumberTo.length > \"0\" ? JSON.stringify(this.state.magicNumberTo) : [] : \"\",\n                from_include_exclude_status: from_status,\n                to_include_exclude_status: to_status,\n                createdAt: new Date(),\n                updatedAt: new Date(),\n\n            }\n            console.log(Data, \"dat-------------\");\n\n            axios.post(config.baseurl + '/filter/addfilterdata', Data)\n                .then(function (response) {\n                    if (response.status == 200) {\n                        self.props.onHide()\n                    }\n                })\n                .catch(function (error) {\n                });\n        }\n    }\n    crossClick(e) {\n        e.preventDefault();\n        this.props.onHide()\n    }\n    handleChangeAutoSync(e) {\n\n        this.setState({ autoSyncClose: !this.state.autoSyncClose }, () => {\n\n        })\n    }\n\n    changeIncludeDefaultProperty = () => {\n\n        this.setState({ include: !this.state.include, exclude: false }\n        )\n        if (!this.state.include == true) {\n            this.setState({ showMagicNumber: true })\n        } else if (this.state.include == true) {\n            this.setState({ showMagicNumber: false })\n\n        }\n\n\n    }\n    changeExcludeDefaultProperty = () => {\n        this.setState({ exclude: !this.state.exclude, include: false })\n        if (!this.state.exclude == true) {\n            this.setState({ showMagicNumber: true })\n        } else if (this.state.exclude == true) {\n            this.setState({ showMagicNumber: false })\n\n        }\n\n    }\n\n    changeIncludeDefaultPropertyTo = () => {\n        this.setState({ includeTo: !this.state.includeTo, excludeTo: false })\n        if (!this.state.includeTo == true) {\n            this.setState({ showMagicNumberTo: true })\n        } else if (this.state.includeTo == true) {\n            this.setState({ showMagicNumberTo: false })\n\n        }\n    }\n    changeExcludeDefaultPropertyTo = () => {\n        this.setState({ excludeTo: !this.state.excludeTo, includeTo: false })\n        if (!this.state.excludeTo == true) {\n            this.setState({ showMagicNumberTo: true })\n        } else if (this.state.excludeTo == true) {\n            this.setState({ showMagicNumberTo: false })\n\n        }\n\n    }\n    render() {\n        let s = this\n        return (\n            <>\n                <NotificationContainer />\n                <div className=\"content\">\n                    <Grid fluid>\n                        <div className=\"symbol-box\">\n                            <div className=\"cross_div\"><a onClick={(e) => this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\n                            <div className=\"terminal-text\" >\n                                <label className=\"pnameadjust\"> Profile Name </label>\n                                <input type=\"text\" name=\"profilename\" className=\"Itext\" placeholder=\"Profile Name\" onChange={(e) => this.handleprofileName(e)} />\n                            </div>\n                            <div className=\"synclose\">\n                                <label className=\"checkbox-inline\"><input type=\"checkbox\" defaultChecked={this.state.autoSyncClose} name=\"changeAutoSync\" onChange={(e) => this.handleChangeAutoSync(e)} /><b>Auto Sync Close</b></label>\n                            </div>\n\n                            <form>\n                                <Row>\n\n                                    <Col md={6}>\n                                        <div className=\"card bottom\">\n                                            <div style={{ padding: '10px 20px 0px' }}>\n                                                <span style={{ fontWeight: 'bold' }}>Account A</span>\n                                            </div>\n                                            <table className=\"table mt20\">\n                                                <tbody>\n                                                    <tr>\n                                                        <td className=\"b-clr\">\n                                                            <span className=\"accnt\">Account </span>\n                                                        </td>\n\n                                                        <td className=\"b-clr text-center\" style={{ width: '50%' }}>\n                                                            {/* <Multiselect\n                                                        options={objectArray}\n                                                        singleSelect\n                                                        displayValue=\"key\"\n                                                    /> */}\n                                                            {this.renderAccountSelect()}\n                                                            {(this.state.error == 'accountoption') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td className=\"b-clr \">\n                                                            <span className=\"accnt\">From  </span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center datepicker_filter\">\n                                                            <DatePicker\n                                                                selected={this.state.startDate}\n                                                                onChange={this.handleChangeDate}\n                                                                isClearable\n                                                                placeholderText=\"dd/mm/yyyy\"\n                                                                dateFormat=\"dd/MM/yyyy\"\n                                                                startDate={this.state.startDate}\n                                                                endDate={this.state.endDate}\n                                                                strictParsing\n                                                            />\n                                                            {/* <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                                            <KeyboardDatePicker\n                                                                // margin=\"normal\"\n                                                                clearable={false}\n                                                                id=\"date-picker-dialog\"\n                                                                label=\"dd/MM/yyyy\"\n                                                                format=\"dd/MM/yyyy\"\n                                                                onError={() => { return null }}\n                                                                value={this.state.startDate}\n                                                                onChange={this.handleChangeDate}\n                                                                KeyboardButtonProps={{\n                                                                    'aria-label': 'change date',\n                                                                }}\n                                                            />\n                                                        </MuiPickersUtilsProvider> */}\n                                                            {(this.state.error == 'startdate') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td className=\"b-clr \">\n                                                            <span className=\"accnt\">To   </span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center datepicker_filter\">\n                                                            <DatePicker\n                                                                autoOk={true}\n                                                                selected={this.state.endDate}\n                                                                onChange={this.handleEndDate}\n                                                                isClearable\n                                                                placeholderText=\"dd/mm/yyyy\"\n                                                                dateFormat=\"dd/MM/yyyy\"\n                                                                startDate={this.state.startDate}\n                                                                endDate={this.state.endDate}\n                                                            />\n                                                            {(this.state.error == 'enddate') && <p style={{ color: 'red', fontSize: '13px' }}>*\n                                                        Please ensure that the End Date is greater than the Start Date.</p>}\n\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td className=\"b-clr \">\n                                                            <span className=\"accnt\">Symbol </span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                            {/* <Multiselect\n                                                        options={objectArray}\n                                                        displayValue=\"key\"\n                                                        showCheckbox={true}\n                                                    /> */}\n                                                            {this.renderSymbolSelect()}\n                                                            {(this.state.error == 'symbolselect') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n\n\n                                            <div className=\"text-center\">\n                                                <span > Magic Number   </span>\n                                            </div>\n\n                                            <table className=\"table \">\n                                                <tbody>\n                                                    <tr>\n                                                        <td className=\"b-clr dataAdjust\">\n                                                            <div onClick={this.changeIncludeDefaultProperty}>\n                                                                <input\n                                                                    type=\"radio\" id=\"include\" name=\"include\" checked={this.state.include} />\n                                                                <span className=\"accnt \">Include</span>\n\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"b-clr text-center\">\n                                                            <div onClick={this.changeExcludeDefaultProperty} >\n                                                                <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.exclude} />\n                                                                <span className=\"accnt \">Exclude</span>\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n\n\n                                            {this.state.showMagicNumber === true ?\n                                                <div className=\"b-clr magicnumber\" style={{}}>\n                                                    <TagsInput\n                                                        onValidationReject={() => console.log('rejected')}\n                                                        validationRegex={/^[0-9]*$/}\n                                                        inputProps={{ placeholder: this.state.magicNumber.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumber\n                                                        } onChange={this.handleChangeMagicNumber}></TagsInput>\n                                                </div> : null}\n\n                                        </div>\n                                    </Col>\n                                    <Col md={6}>\n                                        <div className=\"card bottom\">\n                                            <div style={{ padding: '10px 20px 0px' }}>\n                                                <span style={{ fontWeight: 'bold' }}>Account B</span>\n                                            </div>\n                                            <table className=\"table mt20\">\n                                                <tbody>\n                                                    <tr>\n                                                        <td className=\"b-clr \">\n                                                            <span className=\"accnt\"> Account</span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center\" style={{ width: '50%' }}>\n                                                            {this.renderAccountSelectTo()}\n                                                            {(this.state.error == 'accountoptionto') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td className=\"b-clr \">\n                                                            <span className=\"accnt\">From </span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center datepicker_filter\">\n                                                            <DatePicker\n                                                                selected={this.state.startDateTo}\n                                                                onChange={this.handleChangeDateTo}\n                                                                isClearable\n                                                                placeholderText=\"dd/mm/yyyy\"\n                                                                dateFormat=\"dd/MM/yyyy\"\n                                                                startDate={this.state.startDateTo}\n                                                                endDate={this.state.endDateTo}\n                                                                strictParsing\n                                                            />\n                                                            {(this.state.error == 'startDateTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td className=\"b-clr \">\n                                                            <span className=\"accnt\">To  </span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center datepicker_filter\">\n                                                            <DatePicker\n                                                                selected={this.state.endDateTo}\n                                                                onChange={this.handleEndDateTo}\n                                                                isClearable\n                                                                placeholderText=\"dd/mm/yyyy\"\n                                                                dateFormat=\"dd/MM/yyyy\"\n                                                                startDate={this.state.startDateTo}\n                                                                endDate={this.state.endDateTo}\n                                                            />\n                                                            {(this.state.error == 'enddateto') && <p style={{ color: 'red', fontSize: '13px' }}>*\n                                                        Please ensure that the End Date is greater than the Start Date.</p>}\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td className=\"b-clr\">\n                                                            <span className=\"accnt\"> Symbol   </span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                            {/* <Multiselect\n                                                        options={objectArray}\n                                                        displayValue=\"key\"\n                                                        showCheckbox={true}\n                                                    /> */}\n                                                            {this.renderSymbolSelectTo()}\n                                                            {(this.state.error == 'selectedSymbolOptionTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\n\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n\n                                            <div className=\"text-center\">\n                                                <span > Magic Number  </span>\n                                            </div>\n                                            <table className=\"table mt20\">\n                                                <tbody>\n\n                                                    <tr>\n                                                        <td className=\"b-clr checkboxAdjust\">\n                                                            <div onClick={this.changeIncludeDefaultPropertyTo} >\n                                                                <input\n                                                                    type=\"radio\" id=\"includeTo\" name=\"includeTo\" checked={this.state.includeTo} />\n                                                                <span className=\"accnt \">Include</span>\n\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"b-clr checkboxAdjust text-center\">\n                                                            <div onClick={this.changeExcludeDefaultPropertyTo} >\n                                                                <input type=\"radio\" id=\"excludeTo\" name=\"excludeTo\" checked={this.state.excludeTo} />\n                                                                <span className=\"accnt \">Exclude</span>\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n                                            <div>\n\n                                                {this.state.showMagicNumberTo === true ?\n                                                    <div className=\"b-clr magicnumber\" style={{}}>\n                                                        <TagsInput\n                                                            onValidationReject={() => console.log('rejected')}\n                                                            validationRegex={/^[0-9]*$/}\n                                                            inputProps={{ placeholder: this.state.magicNumberTo.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumberTo\n                                                            } onChange={this.handleChangeMagicNumberTo}></TagsInput>\n                                                    </div> : null}\n                                            </div>\n                                        </div>\n                                    </Col>\n                                </Row>\n                                <hr></hr>\n                                <div className=\"chceckbox\">\n\n                                    <label className=\"checkbox-inline\"><input type=\"checkbox\" defaultChecked={this.state.showCommisoin} onChange={(e) => this.handeChangeShowCommission(e)} /><b>Add Commission</b></label>\n                                </div>\n                                {this.state.showAddCommission &&\n                                    <div className=\"center-com d-flex\">\n                                        <div className=\"com\">\n                                            <h3 style={{ fontWeight: 'bold' }}>Commission</h3>\n                                        </div>\n                                        <table className=\"table mt20\">\n                                            <tbody>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\"> Account </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '50%' }}>\n                                                        {this.renderCommissionAccount()}\n\n                                                        {(this.state.error == 'selectedCommissionAccount') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account </p>}\n                                                    </td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                }\n                                <div className=\"save_button_filter\">\n                                    <div className=\"savebtn\">\n                                        <Button className=\"btn-primary savebutton\" variant=\"primary\" size=\"lg\" block onClick={(e) => this.formDataSubmit(e)}>\n                                            <b>Save</b>\n                                        </Button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </Grid>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Innerfilter;\n","import React, { Component } from 'react';\nimport { Grid, Row, Col, Modal, Alert } from \"react-bootstrap\";\nimport swal from 'sweetalert';\nimport config from '../../constant/config.js';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nconst axios = require('axios');\n\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loginForm: false,\n            setShow: false,\n            show: true,\n            username: '',\n            password: '',\n            alert: null,\n            persons: [],\n            shwPwd: false,\n            shwMsg: false,\n            invalidUsername: '',\n            invalidPassword: '',\n            accountlist: []\n\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value.trim() })\n    }\n    onSubmit(e) {\n        e.preventDefault();\n        const userdetail = {\n            username: this.state.username,\n            password: this.state.password\n        }\n        if (this.state.username == '') {\n            this.setState({ shwPwd: true })\n        }\n\n        let self = this;\n        axios.post(config.baseurl + '/users/mainLogin', userdetail)\n            .then(function (response) {\n                if (response.status == 200) {\n                    // self.handleClose();\n                    if (response.data.rows && response.data.rows.length > 0) {\n                        localStorage.setItem('currentUser', JSON.stringify(response.data.rows));\n                        self.props.history.push('/dashboard')\n                    }\n                    if (response.data.message) {\n                        if (response.data.name == 'username') {\n                            self.setState({ invalidUsername: response.data.message })\n                            if (self.state.invalidUsername == '' || self.state.invalidUsername == 'Invalid username.' || self.state.invalidUsername == \"Invalid username\") {\n                                self.createNotification()\n                            }\n                        }\n                        if (response.data.name == 'password') {\n                            if (self.state.invalidPassword == '' || self.state.invalidPassword == 'Invalid password.') {\n                                self.createNotification()\n                            }\n                            self.setState({ invalidPassword: response.data.message, invalidUsername: '' })\n\n                        }\n                    }\n                }\n            })\n            .catch(function (err) {\n            });\n    }\n    toogle = () => {\n        this.setState({ loginForm: !this.state.loginForm })\n    }\n    handleClose = () => {\n        this.setState({ loginForm: false })\n    }\n    handleShow = () => {\n        this.setState({ setShow: true })\n    }\n    createNotification = () => {\n        NotificationManager.listNotify = [];\n        NotificationManager.error('Invalid Credentials !');\n    }\n\n    componentDidMount() {\n        // let self = this;\n\n        let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n        if (currentUser !== null) {\n            this.props.history.push('dashboard/dashboard')\n            return;\n        }\n        // axios.get(config.baseurl + '/users/allAccounts')\n        //     .then(function (response) {\n        //         if (response.status == 200) {\n        //             self.setState({ accountlist: response.data.rows })\n        //         }\n        //     })\n    }\n    render() {\n        const { invalidPassword, invalidUsername } = this.state;\n        return (\n            <div className=\"content\">\n                <Grid fluid style={{ marginTop: '20vh' }}>\n                    <Row>\n                        <Col md={4} />\n                        <Col\n                            md={4}\n                            sm={6}\n                        >\n                            {/* <Modal show={show}>\n                                    <Modal.Body> */}\n                            <div className=\"form-box login-box\">\n                                <Modal.Title className=\"text-center\"><b>Log In</b></Modal.Title>\n\n                                <div className=\"container-fluid\" style={{ background: '#eee', padding: 15, marginTop: 10 }}>\n                                    <div>\n                                        <span style={{ fontWeight: 'bold' }}> Username: </span>\n                                                    testaccount\n                                                </div>\n                                    <div>\n                                        <span style={{ fontWeight: 'bold' }}> Password: </span>\n                                                    1234567\n                                                </div>\n                                </div>\n                                <form style={{ marginTop: '20px' }} onSubmit={this.onSubmit}>\n                                    <label>Username</label>\n\n                                    <input className=\"Itext\" placeholder=\"Enter Username\" name=\"username\" value={this.state.username} onChange={this.onChange}\n                                    // onKeyUp={this.checkValidUser}\n                                    ></input>\n                                    <label>Password</label>\n\n                                    <input className=\"Itext\" placeholder=\"Enter Password\" name=\"password\" type=\"password\" value={this.state.password} onChange={this.onChange}></input>\n\n                                    <div className=\"clearfix\">\n                                        <button type=\"submit\" disabled={!this.state.username || !this.state.password} className={!this.state.username || !this.state.password ? \"loginButton\" : \"loginButton save2 save1\"}>Login</button>\n\n                                    </div>\n                                </form>\n                            </div>\n\n                            {/* </Modal.Body>\n                                </Modal> */}\n\n\n                        </Col>\n                        <Col md={4} />\n                    </Row>\n                </Grid>\n                <NotificationContainer />\n\n            </div >\n        );\n    }\n}\n\nexport default Login;","import React, { Component } from \"react\";\nimport { NavItem, Nav, NavDropdown, MenuItem } from \"react-bootstrap\";\n\nclass AdminNavbarLinks extends Component {\n  constructor(props) {\n    super(props);\n  }\n  logout = () => {\n    localStorage.clear();\n    this.props.history.push('/login');\n  }\n  render() {\n    const notification = (\n      <div>\n        {/* <i className=\"fa fa-globe\" />\n        <b className=\"caret\" /> */}\n        {/* <span className=\"notification\">5</span> */}\n        <p className=\"hidden-lg hidden-md\">Notification</p>\n      </div>\n    );\n    return (\n      <div>\n        <Nav>\n          <NavItem eventKey={1} href=\"#\">\n            {/* <i className=\"fa fa-dashboard\" /> */}\n            <p className=\"hidden-lg hidden-md\">Dashboard</p>\n          </NavItem>\n          <NavDropdown\n            eventKey={2}\n            title={notification}\n            noCaret\n            id=\"basic-nav-dropdown\"\n          >\n            <MenuItem eventKey={2.1}>Notification 1</MenuItem>\n            <MenuItem eventKey={2.2}>Notification 2</MenuItem>\n            <MenuItem eventKey={2.3}>Notification 3</MenuItem>\n            <MenuItem eventKey={2.4}>Notification 4</MenuItem>\n            <MenuItem eventKey={2.5}>Another notifications</MenuItem>\n          </NavDropdown>\n          <NavItem eventKey={3} href=\"#\">\n            {/* <i className=\"fa fa-search\" />\n            <p className=\"hidden-lg hidden-md\">Search</p> */}\n          </NavItem>\n        </Nav>\n        <Nav pullRight>\n          {/* <NavItem eventKey={1} href=\"#\">\n            Account\n          </NavItem>\n          <NavDropdown\n            eventKey={2}\n            title=\"Dropdown\"\n            id=\"basic-nav-dropdown-right\"\n          >\n            <MenuItem eventKey={2.1}>Action</MenuItem>\n            <MenuItem eventKey={2.2}>Another action</MenuItem>\n            <MenuItem eventKey={2.3}>Something</MenuItem>\n            <MenuItem eventKey={2.4}>Another action</MenuItem>\n            <MenuItem eventKey={2.5}>Something</MenuItem>\n            <MenuItem divider />\n            <MenuItem eventKey={2.5}>Separated link</MenuItem>\n          </NavDropdown> */}\n          <NavItem  eventKey={3} onClick={() => this.logout()}>\n           <span className=\"logOutbtn\">Logout</span> \n          </NavItem>\n        </Nav>\n      </div>\n    );\n  }\n}\n\nexport default AdminNavbarLinks;\n","import React, { Component } from \"react\";\nimport { Navbar } from \"react-bootstrap\";\n\nimport AdminNavbarLinks from \"./AdminNavbarLinks\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.mobileSidebarToggle = this.mobileSidebarToggle.bind(this);\n    this.state = {\n      sidebarExists: false\n    };\n  }\n  mobileSidebarToggle(e) {\n    if (this.state.sidebarExists === false) {\n      this.setState({\n        sidebarExists: true\n      });\n    }\n    e.preventDefault();\n    document.documentElement.classList.toggle(\"nav-open\");\n    var node = document.createElement(\"div\");\n    node.id = \"bodyClick\";\n    node.onclick = function() {\n      this.parentElement.removeChild(this);\n      document.documentElement.classList.toggle(\"nav-open\");\n    };\n    document.body.appendChild(node);\n  }\n  render() {\n    return (\n      <Navbar fluid>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <a href=\"#\">{this.props.brandText== \"Dashboard\" ? \"Hedging Interest Differentials Monitoring\" : this.props.brandText }</a>\n          </Navbar.Brand>\n          <Navbar.Toggle onClick={this.mobileSidebarToggle} />\n        </Navbar.Header>\n        <Navbar.Collapse>\n          <AdminNavbarLinks {...this.props}/>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Dropdown, DropdownButton } from 'react-bootstrap'\nimport AdminNavbarLinks from \"../Navbars/AdminNavbarLinks.jsx\";\n\n// import logo from \"assets/img/reactlogo.png\";\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth,\n      menu: false\n    };\n  }\n  toggle = (id) => {\n\n    console.log(this.props.routes)\n    this.props.routes.filter((data) => {\n      if (data.id == id) {\n        data.menu = !data.menu\n      }\n      else {\n        data.menu = false\n      }\n    })\n  }\n\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  updateDimensions() {\n    this.setState({ width: window.innerWidth });\n  }\n  componentDidMount() {\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n  render() {\n    console.log(this.props, \"props\")\n    const sidebarBackground = {\n      backgroundImage: \"url(\" + this.props.image + \")\"\n    };\n    return (\n\n\n      <div\n        id=\"sidebar\"\n        className=\"sidebar\"\n        data-color={this.props.color}\n        data-image={this.props.image}\n      >\n        {this.props.hasImage ? (\n          <div className=\"sidebar-background\" />\n        ) : (\n            null\n          )}\n        <div className=\"logo\">\n          <a\n            href=\"https://www.creative-tim.com?ref=lbd-sidebar\"\n            className=\"simple-text logo-mini\"\n          >\n            <div className=\"logo-img\">\n\n            </div>\n          </a>\n          <span className=\"simple-text logo-normal\">\n            Dashboard\n          </span>\n          {/* <a\n            href=\"https://www.creative-tim.com?ref=lbd-sidebar\"\n            className=\"simple-text logo-normal\"\n          >\n            Dashboard\n          </a> */}\n        </div>\n        <div className=\"sidebar-wrapper\">\n\n          <ul className=\"nav\">\n            {this.state.width <= 991 ? <AdminNavbarLinks {...this.props} /> : null}\n            {this.props.routes.map((prop, key) => {\n              if (!prop.redirect)\n                // console.log(prop.resources, 'resouces');\n                return (\n                  <li\n                    className={\n                      prop.upgrade\n                        ? \"active active-pro\"\n                        : this.activeRoute(prop.layout + prop.path)\n                    }\n\n                    key={key}\n                  >\n                    <NavLink\n                      to={prop.layout + prop.path}\n                      className=\"nav-link\"\n                      activeClassName=\"active\"\n                    >\n                      <i className={prop.icon} />\n                      <p\n                        onClick={() => this.toggle(prop.id)}\n\n                      >{prop.name}\n                        {prop.child !== false && <b style={{ transform: prop.menu ? 'rotate(0deg)' : 'rotate(90deg)' }} className=\"caret\"></b>}\n                      </p>\n\n                    </NavLink>\n                    {prop.menu &&\n                      <ul className='dropdown-menu-cutomize'>\n                        {prop.resources != undefined && prop.resources.map((sub, index) => (\n                          <NavLink\n                              to={sub.layout + sub.path}\n                              className=\"nav-link\"\n                              activeClassName=\"active\"\n                            >\n                          <li\n\n                            key={index}>\n                              {/* <i className={sub.icon} /> */}\n                              <p >{sub.name}</p>\n                          </li>\n                            </NavLink>\n                        ))}\n\n                      </ul>\n                    }\n\n                  </li>\n                );\n              // return null;\n            })}\n          </ul>\n        </div>\n        {/* <NavLink>\n          <DropdownButton id=\"dropdown-item-button\" title=\"Dropdown button\">\n            <Dropdown.ItemText>Dropdown item text</Dropdown.ItemText>\n            <Dropdown.Item as=\"button\">Action</Dropdown.Item>\n            <Dropdown.Item as=\"button\">Another action</Dropdown.Item>\n            <Dropdown.Item as=\"button\">Something else</Dropdown.Item>\n          </DropdownButton>\n        </NavLink> */}\n\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n\n","\nimport React, { useState, Fragment } from 'react';\nimport { Collapse } from 'reactstrap';\nimport { Row, Col } from \"react-bootstrap\";\nimport NumberFormat from 'react-number-format';\nimport Login from './login';\n\n// import Data from './Data';\n\nconst Closeposition = (props) => {\n    const { allHistoryRecord, fromHistoryOrderInfo, toHistoryOrderInfo, commissionHistoryOrderInfo } = props;\n    const [isOpen2, setIsOpen2] = useState(false);\n    const toggle2 = () => setIsOpen2(!isOpen2);\n\n    // const sumOfTotal = allHistoryRecord.reduce((current, data) => {\n    //     return (data.total + current);\n    // }, 0);\n    let fromSymbols = '';\n    let toSymbols = '';\n    if (allHistoryRecord && Object.entries(allHistoryRecord).length > 0) {\n        fromSymbols = JSON.parse(allHistoryRecord.from_symbols);\n        fromSymbols = (fromSymbols).map(data => data).join(', ');\n        toSymbols = JSON.parse(allHistoryRecord.to_symbols);\n        toSymbols = (toSymbols).map(data => data).join(', ')\n    }\n    let fromsum = 0;\n    let tosum = 0;\n    let commissionSum = 0;\n\n    if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\n        fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\n    }\n    if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\n        tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\n    }\n    if (commissionHistoryOrderInfo && commissionHistoryOrderInfo.length > 0) {\n        commissionSum = (commissionHistoryOrderInfo[0].commission + commissionHistoryOrderInfo[0].swap + commissionHistoryOrderInfo[0].profit);\n    }\n\n    let sumOfTotal = tosum + fromsum;\n\n    let noRecord = ((fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0 && fromHistoryOrderInfo[0].total == null) && (toHistoryOrderInfo && toHistoryOrderInfo.length > 0 && toHistoryOrderInfo[0].total == null)) ? true : false;\n    return (\n        <div>\n            <div className=\"openpositions\" style={{ margin: '20px 0px' }}>\n                <span className=\"p-text\">Closed Positions</span>\n                <span className=\"icon-style\" onClick={toggle2}>\n                    {!isOpen2 ?\n                        <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n                        :\n                        <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\n                    }\n                </span>\n            </div>\n            <div>\n                <Collapse isOpen={isOpen2}>\n                    <Row>\n                        {/* {Data.tablePage.items.map((item, index) =>\n                            <Col md={6} key={index}>\n                                <div className=\"card\">\n                                    <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\n                                    </div>\n                                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                        <table className=\"table\">\n                                            <tbody>\n                                                <tr><td>{item.closed} </td>\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\n                                                </tr>\n                                                <tr><td>{item.commission} </td>\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\n                                                </tr>\n                                                <tr><td>{item.swap} </td>\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\n                                                </tr>\n                                                <tr><td>{item.total} </td>\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                    </div>\n                                </div>\n                            </Col>\n                        )} */}\n                        {/* {(allHistoryRecord && allHistoryRecord.length>0) && allHistoryRecord.map((item, index) =>\n                            <Fragment>\n\n                            <Col md={6} key={index}>\n                                <div className=\"card\">\n                                    <div className=\"header\">\n                                        <h5 className={item.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{item.account.login}</h5>\n                                        <h6 className={'colorDarkBlue'} style={{fontSize:10}}>({item.account.alias})</h6>\n                                    </div>\n                                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                        <table className=\"table\">\n                                            <tbody>\n                                                <tr><td>Closed P/L </td>\n                                                    <td className=\"td-actions text-right\">$ {item.profit}</td>\n                                                </tr>\n                                                <tr><td>Commission </td>\n                                                    <td className=\"td-actions text-right\">$ {item.commission}</td>\n                                                </tr>\n                                                <tr><td>Swap </td>\n                                                    <td className=\"td-actions text-right\">$ {item.swap}</td>\n                                                </tr>\n                                                <tr><td>Total </td>\n                                                    <td className=\"td-actions text-right\">$ {item.total}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                    </div>\n                                </div>\n                            </Col>\n                            </Fragment>\n                        )}\n                        {(allHistoryRecord && allHistoryRecord.length>0) && \n                            <Row>\n                                <Col md={12}>\n                                    <div>\n                                        <div className=\"total-box\">\n                                            <span className=\"text\">Sum of closed positions</span>\n                                            <span className=\"text\" style={{ float: 'right' }}>$ {sumOfTotal}</span>\n                                        </div>\n                                    </div>\n                                </Col>\n                            </Row>\n                        } */}\n                        {noRecord ? (\n                            <div className=\"text-center\">\n                                No Record Found!\n                            </div>) :\n\n                            <Fragment>\n\n                                {(fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0 && fromHistoryOrderInfo[0].total != null) ? (\n                                    <Col md={6}>\n                                        <div className=\"card\">\n                                            <div className=\"header\">\n                                                <h5 className={allHistoryRecord.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{allHistoryRecord.accountFromInfo[0].login}</h5>\n                                                <h6 className={'colorDarkBlue'} style={{ fontSize: 10 }}>({allHistoryRecord.accountFromInfo[0].alias})</h6>\n                                            </div>\n                                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                                <table className=\"table\">\n                                                    <tbody>\n                                                        <tr>\n                                                            <td className=\"symbolStyle removeBorder\">{fromSymbols}</td>\n                                                            {/* <td>{fromSymbols}</td> */}\n                                                            {/* <td className=\"td-actions text-right\">$ {fromHistoryOrderInfo[0].profit}</td> */}\n                                                        </tr>\n                                                        <tr><td>Closed P/L </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                <NumberFormat value={fromHistoryOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                                {/* {fromHistoryOrderInfo[0].profit} */}\n                                                            </td>\n                                                        </tr>\n                                                        <tr><td>Commission </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                {/* {fromHistoryOrderInfo[0].commission} */}\n                                                                <NumberFormat value={fromHistoryOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                            </td>\n                                                        </tr>\n                                                        <tr><td>Swap </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                <NumberFormat value={fromHistoryOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                                {/* {fromHistoryOrderInfo[0].swap} */}\n                                                            </td>\n                                                        </tr>\n                                                        <tr><td>Total </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                <NumberFormat value={fromHistoryOrderInfo[0].total} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                                {/* {fromHistoryOrderInfo[0].total} */}\n                                                            </td>\n                                                        </tr>\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                            </div>\n                                        </div>\n                                    </Col>\n                                ) : (\n                                        <Col md={6}>\n                                            <div className=\"card noRecordCol\"> No Record Found</div>\n                                        </Col>\n                                    )}\n                                {(toHistoryOrderInfo && toHistoryOrderInfo.length > 0 && toHistoryOrderInfo[0].total != null) ? (\n                                    <Col md={6}>\n                                        <div className=\"card\">\n                                            <div className=\"header\">\n                                                <h5 className={allHistoryRecord.id == '1' ? 'acntText color2' : 'acntText color2'}>{allHistoryRecord.accountToInfo[0].login}</h5>\n                                                <h6 className={'color2'} style={{ fontSize: 10 }}>({allHistoryRecord.accountToInfo[0].alias})</h6>\n                                            </div>\n                                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                                <table className=\"table\">\n                                                    <tbody>\n                                                        <tr>\n                                                            <span className=\"symbolStyle\">{toSymbols}</span>\n\n                                                            {/* <td>{toSymbols}</td> */}\n                                                            {/* <td className=\"td-actions text-right\">$ {fromHistoryOrderInfo[0].profit}</td> */}\n                                                        </tr>\n                                                        <tr><td>Closed P/L </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                <NumberFormat value={toHistoryOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                                {/* {toHistoryOrderInfo[0].profit} */}\n                                                            </td>\n                                                        </tr>\n                                                        <tr><td>Commission </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                {/* {toHistoryOrderInfo[0].commission} */}\n                                                                <NumberFormat value={toHistoryOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                            </td>\n                                                        </tr>\n                                                        <tr><td>Swap </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                {/* {toHistoryOrderInfo[0].swap} */}\n\n\n                                                                {\n                                                                    <NumberFormat value={(toHistoryOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                                                    // toOpenOrderInfo[0].swap\n                                                                }\n                                                            </td>\n                                                        </tr>\n                                                        <tr><td>Total </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                {/* {toHistoryOrderInfo[0].total} */}\n                                                                <NumberFormat value={toHistoryOrderInfo[0].total} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                            </td>\n                                                        </tr>\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                            </div>\n                                        </div>\n                                    </Col>\n                                ) : (\n                                        <Col md={6}>\n                                            <div className=\"card noRecordCol\"> No Record Found</div>\n                                        </Col>\n                                    )\n\n                                }\n                                {(sumOfTotal != 0) &&\n                                    <Row>\n                                        <Col md={12} style={{ marginBottom: 20 }}>\n                                            <div>\n                                                <div className=\"total-box\">\n                                                    <span className=\"text\">Sum of closed positions</span>\n                                                    <span className=\"text\" style={{ float: 'right' }}>$ {' '}\n                                                        <NumberFormat value={sumOfTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                        {/* {sumOfTotal} */}\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        </Col>\n                                    </Row>\n                                }\n\n\n\n\n\n                            </Fragment>\n                        }\n                    </Row>\n                </Collapse>\n                {allHistoryRecord.commission_acount_id !== 0 && allHistoryRecord.commission_acount_id !== undefined &&\n                    <Col md={12}>\n\n                        <div className=\"card \">\n                            <div className=\"header ptheader\">\n                                <h4 className=\"text-center\"><b>Commission</b></h4>\n                                <div className=\"row\">\n                                    <div className=\"col-md-12 text-center\">\n\n                                        <h5 className={allHistoryRecord.id == '1' ? 'acntText color2' : 'acntText acadjust color2'}>{allHistoryRecord.accountCommissionInfo !== undefined && allHistoryRecord.accountCommissionInfo[0].login} <span>({allHistoryRecord.accountCommissionInfo !== undefined && allHistoryRecord.accountCommissionInfo[0].alias})</span></h5>\n\n\n                                    </div>\n\n\n                                    <div className=\"col-md-12 total text-center\">\n\n\n                                        <tr>\n                                            <td className=\"td-actions total_comm text-right\">\n\n                                                Total : $ {' '}\n                                                {/* {toHistoryOrderInfo[0].total} */}\n                                                <NumberFormat value={allHistoryRecord.history_info} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                            </td>\n                                        </tr>\n\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Col>}\n            </div>\n        </div >\n\n    );\n}\n\nexport default Closeposition;\n","const Data = {\n \n  tablePage: {\n    items: [\n      {id: 1,lot:'Buy 10 Lot', closed: 'Closed P/L', commission: 'Commission', swap: 'Swap', total: 'Total', price:'$ 1110',textA: 'Account A'},\n      {id: 2, lot:'Sell 10 Lot', closed: 'Closed P/L', commission: 'Commission', swap: 'Swap', total: 'Total', price:'$ 1111', textA: 'Account B'},\n    ]\n  },\n  dashBoardPage: {\n    items: [\n      {id: 1, title: 'Balance', textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 2, title: 'Equity',textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 3, title: 'Margin', textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 4, title: 'Free Margin', textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 5, title: 'Margin %', textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 5, title: 'Floating P/L', textA: 'Account A', textB: 'Account B',price:'$ 400'}\n    ],\n  }\n};\n\nexport default Data;\n","import React, { useState, Fragment } from 'react';\nimport { Collapse } from 'reactstrap';\nimport { Row, Col } from \"react-bootstrap\";\nimport NumberFormat from 'react-number-format';\n\nimport Data from './Data';\n\nexport default function Openposition(props) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n  const { allOpenRecord, fromOpenOrderInfo, toOpenOrderInfo, } = props;\n\n  // const sumOfTotal = allOpenRecord.reduce((current, data) => {\n  //     return (Math.floor(data.commission + data.swap + data.profit+ current))\n  //     // return (data.profit + current);\n  // }, 0);\n\n  let fromsum = 0;\n  let tosum = 0;\n  let fromSymbols = '';\n  let toSymbols = '';\n  if (allOpenRecord && Object.entries(allOpenRecord).length > 0) {\n    fromSymbols = JSON.parse(allOpenRecord.from_symbols);\n    fromSymbols = (fromSymbols).map(data => data).join(', ');\n    toSymbols = JSON.parse(allOpenRecord.to_symbols);\n    toSymbols = (toSymbols).map(data => data).join(', ')\n  }\n  // if(fromOpenOrderInfo && fromOpenOrderInfo.length>0){\n  //   fromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\n  // }\n  // if(toOpenOrderInfo && toOpenOrderInfo.length>0){\n  //   tosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n  // }\n  if (fromOpenOrderInfo && fromOpenOrderInfo.length > 0) {\n    // if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\n    //   fromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\n    // }else{\n    fromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\n    // }\n  }\n  if (toOpenOrderInfo && toOpenOrderInfo.length > 0) {\n    // if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\n    //   tosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap);\n    // }else{\n    tosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n    // }\n    // opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n  }\n\n  let sumOfTotal = tosum + fromsum;\n  let noRecord = ((fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total == null) && (toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total == null)) ? true : false;\n\n  return (\n    <div>\n      <div className=\"openpositions\" style={{ margin: '20px 0px' }}>\n        <span className=\"p-text\">Open Positions</span>\n        <span className=\"icon-style\" onClick={toggle}>\n          {!isOpen ?\n            <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n            :\n            <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\n          }\n        </span>\n      </div>\n      \n      <div>\n        <Collapse isOpen={isOpen}>\n          <Row>\n\n\n\n            {/* {Data.tablePage.items.map((item, index) =>\n                  <Col md={6} key={index}>\n                    <div className=\"card\">\n                      <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\n                      </div>\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                        <table className=\"table\">\n                          <tbody>\n                            <tr><td>{item.lot} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.commission} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.swap} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.total} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                      </div>\n                    </div>\n                  </Col>\n                )} */}\n\n            {/* {(allOpenRecord && allOpenRecord.length>0) && allOpenRecord.map((item, index) =>\n                    \n                    <Col md={6} key={index}>\n                            <div className=\"card\">\n                            <div className=\"header\">\n                              <h5 className={item.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{item.account.login}</h5>\n                              <h6 style={{fontSize:10}} className={'colorDarkBlue'}>({item.account.alias})</h6>\n                            </div>\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                <table className=\"table\">\n                                <tbody>\n                                    <tr>\n                                        <td>\n                                            {item.order_type ===0 ? 'BUY ' : 'SELL ' } \n                                            {item.lots} {(item.lots>1) ? 'Lots':'Lot'}\n                                        </td>\n                                        <td className=\"td-actions text-right\"> {''}</td>\n                                    </tr>\n                                    <tr><td>Floating P/L </td>\n                                        <td className=\"td-actions text-right\">$ {item.profit}</td>\n                                    </tr>\n                                    <tr><td>Commission </td>\n                                        <td className=\"td-actions text-right\">$ {item.commission}</td>\n                                    </tr>\n                                    <tr><td>Swap </td>\n                                        <td className=\"td-actions text-right\">$ {item.swap}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Total </td>\n                                        <td className=\"td-actions text-right\">\n                                          $ {Math.floor(item.commission + item.swap + item.profit)}\n                                        </td>\n                                    </tr>\n                                </tbody>\n                                </table>\n                            </div>\n                            </div>\n                            </div>\n                        </Col>\n                )} */}\n            {/* {(allOpenRecord && allOpenRecord.length>0) &&\n                    <Row>\n                        <Col md={12}>\n                            <div>\n                            <div className=\"total-box\">\n                                <span className=\"text\">Sum of open positions</span>\n                                <span className=\"text\" style={{ float: 'right' }}>$ {sumOfTotal}</span>\n                            </div>\n                            </div>\n                        </Col>\n                    </Row>\n                } */}\n            {(noRecord) ?\n              <div className=\"text-center\">\n                No Record Found!\n                    </div>\n              :\n              <Fragment>\n                {(fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total !== null && (fromOpenOrderInfo && allOpenRecord.swapFrominfo)) ?\n\n                  <Col md={6}>\n                    <div className=\"card\">\n                      <div className=\"header\">\n                        <h5 className={allOpenRecord.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{allOpenRecord.accountFromInfo[0].login}</h5>\n                        <h6 style={{ fontSize: 10 }} className={'colorDarkBlue'}>({allOpenRecord.accountFromInfo[0].alias})</h6>\n                      </div>\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                        <table className=\"table\">\n                          <tbody>\n                            <tr>\n                              <span className=\"symbolStyle \">{fromSymbols}</span>\n                            </tr>\n                            {/* Buy 10 Lot  */}\n                            <tr>\n                              <td>\n                                {fromOpenOrderInfo[0].order_type == 0 ? 'BUY ' : 'SELL '}\n                                \n                                {fromOpenOrderInfo[0].lots} {(fromOpenOrderInfo[0].lots > 1) ? 'Lots' : 'Lot'}\n                              </td>\n                              <td className=\"td-actions text-right\"> {''}</td>\n                            </tr>\n                            {/* <tr><td>{(fromOpenOrderInfo[0].lots>1) ? 'Lots':'Lot'}</td>\n                                        <td className=\"td-actions text-right\">{fromOpenOrderInfo[0].lots}</td>\n                                    </tr> */}\n                            <tr><td>Floating P/L </td>\n                              <td className=\"td-actions text-right\">$ {' '}\n                                {/* {fromOpenOrderInfo[0].profit} */}\n                                <NumberFormat value={fromOpenOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                              </td>\n                            </tr>\n                            <tr><td>Commission </td>\n                              <td className=\"td-actions text-right\">$ {' '}\n                                {/* {fromOpenOrderInfo[0].commission} */}\n                                <NumberFormat value={fromOpenOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                              </td>\n                            </tr>\n                            <tr><td>Swap </td>\n                              <td className=\"td-actions text-right\">$ {' '}\n                                {/* {fromOpenOrderInfo[0].swap} */}\n                                {/* {allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length > 0 ?\n                                  <NumberFormat value={allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                  // (allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].swap) \n                                  : */}\n                                  <NumberFormat value={fromOpenOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                  {/* // fromOpenOrderInfo[0].swap */}\n                                {/* } */}\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>Total </td>\n                              <td className=\"td-actions text-right\">$ {' '}\n                                {/* $ {Math.floor(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)} */}\n                                {/* {allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length > 0 ?\n                                  <NumberFormat value={(fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} /> */}\n                                  {/* // Math.floor(fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap) \n                                  // : */}\n                                  <NumberFormat value={(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                  {/* //  Math.floor(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)\n                                // } */}\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                      </div>\n                    </div>\n                  </Col>\n                  :\n                  <Col md={6}>\n                    <div className=\"card noRecordCol\"> No Record Found</div>\n                  </Col>\n                }\n\n                {(toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total !== null && (toOpenOrderInfo && allOpenRecord.swapToinfo)) ?\n\n                  <Col md={6}>\n                    <div className=\"card\">\n                      <div className=\"header\">\n                        <h5 className={allOpenRecord.id == '1' ? 'acntText color2' : 'acntText color2'}>{allOpenRecord.accountToInfo[0].login}</h5>\n                        <h6 style={{ fontSize: 10 }} className={'color2'}>({allOpenRecord.accountToInfo[0].alias})</h6>\n                      </div>\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                        <table className=\"table\">\n                          <tbody>\n                            {/* Buy 10 Lot  */}\n                            <tr>\n                              <span className=\"symbolStyle\">{toSymbols}</span>\n                            </tr>\n                            <tr>\n                              <td>\n                                {toOpenOrderInfo[0].order_type == 0 ? 'BUY ' : 'SELL '}\n                                {toOpenOrderInfo[0].lots} {(toOpenOrderInfo[0].lots > 1) ? 'Lots' : 'Lot'}\n                              </td>\n                              <td className=\"td-actions text-right\"> {''}</td>\n                            </tr>\n                            {/* <tr><td>{(fromOpenOrderInfo[0].lots>1) ? 'Lots':'Lot'}</td>\n                                        <td className=\"td-actions text-right\">{fromOpenOrderInfo[0].lots}</td>\n                                    </tr> */}\n                            <tr><td>Floating P/L </td>\n                              <td className=\"td-actions text-right\">$ {' '}\n                                {/* {toOpenOrderInfo[0].profit} */}\n                                <NumberFormat value={toOpenOrderInfo[0].profit !== null ? toOpenOrderInfo[0].profit : 0} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                              </td>\n                            </tr>\n                            <tr><td>Commission </td>\n                              <td className=\"td-actions text-right\">$ {' '}\n                                {/* {toOpenOrderInfo[0].commission} */}\n                                <NumberFormat value={toOpenOrderInfo[0].commission !== null ? toOpenOrderInfo[0].commission : 0} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                              </td>\n                            </tr>\n                            <tr><td>Swap </td>\n                              <td className=\"td-actions text-right\">$ {' '}\n                                {/* {toOpenOrderInfo[0].swap} */}\n                                {/* {allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length > 0 ?\n                                  // (allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].swap) \n                                  <NumberFormat value={(allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                  : */}\n                                  <NumberFormat value={(toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                  {/* // toOpenOrderInfo[0].swap\n                                // } */}\n                              </td>\n\n                            </tr>\n                            <tr>\n                              <td>Total </td>\n                              <td className=\"td-actions text-right\"> $ {' '}\n                                {/* {allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length > 0 ?\n                                  //  Math.floor(toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap)\n                                  <NumberFormat value={(toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                  : */}\n                                  <NumberFormat value={(toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n{/* \n                                  //  Math.floor(toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit)\n                                } */}\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                      </div>\n                    </div>\n                  </Col>\n                  :\n                  <Col md={6}>\n                    <div className=\"card noRecordCol\"> No Record Found</div>\n                  </Col>\n                }\n                {\n                  sumOfTotal != 0 &&\n                  <Row>\n                    <Col md={12}>\n                      <div>\n                        <div className=\"total-box\">\n                          <span className=\"text\">Sum of open positions</span>\n                          <span className=\"text\" style={{ float: 'right' }}>$ {' '}\n                            <NumberFormat value={sumOfTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                            {/* {sumOfTotal} */}\n                          </span>\n                        </div>\n                      </div>\n                    </Col>\n                  </Row>\n                }\n              </Fragment>\n            }\n          </Row>\n        </Collapse>\n      </div>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport { Collapse } from 'reactstrap';\nimport Select from 'react-select';\nimport { Grid, Row, Col } from \"react-bootstrap\";\n// import Data from './Data';\nimport NumberFormat from 'react-number-format';\nimport Closeposition from 'views/Closeposition';\nimport Openposition from 'views/Openposition';\n\n// import config from '../constant/config.js';\nimport config from '../constant/config.js';\nconst axios = require('axios');\n\n// import Card from \"components/Card/Card.jsx\";\n// import { thArray, tdArray } from \"variables/Variables.jsx\";\n\nclass TableList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      // isOpen: false,\n      allSymbols:[],\n      selectedOption:null,\n      allHistoryRecord:[],\n      allOpenRecord:[],\n      fromHistoryOrderInfo:[],\n      toHistoryOrderInfo:[],\n      commissionHistoryOrderInfo:[],\n      fromOpenOrderInfo:[],\n      toOpenOrderInfo:[],\n      filterlist:[],\n      allSymbols:[],\n      symbolsObj:[]\n    }\n\n  }\n  // toggle = () => {\n  //   this.setState({ isOpen: !this.state.isOpen })\n  // }\n  // componentWillMount() {\n  //   let self = this;\n      // axios.get(config.baseurl + '/accounts/fetchAllSymbol')\n      // .then(function (response) {\n      //   if (response.status == 200) {\n      //     self.setState({ allSymbols: response.data.rows })\n      //   }\n      // })\n\n      // axios.get(config.baseurl + '/filter/fetchfilterdata')\n      // .then(function (response) {\n      //   if (response.status == 200) {\n      //     self.setState({ filterlist: response.data.rows })\n      //   }\n      // })\n\n      // axios.get(config.baseurl + '/filter/fetchActivefilterdata')\n      // .then(function (response) {\n      //   if (response.status == 200) {\n      //     if(response.data.rows && response.data.rows.length>0){\n      //       // let symbolsObj = (response.data.rows[0].symbols).map(data => { return ({value:data, label:data})})\n      //         self.setState({ filterlist: response.data.rows, allSymbols: response.data.rows[0].symbols, \n      //         // selectedOption:symbolsObj\n      //        })\n      //     }\n      //   }\n      // });\n  // }\n\n  componentDidMount(){\n    let self = this;\n    axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\n    .then(function (response) {\n      // console.log(response.data, 'response.data his')\n      if (response.status == 200) {\n        // self.setState({ allHistoryRecord: response.data.rows })\n        self.setState({ \n          allHistoryRecord: response.data.rows ,\n          fromHistoryOrderInfo:response.data.fromHistoryOrderInfo,\n          toHistoryOrderInfo:response.data.toHistoryOrderInfo,\n          commissionHistoryOrderInfo:response.data.commissionHistoryOrderInfo\n        })\n      }\n    })\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\n    axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\n    .then(function (response) {\n      if (response.status == 200) {\n\n        // self.setState({ allOpenRecord: response.data.rows })\n        self.setState({ \n          allOpenRecord: response.data.rows ,\n          fromOpenOrderInfo:response.data.fromOpenOrderInfo,\n          toOpenOrderInfo:response.data.toOpenOrderInfo\n        })\n      }\n    })\n  }\n\n  fetchDataAccordingSymbols = (symbol) => {\n    let self = this;\n    let {startdateFrom, startdateTo,enddateFrom, enddateTo, to_account_id, from_account_id} = this.state.filterlist[0];\n    \n    let postData =  {\"to_account_id\":to_account_id, \"from_account_id\":from_account_id, \"startdateFrom\":startdateFrom, \"startdateTo\":startdateTo,\"enddateFrom\": enddateFrom, \"enddateTo\":enddateTo, \"symbol\":symbol}\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolHistory', {'symbol':symbol})\n    \n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolHistory', postData)\n    axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\n    .then(function (response) {\n      // console.log(response.data, 'response.data his')\n      if (response.status == 200) {\n        // self.setState({ allHistoryRecord: response.data.rows })\n        self.setState({ \n          allHistoryRecord: response.data.rows ,\n          fromHistoryOrderInfo:response.data.fromHistoryOrderInfo,\n          toHistoryOrderInfo:response.data.toHistoryOrderInfo,\n          commissionHistoryOrderInfo:response.data.commissionHistoryOrderInfo\n\n        })\n      }\n    })\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\n    axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\n    .then(function (response) {\n      if (response.status == 200) {\n      // console.log(response.data, 'response.data open')\n\n        // self.setState({ allOpenRecord: response.data.rows })\n        self.setState({ \n          allOpenRecord: response.data.rows ,\n          fromOpenOrderInfo:response.data.fromOpenOrderInfo,\n          toOpenOrderInfo:response.data.toOpenOrderInfo\n        })\n      }\n    })\n  }\n\n  handleChange = selectedOption => {\n    this.setState({ selectedOption });\n    this.fetchDataAccordingSymbols(selectedOption.value);\n  };\n\n  renderSymbols = () => {\n    const { selectedOption, allSymbols } = this.state;\n    // let options = allSymbols.map(data => {\n    //   return {value:data.name, label:data.name};\n    // })\n    let options = allSymbols.map(data => {\n      return {value:data, label:data};\n    });\n   \n    return(\n      <Select\n        placeholder=\"Select Symbol...\"\n        className=\"S-text\"\n        // isMulti\n        value={selectedOption}\n        onChange={this.handleChange}\n        options={options}\n      />\n      )\n  }\n\n  render() {\n    const {allHistoryRecord, allOpenRecord, selectedOption, toOpenOrderInfo, fromOpenOrderInfo,fromHistoryOrderInfo,commissionHistoryOrderInfo ,toHistoryOrderInfo} = this.state;\n  //   const sumOfOpenTotal = allOpenRecord.reduce((current, data) => {\n  //     return (Math.floor(data.commission + data.swap + data.profit+ current));\n  // }, 0);\n\n  //   const sumOfHistoryTotal = allHistoryRecord.reduce((current, data) => {\n  //     return (data.profit + current);\n  // }, 0);\n    let uniqueSymbols=\"\";\n    if(allOpenRecord && Object.entries(allOpenRecord).length>0){\n      let fromSymbols = JSON.parse(allOpenRecord.from_symbols);\n      // fromSymbols = (fromSymbols).map(data => data).join(', ');\n      let toSymbols = JSON.parse(allOpenRecord.to_symbols);\n      let combineSymbols = fromSymbols.concat(toSymbols);\n      uniqueSymbols = combineSymbols.filter((item, i, ar) => ar.indexOf(item) === i);\n      uniqueSymbols = (uniqueSymbols).map(data => data).join(', ')\n    }\n    let fromsum=0; \n    let tosum=0;\n    // if(fromHistoryOrderInfo && commissionHistoryOrderInfo && fromHistoryOrderInfo.length>0){\n      if(fromHistoryOrderInfo && fromHistoryOrderInfo.length>0){\n      fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\n    }\n   \n    if(toHistoryOrderInfo && toHistoryOrderInfo.length>0){\n      tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\n    }\n\n    let sumOfHistoryTotal = tosum + fromsum;\n\n    let openfromsum=0; \n    let opentosum=0;\n    if((fromOpenOrderInfo && fromOpenOrderInfo.length>0 && fromOpenOrderInfo[0].total!=null) ){\n      // if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\n      //   openfromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\n      // }else{\n       openfromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\n      \n    }\n    if((toOpenOrderInfo && toOpenOrderInfo.length>0  && toOpenOrderInfo[0].total!=null) ){\n      // if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\n      //   opentosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit+ toOpenOrderInfo[0].swap);\n      // }\n\n      // else{\n      //   opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n      // }\n      opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n    }\n\n    let sumOfOpenTotal = opentosum + openfromsum;\n\n  //   console.log(opentosum, 'opentosum')\n  //   console.log(openfromsum, 'openfromsum')\n  //  console.log(sumOfHistoryTotal, \"sumOfHistoryTotal------\");\n  //  console.log(sumOfOpenTotal, \"sumOfOpenTotal-----\");\n  //  console.log(allOpenRecord, 'allOpenRecord')\n   \n\n\n    return (\n      <div className=\"content col-md-12 col-sm-6\">\n        <Grid fluid className=\"symbol-box\">\n          {/* <div className=\"symbol-box\"> */}\n          {/* <span className=\"S-text\">EURUSD</span> */}\n          {/* <div style={{ borderBottom: '2px solid grey' }}>\n            {this.renderSymbols()}\n\n          </div> */}\n          {/* <div style={{ margin: '20px 0px' }}>\n            <span className=\"p-text\">Open Positions</span>\n            <span className=\"icon-style\" onClick={this.toggle}>\n              <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\n            </span>\n          </div>\n          <div>\n\n            <Collapse isOpen={this.state.isOpen}>\n              <Row>\n                {Data.tablePage.items.map((item, index) =>\n                  <Col md={6} key={index}>\n                    <div className=\"card\">\n                      <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\n                      </div>\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                        <table className=\"table\">\n                          <tbody>\n                            <tr><td>{item.lot} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.commission} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.swap} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.total} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                      </div>\n                    </div>\n                  </Col>\n                )}\n                <Row>\n                  <Col md={12}>\n                    <div>\n                      <div className=\"total-box\">\n                        <span className=\"text\">Sum of open position</span>\n                        <span className=\"text\" style={{ float: 'right' }}>$111111</span>\n                      </div>\n                    </div>\n                  </Col>\n                </Row>\n              </Row>\n            </Collapse>\n          </div> */}\n          {/* closed position */}\n          <Openposition \n            allOpenRecord={allOpenRecord}\n            toOpenOrderInfo={toOpenOrderInfo}\n            fromOpenOrderInfo={fromOpenOrderInfo}\n            />\n          <Closeposition \n            allHistoryRecord={allHistoryRecord}\n            fromHistoryOrderInfo={fromHistoryOrderInfo}\n            commissionHistoryOrderInfo={commissionHistoryOrderInfo}\n            toHistoryOrderInfo={toHistoryOrderInfo}\n            />\n          <Row>\n            \n            <Col md={12} sm={6}>\n              <div className={sumOfHistoryTotal + sumOfOpenTotal >= 0 ? \"summary-box\" : \"summary-box-red\"}>\n                \n                \n                {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\n                {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\n                <span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\n                \n                <Col md={12} sm={12}>\n                  <div className=\"summary-text text-center\" style={{fontWeight:600,color:\"#797979\"}}>Summary For ({uniqueSymbols}) {allHistoryRecord.history_info !==0 && (<span> + Commission</span>)} </div>\n                </Col>\n                <Col md={12} sm={12}>\n                  <div className=\"text-center\" style={{fontWeight:'bold',fontSize:\"18px\"}}>$ {' '}\n                  <NumberFormat value={allHistoryRecord.history_info !== undefined ?  sumOfHistoryTotal + sumOfOpenTotal + allHistoryRecord.history_info : sumOfHistoryTotal + sumOfOpenTotal } displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                  \n                  \n                  {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\n                  \n                  </div>\n                </Col>\n                \n                <div className=\"clearfix\"></div>\n              </div>\n            </Col>\n          </Row>\n          {/* </div> */}\n        </Grid>\n      </div>\n    );\n  }\n\n}\n\nexport default TableList;","import React, { Component } from 'react';\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\n// import SweetAlert from 'react-bootstrap-sweetalert';\nimport swal from 'sweetalert';\nimport config from '../constant/config.js';\nconst axios = require('axios');\n\nlet intervalSet;\nlet timerWaitInterval;\nlet timerWait = 100;\nclass Innerlogin extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loginForm: false,\n            setShow: false,\n            show: true,\n            login: '',\n            password: '',\n            broker: '',\n            alias: '',\n            alert: null,\n            persons: [],\n            shwPwd: false,\n            shwPwd: false,\n            shwLogin: false,\n            shwbroker: false,\n            accountlist: [],\n            editForm: false,\n            detailForm: false,\n            editData: [],\n            edituser: '',\n            editserver: '',\n            editalias: '',\n            editstatus: '',\n            id: '',\n            // tryAgainConnection: false,\n            currentAddLogin: null,\n            currentAddBroker: null,\n            currentAddAlias: null,\n            timerShow: false,\n            closebtn: true\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onUpdate = this.onUpdate.bind(this);\n\n    }\n    // delete alert\n    // deleteThisGoal() {\n    //     const getAlert = () => (\n    //         <SweetAlert\n    //             success\n    //             title=\"Woot!\"\n    //             onConfirm={() => this.hideAlert()}\n    //         >\n    //             Hello world!\n    //       </SweetAlert>\n    //     );\n\n    //     this.setState({\n    //         alert: getAlert()\n    //     });\n    // }\n    fectheAllAccount() {\n        let self = this;\n        axios.get(config.baseurl + '/users/allAccounts')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ accountlist: response.data.rows })\n                }\n            })\n        // console.log(response.status,\"accountlist\");\n    }\n    onChange(e) {\n\n        this.setState({ error: '' })\n        if (e.target.name === 'login') {\n            const re = /^[0-9\\b]+$/;\n            if (e.target.value === '' || re.test(e.target.value)) {\n                this.setState({ [e.target.name]: e.target.value })\n            }\n            else if (e.target.value !== re) {\n                this.setState({ error: 'alphabet' })\n            }\n        }\n        else {\n\n            this.setState({ [e.target.name]: e.target.value.trim() })\n        }\n\n    }\n\n    checkUserConnected = (login, broker) => {\n        let self = this;\n        axios.post(config.baseurl + '/users/checkUserConnected', { login: login, broker: broker })\n            .then(function (response) {\n\n                if (response.status == 200) {\n                    if (response.data.connected) {\n                        self.setState({ currentAddLogin: null, currentAddBroker: null, currentAddAlias: null });\n                        clearInterval(intervalSet);\n                        clearInterval(timerWaitInterval);\n                        self.setState({ timerShow: false });\n\n                        timerWait = 100\n                        // self.setState({ tryAgainConnection: false });\n                        self.setState({ loginForm: false })\n                        self.handleClose();\n                        self.fectheAllAccount()\n                        // swal({\n                        //     text: \"Connected\",\n                        //     timer: 2000,\n                        //     button: false\n                        // })\n                    }\n                } else {\n\n                }\n            })\n    }\n\n    setIntervalCustom = () => {\n        let self = this;\n        var name = \"Authorization Process Failed\";\n        var content = document.createElement('div');\n        content.innerHTML = ' <strong>' + name + '</strong>';\n\n\n        timerWaitInterval = setInterval(function () {\n            timerWait--;\n            if (timerWait <= 0) {\n                self.setState({ currentAddLogin: null, currentAddBroker: null, currentAddAlias: null });\n                clearInterval(intervalSet);\n                clearInterval(timerWaitInterval);\n                self.setState({ timerShow: false });\n                self.setState({ loginForm: false })\n                self.setState({ closebtn: true })\n                timerWait = 100\n                swal({\n\n\n                    content: content,\n                    timer: 2000,\n                    button: false\n\n                })\n            }\n\n            else {\n                self.setState({ timerShow: true });\n\n            }\n        }, 1000);\n    }\n\n\n    onSubmit(e) {\n        e.preventDefault();\n        const userdetail = {\n            login: this.state.login,\n            password: this.state.password,\n            broker: this.state.broker,\n            alias: this.state.alias\n\n\n        }\n        if (this.state.login == '') {\n            this.setState({ error: 'login' })\n        }\n        else if (this.state.password == '') {\n            this.setState({ error: 'password' })\n        }\n        else if (this.state.broker == '') {\n            this.setState({ error: 'broker' })\n        } else {\n            this.setState({ error: '' })\n        }\n        if (this.state.login !== '' && this.state.password !== '' && this.state.broker !== '') {\n\n            // {\n            //     swal({\n            //         text: \"User Already Connected\",\n            //         timer: 2000,\n            //         button: false\n            //     })\n            // }\n            let self = this;\n            self.setState({ closebtn: false })\n            axios.post(config.baseurl + '/users/addUser', userdetail)\n                .then(function (response) {\n                    if (response.data.status === true) {\n                        self.setIntervalCustom();\n                        self.fectheAllAccount();\n                        self.setState({ currentAddLogin: userdetail.login, currentAddBroker: userdetail.broker, currentAddAlias: userdetail.alias });\n                        intervalSet = setInterval(function () {\n                            self.checkUserConnected(userdetail.login, userdetail.broker)\n                        }, 5000);\n\n                    }\n                    if (response.data.status == 202) {\n                        swal({\n                            text: \"User doesn't exist\",\n                            timer: 2000,\n                            button: false\n                        })\n\n                    }\n                    if (response.data.status == '500') {\n                        swal({\n                            text: \"User Already Connected!\",\n                            timer: 2000,\n                            button: false\n                        })\n                        self.setState({ closebtn: true })\n\n\n                    }\n                    else if (response.status == 201) {\n                        swal({\n                            title: \"Done!\",\n                            text: response.data,\n                            // icon: \"{response.status == 200 ? 'warning ':'success'}\",\n                            timer: 2000,\n                            button: false\n                        })\n                    }\n\n                })\n                .catch(function (error) {\n                    self.handleClose();\n                });\n\n\n\n            /////////////////// redirect to dashboard\n            // login(user).then(res => {\n            //     if (res) {\n            //         this.props.history.push(`\\profile`)\n            //     }\n            // })\n        }\n    }\n    onUpdate(e) {\n        e.preventDefault();\n        const userdetail = {\n            id: this.state.id,\n            user: this.state.edituser,\n            broker: this.state.editserver,\n            alias: this.state.editalias\n        }\n        let self = this;\n        axios.post(config.baseurl + '/users/updateuser', userdetail)\n            .then(function (response) {\n                if (response.status == 200) {\n                    // self.setState({ accountlist: response.data.rows })\n                    self.fectheAllAccount();\n                    self.handleCloseEdit();\n                }\n            })\n            .catch(function (error) {\n            });\n    }\n    // checkValidUser = ()=> {\n    //     console.log(this.state,'loginnnnnnnnnnnnnnnnnnnnnnnn')\n    //     const userdetail = {\n    //         login: this.state.login,\n    //         password: this.state.password,\n    //         broker: this.state.broker,\n    //         alias: this.state.alias\n    //     }\n    //     axios.get(config.baseurl + '/accounts/matchUser',userdetail)\n    //     .then(function (response) {\n\n    //         if (response.status == 200) {\n    //             // alert(response.data)\n    //             swal({\n    //                 title: \"Done!\",\n    //                 text: response.data,\n    //                 // icon: \"{response.status == 200 ? 'warning ':'success'}\",\n    //                 timer: 2000,\n    //                 button: false\n    //             })\n\n    //         }\n    //         // console.log(response);\n    //     })\n    //     .catch(function (error) {\n    //         console.log(error);\n    //     });\n    // }\n    toogle = () => {\n        this.setState({ loginForm: !this.state.loginForm, })\n        this.setState({ login: '', password: '', broker: '', alias: '' })\n    }\n\n    handleClose = () => {\n        this.setState({ loginForm: false })\n\n    }\n    handleCloseEdit = () => {\n        this.setState({ editForm: false })\n    }\n    handleCloseDetail = () => {\n        this.setState({ detailForm: false })\n    }\n    handleShow = () => {\n        this.setState({ setShow: true })\n    }\n\n    componentDidMount() {\n        this.fectheAllAccount();\n\n    }\n    createTr = () => {\n        return this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => {\n            return (\n                <tr key={index}>\n                    <th scope=\"row\">{index + 1}</th>\n                    <td>{item.login}</td>\n                    <td>{item.broker}</td>\n                    <td>{item.alias}</td>\n                    <td style={{ fontWeight: 600 }}>{item.launched == 1 ? 'Connected' : 'Disconnected'}</td>\n                    <td>\n                        <a href=\"\" onClick={(e) => this.viewFilter(e, item)}><i className=\"fa fa-eye facolor\" aria-hidden=\"true\"></i></a>\n                        <a href=\"\" onClick={(e) => this.editFilter(e, item)}><i className=\"fa fa-pencil-square-o facolor\" aria-hidden=\"true\"></i></a>\n                        {/* <a href=\"\" onClick={(e)=> this.deleteFilter(e,item)}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></a> */}\n                    </td>\n                </tr>\n            )\n        })\n    }\n    editFilter(e, data) {\n        e.preventDefault();\n        this.setState({ editForm: true, editData: data, id: data.id, edituser: data.login, editserver: data.broker, editalias: data.alias })\n    }\n    editAlias(e) {\n        this.setState({ editalias: e.target.value })\n    }\n    viewFilter(e, data) {\n        e.preventDefault();\n        this.setState({ detailForm: true, edituser: data.login, editserver: data.broker, editalias: data.alias, editstatus: data.status })\n    }\n    render() {\n\n        return (\n            <div className=\"content\">\n                <Grid fluid>\n                    <Row>\n                        <Col md={12} sm={6}>\n                            <div className=\"terminal-box\">\n                                <span className=\"terminal-text\">Terminal Accounts</span>\n                                {/* <div style={{ padding: '20px' }}>\n                                    <a\n                                        onClick={() => this.deleteThisGoal()}\n                                        className='btn btn-danger'\n                                    >\n                                        <i className=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete Goal\n                                     </a>\n                                    {this.state.alert}\n                                </div> */}\n                            </div>\n                            <button className=\"pull-right add-button\" onClick={this.toogle}>Add New</button>\n\n                            {this.state.loginForm &&\n                                <Modal show={this.state.show} onHide={this.state.closebtn ? this.handleClose : () => console.log('error')} >\n                                    {/* <Modal.Header closeButton>\n                                        <Modal.Title>Log In</Modal.Title>\n                                    </Modal.Header> */}\n                                    <Modal.Body>\n                                        <div className=\"form-box\">\n                                            <Modal.Header closeButton={this.state.closebtn ? true : false}>\n                                                <Modal.Title className=\"text-center\"><b>Log In</b></Modal.Title>\n                                            </Modal.Header>\n                                            <form style={{ marginTop: '20px' }} onSubmit={this.onSubmit}>\n                                                <label >User Name</label>\n                                                <input type='text'\n                                                    className=\"Itext labelSet \" placeholder=\"Enter Username\" name=\"login\" value={this.state.login} onChange={this.onChange} disabled={this.state.currentAddLogin ? true : false}\n                                                // onKeyUp={this.checkValidUser}\n                                                ></input>\n\n\n                                                {(this.state.error == \"login\") &&\n                                                    <span style={{ color: 'red', fontSize: '13px' }}>Please enter Username </span>\n                                                }\n\n                                                {(this.state.error == \"alphabet\") &&\n                                                    <span style={{ color: 'red', fontSize: '13px' }}>\"Invalid format. login should contain only digits.\"</span>\n                                                }\n                                                <br></br>\n                                                <label className=\"labeAdjust\">Password</label>\n                                                <input className=\"Itext labelSet\" placeholder=\"Password\" name=\"password\" type=\"password\" value={this.state.password} onChange={this.onChange} disabled={this.state.currentAddLogin ? true : false}></input>\n                                                {(this.state.error == \"password\") &&\n                                                    <span style={{ color: 'red', fontSize: '13px' }}>Please enter Password </span>\n                                                }\n                                                <br></br>\n                                                <label className=\"labeAdjust\">Server</label>\n                                                <input className=\"Itext labelSet\" name=\"broker\" placeholder=\"Server\" value={this.state.broker} onChange={this.onChange} disabled={this.state.currentAddBroker ? true : false}></input>\n                                                {(this.state.error == \"broker\") &&\n                                                    <span style={{ color: 'red', fontSize: '13px' }}>Please enter Server </span>\n                                                }\n                                                <br></br>\n                                                <label className=\"labeAdjust\">Alias</label>\n                                                <input className=\"Itext labelSet\" placeholder=\"Alias\" value={this.state.alias} onChange={this.onChange} name=\"alias\" disabled={this.state.currentAddAlias ? true : false}></input>\n                                                {this.state.timerShow &&\n                                                    <p>\n                                                        Connecting to server... {timerWait} seconds remains\n                                                </p>\n                                                }\n                                                <div className=\" topadjust clearfix\">\n                                                    {/* {this.state.tryAgainConnection === false ? */}\n                                                    {/* ( */}\n                                                    {this.state.timerShow == false &&\n\n                                                        <button type=\"submit\" className=\"save\" className={!this.state.login || !this.state.password || !this.state.broker ? \"loginButton\" : \"loginButton save2 save1\"}>Submit</button>}\n                                                    {/* ) */}\n                                                    {/* //     :\n                                                    //     (this.state.timerShow == false && <div ></div>)\n                                                    // } */}\n                                                </div>\n                                            </form>\n                                        </div>\n\n                                    </Modal.Body>\n                                    {/* <Modal.Footer>\n                                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                                            Close\n                                  </Button>\n                                        \n                                    </Modal.Footer> */}\n                                </Modal>\n\n                            }\n                        </Col>\n                    </Row>\n                    <div style={{ background: '#ffffff' }}>\n                        <Row>\n                            <Col md={12}>\n                                <div style={{ padding: '10px' }}>\n                                    <table className=\"table table-striped\">\n                                        <thead>\n                                            <tr>\n                                                <th scope=\"col\">Sr.No.</th>\n                                                <th scope=\"col\">User Name</th>\n                                                <th scope=\"col\">Server</th>\n                                                <th scope=\"col\">Alias</th>\n                                                <th scope=\"col\">Status</th>\n                                                <th scope=\"col\">Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {/* {this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => { */}\n                                            {/* // console.log(\"hhhhhhhhhhh\") */}\n                                            {this.createTr()}\n                                            {/* })} */}\n                                            {/* <tr>\n                                                <th scope=\"row\">2</th>\n                                                <td>Jacob</td>\n                                                <td>Thornton</td>\n                                                <td>5.1.2.9</td>\n                                                <td>Connected</td>\n                                            </tr>\n                                            <tr>\n                                                <th scope=\"row\">3</th>\n                                                <td>Larry</td>\n                                                <td>the Bird</td>\n                                                <td>ab@123</td>\n                                                <td>Connected</td>\n                                            </tr> */}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </Col>\n                            <div className=\"centerbtn\">\n                            </div>\n\n                        </Row>\n                    </div>\n\n                </Grid>\n\n                {this.state.editForm &&\n                    <Modal show={this.state.show} onHide={this.handleCloseEdit}>\n                        {/* <Modal.Header closeButton>\n                                        <Modal.Title>Log In</Modal.Title>\n                                    </Modal.Header> */}\n                        <Modal.Body>\n                            <div className=\"form-box\">\n                                <Modal.Header closeButton>\n                                    <Modal.Title className=\"text-center\"><b>Edit</b></Modal.Title>\n                                </Modal.Header>\n                                <form style={{ marginTop: '20px' }} onSubmit={this.onUpdate}>\n                                    <label>USER</label>\n                                    <input className=\"Itext\" disabled name=\"broker\" placeholder=\"Server\" value={this.state.edituser} ></input>\n\n                                    <label>Server</label>\n                                    <input className=\"Itext\" disabled name=\"broker\" placeholder=\"Server\" value={this.state.editserver} ></input>\n                                    <label>Alias</label>\n                                    <input className=\"Itext\" placeholder=\"Alias\" value={this.state.editalias} name=\"alias\" onChange={(e) => this.editAlias(e)}></input>\n                                    <div className=\"clearfix\">\n                                        <button type=\"submit\" className=\"save\">Update</button>\n                                    </div>\n                                </form>\n                            </div>\n\n                        </Modal.Body>\n                        {/* <Modal.Footer>\n                                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                                            Close\n                                  </Button>\n                                        \n                                    </Modal.Footer> */}\n                    </Modal>\n\n                }\n\n                {this.state.detailForm &&\n                    <Modal show={this.state.show} onHide={this.handleCloseDetail}>\n                        {/* <Modal.Header closeButton>\n                                        <Modal.Title>Log In</Modal.Title>\n                                    </Modal.Header> */}\n                        <Modal.Body>\n                            <div className=\"form-box\">\n                                <Modal.Header closeButton>\n                                    <Modal.Title className=\"text-center\"><b>Details</b></Modal.Title>\n                                </Modal.Header>\n                                <div className=\"detail_div\">\n                                    <table>\n                                        <tr>\n                                            <td><label>User Name</label></td>\n                                            <td><label>{this.state.edituser}</label></td>\n                                        </tr>\n                                        <tr>\n                                            <td><label>Server</label></td>\n                                            <td><label>{this.state.editserver}</label></td>\n                                        </tr>\n                                        <tr>\n                                            <td><label>Alias</label></td>\n                                            <td><label>{this.state.editalias}</label></td>\n                                        </tr>\n                                        <tr>\n                                            <td><label>Status</label></td>\n                                            <td><label>{this.state.editstatus == 1 ? 'Connected' : 'Disconnected'}</label></td>\n                                        </tr>\n                                    </table>\n                                </div>\n                            </div>\n\n                        </Modal.Body>\n                    </Modal>\n\n                }\n\n\n            </div >\n        );\n    }\n}\n\nexport default Innerlogin;","import React, { Component } from \"react\";\n// import ChartistGraph from \"react-chartist\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport TableList from '../views/TableList';\n// import { Card } from \"components/Card/Card.jsx\";\n// import { StatsCard } from \"components/StatsCard/StatsCard.jsx\";\n// import { Tasks } from \"components/Tasks/Tasks.jsx\";\nimport NumberFormat from 'react-number-format';\nimport ReactLoading from \"react-loading\";\nimport Data from './Data';\nimport Moment from 'react-moment';\n\n// import {\n//   dataPie,\n//   legendPie,\n//   dataSales,\n//   optionsSales,\n//   responsiveSales,\n//   legendSales,\n//   dataBar,\n//   optionsBar,\n//   responsiveBar,\n//   legendBar\n// } from \"variables/Variables.jsx\";\nimport config from '../constant/config.js';\nconst axios = require('axios');\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      details: [],\n      accountlist: [],\n      persons: [],\n      filterlist: [],\n      formData: [],\n      errorMassege: false,\n      error: '',\n      dateTime: '',\n      fromAccounts: '',\n      fromSymbol: '',\n      toAccounts: '',\n      toSymbol: '',\n      fromOpenOrderInfos: '',\n      toOpenOrderInfos: '',\n      total: '',\n      totalTo: '',\n      blockloader: true,\n      // allSymbols:[],\n      // symbolsObj:[]\n    }\n  }\n  createLegend(json) {\n    var legend = [];\n    for (var i = 0; i < json[\"names\"].length; i++) {\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\n      legend.push(<i className={type} key={i} />);\n      legend.push(\" \");\n      legend.push(json[\"names\"][i]);\n    }\n    return legend;\n  }\n\n  getAllAccounts = () => {\n    let self = this;\n    axios.get(config.baseurl + '/accounts/fetchAllAccounts')\n      .then(function (response) {\n        if (response.status == 200) {\n          self.setState({ accountlist: response.data.rows })\n        }\n      });\n  }\n\n  fetchActivefilterData = () => {\n    let self = this;\n    axios.get(config.baseurl + '/filter/fetchActivefilterdata')\n      .then(function (response) {\n        if (response.status == 200) {\n          self.setState({ filterlist: response.data.rows })\n          // console.log(response.data.rows.accountFromInfo,\"filterlist----------------------\");\n\n          if (self.state.filterlist.length == 0) {\n            self.setState({ errorMassege: true })\n          }\n        }\n      });\n  }\n\n  fetchAllOpenTrade = () => {\n    let self = this;\n    axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\n      .then(function (response) {\n        if (response.status == 200) {\n          self.setState({ dateTime: response.data.filteredInfoTime })\n          // console.log(self.state.dataOpenTrade.accountFromInfo,\"outyfjhkjh\");\n        }\n      });\n  }\n\n  fetchStatusData = () => {\n    let self = this;\n    let tottal = 0;\n    axios.get(config.baseurl + '/accounts/fetchStatusData')\n      .then(function (response) {\n        if (response.status == 200) {\n          self.setState({ fromAccounts: response.data.fromAccounts })\n          self.setState({ fromSymbol: response.data.fromSymbol })\n          // console.log(fromSymbol,\"fromSymbol\");\n          self.setState({ toAccounts: response.data.toAccounts })\n          self.setState({ toSymbol: response.data.toSymbol })\n          self.setState({ fromOpenOrderInfos: response.data.fromOpenOrderInfos[0] })\n          if (response.data.fromOpenOrderInfos.length > 0) {\n            self.setState({ blockloader: false })\n            if (response.data.fromOpenOrderInfos[0].order_type == 0) {\n              self.setState({ total: response.data.fromSymbol.contract_size * (response.data.fromOpenOrderInfos[0].lots) })\n            } else {\n              self.setState({ total: response.data.fromSymbol.contract_size * -(response.data.fromOpenOrderInfos[0].lots) })\n            }\n            console.log(response.data.fromSymbol.contract_size * -(response.data.fromOpenOrderInfos[0].lots), \"total\");\n            self.setState({ toOpenOrderInfos: response.data.toOpenOrderInfos[0] })\n          }\n          if (response.data.toOpenOrderInfos.length > 0) {\n            if (response.data.toOpenOrderInfos[0].order_type == 0) {\n              self.setState({ totalTo: response.data.toSymbol.contract_size * (response.data.toOpenOrderInfos[0].lots) })\n            } else {\n              self.setState({ totalTo: response.data.toSymbol.contract_size * -(response.data.toOpenOrderInfos[0].lots) })\n            }\n          }\n          // let Finaltotal = {t}\n          // console.log(self.state.tottal,\"totalTo\");\n\n          // console.log(self.state.fromOpenOrderInfos.lots,\"\");\n        }\n      });\n  }\n\n\n  componentWillMount() {\n    this.getAllAccounts();\n    this.fetchActivefilterData();\n    this.fetchAllOpenTrade();\n    this.fetchStatusData();\n    // axios.get(config.baseurl + '/filter/fetchfilterdata')\n    // .then(function (response) {\n    //   console.log(response.data,'hghghjghghj')\n    //   if (response.status == 200) {\n    //     // self.setState({ formData: response.data.rows })\n    //     // console.log(formData);\n\n    //     response.data.rows.map((item, index) => {\n    //       console.log(item,'item');\n    //         if (item.status==1){\n    //           self.setState({errorMassege: false},()=>{\n    //             console.log(self.state, \"display\");\n\n    //           })\n    //           // console.log(self.state.errorMassege);\n\n\n    //         }\n\n    //     })\n    //   }\n    // });\n    // axios.get(config.baseurl + '/filter/fetchfilterdata')\n    // .then(function (response) {\n    //   if (response.status == 200) {\n    //     self.setState({ filterlist: response.data.rows })\n    //   }\n    // })\n\n    // axios.get(config.baseurl + '/filter/fetchActivefilterdata')\n    // .then(function (response) {\n    //   if (response.status == 200) {\n\n    //     if(response.data.rows && response.data.rows.length>0){\n    //       let symbolsObj = (response.data.rows[0].symbols).map(data => {\n    //         return ({value:data, label:data})\n    //       })\n    //       self.setState({ filterlist: response.data.rows, allSymbols: response.data.rows[0].symbols, symbolsObj:symbolsObj })\n    //     }\n    //   }\n    // });\n\n  }\n\n  showData = (accountDetailValue) => {\n\n\n    //    if (this.state.accountDetailValue == null || this.state.accountDetailValue == '') {\n    //     this.setState({ error: 'accountDetailValue' })\n    //     return\n    //  }\n    //  else{\n    //     this.setState({error:''})\n    // }\n    // return this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => {\n    //   if(accountDetailValue==='margin_level'){\n    //       return (\n    //         <td className={index !== (this.state.accountlist.length - 1) ? 'tdClr2 tdClr' : 'tdClr2'} key={index}>\n    //         {item.accounts_details[0][accountDetailValue]} %</td>\n    //       )\n    //   }\n    //   return (\n    //     <td className={index !== (this.state.accountlist.length - 1) ? 'tdClr2 tdClr' : 'tdClr2'} key={index}>\n    //     {item.accounts_details[0].currency == 'USD' ? '$' : ''} {item.accounts_details[0][accountDetailValue]}</td>\n    //   )\n    // })\n    return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\n      if (accountDetailValue === 'margin_level') {\n        return (\n          <>\n            <td className=\"tdClr2 tdClr boldText\" key={index}>\n              <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\n            </td>\n            <td className=\"tdClr2 boldText\" key={index}>\n              {/* {item.accountToInfo[0].accounts_details[0][accountDetailValue]} % */}\n              <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\n            </td>\n          </>\n        )\n      }\n      if (item.accountFromInfo.length > 0) {\n        return (\n          <>\n            <td className=\"tdClr2 tdClr boldText\" key={index}>\n              {item.accountFromInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''}  {' '}\n              <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n            </td>\n\n            <td className=\"tdClr2 boldText\" key={index}>\n              {item.accountToInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''} {' '}\n              {/* {item.accountToInfo[0].accounts_details[0][accountDetailValue]} */}\n              <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n            </td>\n          </>\n        )\n\n      }\n\n    })\n  }\n\n  tableHeader = () => {\n\n    // return this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => {\n    //   return (\n    //     <th key={index} className={item.accounts_details[0].account_id == 1 && index !== (this.state.accountlist.length - 1) ? 'bText colorDarkBlue text-center tdClr2 tdClr' : 'bText colorDarkBlue text-center tdClr2'}>\n    //       <span>\n    //         {item.login}\n    //       </span>\n    //     <div className=\"colorDarkBlue\" style={{fontSize:10}}> \n    //       ({(item.alias!=null) ? item.alias : '-'})\n    //     </div>\n    //     </th>\n\n    //   )\n    // }\n    // )\n    return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\n      return (\n        <>\n          <th key={index} className=\"bText colorDarkBlue text-center tdClr2 tdClr\">\n            <div className=\"colorDarkBlue\" >\n              {(item.accountFromInfo[0].alias != null) ? item.accountFromInfo[0].alias : '-'}\n            </div>\n            <span style={{ fontSize: 10 }}>\n              {item.accountFromInfo[0].login}\n            </span>\n\n          </th>\n          <th key={index} className=\"bText color2 text-center tdClr2\">\n            <div className=\"color2\" >\n              {(item.accountToInfo[0].alias != null) ? item.accountToInfo[0].alias : '-'}\n            </div>\n            <span style={{ fontSize: 10 }}>\n              {item.accountToInfo[0].login}\n            </span>\n\n          </th>\n        </>\n\n      )\n\n    })\n  }\n\n\n\n\n\n  render() {\n    const dateToFormat = new Date();\n    let FinalTotal = 0\n\n    return (\n\n      <div className=\"\">\n        {this.state.errorMassege == true &&\n          <div className=\"popup\">\n\n            <div class=\"card w-75 \">\n              <div class=\"card-body topmargin\">\n                <div class=\" card-text popuptext\" role=\"alert\">Please Select Filters To Continue...</div>\n              </div>\n            </div>\n          </div>}\n\n        {/* {\n          (this.state.blockloader) &&\n          <div className=\"blockloader\">\n            <div className=\"col-md-2 offset-md-5 loaderSet\">\n              <ReactLoading color={'#333'} type=\"spinningBubbles\" />\n            </div>\n          </div>\n        } */}\n\n        <div className=\"content\">\n          {this.state.errorMassege != true &&\n\n            <Grid fluid>\n              <Row>\n                <div className=\"lastUpdate\">\n                  <span> Last Updated :  </span>\n                  {this.state.dateTime}(UTC)  </div>\n                <Col md={12} sm={6}>\n\n                  {/* <div className=\"terminal-box\">\n                    {(this.state.errorMassege) && <p style={{ color: 'red', fontSize: '10px' }}>Please Select Any Account</p>}\n                    <span className=\"terminal-text\">Terminal Statistics</span>\n                  </div> */}\n     {/* removed ******/}\n\n                  {/* <div className=\" leftset card \">\n                    <Row>\n                      <h4 className=\"text-center \"><b>Exposure</b></h4>\n\n                      <Col md={4}>\n                        <div className=\"card\">\n                          <div className={'colorDarkBlue , boldText loginCenter'}>{this.state.fromAccounts.alias}</div>\n\n                          <h6 className={'colorDarkBlue ,  loginCenter'}>{this.state.fromAccounts.login}</h6>\n\n                          <div className=\"content table-full-width \"><div className=\"table-responsive\">\n                            <div className=\"text-center\">\n                              <span className=\"td-actions  clearBorder text-right\">{this.state.fromSymbol.name}\n\n                              </span>\n                            </div><br></br>\n                            <div className=\"text-center\">\n                              <span className=\"td-actions clearBorder text-right\">\n                                <NumberFormat value={this.state.total} displayType={'text'} thousandSeparator={true} decimalScale={2} />   {this.state.fromSymbol.margin_currency}\n\n                              </span>\n                            </div>\n\n                          </div>\n                          </div>\n                        </div>\n\n                      </Col>\n                      <Col md={4}>\n                        <div className=\"card\">\n\n                          <h5 className=\"  text-center adjustMent\" > {this.state.total != 0 && this.state.totalTo != 0 && (this.state.total + this.state.totalTo != 0) ? <b>  Exposure</b> : <span style={{ color: \"green\" }}><b > No Exposure</b></span>}\n                          </h5>\n                          {this.state.total != 0 && this.state.totalTo != 0 && (this.state.total + this.state.totalTo != 0) &&\n                            <div style={{ color: '#b70606' }} className=\" setBottom bText text-center\">\n                              <NumberFormat\n                                value={this.state.total + this.state.totalTo} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                            </div>\n\n                          }\n                        </div>\n\n                      </Col>\n                      <Col md={4}>\n                        <div className=\" leftset1 card\">\n                          <div className={'color2 , boldText loginCenter'}>{this.state.toAccounts.alias}</div>\n\n                          <h6 className={'color2 ,bText, loginCenter'}>{this.state.toAccounts.login}</h6>\n\n                          <div className=\"content table-full-width \"><div className=\"table-responsive\">\n\n\n                            <div className=\"text-center\">\n                              <span className=\"td-actions bText, clearBorder text-right\">{this.state.toSymbol.name}\n\n                              </span>\n                            </div><br></br>\n                            <div className=\"text-center\">\n                              <span className=\"td-actions  clearBorder text-right\">\n                                <NumberFormat value={this.state.totalTo} displayType={'text'} thousandSeparator={true} decimalScale={2} />   {this.state.toSymbol.margin_currency}\n\n                              </span>\n                            </div>\n\n                          </div>\n                          </div>\n                        </div>\n\n                      </Col>\n\n                    </Row>\n                  </div> */}\n     {/* removed ******/}\n\n                </Col>\n              </Row>\n              <Row style={{ margin: '20px 0px' }}>\n                {/* removed ******/}\n                {/* <Row>\n                  {Data.dashBoardPage.items.map((item, index) =>\n\n                    <Col md={4} sm={6} key={index}>\n                      <div style={{ margin: '30px 0px' }} className=\"text-center\">\n                        <span className=\"bText\">{item.title}</span>\n                      </div>\n                      <div className=\"balance-box Pmargin\"\n                      // className={item.id == '1' ? 'balance-box' : item.id == '2' ?\n                      //   'balance-box Pmargin' : item.id == '3' ? 'balance-box equity-box' :\n                      //     item.id == '4' ? 'balance-box Fmargin' : item.id == '5' ? 'balance-box floating' : 'balance-box  margin-box'}\n                      >\n                        <div className=\"content\">\n                          <div className=\"table-responsive\">\n\n                            <table className=\"table  text-center\">\n\n                              <tbody>\n                                <tr>\n                                  {this.tableHeader()}\n                                </tr>\n                                <tr>\n                                  {item.title == 'Balance' && this.showData('balance')}\n                                  {item.title == 'Equity' && this.showData('equity')}\n                                  {item.title == 'Margin' && this.showData('margin')}\n                                  {item.title == 'Free Margin' && this.showData('free_margin')}\n                                  {item.title == 'Margin %' && this.showData('margin_level')}\n                                  {item.title == 'Floating P/L' && this.showData('profit')}\n                                </tr>\n                              </tbody>\n                            </table>\n\n                          </div>\n                        </div>\n                      </div>\n                    </Col>\n\n                  )}\n                </Row> */}\n                {/* removed ******/}\n\n\n                {/* \n            <Row>\n              <Col md={4}>\n                <Row>\n                  <Col md={6}>\n                    <Row>\n                      <Col md={2}>\n                        <div>\n                          <div>\n                            <div>\n                              <span>Logn in</span>\n                            </div>\n                            <div>\n                              <span>Balance</span>\n                            </div>\n                          </div>\n                        </div>\n                      </Col>\n                      <Col md={2}>\n                        <div>\n                          <div>\n                            <div>\n                              <span>Logn in</span>\n                            </div>\n                            <div>\n                              <span>Balance</span>\n                            </div>\n                          </div>\n                        </div>\n                      </Col>\n                      <Col md={2}>\n                        <div>\n                          <div>\n                            <div>\n                              <span>Logn in</span>\n                            </div>\n                            <div>\n                              <span>Balance</span>\n                            </div>\n                          </div>\n                        </div>\n                      </Col>\n                    </Row>\n\n                  </Col>\n                </Row>\n              </Col>\n            </Row> */}\n\n              </Row>\n              {/* <Row>\n                <Col md={12} sm={6}>\n                  <div className=\"terminal-box\">\n                    <span className=\"terminal-text\">Statistics Per Symbol</span>\n                  </div>\n                </Col>\n              </Row>\n              <Row>\n                <TableList />\n              </Row> */}\n            </Grid>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\nimport TagsInput from 'react-tagsinput'\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\n\nimport DatePicker from \"react-datepicker\";\nimport config from '../../constant/config.js';\n\nimport Select from 'react-select'\nimport { createLogicalAnd } from 'typescript';\nconst axios = require('axios');\n\nclass FilterEdite extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedAccountOption: null,\n            selectedSymbolOption: null,\n            selectedSymbolOptionTo: null,\n            selectedAccountOptionTo: null,\n            selectedCommissionAccount: null,\n            startDate: null,\n            endDate: null,\n            startDateTo: null,\n            endDateTo: null,\n            allAccounts: [],\n            allSymbols: [],\n            profileName: '',\n            showCommission: false,\n            // showAddCommission: false,\n            id: '',\n            error: '',\n            autoSyncClose: false,\n            magicNumber: [],\n            magicNumberTo: [],\n            tags: [],\n            include_exclude_status: '',\n            showMagicNumber: false,\n            showMagicNumberTo: false,\n            exclude: false,\n            include: false,\n            excludeTo: false,\n            includeTo: false,\n\n\n        };\n\n\n    }\n    componentWillMount() {\n\n        let self = this;\n        axios.get(config.baseurl + '/accounts/fetchAllAccounts')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ allAccounts: response.data.rows })\n                }\n            })\n        axios.get(config.baseurl + '/accounts/fetchAllSymbol')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ allSymbols: response.data.rows })\n                }\n            })\n    }\n    componentDidMount() {\n\n        let abc = this.props.data;\n        if (abc) {\n            let from_symbol = JSON.parse(abc.from_symbols);\n            let to_symbol = JSON.parse(abc.to_symbols);\n\n            let all_from_symbols = from_symbol.map(data => { return ({ value: data, label: data }) });\n            let all_to_symbols = to_symbol.map(data => { return ({ value: data, label: data }) });\n\n            from_symbol = from_symbol.join(', ');\n            to_symbol = to_symbol.join(', ');\n\n            this.setState({\n                id: abc.id,\n                profileName: abc.profile_name,\n                selectedAccountOption: ({ value: abc.accountFromInfo[0].id, label: abc.accountFromInfo[0].login }),\n                selectedAccountOptionTo: ({ value: abc.accountToInfo[0].id, label: abc.accountToInfo[0].login }),\n                showCommission: abc.commission_acount_id !== 0 ? true : false,\n                selectedCommissionAccount: abc.commission_acount_id !== 0 ? ({ value: abc.accountCommissionInfo[0].id, label: abc.accountCommissionInfo[0].login }) : null,\n                showMagicNumber: abc.from_include_exclude_status !== 0 ? true : false,\n                showMagicNumberTo: abc.to_include_exclude_status !== 0 ? true : false,\n                magicNumber: abc.from_magic_number != \"0\" && abc.from_magic_number != \"\" ? JSON.parse(abc.from_magic_number) : [],\n                magicNumberTo: abc.to_magic_number != \"0\" && abc.to_magic_number != \"\" ? JSON.parse(abc.to_magic_number) : [],\n                include: abc.from_include_exclude_status === 1 ? true : false,\n                exclude: abc.from_include_exclude_status === 2 ? true : false,\n                includeTo: abc.to_include_exclude_status === 1 ? true : false,\n                excludeTo: abc.to_include_exclude_status === 2 ? true : false,\n                selectedSymbolOption: all_from_symbols,\n                autoSyncClose: abc.auto_close == 1 ? true : false,\n                selectedSymbolOptionTo: all_to_symbols,\n                startDate: new Date(abc.startdateFrom),\n                startDateTo: new Date(abc.startdateTo),\n                endDate: (abc.enddateFrom != null) ? new Date(abc.enddateFrom) : '',\n                endDateTo: (abc.enddateTo != null) ? new Date(abc.enddateTo) : '',\n            })\n\n\n        }\n\n\n\n    }\n\n    handleDropdownChange = (e) => {\n        this.setState({ selectValue: e.target.value });\n    }\n    handleChangeDate = date => {\n        this.setState({\n            startDate: date\n        });\n    }\n    handleEndDate = date => {\n\n        if (date < this.state.startDate && date != null) {\n            this.setState({ error: 'enddate', endDate: \"\" })\n            return\n        }\n        this.setState({\n            error: '',\n            endDate: date,\n        });\n    }\n    handleChangeDateTo = date => {\n        this.setState({\n            startDateTo: date\n        });\n    }\n    handleEndDateTo = date => {\n        if (date < this.state.startDateTo && date != null) {\n            this.setState({ error: 'enddateto', endDateTo: \"\" })\n            return\n        }\n        this.setState({\n            error: '',\n            endDateTo: date,\n        });\n    }\n    handleChange = (event) => {\n        this.setState({ value: Array.from(event.target.selectedOptions, (item) => item.value) });\n    }\n\n    handeChangeShowCommission = () => {\n        this.setState({ showCommission: !this.state.showCommission })\n    }\n    handleChangeCommissionAccount = selectedCommissionAccount => {\n        this.setState({ selectedCommissionAccount });\n    };\n\n    renderCommissionAccount = () => {\n        const { selectedCommissionAccount, allAccounts } = this.state;\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account\"\n                value={selectedCommissionAccount}\n                onChange={this.handleChangeCommissionAccount}\n                options={options}\n            />\n        )\n    }\n\n\n\n    renderAccountSelect = () => {\n        const { selectedAccountOption, allAccounts } = this.state;\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account\"\n                value={selectedAccountOption}\n                onChange={this.handleChangeAccount} l\n                options={options}\n                rules={{ required: 'Please select an option' }}\n            />\n        )\n    }\n\n    handleChangeAccountTo = selectedAccountOptionTo => {\n        this.setState({ selectedAccountOptionTo, error: '' });\n    };\n    renderAccountSelectTo = () => {\n        const { selectedAccountOptionTo, allAccounts } = this.state;\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account\"\n                value={selectedAccountOptionTo}\n                onChange={this.handleChangeAccountTo}\n                options={options}\n            />\n        )\n    }\n\n    handleChangeAccount = selectedAccountOption => {\n        this.setState({ selectedAccountOption });\n    };\n    handleChangeSymbol = selectedSymbolOption => {\n        this.setState({ selectedSymbolOption });\n    };\n    renderSymbolSelect = () => {\n        const { selectedSymbolOption, allSymbols } = this.state;\n        let options = allSymbols.map(data => {\n            return { value: data.name, label: data.name };\n        })\n        return (\n            <Select\n                placeholder=\"Select Symbol\"\n                value={selectedSymbolOption}\n                isMulti\n                onChange={this.handleChangeSymbol}\n                options={options}\n            />\n        )\n    }\n    handleChangeSymbolTo = selectedSymbolOptionTo => {\n        this.setState({ selectedSymbolOptionTo });\n    };\n    renderSymbolSelectTo = () => {\n        const { selectedSymbolOptionTo, allSymbols } = this.state;\n        let options = allSymbols.map(data => {\n            return { value: data.name, label: data.name };\n        })\n        return (\n            <Select\n                placeholder=\"Select Symbol\"\n                value={selectedSymbolOptionTo}\n                isMulti\n                onChange={this.handleChangeSymbolTo}\n                options={options}\n            />\n        )\n    }\n\n    handleChangeMagicNumber = (magicNumber) => {\n\n\n        // if(re.test(tags))\n        this.setState({ magicNumber })\n    }\n    handleChangeMagicNumberTo = (magicNumberTo) => {\n\n\n        // if(re.test(tags))\n        this.setState({ magicNumberTo })\n    }\n    changeIncludeDefaultProperty = () => {\n\n        this.setState({ include: !this.state.include, exclude: false }, () => {\n\n        })\n        if (!this.state.include == true) {\n            this.setState({ showMagicNumber: true })\n        } else if (this.state.include == true) {\n            this.setState({ showMagicNumber: false })\n\n        }\n\n\n    }\n    changeExcludeDefaultProperty = () => {\n        this.setState({ exclude: !this.state.exclude, include: false })\n        if (!this.state.exclude == true) {\n            this.setState({ showMagicNumber: true })\n        } else if (this.state.exclude == true) {\n            this.setState({ showMagicNumber: false })\n\n        }\n\n    }\n\n    changeIncludeDefaultPropertyTo = () => {\n        this.setState({ includeTo: !this.state.includeTo, excludeTo: false })\n        if (!this.state.includeTo == true) {\n            this.setState({ showMagicNumberTo: true })\n        } else if (this.state.includeTo == true) {\n            this.setState({ showMagicNumberTo: false })\n\n        }\n    }\n    changeExcludeDefaultPropertyTo = () => {\n        this.setState({ excludeTo: !this.state.excludeTo, includeTo: false })\n        if (!this.state.excludeTo == true) {\n            this.setState({ showMagicNumberTo: true })\n        } else if (this.state.excludeTo == true) {\n            this.setState({ showMagicNumberTo: false })\n\n        }\n\n    }\n    handleprofileName(e) {\n\n        this.setState({ profileName: e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1), error: '' })\n\n    }\n    handleChangeAutoSync(e) {\n        this.setState({ autoSyncClose: !this.state.autoSyncClose }, () => {\n        })\n    }\n    formDataSubmit(e) {\n        e.preventDefault();\n\n        let from_status = this.state.include === true && this.state.exclude === false ? 1 : this.state.exclude === true && this.state.include === false ? 2 : 0\n\n        let to_status = this.state.includeTo === true && this.state.excludeTo === false ? 1 : this.state.excludeTo === true && this.state.includeTo === false ? 2 : 0\n        let self = this\n\n       \n        if (this.state.profileName == null || this.state.profileName == '') {\n            NotificationManager.listNotify = [];\n            NotificationManager.error ('Please select profile name !')\n            return\n        }\n        else if (this.state.selectedAccountOption == null || this.state.selectedAccountOption == '') {\n            this.setState({ error: 'accountoption' })\n            return\n        }\n        else if (this.state.showCommission == true  &&  (this.state.selectedCommissionAccount == null || this.state.selectedCommissionAccount == '')) {\n            this.setState({ error: 'selectedCommissionAccount' })\n            return\n        }\n        else if (this.state.startDate == null || this.state.startDate == '') {\n            this.setState({ error: 'startdate' })\n            return\n        } else if (this.state.selectedSymbolOption == null || this.state.selectedSymbolOption == '') {\n            this.setState({ error: 'symbolselect' })\n            return\n        }\n        else if (this.state.selectedAccountOptionTo == null || this.state.selectedAccountOptionTo == '') {\n            this.setState({ error: 'accountoptionto' })\n            return\n        } else if (this.state.startDateTo == null || this.state.startDateTo == '') {\n            this.setState({ error: 'startDateTo' })\n            return\n        }\n        else if (this.state.selectedSymbolOptionTo == null || this.state.selectedSymbolOptionTo == '') {\n            this.setState({ error: 'selectedSymbolOptionTo' })\n            return\n        }\n        else {\n            this.setState({ error: '' })\n        }\n        let fromSymbol = this.state.selectedSymbolOption;\n        let toSymbol = this.state.selectedSymbolOptionTo;\n\n        let symbolFrom = fromSymbol.map((data) => data.value)\n        let symbolto = toSymbol.map((data) => data.value)\n\n        let Data = {\n            id: this.state.id,\n            profile_name: this.state.profileName,\n            from_account_id: this.state.selectedAccountOption.value,\n            to_account_id: this.state.selectedAccountOptionTo.value,\n            commission_acount_id: this.state.showCommission == true ? this.state.selectedCommissionAccount.value : 0,\n            startdateFrom: this.state.startDate,\n            // enddateFrom: this.state.endDate,\n            enddateFrom: (this.state.endDate) ? this.state.endDate : null,\n            startdateTo: this.state.startDateTo,\n            enddateTo: (this.state.endDateTo) ? this.state.endDateTo : null,\n            from_symbols: JSON.stringify(symbolFrom),\n            to_symbols: JSON.stringify(symbolto),\n            auto_close: this.state.autoSyncClose ? 1 : 0,\n            from_magic_number: (from_status != 0) ? this.state.magicNumber.length > 0 ? JSON.stringify(this.state.magicNumber) : [] : \"\",\n            to_magic_number: (to_status != 0) ? this.state.magicNumberTo.length > 0 ? JSON.stringify(this.state.magicNumberTo) : [] : \"\",\n\n            from_include_exclude_status: from_status,\n            to_include_exclude_status: to_status,\n            createdAt: new Date(),\n            updatedAt: new Date()\n        }\n\n       \n        axios.post(config.baseurl + '/filter/updatefilterdatafull', Data)\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.props.onHide()\n\n                }\n            })\n            .catch(function (error) {\n            });\n\n    }\n    crossClick(e) {\n        e.preventDefault();\n        this.props.onHide()\n    }\n\n    render() {\n        return (\n            <div className=\"content\">\n                <Grid fluid>\n                    <div className=\"symbol-box\">\n                        <div className=\"cross_div\"><a onClick={(e) => this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\n                        <div className=\"terminal-text\" >\n                            <p className=\"profilename pnameadjust\"> Profile Name</p>\n                            <input type=\"text\" name=\"profilename\" value={this.state.profileName} className=\"Itext\" onChange={(e) => this.handleprofileName(e)} />\n                            {(this.state.error == 'profileName') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Fill Your Profile Name </p>}\n\n                        </div>\n                        <div className=\"synclose\">\n                            <label class=\"checkbox-inline\"><input type=\"checkbox\" checked={this.state.autoSyncClose} name=\"changeAutoSync\" onChange={(e) => this.handleChangeAutoSync(e)} /><b>Auto Sync Close</b></label>\n                        </div>\n                        <form>\n                            <Row>\n                                {/* <Col md={12}>\n                                    <div className=\"card\">\n                                        <div style={{ padding: '10px 20px 35px ', }}>\n                                            <div>\n                                                <h3 className=\" text-center\">Filter By Magic Numbers</h3>\n\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6 text-center\">\n\n                                                    <button type=\"button\" class=\"text-center filter-add-button\">Include</button>\n                                                </div>\n\n                                                <div className=\"col-md-6 text-center btnspace\">\n                                                    <button type=\"button\" class=\"filter-add-button\">Exclude</button>\n                                                </div>\n                                                <div className=\"row\">\n                                                    <div className=\"col\">\n                                                        <div class=\"text-center  \">\n                                                            <input class=\"form-control input-css\" placeholder=\"Select Numbers\" type=\"number\"></input>\n                                                        </div>\n                                                    </div>\n                                                </div>from_include_exclude_status\n\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                </Col> */}\n                                <Col md={6}>\n                                    <div className=\"card bottom\">\n                                        <div style={{ padding: '10px 20px 0px' }}>\n                                            <span style={{ fontWeight: 'bold' }}>Account A</span>\n                                        </div>\n                                        <table className=\"table mt20\">\n                                            <tbody>\n                                                <tr>\n                                                    <td className=\"b-clr\">\n                                                        <span className=\"accnt\">Account :</span>\n                                                    </td>\n\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        {this.renderAccountSelect()}\n                                                        {(this.state.error == 'accountoption') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">From:  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            selected={this.state.startDate}\n                                                            onChange={this.handleChangeDate}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDate}\n                                                            endDate={this.state.endDate}\n                                                            strictParsing\n                                                        />\n                                                        {(this.state.error == 'startdate') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">To :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n\n                                                            selected={this.state.endDate}\n                                                            onChange={this.handleEndDate}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDate}\n                                                            endDate={this.state.endDate}\n                                                        />\n                                                        {(this.state.error == 'enddate') && <p style={{ color: 'red', fontSize: '13px' }}>*\n                                                        Please ensure that the End Date is greater than  the Start Date.</p>}\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">Symbol :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '50%' }}>\n                                                        {this.renderSymbolSelect()}\n                                                        {(this.state.error == 'symbolselect') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\n\n                                                    </td>\n                                                </tr>\n\n\n                                            </tbody>\n                                        </table>\n                                        <div className=\"text-center\">\n                                            <span c> Magic Number :  </span>\n                                        </div>\n\n                                        <table className=\"table \">\n                                            <tbody>\n                                                <tr>\n                                                    <td className=\"b-clr dataAdjust\">\n                                                        <div onClick={this.changeIncludeDefaultProperty}>\n                                                            <input\n                                                                type=\"radio\" id=\"include\" name=\"include\" checked={this.state.include} />\n                                                            <span class=\"accnt \">Include</span>\n\n                                                        </div>\n                                                    </td>\n                                                    <td className=\"b-clr \">\n                                                        <div onClick={this.changeExcludeDefaultProperty} >\n                                                            <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.exclude} />\n                                                            <span class=\"accnt \">Exclude</span>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n\n\n                                        {this.state.showMagicNumber &&\n                                            <div className=\"b-clr magicnumber\" style={{}}>\n                                                <TagsInput\n                                                    onValidationReject={() => console.log('rejected')}\n                                                    validationRegex={/^[0-9]*$/}\n                                                    inputProps={{ placeholder: this.state.magicNumber.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumber\n                                                    } onChange={this.handleChangeMagicNumber}></TagsInput>\n                                            </div>}\n\n\n                                    </div>\n                                </Col>\n                                <Col md={6}>\n                                    <div className=\"card bottom\">\n                                        <div style={{ padding: '10px 20px 0px' }}>\n                                            <span style={{ fontWeight: 'bold' }}>Account B</span>\n                                        </div>\n\n                                        <table className=\"table mt20\">\n                                            <tbody>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">Account :</span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '50%' }}>\n                                                        {this.renderAccountSelectTo()}\n                                                        {(this.state.error == 'accountoptionto') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\n\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">From:  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            selected={this.state.startDateTo}\n                                                            onChange={this.handleChangeDateTo}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDateTo}\n                                                            endDate={this.state.endDateTo}\n                                                        />\n\n                                                        {(this.state.error == 'startDateTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">To :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            selected={this.state.endDateTo}\n                                                            onChange={this.handleEndDateTo}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDateTo}\n                                                            endDate={this.state.endDateTo}\n\n                                                        />\n\n                                                        {(this.state.error == 'enddateto') && <p style={{ color: 'red', fontSize: '13px' }}>*\n                                                        Please ensure that the End Date is greater than  the Start Date.</p>}\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr\">\n                                                        <span className=\"accnt\">Symbol :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        {this.renderSymbolSelectTo()}\n                                                        {(this.state.error == 'selectedSymbolOptionTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\n\n\n                                                    </td>\n                                                </tr>\n\n                                            </tbody>\n                                        </table>\n\n\n                                        <div className=\"text-center\">\n                                            <span > Magic Number :  </span>\n                                        </div>\n                                        <table className=\"table mt20\">\n                                            <tbody>\n\n                                                <tr>\n                                                    <td className=\"b-clr checkboxAdjust\">\n                                                        <div onClick={this.changeIncludeDefaultPropertyTo} >\n                                                            <input\n                                                                type=\"radio\" id=\"includeTo\" name=\"includeTo\" checked={this.state.includeTo} />\n                                                            <span class=\"accnt \">Include</span>\n\n                                                        </div>\n                                                    </td>\n                                                    <td className=\"b-clr checkboxAdjust\">\n                                                        <div onClick={this.changeExcludeDefaultPropertyTo} >\n                                                            <input type=\"radio\" id=\"excludeTo\" name=\"excludeTo\" checked={this.state.excludeTo} />\n                                                            <span class=\"accnt \">Exclude</span>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                        <div>\n\n                                            {this.state.showMagicNumberTo === true ?\n                                                <div className=\"b-clr magicnumber\" style={{}}>\n                                                    <TagsInput\n                                                        onValidationReject={() => console.log('rejected')}\n                                                        validationRegex={/^[0-9]*$/}\n                                                        inputProps={{ placeholder: this.state.magicNumber.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumberTo\n                                                        } onChange={this.handleChangeMagicNumberTo}></TagsInput>\n                                                </div> : null}\n                                        </div>\n                                    </div>\n                                </Col>\n                            </Row>\n                            <hr></hr>\n                            <div className=\"chceckbox\">\n\n                                <label class=\"checkbox-inline\"><input type=\"checkbox\" checked={this.state.showCommission} onChange={this.handeChangeShowCommission} /><b>Add Commission</b></label>\n                            </div>\n\n\n\n                            {this.state.showCommission &&\n                                <div className=\"center-com d-flex\">\n                                    <div className=\"com\">\n                                        <h3 style={{ fontWeight: 'bold' }}>Commission</h3>\n\n                                    </div>\n                                    <table className=\"table mt20\">\n\n                                        <tbody>\n                                            <tr>\n\n                                                <td className=\"b-clr \">\n                                                    <span className=\"accnt\"> Account :</span>\n                                                </td>\n                                                <td className=\"b-clr text-center\" style={{ width: '50%' }}>\n                                                    {this.renderCommissionAccount()}\n                                                    {(this.state.error == 'selectedCommissionAccount') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account </p>}\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n\n                            }\n                            <div className=\"save_button_filter\">\n                                <Button className=\"btn-primary savebutton\" variant=\"primary\" size=\"lg\" block onClick={(e) => this.formDataSubmit(e)}>\n                                    <b>Update</b>\n                                </Button>\n                            </div>\n                        </form>\n                    </div>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default FilterEdite;\n","import React, { Component } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\nvar moment = require('moment');\n\nclass FilterDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            autoSyncClose: false,\n            exclude: false,\n            include: false,\n            excludeTo: false,\n            includeTo: false,\n            showMagicNumberFrom: false,\n            showMagicNumberTo: false,\n        };\n    }\n    crossClick(e) {\n        e.preventDefault();\n        this.props.onHide()\n    }\n\n    componentDidMount() {\n        let data = this.props.data;\n        this.setState({\n            autoSyncClose: data.auto_close == 1 ? true : false,\n            include: data.from_include_exclude_status == 1 ? true : false,\n            exclude: data.from_include_exclude_status == 2 ? true : false,\n            includeTo: data.to_include_exclude_status == 1 ? true : false,\n            excludeTo: data.to_include_exclude_status == 2 ? true : false,\n            showMagicNumberFrom: data.from_include_exclude_status !== 0 ? true : false,\n            showMagicNumberTo:data.to_include_exclude_status !== 0? true: false\n        })\n\n    }\n\n    // componentWillMount = () => {\n    //     console.log(this.props,'props..................');\n    // }\n\n    render() {\n        let data = this.props.data;\n\n        let from_symbol = JSON.parse(data.from_symbols);\n        let to_symbol = JSON.parse(data.to_symbols);\n        from_symbol = from_symbol.join(', ');\n        to_symbol = to_symbol.join(', ');\n        return (\n            <div className=\"content\">\n                <Grid fluid>\n                    <div className=\"symbol-box\">\n                        <div className=\"cross_div\"><a onClick={(e) => this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\n                        <div className=\"detail-text\"><h3> {data.profile_name} </h3></div>\n                        <div className=\"synclose\">\n                            <label class=\"checkbox-inline\"><input type=\"checkbox\" checked={this.state.autoSyncClose} name=\"changeAutoSync\" /><b>Auto Sync Close</b></label>\n                        </div>\n                        <Row>\n                            <Col md={6}>\n                                <div className=\"card\">\n                                    <div className=\"detail_account\" style={{ padding: '10px 20px 0px' }}>\n                                        <span style={{ fontWeight: 'bold' }}>Account A</span>\n                                    </div>\n                                    <table className=\"table mt20\">\n                                        <tbody>\n                                            <tr>\n                                                <td className=\"b-clr\">\n                                                    <span>Account :</span>\n                                                </td>\n\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {data.accountFromInfo[0].login}\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>From :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center datepicker_filter\">\n                                                    {moment(data.startdateFrom).format(\"DD/MM/YYYY\")}\n\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>To :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center datepicker_filter\">\n                                                    {data.enddateFrom !== null ? moment(data.enddateFrom).format(\"DD/MM/YYYY\") : \"-\"}\n\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>Symbol :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {from_symbol}\n                                                </td>\n                                            </tr>\n                                            {this.state.showMagicNumberFrom &&\n                                            <>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>Magic Number :  </span>\n                                                </td>\n\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {data.from_magic_number}\n                                                </td>\n\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr dataAdjust\">\n                                                    <div onClick={this.changeIncludeDefaultProperty}>\n                                                        <input\n                                                            type=\"radio\" id=\"include\" name=\"include\" checked={this.state.include} />\n                                                        <span class=\"accnt \">Include</span>\n\n                                                    </div>\n                                                </td>\n                                                <td className=\"b-clr \">\n                                                    <div onClick={this.changeExcludeDefaultProperty} >\n                                                        <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.exclude} />\n                                                        <span class=\"accnt \">Exclude</span>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                            </>}\n\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </Col>\n                            <Col md={6}>\n                                <div className=\"card\">\n                                    <div className=\"detail_account\" style={{ padding: '10px 20px 0px' }}>\n                                        <span style={{ fontWeight: 'bold' }}>Account B</span>\n                                    </div>\n\n                                    <table className=\"table mt20\">\n                                        <tbody>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>Account :</span>\n                                                </td>\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {data.accountToInfo[0].login}\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>From :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center datepicker_filter\">\n                                                    {moment(data.startdateTo).format(\"DD/MM/YYYY\")}\n\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>To :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center datepicker_filter\">\n                                                    {data.enddateTo != null ? (moment(data.enddateTo).format(\"DD/MM/YYYY\")) : '-'}\n\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr\">\n                                                    <span>Symbol :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {to_symbol}\n                                                </td>\n                                            </tr>\n                                            {this.state.showMagicNumberTo &&\n                                                <>\n\n                                                    <tr>\n                                                        <td className=\"b-clr\">\n                                                            <span>Magic Number :  </span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                            {data.to_magic_number}\n\n                                                        </td>\n                                                    </tr>\n\n\n                                                    <tr>\n                                                        <td className=\"b-clr checkboxAdjust\">\n                                                            <div onClick={this.changeIncludeDefaultPropertyTo} >\n                                                                <input\n                                                                    type=\"radio\" id=\"includeTo\" name=\"includeTO\" checked={this.state.includeTo} />\n                                                                <span class=\"accnt \">Include</span>\n\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"b-clr checkboxAdjust\">\n                                                            <div onClick={this.changeExcludeDefaultPropertyTo} >\n                                                                <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.excludeTo} />\n                                                                <span class=\"accnt \">Exclude</span>\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n                                                </>}\n\n\n                                        </tbody>\n                                    </table>\n                                </div>\n\n                            </Col>\n                            {data.commission_acount_id !== 0 && <Col md={12}>\n                                <div className=\"card bottom\">\n                                    <div className=\"detail_account\" style={{ padding: '10px 20px 0px' }}>\n                                        <h3 style={{ fontWeight: 'bold' }}>Commission</h3>\n                                    </div>\n                                    <table className=\"table mt20\">\n                                        <tbody>\n                                            <tr>\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    <span>Account :</span>\n                                                </td>\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {data.accountCommissionInfo[0].login}\n\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n\n                            </Col>}\n                        </Row>\n\n                    </div>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default FilterDetail;\n\n","import React, { Component } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\nimport Innerfilter from '../filter/innerfilter';\nimport FilterEdite from '../filter/filteredit';\nimport FilterDetail from '../filter/filterdetail';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport config from '../../constant/config.js';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\n\nconst axios = require('axios');\nvar moment = require('moment');\n\nclass Filterprofile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            Innerfilter: false,\n            filter: true,\n            filterData: [],\n            deleteData: [],\n            editeData: [],\n            showDelete: false,\n            showEdit: false,\n            detailForm: false,\n            detailData: [],\n        };\n\n        // this.handleDropdownChange = this.handleDropdownChange.bind(this);\n    }\n    fetchfilterdata() {\n        let self = this;\n        axios.get(config.baseurl + '/filter/fetchfilterdata')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ filterData: response.data.rows })\n                }\n            })\n    }\n    showInnerfilter = () => {\n        this.setState({ Innerfilter: true, filter: false })\n    }\n    componentDidMount() {\n        this.fetchfilterdata();\n        // let self = this;\n        // axios.get(config.baseurl + '/filter/fetchfilterdata')\n        //     .then(function (response) {\n        //         if (response.status == 200) {\n        //             self.setState({ filterData: response.data.rows })\n        //         }\n        //     }) adfasdfsd\n    }\n\n\n    createNotification = (profile_name, type) => {\n        NotificationManager.listNotify = [];\n        NotificationManager.info('Profile Is Activated !', profile_name);\n    }\n\n    createWariningNotification = (profile_name, type) => {\n        NotificationManager.listNotify = [];\n        NotificationManager.error('Profile Is Deactivated !', profile_name);\n    }\n\n    activateClick(e, data) {\n        e.preventDefault();\n        let Data = {\n            id: data.id,\n            status: 1\n        }\n        let self = this;\n        axios.post(config.baseurl + '/filter/updatefilterdata', Data)\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.fetchfilterdata();\n                    self.createNotification(data.profile_name, 'info');\n                    // self.setState({ filterData: response.data.rows })\n                }\n            })\n    }\n\n    //  App(){\n    //     const notify = () => toast(\"Wow so easy !\");\n\n    //     return (\n    //       <div>\n    //         <button onClick={notify}>Notify !</button>\n    //         <ToastContainer />\n    //       </div>\n    //     );\n    //   }\n\n    deactivateClick(e, data) {\n        e.preventDefault();\n        let Data = {\n            id: data.id,\n            status: 0\n        }\n        let self = this;\n        axios.post(config.baseurl + '/filter/updatefilterdata', Data)\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.fetchfilterdata();\n                    self.createWariningNotification(data.profile_name, 'error');\n                    // self.setState({ filterData: response.data.rows })\n                }\n            })\n    }\n    editFilter = (e, data) => {\n        // e.preventDefault();\n        if (this.state.endDate == null || this.state.endDate == '') {\n            let newDate = new Date();\n            this.setState({endDate: newDate })\n            return\n        }\n        this.setState({ showEdit: true, editeData: data })\n\n    }\n\n    deleteFilter(e, data) {\n        e.preventDefault();\n        this.setState({ deleteData: data, showDelete: true })\n\n    }\n    deletepopupClick(e) {\n        e.preventDefault();\n        let Data = {\n            id: this.state.deleteData.id\n        }\n        let self = this;\n        axios.post(config.baseurl + '/filter/deletefilter', Data)\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ showDelete: false })\n                    self.fetchfilterdata();\n                }\n            })\n    }\n    deletepopupclose(e) {\n        e.preventDefault();\n        this.setState({ showDelete: false })\n    }\n    viewFilter(e, data) {\n        e.preventDefault();\n\n        this.setState({ detailForm: true, detailData: data })\n    }\n\n    createTr = () => {\n        return this.state.filterData.length > 0 && this.state.filterData.map((item, index) => {\n            return (\n                <tr key={index}>\n                    <th scope=\"row\">{index + 1}</th>\n                    <td>{item.profile_name}</td>\n                    <td>{moment(item.createdAt).format(\"DD/MM/YYYY\")}</td>\n                    {/* <td>{item.status == 1 ? 'Activated' : 'Deactivated' }</td> */}\n                    <td>{item.status == 0 ?\n                        <div className=\"activate_button pointer\"><span className=\"button_interactivate btcolor\" onClick={(e) => this.activateClick(e, item)}> Activate </span> </div>\n                        :\n                        <div className=\"deactivate_button pointer\"><span className=\"button_deactivate pointer\" onClick={(e) => this.deactivateClick(e, item)}>Deactivate</span></div>}</td>\n                    <td>\n                        <span onClick={(e) => this.viewFilter(e, item)}><i className=\"pointer fa fa-eye facolor\" aria-hidden=\"true\"></i></span>\n                        <span onClick={(e) => this.editFilter(e, item)}><i className=\"pointer fa fa-pencil-square-o facolor\" aria-hidden=\"true\"></i></span>\n                        {item.status == 0 &&\n                            <span onClick={(e) => this.deleteFilter(e, item)}><i className=\"pointer fa fa-trash facolor\" aria-hidden=\"true\"></i></span>\n                        }\n                    </td>\n                    {/* <td>{item.accountToInfo[0].login}</td>\n                    <td>{moment(item.startdateFrom).format(\"DD/MM/YYYY\") + ' - ' + moment(item.enddateFrom).format(\"DD/MM/YYYY\")}</td>\n                    <td>{moment(item.startdateTo).format(\"DD/MM/YYYY\") + ' - ' + moment(item.enddateTo).format(\"DD/MM/YYYY\")}</td>\n                    <td>{item.from_symbols}</td>\n                    <td>{item.to_symbols}</td> */}\n                    {/* <td style={{fontWeight:600}}>{item.status == 1 && 'Connected'}</td> */}\n                </tr>\n            )\n        })\n    }\n\n    render() {\n\n        return (\n            <>\n                <NotificationContainer />\n                <div className=\"content\">\n                    {this.state.detailForm ?\n                        <FilterDetail\n                            data={this.state.detailData}\n                            show={this.state.detailForm}\n                            onHide={() => this.setState({ detailForm: false })}\n                        />\n                        :\n                        <>\n                            {this.state.showEdit ?\n                                <FilterEdite\n                                    data={this.state.editeData}\n                                    show={this.state.showEdit}\n                                    // onHide={() => this.setState({ showEdit: false })}\n                                    onHide={() => this.setState({ showEdit: false }, () => this.fetchfilterdata())}\n                                />\n                                :\n                                <>\n                                    {!this.state.Innerfilter &&\n                                        <Grid fluid>\n                                            <div className=\"selection-box\">\n                                                <span className=\"terminal-text\"> Profiles </span>\n\n                                                {/* <span className=\"icon-style\">\n                            <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\n                        </span> */}\n                                                {/* <Link to=\"/innerfilter\">\n                       <button className=\"pull-right\">Add New</button>\n                       </Link> */}\n\n                                                {/* <Link to=\"/admin/innerfilter\">\n                       <button className=\"pull-right\">abc</button>\n                       </Link> */}\n                                            </div>\n                                            <button className=\"pull-right filter-add-button\" onClick={this.showInnerfilter}>Add New</button>\n\n                                        </Grid>\n                                    }\n                                    {\n                                        this.state.Innerfilter ?\n                                            <Innerfilter\n                                                show={this.state.Innerfilter}\n                                                onHide={() => this.setState({ Innerfilter: false }, () => {\n                                                    this.fetchfilterdata();\n                                                })}\n                                            />\n                                            :\n                                            <div style={{ background: '#ffffff' }}>\n                                                <Row>\n                                                    <Col md={12}>\n                                                        <div style={{ padding: '10px' }}>\n                                                            <table className=\"table table-striped\">\n                                                                <thead>\n                                                                    <tr>\n                                                                        <th scope=\"col\">Sr.No.</th>\n                                                                        <th scope=\"col\">Profile Name</th>\n                                                                        <th scope=\"col\">Created At</th>\n                                                                        <th scope=\"col\">Status</th>\n                                                                        <th scope=\"col\">Action</th>\n                                                                    </tr>\n                                                                </thead>\n                                                                <tbody>\n                                                                    {/* {this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => { */}\n\n                                                                    {this.createTr()}\n                                                                    {/* })} */}\n                                                                    {/* <tr>\n                                                <th scope=\"row\">2</th>\n                                                <td>Jacob</td>\n                                                <td>Thornton</td>\n                                                <td>5.1.2.9</td>\n                                                <td>Connected</td>\n                                            </tr>\n                                            <tr>\n                                                <th scope=\"row\">3</th>\n                                                <td>Larry</td>\n                                                <td>the Bird</td>\n                                                <td>ab@123</td>\n                                                <td>Connected</td>\n                                            </tr> */}\n                                                                </tbody>\n                                                            </table>\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                        //     <div className=\"filter_page_table\">\n                                        //     <table className=\"table table-striped\">\n                                        //         <thead>\n                                        //             <tr>\n                                        //                 <th scope=\"col\">Sr.No.</th>\n                                        //                 <th scope=\"col\">Profile Name</th>\n                                        //                 <th scope=\"col\">Created At</th>\n                                        //                 <th scope=\"col\">Status</th>\n                                        //                 <th scope=\"col\">Action</th>\n                                        //             </tr>\n                                        //         </thead>\n                                        //         <tbody>\n                                        //             {this.createTr()}\n                                        //         </tbody>\n                                        //     </table>\n\n                                        // </div>\n\n                                    }\n\n                                    {this.state.showDelete &&\n                                        <div className=\"delete_popup\">\n                                            <h3>Are you sure ?</h3>\n                                            <span className=\"pointer dltbtn\" onClick={(e) => this.deletepopupClick(e)}>Delete</span>\n                                            <span className=\"pointer closebtn\" onClick={(e) => this.deletepopupclose(e)}>Close</span>\n                                        </div>\n                                    }\n                                </>\n                            }\n                        </>\n                    }\n\n\n\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Filterprofile;\n","import React, { Component } from 'react'\n\nexport default class Swap extends Component {\n    render() {\n        return (\n            <div className=\"text-center\" style={{height:'50%'}}>\n                Coming Soon...\n            </div>\n        )\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\nimport NumberFormat from 'react-number-format';\nimport { Collapse } from 'reactstrap';\nimport TableList from '../TableList'\nimport config from '../../constant/config.js';\nconst axios = require('axios');\nconst moment = require('moment');\n\n\n\nexport default function Calculating(props) {\n    const [isOpen, setIsOpen] = useState(true);\n    const toggle = () => setIsOpen(!isOpen);\n    const [isOpen2, setIsOpen2] = useState(true);\n    const [errormassage, setIErrormassage] = useState(false);\n    const toggle2 = () => setIsOpen2(!isOpen2);\n\n    const [fromAccountId, setFromAccountId] = useState(\"\");\n    const [toAccountId, setToAccountId] = useState(\"\");\n    const [fromOpenTrade, setFromOpenTrade] = useState([]);\n    const [toOpenTrade, setToOpenTrade] = useState([]);\n    const [fromHistoryTrade, setFromHistoryTrade] = useState([]);\n    const [toHistoryTrade, setToHistoryTrade] = useState([]);\n    const [commissionDetails, setCommissionDetails] = useState([]);\n    const [openTotal, setopenTotal] = useState();\n    const [historyTotal, sethistoryTotal] = useState();\n    const [totalOpenAndHistory, settotalOpenAndHistory] = useState();\n    const [commissionValue, setCommissionValue] = useState({});\n\n\n    useEffect(() => {\n        let fromAccountId;\n        let toAccountId;\n        let fromOpenTrade;\n        let toOpenTrade;\n        let fromHistoryTrade;\n        let toHistoryTrade;\n        let openTotal;\n        let historyTotal;\n        let commissionDetails;\n        axios.get(config.baseurl + '/whatamcalculating/calculatingOpenTrade')\n            .then(function (response) {\n                if (response.status == 200) {\n                    if (response.data.rows == 0) {\n                        setIErrormassage((!errormassage));\n\n                    }\n                    fromAccountId = response.data.rows.accountFromInfo[0];\n                    toAccountId = response.data.rows.accountToInfo[0];\n                    fromOpenTrade = response.data.fromOpenOrderInfo;\n                    toOpenTrade = response.data.toOpenOrderInfo;\n                    openTotal = response.data.totalOfOpenOrder;\n\n\n\n                    axios.get(config.baseurl + '/whatamcalculating/calculatingHistoryTrade')\n                        .then(function (response) {\n                            if (response.status == 200) {\n                                fromHistoryTrade = response.data.fromHistoryOrderInfo;\n                                toHistoryTrade = response.data.toHistoryOrderInfo;\n                                historyTotal = response.data.totalOfHistoryOrder;\n                                commissionDetails = response.data.newCommissionRecord\n                                console.log(response.data.newCommissionRecord, \"response.data.newCommissionRecord\");\n                                axios.get(config.baseurl + '/whatamcalculating/calculatingCommission')\n                                    .then(function (response) {\n                                        if (response.status == 200) {\n                                            // console.log(\"jhkfkjjkldwkjdwjkdwkbdwjhkwirvbwjh\");\n                                            setFromAccountId(fromAccountId);\n                                            setToAccountId(toAccountId);\n                                            setFromOpenTrade(fromOpenTrade);\n                                            setToOpenTrade(toOpenTrade);\n                                            setFromHistoryTrade(fromHistoryTrade);\n                                            setToHistoryTrade(toHistoryTrade);\n                                            setCommissionDetails(commissionDetails);\n                                            setopenTotal(openTotal);\n                                            sethistoryTotal(historyTotal);\n                                            settotalOpenAndHistory(historyTotal + openTotal + response.data.commission);\n                                            setCommissionValue(response.data);\n\n                                        }\n\n                                    })\n                                    .catch(function (error) {\n                                    });\n                            }\n                        })\n                        .catch(function (error) {\n                        });\n                }\n            })\n            .catch(function (error) {\n            });\n    }, []);\n\n    let total = { openTotal } + { historyTotal }\n\n\n    let openFromOrderTotal = 0;\n    function fromOpenTradeTr() {\n        let lotsTotal = 0;\n        // let open_Total = 0;\n        let comissionTotal = 0;\n        let profitTotal = 0;\n        let swapTotal = 0;\n        return fromOpenTrade.length > 0 && fromOpenTrade.map((item, index) => {\n            lotsTotal += item.lots;\n            comissionTotal += item.commission;\n            profitTotal += item.profit;\n            swapTotal += item.swap;\n            openFromOrderTotal = comissionTotal + profitTotal + swapTotal\n            // console.log(openOrderTotal,'openOrderTotal----------');\n            if (index == fromOpenTrade.length - 1) {\n                return (\n                    <><tr key={index} className=\"text-center\">\n                        <td>{item.symbol}</td>\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\n                        <td>{item.lots}</td>\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\n                        <td>{item.magic_number !== 0 ? item.magic_number : ''}</td>\n                        <td>{item.profit}</td>\n                    </tr>\n                        <tr className=\"text-center\" key={index + 1}>\n                            <td></td>\n                            <td></td>\n                            <td><b>{lotsTotal}</b></td>\n                            <td></td>\n                            <td><b>{comissionTotal}</b></td>\n                            <td><b>{swapTotal}</b></td>\n                            <td></td>\n                            <td><b>{profitTotal}</b></td>\n                        </tr>\n                    </>\n                )\n            } else {\n                return (\n                    <tr key={index} className=\"text-center\">\n                        <td>{item.symbol}</td>\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\n                        <td>{item.lots}</td>\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\n                        <td>{item.magic_number !== 0 ? item.magic_number : ''}</td>\n                        <td>{item.profit}</td>\n\n                    </tr>\n                )\n            }\n        })\n    }\n\n\n    let openFromHistoryTotal\n    function fromHistoryTradeTr() {\n        let lotsTotal = 0;\n        let comissionTotal = 0;\n        let profitTotal = 0;\n        let swapTotal = 0;\n\n        return fromHistoryTrade.length > 0 && fromHistoryTrade.map((item, index) => {\n            lotsTotal += item.lots;\n            comissionTotal += item.commission;\n            profitTotal += item.profit;\n            swapTotal += item.swap;\n            openFromHistoryTotal = comissionTotal + profitTotal + swapTotal\n            if (index == fromHistoryTrade.length - 1) {\n                return (\n                    <><tr key={index} className=\"text-center\">\n                        <td>{item.symbol}</td>\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\n                        <td>{item.lots}</td>\n                        {/* <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td> */}\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\n                        <td>{item.magic_number !== 0 ? item.magic_number : ''}</td>\n                        <td>{item.profit}</td>\n                    </tr>\n                        <tr className=\"text-center\" key={index + 1}>\n                            <td></td>\n                            <td></td>\n                            <td ><b>{lotsTotal}</b></td>\n                            <td><b>{comissionTotal}</b></td>\n                            <td><b>{swapTotal}</b></td>\n                            {/* <td></td> */}\n                            <td></td>\n                            <td><b>{profitTotal}</b></td>\n                        </tr>\n                    </>\n                )\n            } else {\n                return (\n                    <tr key={index} className=\"text-center\">\n                        <td>{item.symbol}</td>\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\n                        <td>{item.lots}</td>\n                        {/* <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td> */}\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\n                        <td>{item.magic_number !== 0 ? item.magic_number : ''}</td>\n                        <td>{item.profit}</td>\n                    </tr>\n                )\n            }\n        })\n    }\n\n    let openToOrderTotal\n    function toOpenTradeTr() {\n        let lotsTotal = 0;\n        let comissionTotal = 0;\n        let profitTotal = 0;\n        let swapTotal = 0;\n\n        return toOpenTrade.length > 0 && toOpenTrade.map((item, index) => {\n            lotsTotal += item.lots;\n            comissionTotal += item.commission;\n            profitTotal += item.profit;\n            swapTotal += item.swap;\n            openToOrderTotal = comissionTotal + profitTotal + swapTotal\n            if (index == toOpenTrade.length - 1) {\n                return (\n                    <><tr key={index} className=\"text-center\">\n                        <td>{item.symbol}</td>\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\n                        <td>{item.lots}</td>\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\n                        <td>{item.magic_number !== 0 ? item.magic_number : ''}</td>\n                        <td>{item.profit}</td>\n                    </tr>\n                        <tr className=\"text-center\" key={index + 1}>\n                            <td></td>\n                            <td></td>\n                            <td><b>{lotsTotal}</b></td>\n                            <td></td>\n                            <td><b>{comissionTotal}</b></td>\n                            <td><b>{swapTotal}</b></td>\n                            <td></td>\n                            <td><b>{profitTotal}</b></td>\n                        </tr>\n                    </>\n                )\n            } else {\n                return (\n                    <tr key={index} className=\"text-center\">\n                        <td>{item.symbol}</td>\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\n                        <td>{item.lots}</td>\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\n                        <td>{item.magic_number !== 0 ? item.magic_number : ''}</td>\n                        <td>{item.profit}</td>\n\n                    </tr>\n                )\n            }\n        })\n    }\n    let openToHistoryTotal\n    function toHistoryTradeTr() {\n        let lotsTotal = 0;\n        let comissionTotal = 0;\n        let profitTotal = 0;\n        let swapTotal = 0;\n\n        return toHistoryTrade.length > 0 && toHistoryTrade.map((item, index) => {\n            lotsTotal += item.lots;\n            comissionTotal += item.commission;\n            profitTotal += item.profit;\n            swapTotal += item.swap;\n            openToHistoryTotal = comissionTotal + profitTotal + swapTotal\n            if (index == toHistoryTrade.length - 1) {\n                return (\n                    <><tr key={index} className=\"text-center\">\n                        <td>{item.symbol}</td>\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\n                        <td>{item.lots}</td>\n                        {/* <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td> */}\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\n                        <td>{item.magic_number !== 0 ? item.magic_number : ''}</td>\n                        <td>{item.profit}</td>\n                    </tr>\n                        <tr className=\"text-center\" key={index + 1}>\n                            <td></td>\n                            <td></td>\n                            <td><b>{lotsTotal}</b></td>\n                            {/* <td></td> */}\n                            <td><b>{comissionTotal}</b></td>\n                            <td><b>{swapTotal}</b></td>\n                            <td></td>\n                            <td><b>{profitTotal}</b></td>\n                        </tr>\n                    </>\n                )\n            } else {\n                return (\n                    <tr key={index} className=\"text-center\">\n                        <td>{item.symbol}</td>\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\n                        <td>{item.lots}</td>\n                        {/* <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td> */}\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\n                        <td>{item.magic_number !== 0 ? item.magic_number : ''}</td>\n                        <td>{item.profit}</td>\n                    </tr>\n                )\n            }\n        })\n    }\n\n\n    // console.log(fromAccountId, toAccountId, fromOpenTrade, toOpenTrade, fromHistoryTrade, toHistoryTrade, commissionValue, 'commissionValue');\n    return (\n        <>\n            {errormassage ?\n                <div className=\"popup\">\n                    <div class=\"card w-75 \">\n                        <div class=\"card-body topmargin\">\n                            <div class=\" card-text popuptext\" role=\"alert\"> Please activate filter profile to view stats.\n                            ...\n                            </div>\n                        </div>\n                    </div>\n                </div> :\n                <>\n\n                    <div className=\"symbol-box shadoremove\">\n\n\n\n                        <div>\n                            <div className=\"symbol-box\">\n                                <div className=\"openpositions\" >\n                                    <span className=\"p-text\">Open Positions</span>\n                                    <span className=\"icon-style\" onClick={toggle} >\n                                        {isOpen ?\n                                            <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\n                                            :\n                                            <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n                                        }\n                                    </span>\n                                </div>\n                            </div>\n\n                            <Collapse isOpen={isOpen}>\n                                <div className=\"openOrder\">\n\n                                    <Row className=\"border-box\">\n                                        {fromOpenTrade && fromOpenTrade.length > 0 ? (\n                                            <Col md={12}>\n\n                                                <div className={'colorDarkBlue , boldText loginCenter'}>{fromAccountId.alias}</div>\n                                                <span className=\"text-center colorDarkBlue no-padding \"> {fromAccountId.login}</span>\n\n\n                                                <table class=\"table table-responsive table-bordered\">\n                                                    <thead>\n                                                        <tr className=\"text-center thUnset\">\n                                                            <th scope=\"col\">symbol</th>\n                                                            <th scope=\"col\">order type</th>\n                                                            <th scope=\"col\">lots</th>\n                                                            <th scope=\"col\">open_time</th>\n                                                            <th scope=\"col\">commission</th>\n                                                            <th scope=\"col\">swap</th>\n                                                            <th scope=\"col\">magic_number</th>\n                                                            <th scope=\"col\">profit</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        {fromOpenTradeTr()}\n                                                    </tbody>\n                                                </table>\n                                                <div className=\"text-center\"><b>Total {openFromOrderTotal}</b></div>\n                                            </Col>\n\n\n                                        ) : (\n                                                <Col md={12}>\n                                                    <div className=\"card change noRecordCol\"> No Record Found</div>\n                                                </Col>\n                                            )}\n\n\n\n                                    </Row>\n                                    <Row className=\"border-box\">\n                                        {toOpenTrade && toOpenTrade.length > 0 ? (\n\n                                            <Col md={12}>\n                                                <div className={'color2 , boldText loginCenter'}>{toAccountId.alias}</div>\n                                                <span className=\"text-center color2 no-padding\">{toAccountId.login}</span>\n\n                                                <table class=\"table table-responsive table-bordered\">\n                                                    <thead>\n                                                        <tr className=\"text-center thUnset\">\n                                                            <th scope=\"col\">symbol</th>\n                                                            <th scope=\"col\">order type</th>\n                                                            <th scope=\"col\">lots</th>\n                                                            <th scope=\"col\">open_time</th>\n                                                            <th scope=\"col\">commission</th>\n                                                            <th scope=\"col\">swap</th>\n                                                            <th scope=\"col\">magic_number</th>\n                                                            <th scope=\"col\">profit</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        {toOpenTradeTr()}\n                                                    </tbody>\n                                                </table>\n                                                <div className=\"text-center\"><b>Total {openToOrderTotal}</b></div>\n                                            </Col>\n\n\n                                        ) : (\n                                                <Col md={12}>\n                                                    <div className=\"card change noRecordCol\"> No Record Found</div>\n                                                </Col>\n                                            )}\n\n                                    </Row>\n                                </div>\n                            </Collapse>\n                        </div>\n\n                        <div className=\"symbol-box topSet\" >\n                            <div className=\"openpositions\" >\n                                <span className=\"p-text\">Closed Positions</span>\n                                <span className=\"icon-style\" onClick={toggle2} >\n                                    {isOpen2 ?\n                                        <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\n                                        :\n                                        <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n                                    }\n                                </span>\n                            </div>\n                        </div>\n                        <div>\n                            <Collapse isOpen={isOpen2}>\n\n                                <div className=\"openOrder\">\n\n                                    {fromHistoryTrade.length > 0 || toHistoryTrade.length > 0 ? (\n                                        <div>\n                                            <Row className=\"border-box\">\n                                                {fromHistoryTrade && fromHistoryTrade.length > 0 ? (\n                                                    <Col md={12}>\n                                                        <div className={'colorDarkBlue , boldText loginCenter'}>{fromAccountId.alias}</div>\n                                                        <span className=\"text-center colorDarkBlue no-padding\">{fromAccountId.login}</span>\n                                                        <table class=\"table table-responsive table-bordered\">\n                                                            <thead>\n                                                                <tr className=\"text-center thUnset\">\n                                                                    <th scope=\"col\">symbol</th>\n                                                                    <th scope=\"col\">order type</th>\n                                                                    <th scope=\"col\">lots</th>\n                                                                    {/* <th scope=\"col\">open_time</th> */}\n                                                                    <th scope=\"col\">commission</th>\n                                                                    <th scope=\"col\">swap</th>\n                                                                    <th scope=\"col\">magic_number</th>\n                                                                    <th scope=\"col\">profit</th>\n                                                                </tr>\n                                                            </thead>\n                                                            <tbody>\n                                                                {fromHistoryTradeTr()}\n                                                            </tbody>\n                                                        </table>\n                                                        <div className=\"text-center\"><b>Total {openFromHistoryTotal}</b></div>\n\n                                                    </Col>\n\n\n                                                ) : (\n                                                        <Col md={12}>\n                                                            <div className=\"card change noRecordCol\"> No Record Found</div>\n                                                        </Col>\n                                                    )}\n\n                                            </Row>\n\n                                            <Row className=\"border-box\">\n                                                {toHistoryTrade && toHistoryTrade.length > 0 ? (\n                                                    <Col md={12}>\n                                                        <div className={'color2 , boldText loginCenter'}>{toAccountId.alias}</div>\n                                                        <span className=\"text-center color2 no-padding\">{toAccountId.login}</span>\n\n                                                        <table class=\"table table-responsive table-bordered\">\n                                                            <thead>\n                                                                <tr className=\"text-center thUnset\">\n                                                                    <th scope=\"col\">symbol</th>\n                                                                    <th scope=\"col\">order type</th>\n                                                                    <th scope=\"col\">lots</th>\n                                                                    {/* <th scope=\"col\">open_time</th> */}\n                                                                    <th scope=\"col\">commission</th>\n                                                                    <th scope=\"col\">swap</th>\n                                                                    <th scope=\"col\">magic_number</th>\n                                                                    <th scope=\"col\">profit</th>\n                                                                </tr>\n                                                            </thead>\n                                                            <tbody>\n                                                                {toHistoryTradeTr()}\n\n                                                            </tbody>\n                                                        </table>\n                                                        <div className=\"text-center\"><b>Total {openToHistoryTotal}</b></div>\n\n                                                    </Col>\n\n                                                ) : (\n                                                        <Col md={12}>\n                                                            <div className=\"card change noRecordCol\"> No Record Found</div>\n                                                        </Col>\n                                                    )}\n                                            </Row>\n                                        </div>\n\n                                    ) : (\n                                            <Col md={12}>\n                                                <div className=\"card change noRecordCol\"> No Record Found</div>\n                                            </Col>\n                                        )}\n                                    <Row>\n                                        {commissionValue && commissionValue.commission_acount_id > 0 && (\n                                            <div className=\"card \">\n                                                <div className=\"header ptheader\">\n                                                    <h4 className=\"text-center bText1\"><b>Commission</b></h4>\n                                                    {/* <h4 className=\"text-center\">{commissionDetails[0].login}</h4> */}\n\n                                                    <div className=\"row\">\n                                                        <div className=\"col-md-4 text-center\">\n                                                            <h4 className=\"bText\"> Balance {' '}</h4>\n                                                            <NumberFormat value={commissionValue.totalProfit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                                        </div>\n                                                        <div className=\"col-md-4 text-center\">\n                                                            <h4 className=\"bText\"> Equity  </h4><NumberFormat displayType={'text'} thousandSeparator={true} decimalScale={2} /><span>{commissionValue.equity}</span>\n\n                                                        </div>\n                                                        <div className=\"col-md-4 text-center\">\n                                                            <h4 className=\"bText\"> Order Type  </h4>\n                                                            <span>6</span>\n\n                                                        </div>\n\n                                                        <div className=\"col-md-12 text-center\">\n                                                            <h4><b>Total</b>  </h4><NumberFormat value={commissionValue.commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        )}\n\n                                    </Row>\n                                </div>\n                            </Collapse>\n\n                        </div>\n\n                        {/* <div className=\"symbol-box  topSet \" >\n                            <div className=\"text-center\" >\n                                <span className=\"  summrayAdjust \" style={{ fontWeight: 600, color: \"#797979\" }}>Summary</span>\n                                <h5 style={{ fontWeight: 600, color: \"#797979\" }}> Open Positions + Closed Positions {commissionValue.commission_acount_id > 0 && (<span> + Commission</span>)}</h5>\n                                <h5 className=\"bText\">\n                                    <NumberFormat value={totalOpenAndHistory} displayType={'text'} thousandSeparator={true} decimalScale={2} ></NumberFormat></h5>\n                            </div>\n\n                        </div> */}\n                    </div>\n                    <Grid fluid>\n\n                        <Row>\n                            <Col md={12} sm={6}>\n                                <div className=\"terminal-box\">\n                                    <span className=\"terminal-text\">Statistics Per Symbol</span>\n                                </div>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <TableList />\n                        </Row>\n                    </Grid>\n                </>\n\n            }\n        </>\n\n    )\n\n}\n\n","import React, { Component } from 'react'\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\n\nexport default class Exploser extends Component {\n    render() {\n        return (\n            <div className=\"boxFix\">\n                <Row>\n                    <Col md={6}>\n                        <div className=\"card \">\n\n                            <div className=\"header\">\n\n                                <h6 className={'colorDarkBlue , loginCenter'}>Account - A</h6>\n                            </div>\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                <table className=\"table\">\n                                    <tbody>\n\n                                        <tr><td>Symbol </td>\n                                            <td className=\"td-actions text-right\">Symbol\n\n                                            </td>\n                                        </tr>\n                                        <tr><td>Lots </td>\n                                            <td className=\"td-actions text-right\">Lots\n                                            </td>\n                                        </tr>\n                                        <tr><td>BUY/SELL </td>\n                                            <td className=\"td-actions text-right\">Buy/Sell\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>Contract Size </td>\n                                            <td className=\"td-actions text-right\">Size\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>Exploser </td>\n                                            <td className=\"td-actions text-right\">Exploser Total\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                            </div>\n                        </div>\n                    </Col>\n\n\n                    <Col md={6}>\n                        <div className=\"card \">\n\n                            <div className=\"header\">\n\n                                <h6 className={'colorDarkBlue , loginCenter'}>Account - B</h6>\n                            </div>\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                <table className=\"table\">\n                                    <tbody>\n\n                                        <tr><td>Symbol </td>\n                                            <td className=\"td-actions text-right\">Symbol\n\n                                            </td>\n                                        </tr>\n                                        <tr><td>Lots </td>\n                                            <td className=\"td-actions text-right\">Lots\n                                            </td>\n                                        </tr>\n                                        <tr><td>BUY/SELL </td>\n                                            <td className=\"td-actions text-right\">Sell\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>Contract Size </td>\n                                            <td className=\"td-actions text-right\">Size\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>Exploser </td>\n                                            <td className=\"td-actions text-right\">Total\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                            </div>\n                        </div>\n                    </Col>\n\n\n                </Row>\n            </div>\n\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport NumberFormat from 'react-number-format';\nimport config from '../../constant/config';\nimport Data from '../Data';\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport './ContractSize.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Loader from 'react-loader-spinner'\nconst axios = require('axios');\nexport default class ContractSize extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            fromAccounts: '',\n            fromSymbol: '',\n            toAccounts: '',\n            toSymbol: '',\n            fromOpenOrderInfos: '',\n            toOpenOrderInfos: '',\n            total: '',\n            totalTo: '',\n            blockloader: true,\n            selectedOption: null,\n            allHistoryRecord: [],\n            allOpenRecord: [],\n            fromHistoryOrderInfo: [],\n            toHistoryOrderInfo: [],\n            commissionHistoryOrderInfo: [],\n            fromOpenOrderInfo: [],\n            toOpenOrderInfo: [],\n            filterlist: [],\n            loading: true,\n\n        }\n    }\n\n    componentDidMount() {\n        this.fetchStatusData();\n        this.fetchAllHIstoryTrade();\n    }\n\n    fetchStatusData = () => {\n        let self = this;\n        let tottal = 0;\n        axios.get(config.baseurl + '/accounts/fetchStatusData')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({loading:false})\n                    self.setState({ fromAccounts: response.data.fromAccounts })\n                    self.setState({ fromSymbol: response.data.fromSymbol })\n                    // console.log(fromSymbol,\"fromSymbol\");\n                    self.setState({ toAccounts: response.data.toAccounts })\n                    self.setState({ toSymbol: response.data.toSymbol })\n                    self.setState({ fromOpenOrderInfos: response.data.fromOpenOrderInfos[0] })\n                    if (response.data.fromOpenOrderInfos.length > 0) {\n                        self.setState({ blockloader: false })\n                        if (response.data.fromOpenOrderInfos[0].order_type == 0) {\n                            self.setState({ total: response.data.fromSymbol.contract_size * (response.data.fromOpenOrderInfos[0].lots) })\n                        } else {\n                            self.setState({ total: response.data.fromSymbol.contract_size * -(response.data.fromOpenOrderInfos[0].lots) })\n                        }\n\n                        self.setState({ toOpenOrderInfos: response.data.toOpenOrderInfos[0] })\n                    }\n                    if (response.data.toOpenOrderInfos.length > 0) {\n                        if (response.data.toOpenOrderInfos[0].order_type == 0) {\n                            self.setState({ totalTo: response.data.toSymbol.contract_size * (response.data.toOpenOrderInfos[0].lots) })\n                        } else {\n                            self.setState({ totalTo: response.data.toSymbol.contract_size * -(response.data.toOpenOrderInfos[0].lots) })\n                        }\n                    }\n\n                }\n            });\n    }\n    fetchAllHIstoryTrade = () => {\n        let self = this;\n        axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\n            .then(function (response) {\n                // console.log(response.data, 'response.data his')\n                if (response.status == 200) {\n                    // self.setState({ allHistoryRecord: response.data.rows })\n                    self.setState({\n                        allHistoryRecord: response.data.rows,\n                        fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,\n                        toHistoryOrderInfo: response.data.toHistoryOrderInfo,\n                        commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\n                    })\n                }\n            })\n        // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\n        // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\n        axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\n            .then(function (response) {\n                if (response.status == 200) {\n\n                    // self.setState({ allOpenRecord: response.data.rows })\n                    self.setState({\n                        allOpenRecord: response.data.rows,\n                        fromOpenOrderInfo: response.data.fromOpenOrderInfo,\n                        toOpenOrderInfo: response.data.toOpenOrderInfo\n                    })\n                }\n            })\n    }\n\n    render() {\n\n        const { allHistoryRecord, allOpenRecord, selectedOption, toOpenOrderInfo, fromOpenOrderInfo, fromHistoryOrderInfo, commissionHistoryOrderInfo, toHistoryOrderInfo } = this.state;\n        //   const sumOfOpenTotal = allOpenRecord.reduce((current, data) => {\n        //     return (Math.floor(data.commission + data.swap + data.profit+ current));\n        // }, 0);\n\n        //   const sumOfHistoryTotal = allHistoryRecord.reduce((current, data) => {\n        //     return (data.profit + current);\n        // }, 0);\n        let uniqueSymbols = \"\";\n        if (allOpenRecord && Object.entries(allOpenRecord).length > 0) {\n            let fromSymbols = JSON.parse(allOpenRecord.from_symbols);\n            // fromSymbols = (fromSymbols).map(data => data).join(', ');\n            let toSymbols = JSON.parse(allOpenRecord.to_symbols);\n            let combineSymbols = fromSymbols.concat(toSymbols);\n            uniqueSymbols = combineSymbols.filter((item, i, ar) => ar.indexOf(item) === i);\n            uniqueSymbols = (uniqueSymbols).map(data => data).join(', ')\n        }\n        let fromsum = 0;\n        let tosum = 0;\n        // if(fromHistoryOrderInfo && commissionHistoryOrderInfo && fromHistoryOrderInfo.length>0){\n        if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\n            fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\n        }\n\n        if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\n            tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\n        }\n\n        let sumOfHistoryTotal = tosum + fromsum;\n\n        let openfromsum = 0;\n        let opentosum = 0;\n        if ((fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total != null)) {\n            // if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\n            //   openfromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\n            // }else{\n            openfromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\n\n        }\n        if ((toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total != null)) {\n            // if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\n            //   opentosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit+ toOpenOrderInfo[0].swap);\n            // }\n\n            // else{\n            //   opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n            // }\n            opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n        }\n\n        let sumOfOpenTotal = opentosum + openfromsum;\n\n        //   console.log(opentosum, 'opentosum')\n        //   console.log(openfromsum, 'openfromsum')\n        //  console.log(sumOfHistoryTotal, \"sumOfHistoryTotal------\");\n        //  console.log(sumOfOpenTotal, \"sumOfOpenTotal-----\");\n        //  console.log(allOpenRecord, 'allOpenRecord')\n\n\n\n        return (\n            <React.Fragment>\n                <div className=\"contractSize-wrapper\">\n                    <div className=\" leftset card \">\n                        {this.state.loading ? <Loader\n                            type=\"ThreeDots\"\n                            color=\"black\"\n                            height={100}\n                            width={100}\n                            style={{textAlign:'center'}}\n\n\n                        />\n                            :\n                            <Row>\n                                <h4 className=\"text-center \"><b>Exposure</b></h4>\n                                {this.state.fromOpenOrderInfos.order_type !== null && this.state.toOpenOrderInfos.order_type !== null ? <>         {this.state.fromOpenOrderInfos.order_type !== null ?\n                                    <Col md={4}>\n                                        <div className=\"card\">\n                                            <div className={'colorDarkBlue , boldText loginCenter'}>{this.state.fromAccounts.alias}</div>\n\n                                            <h6 className={'colorDarkBlue loginCenter'}>{this.state.fromAccounts.login}</h6>\n\n                                            <div className=\"content table-full-width \"><div className=\"table-responsive\">\n                                                <div className=\"text-center\">\n                                                    <span >{this.state.fromSymbol.name}\n\n                                                    </span>\n                                                    {(this.state.fromOpenOrderInfos !== '' && this.state.fromOpenOrderInfos.order_type !== null) && <span className=\"td-actions bText, clearBorder\" style={{ display: 'block' }}>\n                                                        {this.state.fromOpenOrderInfos.order_type == 0 ? 'BUY ' : 'SELL '}\n\n                                                        {this.state.fromOpenOrderInfos.lots} {(this.state.fromOpenOrderInfos.lots > 1) ? 'Lots' : 'Lot'}\n                                                    </span>}\n                                                </div><br></br>\n                                                <div className=\"text-center\">\n                                                    <span className=\"td-actions clearBorder text-right\">\n                                                        <NumberFormat value={this.state.total} displayType={'text'} thousandSeparator={true} decimalScale={2} />   {this.state.fromSymbol.margin_currency}\n\n                                                    </span>\n                                                </div>\n\n                                            </div>\n                                            </div>\n                                        </div>\n\n                                    </Col>\n                                    :\n                                    <Col md={4}>\n                                        <div className=\"card change noRecordCol\"> No Record Found</div>\n                                    </Col>\n                                }\n                                    <Col md={4}>\n                                        <div className=\"card\">\n\n                                            <h5 className=\"  text-center adjustMent\" > {this.state.total != 0 && this.state.totalTo != 0 && (this.state.total + this.state.totalTo != 0) ? <b>  Exposure</b> : <span style={{ color: \"green\" }}><b > No Exposure</b></span>}\n                                            </h5>\n                                            {this.state.total != 0 && this.state.totalTo != 0 && (this.state.total + this.state.totalTo != 0) &&\n                                                <div style={{ color: '#b70606' }} className=\" setBottom bText text-center\">\n                                                    <NumberFormat\n                                                        value={this.state.total + this.state.totalTo} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                                </div>\n\n                                            }\n                                        </div>\n\n                                    </Col>\n                                    {this.state.toOpenOrderInfos.order_type !== null ? <Col md={4}>\n                                        <div className=\" leftset1 card\">\n                                            <div className={'color2 , boldText loginCenter'}>{this.state.toAccounts.alias}</div>\n\n                                            <h6 className={'color2 ,bText, loginCenter'}>{this.state.toAccounts.login}</h6>\n\n                                            <div className=\"content table-full-width \"><div className=\"table-responsive\">\n\n\n                                                <div className=\"text-center\">\n                                                    <span className=\"td-actions bText, clearBorder text-right\">{this.state.toSymbol.name}\n\n                                                    </span>\n                                                    {(this.state.toOpenOrderInfos !== '' && this.state.toOpenOrderInfos.order_type !== null) && <span className=\"td-actions bText, clearBorder\" style={{ display: 'block' }}>\n                                                        {this.state.toOpenOrderInfos.order_type == 0 ? 'BUY ' : 'SELL '}\n                                                        {this.state.toOpenOrderInfos.lots} {(this.state.toOpenOrderInfos.lots > 1) ? 'Lots' : 'Lot'}</span>}\n                                                </div><br></br>\n                                                <div className=\"text-center\">\n                                                    <span >\n                                                        <NumberFormat value={this.state.totalTo} displayType={'text'} thousandSeparator={true} decimalScale={2} />   {this.state.toSymbol.margin_currency}\n\n                                                    </span>\n                                                </div>\n\n                                            </div>\n                                            </div>\n                                        </div>\n\n                                    </Col>\n                                        :\n                                        <Col md={4}>\n                                            <div className=\"card change noRecordCol\"> No Record Found</div>\n                                        </Col>}\n\n                                </> :\n                                    <Col md={12}>\n                                        <div className=\"card change noRecordCol\"> No Record Found</div>\n                                    </Col>}\n\n                            </Row>}\n                        <Col md={12} sm={6}>\n                            <div className={sumOfHistoryTotal + sumOfOpenTotal >= 0 ? \"summary-box\" : \"summary-box-red\"}>\n\n\n                                {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\n                                {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\n                <span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\n\n                                <Col md={12} sm={12}>\n                                    <div className=\"summary-text text-center\" style={{ fontWeight: 600, color: \"#797979\" }}>Summary For ({uniqueSymbols}) {allHistoryRecord.history_info !== 0 && (<span> + Commission</span>)} </div>\n                                </Col>\n                                <Col md={12} sm={12}>\n                                    <div className=\"text-center\" style={{ fontWeight: 'bold', fontSize: \"18px\" }}>$ {' '}\n                                        <NumberFormat value={allHistoryRecord.history_info !== undefined ? sumOfHistoryTotal + sumOfOpenTotal + allHistoryRecord.history_info : sumOfHistoryTotal + sumOfOpenTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n\n                                        {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\n\n                                    </div>\n                                </Col>\n\n                                <div className=\"clearfix\"></div>\n                            </div>\n                        </Col>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport NumberFormat from 'react-number-format';\nimport config from '../../constant/config';\nimport Data from '../Data';\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport './Statistics.css'\nconst axios = require('axios');\nexport default class Statistics extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n\n            filterlist: [],\n            selectedOption: null,\n            allHistoryRecord: [],\n            allOpenRecord: [],\n            fromHistoryOrderInfo: [],\n            toHistoryOrderInfo: [],\n            commissionHistoryOrderInfo: [],\n            fromOpenOrderInfo: [],\n        }\n    }\n    componentDidMount() {\n        this.fetchActivefilterData();\n        this.fetchAllHIstoryTrade();\n\n\n    }\n    fetchActivefilterData = () => {\n        let self = this;\n        axios.get(config.baseurl + '/filter/fetchActivefilterdata')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ filterlist: response.data.rows })\n                    // console.log(response.data.rows.accountFromInfo,\"filterlist----------------------\");\n\n                    if (self.state.filterlist.length == 0) {\n                        self.setState({ errorMassege: true })\n                    }\n                }\n            });\n    }\n\n    showData = (accountDetailValue) => {\n\n        return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\n            if (accountDetailValue === 'margin_level') {\n                return (\n                    <>\n                        <td className=\"tdClr2 tdClr boldText\" key={index}>\n                            <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\n                </td>\n                        <td className=\"tdClr2 boldText\" key={index}>\n                            {/* {item.accountToInfo[0].accounts_details[0][accountDetailValue]} % */}\n                            <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\n                </td>\n                    </>\n                )\n            }\n            if (item.accountFromInfo.length > 0) {\n                return (\n                    <>\n                        <td className=\"tdClr2 tdClr boldText\" key={index}>\n                            {item.accountFromInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''}  {' '}\n                            <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                        </td>\n\n                        <td className=\"tdClr2 boldText\" key={index}>\n                            {item.accountToInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''} {' '}\n                            {/* {item.accountToInfo[0].accounts_details[0][accountDetailValue]} */}\n                            <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                        </td>\n                    </>\n                )\n\n            }\n\n        })\n    }\n    tableHeader = () => {\n\n        // return this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => {\n        //   return (\n        //     <th key={index} className={item.accounts_details[0].account_id == 1 && index !== (this.state.accountlist.length - 1) ? 'bText colorDarkBlue text-center tdClr2 tdClr' : 'bText colorDarkBlue text-center tdClr2'}>\n        //       <span>\n        //         {item.login}\n        //       </span>\n        //     <div className=\"colorDarkBlue\" style={{fontSize:10}}> \n        //       ({(item.alias!=null) ? item.alias : '-'})\n        //     </div>\n        //     </th>\n\n        //   )\n        // }\n        // )\n        return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\n            return (\n                <>\n                    <th key={index} className=\"bText colorDarkBlue text-center tdClr2 tdClr\">\n                        <div className=\"colorDarkBlue\" >\n                            {(item.accountFromInfo[0].alias != null) ? item.accountFromInfo[0].alias : '-'}\n                        </div>\n                        <span style={{ fontSize: 10 }}>\n                            {item.accountFromInfo[0].login}\n                        </span>\n\n                    </th>\n                    <th key={index} className=\"bText color2 text-center tdClr2\">\n                        <div className=\"color2\" >\n                            {(item.accountToInfo[0].alias != null) ? item.accountToInfo[0].alias : '-'}\n                        </div>\n                        <span style={{ fontSize: 10 }}>\n                            {item.accountToInfo[0].login}\n                        </span>\n\n                    </th>\n                </>\n\n            )\n\n        })\n    }\n    fetchAllHIstoryTrade = () => {\n        let self = this;\n        axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\n            .then(function (response) {\n                // console.log(response.data, 'response.data his')\n                if (response.status == 200) {\n                    // self.setState({ allHistoryRecord: response.data.rows })\n                    self.setState({\n                        allHistoryRecord: response.data.rows,\n                        fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,\n                        toHistoryOrderInfo: response.data.toHistoryOrderInfo,\n                        commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\n                    })\n                }\n            })\n        // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\n        // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\n        axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\n            .then(function (response) {\n                if (response.status == 200) {\n\n                    // self.setState({ allOpenRecord: response.data.rows })\n                    self.setState({\n                        allOpenRecord: response.data.rows,\n                        fromOpenOrderInfo: response.data.fromOpenOrderInfo,\n                        toOpenOrderInfo: response.data.toOpenOrderInfo\n                    })\n                }\n            })\n    }\n    render() {\n        const { allHistoryRecord, allOpenRecord, selectedOption, toOpenOrderInfo, fromOpenOrderInfo, fromHistoryOrderInfo, commissionHistoryOrderInfo, toHistoryOrderInfo } = this.state;\n        //   const sumOfOpenTotal = allOpenRecord.reduce((current, data) => {\n        //     return (Math.floor(data.commission + data.swap + data.profit+ current));\n        // }, 0);\n\n        //   const sumOfHistoryTotal = allHistoryRecord.reduce((current, data) => {\n        //     return (data.profit + current);\n        // }, 0);\n        let uniqueSymbols = \"\";\n        if (allOpenRecord && Object.entries(allOpenRecord).length > 0) {\n            let fromSymbols = JSON.parse(allOpenRecord.from_symbols);\n            // fromSymbols = (fromSymbols).map(data => data).join(', ');\n            let toSymbols = JSON.parse(allOpenRecord.to_symbols);\n            let combineSymbols = fromSymbols.concat(toSymbols);\n            uniqueSymbols = combineSymbols.filter((item, i, ar) => ar.indexOf(item) === i);\n            uniqueSymbols = (uniqueSymbols).map(data => data).join(', ')\n        }\n        let fromsum = 0;\n        let tosum = 0;\n        // if(fromHistoryOrderInfo && commissionHistoryOrderInfo && fromHistoryOrderInfo.length>0){\n        if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\n            fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\n        }\n\n        if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\n            tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\n        }\n\n        let sumOfHistoryTotal = tosum + fromsum;\n\n        let openfromsum = 0;\n        let opentosum = 0;\n        if ((fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total != null)) {\n            // if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\n            //   openfromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\n            // }else{\n            openfromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\n\n        }\n        if ((toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total != null)) {\n            // if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\n            //   opentosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit+ toOpenOrderInfo[0].swap);\n            // }\n\n            // else{\n            //   opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n            // }\n            opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n        }\n\n        let sumOfOpenTotal = opentosum + openfromsum;\n\n        //   console.log(opentosum, 'opentosum')\n        //   console.log(openfromsum, 'openfromsum')\n        //  console.log(sumOfHistoryTotal, \"sumOfHistoryTotal------\");\n        //  console.log(sumOfOpenTotal, \"sumOfOpenTotal-----\");\n        //  console.log(allOpenRecord, 'allOpenRecord')\n\n\n\n        return (\n            <React.Fragment>\n                <div className=\"statistic-wrapper\">\n                    <Grid fluid>\n                        <div className=\"terminal-box\">\n                            {(this.state.errorMassege) && <p style={{ color: 'red', fontSize: '10px' }}>Please Select Any Account</p>}\n                            <span className=\"terminal-text\">Terminal Statistics</span>\n                        </div>\n                        <Row noGutters={true}>\n                            {Data.dashBoardPage.items.map((item, index) =>\n\n                                <Col md={4} sm={6} key={index}>\n                                    <div style={{ margin: '30px 0px' }} className=\"text-center\">\n                                        <span className=\"bText\">{item.title}</span>\n                                    </div>\n                                    <div className=\"balance-box Pmargin\"\n                                    // className={item.id == '1' ? 'balance-box' : item.id == '2' ?\n                                    //   'balance-box Pmargin' : item.id == '3' ? 'balance-box equity-box' :\n                                    //     item.id == '4' ? 'balance-box Fmargin' : item.id == '5' ? 'balance-box floating' : 'balance-box  margin-box'}\n                                    >\n                                        <div className=\"content\">\n                                            <div className=\"table-responsive\">\n\n                                                <table className=\"table  text-center\">\n\n                                                    <tbody>\n                                                        <tr>\n                                                            {this.tableHeader()}\n                                                        </tr>\n                                                        <tr>\n                                                            {item.title == 'Balance' && this.showData('balance')}\n                                                            {item.title == 'Equity' && this.showData('equity')}\n                                                            {item.title == 'Margin' && this.showData('margin')}\n                                                            {item.title == 'Free Margin' && this.showData('free_margin')}\n                                                            {item.title == 'Margin %' && this.showData('margin_level')}\n                                                            {item.title == 'Floating P/L' && this.showData('profit')}\n                                                        </tr>\n                                                    </tbody>\n                                                </table>\n\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Col>\n\n                            )}\n                        </Row>\n                        <Col md={12} sm={6}>\n                            <div className={sumOfHistoryTotal + sumOfOpenTotal >= 0 ? \"summary-box\" : \"summary-box-red\"}>\n\n\n                                {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\n                                {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\n                <span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\n\n                                <Col md={12} sm={12}>\n                                    <div className=\"summary-text text-center\" style={{ fontWeight: 600, color: \"#797979\" }}>Summary For ({uniqueSymbols}) {allHistoryRecord.history_info !== 0 && (<span> + Commission</span>)} </div>\n                                </Col>\n                                <Col md={12} sm={12}>\n                                    <div className=\"text-center\" style={{ fontWeight: 'bold', fontSize: \"18px\" }}>$ {' '}\n                                        <NumberFormat value={allHistoryRecord.history_info !== undefined ? sumOfHistoryTotal + sumOfOpenTotal + allHistoryRecord.history_info : sumOfHistoryTotal + sumOfOpenTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n\n                                        {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\n\n                                    </div>\n                                </Col>\n\n                                <div className=\"clearfix\"></div>\n                            </div>\n                        </Col>\n                    </Grid>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n","import Dashboard from \"views/Dashboard.jsx\";\n// import UserProfile from \"views/UserProfile.jsx\";\n// import TableList from \"views/TableList.jsx\";\n// import Typography from \"views/Typography.jsx\";\n// import Icons from \"views/Icons.jsx\";\n// import Maps from \"views/Maps.jsx\";\n// import Notifications from \"views/Notifications.jsx\";\n// import Upgrade from \"views/Upgrade.jsx\";\n// import Filter from '../src/views/Filter';\nimport Innerlogin from 'views/Innerlogin';\nimport Filterprofile from './views/filter/Filterprofile';\nimport Swap from '../src/views/swap';\nimport calculating from '../src/views/calculating';\nimport Exploser from '../src/views/exploser';\nimport ContractSize from './views/ContractSize/ContractSize';\nimport Statistics from './views/Statistics/Statistics';\nconst dashboardRoutes = [\n  {\n    id: 1,\n    child: false,\n    menu: false,\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"pe-7s-graph\",\n    component: Dashboard,\n    layout: \"/dashboard\",\n  },\n\n\n\n\n  {\n    id: 2,\n    child: false,\n    menu: false,\n    path: \"/calculating\",\n    name: \" Profile Positions\",\n    icon: \"pe-7s-calculator\",\n    component: calculating,\n    layout: \"/dashboard\",\n  },\n  {\n    id: 3,\n    child: false,\n    menu: false,\n    path: \"/contractSize\",\n    name: \" Contract Size Exposure\",\n    icon: \"pe-7s-search\",\n    component: ContractSize,\n    // component: calculating,\n    layout: \"/dashboard\",\n  },\n  {\n    id: 4,\n    child: false,\n    menu: false,\n    path: \"/Statistics\",\n    name: \" Statistics\",\n    icon: \"pe-7s-filter\",\n    component: Statistics,\n    layout: \"/dashboard\",\n  },\n\n\n  // {\n  //   path: \"/exploser\",\n  //   name: \"Exploser\",\n  //   icon: \"pe-7s-search\",\n  //   component: Exploser,\n  //   layout: \"/admin\"\n  // },\n\n\n  {\n    id: 5,\n    child: true,\n    menu: false,\n    // path: \"/innerlogin\",\n    name: \"Settings\",\n    // component: Innerlogin,\n    icon: \"pe-7s-note2\",\n    // layout: \"/admin\",\n\n\n    resources: [\n      {\n\n        path: \"/settings/innerlogin\",\n        name: \"Login/Accounts\",\n        icon: \"pe-7s-note2\",\n        component: Innerlogin,\n        layout: \"/dashboard\"\n      },\n\n\n      {\n\n        path: \"/settings/filterpage\",\n        name: \"Filter\",\n        icon: \"pe-7s-filter\",\n        component: Filterprofile,\n        layout: \"/dashboard\"\n      },\n\n\n      {\n\n        path: \"/settings/swap\",\n        name: \"Swap\",\n        icon: \"pe-7s-graph\",\n        component: Swap,\n        layout: \"/dashboard\",\n      },\n    ]\n  },\n\n  // {\n  //   path: \"/typography\",\n  //   name: \"Typography\",\n  //   icon: \"pe-7s-news-paper\",\n  //   component: Typography,\n  //   layout: \"/dashboard\"\n  // },\n  // {\n  //   path: \"/icons\",\n  //   name: \"Icons\",\n  //   icon: \"pe-7s-science\",\n  //   component: Icons,\n  //   layout: \"/dashboard\"\n  // },\n  // {\n  //   path: \"/maps\",\n  //   name: \"Maps\",\n  //   icon: \"pe-7s-map-marker\",\n  //   component: Maps,\n  //   layout: \"/dashboard\"\n  // },\n  // {\n  //   path: \"/notifications\",\n  //   name: \"Notifications\",\n  //   icon: \"pe-7s-bell\",\n  //   component: Notifications,\n  //   layout: \"/dashboard\"\n  // },\n  // {\n  //   upgrade: true,\n  //   path: \"/upgrade\",\n  //   name: \"Upgrade to PRO\",\n  //   icon: \"pe-7s-rocket\",\n  //   component: Upgrade,\n  //   layout: \"/dashboard\"\n  // }\n];\n\nexport default dashboardRoutes;\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport NotificationSystem from \"react-notification-system\";\n\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\n// import Footer from \"components/Footer/Footer\";\nimport Sidebar from \"components/Sidebar/Sidebar\";\n// import FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\n\nimport { style } from \"variables/Variables.jsx\";\n\nimport routes from \"routes.js\";\n\nimport image from \"assets/img/sidebar-3.jpg\";\n\nclass Admin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      _notificationSystem: null,\n      image: image,\n      color: \"black\",\n      hasImage: true,\n      fixedClasses: \"dropdown show-dropdown open\"\n    };\n  }\n  // handleNotificationClick = position => {\n  //   var color = Math.floor(Math.random() * 4 + 1);\n  //   var level;\n  //   switch (color) {\n  //     case 1:\n  //       level = \"success\";\n  //       break;\n  //     case 2:\n  //       level = \"warning\";\n  //       break;\n  //     case 3:\n  //       level = \"error\";\n  //       break;\n  //     case 4:\n  //       level = \"info\";\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  //   this.state._notificationSystem.addNotification({\n  //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n  //     message: (\n  //       <div>\n  //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n  //         every web developer.\n  //       </div>\n  //     ),\n  //     level: level,\n  //     position: position,\n  //     autoDismiss: 15\n  //   });\n  // };\n  getRoutes = routes => {\n    let routeArray = []\n    routes.map((data) => {\n      routeArray.push(data)\n      if (data.child === true) {\n        data.resources.map((prop) => {\n          routeArray.push(prop)\n        })\n      }\n    })\n    return routeArray.map((prop, key) => {\n      if (prop.layout === \"/dashboard\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            render={props => (\n              <prop.component\n                {...props}\n                handleClick={this.handleNotificationClick}\n              />\n            )}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    // return \"Brand\";\n  };\n  handleImageClick = image => {\n    this.setState({ image: image });\n  };\n  handleColorClick = color => {\n    this.setState({ color: color });\n  };\n  handleHasImage = hasImage => {\n    this.setState({ hasImage: hasImage });\n  };\n  handleFixedClick = () => {\n    if (this.state.fixedClasses === \"dropdown\") {\n      this.setState({ fixedClasses: \"dropdown show-dropdown open\" });\n    } else {\n      this.setState({ fixedClasses: \"dropdown\" });\n    }\n  };\n  componentDidMount() {\n    let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    if (currentUser === null) {\n      this.props.history.push('/login')\n      return;\n    }\n    //   this.setState({ _notificationSystem: this.refs.notificationSystem });\n    //   var _notificationSystem = this.refs.notificationSystem;\n    //   var color = Math.floor(Math.random() * 4 + 1);\n    //   var level;\n    //   switch (color) {\n    //     case 1:\n    //       level = \"success\";\n    //       break;\n    //     case 2:\n    //       level = \"warning\";\n    //       break;\n    //     case 3:\n    //       level = \"error\";\n    //       break;\n    //     case 4:\n    //       level = \"info\";\n    //       break;\n    //     default:\n    //       break;\n    //   }\n    //   _notificationSystem.addNotification({\n    //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n    //     message: (\n    //       <div>\n    //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n    //         every web developer.\n    //       </div>\n    //     ),\n    //     level: level,\n    //     position: \"tr\",\n    //     autoDismiss: 15\n    //   });\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n    }\n    if (e.history.action === \"PUSH\") {\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n\n\n\n  render() {\n\n    return (\n      <div className=\"wrapper\">\n        <NotificationSystem ref=\"notificationSystem\" style={style} />\n        <Sidebar {...this.props} routes={routes} image={this.state.image}\n          color={this.state.color}\n          hasImage={this.state.hasImage} />\n        <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getBrandText(this.props.location.pathname)}\n          />\n          <Switch>{this.getRoutes(routes)}</Switch>\n          {/* <Footer /> */}\n          {/* <FixedPlugin\n            handleImageClick={this.handleImageClick}\n            handleColorClick={this.handleColorClick}\n            handleHasImage={this.handleHasImage}\n            bgColor={this.state[\"color\"]}\n            bgImage={this.state[\"image\"]}\n            mini={this.state[\"mini\"]}\n            handleFixedClick={this.handleFixedClick}\n            fixedClasses={this.state.fixedClasses}\n          /> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Admin;\n","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/css/animate.min.css\";\nimport \"./assets/sass/light-bootstrap-dashboard-react.scss?v=1.3.0\";\nimport \"./assets/css/demo.css\";\nimport \"./assets/css/pe-icon-7-stroke.css\";\nimport \"./assets/css/dashboard.css\";\nimport innerfilter from \"./views/filter/innerfilter\";\nimport Login from \"./views/login\";\n\n\nimport AdminLayout from \"./layouts/Admin.jsx\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/dashboard\" render={props => <AdminLayout {...props} />} />\n\n      <Route exact path=\"/dashboard/innerfilter\" component={innerfilter} />\n      <Route exact from=\"/login\" component={Login} />\n      {/* <Redirect from=\"/\" to=\"/admin/dashboard\" /> */}\n      {/* <Redirect from=\"/\" component={Login} /> */}\n      <Redirect from=\"/\" to=\"/login\"/>\n      {/* <Route exact path=\"/innerfilter\" component={innerfilter} /> */}\n\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}