{"version":3,"sources":["variables/Variables.jsx","assets/img/sidebar-3.jpg","../node_modules/typescript/lib sync","constant/config.js","views/filter/innerfilter.js","views/login/index.js","components/Navbars/AdminNavbarLinks.jsx","components/Navbars/AdminNavbar.jsx","components/Sidebar/Sidebar.jsx","views/Closeposition.js","views/Data.js","views/Openposition.js","views/TableList.jsx","views/Innerlogin.js","views/Dashboard.jsx","views/filter/filteredit.js","views/filter/filterdetail.js","views/filter/Filterprofile.js","views/swap/index.js","views/calculating/index.js","views/exploser/index.js","views/ContractSize/ContractSize.js","views/Statistics/Statistics.js","routes.js","layouts/Admin.jsx","index.js"],"names":["defaultWidth","window","screen","width","style","Wrapper","Containers","DefaultStyle","position","padding","zIndex","WebkitBoxSizing","MozBoxSizing","boxSizing","height","display","border","fontSize","WebkitFontSmoothing","fontFamily","fontWeight","color","tl","top","bottom","left","right","tr","tc","margin","marginLeft","bl","br","bc","NotificationItem","cursor","borderRadius","opacity","transition","WebkitTransform","transform","willChange","isHidden","isVisible","success","borderTop","backgroundColor","WebkitBoxShadow","MozBoxShadow","boxShadow","error","warning","info","Title","marginTop","MessageWrapper","marginRight","maxWidthwidth","Dismiss","float","lineHeight","outline","textAlign","Action","background","ActionWrapper","module","exports","thArray","tdArray","iconsArray","dataPie","labels","series","legendPie","names","types","dataSales","optionsSales","low","high","showArea","axisX","showGrid","lineSmooth","showLine","showPoint","fullWidth","chartPadding","responsiveSales","labelInterpolationFnc","value","legendSales","dataBar","optionsBar","seriesBarDistance","responsiveBar","legendBar","webpackEmptyContext","req","e","Error","code","keys","resolve","id","config","baseurl","axios","require","Innerfilter","props","handleDropdownChange","setState","selectValue","target","handleChangeDate","date","startDate","handleEndDate","state","endDate","handleChangeDateTo","startDateTo","handleEndDateTo","endDateTo","handleChange","event","Array","from","selectedOptions","item","renderAccountSelect","selectedAccountOption","options","allAccounts","map","data","label","login","placeholder","onChange","handleChangeAccount","handeChangeShowCommission","showCommission","showAddCommission","handleChangeAccountTo","selectedAccountOptionTo","renderAccountSelectTo","handleChangeCommissionAccount","selectedCommissionAccount","renderCommissionAccount","handleChangeMagicNumber","magicNumber","console","log","handleChangeMagicNumberTo","magicNumberTo","handleChangeSymbol","selectedSymbolOption","renderSymbolSelect","allSymbols","name","isMulti","handleChangeSymbolTo","selectedSymbolOptionTo","renderSymbolSelectTo","changeIncludeDefaultProperty","include","exclude","showMagicNumber","changeExcludeDefaultProperty","changeIncludeDefaultPropertyTo","includeTo","excludeTo","showMagicNumberTo","changeExcludeDefaultPropertyTo","profileName","showCommisoin","autoSyncClose","profileValues","nameError","tags","include_exclude_status","this","fetchfilterdata","self","get","then","response","status","rows","filter","profile_name","toUpperCase","charAt","slice","NotificationManager","listNotify","preventDefault","from_status","to_status","symbolFrom","symbolto","Data","from_account_id","to_account_id","commission_acount_id","startdateFrom","enddateFrom","startdateTo","enddateTo","from_symbols","JSON","stringify","to_symbols","auto_close","from_magic_number","length","to_magic_number","from_include_exclude_status","to_include_exclude_status","createdAt","Date","updatedAt","post","onHide","catch","className","Grid","fluid","onClick","crossClick","aria-hidden","type","handleprofileName","defaultChecked","handleChangeAutoSync","Row","Col","md","selected","isClearable","placeholderText","dateFormat","strictParsing","autoOk","checked","onValidationReject","validationRegex","inputProps","Button","variant","size","block","formDataSubmit","Component","Login","toogle","loginForm","handleClose","handleShow","setShow","createNotification","show","username","password","alert","persons","shwPwd","shwMsg","invalidUsername","invalidPassword","accountlist","bind","onSubmit","trim","userdetail","localStorage","setItem","history","push","message","err","parse","getItem","sm","Modal","disabled","AdminNavbarLinks","logout","clear","notification","Nav","NavItem","eventKey","href","NavDropdown","title","noCaret","MenuItem","pullRight","Header","mobileSidebarToggle","sidebarExists","document","documentElement","classList","toggle","node","createElement","onclick","parentElement","removeChild","body","appendChild","Navbar","Brand","brandText","Toggle","Collapse","Sidebar","routes","menu","innerWidth","routeName","location","pathname","indexOf","updateDimensions","addEventListener","image","data-color","data-image","hasImage","prop","key","redirect","upgrade","activeRoute","layout","path","to","activeClassName","icon","child","undefined","resources","sub","index","Closeposition","allHistoryRecord","fromHistoryOrderInfo","toHistoryOrderInfo","commissionHistoryOrderInfo","useState","isOpen2","setIsOpen2","fromSymbols","toSymbols","Object","entries","join","fromsum","tosum","commission","swap","profit","sumOfTotal","noRecord","total","isOpen","accountFromInfo","alias","displayType","thousandSeparator","decimalScale","accountToInfo","marginBottom","accountCommissionInfo","history_info","tablePage","items","lot","closed","price","textA","dashBoardPage","textB","Openposition","setIsOpen","allOpenRecord","fromOpenOrderInfo","toOpenOrderInfo","swapFrominfo","order_type","lots","swapToinfo","intervalSet","timerWaitInterval","TableList","fetchDataAccordingSymbols","symbol","filterlist","selectedOption","renderSymbols","uniqueSymbols","concat","i","ar","sumOfHistoryTotal","openfromsum","opentosum","sumOfOpenTotal","Dashboard","fetchCloseAndOpenPositionTotal","getAllAccounts","fetchActivefilterData","activeProfileName","autoClose","errorMassege","fetchAllOpenTrade","dateTime","filteredInfoTime","fetchStatusData","fromAccounts","fromSymbol","toAccounts","toSymbol","fromOpenOrderInfos","blockloader","contract_size","toOpenOrderInfos","totalTo","showData","accountDetailValue","accounts_details","currency","tableHeader","details","formData","json","legend","fromsum1","tosum1","sumOfTotal1","role","lg","xs","margin_currency","timerWait","Innerlogin","checkUserConnected","broker","connected","currentAddLogin","currentAddBroker","currentAddAlias","clearInterval","timerShow","fectheAllAccount","setIntervalCustom","content","innerHTML","setInterval","closebtn","swal","timer","button","handleCloseEdit","editForm","handleCloseDetail","detailForm","createTr","scope","launched","viewFilter","editFilter","onUpdate","re","test","text","user","edituser","editserver","editalias","editData","editstatus","Body","closeButton","editAlias","FilterEdite","l","rules","required","abc","from_symbol","to_symbol","all_from_symbols","all_to_symbols","class","c","moment","FilterDetail","showMagicNumberFrom","format","Filterprofile","showInnerfilter","createWariningNotification","showEdit","editeData","newDate","filterData","activateClick","deactivateClick","deleteFilter","deleteData","showDelete","detailData","deletepopupClick","deletepopupclose","Swap","ContractSize","fetchLastUpdatedTime","loading","fetchAllHIstoryTrade","Fragment","dashboardRoutes","component","noGutters","errormassage","setIErrormassage","fromAccountId","setFromAccountId","toAccountId","setToAccountId","fromOpenTrade","setFromOpenTrade","toOpenTrade","setToOpenTrade","fromHistoryTrade","setFromHistoryTrade","toHistoryTrade","setToHistoryTrade","setCommissionDetails","setopenTotal","sethistoryTotal","settotalOpenAndHistory","commissionValue","setCommissionValue","setdateTime","customSwap","setcustomSwap","useEffect","historyTotal","commissionDetails","customSwapTable","totalOfHistoryOrder","newCommissionRecord","openTotal","openFromHistoryTotal","openToOrderTotal","openToHistoryTotal","openFromOrderTotal","overflowX","lotsTotal","comissionTotal","profitTotal","swapTotal","contractSizeTotal","openpricetotal","account_id","open_value","open_price","open_time","utc","toFixed","fromOpenTradeTr","toOpenTradeTr","closepricetotal","close_price","close_time","fromHistoryTradeTr","toHistoryTradeTr","totalProfit","equity","Admin","getRoutes","routeArray","render","handleClick","handleNotificationClick","getBrandText","handleImageClick","handleColorClick","handleHasImage","handleFixedClick","fixedClasses","_notificationSystem","action","scrollTop","scrollingElement","refs","mainPanel","ref","AdminNavbar","ReactDOM","exact","innerfilter","getElementById"],"mappings":"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,kBACA,aACA,mBACA,aACA,cACA,eACA,qBACA,iBACA,cACA,cACA,eACA,kBACA,eACA,iBACA,eACA,cACA,YACA,eACA,aACA,qBACA,aACA,cACA,kBACA,uBACA,YACA,qBACA,WACA,iBACA,mBACA,wBACA,cACA,oBACA,eACA,2BACA,cACA,mBACA,oBACA,0BACA,iBACA,mBACA,eACA,0BACA,iBACA,eACA,aACA,gBACA,gBACA,kBACA,cACA,aACA,eACA,eACA,iBACA,cACA,cACA,cACA,eACA,eACA,YACA,cACA,kBACA,aACA,gBACA,eACA,gBACA,gBACA,cACA,eACA,eACA,aACA,gBACA,aACA,eACA,eACA,gBACA,iBACA,sBACA,kBACA,cACA,cACA,cACA,gBACA,aACA,aACA,cACA,cACA,kBACA,cACA,aACA,mBACA,aACA,YACA,cACA,YACA,sBACA,YACA,cACA,aACA,YACA,oBACA,oBACA,oBACA,cACA,qBACA,iBACA,aACA,aACA,mBACA,kBACA,cACA,cACA,aACA,aACA,gBACA,cACA,aACA,YACA,mBACA,aACA,kBACA,uBACA,eACA,aACA,aACA,aACA,gBACA,aACA,aACA,cACA,aACA,eACA,aACA,aACA,aACA,cACA,cACA,eACA,eACA,eACA,cACA,eACA,cACA,gBACA,aACA,eACA,aACA,eACA,aACA,gBACA,gBACA,aACA,aACA,eACA,iBACA,iBACA,iBACA,iBACA,aACA,YACA,gBACA,aACA,eACA,kBACA,eACA,gBACA,gBACA,eACA,cACA,cACA,cACA,aACA,aACA,eACA,aACA,mBACA,gBACA,aACA,aACA,kBACA,gBACA,aACA,gBACA,aACA,aACA,kBACA,eACA,eACA,cACA,iBAwHAC,QA/GY,CACZC,OAAQ,CAAC,MAAO,MAAO,OACvBC,OAAQ,CAAC,GAAI,GAAI,KA8GjBC,UA5Gc,CACdC,MAAO,CAAC,OAAQ,SAAU,eAC1BC,MAAO,CAAC,OAAQ,SAAU,YA2G1BC,UAvGc,CACdL,OAAQ,CACN,SACA,UACA,SACA,SACA,SACA,UA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","file":"static/js/main.1538c11f.chunk.js","sourcesContent":["/*!\r\n\r\n=========================================================\r\n* Light Bootstrap Dashboard React - v1.3.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\n//\r\n// //\r\n// // // For notifications\r\n// //\r\n//\r\nvar defaultWidth =\r\n  window.screen.width > 768\r\n    ? (window.screen.width * 1) / 3\r\n    : window.screen.width;\r\n\r\nvar style = {\r\n  Wrapper: {},\r\n  Containers: {\r\n    DefaultStyle: {\r\n      position: \"fixed\",\r\n      width: defaultWidth,\r\n      padding: \"10px 10px 10px 20px\",\r\n      zIndex: 9998,\r\n      WebkitBoxSizing: \"\",\r\n      MozBoxSizing: \"\",\r\n      boxSizing: \"\",\r\n      height: \"auto\",\r\n      display: \"inline-block\",\r\n      border: \"0\",\r\n      fontSize: \"14px\",\r\n      WebkitFontSmoothing: \"antialiased\",\r\n      fontFamily: '\"Roboto\",\"Helvetica Neue\",Arial,sans-serif',\r\n      fontWeight: \"400\",\r\n      color: \"#FFFFFF\"\r\n    },\r\n\r\n    tl: {\r\n      top: \"0px\",\r\n      bottom: \"auto\",\r\n      left: \"0px\",\r\n      right: \"auto\"\r\n    },\r\n\r\n    tr: {\r\n      top: \"0px\",\r\n      bottom: \"auto\",\r\n      left: \"auto\",\r\n      right: \"0px\"\r\n    },\r\n\r\n    tc: {\r\n      top: \"0px\",\r\n      bottom: \"auto\",\r\n      margin: \"0 auto\",\r\n      left: \"50%\",\r\n      marginLeft: -(defaultWidth / 2)\r\n    },\r\n\r\n    bl: {\r\n      top: \"auto\",\r\n      bottom: \"0px\",\r\n      left: \"0px\",\r\n      right: \"auto\"\r\n    },\r\n\r\n    br: {\r\n      top: \"auto\",\r\n      bottom: \"0px\",\r\n      left: \"auto\",\r\n      right: \"0px\"\r\n    },\r\n\r\n    bc: {\r\n      top: \"auto\",\r\n      bottom: \"0px\",\r\n      margin: \"0 auto\",\r\n      left: \"50%\",\r\n      marginLeft: -(defaultWidth / 2)\r\n    }\r\n  },\r\n\r\n  NotificationItem: {\r\n    DefaultStyle: {\r\n      position: \"relative\",\r\n      width: \"100%\",\r\n      cursor: \"pointer\",\r\n      borderRadius: \"4px\",\r\n      fontSize: \"14px\",\r\n      margin: \"10px 0 0\",\r\n      padding: \"10px\",\r\n      display: \"block\",\r\n      WebkitBoxSizing: \"border-box\",\r\n      MozBoxSizing: \"border-box\",\r\n      boxSizing: \"border-box\",\r\n      opacity: 0,\r\n      transition: \"all 0.5s ease-in-out\",\r\n      WebkitTransform: \"translate3d(0, 0, 0)\",\r\n      transform: \"translate3d(0, 0, 0)\",\r\n      willChange: \"transform, opacity\",\r\n\r\n      isHidden: {\r\n        opacity: 0\r\n      },\r\n\r\n      isVisible: {\r\n        opacity: 1\r\n      }\r\n    },\r\n\r\n    success: {\r\n      borderTop: 0,\r\n      backgroundColor: \"#a1e82c\",\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0\r\n    },\r\n\r\n    error: {\r\n      borderTop: 0,\r\n      backgroundColor: \"#fc727a\",\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0\r\n    },\r\n\r\n    warning: {\r\n      borderTop: 0,\r\n      backgroundColor: \"#ffbc67\",\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0\r\n    },\r\n\r\n    info: {\r\n      borderTop: 0,\r\n      backgroundColor: \"#63d8f1\",\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0\r\n    }\r\n  },\r\n\r\n  Title: {\r\n    DefaultStyle: {\r\n      fontSize: \"30px\",\r\n      margin: \"0\",\r\n      padding: 0,\r\n      fontWeight: \"bold\",\r\n      color: \"#FFFFFF\",\r\n      display: \"block\",\r\n      left: \"15px\",\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      marginTop: \"-15px\"\r\n    }\r\n  },\r\n\r\n  MessageWrapper: {\r\n    DefaultStyle: {\r\n      marginLeft: \"55px\",\r\n      marginRight: \"30px\",\r\n      padding: \"0 12px 0 0\",\r\n      color: \"#FFFFFF\",\r\n      maxWidthwidth: \"89%\"\r\n    }\r\n  },\r\n\r\n  Dismiss: {\r\n    DefaultStyle: {\r\n      fontFamily: \"inherit\",\r\n      fontSize: \"21px\",\r\n      color: \"#000\",\r\n      float: \"right\",\r\n      position: \"absolute\",\r\n      right: \"10px\",\r\n      top: \"50%\",\r\n      marginTop: \"-13px\",\r\n      backgroundColor: \"#FFFFFF\",\r\n      display: \"block\",\r\n      borderRadius: \"50%\",\r\n      opacity: \".4\",\r\n      lineHeight: \"11px\",\r\n      width: \"25px\",\r\n      height: \"25px\",\r\n      outline: \"0 !important\",\r\n      textAlign: \"center\",\r\n      padding: \"6px 3px 3px 3px\",\r\n      fontWeight: \"300\",\r\n      marginLeft: \"65px\"\r\n    },\r\n\r\n    success: {\r\n      // color: '#f0f5ea',\r\n      // backgroundColor: '#a1e82c'\r\n    },\r\n\r\n    error: {\r\n      // color: '#f4e9e9',\r\n      // backgroundColor: '#fc727a'\r\n    },\r\n\r\n    warning: {\r\n      // color: '#f9f6f0',\r\n      // backgroundColor: '#ffbc67'\r\n    },\r\n\r\n    info: {\r\n      // color: '#e8f0f4',\r\n      // backgroundColor: '#63d8f1'\r\n    }\r\n  },\r\n\r\n  Action: {\r\n    DefaultStyle: {\r\n      background: \"#ffffff\",\r\n      borderRadius: \"2px\",\r\n      padding: \"6px 20px\",\r\n      fontWeight: \"bold\",\r\n      margin: \"10px 0 0 0\",\r\n      border: 0\r\n    },\r\n\r\n    success: {\r\n      backgroundColor: \"#a1e82c\",\r\n      color: \"#ffffff\"\r\n    },\r\n\r\n    error: {\r\n      backgroundColor: \"#fc727a\",\r\n      color: \"#ffffff\"\r\n    },\r\n\r\n    warning: {\r\n      backgroundColor: \"#ffbc67\",\r\n      color: \"#ffffff\"\r\n    },\r\n\r\n    info: {\r\n      backgroundColor: \"#63d8f1\",\r\n      color: \"#ffffff\"\r\n    }\r\n  },\r\n\r\n  ActionWrapper: {\r\n    DefaultStyle: {\r\n      margin: 0,\r\n      padding: 0\r\n    }\r\n  }\r\n};\r\n\r\n//\r\n// //\r\n// // // For tables\r\n// //\r\n//\r\nconst thArray = [\"ID\", \"Name\", \"Salary\", \"Country\", \"City\"];\r\nconst tdArray = [\r\n  [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\", \"Oud-Turnhout\"],\r\n  [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\", \"Sinaai-Waas\"],\r\n  [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\", \"Baileux\"],\r\n  [\"4\", \"Philip Chaney\", \"$38,735\", \"Korea, South\", \"Overland Park\"],\r\n  [\"5\", \"Doris Greene\", \"$63,542\", \"Malawi\", \"Feldkirchen in Kärnten\"],\r\n  [\"6\", \"Mason Porter\", \"$78,615\", \"Chile\", \"Gloucester\"]\r\n];\r\n\r\n//\r\n// //\r\n// // // For icons\r\n// //\r\n//\r\nconst iconsArray = [\r\n  \"pe-7s-album\",\r\n  \"pe-7s-arc\",\r\n  \"pe-7s-back-2\",\r\n  \"pe-7s-bandaid\",\r\n  \"pe-7s-car\",\r\n  \"pe-7s-diamond\",\r\n  \"pe-7s-door-lock\",\r\n  \"pe-7s-eyedropper\",\r\n  \"pe-7s-female\",\r\n  \"pe-7s-gym\",\r\n  \"pe-7s-hammer\",\r\n  \"pe-7s-headphones\",\r\n  \"pe-7s-helm\",\r\n  \"pe-7s-hourglass\",\r\n  \"pe-7s-leaf\",\r\n  \"pe-7s-magic-wand\",\r\n  \"pe-7s-male\",\r\n  \"pe-7s-map-2\",\r\n  \"pe-7s-next-2\",\r\n  \"pe-7s-paint-bucket\",\r\n  \"pe-7s-pendrive\",\r\n  \"pe-7s-photo\",\r\n  \"pe-7s-piggy\",\r\n  \"pe-7s-plugin\",\r\n  \"pe-7s-refresh-2\",\r\n  \"pe-7s-rocket\",\r\n  \"pe-7s-settings\",\r\n  \"pe-7s-shield\",\r\n  \"pe-7s-smile\",\r\n  \"pe-7s-usb\",\r\n  \"pe-7s-vector\",\r\n  \"pe-7s-wine\",\r\n  \"pe-7s-cloud-upload\",\r\n  \"pe-7s-cash\",\r\n  \"pe-7s-close\",\r\n  \"pe-7s-bluetooth\",\r\n  \"pe-7s-cloud-download\",\r\n  \"pe-7s-way\",\r\n  \"pe-7s-close-circle\",\r\n  \"pe-7s-id\",\r\n  \"pe-7s-angle-up\",\r\n  \"pe-7s-wristwatch\",\r\n  \"pe-7s-angle-up-circle\",\r\n  \"pe-7s-world\",\r\n  \"pe-7s-angle-right\",\r\n  \"pe-7s-volume\",\r\n  \"pe-7s-angle-right-circle\",\r\n  \"pe-7s-users\",\r\n  \"pe-7s-angle-left\",\r\n  \"pe-7s-user-female\",\r\n  \"pe-7s-angle-left-circle\",\r\n  \"pe-7s-up-arrow\",\r\n  \"pe-7s-angle-down\",\r\n  \"pe-7s-switch\",\r\n  \"pe-7s-angle-down-circle\",\r\n  \"pe-7s-scissors\",\r\n  \"pe-7s-wallet\",\r\n  \"pe-7s-safe\",\r\n  \"pe-7s-volume2\",\r\n  \"pe-7s-volume1\",\r\n  \"pe-7s-voicemail\",\r\n  \"pe-7s-video\",\r\n  \"pe-7s-user\",\r\n  \"pe-7s-upload\",\r\n  \"pe-7s-unlock\",\r\n  \"pe-7s-umbrella\",\r\n  \"pe-7s-trash\",\r\n  \"pe-7s-tools\",\r\n  \"pe-7s-timer\",\r\n  \"pe-7s-ticket\",\r\n  \"pe-7s-target\",\r\n  \"pe-7s-sun\",\r\n  \"pe-7s-study\",\r\n  \"pe-7s-stopwatch\",\r\n  \"pe-7s-star\",\r\n  \"pe-7s-speaker\",\r\n  \"pe-7s-signal\",\r\n  \"pe-7s-shuffle\",\r\n  \"pe-7s-shopbag\",\r\n  \"pe-7s-share\",\r\n  \"pe-7s-server\",\r\n  \"pe-7s-search\",\r\n  \"pe-7s-film\",\r\n  \"pe-7s-science\",\r\n  \"pe-7s-disk\",\r\n  \"pe-7s-ribbon\",\r\n  \"pe-7s-repeat\",\r\n  \"pe-7s-refresh\",\r\n  \"pe-7s-add-user\",\r\n  \"pe-7s-refresh-cloud\",\r\n  \"pe-7s-paperclip\",\r\n  \"pe-7s-radio\",\r\n  \"pe-7s-note2\",\r\n  \"pe-7s-print\",\r\n  \"pe-7s-network\",\r\n  \"pe-7s-prev\",\r\n  \"pe-7s-mute\",\r\n  \"pe-7s-power\",\r\n  \"pe-7s-medal\",\r\n  \"pe-7s-portfolio\",\r\n  \"pe-7s-like2\",\r\n  \"pe-7s-plus\",\r\n  \"pe-7s-left-arrow\",\r\n  \"pe-7s-play\",\r\n  \"pe-7s-key\",\r\n  \"pe-7s-plane\",\r\n  \"pe-7s-joy\",\r\n  \"pe-7s-photo-gallery\",\r\n  \"pe-7s-pin\",\r\n  \"pe-7s-phone\",\r\n  \"pe-7s-plug\",\r\n  \"pe-7s-pen\",\r\n  \"pe-7s-right-arrow\",\r\n  \"pe-7s-paper-plane\",\r\n  \"pe-7s-delete-user\",\r\n  \"pe-7s-paint\",\r\n  \"pe-7s-bottom-arrow\",\r\n  \"pe-7s-notebook\",\r\n  \"pe-7s-note\",\r\n  \"pe-7s-next\",\r\n  \"pe-7s-news-paper\",\r\n  \"pe-7s-musiclist\",\r\n  \"pe-7s-music\",\r\n  \"pe-7s-mouse\",\r\n  \"pe-7s-more\",\r\n  \"pe-7s-moon\",\r\n  \"pe-7s-monitor\",\r\n  \"pe-7s-micro\",\r\n  \"pe-7s-menu\",\r\n  \"pe-7s-map\",\r\n  \"pe-7s-map-marker\",\r\n  \"pe-7s-mail\",\r\n  \"pe-7s-mail-open\",\r\n  \"pe-7s-mail-open-file\",\r\n  \"pe-7s-magnet\",\r\n  \"pe-7s-loop\",\r\n  \"pe-7s-look\",\r\n  \"pe-7s-lock\",\r\n  \"pe-7s-lintern\",\r\n  \"pe-7s-link\",\r\n  \"pe-7s-like\",\r\n  \"pe-7s-light\",\r\n  \"pe-7s-less\",\r\n  \"pe-7s-keypad\",\r\n  \"pe-7s-junk\",\r\n  \"pe-7s-info\",\r\n  \"pe-7s-home\",\r\n  \"pe-7s-help2\",\r\n  \"pe-7s-help1\",\r\n  \"pe-7s-graph3\",\r\n  \"pe-7s-graph2\",\r\n  \"pe-7s-graph1\",\r\n  \"pe-7s-graph\",\r\n  \"pe-7s-global\",\r\n  \"pe-7s-gleam\",\r\n  \"pe-7s-glasses\",\r\n  \"pe-7s-gift\",\r\n  \"pe-7s-folder\",\r\n  \"pe-7s-flag\",\r\n  \"pe-7s-filter\",\r\n  \"pe-7s-file\",\r\n  \"pe-7s-expand1\",\r\n  \"pe-7s-exapnd2\",\r\n  \"pe-7s-edit\",\r\n  \"pe-7s-drop\",\r\n  \"pe-7s-drawer\",\r\n  \"pe-7s-download\",\r\n  \"pe-7s-display2\",\r\n  \"pe-7s-display1\",\r\n  \"pe-7s-diskette\",\r\n  \"pe-7s-date\",\r\n  \"pe-7s-cup\",\r\n  \"pe-7s-culture\",\r\n  \"pe-7s-crop\",\r\n  \"pe-7s-credit\",\r\n  \"pe-7s-copy-file\",\r\n  \"pe-7s-config\",\r\n  \"pe-7s-compass\",\r\n  \"pe-7s-comment\",\r\n  \"pe-7s-coffee\",\r\n  \"pe-7s-cloud\",\r\n  \"pe-7s-clock\",\r\n  \"pe-7s-check\",\r\n  \"pe-7s-chat\",\r\n  \"pe-7s-cart\",\r\n  \"pe-7s-camera\",\r\n  \"pe-7s-call\",\r\n  \"pe-7s-calculator\",\r\n  \"pe-7s-browser\",\r\n  \"pe-7s-box2\",\r\n  \"pe-7s-box1\",\r\n  \"pe-7s-bookmarks\",\r\n  \"pe-7s-bicycle\",\r\n  \"pe-7s-bell\",\r\n  \"pe-7s-battery\",\r\n  \"pe-7s-ball\",\r\n  \"pe-7s-back\",\r\n  \"pe-7s-attention\",\r\n  \"pe-7s-anchor\",\r\n  \"pe-7s-albums\",\r\n  \"pe-7s-alarm\",\r\n  \"pe-7s-airplay\"\r\n];\r\n\r\n//\r\n// //\r\n// // // // For dashboard's charts\r\n// //\r\n//\r\n// Data for Pie Chart\r\nvar dataPie = {\r\n  labels: [\"40%\", \"20%\", \"40%\"],\r\n  series: [40, 20, 40]\r\n};\r\nvar legendPie = {\r\n  names: [\"Open\", \"Bounce\", \"Unsubscribe\"],\r\n  types: [\"info\", \"danger\", \"warning\"]\r\n};\r\n\r\n// Data for Line Chart\r\nvar dataSales = {\r\n  labels: [\r\n    \"9:00AM\",\r\n    \"12:00AM\",\r\n    \"3:00PM\",\r\n    \"6:00PM\",\r\n    \"9:00PM\",\r\n    \"12:00PM\",\r\n    \"3:00AM\",\r\n    \"6:00AM\"\r\n  ],\r\n  series: [\r\n    [287, 385, 490, 492, 554, 586, 698, 695],\r\n    [67, 152, 143, 240, 287, 335, 435, 437],\r\n    [23, 113, 67, 108, 190, 239, 307, 308]\r\n  ]\r\n};\r\nvar optionsSales = {\r\n  low: 0,\r\n  high: 800,\r\n  showArea: false,\r\n  height: \"245px\",\r\n  axisX: {\r\n    showGrid: false\r\n  },\r\n  lineSmooth: true,\r\n  showLine: true,\r\n  showPoint: true,\r\n  fullWidth: true,\r\n  chartPadding: {\r\n    right: 50\r\n  }\r\n};\r\nvar responsiveSales = [\r\n  [\r\n    \"screen and (max-width: 640px)\",\r\n    {\r\n      axisX: {\r\n        labelInterpolationFnc: function(value) {\r\n          return value[0];\r\n        }\r\n      }\r\n    }\r\n  ]\r\n];\r\nvar legendSales = {\r\n  names: [\"Open\", \"Click\", \"Click Second Time\"],\r\n  types: [\"info\", \"danger\", \"warning\"]\r\n};\r\n\r\n// Data for Bar Chart\r\nvar dataBar = {\r\n  labels: [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"Mai\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n  ],\r\n  series: [\r\n    [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895],\r\n    [412, 243, 280, 580, 453, 353, 300, 364, 368, 410, 636, 695]\r\n  ]\r\n};\r\nvar optionsBar = {\r\n  seriesBarDistance: 10,\r\n  axisX: {\r\n    showGrid: false\r\n  },\r\n  height: \"245px\"\r\n};\r\nvar responsiveBar = [\r\n  [\r\n    \"screen and (max-width: 640px)\",\r\n    {\r\n      seriesBarDistance: 5,\r\n      axisX: {\r\n        labelInterpolationFnc: function(value) {\r\n          return value[0];\r\n        }\r\n      }\r\n    }\r\n  ]\r\n];\r\nvar legendBar = {\r\n  names: [\"Tesla Model S\", \"BMW 5 Series\"],\r\n  types: [\"info\", \"danger\"]\r\n};\r\n\r\nmodule.exports = {\r\n  style, // For notifications (App container and Notifications view)\r\n  thArray,\r\n  tdArray, // For tables (TableList view)\r\n  iconsArray, // For icons (Icons view)\r\n  dataPie,\r\n  legendPie,\r\n  dataSales,\r\n  optionsSales,\r\n  responsiveSales,\r\n  legendSales,\r\n  dataBar,\r\n  optionsBar,\r\n  responsiveBar,\r\n  legendBar // For charts (Dashboard view)\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/sidebar-3.34535b95.jpg\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 601;","const config= {\r\n    baseurl:(process.env.NODE_ENV==\"development\") ? \"http://localhost:4000/api\": \"https://top4.trade/api\"\r\n}\r\n\r\nexport default config;","import React, { Component } from 'react';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport config from '../../constant/config.js';\r\nimport Select from 'react-select'\r\nimport TagsInput from 'react-tagsinput'\r\nimport 'react-tagsinput/react-tagsinput.css'\r\nimport { times } from 'chartist';\r\n// import DateFnsUtils from '@date-io/date-fns';\r\n// import {\r\n//     // DatePicker,\r\n//     KeyboardDatePicker,\r\n//     // TimePicker,\r\n//     DateTimePicker,\r\n//     MuiPickersUtilsProvider,\r\n// } from '@material-ui/pickers';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nconst axios = require('axios');\r\n\r\n// import { Multiselect } from \"multiselect-react-dropdown\";\r\n\r\n// const options = [\r\n//     { value: 'chocolate', label: 'Chocolate' },\r\n//     { value: 'strawberry', label: 'Strawberry' },\r\n//     { value: 'vanilla', label: 'Vanilla' }\r\n// ]\r\n\r\nclass Innerfilter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // startDate: new Date(),\r\n            // endDate: new Date(),\r\n            selectedAccountOption: null,\r\n            selectedSymbolOption: null,\r\n            selectedSymbolOptionTo: null,\r\n            selectedAccountOptionTo: null,\r\n            selectedCommissionAccount: null,\r\n            startDate: null,\r\n            endDate: null,\r\n            startDateTo: null,\r\n            endDateTo: null,\r\n            allAccounts: [],\r\n            allSymbols: [],\r\n            profileName: '',\r\n            error: '',\r\n            showCommisoin: false,\r\n            showAddCommission: false,\r\n            autoSyncClose: false,\r\n            profileValues: [],\r\n            nameError: false,\r\n            magicNumber: [],\r\n            magicNumberTo: [],\r\n            showMagicNumber: false,\r\n            showMagicNumberTo: false,\r\n            tags: [],\r\n            include_exclude_status: '',\r\n            exclude: false,\r\n            include: false,\r\n            excludeTo: false,\r\n            includeTo: false,\r\n            // options: [{ name: 'Srigar', id: 1 }, { name: 'Sam', id: 2 }],\r\n\r\n            // plainArray: [\"Option 1\", \"Option 2\", \"Option 3\", \"Option 4\", \"Option 5\"],\r\n            // objectArray: [\r\n            //     { key: \"Option 1\", cat: \"Group 1\" },\r\n            //     { key: \"Option 2\", cat: \"Group 1\" },\r\n            //     { key: \"Option 3\", cat: \"Group 1\" },\r\n            //     { key: \"Option 4\", cat: \"Group 2\" },\r\n            //     { key: \"Option 5\", cat: \"Group 2\" },\r\n            //     { key: \"Option 6\", cat: \"Group 2\" },\r\n            //     { key: \"Option 7\", cat: \"Group 2\" }\r\n            // ],\r\n            // selectedValues: [\r\n            //     { key: \"Option 1\", cat: \"Group 1\" },\r\n            //     { key: \"Option 2\", cat: \"Group 1\" }\r\n            // ]\r\n        };\r\n\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.fetchfilterdata()\r\n        let self = this;\r\n        axios.get(config.baseurl + '/accounts/fetchAllAccounts')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.setState({ allAccounts: response.data.rows })\r\n                }\r\n            })\r\n\r\n    }\r\n    // addItem = () => {\r\n    //     this.selectedValues.push({ key: \"Option 3\", cat: \"Group 1\" });\r\n    // }\r\n    handleDropdownChange = (e) => {\r\n        this.setState({ selectValue: e.target.value });\r\n    }\r\n    handleChangeDate = date => {\r\n        this.setState({\r\n            startDate: date\r\n        });\r\n    }\r\n\r\n    handleEndDate = date => {\r\n        if (date < this.state.startDate && date != null) {\r\n            this.setState({ error: 'enddate', endDate: \"\" })\r\n            return\r\n        }\r\n        this.setState({\r\n            error: '',\r\n            endDate: date\r\n        })\r\n    }\r\n    handleChangeDateTo = date => {\r\n\r\n        this.setState({\r\n            startDateTo: date,\r\n            error: ''\r\n        });\r\n    }\r\n    handleEndDateTo = date => {\r\n        if (date < this.state.startDateTo && date != null) {\r\n            this.setState({ error: 'enddateto', endDateTo: \"\" })\r\n            return\r\n        }\r\n        this.setState({\r\n            error: '',\r\n            endDateTo: date\r\n        });\r\n    }\r\n    handleChange = (event) => {\r\n        //this.setState({value: event.option});\r\n        this.setState({ value: Array.from(event.target.selectedOptions, (item) => item.value) });\r\n    }\r\n    renderAccountSelect = () => {\r\n        const { selectedAccountOption, allAccounts } = this.state;\r\n        let Data = {\r\n            account: selectedAccountOption\r\n        }\r\n        // axios.post(config.baseurl + '/filter/fetchSymbolData', Data)\r\n        //     .then(function (response) {\r\n        //         if (response.status == 200) {\r\n        //             this.props.onHide()\r\n        //         }\r\n        //     })\r\n        //     .catch(function (error) {\r\n        //     });\r\n\r\n        let options = allAccounts.map(data => {\r\n            return { value: data.id, label: data.login };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Account\"\r\n                value={selectedAccountOption}\r\n                onChange={this.handleChangeAccount}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n    handeChangeShowCommission = (e) => {\r\n        this.setState({ showCommission: true }, () => {\r\n            this.setState({ showAddCommission: !this.state.showAddCommission })\r\n        })\r\n    }\r\n    handleChangeAccountTo = selectedAccountOptionTo => {\r\n\r\n        this.setState({ selectedAccountOptionTo, error: '' });\r\n    };\r\n    renderAccountSelectTo = () => {\r\n        const { selectedAccountOptionTo, allAccounts } = this.state;\r\n\r\n        let options = allAccounts.map(data => {\r\n            return { value: data.id, label: data.login };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Account\"\r\n                value={selectedAccountOptionTo}\r\n                onChange={this.handleChangeAccountTo}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n    handleChangeCommissionAccount = selectedCommissionAccount => {\r\n        this.setState({ selectedCommissionAccount, });\r\n    };\r\n    renderCommissionAccount = () => {\r\n        const { selectedCommissionAccount, allAccounts } = this.state;\r\n\r\n        let options = allAccounts.map(data => {\r\n            return { value: data.id, label: data.login };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Account\"\r\n                value={selectedCommissionAccount}\r\n                onChange={this.handleChangeCommissionAccount}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n    handleChangeMagicNumber = (magicNumber) => {\r\n        console.log(magicNumber, 'jhcvjkjk');\r\n        // if(re.test(tags))\r\n        this.setState({ magicNumber })\r\n        // this.state.magicNumber.push(magicNumber);\r\n    }\r\n    handleChangeMagicNumberTo = (magicNumberTo) => {\r\n\r\n\r\n        // if(re.test(tags))\r\n        this.setState({ magicNumberTo })\r\n    }\r\n\r\n\r\n    handleChangeAccount = selectedAccountOption => {\r\n        this.setState({ selectedAccountOption });\r\n    };\r\n    handleChangeSymbol = selectedSymbolOption => {\r\n        this.setState({ selectedSymbolOption });\r\n    };\r\n    renderSymbolSelect = () => {\r\n        const { selectedSymbolOption, allSymbols } = this.state;\r\n        let options = allSymbols.map(data => {\r\n            return { value: data.name, label: data.name };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Symbol\"\r\n                value={selectedSymbolOption}\r\n                isMulti\r\n                onChange={this.handleChangeSymbol}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n    handleChangeSymbolTo = selectedSymbolOptionTo => {\r\n        this.setState({ selectedSymbolOptionTo });\r\n    };\r\n    renderSymbolSelectTo = () => {\r\n        const { selectedSymbolOptionTo, allSymbols } = this.state;\r\n        let options = allSymbols.map(data => {\r\n            return { value: data.name, label: data.name };\r\n        })\r\n\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Symbol...\"\r\n                value={selectedSymbolOptionTo}\r\n                isMulti\r\n                onChange={this.handleChangeSymbolTo}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n    fetchfilterdata() {\r\n        let self = this;\r\n        axios.get(config.baseurl + '/filter/fetchfilterdata')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n\r\n                    self.setState({ profileValues: response.data.rows })\r\n                }\r\n            })\r\n    }\r\n\r\n    handleprofileName(e) {\r\n        this.setState({ nameError: false })\r\n        this.state.profileValues.filter((data) => {\r\n            if (data.profile_name.toUpperCase() !== e.target.value.toUpperCase()) {\r\n                this.setState({ profileName: e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1), error: '', })\r\n            }\r\n            else {\r\n                this.setState({ nameError: true }, () => {\r\n                })\r\n                NotificationManager.listNotify = [];\r\n                NotificationManager.error('Profile already exits!');\r\n\r\n            }\r\n        })\r\n    }\r\n    // handlemagicNumber(e){\r\n    //     this.setState({ magicNumber: e.target.value})\r\n    // }\r\n\r\n    // handlemagicNumberTo(e){\r\n    //     this.setState({ magicNumberTo: e.target.value})\r\n    // }\r\n\r\n    formDataSubmit(e) {\r\n\r\n        e.preventDefault();\r\n\r\n\r\n\r\n        let from_status = this.state.include === true && this.state.exclude === false ? 1 : this.state.exclude === true && this.state.include === false ? 2 : 0\r\n\r\n\r\n        let to_status = this.state.includeTo === true && this.state.excludeTo === false ? 1 : this.state.excludeTo === true && this.state.includeTo === false ? 2 : 0\r\n        let self = this\r\n\r\n\r\n        if (this.state.profileName == null || this.state.profileName == '') {\r\n            NotificationManager.listNotify = [];\r\n            NotificationManager.error('Please name is required !')\r\n            return\r\n        }\r\n        else if (this.state.selectedAccountOption == null || this.state.selectedAccountOption == '') {\r\n            this.setState({ error: 'accountoption' })\r\n            return\r\n        }\r\n        else if (this.state.showCommission == true && (this.state.selectedCommissionAccount == null || this.state.selectedCommissionAccount == '')) {\r\n            this.setState({ error: 'selectedCommissionAccount' })\r\n            return\r\n        }\r\n\r\n        else if (this.state.startDate == null || this.state.startDate == '') {\r\n            this.setState({ error: 'startdate' })\r\n            return\r\n        } else if (this.state.selectedSymbolOption == null || this.state.selectedSymbolOption == '') {\r\n            this.setState({ error: 'symbolselect' })\r\n            return\r\n        }\r\n        else if (this.state.selectedAccountOptionTo == null || this.state.selectedAccountOptionTo == '') {\r\n            this.setState({ error: 'accountoptionto' })\r\n            return\r\n        }\r\n\r\n        else if (this.state.startDateTo == null || this.state.startDateTo == '') {\r\n            this.setState({ error: 'startDateTo' })\r\n            return\r\n        }\r\n        else if (this.state.selectedSymbolOptionTo == null || this.state.selectedSymbolOptionTo == '') {\r\n            this.setState({ error: 'selectedSymbolOptionTo' })\r\n            return\r\n        }\r\n        else if (this.state.nameError) {\r\n            NotificationManager.listNotify = [];\r\n            NotificationManager.error('Profile Name Already Exist!');\r\n        }\r\n\r\n        else {\r\n            this.setState({ error: ' ' })\r\n            let fromSymbol = this.state.selectedSymbolOption;\r\n            let symbolFrom = fromSymbol.map((data) => {\r\n                return data.value\r\n            })\r\n            let toSymbol = this.state.selectedSymbolOptionTo;\r\n            let symbolto = toSymbol.map((data) => {\r\n                return data.value\r\n            })\r\n            console.log(this.state.selectedCommissionAccount, 'this.state.selectedCommissionAccount')\r\n\r\n            let Data = {\r\n                profile_name: this.state.profileName,\r\n                from_account_id: this.state.selectedAccountOption.value,\r\n                to_account_id: this.state.selectedAccountOptionTo.value,\r\n                commission_acount_id: this.state.showAddCommission ? this.state.selectedCommissionAccount.value : 0,\r\n                startdateFrom: this.state.startDate,\r\n                enddateFrom: this.state.endDate,\r\n                startdateTo: this.state.startDateTo,\r\n                enddateTo: this.state.endDateTo,\r\n                from_symbols: JSON.stringify(symbolFrom),\r\n                to_symbols: JSON.stringify(symbolto),\r\n                auto_close: this.state.autoSyncClose ? 1 : 0,\r\n                from_magic_number: (from_status != 0) ? this.state.magicNumber.length > \"0\" ? JSON.stringify(this.state.magicNumber) : [] : \"\",\r\n                to_magic_number: (to_status != 0) ? this.state.magicNumberTo.length > \"0\" ? JSON.stringify(this.state.magicNumberTo) : [] : \"\",\r\n                from_include_exclude_status: from_status,\r\n                to_include_exclude_status: to_status,\r\n                createdAt: new Date(),\r\n                updatedAt: new Date(),\r\n\r\n            }\r\n            console.log(Data, \"dat-------------\");\r\n\r\n            axios.post(config.baseurl + '/filter/addfilterdata', Data)\r\n                .then(function (response) {\r\n                    if (response.status == 200) {\r\n                        self.props.onHide()\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                });\r\n        }\r\n    }\r\n    crossClick(e) {\r\n        e.preventDefault();\r\n        this.props.onHide()\r\n    }\r\n    handleChangeAutoSync(e) {\r\n\r\n        this.setState({ autoSyncClose: !this.state.autoSyncClose }, () => {\r\n\r\n        })\r\n    }\r\n\r\n    changeIncludeDefaultProperty = () => {\r\n\r\n        this.setState({ include: !this.state.include, exclude: false }\r\n        )\r\n        if (!this.state.include == true) {\r\n            this.setState({ showMagicNumber: true })\r\n        } else if (this.state.include == true) {\r\n            this.setState({ showMagicNumber: false })\r\n\r\n        }\r\n\r\n\r\n    }\r\n    changeExcludeDefaultProperty = () => {\r\n        this.setState({ exclude: !this.state.exclude, include: false })\r\n        if (!this.state.exclude == true) {\r\n            this.setState({ showMagicNumber: true })\r\n        } else if (this.state.exclude == true) {\r\n            this.setState({ showMagicNumber: false })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    changeIncludeDefaultPropertyTo = () => {\r\n        this.setState({ includeTo: !this.state.includeTo, excludeTo: false })\r\n        if (!this.state.includeTo == true) {\r\n            this.setState({ showMagicNumberTo: true })\r\n        } else if (this.state.includeTo == true) {\r\n            this.setState({ showMagicNumberTo: false })\r\n\r\n        }\r\n    }\r\n    changeExcludeDefaultPropertyTo = () => {\r\n        this.setState({ excludeTo: !this.state.excludeTo, includeTo: false })\r\n        if (!this.state.excludeTo == true) {\r\n            this.setState({ showMagicNumberTo: true })\r\n        } else if (this.state.excludeTo == true) {\r\n            this.setState({ showMagicNumberTo: false })\r\n\r\n        }\r\n\r\n    }\r\n    render() {\r\n        let s = this\r\n        return (\r\n            <>\r\n                <NotificationContainer />\r\n                <div className=\"content\">\r\n                    <Grid fluid>\r\n                        <div className=\"symbol-box\">\r\n                            <div className=\"cross_div\"><a onClick={(e) => this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\r\n                            <div className=\"terminal-text\" >\r\n                                <label className=\"pnameadjust\"> Profile Name </label>\r\n                                <input type=\"text\" name=\"profilename\" className=\"Itext\" placeholder=\"Profile Name\" onChange={(e) => this.handleprofileName(e)} />\r\n                            </div>\r\n                            <div className=\"synclose\">\r\n                                <label className=\"checkbox-inline\"><input type=\"checkbox\" defaultChecked={this.state.autoSyncClose} name=\"changeAutoSync\" onChange={(e) => this.handleChangeAutoSync(e)} /><b>Auto Sync Close</b></label>\r\n                            </div>\r\n\r\n                            <form>\r\n                                <Row>\r\n\r\n                                    <Col md={6}>\r\n                                        <div className=\"card bottom\">\r\n                                            <div style={{ padding: '10px 20px 0px' }}>\r\n                                                <span style={{ fontWeight: 'bold' }}>Account A</span>\r\n                                            </div>\r\n                                            <table className=\"table mt20\">\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr\">\r\n                                                            <span className=\"accnt\">Account </span>\r\n                                                        </td>\r\n\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '50%' }}>\r\n                                                            {/* <Multiselect\r\n                                                        options={objectArray}\r\n                                                        singleSelect\r\n                                                        displayValue=\"key\"\r\n                                                    /> */}\r\n                                                            {this.renderAccountSelect()}\r\n                                                            {(this.state.error == 'accountoption') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr \">\r\n                                                            <span className=\"accnt\">From  </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center datepicker_filter\">\r\n                                                            <DatePicker\r\n                                                                selected={this.state.startDate}\r\n                                                                onChange={this.handleChangeDate}\r\n                                                                isClearable\r\n                                                                placeholderText=\"dd/mm/yyyy\"\r\n                                                                dateFormat=\"dd/MM/yyyy\"\r\n                                                                startDate={this.state.startDate}\r\n                                                                endDate={this.state.endDate}\r\n                                                                strictParsing\r\n                                                            />\r\n                                                            {/* <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                                            <KeyboardDatePicker\r\n                                                                // margin=\"normal\"\r\n                                                                clearable={false}\r\n                                                                id=\"date-picker-dialog\"\r\n                                                                label=\"dd/MM/yyyy\"\r\n                                                                format=\"dd/MM/yyyy\"\r\n                                                                onError={() => { return null }}\r\n                                                                value={this.state.startDate}\r\n                                                                onChange={this.handleChangeDate}\r\n                                                                KeyboardButtonProps={{\r\n                                                                    'aria-label': 'change date',\r\n                                                                }}\r\n                                                            />\r\n                                                        </MuiPickersUtilsProvider> */}\r\n                                                            {(this.state.error == 'startdate') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr \">\r\n                                                            <span className=\"accnt\">To   </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center datepicker_filter\">\r\n                                                            <DatePicker\r\n                                                                autoOk={true}\r\n                                                                selected={this.state.endDate}\r\n                                                                onChange={this.handleEndDate}\r\n                                                                isClearable\r\n                                                                placeholderText=\"dd/mm/yyyy\"\r\n                                                                dateFormat=\"dd/MM/yyyy\"\r\n                                                                startDate={this.state.startDate}\r\n                                                                endDate={this.state.endDate}\r\n                                                            />\r\n                                                            {(this.state.error == 'enddate') && <p style={{ color: 'red', fontSize: '13px' }}>*\r\n                                                        Please ensure that the End Date is greater than the Start Date.</p>}\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr \">\r\n                                                            <span className=\"accnt\">Symbol </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                            {/* <Multiselect\r\n                                                        options={objectArray}\r\n                                                        displayValue=\"key\"\r\n                                                        showCheckbox={true}\r\n                                                    /> */}\r\n                                                            {this.renderSymbolSelect()}\r\n                                                            {(this.state.error == 'symbolselect') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n\r\n\r\n                                            <div className=\"text-center\">\r\n                                                <span > Magic Number   </span>\r\n                                            </div>\r\n\r\n                                            <table className=\"table \">\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr dataAdjust\">\r\n                                                            <div onClick={this.changeIncludeDefaultProperty}>\r\n                                                                <input\r\n                                                                    type=\"radio\" id=\"include\" name=\"include\" checked={this.state.include} />\r\n                                                                <span className=\"accnt \">Include</span>\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\">\r\n                                                            <div onClick={this.changeExcludeDefaultProperty} >\r\n                                                                <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.exclude} />\r\n                                                                <span className=\"accnt \">Exclude</span>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n\r\n\r\n                                            {this.state.showMagicNumber === true ?\r\n                                                <div className=\"b-clr magicnumber\" style={{}}>\r\n                                                    <TagsInput\r\n                                                        onValidationReject={() => console.log('rejected')}\r\n                                                        validationRegex={/^[0-9]*$/}\r\n                                                        inputProps={{ placeholder: this.state.magicNumber.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumber\r\n                                                        } onChange={this.handleChangeMagicNumber}></TagsInput>\r\n                                                </div> : null}\r\n\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col md={6}>\r\n                                        <div className=\"card bottom\">\r\n                                            <div style={{ padding: '10px 20px 0px' }}>\r\n                                                <span style={{ fontWeight: 'bold' }}>Account B</span>\r\n                                            </div>\r\n                                            <table className=\"table mt20\">\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr \">\r\n                                                            <span className=\"accnt\"> Account</span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '50%' }}>\r\n                                                            {this.renderAccountSelectTo()}\r\n                                                            {(this.state.error == 'accountoptionto') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr \">\r\n                                                            <span className=\"accnt\">From </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center datepicker_filter\">\r\n                                                            <DatePicker\r\n                                                                selected={this.state.startDateTo}\r\n                                                                onChange={this.handleChangeDateTo}\r\n                                                                isClearable\r\n                                                                placeholderText=\"dd/mm/yyyy\"\r\n                                                                dateFormat=\"dd/MM/yyyy\"\r\n                                                                startDate={this.state.startDateTo}\r\n                                                                endDate={this.state.endDateTo}\r\n                                                                strictParsing\r\n                                                            />\r\n                                                            {(this.state.error == 'startDateTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr \">\r\n                                                            <span className=\"accnt\">To  </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center datepicker_filter\">\r\n                                                            <DatePicker\r\n                                                                selected={this.state.endDateTo}\r\n                                                                onChange={this.handleEndDateTo}\r\n                                                                isClearable\r\n                                                                placeholderText=\"dd/mm/yyyy\"\r\n                                                                dateFormat=\"dd/MM/yyyy\"\r\n                                                                startDate={this.state.startDateTo}\r\n                                                                endDate={this.state.endDateTo}\r\n                                                            />\r\n                                                            {(this.state.error == 'enddateto') && <p style={{ color: 'red', fontSize: '13px' }}>*\r\n                                                        Please ensure that the End Date is greater than the Start Date.</p>}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr\">\r\n                                                            <span className=\"accnt\"> Symbol   </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                            {/* <Multiselect\r\n                                                        options={objectArray}\r\n                                                        displayValue=\"key\"\r\n                                                        showCheckbox={true}\r\n                                                    /> */}\r\n                                                            {this.renderSymbolSelectTo()}\r\n                                                            {(this.state.error == 'selectedSymbolOptionTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n\r\n                                            <div className=\"text-center\">\r\n                                                <span > Magic Number  </span>\r\n                                            </div>\r\n                                            <table className=\"table mt20\">\r\n                                                <tbody>\r\n\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr checkboxAdjust\">\r\n                                                            <div onClick={this.changeIncludeDefaultPropertyTo} >\r\n                                                                <input\r\n                                                                    type=\"radio\" id=\"includeTo\" name=\"includeTo\" checked={this.state.includeTo} />\r\n                                                                <span className=\"accnt \">Include</span>\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr checkboxAdjust text-center\">\r\n                                                            <div onClick={this.changeExcludeDefaultPropertyTo} >\r\n                                                                <input type=\"radio\" id=\"excludeTo\" name=\"excludeTo\" checked={this.state.excludeTo} />\r\n                                                                <span className=\"accnt \">Exclude</span>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                            <div>\r\n\r\n                                                {this.state.showMagicNumberTo === true ?\r\n                                                    <div className=\"b-clr magicnumber\" style={{}}>\r\n                                                        <TagsInput\r\n                                                            onValidationReject={() => console.log('rejected')}\r\n                                                            validationRegex={/^[0-9]*$/}\r\n                                                            inputProps={{ placeholder: this.state.magicNumberTo.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumberTo\r\n                                                            } onChange={this.handleChangeMagicNumberTo}></TagsInput>\r\n                                                    </div> : null}\r\n                                            </div>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                                <hr></hr>\r\n                                <div className=\"chceckbox\">\r\n\r\n                                    <label className=\"checkbox-inline\"><input type=\"checkbox\" defaultChecked={this.state.showCommisoin} onChange={(e) => this.handeChangeShowCommission(e)} /><b>Add Commission</b></label>\r\n                                </div>\r\n                                {this.state.showAddCommission &&\r\n                                    <div className=\"center-com d-flex\">\r\n                                        <div className=\"com\">\r\n                                            <h3 style={{ fontWeight: 'bold' }}>Commission</h3>\r\n                                        </div>\r\n                                        <table className=\"table mt20\">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\"> Account </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center\" style={{ width: '50%' }}>\r\n                                                        {this.renderCommissionAccount()}\r\n\r\n                                                        {(this.state.error == 'selectedCommissionAccount') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account </p>}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                }\r\n                                <div className=\"save_button_filter\">\r\n                                    <div className=\"savebtn\">\r\n                                        <Button className=\"btn-primary savebutton\" variant=\"primary\" size=\"lg\" block onClick={(e) => this.formDataSubmit(e)}>\r\n                                            <b>Save</b>\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </Grid>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Innerfilter;\r\n","import React, { Component } from 'react';\r\nimport { Grid, Row, Col, Modal, Alert } from \"react-bootstrap\";\r\nimport swal from 'sweetalert';\r\nimport config from '../../constant/config.js';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nconst axios = require('axios');\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loginForm: false,\r\n            setShow: false,\r\n            show: true,\r\n            username: '',\r\n            password: '',\r\n            alert: null,\r\n            persons: [],\r\n            shwPwd: false,\r\n            shwMsg: false,\r\n            invalidUsername: '',\r\n            invalidPassword: '',\r\n            accountlist: []\r\n\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value.trim() })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const userdetail = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }\r\n        if (this.state.username == '') {\r\n            this.setState({ shwPwd: true })\r\n        }\r\n\r\n        let self = this;\r\n        axios.post(config.baseurl + '/users/mainLogin', userdetail)\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    // self.handleClose();\r\n                    if (response.data.rows && response.data.rows.length > 0) {\r\n                        localStorage.setItem('currentUser', JSON.stringify(response.data.rows));\r\n                        self.props.history.push('/dashboard')\r\n                    }\r\n                    if (response.data.message) {\r\n                        if (response.data.name == 'username') {\r\n                            self.setState({ invalidUsername: response.data.message })\r\n                            if (self.state.invalidUsername == '' || self.state.invalidUsername == 'Invalid username.' || self.state.invalidUsername == \"Invalid username\") {\r\n                                self.createNotification()\r\n                            }\r\n                        }\r\n                        if (response.data.name == 'password') {\r\n                            if (self.state.invalidPassword == '' || self.state.invalidPassword == 'Invalid password.') {\r\n                                self.createNotification()\r\n                            }\r\n                            self.setState({ invalidPassword: response.data.message, invalidUsername: '' })\r\n\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n            });\r\n    }\r\n    toogle = () => {\r\n        this.setState({ loginForm: !this.state.loginForm })\r\n    }\r\n    handleClose = () => {\r\n        this.setState({ loginForm: false })\r\n    }\r\n    handleShow = () => {\r\n        this.setState({ setShow: true })\r\n    }\r\n    createNotification = () => {\r\n        NotificationManager.listNotify = [];\r\n        NotificationManager.error('Invalid Credentials !');\r\n    }\r\n\r\n    componentDidMount() {\r\n        // let self = this;\r\n\r\n        let currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n        if (currentUser !== null) {\r\n            this.props.history.push('dashboard/dashboard')\r\n            return;\r\n        }\r\n        // axios.get(config.baseurl + '/users/allAccounts')\r\n        //     .then(function (response) {\r\n        //         if (response.status == 200) {\r\n        //             self.setState({ accountlist: response.data.rows })\r\n        //         }\r\n        //     })\r\n    }\r\n    render() {\r\n        const { invalidPassword, invalidUsername } = this.state;\r\n        return (\r\n            <div className=\"content\">\r\n                <Grid fluid style={{ marginTop: '20vh' }}>\r\n                    <Row>\r\n                        <Col md={4} />\r\n                        <Col\r\n                            md={4}\r\n                            sm={6}\r\n                        >\r\n                            {/* <Modal show={show}>\r\n                                    <Modal.Body> */}\r\n                            <div className=\"form-box login-box\">\r\n                                <Modal.Title className=\"text-center\"><b>Log In</b></Modal.Title>\r\n\r\n                                <div className=\"container-fluid\" style={{ background: '#eee', padding: 15, marginTop: 10 }}>\r\n                                    <div>\r\n                                        <span style={{ fontWeight: 'bold' }}> Username: </span>\r\n                                                    testaccount\r\n                                                </div>\r\n                                    <div>\r\n                                        <span style={{ fontWeight: 'bold' }}> Password: </span>\r\n                                                    1234567\r\n                                                </div>\r\n                                </div>\r\n                                <form style={{ marginTop: '20px' }} onSubmit={this.onSubmit}>\r\n                                    <label>Username</label>\r\n\r\n                                    <input className=\"Itext\" placeholder=\"Enter Username\" name=\"username\" value={this.state.username} onChange={this.onChange}\r\n                                    // onKeyUp={this.checkValidUser}\r\n                                    ></input>\r\n                                    <label>Password</label>\r\n\r\n                                    <input className=\"Itext\" placeholder=\"Enter Password\" name=\"password\" type=\"password\" value={this.state.password} onChange={this.onChange}></input>\r\n\r\n                                    <div className=\"clearfix\">\r\n                                        <button type=\"submit\" disabled={!this.state.username || !this.state.password} className={!this.state.username || !this.state.password ? \"loginButton\" : \"loginButton save2 save1\"}>Login</button>\r\n\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n\r\n                            {/* </Modal.Body>\r\n                                </Modal> */}\r\n\r\n\r\n                        </Col>\r\n                        <Col md={4} />\r\n                    </Row>\r\n                </Grid>\r\n                <NotificationContainer />\r\n\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport { NavItem, Nav, NavDropdown, MenuItem } from \"react-bootstrap\";\r\n\r\nclass AdminNavbarLinks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  logout = () => {\r\n    localStorage.clear();\r\n    this.props.history.push('/login');\r\n  }\r\n  render() {\r\n    const notification = (\r\n      <div>\r\n        {/* <i className=\"fa fa-globe\" />\r\n        <b className=\"caret\" /> */}\r\n        {/* <span className=\"notification\">5</span> */}\r\n        <p className=\"hidden-lg hidden-md\">Notification</p>\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        <Nav>\r\n          <NavItem eventKey={1} href=\"#\">\r\n            {/* <i className=\"fa fa-dashboard\" /> */}\r\n            <p className=\"hidden-lg hidden-md\">Dashboard</p>\r\n          </NavItem>\r\n          <NavDropdown\r\n            eventKey={2}\r\n            title={notification}\r\n            noCaret\r\n            id=\"basic-nav-dropdown\"\r\n          >\r\n            <MenuItem eventKey={2.1}>Notification 1</MenuItem>\r\n            <MenuItem eventKey={2.2}>Notification 2</MenuItem>\r\n            <MenuItem eventKey={2.3}>Notification 3</MenuItem>\r\n            <MenuItem eventKey={2.4}>Notification 4</MenuItem>\r\n            <MenuItem eventKey={2.5}>Another notifications</MenuItem>\r\n          </NavDropdown>\r\n          <NavItem eventKey={3} href=\"#\">\r\n            {/* <i className=\"fa fa-search\" />\r\n            <p className=\"hidden-lg hidden-md\">Search</p> */}\r\n          </NavItem>\r\n        </Nav>\r\n        <Nav pullRight>\r\n          {/* <NavItem eventKey={1} href=\"#\">\r\n            Account\r\n          </NavItem>\r\n          <NavDropdown\r\n            eventKey={2}\r\n            title=\"Dropdown\"\r\n            id=\"basic-nav-dropdown-right\"\r\n          >\r\n            <MenuItem eventKey={2.1}>Action</MenuItem>\r\n            <MenuItem eventKey={2.2}>Another action</MenuItem>\r\n            <MenuItem eventKey={2.3}>Something</MenuItem>\r\n            <MenuItem eventKey={2.4}>Another action</MenuItem>\r\n            <MenuItem eventKey={2.5}>Something</MenuItem>\r\n            <MenuItem divider />\r\n            <MenuItem eventKey={2.5}>Separated link</MenuItem>\r\n          </NavDropdown> */}\r\n          <NavItem  eventKey={3} onClick={() => this.logout()}>\r\n           <span className=\"logOutbtn\">Logout</span> \r\n          </NavItem>\r\n        </Nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminNavbarLinks;\r\n","import React, { Component } from \"react\";\r\nimport { Navbar } from \"react-bootstrap\";\r\n\r\nimport AdminNavbarLinks from \"./AdminNavbarLinks\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.mobileSidebarToggle = this.mobileSidebarToggle.bind(this);\r\n    this.state = {\r\n      sidebarExists: false\r\n    };\r\n  }\r\n  mobileSidebarToggle(e) {\r\n    if (this.state.sidebarExists === false) {\r\n      this.setState({\r\n        sidebarExists: true\r\n      });\r\n    }\r\n    e.preventDefault();\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    var node = document.createElement(\"div\");\r\n    node.id = \"bodyClick\";\r\n    node.onclick = function() {\r\n      this.parentElement.removeChild(this);\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n    };\r\n    document.body.appendChild(node);\r\n  }\r\n  render() {\r\n    return (\r\n      <Navbar fluid>\r\n        <Navbar.Header>\r\n          <Navbar.Brand>\r\n            <a href=\"#\">{this.props.brandText== \"Dashboard\" ? \"Dashboard\" : this.props.brandText }</a>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle onClick={this.mobileSidebarToggle} />\r\n        </Navbar.Header>\r\n        <Navbar.Collapse>\r\n          <AdminNavbarLinks {...this.props}/>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Dropdown, DropdownButton } from 'react-bootstrap'\r\nimport AdminNavbarLinks from \"../Navbars/AdminNavbarLinks.jsx\";\r\n\r\n// import logo from \"assets/img/reactlogo.png\";\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: window.innerWidth,\r\n    \r\n    };\r\n  }\r\n  toggle = (id) => {\r\n\r\n    console.log(this.props.routes)\r\n    this.props.routes.filter((data) => {\r\n      if (data.id == id) {\r\n        data.menu = !data.menu\r\n      }\r\n      else {\r\n        data.menu = false\r\n      }\r\n    })\r\n  }\r\n\r\n  activeRoute(routeName) {\r\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\r\n  }\r\n  updateDimensions() {\r\n    this.setState({ width: window.innerWidth });\r\n  }\r\n  componentDidMount() {\r\n    this.updateDimensions();\r\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props, \"props\")\r\n    const sidebarBackground = {\r\n      backgroundImage: \"url(\" + this.props.image + \")\"\r\n    };\r\n    return (\r\n\r\n\r\n      <div\r\n        id=\"sidebar\"\r\n        className=\"sidebar\"\r\n        data-color={this.props.color}\r\n        data-image={this.props.image}\r\n      >\r\n        {this.props.hasImage ? (\r\n          <div className=\"sidebar-background\" />\r\n        ) : (\r\n            null\r\n          )}\r\n        <div className=\"logo\">\r\n          {/* <a\r\n            href=\"https://www.creative-tim.com?ref=lbd-sidebar\"\r\n            className=\"simple-text logo-mini\"\r\n          > */}\r\n          {/* <div className=\"logo-img\">\r\n\r\n            </div> */}\r\n          {/* </a> */}\r\n          <span className=\"logo-text simple-text logo-normal\">\r\n          Hedging Interest Differentials\r\n\r\n          </span>\r\n          {/* <a\r\n            href=\"https://www.creative-tim.com?ref=lbd-sidebar\"\r\n            className=\"simple-text logo-normal\"\r\n          >\r\n            Dashboard\r\n          </a> */}\r\n        </div>\r\n        <div className=\"sidebar-wrapper\">\r\n\r\n          <ul className=\"nav\">\r\n            {this.state.width <= 991 ? <AdminNavbarLinks {...this.props} /> : null}\r\n            {this.props.routes.map((prop, key) => {\r\n              if (!prop.redirect)\r\n                // console.log(prop.resources, 'resouces');\r\n                return (\r\n                  <li\r\n                    className={\r\n                      prop.upgrade\r\n                        ? \"active active-pro\"\r\n                        : this.activeRoute(prop.layout + prop.path)\r\n                    }\r\n\r\n                    key={key}\r\n                  >\r\n                    <NavLink\r\n                      to={prop.layout + prop.path}\r\n                      className=\"nav-link\"\r\n                      activeClassName=\"active\"\r\n                    >\r\n                      <i className={prop.icon} />\r\n                      <p\r\n                        onClick={() => this.toggle(prop.id)}\r\n\r\n                      >{prop.name}\r\n                        {prop.child !== false && <b style={{ transform: prop.menu ? 'rotate(0deg)' : 'rotate(90deg)' }} className=\"caret\"></b>}\r\n                      </p>\r\n\r\n                    </NavLink>\r\n                    {prop.menu &&\r\n                      <ul className='dropdown-menu-cutomize'>\r\n                        {prop.resources != undefined && prop.resources.map((sub, index) => (\r\n                          <NavLink\r\n                            to={sub.layout + sub.path}\r\n                            className=\"nav-link\"\r\n                            activeClassName=\"active\"\r\n                          >\r\n                            <li\r\n\r\n                              key={index}>\r\n                              {/* <i className={sub.icon} /> */}\r\n                              <p >{sub.name}</p>\r\n                            </li>\r\n                          </NavLink>\r\n                        ))}\r\n\r\n                      </ul>\r\n                    }\r\n\r\n                  </li>\r\n                );\r\n              // return null;\r\n            })}\r\n          </ul>\r\n        </div>\r\n        {/* <NavLink>\r\n          <DropdownButton id=\"dropdown-item-button\" title=\"Dropdown button\">\r\n            <Dropdown.ItemText>Dropdown item text</Dropdown.ItemText>\r\n            <Dropdown.Item as=\"button\">Action</Dropdown.Item>\r\n            <Dropdown.Item as=\"button\">Another action</Dropdown.Item>\r\n            <Dropdown.Item as=\"button\">Something else</Dropdown.Item>\r\n          </DropdownButton>\r\n        </NavLink> */}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n\r\n","\r\nimport React, { useState, Fragment } from 'react';\r\nimport { Collapse } from 'reactstrap';\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport NumberFormat from 'react-number-format';\r\nimport Login from './login';\r\n\r\n// import Data from './Data';\r\n\r\nconst Closeposition = (props) => {\r\n    const { allHistoryRecord, fromHistoryOrderInfo, toHistoryOrderInfo, commissionHistoryOrderInfo } = props;\r\n    const [isOpen2, setIsOpen2] = useState(false);\r\n    const toggle2 = () => setIsOpen2(!isOpen2);\r\n\r\n    // const sumOfTotal = allHistoryRecord.reduce((current, data) => {\r\n    //     return (data.total + current);\r\n    // }, 0);\r\n    let fromSymbols = '';\r\n    let toSymbols = '';\r\n    if (allHistoryRecord && Object.entries(allHistoryRecord).length > 0) {\r\n        fromSymbols = JSON.parse(allHistoryRecord.from_symbols);\r\n        fromSymbols = (fromSymbols).map(data => data).join(', ');\r\n        toSymbols = JSON.parse(allHistoryRecord.to_symbols);\r\n        toSymbols = (toSymbols).map(data => data).join(', ')\r\n    }\r\n    let fromsum = 0;\r\n    let tosum = 0;\r\n    let commissionSum = 0;\r\n\r\n    if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\r\n        fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\r\n    }\r\n    if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\r\n        tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\r\n    }\r\n    if (commissionHistoryOrderInfo && commissionHistoryOrderInfo.length > 0) {\r\n        commissionSum = (commissionHistoryOrderInfo[0].commission + commissionHistoryOrderInfo[0].swap + commissionHistoryOrderInfo[0].profit);\r\n    }\r\n\r\n    let sumOfTotal = tosum + fromsum;\r\n\r\n    let noRecord = ((fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0 && fromHistoryOrderInfo[0].total == null) && (toHistoryOrderInfo && toHistoryOrderInfo.length > 0 && toHistoryOrderInfo[0].total == null)) ? true : false;\r\n    return (\r\n        <div>\r\n            <div className=\"openpositions\" style={{ margin: '20px 0px' }}>\r\n                <span className=\"p-text\">Realized Profit/Loss</span>\r\n                <span className=\"icon-style\" onClick={toggle2}>\r\n                    {!isOpen2 ?\r\n                        <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\r\n                        :\r\n                        <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\r\n                    }\r\n                </span>\r\n            </div>\r\n            <div>\r\n                <Collapse isOpen={isOpen2}>\r\n                    <Row>\r\n                        {/* {Data.tablePage.items.map((item, index) =>\r\n                            <Col md={6} key={index}>\r\n                                <div className=\"card\">\r\n                                    <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\r\n                                    </div>\r\n                                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                        <table className=\"table\">\r\n                                            <tbody>\r\n                                                <tr><td>{item.closed} </td>\r\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\r\n                                                </tr>\r\n                                                <tr><td>{item.commission} </td>\r\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\r\n                                                </tr>\r\n                                                <tr><td>{item.swap} </td>\r\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\r\n                                                </tr>\r\n                                                <tr><td>{item.total} </td>\r\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n                        )} */}\r\n                        {/* {(allHistoryRecord && allHistoryRecord.length>0) && allHistoryRecord.map((item, index) =>\r\n                            <Fragment>\r\n\r\n                            <Col md={6} key={index}>\r\n                                <div className=\"card\">\r\n                                    <div className=\"header\">\r\n                                        <h5 className={item.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{item.account.login}</h5>\r\n                                        <h6 className={'colorDarkBlue'} style={{fontSize:10}}>({item.account.alias})</h6>\r\n                                    </div>\r\n                                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                        <table className=\"table\">\r\n                                            <tbody>\r\n                                                <tr><td>Closed P/L </td>\r\n                                                    <td className=\"td-actions text-right\">$ {item.profit}</td>\r\n                                                </tr>\r\n                                                <tr><td>Commission </td>\r\n                                                    <td className=\"td-actions text-right\">$ {item.commission}</td>\r\n                                                </tr>\r\n                                                <tr><td>Swap </td>\r\n                                                    <td className=\"td-actions text-right\">$ {item.swap}</td>\r\n                                                </tr>\r\n                                                <tr><td>Total </td>\r\n                                                    <td className=\"td-actions text-right\">$ {item.total}</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n                            </Fragment>\r\n                        )}\r\n                        {(allHistoryRecord && allHistoryRecord.length>0) && \r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <div>\r\n                                        <div className=\"total-box\">\r\n                                            <span className=\"text\">Sum of closed positions</span>\r\n                                            <span className=\"text\" style={{ float: 'right' }}>$ {sumOfTotal}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        } */}\r\n                        {noRecord ? (\r\n                            <div className=\"text-center\">\r\n                                No Record Found!\r\n                            </div>) :\r\n\r\n                            <Fragment>\r\n\r\n                                {(fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0 && fromHistoryOrderInfo[0].total != null) ? (\r\n                                    <Col md={6}>\r\n                                        <div className=\"card\">\r\n                                            <div className=\"header\">\r\n                                                <h5 className={allHistoryRecord.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{allHistoryRecord.accountFromInfo[0].login}</h5>\r\n                                                <h6 className={'colorDarkBlue'} style={{ fontSize: 10 }}>({allHistoryRecord.accountFromInfo[0].alias})</h6>\r\n                                            </div>\r\n                                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                                <table className=\"table\">\r\n                                                    <tbody>\r\n                                                        <tr>\r\n                                                            <td className=\"symbolStyle removeBorder\">{fromSymbols}</td>\r\n                                                            {/* <td>{fromSymbols}</td> */}\r\n                                                            {/* <td className=\"td-actions text-right\">$ {fromHistoryOrderInfo[0].profit}</td> */}\r\n                                                        </tr>\r\n                                                        <tr><td>Closed P/L </td>\r\n                                                            <td className=\"td-actions text-right\">$ {' '}\r\n                                                                <NumberFormat value={fromHistoryOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                                {/* {fromHistoryOrderInfo[0].profit} */}\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr><td>Commission </td>\r\n                                                            <td className=\"td-actions text-right\">$ {' '}\r\n                                                                {/* {fromHistoryOrderInfo[0].commission} */}\r\n                                                                <NumberFormat value={fromHistoryOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr><td>Swap </td>\r\n                                                            <td className=\"td-actions text-right\">$ {' '}\r\n                                                                <NumberFormat value={fromHistoryOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                                {/* {fromHistoryOrderInfo[0].swap} */}\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr><td>Total </td>\r\n                                                            <td className=\"td-actions text-right\">$ {' '}\r\n                                                                <NumberFormat value={fromHistoryOrderInfo[0].total} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                                {/* {fromHistoryOrderInfo[0].total} */}\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Col>\r\n                                ) : (\r\n                                        <Col md={6}>\r\n                                            <div className=\"card noRecordCol\"> No Record Found</div>\r\n                                        </Col>\r\n                                    )}\r\n                                {(toHistoryOrderInfo && toHistoryOrderInfo.length > 0 && toHistoryOrderInfo[0].total != null) ? (\r\n                                    <Col md={6}>\r\n                                        <div className=\"card\">\r\n                                            <div className=\"header\">\r\n                                                <h5 className={allHistoryRecord.id == '1' ? 'acntText color2' : 'acntText color2'}>{allHistoryRecord.accountToInfo[0].login}</h5>\r\n                                                <h6 className={'color2'} style={{ fontSize: 10 }}>({allHistoryRecord.accountToInfo[0].alias})</h6>\r\n                                            </div>\r\n                                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                                <table className=\"table\">\r\n                                                    <tbody>\r\n                                                        <tr>\r\n                                                            <span className=\"symbolStyle\">{toSymbols}</span>\r\n\r\n                                                            {/* <td>{toSymbols}</td> */}\r\n                                                            {/* <td className=\"td-actions text-right\">$ {fromHistoryOrderInfo[0].profit}</td> */}\r\n                                                        </tr>\r\n                                                        <tr><td>Closed P/L </td>\r\n                                                            <td className=\"td-actions text-right\">$ {' '}\r\n                                                                <NumberFormat value={toHistoryOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                                {/* {toHistoryOrderInfo[0].profit} */}\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr><td>Commission </td>\r\n                                                            <td className=\"td-actions text-right\">$ {' '}\r\n                                                                {/* {toHistoryOrderInfo[0].commission} */}\r\n                                                                <NumberFormat value={toHistoryOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr><td>Swap </td>\r\n                                                            <td className=\"td-actions text-right\">$ {' '}\r\n                                                                {/* {toHistoryOrderInfo[0].swap} */}\r\n\r\n\r\n                                                                {\r\n                                                                    <NumberFormat value={(toHistoryOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                                                                    // toOpenOrderInfo[0].swap\r\n                                                                }\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr><td>Total </td>\r\n                                                            <td className=\"td-actions text-right\">$ {' '}\r\n                                                                {/* {toHistoryOrderInfo[0].total} */}\r\n                                                                <NumberFormat value={toHistoryOrderInfo[0].total} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Col>\r\n                                ) : (\r\n                                        <Col md={6}>\r\n                                            <div className=\"card noRecordCol\"> No Record Found</div>\r\n                                        </Col>\r\n                                    )\r\n\r\n                                }\r\n                                {(sumOfTotal != 0) &&\r\n                                    <Row>\r\n                                        <Col md={12} style={{ marginBottom: 20 }}>\r\n                                            <div>\r\n                                                <div className=\"total-box\">\r\n                                                    <span className=\"text\">Sum of closed positions</span>\r\n                                                    <span className=\"text\" style={{ float: 'right' }}>$ {' '}\r\n                                                        <NumberFormat value={sumOfTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                        {/* {sumOfTotal} */}\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n\r\n\r\n\r\n\r\n                            </Fragment>\r\n                        }\r\n                    </Row>\r\n                </Collapse>\r\n                {allHistoryRecord.commission_acount_id !== 0 && allHistoryRecord.commission_acount_id !== undefined &&\r\n                    <Col md={12}>\r\n\r\n                        <div className=\"card \">\r\n                            <div className=\"header ptheader\">\r\n                                <h4 className=\"text-center\"><b>Commission</b></h4>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12 text-center\">\r\n\r\n                                        <h5 className={allHistoryRecord.id == '1' ? 'acntText color2' : 'acntText acadjust color2'}>{allHistoryRecord.accountCommissionInfo !== undefined && allHistoryRecord.accountCommissionInfo[0].login} <span>({allHistoryRecord.accountCommissionInfo !== undefined && allHistoryRecord.accountCommissionInfo[0].alias})</span></h5>\r\n\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"col-md-12 total text-center\">\r\n\r\n\r\n                                        <tr>\r\n                                            <td className=\"td-actions total_comm text-right\">\r\n\r\n                                                Total : $ {' '}\r\n                                                {/* {toHistoryOrderInfo[0].total} */}\r\n                                                <NumberFormat value={allHistoryRecord.history_info} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                            </td>\r\n                                        </tr>\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>}\r\n            </div>\r\n        </div >\r\n\r\n    );\r\n}\r\n\r\nexport default Closeposition;\r\n","const Data = {\r\n \r\n  tablePage: {\r\n    items: [\r\n      {id: 1,lot:'Buy 10 Lot', closed: 'Closed P/L', commission: 'Commission', swap: 'Swap', total: 'Total', price:'$ 1110',textA: 'Account A'},\r\n      {id: 2, lot:'Sell 10 Lot', closed: 'Closed P/L', commission: 'Commission', swap: 'Swap', total: 'Total', price:'$ 1111', textA: 'Account B'},\r\n    ]\r\n  },\r\n  dashBoardPage: {\r\n    items: [\r\n      {id: 1, title: 'Balance', textA: 'Account A', textB: 'Account B',price:'$ 400'},\r\n      {id: 2, title: 'Equity',textA: 'Account A', textB: 'Account B',price:'$ 400'},\r\n      {id: 3, title: 'Margin', textA: 'Account A', textB: 'Account B',price:'$ 400'},\r\n      {id: 4, title: 'Free Margin', textA: 'Account A', textB: 'Account B',price:'$ 400'},\r\n      {id: 5, title: 'Margin %', textA: 'Account A', textB: 'Account B',price:'$ 400'},\r\n      {id: 5, title: 'Floating P/L', textA: 'Account A', textB: 'Account B',price:'$ 400'}\r\n    ],\r\n  }\r\n};\r\n\r\nexport default Data;\r\n","import React, { useState, Fragment } from 'react';\r\nimport { Collapse } from 'reactstrap';\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport Data from './Data';\r\n\r\nexport default function Openposition(props) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const { allOpenRecord, fromOpenOrderInfo, toOpenOrderInfo, } = props;\r\n\r\n  // const sumOfTotal = allOpenRecord.reduce((current, data) => {\r\n  //     return (Math.floor(data.commission + data.swap + data.profit+ current))\r\n  //     // return (data.profit + current);\r\n  // }, 0);\r\n\r\n  let fromsum = 0;\r\n  let tosum = 0;\r\n  let fromSymbols = '';\r\n  let toSymbols = '';\r\n  if (allOpenRecord && Object.entries(allOpenRecord).length > 0) {\r\n    fromSymbols = JSON.parse(allOpenRecord.from_symbols);\r\n    fromSymbols = (fromSymbols).map(data => data).join(', ');\r\n    toSymbols = JSON.parse(allOpenRecord.to_symbols);\r\n    toSymbols = (toSymbols).map(data => data).join(', ')\r\n  }\r\n  // if(fromOpenOrderInfo && fromOpenOrderInfo.length>0){\r\n  //   fromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\r\n  // }\r\n  // if(toOpenOrderInfo && toOpenOrderInfo.length>0){\r\n  //   tosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n  // }\r\n  if (fromOpenOrderInfo && fromOpenOrderInfo.length > 0) {\r\n    // if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\r\n    //   fromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\r\n    // }else{\r\n    fromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\r\n    // }\r\n  }\r\n  if (toOpenOrderInfo && toOpenOrderInfo.length > 0) {\r\n    // if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\r\n    //   tosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap);\r\n    // }else{\r\n    tosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n    // }\r\n    // opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n  }\r\n\r\n  let sumOfTotal = tosum + fromsum;\r\n  let noRecord = ((fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total == null) && (toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total == null)) ? true : false;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"openpositions\" style={{ margin: '20px 0px' }}>\r\n        <span className=\"p-text\">Unrealized Profit/Loss</span>\r\n        <span className=\"icon-style\" onClick={toggle}>\r\n          {!isOpen ?\r\n            <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\r\n            :\r\n            <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\r\n          }\r\n        </span>\r\n      </div>\r\n      \r\n      <div>\r\n        <Collapse isOpen={isOpen}>\r\n          <Row>\r\n\r\n\r\n\r\n            {/* {Data.tablePage.items.map((item, index) =>\r\n                  <Col md={6} key={index}>\r\n                    <div className=\"card\">\r\n                      <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\r\n                      </div>\r\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                        <table className=\"table\">\r\n                          <tbody>\r\n                            <tr><td>{item.lot} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.commission} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.swap} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.total} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                )} */}\r\n\r\n            {/* {(allOpenRecord && allOpenRecord.length>0) && allOpenRecord.map((item, index) =>\r\n                    \r\n                    <Col md={6} key={index}>\r\n                            <div className=\"card\">\r\n                            <div className=\"header\">\r\n                              <h5 className={item.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{item.account.login}</h5>\r\n                              <h6 style={{fontSize:10}} className={'colorDarkBlue'}>({item.account.alias})</h6>\r\n                            </div>\r\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>\r\n                                            {item.order_type ===0 ? 'BUY ' : 'SELL ' } \r\n                                            {item.lots} {(item.lots>1) ? 'Lots':'Lot'}\r\n                                        </td>\r\n                                        <td className=\"td-actions text-right\"> {''}</td>\r\n                                    </tr>\r\n                                    <tr><td>Floating P/L </td>\r\n                                        <td className=\"td-actions text-right\">$ {item.profit}</td>\r\n                                    </tr>\r\n                                    <tr><td>Commission </td>\r\n                                        <td className=\"td-actions text-right\">$ {item.commission}</td>\r\n                                    </tr>\r\n                                    <tr><td>Swap </td>\r\n                                        <td className=\"td-actions text-right\">$ {item.swap}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Total </td>\r\n                                        <td className=\"td-actions text-right\">\r\n                                          $ {Math.floor(item.commission + item.swap + item.profit)}\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                </table>\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                        </Col>\r\n                )} */}\r\n            {/* {(allOpenRecord && allOpenRecord.length>0) &&\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <div>\r\n                            <div className=\"total-box\">\r\n                                <span className=\"text\">Sum of open positions</span>\r\n                                <span className=\"text\" style={{ float: 'right' }}>$ {sumOfTotal}</span>\r\n                            </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                } */}\r\n            {(noRecord) ?\r\n              <div className=\"text-center\">\r\n                No Record Found!\r\n                    </div>\r\n              :\r\n              <Fragment>\r\n                {(fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total !== null && (fromOpenOrderInfo && allOpenRecord.swapFrominfo)) ?\r\n\r\n                  <Col md={6}>\r\n                    <div className=\"card\">\r\n                      <div className=\"header\">\r\n                        <h5 className={allOpenRecord.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{allOpenRecord.accountFromInfo[0].login}</h5>\r\n                        <h6 style={{ fontSize: 10 }} className={'colorDarkBlue'}>({allOpenRecord.accountFromInfo[0].alias})</h6>\r\n                      </div>\r\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                        <table className=\"table\">\r\n                          <tbody>\r\n                            <tr>\r\n                              <span className=\"symbolStyle \">{fromSymbols}</span>\r\n                            </tr>\r\n                            {/* Buy 10 Lot  */}\r\n                            <tr>\r\n                              <td>\r\n                                {fromOpenOrderInfo[0].order_type == 0 ? 'BUY ' : 'SELL '}\r\n                                \r\n                                {fromOpenOrderInfo[0].lots} {(fromOpenOrderInfo[0].lots > 1) ? 'Lots' : 'Lot'}\r\n                              </td>\r\n                              <td className=\"td-actions text-right\"> {''}</td>\r\n                            </tr>\r\n                            {/* <tr><td>{(fromOpenOrderInfo[0].lots>1) ? 'Lots':'Lot'}</td>\r\n                                        <td className=\"td-actions text-right\">{fromOpenOrderInfo[0].lots}</td>\r\n                                    </tr> */}\r\n                            <tr><td>Floating P/L </td>\r\n                              <td className=\"td-actions text-right\">$ {' '}\r\n                                {/* {fromOpenOrderInfo[0].profit} */}\r\n                                <NumberFormat value={fromOpenOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                              </td>\r\n                            </tr>\r\n                            <tr><td>Commission </td>\r\n                              <td className=\"td-actions text-right\">$ {' '}\r\n                                {/* {fromOpenOrderInfo[0].commission} */}\r\n                                <NumberFormat value={fromOpenOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                              </td>\r\n                            </tr>\r\n                            <tr><td>Swap </td>\r\n                              <td className=\"td-actions text-right\">$ {' '}\r\n                                {/* {fromOpenOrderInfo[0].swap} */}\r\n                                {/* {allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length > 0 ?\r\n                                  <NumberFormat value={allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                  // (allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].swap) \r\n                                  : */}\r\n                                  <NumberFormat value={fromOpenOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                  {/* // fromOpenOrderInfo[0].swap */}\r\n                                {/* } */}\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>Total </td>\r\n                              <td className=\"td-actions text-right\">$ {' '}\r\n                                {/* $ {Math.floor(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)} */}\r\n                                {/* {allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length > 0 ?\r\n                                  <NumberFormat value={(fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} /> */}\r\n                                  {/* // Math.floor(fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap) \r\n                                  // : */}\r\n                                  <NumberFormat value={(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                                  {/* //  Math.floor(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)\r\n                                // } */}\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                  :\r\n                  <Col md={6}>\r\n                    <div className=\"card noRecordCol\"> No Record Found</div>\r\n                  </Col>\r\n                }\r\n\r\n                {(toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total !== null && (toOpenOrderInfo && allOpenRecord.swapToinfo)) ?\r\n\r\n                  <Col md={6}>\r\n                    <div className=\"card\">\r\n                      <div className=\"header\">\r\n                        <h5 className={allOpenRecord.id == '1' ? 'acntText color2' : 'acntText color2'}>{allOpenRecord.accountToInfo[0].login}</h5>\r\n                        <h6 style={{ fontSize: 10 }} className={'color2'}>({allOpenRecord.accountToInfo[0].alias})</h6>\r\n                      </div>\r\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                        <table className=\"table\">\r\n                          <tbody>\r\n                            {/* Buy 10 Lot  */}\r\n                            <tr>\r\n                              <span className=\"symbolStyle\">{toSymbols}</span>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>\r\n                                {toOpenOrderInfo[0].order_type == 0 ? 'BUY ' : 'SELL '}\r\n                                {toOpenOrderInfo[0].lots} {(toOpenOrderInfo[0].lots > 1) ? 'Lots' : 'Lot'}\r\n                              </td>\r\n                              <td className=\"td-actions text-right\"> {''}</td>\r\n                            </tr>\r\n                            {/* <tr><td>{(fromOpenOrderInfo[0].lots>1) ? 'Lots':'Lot'}</td>\r\n                                        <td className=\"td-actions text-right\">{fromOpenOrderInfo[0].lots}</td>\r\n                                    </tr> */}\r\n                            <tr><td>Floating P/L </td>\r\n                              <td className=\"td-actions text-right\">$ {' '}\r\n                                {/* {toOpenOrderInfo[0].profit} */}\r\n                                <NumberFormat value={toOpenOrderInfo[0].profit !== null ? toOpenOrderInfo[0].profit : 0} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                              </td>\r\n                            </tr>\r\n                            <tr><td>Commission </td>\r\n                              <td className=\"td-actions text-right\">$ {' '}\r\n                                {/* {toOpenOrderInfo[0].commission} */}\r\n                                <NumberFormat value={toOpenOrderInfo[0].commission !== null ? toOpenOrderInfo[0].commission : 0} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                              </td>\r\n                            </tr>\r\n                            <tr><td>Swap </td>\r\n                              <td className=\"td-actions text-right\">$ {' '}\r\n                                {/* {toOpenOrderInfo[0].swap} */}\r\n                                {/* {allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length > 0 ?\r\n                                  // (allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].swap) \r\n                                  <NumberFormat value={(allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                  : */}\r\n                                  <NumberFormat value={(toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                                  {/* // toOpenOrderInfo[0].swap\r\n                                // } */}\r\n                              </td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                              <td>Total </td>\r\n                              <td className=\"td-actions text-right\"> $ {' '}\r\n                                {/* {allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length > 0 ?\r\n                                  //  Math.floor(toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap)\r\n                                  <NumberFormat value={(toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                  : */}\r\n                                  <NumberFormat value={(toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n{/* \r\n                                  //  Math.floor(toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit)\r\n                                } */}\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                  :\r\n                  <Col md={6}>\r\n                    <div className=\"card noRecordCol\"> No Record Found</div>\r\n                  </Col>\r\n                }\r\n                {\r\n                  sumOfTotal != 0 &&\r\n                  <Row>\r\n                    <Col md={12}>\r\n                      <div>\r\n                        <div className=\"total-box\">\r\n                          <span className=\"text\">Sum of open positions</span>\r\n                          <span className=\"text\" style={{ float: 'right' }}>$ {' '}\r\n                            <NumberFormat value={sumOfTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                            {/* {sumOfTotal} */}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                }\r\n              </Fragment>\r\n            }\r\n          </Row>\r\n        </Collapse>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Collapse } from 'reactstrap';\r\nimport Select from 'react-select';\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\n// import Data from './Data';\r\nimport NumberFormat from 'react-number-format';\r\nimport Closeposition from 'views/Closeposition';\r\nimport Openposition from 'views/Openposition';\r\n\r\n// import config from '../constant/config.js';\r\nimport config from '../constant/config.js';\r\nconst axios = require('axios');\r\n\r\n// import Card from \"components/Card/Card.jsx\";\r\n// import { thArray, tdArray } from \"variables/Variables.jsx\";\r\n\r\nclass TableList extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      // isOpen: false,\r\n      allSymbols:[],\r\n      selectedOption:null,\r\n      allHistoryRecord:[],\r\n      allOpenRecord:[],\r\n      fromHistoryOrderInfo:[],\r\n      toHistoryOrderInfo:[],\r\n      commissionHistoryOrderInfo:[],\r\n      fromOpenOrderInfo:[],\r\n      toOpenOrderInfo:[],\r\n      filterlist:[],\r\n      allSymbols:[],\r\n      symbolsObj:[]\r\n    }\r\n\r\n  }\r\n  // toggle = () => {\r\n  //   this.setState({ isOpen: !this.state.isOpen })\r\n  // }\r\n  // componentWillMount() {\r\n  //   let self = this;\r\n      // axios.get(config.baseurl + '/accounts/fetchAllSymbol')\r\n      // .then(function (response) {\r\n      //   if (response.status == 200) {\r\n      //     self.setState({ allSymbols: response.data.rows })\r\n      //   }\r\n      // })\r\n\r\n      // axios.get(config.baseurl + '/filter/fetchfilterdata')\r\n      // .then(function (response) {\r\n      //   if (response.status == 200) {\r\n      //     self.setState({ filterlist: response.data.rows })\r\n      //   }\r\n      // })\r\n\r\n      // axios.get(config.baseurl + '/filter/fetchActivefilterdata')\r\n      // .then(function (response) {\r\n      //   if (response.status == 200) {\r\n      //     if(response.data.rows && response.data.rows.length>0){\r\n      //       // let symbolsObj = (response.data.rows[0].symbols).map(data => { return ({value:data, label:data})})\r\n      //         self.setState({ filterlist: response.data.rows, allSymbols: response.data.rows[0].symbols, \r\n      //         // selectedOption:symbolsObj\r\n      //        })\r\n      //     }\r\n      //   }\r\n      // });\r\n  // }\r\n\r\n  componentDidMount(){\r\n    let self = this;\r\n    axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\r\n    .then(function (response) {\r\n      // console.log(response.data, 'response.data his')\r\n      if (response.status == 200) {\r\n        // self.setState({ allHistoryRecord: response.data.rows })\r\n        self.setState({ \r\n          allHistoryRecord: response.data.rows ,\r\n          fromHistoryOrderInfo:response.data.fromHistoryOrderInfo,\r\n          toHistoryOrderInfo:response.data.toHistoryOrderInfo,\r\n          commissionHistoryOrderInfo:response.data.commissionHistoryOrderInfo\r\n        })\r\n      }\r\n    })\r\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\r\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\r\n    axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\r\n    .then(function (response) {\r\n      if (response.status == 200) {\r\n\r\n        // self.setState({ allOpenRecord: response.data.rows })\r\n        self.setState({ \r\n          allOpenRecord: response.data.rows ,\r\n          fromOpenOrderInfo:response.data.fromOpenOrderInfo,\r\n          toOpenOrderInfo:response.data.toOpenOrderInfo\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  fetchDataAccordingSymbols = (symbol) => {\r\n    let self = this;\r\n    let {startdateFrom, startdateTo,enddateFrom, enddateTo, to_account_id, from_account_id} = this.state.filterlist[0];\r\n    \r\n    let postData =  {\"to_account_id\":to_account_id, \"from_account_id\":from_account_id, \"startdateFrom\":startdateFrom, \"startdateTo\":startdateTo,\"enddateFrom\": enddateFrom, \"enddateTo\":enddateTo, \"symbol\":symbol}\r\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolHistory', {'symbol':symbol})\r\n    \r\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolHistory', postData)\r\n    axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\r\n    .then(function (response) {\r\n      // console.log(response.data, 'response.data his')\r\n      if (response.status == 200) {\r\n        // self.setState({ allHistoryRecord: response.data.rows })\r\n        self.setState({ \r\n          allHistoryRecord: response.data.rows ,\r\n          fromHistoryOrderInfo:response.data.fromHistoryOrderInfo,\r\n          toHistoryOrderInfo:response.data.toHistoryOrderInfo,\r\n          commissionHistoryOrderInfo:response.data.commissionHistoryOrderInfo\r\n\r\n        })\r\n      }\r\n    })\r\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\r\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\r\n    axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\r\n    .then(function (response) {\r\n      if (response.status == 200) {\r\n      // console.log(response.data, 'response.data open')\r\n\r\n        // self.setState({ allOpenRecord: response.data.rows })\r\n        self.setState({ \r\n          allOpenRecord: response.data.rows ,\r\n          fromOpenOrderInfo:response.data.fromOpenOrderInfo,\r\n          toOpenOrderInfo:response.data.toOpenOrderInfo\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  handleChange = selectedOption => {\r\n    this.setState({ selectedOption });\r\n    this.fetchDataAccordingSymbols(selectedOption.value);\r\n  };\r\n\r\n  renderSymbols = () => {\r\n    const { selectedOption, allSymbols } = this.state;\r\n    // let options = allSymbols.map(data => {\r\n    //   return {value:data.name, label:data.name};\r\n    // })\r\n    let options = allSymbols.map(data => {\r\n      return {value:data, label:data};\r\n    });\r\n   \r\n    return(\r\n      <Select\r\n        placeholder=\"Select Symbol...\"\r\n        className=\"S-text\"\r\n        // isMulti\r\n        value={selectedOption}\r\n        onChange={this.handleChange}\r\n        options={options}\r\n      />\r\n      )\r\n  }\r\n\r\n  render() {\r\n    const {allHistoryRecord, allOpenRecord, selectedOption, toOpenOrderInfo, fromOpenOrderInfo,fromHistoryOrderInfo,commissionHistoryOrderInfo ,toHistoryOrderInfo} = this.state;\r\n  //   const sumOfOpenTotal = allOpenRecord.reduce((current, data) => {\r\n  //     return (Math.floor(data.commission + data.swap + data.profit+ current));\r\n  // }, 0);\r\n\r\n  //   const sumOfHistoryTotal = allHistoryRecord.reduce((current, data) => {\r\n  //     return (data.profit + current);\r\n  // }, 0);\r\n    let uniqueSymbols=\"\";\r\n    if(allOpenRecord && Object.entries(allOpenRecord).length>0){\r\n      let fromSymbols = JSON.parse(allOpenRecord.from_symbols);\r\n      // fromSymbols = (fromSymbols).map(data => data).join(', ');\r\n      let toSymbols = JSON.parse(allOpenRecord.to_symbols);\r\n      let combineSymbols = fromSymbols.concat(toSymbols);\r\n      uniqueSymbols = combineSymbols.filter((item, i, ar) => ar.indexOf(item) === i);\r\n      uniqueSymbols = (uniqueSymbols).map(data => data).join(', ')\r\n    }\r\n    let fromsum=0; \r\n    let tosum=0;\r\n    // if(fromHistoryOrderInfo && commissionHistoryOrderInfo && fromHistoryOrderInfo.length>0){\r\n      if(fromHistoryOrderInfo && fromHistoryOrderInfo.length>0){\r\n      fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\r\n    }\r\n   \r\n    if(toHistoryOrderInfo && toHistoryOrderInfo.length>0){\r\n      tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\r\n    }\r\n\r\n    let sumOfHistoryTotal = tosum + fromsum;\r\n\r\n    let openfromsum=0; \r\n    let opentosum=0;\r\n    if((fromOpenOrderInfo && fromOpenOrderInfo.length>0 && fromOpenOrderInfo[0].total!=null) ){\r\n      // if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\r\n      //   openfromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\r\n      // }else{\r\n       openfromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\r\n      \r\n    }\r\n    if((toOpenOrderInfo && toOpenOrderInfo.length>0  && toOpenOrderInfo[0].total!=null) ){\r\n      // if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\r\n      //   opentosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit+ toOpenOrderInfo[0].swap);\r\n      // }\r\n\r\n      // else{\r\n      //   opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n      // }\r\n      opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n    }\r\n\r\n    let sumOfOpenTotal = opentosum + openfromsum;\r\n\r\n  //   console.log(opentosum, 'opentosum')\r\n  //   console.log(openfromsum, 'openfromsum')\r\n  //  console.log(sumOfHistoryTotal, \"sumOfHistoryTotal------\");\r\n  //  console.log(sumOfOpenTotal, \"sumOfOpenTotal-----\");\r\n  //  console.log(allOpenRecord, 'allOpenRecord')\r\n   \r\n\r\n\r\n    return (\r\n      <div className=\"content col-md-12 col-sm-6\">\r\n        <Grid fluid className=\"symbol-box\">\r\n          {/* <div className=\"symbol-box\"> */}\r\n          {/* <span className=\"S-text\">EURUSD</span> */}\r\n          {/* <div style={{ borderBottom: '2px solid grey' }}>\r\n            {this.renderSymbols()}\r\n\r\n          </div> */}\r\n          {/* <div style={{ margin: '20px 0px' }}>\r\n            <span className=\"p-text\">Open Positions</span>\r\n            <span className=\"icon-style\" onClick={this.toggle}>\r\n              <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\r\n            </span>\r\n          </div>\r\n          <div>\r\n\r\n            <Collapse isOpen={this.state.isOpen}>\r\n              <Row>\r\n                {Data.tablePage.items.map((item, index) =>\r\n                  <Col md={6} key={index}>\r\n                    <div className=\"card\">\r\n                      <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\r\n                      </div>\r\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                        <table className=\"table\">\r\n                          <tbody>\r\n                            <tr><td>{item.lot} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.commission} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.swap} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.total} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                )}\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <div>\r\n                      <div className=\"total-box\">\r\n                        <span className=\"text\">Sum of open position</span>\r\n                        <span className=\"text\" style={{ float: 'right' }}>$111111</span>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Row>\r\n            </Collapse>\r\n          </div> */}\r\n          {/* closed position */}\r\n          <Openposition \r\n            allOpenRecord={allOpenRecord}\r\n            toOpenOrderInfo={toOpenOrderInfo}\r\n            fromOpenOrderInfo={fromOpenOrderInfo}\r\n            />\r\n          <Closeposition \r\n            allHistoryRecord={allHistoryRecord}\r\n            fromHistoryOrderInfo={fromHistoryOrderInfo}\r\n            commissionHistoryOrderInfo={commissionHistoryOrderInfo}\r\n            toHistoryOrderInfo={toHistoryOrderInfo}\r\n            />\r\n          <Row>\r\n            \r\n            <Col md={12} sm={6}>\r\n              <div className={sumOfHistoryTotal + sumOfOpenTotal >= 0 ? \"summary-box\" : \"summary-box-red\"}>\r\n                \r\n                \r\n                {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\r\n                {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\r\n                <span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\r\n                \r\n                <Col md={12} sm={12}>\r\n                  <div className=\"summary-text text-center\" style={{fontWeight:600,color:\"#797979\"}}>Summary For ({uniqueSymbols}) {allHistoryRecord.history_info !==0 && (<span> + Commission</span>)} </div>\r\n                </Col>\r\n                <Col md={12} sm={12}>\r\n                  <div className=\"text-center\" style={{fontWeight:'bold',fontSize:\"18px\"}}>$ {' '}\r\n                  <NumberFormat value={allHistoryRecord.history_info !== undefined ?  sumOfHistoryTotal + sumOfOpenTotal + allHistoryRecord.history_info : sumOfHistoryTotal + sumOfOpenTotal } displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                  \r\n                  \r\n                  {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\r\n                  \r\n                  </div>\r\n                </Col>\r\n                \r\n                <div className=\"clearfix\"></div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          {/* </div> */}\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default TableList;","import React, { Component } from 'react';\r\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\r\n// import SweetAlert from 'react-bootstrap-sweetalert';\r\nimport swal from 'sweetalert';\r\nimport config from '../constant/config.js';\r\nconst axios = require('axios');\r\n\r\nlet intervalSet;\r\nlet timerWaitInterval;\r\nlet timerWait = 100;\r\nclass Innerlogin extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loginForm: false,\r\n            setShow: false,\r\n            show: true,\r\n            login: '',\r\n            password: '',\r\n            broker: '',\r\n            alias: '',\r\n            alert: null,\r\n            persons: [],\r\n            shwPwd: false,\r\n            shwPwd: false,\r\n            shwLogin: false,\r\n            shwbroker: false,\r\n            accountlist: [],\r\n            editForm: false,\r\n            detailForm: false,\r\n            editData: [],\r\n            edituser: '',\r\n            editserver: '',\r\n            editalias: '',\r\n            editstatus: '',\r\n            id: '',\r\n            // tryAgainConnection: false,\r\n            currentAddLogin: null,\r\n            currentAddBroker: null,\r\n            currentAddAlias: null,\r\n            timerShow: false,\r\n            closebtn: true\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onUpdate = this.onUpdate.bind(this);\r\n\r\n    }\r\n    // delete alert\r\n    // deleteThisGoal() {\r\n    //     const getAlert = () => (\r\n    //         <SweetAlert\r\n    //             success\r\n    //             title=\"Woot!\"\r\n    //             onConfirm={() => this.hideAlert()}\r\n    //         >\r\n    //             Hello world!\r\n    //       </SweetAlert>\r\n    //     );\r\n\r\n    //     this.setState({\r\n    //         alert: getAlert()\r\n    //     });\r\n    // }\r\n    fectheAllAccount() {\r\n        let self = this;\r\n        axios.get(config.baseurl + '/users/allAccounts')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.setState({ accountlist: response.data.rows })\r\n                }\r\n            })\r\n        // console.log(response.status,\"accountlist\");\r\n    }\r\n    onChange(e) {\r\n\r\n        this.setState({ error: '' })\r\n        if (e.target.name === 'login') {\r\n            const re = /^[0-9\\b]+$/;\r\n            if (e.target.value === '' || re.test(e.target.value)) {\r\n                this.setState({ [e.target.name]: e.target.value })\r\n            }\r\n            else if (e.target.value !== re) {\r\n                this.setState({ error: 'alphabet' })\r\n            }\r\n        }\r\n        else {\r\n\r\n            this.setState({ [e.target.name]: e.target.value.trim() })\r\n        }\r\n\r\n    }\r\n\r\n    checkUserConnected = (login, broker) => {\r\n        let self = this;\r\n        axios.post(config.baseurl + '/users/checkUserConnected', { login: login, broker: broker })\r\n            .then(function (response) {\r\n\r\n                if (response.status == 200) {\r\n                    if (response.data.connected) {\r\n                        self.setState({ currentAddLogin: null, currentAddBroker: null, currentAddAlias: null });\r\n                        clearInterval(intervalSet);\r\n                        clearInterval(timerWaitInterval);\r\n                        self.setState({ timerShow: false });\r\n\r\n                        timerWait = 100\r\n                        // self.setState({ tryAgainConnection: false });\r\n                        self.setState({ loginForm: false })\r\n                        self.handleClose();\r\n                        self.fectheAllAccount()\r\n                        // swal({\r\n                        //     text: \"Connected\",\r\n                        //     timer: 2000,\r\n                        //     button: false\r\n                        // })\r\n                    }\r\n                } else {\r\n\r\n                }\r\n            })\r\n    }\r\n\r\n    setIntervalCustom = () => {\r\n        let self = this;\r\n        var name = \"Authorization Process Failed\";\r\n        var content = document.createElement('div');\r\n        content.innerHTML = ' <strong>' + name + '</strong>';\r\n\r\n\r\n        timerWaitInterval = setInterval(function () {\r\n            timerWait--;\r\n            if (timerWait <= 0) {\r\n                self.setState({ currentAddLogin: null, currentAddBroker: null, currentAddAlias: null });\r\n                clearInterval(intervalSet);\r\n                clearInterval(timerWaitInterval);\r\n                self.setState({ timerShow: false });\r\n                self.setState({ loginForm: false })\r\n                self.setState({ closebtn: true })\r\n                timerWait = 100\r\n                swal({\r\n\r\n\r\n                    content: content,\r\n                    timer: 2000,\r\n                    button: false\r\n\r\n                })\r\n            }\r\n\r\n            else {\r\n                self.setState({ timerShow: true });\r\n\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const userdetail = {\r\n            login: this.state.login,\r\n            password: this.state.password,\r\n            broker: this.state.broker,\r\n            alias: this.state.alias\r\n\r\n\r\n        }\r\n        if (this.state.login == '') {\r\n            this.setState({ error: 'login' })\r\n        }\r\n        else if (this.state.password == '') {\r\n            this.setState({ error: 'password' })\r\n        }\r\n        else if (this.state.broker == '') {\r\n            this.setState({ error: 'broker' })\r\n        } else {\r\n            this.setState({ error: '' })\r\n        }\r\n        if (this.state.login !== '' && this.state.password !== '' && this.state.broker !== '') {\r\n\r\n            // {\r\n            //     swal({\r\n            //         text: \"User Already Connected\",\r\n            //         timer: 2000,\r\n            //         button: false\r\n            //     })\r\n            // }\r\n            let self = this;\r\n            self.setState({ closebtn: false })\r\n            axios.post(config.baseurl + '/users/addUser', userdetail)\r\n                .then(function (response) {\r\n                    if (response.data.status === true) {\r\n                        self.setIntervalCustom();\r\n                        self.fectheAllAccount();\r\n                        self.setState({ currentAddLogin: userdetail.login, currentAddBroker: userdetail.broker, currentAddAlias: userdetail.alias });\r\n                        intervalSet = setInterval(function () {\r\n                            self.checkUserConnected(userdetail.login, userdetail.broker)\r\n                        }, 5000);\r\n\r\n                    }\r\n                    if (response.data.status == 202) {\r\n                        swal({\r\n                            text: \"User doesn't exist\",\r\n                            timer: 2000,\r\n                            button: false\r\n                        })\r\n\r\n                    }\r\n                    if (response.data.status == '500') {\r\n                        swal({\r\n                            text: \"User Already Connected!\",\r\n                            timer: 2000,\r\n                            button: false\r\n                        })\r\n                        self.setState({ closebtn: true })\r\n\r\n\r\n                    }\r\n                    else if (response.status == 201) {\r\n                        swal({\r\n                            title: \"Done!\",\r\n                            text: response.data,\r\n                            // icon: \"{response.status == 200 ? 'warning ':'success'}\",\r\n                            timer: 2000,\r\n                            button: false\r\n                        })\r\n                    }\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    self.handleClose();\r\n                });\r\n\r\n\r\n\r\n            /////////////////// redirect to dashboard\r\n            // login(user).then(res => {\r\n            //     if (res) {\r\n            //         this.props.history.push(`\\profile`)\r\n            //     }\r\n            // })\r\n        }\r\n    }\r\n    onUpdate(e) {\r\n        e.preventDefault();\r\n        const userdetail = {\r\n            id: this.state.id,\r\n            user: this.state.edituser,\r\n            broker: this.state.editserver,\r\n            alias: this.state.editalias\r\n        }\r\n        let self = this;\r\n        axios.post(config.baseurl + '/users/updateuser', userdetail)\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    // self.setState({ accountlist: response.data.rows })\r\n                    self.fectheAllAccount();\r\n                    self.handleCloseEdit();\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n            });\r\n    }\r\n    // checkValidUser = ()=> {\r\n    //     console.log(this.state,'loginnnnnnnnnnnnnnnnnnnnnnnn')\r\n    //     const userdetail = {\r\n    //         login: this.state.login,\r\n    //         password: this.state.password,\r\n    //         broker: this.state.broker,\r\n    //         alias: this.state.alias\r\n    //     }\r\n    //     axios.get(config.baseurl + '/accounts/matchUser',userdetail)\r\n    //     .then(function (response) {\r\n\r\n    //         if (response.status == 200) {\r\n    //             // alert(response.data)\r\n    //             swal({\r\n    //                 title: \"Done!\",\r\n    //                 text: response.data,\r\n    //                 // icon: \"{response.status == 200 ? 'warning ':'success'}\",\r\n    //                 timer: 2000,\r\n    //                 button: false\r\n    //             })\r\n\r\n    //         }\r\n    //         // console.log(response);\r\n    //     })\r\n    //     .catch(function (error) {\r\n    //         console.log(error);\r\n    //     });\r\n    // }\r\n    toogle = () => {\r\n        this.setState({ loginForm: !this.state.loginForm, })\r\n        this.setState({ login: '', password: '', broker: '', alias: '' })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ loginForm: false })\r\n\r\n    }\r\n    handleCloseEdit = () => {\r\n        this.setState({ editForm: false })\r\n    }\r\n    handleCloseDetail = () => {\r\n        this.setState({ detailForm: false })\r\n    }\r\n    handleShow = () => {\r\n        this.setState({ setShow: true })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fectheAllAccount();\r\n\r\n    }\r\n    createTr = () => {\r\n        return this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => {\r\n            return (\r\n                <tr key={index}>\r\n                    <th scope=\"row\">{index + 1}</th>\r\n                    <td>{item.login}</td>\r\n                    <td>{item.broker}</td>\r\n                    <td>{item.alias}</td>\r\n                    <td style={{ fontWeight: 600 }}>{item.launched == 1 ? 'Connected' : 'Disconnected'}</td>\r\n                    <td>\r\n                        <a href=\"\" onClick={(e) => this.viewFilter(e, item)}><i className=\"fa fa-eye facolor\" aria-hidden=\"true\"></i></a>\r\n                        <a href=\"\" onClick={(e) => this.editFilter(e, item)}><i className=\"fa fa-pencil-square-o facolor\" aria-hidden=\"true\"></i></a>\r\n                        {/* <a href=\"\" onClick={(e)=> this.deleteFilter(e,item)}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></a> */}\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n    editFilter(e, data) {\r\n        e.preventDefault();\r\n        this.setState({ editForm: true, editData: data, id: data.id, edituser: data.login, editserver: data.broker, editalias: data.alias })\r\n    }\r\n    editAlias(e) {\r\n        this.setState({ editalias: e.target.value })\r\n    }\r\n    viewFilter(e, data) {\r\n        e.preventDefault();\r\n        this.setState({ detailForm: true, edituser: data.login, editserver: data.broker, editalias: data.alias, editstatus: data.status })\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"content\">\r\n                <Grid fluid>\r\n                    <Row>\r\n                        <Col md={12} sm={6}>\r\n                            <div className=\"terminal-box\">\r\n                                <span className=\"terminal-text\">Terminal Accounts</span>\r\n                                {/* <div style={{ padding: '20px' }}>\r\n                                    <a\r\n                                        onClick={() => this.deleteThisGoal()}\r\n                                        className='btn btn-danger'\r\n                                    >\r\n                                        <i className=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete Goal\r\n                                     </a>\r\n                                    {this.state.alert}\r\n                                </div> */}\r\n                            </div>\r\n                            <button className=\"pull-right add-button\" onClick={this.toogle}>Add New</button>\r\n\r\n                            {this.state.loginForm &&\r\n                                <Modal show={this.state.show} onHide={this.state.closebtn ? this.handleClose : () => console.log('error')} >\r\n                                    {/* <Modal.Header closeButton>\r\n                                        <Modal.Title>Log In</Modal.Title>\r\n                                    </Modal.Header> */}\r\n                                    <Modal.Body>\r\n                                        <div className=\"form-box\">\r\n                                            <Modal.Header closeButton={this.state.closebtn ? true : false}>\r\n                                                <Modal.Title className=\"text-center\"><b>Log In</b></Modal.Title>\r\n                                            </Modal.Header>\r\n                                            <form style={{ marginTop: '20px' }} onSubmit={this.onSubmit}>\r\n                                                <label >User Name</label>\r\n                                                <input type='text'\r\n                                                    className=\"Itext labelSet \" placeholder=\"Enter Username\" name=\"login\" value={this.state.login} onChange={this.onChange} disabled={this.state.currentAddLogin ? true : false}\r\n                                                // onKeyUp={this.checkValidUser}\r\n                                                ></input>\r\n\r\n\r\n                                                {(this.state.error == \"login\") &&\r\n                                                    <span style={{ color: 'red', fontSize: '13px' }}>Please enter Username </span>\r\n                                                }\r\n\r\n                                                {(this.state.error == \"alphabet\") &&\r\n                                                    <span style={{ color: 'red', fontSize: '13px' }}>\"Invalid format. login should contain only digits.\"</span>\r\n                                                }\r\n                                                <br></br>\r\n                                                <label className=\"labeAdjust\">Password</label>\r\n                                                <input className=\"Itext labelSet\" placeholder=\"Password\" name=\"password\" type=\"password\" value={this.state.password} onChange={this.onChange} disabled={this.state.currentAddLogin ? true : false}></input>\r\n                                                {(this.state.error == \"password\") &&\r\n                                                    <span style={{ color: 'red', fontSize: '13px' }}>Please enter Password </span>\r\n                                                }\r\n                                                <br></br>\r\n                                                <label className=\"labeAdjust\">Server</label>\r\n                                                <input className=\"Itext labelSet\" name=\"broker\" placeholder=\"Server\" value={this.state.broker} onChange={this.onChange} disabled={this.state.currentAddBroker ? true : false}></input>\r\n                                                {(this.state.error == \"broker\") &&\r\n                                                    <span style={{ color: 'red', fontSize: '13px' }}>Please enter Server </span>\r\n                                                }\r\n                                                <br></br>\r\n                                                <label className=\"labeAdjust\">Alias</label>\r\n                                                <input className=\"Itext labelSet\" placeholder=\"Alias\" value={this.state.alias} onChange={this.onChange} name=\"alias\" disabled={this.state.currentAddAlias ? true : false}></input>\r\n                                                {this.state.timerShow &&\r\n                                                    <p>\r\n                                                        Connecting to server... {timerWait} seconds remains\r\n                                                </p>\r\n                                                }\r\n                                                <div className=\" topadjust clearfix\">\r\n                                                    {/* {this.state.tryAgainConnection === false ? */}\r\n                                                    {/* ( */}\r\n                                                    {this.state.timerShow == false &&\r\n\r\n                                                        <button type=\"submit\" className=\"save\" className={!this.state.login || !this.state.password || !this.state.broker ? \"loginButton\" : \"loginButton save2 save1\"}>Submit</button>}\r\n                                                    {/* ) */}\r\n                                                    {/* //     :\r\n                                                    //     (this.state.timerShow == false && <div ></div>)\r\n                                                    // } */}\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n\r\n                                    </Modal.Body>\r\n                                    {/* <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                                            Close\r\n                                  </Button>\r\n                                        \r\n                                    </Modal.Footer> */}\r\n                                </Modal>\r\n\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                    <div style={{ background: '#ffffff' }}>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                <div style={{ padding: '10px' }}>\r\n                                    <table className=\"table table-striped\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th scope=\"col\">Sr.No.</th>\r\n                                                <th scope=\"col\">User Name</th>\r\n                                                <th scope=\"col\">Server</th>\r\n                                                <th scope=\"col\">Alias</th>\r\n                                                <th scope=\"col\">Status</th>\r\n                                                <th scope=\"col\">Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {/* {this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => { */}\r\n                                            {/* // console.log(\"hhhhhhhhhhh\") */}\r\n                                            {this.createTr()}\r\n                                            {/* })} */}\r\n                                            {/* <tr>\r\n                                                <th scope=\"row\">2</th>\r\n                                                <td>Jacob</td>\r\n                                                <td>Thornton</td>\r\n                                                <td>5.1.2.9</td>\r\n                                                <td>Connected</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th scope=\"row\">3</th>\r\n                                                <td>Larry</td>\r\n                                                <td>the Bird</td>\r\n                                                <td>ab@123</td>\r\n                                                <td>Connected</td>\r\n                                            </tr> */}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </Col>\r\n                            <div className=\"centerbtn\">\r\n                            </div>\r\n\r\n                        </Row>\r\n                    </div>\r\n\r\n                </Grid>\r\n\r\n                {this.state.editForm &&\r\n                    <Modal show={this.state.show} onHide={this.handleCloseEdit}>\r\n                        {/* <Modal.Header closeButton>\r\n                                        <Modal.Title>Log In</Modal.Title>\r\n                                    </Modal.Header> */}\r\n                        <Modal.Body>\r\n                            <div className=\"form-box\">\r\n                                <Modal.Header closeButton>\r\n                                    <Modal.Title className=\"text-center\"><b>Edit</b></Modal.Title>\r\n                                </Modal.Header>\r\n                                <form style={{ marginTop: '20px' }} onSubmit={this.onUpdate}>\r\n                                    <label>USER</label>\r\n                                    <input className=\"Itext\" disabled name=\"broker\" placeholder=\"Server\" value={this.state.edituser} ></input>\r\n\r\n                                    <label>Server</label>\r\n                                    <input className=\"Itext\" disabled name=\"broker\" placeholder=\"Server\" value={this.state.editserver} ></input>\r\n                                    <label>Alias</label>\r\n                                    <input className=\"Itext\" placeholder=\"Alias\" value={this.state.editalias} name=\"alias\" onChange={(e) => this.editAlias(e)}></input>\r\n                                    <div className=\"clearfix\">\r\n                                        <button type=\"submit\" className=\"save\">Update</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n\r\n                        </Modal.Body>\r\n                        {/* <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                                            Close\r\n                                  </Button>\r\n                                        \r\n                                    </Modal.Footer> */}\r\n                    </Modal>\r\n\r\n                }\r\n\r\n                {this.state.detailForm &&\r\n                    <Modal show={this.state.show} onHide={this.handleCloseDetail}>\r\n                        {/* <Modal.Header closeButton>\r\n                                        <Modal.Title>Log In</Modal.Title>\r\n                                    </Modal.Header> */}\r\n                        <Modal.Body>\r\n                            <div className=\"form-box\">\r\n                                <Modal.Header closeButton>\r\n                                    <Modal.Title className=\"text-center\"><b>Details</b></Modal.Title>\r\n                                </Modal.Header>\r\n                                <div className=\"detail_div\">\r\n                                    <table>\r\n                                        <tr>\r\n                                            <td><label>User Name</label></td>\r\n                                            <td><label>{this.state.edituser}</label></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><label>Server</label></td>\r\n                                            <td><label>{this.state.editserver}</label></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><label>Alias</label></td>\r\n                                            <td><label>{this.state.editalias}</label></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><label>Status</label></td>\r\n                                            <td><label>{this.state.editstatus == 1 ? 'Connected' : 'Disconnected'}</label></td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </Modal.Body>\r\n                    </Modal>\r\n\r\n                }\r\n\r\n\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Innerlogin;","import React, { Component } from \"react\";\r\n// import ChartistGraph from \"react-chartist\";\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\nimport TableList from '../views/TableList';\r\n// import { Card } from \"components/Card/Card.jsx\";\r\n// import { StatsCard } from \"components/StatsCard/StatsCard.jsx\";\r\n// import { Tasks } from \"components/Tasks/Tasks.jsx\";\r\nimport NumberFormat from 'react-number-format';\r\nimport ReactLoading from \"react-loading\";\r\nimport Data from './Data';\r\nimport Moment from 'react-moment';\r\nimport config from '../constant/config.js';\r\n// import {DatatablePage} from './DatatablePage';\r\nconst axios = require('axios');\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      details: [],\r\n      accountlist: [],\r\n      persons: [],\r\n      filterlist: [],\r\n      formData: [],\r\n      errorMassege: false,\r\n      error: '',\r\n      dateTime: '',\r\n      fromAccounts: '',\r\n      fromSymbol: '',\r\n      toAccounts: '',\r\n      toSymbol: '',\r\n      fromOpenOrderInfos: '',\r\n      toOpenOrderInfos: '',\r\n      total: '',\r\n      totalTo: '',\r\n      blockloader: true,\r\n      // allSymbols:[],\r\n      // symbolsObj:[],\r\n      activeProfileName: '',\r\n      autoClose: ' ',\r\n      //\r\n\r\n\r\n      allHistoryRecord: [],\r\n      allOpenRecord: [],\r\n      fromHistoryOrderInfo: [],\r\n      toHistoryOrderInfo: [],\r\n      commissionHistoryOrderInfo: [],\r\n      fromOpenOrderInfo: [],\r\n      toOpenOrderInfo: [],\r\n      //\r\n\r\n\r\n    }\r\n  }\r\n  componentWillMount() {\r\n    this.fetchCloseAndOpenPositionTotal();\r\n    this.getAllAccounts();\r\n    this.fetchActivefilterData();\r\n    this.fetchAllOpenTrade();\r\n    this.fetchStatusData();\r\n\r\n\r\n  }\r\n  fetchCloseAndOpenPositionTotal = () => {\r\n    let self = this;\r\n    axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\r\n      .then(function (response) {\r\n        console.log(response.data, 'response.data his')\r\n        if (response.status == 200) {\r\n          // self.setState({ allHistoryRecord: response.data.rows })\r\n          self.setState({\r\n            allHistoryRecord: response.data.rows,\r\n            fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,\r\n            toHistoryOrderInfo: response.data.toHistoryOrderInfo,\r\n            commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\r\n          })\r\n        }\r\n      })\r\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\r\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\r\n    axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n\r\n          // self.setState({ allOpenRecord: response.data.rows })\r\n          self.setState({\r\n            allOpenRecord: response.data.rows,\r\n            fromOpenOrderInfo: response.data.fromOpenOrderInfo,\r\n            toOpenOrderInfo: response.data.toOpenOrderInfo\r\n          })\r\n        }\r\n      })\r\n  }\r\n  createLegend(json) {\r\n    var legend = [];\r\n    for (var i = 0; i < json[\"names\"].length; i++) {\r\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\r\n      legend.push(<i className={type} key={i} />);\r\n      legend.push(\" \");\r\n      legend.push(json[\"names\"][i]);\r\n    }\r\n    return legend;\r\n  }\r\n\r\n  getAllAccounts = () => {\r\n    let self = this;\r\n    axios.get(config.baseurl + '/accounts/fetchAllAccounts')\r\n      .then(function (response) {\r\n\r\n        if (response.status == 200) {\r\n          self.setState({ accountlist: response.data.rows })\r\n        }\r\n      });\r\n  }\r\n\r\n  fetchActivefilterData = () => {\r\n    let self = this;\r\n    axios.get(config.baseurl + '/filter/fetchActivefilterdata')\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          // console.log(response, \"active dat\")\r\n          self.setState({\r\n            filterlist: response.data.rows,\r\n            activeProfileName: response.data.rows[0].profile_name,\r\n            autoClose: response.data.rows[0].auto_close !== 0 ? 'ON' : 'OFF'\r\n          })\r\n          // console.log(response.data.rows.accountFromInfo,\"filterlist----------------------\");\r\n\r\n          if (self.state.filterlist.length == 0) {\r\n            self.setState({ errorMassege: true })\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  fetchAllOpenTrade = () => {\r\n    let self = this;\r\n    axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          self.setState({ dateTime: response.data.filteredInfoTime })\r\n          // console.log(self.state.dataOpenTrade.accountFromInfo,\"outyfjhkjh\");\r\n        }\r\n      });\r\n  }\r\n\r\n  fetchStatusData = () => {\r\n    let self = this;\r\n    let tottal = 0;\r\n    axios.get(config.baseurl + '/accounts/fetchStatusData')\r\n      .then(function (response) {\r\n        console.log(response, \"active dat\")\r\n\r\n        if (response.status == 200) {\r\n\r\n          self.setState({ fromAccounts: response.data.fromAccounts })\r\n          self.setState({ fromSymbol: response.data.fromSymbol })\r\n          // console.log(fromSymbol,\"fromSymbol\");\r\n          self.setState({ toAccounts: response.data.toAccounts })\r\n          self.setState({ toSymbol: response.data.toSymbol })\r\n          self.setState({ fromOpenOrderInfos: response.data.fromOpenOrderInfos[0] })\r\n          if (response.data.fromOpenOrderInfos.length > 0) {\r\n            self.setState({ blockloader: false })\r\n            if (response.data.fromOpenOrderInfos[0].order_type == 0) {\r\n              self.setState({ total: response.data.fromSymbol.contract_size * (response.data.fromOpenOrderInfos[0].lots) })\r\n            } else {\r\n              self.setState({ total: response.data.fromSymbol.contract_size * -(response.data.fromOpenOrderInfos[0].lots) })\r\n            }\r\n            console.log(response.data.fromSymbol.contract_size * -(response.data.fromOpenOrderInfos[0].lots), \"total\");\r\n            self.setState({ toOpenOrderInfos: response.data.toOpenOrderInfos[0] })\r\n          }\r\n          if (response.data.toOpenOrderInfos.length > 0) {\r\n            if (response.data.toOpenOrderInfos[0].order_type == 0) {\r\n              self.setState({ totalTo: response.data.toSymbol.contract_size * (response.data.toOpenOrderInfos[0].lots) })\r\n            } else {\r\n              self.setState({ totalTo: response.data.toSymbol.contract_size * -(response.data.toOpenOrderInfos[0].lots) })\r\n            }\r\n          }\r\n          // let Finaltotal = {t}\r\n          // console.log(self.state.tottal,\"totalTo\");\r\n\r\n          // console.log(self.state.fromOpenOrderInfos.lots,\"\");\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n  showData = (accountDetailValue) => {\r\n\r\n\r\n    //    if (this.state.accountDetailValue == null || this.state.accountDetailValue == '') {\r\n    //     this.setState({ error: 'accountDetailValue' })\r\n    //     return\r\n    //  }\r\n    //  else{\r\n    //     this.setState({error:''})\r\n    // }\r\n    // return this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => {\r\n    //   if(accountDetailValue==='margin_level'){\r\n    //       return (\r\n    //         <td className={index !== (this.state.accountlist.length - 1) ? 'tdClr2 tdClr' : 'tdClr2'} key={index}>\r\n    //         {item.accounts_details[0][accountDetailValue]} %</td>\r\n    //       )\r\n    //   }\r\n    //   return (\r\n    //     <td className={index !== (this.state.accountlist.length - 1) ? 'tdClr2 tdClr' : 'tdClr2'} key={index}>\r\n    //     {item.accounts_details[0].currency == 'USD' ? '$' : ''} {item.accounts_details[0][accountDetailValue]}</td>\r\n    //   )\r\n    // })\r\n    return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\r\n      if (accountDetailValue === 'margin_level') {\r\n        return (\r\n          <>\r\n            <td className=\"tdClr2 tdClr boldText\" key={index}>\r\n              <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\r\n            </td>\r\n            <td className=\"tdClr2 boldText\" key={index}>\r\n              {/* {item.accountToInfo[0].accounts_details[0][accountDetailValue]} % */}\r\n              <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\r\n            </td>\r\n          </>\r\n        )\r\n      }\r\n      if (item.accountFromInfo.length > 0) {\r\n        return (\r\n          <>\r\n            <td className=\"tdClr2 tdClr boldText\" key={index}>\r\n              {item.accountFromInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''}  {' '}\r\n              <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n            </td>\r\n\r\n            <td className=\"tdClr2 boldText\" key={index}>\r\n              {item.accountToInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''} {' '}\r\n              {/* {item.accountToInfo[0].accounts_details[0][accountDetailValue]} */}\r\n              <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n            </td>\r\n          </>\r\n        )\r\n\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  tableHeader = () => {\r\n\r\n    // return this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => {\r\n    //   return (\r\n    //     <th key={index} className={item.accounts_details[0].account_id == 1 && index !== (this.state.accountlist.length - 1) ? 'bText colorDarkBlue text-center tdClr2 tdClr' : 'bText colorDarkBlue text-center tdClr2'}>\r\n    //       <span>\r\n    //         {item.login}\r\n    //       </span>\r\n    //     <div className=\"colorDarkBlue\" style={{fontSize:10}}> \r\n    //       ({(item.alias!=null) ? item.alias : '-'})\r\n    //     </div>\r\n    //     </th>\r\n\r\n    //   )\r\n    // }\r\n    // )\r\n    return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\r\n      return (\r\n        <>\r\n          <th key={index} className=\"bText colorDarkBlue text-center tdClr2 tdClr\">\r\n            <div className=\"colorDarkBlue\" >\r\n              {(item.accountFromInfo[0].alias != null) ? item.accountFromInfo[0].alias : '-'}\r\n            </div>\r\n            <span style={{ fontSize: 10 }}>\r\n              {item.accountFromInfo[0].login}\r\n            </span>\r\n\r\n          </th>\r\n          <th key={index} className=\"bText color2 text-center tdClr2\">\r\n            <div className=\"color2\" >\r\n              {(item.accountToInfo[0].alias != null) ? item.accountToInfo[0].alias : '-'}\r\n            </div>\r\n            <span style={{ fontSize: 10 }}>\r\n              {item.accountToInfo[0].login}\r\n            </span>\r\n\r\n          </th>\r\n        </>\r\n\r\n      )\r\n\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    const { allHistoryRecord, fromHistoryOrderInfo, toHistoryOrderInfo, commissionHistoryOrderInfo,\r\n      allOpenRecord, fromOpenOrderInfo, toOpenOrderInfo, } = this.state;\r\n\r\n\r\n    let fromsum = 0;\r\n    let tosum = 0;\r\n    let fromsum1 = 0;\r\n    let tosum1 = 0;\r\n\r\n\r\n    if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\r\n      fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\r\n    }\r\n    if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\r\n      tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\r\n    }\r\n\r\n    let sumOfTotal = tosum + fromsum;\r\n    if (fromOpenOrderInfo && fromOpenOrderInfo.length > 0) {\r\n\r\n      fromsum1 = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\r\n\r\n    }\r\n    if (toOpenOrderInfo && toOpenOrderInfo.length > 0) {\r\n\r\n      tosum1 = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n\r\n    }\r\n\r\n    let sumOfTotal1 = tosum1 + fromsum1;\r\n    const dateToFormat = new Date();\r\n    let FinalTotal = 0\r\n\r\n    return (\r\n\r\n      <div className=\"\">\r\n        {this.state.errorMassege == true &&\r\n          <div className=\"popup\">\r\n\r\n            <div className=\"card w-75 \">\r\n              <div className=\"card-body topmargin\">\r\n                <div className=\" card-text popuptext\" role=\"alert\">Please Select Filters To Continue...</div>\r\n              </div>\r\n            </div>\r\n          </div>}\r\n\r\n        {/* {\r\n          (this.state.blockloader) &&\r\n          <div className=\"blockloader\">\r\n            <div className=\"col-md-2 offset-md-5 loaderSet\">\r\n              <ReactLoading color={'#333'} type=\"spinningBubbles\" />\r\n            </div>\r\n          </div>\r\n        } */}\r\n\r\n        <div className=\"content\">\r\n          {this.state.errorMassege != true &&\r\n\r\n            <Grid fluid>\r\n\r\n              <Row>\r\n                <div className=\"lastUpdate\">\r\n                  <span> Last Updated :  </span>\r\n                  {this.state.dateTime}(UTC)  </div>\r\n                <Col md={12} sm={6}>\r\n                  <div className=\"terminal-box\">\r\n\r\n                    <span className=\"terminal-text\">Profile</span>\r\n                  </div>\r\n                  <Row >\r\n                    <Col lg={6} sm={6}>\r\n                      <div className=\"card card-stats\">\r\n                        <div className=\"content\">\r\n                          <Row className=\"row\">\r\n                            <Col xs={5}>\r\n                              <div style={{ fontSize: '5em' }} className=\"icon-big text-center icon-warning\">\r\n                                <i className=\"pe-7s-display1 text-warning\"></i>\r\n                              </div>\r\n                            </Col>\r\n                            <div className=\"col-xs-7\">\r\n                              <div className=\"numbers\"><p style={{\r\n                                textAlign: 'center',\r\n                                fontSize: '25px',\r\n                                marginTop: '15px'\r\n                              }}>Active Profile </p></div>\r\n                            </div>\r\n                          </Row>\r\n                          <div className=\"footer\"><hr /><p style={{ textAlign: 'center', fontSize: '2em' }}>{this.state.activeProfileName}</p></div></div></div>\r\n                    </Col>\r\n\r\n                    <div className=\"col-lg-6 col-sm-6\">\r\n                      <div className=\"card card-stats\">\r\n                        <div className=\"content\">\r\n                          <div className=\"row\">\r\n                            <div className=\"col-xs-5\">\r\n                              <div style={{ fontSize: '5em' }} className=\"icon-big text-center icon-warning\">\r\n                                <i style={{color:this.state.autoClose == 'OFF'? '#312f2f':'green'}} className=\"pe-7s-switch text-warning-switch\"></i>\r\n                              </div></div>\r\n                            <div className=\"col-xs-7\">\r\n                              <div className=\"numbers\"><p style={{\r\n                                textAlign: 'center',\r\n                                fontSize: '25px',\r\n                                marginTop: '15px'\r\n                              }}>Auto-Close </p></div>\r\n                            </div></div><div className=\"footer\"><hr /><p style={{ textAlign: 'center', fontSize: '2em' }}>{this.state.autoClose}</p></div></div></div></div>\r\n\r\n                  </Row>\r\n                  <div className=\"terminal-box\">\r\n                    {/* {(this.state.errorMassege) && <p style={{ color: 'red', fontSize: '10px' }}>Please Select Any Account</p>} */}\r\n                    <span className=\"terminal-text\">Profit/Loss</span>\r\n                  </div>\r\n                  <Row >\r\n                    <div className=\"col-lg-12 col-sm-12\">\r\n                      <div className=\"card card-stats\">\r\n                        <div className=\"content\">\r\n                          <div className=\"row\">\r\n                            <div className=\"col-xs-6\">\r\n                              <div className=\"numbers\"><p style={{\r\n                                textAlign: 'center',\r\n                                fontSize: '25px',\r\n                                marginTop: '32px'\r\n                              }}>Realized : $ {sumOfTotal1} </p></div>\r\n                            </div>\r\n                            <div className=\"col-xs-6\">\r\n                              <div className=\"numbers\"><p style={{\r\n                                textAlign: 'center',\r\n                                fontSize: '25px',\r\n                                marginTop: '32px'\r\n                              }}>Unrealized : $ {sumOfTotal} </p></div>\r\n                            </div>\r\n                          </div><div className=\"footer\"><hr /><p style={{ textAlign: 'center', fontSize: '2em' }}>Total : $ {sumOfTotal1 + sumOfTotal}</p></div></div></div></div>\r\n                  </Row>\r\n                  <div className=\"terminal-box\">\r\n                    {/* {(this.state.errorMassege) && <p style={{ color: 'red', fontSize: '10px' }}>Please Select Any Account</p>} */}\r\n                    <span className=\"terminal-text\">Exposure</span>\r\n                  </div>\r\n                  <Row>\r\n                    <div className=\"col-sm-6\">\r\n                      <div className=\"c-callout c-callout-info\">\r\n                        <small className=\"text-muted text-muted-dashboard\">{this.state.fromOpenOrderInfos.order_type == 0 ? 'long ' : 'short '} </small>\r\n                        <br />\r\n                        <strong className=\"h4\"><NumberFormat value={this.state.total} displayType={'text'} thousandSeparator={true} decimalScale={2} />   {this.state.fromSymbol.margin_currency} \r\n                        <br />  {this.state.fromOpenOrderInfos.lots} {(this.state.fromOpenOrderInfos.lots > 1) ? 'Lots' : 'Lot'}</strong>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                      <div className=\"c-callout callout-danger\">\r\n                        <small className=\"text-muted text-muted-dashboard\">{this.state.toOpenOrderInfos.order_type == 0 ? 'long ' : 'short '} </small>\r\n                        <br />\r\n                        <strong className=\"h4\"><NumberFormat value={this.state.totalTo} displayType={'text'} thousandSeparator={true} decimalScale={2} />   {this.state.toSymbol.margin_currency}\r\n                        <br /> {this.state.toOpenOrderInfos.lots}  {(this.state.toOpenOrderInfos.lots > 1) ? 'Lots' : 'Lot'} </strong>\r\n                      </div></div>\r\n                  </Row>\r\n\r\n\r\n                  {/* <div className=\"terminal-box\">\r\n                   \r\n                    <span className=\"terminal-text\">Lot Size</span>\r\n                  </div>\r\n                  <div className=\"col-lg-6 col-sm-6\">\r\n                    <div className=\"card card-stats\">\r\n                      <div className=\"content\">\r\n                        <div className=\"row\">\r\n\r\n                          <div className=\"col-xs-7\">\r\n\r\n                          </div></div><div className=\"footer\"><p style={{ textAlign: 'center', fontSize: '1.5em' }}>\r\n                            {(this.state.toOpenOrderInfos !== '' && this.state.toOpenOrderInfos.order_type !== null) && <span className=\"td-actions bText, clearBorder\" style={{ display: 'block' }}>\r\n                              {this.state.toOpenOrderInfos.order_type == 0 ? 'long ' : 'short '}  {this.state.toSymbol.name}\r\n                              {' '} {this.state.toOpenOrderInfos.lots}  {(this.state.toOpenOrderInfos.lots > 1) ? 'Lots' : 'Lot'}</span>}\r\n\r\n                          </p><hr /></div></div></div>\r\n                  </div>\r\n                  <div className=\"col-lg-6 col-sm-6\">\r\n                    <div className=\"card card-stats\">\r\n                      <div className=\"content\">\r\n                        <div className=\"row\">\r\n\r\n                          <div className=\"col-xs-7\">\r\n\r\n                          </div></div><div className=\"footer\"><p style={{ textAlign: 'center', fontSize: '1.5em' }}>\r\n                            {(this.state.fromOpenOrderInfos !== '' && this.state.fromOpenOrderInfos.order_type !== null) && <span className=\"td-actions bText, clearBorder\" style={{ display: 'block' }}>\r\n                              {this.state.fromOpenOrderInfos.order_type == 0 ? 'long ' : 'short '}\r\n                              {this.state.fromSymbol.name}\r\n                              {' '}  {this.state.fromOpenOrderInfos.lots} {(this.state.fromOpenOrderInfos.lots > 1) ? 'Lots' : 'Lot'}\r\n                            </span>}\r\n                          </p><hr /></div></div></div>\r\n                  </div> */}\r\n\r\n\r\n\r\n                  {/* removed ******/}\r\n\r\n                  {/* <div className=\" leftset card \">\r\n                    <Row>\r\n                      <h4 className=\"text-center \"><b>Exposure</b></h4>\r\n\r\n                      <Col md={4}>\r\n                        <div className=\"card\">\r\n                          <div className={'colorDarkBlue , boldText loginCenter'}>{this.state.fromAccounts.alias}</div>\r\n\r\n                          <h6 className={'colorDarkBlue ,  loginCenter'}>{this.state.fromAccounts.login}</h6>\r\n\r\n                          <div className=\"content table-full-width \"><div className=\"table-responsive\">\r\n                            <div className=\"text-center\">\r\n                              <span className=\"td-actions  clearBorder text-right\">{this.state.fromSymbol.name}\r\n\r\n                              </span>\r\n                            </div><br></br>\r\n                            <div className=\"text-center\">\r\n                              <span className=\"td-actions clearBorder text-right\">\r\n                                <NumberFormat value={this.state.total} displayType={'text'} thousandSeparator={true} decimalScale={2} />   {this.state.fromSymbol.margin_currency}\r\n\r\n                              </span>\r\n                            </div>\r\n\r\n                          </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                      </Col>\r\n                      <Col md={4}>\r\n                        <div className=\"card\">\r\n\r\n                          <h5 className=\"  text-center adjustMent\" > {this.state.total != 0 && this.state.totalTo != 0 && (this.state.total + this.state.totalTo != 0) ? <b>  Exposure</b> : <span style={{ color: \"green\" }}><b > No Exposure</b></span>}\r\n                          </h5>\r\n                          {this.state.total != 0 && this.state.totalTo != 0 && (this.state.total + this.state.totalTo != 0) &&\r\n                            <div style={{ color: '#b70606' }} className=\" setBottom bText text-center\">\r\n                              <NumberFormat\r\n                                value={this.state.total + this.state.totalTo} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                            </div>\r\n\r\n                          }\r\n                        </div>\r\n\r\n                      </Col>\r\n                      <Col md={4}>\r\n                        <div className=\" leftset1 card\">\r\n                          <div className={'color2 , boldText loginCenter'}>{this.state.toAccounts.alias}</div>\r\n\r\n                          <h6 className={'color2 ,bText, loginCenter'}>{this.state.toAccounts.login}</h6>\r\n\r\n                          <div className=\"content table-full-width \"><div className=\"table-responsive\">\r\n\r\n\r\n                            <div className=\"text-center\">\r\n                              <span className=\"td-actions bText, clearBorder text-right\">{this.state.toSymbol.name}\r\n\r\n                              </span>\r\n                            </div><br></br>\r\n                            <div className=\"text-center\">\r\n                              <span className=\"td-actions  clearBorder text-right\">\r\n                                <NumberFormat value={this.state.totalTo} displayType={'text'} thousandSeparator={true} decimalScale={2} />   {this.state.toSymbol.margin_currency}\r\n\r\n                              </span>\r\n                            </div>\r\n\r\n                          </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                      </Col>\r\n\r\n                    </Row>\r\n                  </div> */}\r\n                  {/* removed ******/}\r\n\r\n                </Col>\r\n              </Row>\r\n              <Row style={{ margin: '20px 0px' }}>\r\n                {/* removed ******/}\r\n                {/* <Row>\r\n                  {Data.dashBoardPage.items.map((item, index) =>\r\n\r\n                    <Col md={4} sm={6} key={index}>\r\n                      <div style={{ margin: '30px 0px' }} className=\"text-center\">\r\n                        <span className=\"bText\">{item.title}</span>\r\n                      </div>\r\n                      <div className=\"balance-box Pmargin\"\r\n                      // className={item.id == '1' ? 'balance-box' : item.id == '2' ?\r\n                      //   'balance-box Pmargin' : item.id == '3' ? 'balance-box equity-box' :\r\n                      //     item.id == '4' ? 'balance-box Fmargin' : item.id == '5' ? 'balance-box floating' : 'balance-box  margin-box'}\r\n                      >\r\n                        <div className=\"content\">\r\n                          <div className=\"table-responsive\">\r\n\r\n                            <table className=\"table  text-center\">\r\n\r\n                              <tbody>\r\n                                <tr>\r\n                                  {this.tableHeader()}\r\n                                </tr>\r\n                                <tr>\r\n                                  {item.title == 'Balance' && this.showData('balance')}\r\n                                  {item.title == 'Equity' && this.showData('equity')}\r\n                                  {item.title == 'Margin' && this.showData('margin')}\r\n                                  {item.title == 'Free Margin' && this.showData('free_margin')}\r\n                                  {item.title == 'Margin %' && this.showData('margin_level')}\r\n                                  {item.title == 'Floating P/L' && this.showData('profit')}\r\n                                </tr>\r\n                              </tbody>\r\n                            </table>\r\n\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n\r\n                  )}\r\n                </Row> */}\r\n                {/* removed ******/}\r\n\r\n\r\n                {/* \r\n            <Row>\r\n              <Col md={4}>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <Row>\r\n                      <Col md={2}>\r\n                        <div>\r\n                          <div>\r\n                            <div>\r\n                              <span>Logn in</span>\r\n                            </div>\r\n                            <div>\r\n                              <span>Balance</span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md={2}>\r\n                        <div>\r\n                          <div>\r\n                            <div>\r\n                              <span>Logn in</span>\r\n                            </div>\r\n                            <div>\r\n                              <span>Balance</span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md={2}>\r\n                        <div>\r\n                          <div>\r\n                            <div>\r\n                              <span>Logn in</span>\r\n                            </div>\r\n                            <div>\r\n                              <span>Balance</span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row> */}\r\n\r\n              </Row>\r\n              {/* <Row>\r\n                <Col md={12} sm={6}>\r\n                  <div className=\"terminal-box\">\r\n                    <span className=\"terminal-text\">Statistics Per Symbol</span>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <TableList />\r\n              </Row> */}\r\n              {/* <DatatablePage /> */}\r\n            </Grid>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from 'react';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\r\nimport TagsInput from 'react-tagsinput'\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport config from '../../constant/config.js';\r\n\r\nimport Select from 'react-select'\r\nimport { createLogicalAnd } from 'typescript';\r\nconst axios = require('axios');\r\n\r\nclass FilterEdite extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedAccountOption: null,\r\n            selectedSymbolOption: null,\r\n            selectedSymbolOptionTo: null,\r\n            selectedAccountOptionTo: null,\r\n            selectedCommissionAccount: null,\r\n            startDate: null,\r\n            endDate: null,\r\n            startDateTo: null,\r\n            endDateTo: null,\r\n            allAccounts: [],\r\n            allSymbols: [],\r\n            profileName: '',\r\n            showCommission: false,\r\n            // showAddCommission: false,\r\n            id: '',\r\n            error: '',\r\n            autoSyncClose: false,\r\n            magicNumber: [],\r\n            magicNumberTo: [],\r\n            tags: [],\r\n            include_exclude_status: '',\r\n            showMagicNumber: false,\r\n            showMagicNumberTo: false,\r\n            exclude: false,\r\n            include: false,\r\n            excludeTo: false,\r\n            includeTo: false,\r\n\r\n\r\n        };\r\n\r\n\r\n    }\r\n    componentWillMount() {\r\n\r\n        let self = this;\r\n        axios.get(config.baseurl + '/accounts/fetchAllAccounts')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.setState({ allAccounts: response.data.rows })\r\n                }\r\n            })\r\n        axios.get(config.baseurl + '/accounts/fetchAllSymbol')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    console.log( response,\"response ---------------fetchAllSymbol>\")\r\n                    self.setState({ allSymbols: response.data.rows })\r\n                }\r\n            })\r\n    }\r\n    componentDidMount() {\r\n\r\n        let abc = this.props.data;\r\n        if (abc) {\r\n            let from_symbol = JSON.parse(abc.from_symbols);\r\n            let to_symbol = JSON.parse(abc.to_symbols);\r\n\r\n            let all_from_symbols = from_symbol.map(data => { return ({ value: data, label: data }) });\r\n            let all_to_symbols = to_symbol.map(data => { return ({ value: data, label: data }) });\r\n\r\n            from_symbol = from_symbol.join(', ');\r\n            to_symbol = to_symbol.join(', ');\r\n\r\n            this.setState({\r\n                id: abc.id,\r\n                profileName: abc.profile_name,\r\n                selectedAccountOption: ({ value: abc.accountFromInfo[0].id, label: abc.accountFromInfo[0].login }),\r\n                selectedAccountOptionTo: ({ value: abc.accountToInfo[0].id, label: abc.accountToInfo[0].login }),\r\n                showCommission: abc.commission_acount_id !== 0 ? true : false,\r\n                selectedCommissionAccount: abc.commission_acount_id !== 0 ? ({ value: abc.accountCommissionInfo[0].id, label: abc.accountCommissionInfo[0].login }) : null,\r\n                showMagicNumber: abc.from_include_exclude_status !== 0 ? true : false,\r\n                showMagicNumberTo: abc.to_include_exclude_status !== 0 ? true : false,\r\n                magicNumber: abc.from_magic_number != \"0\" && abc.from_magic_number != \"\" ? JSON.parse(abc.from_magic_number) : [],\r\n                magicNumberTo: abc.to_magic_number != \"0\" && abc.to_magic_number != \"\" ? JSON.parse(abc.to_magic_number) : [],\r\n                include: abc.from_include_exclude_status === 1 ? true : false,\r\n                exclude: abc.from_include_exclude_status === 2 ? true : false,\r\n                includeTo: abc.to_include_exclude_status === 1 ? true : false,\r\n                excludeTo: abc.to_include_exclude_status === 2 ? true : false,\r\n                selectedSymbolOption: all_from_symbols,\r\n                autoSyncClose: abc.auto_close == 1 ? true : false,\r\n                selectedSymbolOptionTo: all_to_symbols,\r\n                startDate: new Date(abc.startdateFrom),\r\n                startDateTo: new Date(abc.startdateTo),\r\n                endDate: (abc.enddateFrom != null) ? new Date(abc.enddateFrom) : '',\r\n                endDateTo: (abc.enddateTo != null) ? new Date(abc.enddateTo) : '',\r\n            })\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    handleDropdownChange = (e) => {\r\n        this.setState({ selectValue: e.target.value });\r\n    }\r\n    handleChangeDate = date => {\r\n        this.setState({\r\n            startDate: date\r\n        });\r\n    }\r\n    handleEndDate = date => {\r\n\r\n        if (date < this.state.startDate && date != null) {\r\n            this.setState({ error: 'enddate', endDate: \"\" })\r\n            return\r\n        }\r\n        this.setState({\r\n            error: '',\r\n            endDate: date,\r\n        });\r\n    }\r\n    handleChangeDateTo = date => {\r\n        this.setState({\r\n            startDateTo: date\r\n        });\r\n    }\r\n    handleEndDateTo = date => {\r\n        if (date < this.state.startDateTo && date != null) {\r\n            this.setState({ error: 'enddateto', endDateTo: \"\" })\r\n            return\r\n        }\r\n        this.setState({\r\n            error: '',\r\n            endDateTo: date,\r\n        });\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({ value: Array.from(event.target.selectedOptions, (item) => item.value) });\r\n    }\r\n\r\n    handeChangeShowCommission = () => {\r\n        this.setState({ showCommission: !this.state.showCommission })\r\n    }\r\n    handleChangeCommissionAccount = selectedCommissionAccount => {\r\n        this.setState({ selectedCommissionAccount });\r\n    };\r\n\r\n    renderCommissionAccount = () => {\r\n        const { selectedCommissionAccount, allAccounts } = this.state;\r\n\r\n        let options = allAccounts.map(data => {\r\n            return { value: data.id, label: data.login };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Account\"\r\n                value={selectedCommissionAccount}\r\n                onChange={this.handleChangeCommissionAccount}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n\r\n    renderAccountSelect = () => {\r\n        const { selectedAccountOption, allAccounts } = this.state;\r\n        let options = allAccounts.map(data => {\r\n            return { value: data.id, label: data.login };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Account\"\r\n                value={selectedAccountOption}\r\n                onChange={this.handleChangeAccount} l\r\n                options={options}\r\n                rules={{ required: 'Please select an option' }}\r\n            />\r\n        )\r\n    }\r\n\r\n    handleChangeAccountTo = selectedAccountOptionTo => {\r\n        this.setState({ selectedAccountOptionTo, error: '' });\r\n    };\r\n    renderAccountSelectTo = () => {\r\n        const { selectedAccountOptionTo, allAccounts } = this.state;\r\n\r\n        let options = allAccounts.map(data => {\r\n            return { value: data.id, label: data.login };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Account\"\r\n                value={selectedAccountOptionTo}\r\n                onChange={this.handleChangeAccountTo}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n\r\n    handleChangeAccount = selectedAccountOption => {\r\n        this.setState({ selectedAccountOption });\r\n    };\r\n    handleChangeSymbol = selectedSymbolOption => {\r\n        this.setState({ selectedSymbolOption });\r\n    };\r\n    renderSymbolSelect = () => {\r\n        const { selectedSymbolOption, allSymbols } = this.state;\r\n        let options = allSymbols.map(data => {\r\n            return { value: data.name, label: data.name };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Symbol\"\r\n                value={selectedSymbolOption}\r\n                isMulti\r\n                onChange={this.handleChangeSymbol}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n    handleChangeSymbolTo = selectedSymbolOptionTo => {\r\n        this.setState({ selectedSymbolOptionTo });\r\n    };\r\n    renderSymbolSelectTo = () => {\r\n        const { selectedSymbolOptionTo, allSymbols } = this.state;\r\n        let options = allSymbols.map(data => {\r\n            return { value: data.name, label: data.name };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Symbol\"\r\n                value={selectedSymbolOptionTo}\r\n                isMulti\r\n                onChange={this.handleChangeSymbolTo}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n\r\n    handleChangeMagicNumber = (magicNumber) => {\r\n\r\n\r\n        // if(re.test(tags))\r\n        this.setState({ magicNumber })\r\n    }\r\n    handleChangeMagicNumberTo = (magicNumberTo) => {\r\n\r\n\r\n        // if(re.test(tags))\r\n        this.setState({ magicNumberTo })\r\n    }\r\n    changeIncludeDefaultProperty = () => {\r\n\r\n        this.setState({ include: !this.state.include, exclude: false }, () => {\r\n\r\n        })\r\n        if (!this.state.include == true) {\r\n            this.setState({ showMagicNumber: true })\r\n        } else if (this.state.include == true) {\r\n            this.setState({ showMagicNumber: false })\r\n\r\n        }\r\n\r\n\r\n    }\r\n    changeExcludeDefaultProperty = () => {\r\n        this.setState({ exclude: !this.state.exclude, include: false })\r\n        if (!this.state.exclude == true) {\r\n            this.setState({ showMagicNumber: true })\r\n        } else if (this.state.exclude == true) {\r\n            this.setState({ showMagicNumber: false })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    changeIncludeDefaultPropertyTo = () => {\r\n        this.setState({ includeTo: !this.state.includeTo, excludeTo: false })\r\n        if (!this.state.includeTo == true) {\r\n            this.setState({ showMagicNumberTo: true })\r\n        } else if (this.state.includeTo == true) {\r\n            this.setState({ showMagicNumberTo: false })\r\n\r\n        }\r\n    }\r\n    changeExcludeDefaultPropertyTo = () => {\r\n        this.setState({ excludeTo: !this.state.excludeTo, includeTo: false })\r\n        if (!this.state.excludeTo == true) {\r\n            this.setState({ showMagicNumberTo: true })\r\n        } else if (this.state.excludeTo == true) {\r\n            this.setState({ showMagicNumberTo: false })\r\n\r\n        }\r\n\r\n    }\r\n    handleprofileName(e) {\r\n\r\n        this.setState({ profileName: e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1), error: '' })\r\n\r\n    }\r\n    handleChangeAutoSync(e) {\r\n        this.setState({ autoSyncClose: !this.state.autoSyncClose }, () => {\r\n        })\r\n    }\r\n    formDataSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        let from_status = this.state.include === true && this.state.exclude === false ? 1 : this.state.exclude === true && this.state.include === false ? 2 : 0\r\n\r\n        let to_status = this.state.includeTo === true && this.state.excludeTo === false ? 1 : this.state.excludeTo === true && this.state.includeTo === false ? 2 : 0\r\n        let self = this\r\n\r\n       \r\n        if (this.state.profileName == null || this.state.profileName == '') {\r\n            NotificationManager.listNotify = [];\r\n            NotificationManager.error ('Please select profile name !')\r\n            return\r\n        }\r\n        else if (this.state.selectedAccountOption == null || this.state.selectedAccountOption == '') {\r\n            this.setState({ error: 'accountoption' })\r\n            return\r\n        }\r\n        else if (this.state.showCommission == true  &&  (this.state.selectedCommissionAccount == null || this.state.selectedCommissionAccount == '')) {\r\n            this.setState({ error: 'selectedCommissionAccount' })\r\n            return\r\n        }\r\n        else if (this.state.startDate == null || this.state.startDate == '') {\r\n            this.setState({ error: 'startdate' })\r\n            return\r\n        } else if (this.state.selectedSymbolOption == null || this.state.selectedSymbolOption == '') {\r\n            this.setState({ error: 'symbolselect' })\r\n            return\r\n        }\r\n        else if (this.state.selectedAccountOptionTo == null || this.state.selectedAccountOptionTo == '') {\r\n            this.setState({ error: 'accountoptionto' })\r\n            return\r\n        } else if (this.state.startDateTo == null || this.state.startDateTo == '') {\r\n            this.setState({ error: 'startDateTo' })\r\n            return\r\n        }\r\n        else if (this.state.selectedSymbolOptionTo == null || this.state.selectedSymbolOptionTo == '') {\r\n            this.setState({ error: 'selectedSymbolOptionTo' })\r\n            return\r\n        }\r\n        else {\r\n            this.setState({ error: '' })\r\n        }\r\n        let fromSymbol = this.state.selectedSymbolOption;\r\n        let toSymbol = this.state.selectedSymbolOptionTo;\r\n\r\n        let symbolFrom = fromSymbol.map((data) => data.value)\r\n        let symbolto = toSymbol.map((data) => data.value)\r\n\r\n        let Data = {\r\n            id: this.state.id,\r\n            profile_name: this.state.profileName,\r\n            from_account_id: this.state.selectedAccountOption.value,\r\n            to_account_id: this.state.selectedAccountOptionTo.value,\r\n            commission_acount_id: this.state.showCommission == true ? this.state.selectedCommissionAccount.value : 0,\r\n            startdateFrom: this.state.startDate,\r\n            // enddateFrom: this.state.endDate,\r\n            enddateFrom: (this.state.endDate) ? this.state.endDate : null,\r\n            startdateTo: this.state.startDateTo,\r\n            enddateTo: (this.state.endDateTo) ? this.state.endDateTo : null,\r\n            from_symbols: JSON.stringify(symbolFrom),\r\n            to_symbols: JSON.stringify(symbolto),\r\n            auto_close: this.state.autoSyncClose ? 1 : 0,\r\n            from_magic_number: (from_status != 0) ? this.state.magicNumber.length > 0 ? JSON.stringify(this.state.magicNumber) : [] : \"\",\r\n            to_magic_number: (to_status != 0) ? this.state.magicNumberTo.length > 0 ? JSON.stringify(this.state.magicNumberTo) : [] : \"\",\r\n\r\n            from_include_exclude_status: from_status,\r\n            to_include_exclude_status: to_status,\r\n            createdAt: new Date(),\r\n            updatedAt: new Date()\r\n        }\r\n\r\n       \r\n        axios.post(config.baseurl + '/filter/updatefilterdatafull', Data)\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.props.onHide()\r\n\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n            });\r\n\r\n    }\r\n    crossClick(e) {\r\n        e.preventDefault();\r\n        this.props.onHide()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content\">\r\n                <Grid fluid>\r\n                    <div className=\"symbol-box\">\r\n                        <div className=\"cross_div\"><a onClick={(e) => this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\r\n                        <div className=\"terminal-text\" >\r\n                            <p className=\"profilename pnameadjust\"> Profile Name</p>\r\n                            <input type=\"text\" name=\"profilename\" value={this.state.profileName} className=\"Itext\" onChange={(e) => this.handleprofileName(e)} />\r\n                            {(this.state.error == 'profileName') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Fill Your Profile Name </p>}\r\n\r\n                        </div>\r\n                        <div className=\"synclose\">\r\n                            <label class=\"checkbox-inline\"><input type=\"checkbox\" checked={this.state.autoSyncClose} name=\"changeAutoSync\" onChange={(e) => this.handleChangeAutoSync(e)} /><b>Auto Sync Close</b></label>\r\n                        </div>\r\n                        <form>\r\n                            <Row>\r\n                                {/* <Col md={12}>\r\n                                    <div className=\"card\">\r\n                                        <div style={{ padding: '10px 20px 35px ', }}>\r\n                                            <div>\r\n                                                <h3 className=\" text-center\">Filter By Magic Numbers</h3>\r\n\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-6 text-center\">\r\n\r\n                                                    <button type=\"button\" class=\"text-center filter-add-button\">Include</button>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-md-6 text-center btnspace\">\r\n                                                    <button type=\"button\" class=\"filter-add-button\">Exclude</button>\r\n                                                </div>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col\">\r\n                                                        <div class=\"text-center  \">\r\n                                                            <input class=\"form-control input-css\" placeholder=\"Select Numbers\" type=\"number\"></input>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>from_include_exclude_status\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </Col> */}\r\n                                <Col md={6}>\r\n                                    <div className=\"card bottom\">\r\n                                        <div style={{ padding: '10px 20px 0px' }}>\r\n                                            <span style={{ fontWeight: 'bold' }}>Account A</span>\r\n                                        </div>\r\n                                        <table className=\"table mt20\">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr\">\r\n                                                        <span className=\"accnt\">Account :</span>\r\n                                                    </td>\r\n\r\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                        {this.renderAccountSelect()}\r\n                                                        {(this.state.error == 'accountoption') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">From:  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center datepicker_filter\">\r\n                                                        <DatePicker\r\n                                                            selected={this.state.startDate}\r\n                                                            onChange={this.handleChangeDate}\r\n                                                            isClearable\r\n                                                            placeholderText=\"dd/mm/yyyy\"\r\n                                                            dateFormat=\"dd/MM/yyyy\"\r\n                                                            startDate={this.state.startDate}\r\n                                                            endDate={this.state.endDate}\r\n                                                            strictParsing\r\n                                                        />\r\n                                                        {(this.state.error == 'startdate') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">To :  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center datepicker_filter\">\r\n                                                        <DatePicker\r\n\r\n                                                            selected={this.state.endDate}\r\n                                                            onChange={this.handleEndDate}\r\n                                                            isClearable\r\n                                                            placeholderText=\"dd/mm/yyyy\"\r\n                                                            dateFormat=\"dd/MM/yyyy\"\r\n                                                            startDate={this.state.startDate}\r\n                                                            endDate={this.state.endDate}\r\n                                                        />\r\n                                                        {(this.state.error == 'enddate') && <p style={{ color: 'red', fontSize: '13px' }}>*\r\n                                                        Please ensure that the End Date is greater than  the Start Date.</p>}\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">Symbol :  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center\" style={{ width: '50%' }}>\r\n                                                        {this.renderSymbolSelect()}\r\n                                                        {(this.state.error == 'symbolselect') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n\r\n\r\n                                            </tbody>\r\n                                        </table>\r\n                                        <div className=\"text-center\">\r\n                                            <span c> Magic Number :  </span>\r\n                                        </div>\r\n\r\n                                        <table className=\"table \">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr dataAdjust\">\r\n                                                        <div onClick={this.changeIncludeDefaultProperty}>\r\n                                                            <input\r\n                                                                type=\"radio\" id=\"include\" name=\"include\" checked={this.state.include} />\r\n                                                            <span class=\"accnt \">Include</span>\r\n\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <div onClick={this.changeExcludeDefaultProperty} >\r\n                                                            <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.exclude} />\r\n                                                            <span class=\"accnt \">Exclude</span>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n\r\n\r\n                                        {this.state.showMagicNumber &&\r\n                                            <div className=\"b-clr magicnumber\" style={{}}>\r\n                                                <TagsInput\r\n                                                    onValidationReject={() => console.log('rejected')}\r\n                                                    validationRegex={/^[0-9]*$/}\r\n                                                    inputProps={{ placeholder: this.state.magicNumber.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumber\r\n                                                    } onChange={this.handleChangeMagicNumber}></TagsInput>\r\n                                            </div>}\r\n\r\n\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    <div className=\"card bottom\">\r\n                                        <div style={{ padding: '10px 20px 0px' }}>\r\n                                            <span style={{ fontWeight: 'bold' }}>Account B</span>\r\n                                        </div>\r\n\r\n                                        <table className=\"table mt20\">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">Account :</span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center\" style={{ width: '50%' }}>\r\n                                                        {this.renderAccountSelectTo()}\r\n                                                        {(this.state.error == 'accountoptionto') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\r\n\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">From:  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center datepicker_filter\">\r\n                                                        <DatePicker\r\n                                                            selected={this.state.startDateTo}\r\n                                                            onChange={this.handleChangeDateTo}\r\n                                                            isClearable\r\n                                                            placeholderText=\"dd/mm/yyyy\"\r\n                                                            dateFormat=\"dd/MM/yyyy\"\r\n                                                            startDate={this.state.startDateTo}\r\n                                                            endDate={this.state.endDateTo}\r\n                                                        />\r\n\r\n                                                        {(this.state.error == 'startDateTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">To :  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center datepicker_filter\">\r\n                                                        <DatePicker\r\n                                                            selected={this.state.endDateTo}\r\n                                                            onChange={this.handleEndDateTo}\r\n                                                            isClearable\r\n                                                            placeholderText=\"dd/mm/yyyy\"\r\n                                                            dateFormat=\"dd/MM/yyyy\"\r\n                                                            startDate={this.state.startDateTo}\r\n                                                            endDate={this.state.endDateTo}\r\n\r\n                                                        />\r\n\r\n                                                        {(this.state.error == 'enddateto') && <p style={{ color: 'red', fontSize: '13px' }}>*\r\n                                                        Please ensure that the End Date is greater than  the Start Date.</p>}\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr\">\r\n                                                        <span className=\"accnt\">Symbol :  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                        {this.renderSymbolSelectTo()}\r\n                                                        {(this.state.error == 'selectedSymbolOptionTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\r\n\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n\r\n                                            </tbody>\r\n                                        </table>\r\n\r\n\r\n                                        <div className=\"text-center\">\r\n                                            <span > Magic Number :  </span>\r\n                                        </div>\r\n                                        <table className=\"table mt20\">\r\n                                            <tbody>\r\n\r\n                                                <tr>\r\n                                                    <td className=\"b-clr checkboxAdjust\">\r\n                                                        <div onClick={this.changeIncludeDefaultPropertyTo} >\r\n                                                            <input\r\n                                                                type=\"radio\" id=\"includeTo\" name=\"includeTo\" checked={this.state.includeTo} />\r\n                                                            <span class=\"accnt \">Include</span>\r\n\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr checkboxAdjust\">\r\n                                                        <div onClick={this.changeExcludeDefaultPropertyTo} >\r\n                                                            <input type=\"radio\" id=\"excludeTo\" name=\"excludeTo\" checked={this.state.excludeTo} />\r\n                                                            <span class=\"accnt \">Exclude</span>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                        <div>\r\n\r\n                                            {this.state.showMagicNumberTo === true ?\r\n                                                <div className=\"b-clr magicnumber\" style={{}}>\r\n                                                    <TagsInput\r\n                                                        onValidationReject={() => console.log('rejected')}\r\n                                                        validationRegex={/^[0-9]*$/}\r\n                                                        inputProps={{ placeholder: this.state.magicNumber.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumberTo\r\n                                                        } onChange={this.handleChangeMagicNumberTo}></TagsInput>\r\n                                                </div> : null}\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <hr></hr>\r\n                            <div className=\"chceckbox\">\r\n\r\n                                <label class=\"checkbox-inline\"><input type=\"checkbox\" checked={this.state.showCommission} onChange={this.handeChangeShowCommission} /><b>Add Commission</b></label>\r\n                            </div>\r\n\r\n\r\n\r\n                            {this.state.showCommission &&\r\n                                <div className=\"center-com d-flex\">\r\n                                    <div className=\"com\">\r\n                                        <h3 style={{ fontWeight: 'bold' }}>Commission</h3>\r\n\r\n                                    </div>\r\n                                    <table className=\"table mt20\">\r\n\r\n                                        <tbody>\r\n                                            <tr>\r\n\r\n                                                <td className=\"b-clr \">\r\n                                                    <span className=\"accnt\"> Account :</span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center\" style={{ width: '50%' }}>\r\n                                                    {this.renderCommissionAccount()}\r\n                                                    {(this.state.error == 'selectedCommissionAccount') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account </p>}\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n\r\n                            }\r\n                            <div className=\"save_button_filter\">\r\n                                <Button className=\"btn-primary savebutton\" variant=\"primary\" size=\"lg\" block onClick={(e) => this.formDataSubmit(e)}>\r\n                                    <b>Update</b>\r\n                                </Button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilterEdite;\r\n","import React, { Component } from 'react';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\r\nvar moment = require('moment');\r\n\r\nclass FilterDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            autoSyncClose: false,\r\n            exclude: false,\r\n            include: false,\r\n            excludeTo: false,\r\n            includeTo: false,\r\n            showMagicNumberFrom: false,\r\n            showMagicNumberTo: false,\r\n        };\r\n    }\r\n    crossClick(e) {\r\n        e.preventDefault();\r\n        this.props.onHide()\r\n    }\r\n\r\n    componentDidMount() {\r\n        let data = this.props.data;\r\n        this.setState({\r\n            autoSyncClose: data.auto_close == 1 ? true : false,\r\n            include: data.from_include_exclude_status == 1 ? true : false,\r\n            exclude: data.from_include_exclude_status == 2 ? true : false,\r\n            includeTo: data.to_include_exclude_status == 1 ? true : false,\r\n            excludeTo: data.to_include_exclude_status == 2 ? true : false,\r\n            showMagicNumberFrom: data.from_include_exclude_status !== 0 ? true : false,\r\n            showMagicNumberTo:data.to_include_exclude_status !== 0? true: false\r\n        })\r\n\r\n    }\r\n\r\n    // componentWillMount = () => {\r\n    //     console.log(this.props,'props..................');\r\n    // }\r\n\r\n    render() {\r\n        let data = this.props.data;\r\n\r\n        let from_symbol = JSON.parse(data.from_symbols);\r\n        let to_symbol = JSON.parse(data.to_symbols);\r\n        from_symbol = from_symbol.join(', ');\r\n        to_symbol = to_symbol.join(', ');\r\n        return (\r\n            <div className=\"content\">\r\n                <Grid fluid>\r\n                    <div className=\"symbol-box\">\r\n                        <div className=\"cross_div\"><a onClick={(e) => this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\r\n                        <div className=\"detail-text\"><h3> {data.profile_name} </h3></div>\r\n                        <div className=\"synclose\">\r\n                            <label class=\"checkbox-inline\"><input type=\"checkbox\" checked={this.state.autoSyncClose} name=\"changeAutoSync\" /><b>Auto Sync Close</b></label>\r\n                        </div>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <div className=\"card\">\r\n                                    <div className=\"detail_account\" style={{ padding: '10px 20px 0px' }}>\r\n                                        <span style={{ fontWeight: 'bold' }}>Account A</span>\r\n                                    </div>\r\n                                    <table className=\"table mt20\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td className=\"b-clr\">\r\n                                                    <span>Account :</span>\r\n                                                </td>\r\n\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    {data.accountFromInfo[0].login}\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>From :  </span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center datepicker_filter\">\r\n                                                    {moment(data.startdateFrom).format(\"DD/MM/YYYY\")}\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>To :  </span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center datepicker_filter\">\r\n                                                    {data.enddateFrom !== null ? moment(data.enddateFrom).format(\"DD/MM/YYYY\") : \"-\"}\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>Symbol :  </span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    {from_symbol}\r\n                                                </td>\r\n                                            </tr>\r\n                                            {this.state.showMagicNumberFrom &&\r\n                                            <>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>Magic Number :  </span>\r\n                                                </td>\r\n\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    {data.from_magic_number}\r\n                                                </td>\r\n\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr dataAdjust\">\r\n                                                    <div onClick={this.changeIncludeDefaultProperty}>\r\n                                                        <input\r\n                                                            type=\"radio\" id=\"include\" name=\"include\" checked={this.state.include} />\r\n                                                        <span class=\"accnt \">Include</span>\r\n\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td className=\"b-clr \">\r\n                                                    <div onClick={this.changeExcludeDefaultProperty} >\r\n                                                        <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.exclude} />\r\n                                                        <span class=\"accnt \">Exclude</span>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                            </>}\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </Col>\r\n                            <Col md={6}>\r\n                                <div className=\"card\">\r\n                                    <div className=\"detail_account\" style={{ padding: '10px 20px 0px' }}>\r\n                                        <span style={{ fontWeight: 'bold' }}>Account B</span>\r\n                                    </div>\r\n\r\n                                    <table className=\"table mt20\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>Account :</span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    {data.accountToInfo[0].login}\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>From :  </span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center datepicker_filter\">\r\n                                                    {moment(data.startdateTo).format(\"DD/MM/YYYY\")}\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>To :  </span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center datepicker_filter\">\r\n                                                    {data.enddateTo != null ? (moment(data.enddateTo).format(\"DD/MM/YYYY\")) : '-'}\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr\">\r\n                                                    <span>Symbol :  </span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    {to_symbol}\r\n                                                </td>\r\n                                            </tr>\r\n                                            {this.state.showMagicNumberTo &&\r\n                                                <>\r\n\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr\">\r\n                                                            <span>Magic Number :  </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                            {data.to_magic_number}\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n\r\n\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr checkboxAdjust\">\r\n                                                            <div onClick={this.changeIncludeDefaultPropertyTo} >\r\n                                                                <input\r\n                                                                    type=\"radio\" id=\"includeTo\" name=\"includeTO\" checked={this.state.includeTo} />\r\n                                                                <span class=\"accnt \">Include</span>\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr checkboxAdjust\">\r\n                                                            <div onClick={this.changeExcludeDefaultPropertyTo} >\r\n                                                                <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.excludeTo} />\r\n                                                                <span class=\"accnt \">Exclude</span>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </>}\r\n\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n\r\n                            </Col>\r\n                            {data.commission_acount_id !== 0 && <Col md={12}>\r\n                                <div className=\"card bottom\">\r\n                                    <div className=\"detail_account\" style={{ padding: '10px 20px 0px' }}>\r\n                                        <h3 style={{ fontWeight: 'bold' }}>Commission</h3>\r\n                                    </div>\r\n                                    <table className=\"table mt20\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    <span>Account :</span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    {data.accountCommissionInfo[0].login}\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n\r\n                            </Col>}\r\n                        </Row>\r\n\r\n                    </div>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilterDetail;\r\n\r\n","import React, { Component } from 'react';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\r\nimport Innerfilter from '../filter/innerfilter';\r\nimport FilterEdite from '../filter/filteredit';\r\nimport FilterDetail from '../filter/filterdetail';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport config from '../../constant/config.js';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nconst axios = require('axios');\r\nvar moment = require('moment');\r\n\r\nclass Filterprofile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Innerfilter: false,\r\n            filter: true,\r\n            filterData: [],\r\n            deleteData: [],\r\n            editeData: [],\r\n            showDelete: false,\r\n            showEdit: false,\r\n            detailForm: false,\r\n            detailData: [],\r\n        };\r\n\r\n        // this.handleDropdownChange = this.handleDropdownChange.bind(this);\r\n    }\r\n    fetchfilterdata() {\r\n        let self = this;\r\n        axios.get(config.baseurl + '/filter/fetchfilterdata')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.setState({ filterData: response.data.rows })\r\n                }\r\n            })\r\n    }\r\n    showInnerfilter = () => {\r\n        this.setState({ Innerfilter: true, filter: false })\r\n    }\r\n    componentDidMount() {\r\n        this.fetchfilterdata();\r\n        // let self = this;\r\n        // axios.get(config.baseurl + '/filter/fetchfilterdata')\r\n        //     .then(function (response) {\r\n        //         if (response.status == 200) {\r\n        //             self.setState({ filterData: response.data.rows })\r\n        //         }\r\n        //     }) adfasdfsd\r\n    }\r\n\r\n\r\n    createNotification = (profile_name, type) => {\r\n        NotificationManager.listNotify = [];\r\n        NotificationManager.info('Profile Is Activated !', profile_name);\r\n    }\r\n\r\n    createWariningNotification = (profile_name, type) => {\r\n        NotificationManager.listNotify = [];\r\n        NotificationManager.error('Profile Is Deactivated !', profile_name);\r\n    }\r\n\r\n    activateClick(e, data) {\r\n        e.preventDefault();\r\n        let Data = {\r\n            id: data.id,\r\n            status: 1\r\n        }\r\n        let self = this;\r\n        axios.post(config.baseurl + '/filter/updatefilterdata', Data)\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.fetchfilterdata();\r\n                    self.createNotification(data.profile_name, 'info');\r\n                    // self.setState({ filterData: response.data.rows })\r\n                }\r\n            })\r\n    }\r\n\r\n    //  App(){\r\n    //     const notify = () => toast(\"Wow so easy !\");\r\n\r\n    //     return (\r\n    //       <div>\r\n    //         <button onClick={notify}>Notify !</button>\r\n    //         <ToastContainer />\r\n    //       </div>\r\n    //     );\r\n    //   }\r\n\r\n    deactivateClick(e, data) {\r\n        e.preventDefault();\r\n        let Data = {\r\n            id: data.id,\r\n            status: 0\r\n        }\r\n        let self = this;\r\n        axios.post(config.baseurl + '/filter/updatefilterdata', Data)\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.fetchfilterdata();\r\n                    self.createWariningNotification(data.profile_name, 'error');\r\n                    // self.setState({ filterData: response.data.rows })\r\n                }\r\n            })\r\n    }\r\n    editFilter = (e, data) => {\r\n        // e.preventDefault();\r\n        if (this.state.endDate == null || this.state.endDate == '') {\r\n            let newDate = new Date();\r\n            this.setState({endDate: newDate })\r\n            return\r\n        }\r\n        this.setState({ showEdit: true, editeData: data })\r\n\r\n    }\r\n\r\n    deleteFilter(e, data) {\r\n        e.preventDefault();\r\n        this.setState({ deleteData: data, showDelete: true })\r\n\r\n    }\r\n    deletepopupClick(e) {\r\n        e.preventDefault();\r\n        let Data = {\r\n            id: this.state.deleteData.id\r\n        }\r\n        let self = this;\r\n        axios.post(config.baseurl + '/filter/deletefilter', Data)\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.setState({ showDelete: false })\r\n                    self.fetchfilterdata();\r\n                }\r\n            })\r\n    }\r\n    deletepopupclose(e) {\r\n        e.preventDefault();\r\n        this.setState({ showDelete: false })\r\n    }\r\n    viewFilter(e, data) {\r\n        e.preventDefault();\r\n\r\n        this.setState({ detailForm: true, detailData: data })\r\n    }\r\n\r\n    createTr = () => {\r\n        return this.state.filterData.length > 0 && this.state.filterData.map((item, index) => {\r\n            return (\r\n                <tr key={index}>\r\n                    <th scope=\"row\">{index + 1}</th>\r\n                    <td>{item.profile_name}</td>\r\n                    <td>{moment(item.createdAt).format(\"DD/MM/YYYY\")}</td>\r\n                    {/* <td>{item.status == 1 ? 'Activated' : 'Deactivated' }</td> */}\r\n                    <td>{item.status == 0 ?\r\n                        <div className=\"activate_button pointer\"><span className=\"button_interactivate btcolor\" onClick={(e) => this.activateClick(e, item)}> Activate </span> </div>\r\n                        :\r\n                        <div className=\"deactivate_button pointer\"><span className=\"button_deactivate pointer\" onClick={(e) => this.deactivateClick(e, item)}>Deactivate</span></div>}</td>\r\n                    <td>\r\n                        <span onClick={(e) => this.viewFilter(e, item)}><i className=\"pointer fa fa-eye facolor\" aria-hidden=\"true\"></i></span>\r\n                        <span onClick={(e) => this.editFilter(e, item)}><i className=\"pointer fa fa-pencil-square-o facolor\" aria-hidden=\"true\"></i></span>\r\n                        {item.status == 0 &&\r\n                            <span onClick={(e) => this.deleteFilter(e, item)}><i className=\"pointer fa fa-trash facolor\" aria-hidden=\"true\"></i></span>\r\n                        }\r\n                    </td>\r\n                    {/* <td>{item.accountToInfo[0].login}</td>\r\n                    <td>{moment(item.startdateFrom).format(\"DD/MM/YYYY\") + ' - ' + moment(item.enddateFrom).format(\"DD/MM/YYYY\")}</td>\r\n                    <td>{moment(item.startdateTo).format(\"DD/MM/YYYY\") + ' - ' + moment(item.enddateTo).format(\"DD/MM/YYYY\")}</td>\r\n                    <td>{item.from_symbols}</td>\r\n                    <td>{item.to_symbols}</td> */}\r\n                    {/* <td style={{fontWeight:600}}>{item.status == 1 && 'Connected'}</td> */}\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <NotificationContainer />\r\n                <div className=\"content\">\r\n                    {this.state.detailForm ?\r\n                        <FilterDetail\r\n                            data={this.state.detailData}\r\n                            show={this.state.detailForm}\r\n                            onHide={() => this.setState({ detailForm: false })}\r\n                        />\r\n                        :\r\n                        <>\r\n                            {this.state.showEdit ?\r\n                                <FilterEdite\r\n                                    data={this.state.editeData}\r\n                                    show={this.state.showEdit}\r\n                                    // onHide={() => this.setState({ showEdit: false })}\r\n                                    onHide={() => this.setState({ showEdit: false }, () => this.fetchfilterdata())}\r\n                                />\r\n                                :\r\n                                <>\r\n                                    {!this.state.Innerfilter &&\r\n                                        <Grid fluid>\r\n                                            <div className=\"selection-box\">\r\n                                                <span className=\"terminal-text\"> Profiles </span>\r\n\r\n                                                {/* <span className=\"icon-style\">\r\n                            <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\r\n                        </span> */}\r\n                                                {/* <Link to=\"/innerfilter\">\r\n                       <button className=\"pull-right\">Add New</button>\r\n                       </Link> */}\r\n\r\n                                                {/* <Link to=\"/admin/innerfilter\">\r\n                       <button className=\"pull-right\">abc</button>\r\n                       </Link> */}\r\n                                            </div>\r\n                                            <button className=\"pull-right filter-add-button\" onClick={this.showInnerfilter}>Add New</button>\r\n\r\n                                        </Grid>\r\n                                    }\r\n                                    {\r\n                                        this.state.Innerfilter ?\r\n                                            <Innerfilter\r\n                                                show={this.state.Innerfilter}\r\n                                                onHide={() => this.setState({ Innerfilter: false }, () => {\r\n                                                    this.fetchfilterdata();\r\n                                                })}\r\n                                            />\r\n                                            :\r\n                                            <div style={{ background: '#ffffff' }}>\r\n                                                <Row>\r\n                                                    <Col md={12}>\r\n                                                        <div style={{ padding: '10px' }}>\r\n                                                            <table className=\"table table-striped\">\r\n                                                                <thead>\r\n                                                                    <tr>\r\n                                                                        <th scope=\"col\">Sr.No.</th>\r\n                                                                        <th scope=\"col\">Profile Name</th>\r\n                                                                        <th scope=\"col\">Created At</th>\r\n                                                                        <th scope=\"col\">Status</th>\r\n                                                                        <th scope=\"col\">Action</th>\r\n                                                                    </tr>\r\n                                                                </thead>\r\n                                                                <tbody>\r\n                                                                    {/* {this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => { */}\r\n\r\n                                                                    {this.createTr()}\r\n                                                                    {/* })} */}\r\n                                                                    {/* <tr>\r\n                                                <th scope=\"row\">2</th>\r\n                                                <td>Jacob</td>\r\n                                                <td>Thornton</td>\r\n                                                <td>5.1.2.9</td>\r\n                                                <td>Connected</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th scope=\"row\">3</th>\r\n                                                <td>Larry</td>\r\n                                                <td>the Bird</td>\r\n                                                <td>ab@123</td>\r\n                                                <td>Connected</td>\r\n                                            </tr> */}\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </div>\r\n                                        //     <div className=\"filter_page_table\">\r\n                                        //     <table className=\"table table-striped\">\r\n                                        //         <thead>\r\n                                        //             <tr>\r\n                                        //                 <th scope=\"col\">Sr.No.</th>\r\n                                        //                 <th scope=\"col\">Profile Name</th>\r\n                                        //                 <th scope=\"col\">Created At</th>\r\n                                        //                 <th scope=\"col\">Status</th>\r\n                                        //                 <th scope=\"col\">Action</th>\r\n                                        //             </tr>\r\n                                        //         </thead>\r\n                                        //         <tbody>\r\n                                        //             {this.createTr()}\r\n                                        //         </tbody>\r\n                                        //     </table>\r\n\r\n                                        // </div>\r\n\r\n                                    }\r\n\r\n                                    {this.state.showDelete &&\r\n                                        <div className=\"delete_popup\">\r\n                                            <h3>Are you sure ?</h3>\r\n                                            <span className=\"pointer dltbtn\" onClick={(e) => this.deletepopupClick(e)}>Delete</span>\r\n                                            <span className=\"pointer closebtn\" onClick={(e) => this.deletepopupclose(e)}>Close</span>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            }\r\n                        </>\r\n                    }\r\n\r\n\r\n\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Filterprofile;\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Swap extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"text-center\" style={{height:'50%'}}>\r\n                Coming Soon...\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\r\nimport NumberFormat from 'react-number-format';\r\nimport { Collapse } from 'reactstrap';\r\nimport TableList from '../TableList'\r\nimport config from '../../constant/config.js';\r\nimport DatatablePage from '../DatatablePage'\r\nconst axios = require('axios');\r\nconst moment = require('moment');\r\n\r\n\r\n\r\nexport default function Calculating(props) {\r\n    const [isOpen, setIsOpen] = useState(true);\r\n    const toggle = () => setIsOpen(!isOpen);\r\n    const [isOpen2, setIsOpen2] = useState(true);\r\n    const [errormassage, setIErrormassage] = useState(false);\r\n    const toggle2 = () => setIsOpen2(!isOpen2);\r\n\r\n    const [fromAccountId, setFromAccountId] = useState(\"\");\r\n    const [toAccountId, setToAccountId] = useState(\"\");\r\n    const [fromOpenTrade, setFromOpenTrade] = useState([]);\r\n    const [toOpenTrade, setToOpenTrade] = useState([]);\r\n    const [fromHistoryTrade, setFromHistoryTrade] = useState([]);\r\n    const [toHistoryTrade, setToHistoryTrade] = useState([]);\r\n    const [commissionDetails, setCommissionDetails] = useState([]);\r\n    const [openTotal, setopenTotal] = useState();\r\n    const [historyTotal, sethistoryTotal] = useState();\r\n    const [totalOpenAndHistory, settotalOpenAndHistory] = useState();\r\n    const [commissionValue, setCommissionValue] = useState({});\r\n    const [dateTime, setdateTime] = useState('')\r\n    const [customSwap, setcustomSwap] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        fetchLastUpdatedTime()\r\n        let fromAccountId;\r\n        let toAccountId;\r\n        let fromOpenTrade;\r\n        let toOpenTrade;\r\n        let fromHistoryTrade;\r\n        let toHistoryTrade;\r\n        let openTotal;\r\n        let historyTotal;\r\n        let commissionDetails;\r\n        let customSwap;\r\n        axios.get(config.baseurl + '/whatamcalculating/calculatingOpenTrade')\r\n            .then(function (response) {\r\n                console.log(response, \"response -------------->\")\r\n                if (response.status == 200) {\r\n                    if (response.data.rows == 0) {\r\n\r\n                        setIErrormassage((!errormassage));\r\n\r\n                    }\r\n                    fromAccountId = response.data.rows.accountFromInfo[0];\r\n                    toAccountId = response.data.rows.accountToInfo[0];\r\n                    fromOpenTrade = response.data.fromOpenOrderInfo;\r\n                    // fromOpenTrade.map((data) => {\r\n\r\n                    //     data.open_time = moment(data.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')\r\n                    // })\r\n\r\n                    toOpenTrade = response.data.toOpenOrderInfo;\r\n                    // toOpenTrade.map((data) => {\r\n                    //     data.open_time = moment(data.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')\r\n                    // })\r\n                    // openTotal = response.data.totalOfOpenOrder;\r\n\r\n\r\n\r\n                    axios.get(config.baseurl + '/whatamcalculating/calculatingHistoryTrade')\r\n                        .then(function (response) {\r\n\r\n                            if (response.status == 200) {\r\n                                fromHistoryTrade = response.data.fromHistoryOrderInfo;\r\n                                toHistoryTrade = response.data.toHistoryOrderInfo;\r\n                                customSwap = response.data.customSwapTable\r\n                                console.log(toHistoryTrade, \"toHistoryTrade =========>\")\r\n                                // fromHistoryTrade.map((data) => {\r\n\r\n                                //     data.open_time = moment(data.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')\r\n                                //     data.close_time = moment(data.close_time).utc().format('DD-MM-YYYY  HH:mm:ss')\r\n\r\n                                // })\r\n\r\n\r\n                                // toHistoryTrade.map((data) => {\r\n                                //     data.open_time = moment(data.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')\r\n                                //     data.close_time = moment(data.close_time).utc().format('DD-MM-YYYY  HH:mm:ss')\r\n\r\n                                // })\r\n                                historyTotal = response.data.totalOfHistoryOrder;\r\n                                commissionDetails = response.data.newCommissionRecord\r\n\r\n                                axios.get(config.baseurl + '/whatamcalculating/calculatingCommission')\r\n                                    .then(function (response) {\r\n\r\n                                        if (response.status == 200) {\r\n                                            // console.log(\"jhkfkjjkldwkjdwjkdwkbdwjhkwirvbwjh\");\r\n                                            setFromAccountId(fromAccountId);\r\n                                            setToAccountId(toAccountId);\r\n                                            setFromOpenTrade(fromOpenTrade);\r\n                                            setToOpenTrade(toOpenTrade);\r\n                                            setFromHistoryTrade(fromHistoryTrade);\r\n                                            setToHistoryTrade(toHistoryTrade);\r\n                                            setCommissionDetails(commissionDetails);\r\n                                            setopenTotal(openTotal);\r\n                                            sethistoryTotal(historyTotal);\r\n                                            settotalOpenAndHistory(historyTotal + openTotal + response.data.commission);\r\n                                            setCommissionValue(response.data);\r\n                                            setcustomSwap(customSwap)\r\n\r\n                                        }\r\n\r\n                                    })\r\n                                    .catch(function (error) {\r\n                                    });\r\n                            }\r\n                        })\r\n                        .catch(function (error) {\r\n                        });\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n            });\r\n    }, []);\r\n    const fetchLastUpdatedTime = () => {\r\n        let self = this;\r\n        axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    setdateTime(response.data.filteredInfoTime)\r\n                    // console.log(self.state.dataOpenTrade.accountFromInfo,\"outyfjhkjh\");\r\n                }\r\n            });\r\n    }\r\n    let total = { openTotal } + { historyTotal }\r\n\r\n\r\n    let openFromOrderTotal = 0;\r\n    function fromOpenTradeTr() {\r\n        let lotsTotal = 0;\r\n        // let open_Total = 0;\r\n        let comissionTotal = 0;\r\n        let profitTotal = 0;\r\n        let swapTotal = 0;\r\n        let contractSizeTotal = 0;\r\n        let openpricetotal = 0;\r\n        return fromOpenTrade.length > 0 && fromOpenTrade.map((item, index) => {\r\n\r\n            customSwap.map((data) => {\r\n                \r\n                if (data.account_id == item.account_id) {\r\n                    item.swap = item.swap + data.open_value\r\n                }\r\n            })\r\n            lotsTotal += item.lots;\r\n            comissionTotal += item.commission;\r\n            profitTotal += item.profit;\r\n            openFromOrderTotal = comissionTotal + profitTotal + swapTotal\r\n            contractSizeTotal += item.contract_size\r\n            openpricetotal += item.open_price\r\n            swapTotal += item.swap;\r\n            // console.log(openOrderTotal,'openOrderTotal----------');\r\n            {/* open_time,type,symbol,lot,contract_size,open_price,commission,swap,profit */ }\r\n            if (index == fromOpenTrade.length - 1) {\r\n                return (\r\n                    <><tr key={index} className=\"text-center\">\r\n\r\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\r\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\r\n                        <td>{item.symbol}</td>\r\n                        <td>{item.lots}</td>\r\n                        <td>{item.contract_size}</td>\r\n                        <td>{item.open_price}</td>\r\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\r\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\r\n                        {/* <td>{item.magic_number !== 0 ? item.magic_number : ''}</td> */}\r\n                        <td>{item.profit}</td>\r\n\r\n                    </tr>\r\n                        <tr className=\"text-center\" key={index + 1}>\r\n                            <td></td>\r\n\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td><b>{lotsTotal.toFixed(2)}</b></td>\r\n                            <td>{contractSizeTotal.toFixed(2)}</td>\r\n                            <td>{openpricetotal.toFixed(2)} </td>\r\n                            <td><b>{comissionTotal.toFixed(2)}</b></td>\r\n                            <td><b>{swapTotal.toFixed(2)}</b></td>\r\n\r\n                            <td><b>{profitTotal.toFixed(2)}</b></td>\r\n                        </tr>\r\n                    </>\r\n                )\r\n            } else {\r\n                return (\r\n                    <tr key={index} className=\"text-center\">\r\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\r\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\r\n                        <td>{item.symbol}</td>\r\n                        <td>{item.lots}</td>\r\n                        <td>{item.contract_size}</td>\r\n                        <td>{item.open_price}</td>\r\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\r\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\r\n                        {/* <td>{item.magic_number !== 0 ? item.magic_number : ''}</td> */}\r\n                        <td>{item.profit}</td>\r\n\r\n                    </tr>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    let openFromHistoryTotal\r\n    function fromHistoryTradeTr() {\r\n        let lotsTotal = 0;\r\n        let comissionTotal = 0;\r\n        let profitTotal = 0;\r\n        let swapTotal = 0;\r\n        let contractSizeTotal = 0;\r\n        let openpricetotal = 0;\r\n        let closepricetotal = 0;\r\n        return fromHistoryTrade.length > 0 && fromHistoryTrade.map((item, index) => {\r\n            customSwap.map((data) => {\r\n\r\n                if (data.account_id == item.account_id) {\r\n                    item.swap = item.swap + data.open_value\r\n                }\r\n            })\r\n\r\n            lotsTotal += item.lots;\r\n            comissionTotal += item.commission;\r\n            profitTotal += item.profit;\r\n            swapTotal += item.swap;\r\n            openFromHistoryTotal = comissionTotal + profitTotal + swapTotal;\r\n            contractSizeTotal += item.contract_size\r\n            openpricetotal += item.open_price;\r\n            closepricetotal += item.close_price\r\n\r\n            if (index == fromHistoryTrade.length - 1) {\r\n                return (\r\n                    <><tr key={index} className=\"text-center\">\r\n\r\n\r\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\r\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\r\n                        <td>{item.symbol}</td>\r\n                        <td>{item.lots}</td>\r\n                        <td>{item.contract_size}</td>\r\n                        <td>{item.open_price}</td>\r\n                        <td>{moment(item.close_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\r\n                        <td>{item.close_price}</td>\r\n\r\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\r\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\r\n\r\n                        <td>{item.profit}</td>\r\n                    </tr>\r\n                        <tr className=\"text-center\" key={index + 1}>\r\n                            <td></td>\r\n\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td ><b>{lotsTotal.toFixed(2)}</b></td>\r\n                            <td>{contractSizeTotal.toFixed(2)}</td>\r\n\r\n                            <td>{openpricetotal.toFixed(2)}</td>\r\n                            <td></td>\r\n                            <td>{closepricetotal.toFixed(2)}</td>\r\n\r\n                            <td><b>{comissionTotal.toFixed(2)}</b></td>\r\n                            <td><b>{swapTotal.toFixed(2)}</b></td>\r\n                            {/* <td></td> */}\r\n\r\n                            <td><b>{profitTotal.toFixed(2)}</b></td>\r\n                        </tr>\r\n                    </>\r\n                )\r\n            } else {\r\n                return (\r\n                    <tr key={index} className=\"text-center\">\r\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\r\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\r\n                        <td>{item.symbol}</td>\r\n                        <td>{item.lots}</td>\r\n                        <td>{item.contract_size}</td>\r\n                        <td>{item.open_price}</td>\r\n                        <td>{moment(item.close_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\r\n                        <td>{item.close_price}</td>\r\n\r\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\r\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\r\n\r\n                        <td>{item.profit}</td>\r\n                    </tr>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    let openToOrderTotal\r\n    function toOpenTradeTr() {\r\n        let lotsTotal = 0;\r\n        let comissionTotal = 0;\r\n        let profitTotal = 0;\r\n        let swapTotal = 0;\r\n        let contractSizeTotal = 0;\r\n        let openpricetotal = 0;\r\n        return toOpenTrade.length > 0 && toOpenTrade.map((item, index) => {\r\n            customSwap.map((data) => {\r\n\r\n                if (data.account_id == item.account_id) {\r\n                    item.swap = item.swap + data.open_value\r\n                }\r\n            })\r\n            lotsTotal += item.lots;\r\n            comissionTotal += item.commission;\r\n            profitTotal += item.profit;\r\n            swapTotal += item.swap;\r\n            openToOrderTotal = comissionTotal + profitTotal + swapTotal\r\n            contractSizeTotal += item.contract_size\r\n            openpricetotal += item.open_price\r\n            if (index == toOpenTrade.length - 1) {\r\n                return (\r\n                    <><tr key={index} className=\"text-center\">\r\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\r\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\r\n                        <td>{item.symbol}</td>\r\n                        <td>{item.lots}</td>\r\n                        <td>{item.contract_size}</td>\r\n                        <td>{item.open_price}</td>\r\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\r\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\r\n                        {/* <td>{item.magic_number !== 0 ? item.magic_number : ''}</td> */}\r\n                        <td>{item.profit}</td>\r\n\r\n\r\n                    </tr>\r\n                        <tr className=\"text-center\" key={index + 1}>\r\n                            <td></td>\r\n\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td><b>{lotsTotal.toFixed(2)}</b></td>\r\n                            <td>{contractSizeTotal.toFixed(2)}</td>\r\n\r\n                            <td> {openpricetotal.toFixed(2)}</td>\r\n                            <td><b>{comissionTotal.toFixed(2)}</b></td>\r\n                            <td><b>{swapTotal.toFixed(2)}</b></td>\r\n\r\n                            <td><b>{profitTotal.toFixed(2)}</b></td>\r\n                        </tr>\r\n                    </>\r\n                )\r\n            } else {\r\n                return (\r\n                    <tr key={index} className=\"text-center\">\r\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\r\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\r\n                        <td>{item.symbol}</td>\r\n                        <td>{item.lots}</td>\r\n                        <td>{item.contract_size}</td>\r\n                        <td>{item.open_price}</td>\r\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\r\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\r\n                        {/* <td>{item.magic_number !== 0 ? item.magic_number : ''}</td> */}\r\n                        <td>{item.profit}</td>\r\n\r\n                    </tr>\r\n                )\r\n            }\r\n        })\r\n    }\r\n    let openToHistoryTotal\r\n    function toHistoryTradeTr() {\r\n        let lotsTotal = 0;\r\n        let comissionTotal = 0;\r\n        let profitTotal = 0;\r\n        let swapTotal = 0;\r\n        let contractSizeTotal = 0;\r\n        let openpricetotal = 0;\r\n        let closepricetotal = 0;\r\n        return toHistoryTrade.length > 0 && toHistoryTrade.map((item, index) => {\r\n            customSwap.map((data) => {\r\n\r\n                if (data.account_id == item.account_id) {\r\n                    item.swap = item.swap + data.open_value\r\n                }\r\n            })\r\n            lotsTotal += item.lots;\r\n            comissionTotal += item.commission;\r\n            profitTotal += item.profit;\r\n            swapTotal += item.swap;\r\n            openToHistoryTotal = comissionTotal + profitTotal + swapTotal;\r\n            contractSizeTotal += item.contract_size\r\n            openpricetotal += item.open_price;\r\n            closepricetotal += item.close_price;\r\n            if (index == toHistoryTrade.length - 1) {\r\n                return (\r\n                    <><tr key={index} className=\"text-center\">\r\n\r\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\r\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\r\n                        <td>{item.symbol}</td>\r\n                        <td>{item.lots}</td>\r\n                        <td>{item.contract_size}</td>\r\n                        <td>{item.open_price}</td>\r\n                        <td>{moment(item.close_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\r\n                        <td>{item.close_price}</td>\r\n\r\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\r\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\r\n\r\n                        <td>{item.profit}</td>\r\n                    </tr>\r\n                        <tr className=\"text-center\" key={index + 1}>\r\n                            <td></td>\r\n\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td ><b>{lotsTotal.toFixed(2)}</b></td>\r\n                            <td>{contractSizeTotal.toFixed(2)}</td>\r\n\r\n                            <td>{openpricetotal.toFixed(2)}</td>\r\n                            <td></td>\r\n                            <td>{closepricetotal.toFixed(2)}</td>\r\n\r\n                            <td><b>{comissionTotal.toFixed(2)}</b></td>\r\n                            <td><b>{swapTotal.toFixed(2)}</b></td>\r\n                            {/* <td></td> */}\r\n\r\n                            <td><b>{profitTotal.toFixed(2)}</b></td>\r\n                        </tr>\r\n                    </>\r\n                )\r\n            } else {\r\n                return (\r\n                    <tr key={index} className=\"text-center\">\r\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\r\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\r\n                        <td>{item.symbol}</td>\r\n                        <td>{item.lots}</td>\r\n                        <td>{item.contract_size}</td>\r\n                        <td>{item.open_price}</td>\r\n                        <td>{moment(item.close_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\r\n                        <td>{item.close_price}</td>\r\n\r\n                        <td>{item.commission !== 0 ? item.commission : ''}</td>\r\n                        <td>{item.swap !== 0 ? item.swap : ''}</td>\r\n\r\n                        <td>{item.profit}</td>\r\n                    </tr>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    // console.log(fromAccountId, toAccountId, fromOpenTrade, toOpenTrade, fromHistoryTrade, toHistoryTrade, commissionValue, 'commissionValue');\r\n    return (\r\n        <>\r\n\r\n\r\n            {errormassage ?\r\n                <div className=\"popup\">\r\n                    <div class=\"card w-75 \">\r\n                        <div class=\"card-body topmargin\">\r\n                            <div class=\" card-text popuptext\" role=\"alert\"> Please activate filter profile to view stats.\r\n                            ...\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> :\r\n                <>\r\n                    <Row className=\"no-margin\">\r\n                        <div className=\"lastUpdate\">\r\n                            <span> Last Updated :  </span>\r\n                            {dateTime}(UTC)\r\n                     </div>\r\n                    </Row>\r\n                    <div style={{ overflowX: 'hidden' }} className=\"symbol-box shadoremove\">\r\n\r\n\r\n\r\n                        <div>\r\n                            <div className=\"symbol-box\">\r\n                                <div className=\"openpositions\" >\r\n                                    <span className=\"p-text\">Unrealized Profit/Loss</span>\r\n                                    <span className=\"icon-style\" onClick={toggle} >\r\n                                        {isOpen ?\r\n                                            <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\r\n                                            :\r\n                                            <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\r\n                                        }\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <Collapse isOpen={isOpen}>\r\n                                <div className=\"openOrder\">\r\n\r\n                                    <Row className=\"border-box\">\r\n                                        {fromOpenTrade && fromOpenTrade.length > 0 ? (\r\n                                            <Col md={12} className=\"no-gutters\">\r\n\r\n                                                <div className={'colorDarkBlue , boldText loginCenter'}>{fromAccountId.alias}</div>\r\n                                                <span className=\"text-center colorDarkBlue no-padding \"> {fromAccountId.login}</span>\r\n\r\n\r\n                                                <table class=\"table table-responsive table-bordered\">\r\n                                                    <thead>\r\n                                                        <tr className=\"text-center thUnset\">\r\n                                                            {/* open_time,type,symbol,lot,contract_size,open_price,commission,swap,profit */}\r\n                                                            <th>Open Time</th>\r\n                                                            <th scope=\"col\">order type</th>\r\n\r\n                                                            <th scope=\"col\">symbol</th>\r\n                                                            <th scope=\"col\">lots</th>\r\n                                                            {/* <th scope=\"col\">open_time</th> */}\r\n                                                            <th>Contract size</th>\r\n                                                            <th>Open Price</th>\r\n\r\n\r\n                                                            <th scope=\"col\">commission</th>\r\n                                                            <th scope=\"col\">swap</th>\r\n                                                            {/* <th scope=\"col\">magic_number</th> */}\r\n                                                            <th scope=\"col\">profit</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {fromOpenTradeTr()}\r\n                                                    </tbody>\r\n                                                </table>\r\n                                                <div className=\"text-center\"><b>Total {openFromOrderTotal}</b></div>\r\n                                            </Col>\r\n\r\n\r\n                                        ) : (\r\n                                                <Col md={12} >\r\n                                                    <div className=\"card change noRecordCol\"> No Record Found</div>\r\n                                                </Col>\r\n                                            )}\r\n\r\n\r\n\r\n                                    </Row>\r\n                                    <Row className=\"border-box\">\r\n                                        {toOpenTrade && toOpenTrade.length > 0 ? (\r\n\r\n                                            <Col md={12} className=\"no-gutters\">\r\n                                                <div className={'color2 , boldText loginCenter'}>{toAccountId.alias}</div>\r\n                                                <span className=\"text-center color2 no-padding\">{toAccountId.login}</span>\r\n\r\n                                                <table class=\"table table-responsive table-bordered\">\r\n                                                    <thead>\r\n                                                        <tr className=\"text-center thUnset\">  {/* open_time,type,symbol,lot,contract_size,open_price,close_time,close_price,commission,swap,profit */}\r\n                                                            <th>Open Time</th>\r\n                                                            <th scope=\"col\">order type</th>\r\n\r\n                                                            <th scope=\"col\">symbol</th>\r\n                                                            <th scope=\"col\">lots</th>\r\n                                                            <th>Contract size</th>\r\n                                                            <th>Open Price</th>\r\n                                                            <th scope=\"col\">commission</th>\r\n                                                            <th scope=\"col\">swap</th>\r\n                                                            <th scope=\"col\">profit</th>\r\n\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {toOpenTradeTr()}\r\n                                                    </tbody>\r\n                                                </table>\r\n                                                <div className=\"text-center\"><b>Total {openToOrderTotal}</b></div>\r\n                                            </Col>\r\n\r\n\r\n                                        ) : (\r\n                                                <Col md={12}>\r\n                                                    <div className=\"card change noRecordCol\"> No Record Found</div>\r\n                                                </Col>\r\n                                            )}\r\n\r\n                                    </Row>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n\r\n                        <div className=\"symbol-box topSet\" >\r\n                            <div className=\"openpositions\" >\r\n                                <span className=\"p-text\">Realized Profit/Loss</span>\r\n                                <span className=\"icon-style\" onClick={toggle2} >\r\n                                    {isOpen2 ?\r\n                                        <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\r\n                                        :\r\n                                        <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\r\n                                    }\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <Collapse isOpen={isOpen2}>\r\n\r\n                                <div className=\"openOrder\">\r\n\r\n                                    {fromHistoryTrade.length > 0 || toHistoryTrade.length > 0 ? (\r\n                                        <div>\r\n                                            <Row className=\"border-box\">\r\n                                                {fromHistoryTrade && fromHistoryTrade.length > 0 ? (\r\n                                                    <Col md={12} className=\"no-gutters\">\r\n                                                        <div className={'colorDarkBlue , boldText loginCenter'}>{fromAccountId.alias}</div>\r\n                                                        <span className=\"text-center colorDarkBlue no-padding\">{fromAccountId.login}</span>\r\n                                                        <table class=\"table table-responsive table-bordered\">\r\n                                                            <thead>\r\n                                                                <tr className=\"text-center thUnset\">\r\n                                                                    <th>Open Time</th>\r\n                                                                    <th scope=\"col\">order type</th>\r\n\r\n                                                                    <th scope=\"col\">symbol</th>\r\n                                                                    <th scope=\"col\">lots</th>\r\n\r\n                                                                    <th>Contract size</th>\r\n                                                                    <th>Open Price</th>\r\n                                                                    <th>Close Time</th>\r\n\r\n                                                                    <th>Close Price</th>\r\n\r\n                                                                    <th scope=\"col\">commission</th>\r\n                                                                    <th scope=\"col\">swap</th>\r\n\r\n                                                                    <th scope=\"col\">profit</th>\r\n                                                                </tr>\r\n                                                            </thead>\r\n                                                            <tbody>\r\n                                                                {fromHistoryTradeTr()}\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                        <div className=\"text-center\"><b>Total {openFromHistoryTotal}</b></div>\r\n\r\n                                                    </Col>\r\n\r\n\r\n                                                ) : (\r\n                                                        <Col md={12}>\r\n                                                            <div className=\"card change noRecordCol\"> No Record Found</div>\r\n                                                        </Col>\r\n                                                    )}\r\n\r\n                                            </Row>\r\n\r\n                                            <Row className=\"border-box\">\r\n                                                {toHistoryTrade && toHistoryTrade.length > 0 ? (\r\n                                                    <Col md={12} className=\"no-gutters\">\r\n                                                        <div className={'color2 , boldText loginCenter'}>{toAccountId.alias}</div>\r\n                                                        <span className=\"text-center color2 no-padding\">{toAccountId.login}</span>\r\n\r\n                                                        <table class=\"table table-responsive table-bordered\">\r\n                                                            <thead>\r\n                                                                <tr className=\"text-center thUnset\">\r\n                                                                    <th>Open Time</th>\r\n                                                                    <th scope=\"col\">order type</th>\r\n\r\n                                                                    <th scope=\"col\">symbol</th>\r\n                                                                    <th scope=\"col\">lots</th>\r\n\r\n                                                                    <th>Contract size</th>\r\n                                                                    <th>Open Price</th>\r\n                                                                    <th>Close Time</th>\r\n\r\n                                                                    <th>Close Price</th>\r\n\r\n                                                                    <th scope=\"col\">commission</th>\r\n                                                                    <th scope=\"col\">swap</th>\r\n\r\n                                                                    <th scope=\"col\">profit</th>\r\n                                                                </tr>\r\n                                                            </thead>\r\n                                                            <tbody>\r\n                                                                {toHistoryTradeTr()}\r\n\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                        <div className=\"text-center\"><b>Total {openToHistoryTotal}</b></div>\r\n\r\n                                                    </Col>\r\n\r\n                                                ) : (\r\n                                                        <Col md={12}>\r\n                                                            <div className=\"card change noRecordCol\"> No Record Found</div>\r\n                                                        </Col>\r\n                                                    )}\r\n                                            </Row>\r\n                                        </div>\r\n\r\n                                    ) : (\r\n                                            <Col md={12} >\r\n                                                <div className=\"card change noRecordCol\"> No Record Found</div>\r\n                                            </Col>\r\n                                        )}\r\n                                    <Row className=\"no-margin\">\r\n                                        {commissionValue && commissionValue.commission_acount_id > 0 && (\r\n                                            <div className=\"card \">\r\n                                                <div className=\"header ptheader\">\r\n                                                    <h4 className=\"text-center bText1\"><b>Commission</b></h4>\r\n                                                    {/* <h4 className=\"text-center\">{commissionDetails[0].login}</h4> */}\r\n\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-md-4 text-center\">\r\n                                                            <h4 className=\"bText\"> Balance {' '}</h4>\r\n                                                            <NumberFormat value={commissionValue.totalProfit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                                                        </div>\r\n                                                        <div className=\"col-md-4 text-center\">\r\n                                                            <h4 className=\"bText\"> Equity  </h4><NumberFormat displayType={'text'} thousandSeparator={true} decimalScale={2} /><span>{commissionValue.equity}</span>\r\n\r\n                                                        </div>\r\n                                                        <div className=\"col-md-4 text-center\">\r\n                                                            <h4 className=\"bText\"> Order Type  </h4>\r\n                                                            <span>6</span>\r\n\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-md-12 text-center\">\r\n                                                            <h4><b>Total</b>  </h4><NumberFormat value={commissionValue.commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n\r\n                                    </Row>\r\n                                </div>\r\n                            </Collapse>\r\n\r\n                        </div>\r\n\r\n                        {/* <div className=\"symbol-box  topSet \" >\r\n                            <div className=\"text-center\" >\r\n                                <span className=\"  summrayAdjust \" style={{ fontWeight: 600, color: \"#797979\" }}>Summary</span>\r\n                                <h5 style={{ fontWeight: 600, color: \"#797979\" }}> Open Positions + Closed Positions {commissionValue.commission_acount_id > 0 && (<span> + Commission</span>)}</h5>\r\n                                <h5 className=\"bText\">\r\n                                    <NumberFormat value={totalOpenAndHistory} displayType={'text'} thousandSeparator={true} decimalScale={2} ></NumberFormat></h5>\r\n                            </div>\r\n\r\n                        </div> */}\r\n                    </div>\r\n                    <Grid fluid>\r\n                        {/* <div className=\"symbol-box shadoremove\"> */}\r\n                        {/* <div className=\"openOrder\">\r\n\r\n                            <div className=\"border-box row\"> */}\r\n                        {/* <DatatablePage state={'open'} data={fromOpenTrade} /> */}\r\n                        {/* </div> */}\r\n                        {/* <div className=\"border-box row\"> */}\r\n\r\n                        {/* <DatatablePage state={'open'} data={toOpenTrade} /> */}\r\n                        {/* </div> */}\r\n                        {/* <div className=\"border-box row\"> */}\r\n\r\n                        {/* <DatatablePage state={'close'} data={fromHistoryTrade} /> */}\r\n                        {/* </div> */}\r\n                        {/* <div className=\"border-box row\"> */}\r\n\r\n                        {/* <DatatablePage state={'close'} data={toHistoryTrade} /> */}\r\n                        {/* </div> */}\r\n                        {/* </div> */}\r\n                        {/* </div> */}\r\n\r\n                        <Row>\r\n                            <Col md={12} sm={6}>\r\n                                <div className=\"terminal-box\">\r\n                                    <span className=\"terminal-text\">Side by side View</span>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <TableList />\r\n                        </Row>\r\n                    </Grid>\r\n                </>\r\n\r\n            }\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\r\n\r\nexport default class Exploser extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"boxFix\">\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <div className=\"card \">\r\n\r\n                            <div className=\"header\">\r\n\r\n                                <h6 className={'colorDarkBlue , loginCenter'}>Account - A</h6>\r\n                            </div>\r\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                <table className=\"table\">\r\n                                    <tbody>\r\n\r\n                                        <tr><td>Symbol </td>\r\n                                            <td className=\"td-actions text-right\">Symbol\r\n\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr><td>Lots </td>\r\n                                            <td className=\"td-actions text-right\">Lots\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr><td>BUY/SELL </td>\r\n                                            <td className=\"td-actions text-right\">Buy/Sell\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Contract Size </td>\r\n                                            <td className=\"td-actions text-right\">Size\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Exploser </td>\r\n                                            <td className=\"td-actions text-right\">Exploser Total\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n\r\n\r\n                    <Col md={6}>\r\n                        <div className=\"card \">\r\n\r\n                            <div className=\"header\">\r\n\r\n                                <h6 className={'colorDarkBlue , loginCenter'}>Account - B</h6>\r\n                            </div>\r\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                <table className=\"table\">\r\n                                    <tbody>\r\n\r\n                                        <tr><td>Symbol </td>\r\n                                            <td className=\"td-actions text-right\">Symbol\r\n\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr><td>Lots </td>\r\n                                            <td className=\"td-actions text-right\">Lots\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr><td>BUY/SELL </td>\r\n                                            <td className=\"td-actions text-right\">Sell\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Contract Size </td>\r\n                                            <td className=\"td-actions text-right\">Size\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Exploser </td>\r\n                                            <td className=\"td-actions text-right\">Total\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n\r\n\r\n                </Row>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport NumberFormat from 'react-number-format';\r\nimport config from '../../constant/config';\r\nimport Data from '../Data';\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\nimport './ContractSize.css';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\nimport Loader from 'react-loader-spinner'\r\nconst axios = require('axios');\r\nexport default class ContractSize extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            fromAccounts: '',\r\n            fromSymbol: '',\r\n            toAccounts: '',\r\n            toSymbol: '',\r\n            fromOpenOrderInfos: '',\r\n            toOpenOrderInfos: '',\r\n            total: '',\r\n            totalTo: '',\r\n            blockloader: true,\r\n            selectedOption: null,\r\n            allHistoryRecord: [],\r\n            allOpenRecord: [],\r\n            fromHistoryOrderInfo: [],\r\n            toHistoryOrderInfo: [],\r\n            commissionHistoryOrderInfo: [],\r\n            fromOpenOrderInfo: [],\r\n            toOpenOrderInfo: [],\r\n            filterlist: [],\r\n            loading: true,\r\n            dateTime: ''\r\n\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(config.baseurl + '/accounts/fetchAllSymbol')\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                console.log( response,\"response ---------------fetchAllSymbol>\")\r\n                // self.setState({ allSymbols: response.data.rows })\r\n            }\r\n        })\r\n        this.fetchStatusData();\r\n        this.fetchAllHIstoryTrade();\r\n        this.fetchLastUpdatedTime();\r\n    }\r\n    fetchLastUpdatedTime = () => {\r\n        let self = this;\r\n        axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.setState({ dateTime: response.data.filteredInfoTime })\r\n                    // console.log(self.state.dataOpenTrade.accountFromInfo,\"outyfjhkjh\");\r\n                }\r\n            });\r\n    }\r\n\r\n    fetchStatusData = () => {\r\n        let self = this;\r\n        let tottal = 0;\r\n        axios.get(config.baseurl + '/accounts/fetchStatusData')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.setState({ loading: false })\r\n                    self.setState({ fromAccounts: response.data.fromAccounts })\r\n                    self.setState({ fromSymbol: response.data.fromSymbol })\r\n                    // console.log(fromSymbol,\"fromSymbol\");\r\n                    self.setState({ toAccounts: response.data.toAccounts })\r\n                    self.setState({ toSymbol: response.data.toSymbol })\r\n                    self.setState({ fromOpenOrderInfos: response.data.fromOpenOrderInfos[0] })\r\n                    if (response.data.fromOpenOrderInfos.length > 0) {\r\n                        self.setState({ blockloader: false })\r\n                        if (response.data.fromOpenOrderInfos[0].order_type == 0) {\r\n                            self.setState({ total: response.data.fromSymbol.contract_size * (response.data.fromOpenOrderInfos[0].lots) })\r\n                        } else {\r\n                            self.setState({ total: response.data.fromSymbol.contract_size * -(response.data.fromOpenOrderInfos[0].lots) })\r\n                        }\r\n\r\n                        self.setState({ toOpenOrderInfos: response.data.toOpenOrderInfos[0] })\r\n                    }\r\n                    if (response.data.toOpenOrderInfos.length > 0) {\r\n                        if (response.data.toOpenOrderInfos[0].order_type == 0) {\r\n                            self.setState({ totalTo: response.data.toSymbol.contract_size * (response.data.toOpenOrderInfos[0].lots) })\r\n                        } else {\r\n                            self.setState({ totalTo: response.data.toSymbol.contract_size * -(response.data.toOpenOrderInfos[0].lots) })\r\n                        }\r\n                    }\r\n\r\n                }\r\n            });\r\n    }\r\n    fetchAllHIstoryTrade = () => {\r\n        let self = this;\r\n        axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\r\n            .then(function (response) {\r\n                // console.log(response.data, 'response.data his')\r\n                if (response.status == 200) {\r\n                    // self.setState({ allHistoryRecord: response.data.rows })\r\n                    self.setState({\r\n                        allHistoryRecord: response.data.rows,\r\n                        fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,\r\n                        toHistoryOrderInfo: response.data.toHistoryOrderInfo,\r\n                        commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\r\n                    })\r\n                }\r\n            })\r\n        // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\r\n        // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\r\n        axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n\r\n                    // self.setState({ allOpenRecord: response.data.rows })\r\n                    self.setState({\r\n                        allOpenRecord: response.data.rows,\r\n                        fromOpenOrderInfo: response.data.fromOpenOrderInfo,\r\n                        toOpenOrderInfo: response.data.toOpenOrderInfo\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { allHistoryRecord, allOpenRecord, selectedOption, toOpenOrderInfo, fromOpenOrderInfo, fromHistoryOrderInfo, commissionHistoryOrderInfo, toHistoryOrderInfo } = this.state;\r\n        //   const sumOfOpenTotal = allOpenRecord.reduce((current, data) => {\r\n        //     return (Math.floor(data.commission + data.swap + data.profit+ current));\r\n        // }, 0);\r\n\r\n        //   const sumOfHistoryTotal = allHistoryRecord.reduce((current, data) => {\r\n        //     return (data.profit + current);\r\n        // }, 0);\r\n        let uniqueSymbols = \"\";\r\n        if (allOpenRecord && Object.entries(allOpenRecord).length > 0) {\r\n            let fromSymbols = JSON.parse(allOpenRecord.from_symbols);\r\n            // fromSymbols = (fromSymbols).map(data => data).join(', ');\r\n            let toSymbols = JSON.parse(allOpenRecord.to_symbols);\r\n            let combineSymbols = fromSymbols.concat(toSymbols);\r\n            uniqueSymbols = combineSymbols.filter((item, i, ar) => ar.indexOf(item) === i);\r\n            uniqueSymbols = (uniqueSymbols).map(data => data).join(', ')\r\n        }\r\n        let fromsum = 0;\r\n        let tosum = 0;\r\n        // if(fromHistoryOrderInfo && commissionHistoryOrderInfo && fromHistoryOrderInfo.length>0){\r\n        if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\r\n            fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\r\n        }\r\n\r\n        if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\r\n            tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\r\n        }\r\n\r\n        let sumOfHistoryTotal = tosum + fromsum;\r\n\r\n        let openfromsum = 0;\r\n        let opentosum = 0;\r\n        if ((fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total != null)) {\r\n\r\n            openfromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\r\n\r\n        }\r\n        if ((toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total != null)) {\r\n\r\n            opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n        }\r\n\r\n        let sumOfOpenTotal = opentosum + openfromsum;\r\n\r\n\r\n\r\n        return (\r\n            <React.Fragment>\r\n                        <Row>\r\n                            <div className=\"lastUpdate\">\r\n                                <span> Last Updated :  </span>\r\n                                {this.state.dateTime}(UTC)  </div>\r\n                        </Row>\r\n                <div className=\"contractSize-wrapper\">\r\n                    <div className=\" leftset card \">\r\n                        {this.state.loading ? <Loader\r\n                            type=\"ThreeDots\"\r\n                            color=\"black\"\r\n                            height={100}\r\n                            width={100}\r\n                            style={{ textAlign: 'center' }}\r\n\r\n\r\n                        />\r\n                            :\r\n                            <Row>\r\n\r\n                                <h4 className=\"text-center \"><b>Exposure</b></h4>\r\n                                {this.state.fromOpenOrderInfos.order_type !== null && this.state.toOpenOrderInfos.order_type !== null ? <>         {this.state.fromOpenOrderInfos.order_type !== null ?\r\n                                    <Col md={4}>\r\n                                        <div className=\"card\">\r\n                                            <div className={'colorDarkBlue , boldText loginCenter'}>{this.state.fromAccounts.alias}</div>\r\n\r\n                                            <h6 className={'colorDarkBlue loginCenter'}>{this.state.fromAccounts.login}</h6>\r\n\r\n                                            <div className=\"content table-full-width \"><div className=\"table-responsive\">\r\n                                                <div className=\"text-center\">\r\n                                                    <span >{this.state.fromSymbol.name}\r\n\r\n                                                    </span>\r\n                                                    {(this.state.fromOpenOrderInfos !== '' && this.state.fromOpenOrderInfos.order_type !== null) && <span className=\"td-actions bText, clearBorder\" style={{ display: 'block' }}>\r\n                                                        {this.state.fromOpenOrderInfos.order_type == 0 ? 'BUY ' : 'SELL '}\r\n\r\n                                                        {this.state.fromOpenOrderInfos.lots} {(this.state.fromOpenOrderInfos.lots > 1) ? 'Lots' : 'Lot'}\r\n                                                    </span>}\r\n                                                </div><br></br>\r\n                                                <div className=\"text-center\">\r\n                                                    <span className=\"td-actions clearBorder text-right\">\r\n                                                        <NumberFormat value={this.state.total} displayType={'text'} thousandSeparator={true} decimalScale={2} />   {this.state.fromSymbol.margin_currency}\r\n\r\n                                                    </span>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </Col>\r\n                                    :\r\n                                    <Col md={4}>\r\n                                        <div className=\"card change noRecordCol\"> No Record Found</div>\r\n                                    </Col>\r\n                                }\r\n                                    <Col md={4}>\r\n                                        <div className=\"card\">\r\n\r\n                                            <h5 className=\"  text-center adjustMent\" > {this.state.total != 0 && this.state.totalTo != 0 && (this.state.total + this.state.totalTo != 0) ? <b>  Exposure</b> : <span style={{ color: \"green\" }}><b > No Exposure</b></span>}\r\n                                            </h5>\r\n                                            {this.state.total != 0 && this.state.totalTo != 0 && (this.state.total + this.state.totalTo != 0) &&\r\n                                                <div style={{ color: '#b70606' }} className=\" setBottom bText text-center\">\r\n                                                    <NumberFormat\r\n                                                        value={this.state.total + this.state.totalTo} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                                                </div>\r\n\r\n                                            }\r\n                                        </div>\r\n\r\n                                    </Col>\r\n                                    {this.state.toOpenOrderInfos.order_type !== null ? <Col md={4}>\r\n                                        <div className=\" leftset1 card\">\r\n                                            <div className={'color2 , boldText loginCenter'}>{this.state.toAccounts.alias}</div>\r\n\r\n                                            <h6 className={'color2 ,bText, loginCenter'}>{this.state.toAccounts.login}</h6>\r\n\r\n                                            <div className=\"content table-full-width \"><div className=\"table-responsive\">\r\n\r\n\r\n                                                <div className=\"text-center\">\r\n                                                    <span className=\"td-actions bText, clearBorder text-right\">{this.state.toSymbol.name}\r\n\r\n                                                    </span>\r\n                                                    {(this.state.toOpenOrderInfos !== '' && this.state.toOpenOrderInfos.order_type !== null) && <span className=\"td-actions bText, clearBorder\" style={{ display: 'block' }}>\r\n                                                        {this.state.toOpenOrderInfos.order_type == 0 ? 'BUY ' : 'SELL '}\r\n                                                        {this.state.toOpenOrderInfos.lots} {(this.state.toOpenOrderInfos.lots > 1) ? 'Lots' : 'Lot'}</span>}\r\n                                                </div><br></br>\r\n                                                <div className=\"text-center\">\r\n                                                    <span >\r\n                                                        <NumberFormat value={this.state.totalTo} displayType={'text'} thousandSeparator={true} decimalScale={2} />   {this.state.toSymbol.margin_currency}\r\n\r\n                                                    </span>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </Col>\r\n                                        :\r\n                                        <Col md={4}>\r\n                                            <div className=\"card change noRecordCol\"> No Record Found</div>\r\n                                        </Col>}\r\n\r\n                                </> :\r\n                                    <Col md={12}>\r\n                                        <div className=\"card change noRecordCol\"> No Record Found</div>\r\n                                    </Col>}\r\n\r\n                            </Row>}\r\n                        <Col md={12} sm={6}>\r\n                            <div className={sumOfHistoryTotal + sumOfOpenTotal >= 0 ? \"summary-box\" : \"summary-box-red\"}>\r\n\r\n\r\n                                {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\r\n                                {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\r\n                <span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\r\n\r\n                                <Col md={12} sm={12}>\r\n                                    <div className=\"summary-text text-center\" style={{ fontWeight: 600, color: \"#797979\" }}>Summary For ({uniqueSymbols}) {allHistoryRecord.history_info !== 0 && (<span> + Commission</span>)} </div>\r\n                                </Col>\r\n                                <Col md={12} sm={12}>\r\n                                    <div className=\"text-center\" style={{ fontWeight: 'bold', fontSize: \"18px\" }}>$ {' '}\r\n                                        <NumberFormat value={allHistoryRecord.history_info !== undefined ? sumOfHistoryTotal + sumOfOpenTotal + allHistoryRecord.history_info : sumOfHistoryTotal + sumOfOpenTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                    </div>\r\n                                </Col>\r\n\r\n                                <div className=\"clearfix\"></div>\r\n                            </div>\r\n                        </Col>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport NumberFormat from 'react-number-format';\r\nimport config from '../../constant/config';\r\nimport Data from '../Data';\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\nimport './Statistics.css'\r\nconst axios = require('axios');\r\nexport default class Statistics extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n            filterlist: [],\r\n            selectedOption: null,\r\n            allHistoryRecord: [],\r\n            allOpenRecord: [],\r\n            fromHistoryOrderInfo: [],\r\n            toHistoryOrderInfo: [],\r\n            commissionHistoryOrderInfo: [],\r\n            fromOpenOrderInfo: [],\r\n            dateTime:''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.fetchActivefilterData();\r\n        this.fetchAllHIstoryTrade();\r\n        this.fetchLastUpdatedTime()\r\n\r\n\r\n    }\r\n    fetchLastUpdatedTime = () => {\r\n        let self = this;\r\n        axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\r\n          .then(function (response) {\r\n            if (response.status == 200) {\r\n              self.setState({ dateTime: response.data.filteredInfoTime })\r\n              // console.log(self.state.dataOpenTrade.accountFromInfo,\"outyfjhkjh\");\r\n            }\r\n          });\r\n      }\r\n    fetchActivefilterData = () => {\r\n        let self = this;\r\n        axios.get(config.baseurl + '/filter/fetchActivefilterdata')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.setState({ filterlist: response.data.rows })\r\n                    // console.log(response.data.rows.accountFromInfo,\"filterlist----------------------\");\r\n\r\n                    if (self.state.filterlist.length == 0) {\r\n                        self.setState({ errorMassege: true })\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    showData = (accountDetailValue) => {\r\n\r\n        return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\r\n            if (accountDetailValue === 'margin_level') {\r\n                return (\r\n                    <>\r\n                        <td className=\"tdClr2 tdClr boldText\" key={index}>\r\n                            <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\r\n                </td>\r\n                        <td className=\"tdClr2 boldText\" key={index}>\r\n                            {/* {item.accountToInfo[0].accounts_details[0][accountDetailValue]} % */}\r\n                            <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\r\n                </td>\r\n                    </>\r\n                )\r\n            }\r\n            if (item.accountFromInfo.length > 0) {\r\n                return (\r\n                    <>\r\n                        <td className=\"tdClr2 tdClr boldText\" key={index}>\r\n                            {item.accountFromInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''}  {' '}\r\n                            <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                        </td>\r\n\r\n                        <td className=\"tdClr2 boldText\" key={index}>\r\n                            {item.accountToInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''} {' '}\r\n                            {/* {item.accountToInfo[0].accounts_details[0][accountDetailValue]} */}\r\n                            <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                        </td>\r\n                    </>\r\n                )\r\n\r\n            }\r\n\r\n        })\r\n    }\r\n    tableHeader = () => {\r\n\r\n        // return this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => {\r\n        //   return (\r\n        //     <th key={index} className={item.accounts_details[0].account_id == 1 && index !== (this.state.accountlist.length - 1) ? 'bText colorDarkBlue text-center tdClr2 tdClr' : 'bText colorDarkBlue text-center tdClr2'}>\r\n        //       <span>\r\n        //         {item.login}\r\n        //       </span>\r\n        //     <div className=\"colorDarkBlue\" style={{fontSize:10}}> \r\n        //       ({(item.alias!=null) ? item.alias : '-'})\r\n        //     </div>\r\n        //     </th>\r\n\r\n        //   )\r\n        // }\r\n        // )\r\n        return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\r\n            return (\r\n                <>\r\n                    <th key={index} className=\"bText colorDarkBlue text-center tdClr2 tdClr\">\r\n                        <div className=\"colorDarkBlue\" >\r\n                            {(item.accountFromInfo[0].alias != null) ? item.accountFromInfo[0].alias : '-'}\r\n                        </div>\r\n                        <span style={{ fontSize: 10 }}>\r\n                            {item.accountFromInfo[0].login}\r\n                        </span>\r\n\r\n                    </th>\r\n                    <th key={index} className=\"bText color2 text-center tdClr2\">\r\n                        <div className=\"color2\" >\r\n                            {(item.accountToInfo[0].alias != null) ? item.accountToInfo[0].alias : '-'}\r\n                        </div>\r\n                        <span style={{ fontSize: 10 }}>\r\n                            {item.accountToInfo[0].login}\r\n                        </span>\r\n\r\n                    </th>\r\n                </>\r\n\r\n            )\r\n\r\n        })\r\n    }\r\n    fetchAllHIstoryTrade = () => {\r\n        let self = this;\r\n        axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\r\n            .then(function (response) {\r\n                // console.log(response.data, 'response.data his')\r\n                if (response.status == 200) {\r\n                    // self.setState({ allHistoryRecord: response.data.rows })\r\n                    self.setState({\r\n                        allHistoryRecord: response.data.rows,\r\n                        fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,\r\n                        toHistoryOrderInfo: response.data.toHistoryOrderInfo,\r\n                        commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\r\n                    })\r\n                }\r\n            })\r\n        // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\r\n        // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\r\n        axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n\r\n                    // self.setState({ allOpenRecord: response.data.rows })\r\n                    self.setState({\r\n                        allOpenRecord: response.data.rows,\r\n                        fromOpenOrderInfo: response.data.fromOpenOrderInfo,\r\n                        toOpenOrderInfo: response.data.toOpenOrderInfo\r\n                    })\r\n                }\r\n            })\r\n    }\r\n    render() {\r\n        const { allHistoryRecord, allOpenRecord, selectedOption, toOpenOrderInfo, fromOpenOrderInfo, fromHistoryOrderInfo, commissionHistoryOrderInfo, toHistoryOrderInfo } = this.state;\r\n        //   const sumOfOpenTotal = allOpenRecord.reduce((current, data) => {\r\n        //     return (Math.floor(data.commission + data.swap + data.profit+ current));\r\n        // }, 0);\r\n\r\n        //   const sumOfHistoryTotal = allHistoryRecord.reduce((current, data) => {\r\n        //     return (data.profit + current);\r\n        // }, 0);\r\n        let uniqueSymbols = \"\";\r\n        if (allOpenRecord && Object.entries(allOpenRecord).length > 0) {\r\n            let fromSymbols = JSON.parse(allOpenRecord.from_symbols);\r\n            // fromSymbols = (fromSymbols).map(data => data).join(', ');\r\n            let toSymbols = JSON.parse(allOpenRecord.to_symbols);\r\n            let combineSymbols = fromSymbols.concat(toSymbols);\r\n            uniqueSymbols = combineSymbols.filter((item, i, ar) => ar.indexOf(item) === i);\r\n            uniqueSymbols = (uniqueSymbols).map(data => data).join(', ')\r\n        }\r\n        let fromsum = 0;\r\n        let tosum = 0;\r\n        // if(fromHistoryOrderInfo && commissionHistoryOrderInfo && fromHistoryOrderInfo.length>0){\r\n        if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\r\n            fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\r\n        }\r\n\r\n        if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\r\n            tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\r\n        }\r\n\r\n        let sumOfHistoryTotal = tosum + fromsum;\r\n\r\n        let openfromsum = 0;\r\n        let opentosum = 0;\r\n        if ((fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total != null)) {\r\n            // if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\r\n            //   openfromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\r\n            // }else{\r\n            openfromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\r\n\r\n        }\r\n        if ((toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total != null)) {\r\n            // if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\r\n            //   opentosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit+ toOpenOrderInfo[0].swap);\r\n            // }\r\n\r\n            // else{\r\n            //   opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n            // }\r\n            opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n        }\r\n\r\n        let sumOfOpenTotal = opentosum + openfromsum;\r\n\r\n        //   console.log(opentosum, 'opentosum')\r\n        //   console.log(openfromsum, 'openfromsum')\r\n        //  console.log(sumOfHistoryTotal, \"sumOfHistoryTotal------\");\r\n        //  console.log(sumOfOpenTotal, \"sumOfOpenTotal-----\");\r\n        //  console.log(allOpenRecord, 'allOpenRecord')\r\n\r\n\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"statistic-wrapper\">\r\n                    <Grid fluid>\r\n                        <Row>\r\n                    <div className=\"lastUpdate\">\r\n                  <span> Last Updated :  </span>\r\n                  {this.state.dateTime}(UTC)  </div>\r\n                  </Row>\r\n                        <div className=\"terminal-box\">\r\n                            {(this.state.errorMassege) && <p style={{ color: 'red', fontSize: '10px' }}>Please Select Any Account</p>}\r\n                            <span className=\"terminal-text\">Terminal Statistics</span>\r\n                        </div>\r\n                        <Row noGutters={true}>\r\n                            {Data.dashBoardPage.items.map((item, index) =>\r\n\r\n                                <Col md={4} sm={6} key={index}>\r\n                                    <div style={{ margin: '30px 0px' }} className=\"text-center\">\r\n                                        <span className=\"bText\">{item.title}</span>\r\n                                    </div>\r\n                                    <div className=\"balance-box Pmargin\"\r\n                                    // className={item.id == '1' ? 'balance-box' : item.id == '2' ?\r\n                                    //   'balance-box Pmargin' : item.id == '3' ? 'balance-box equity-box' :\r\n                                    //     item.id == '4' ? 'balance-box Fmargin' : item.id == '5' ? 'balance-box floating' : 'balance-box  margin-box'}\r\n                                    >\r\n                                        <div className=\"content\">\r\n                                            <div className=\"table-responsive\">\r\n\r\n                                                <table className=\"table  text-center\">\r\n\r\n                                                    <tbody>\r\n                                                        <tr>\r\n                                                            {this.tableHeader()}\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            {item.title == 'Balance' && this.showData('balance')}\r\n                                                            {item.title == 'Equity' && this.showData('equity')}\r\n                                                            {item.title == 'Margin' && this.showData('margin')}\r\n                                                            {item.title == 'Free Margin' && this.showData('free_margin')}\r\n                                                            {item.title == 'Margin %' && this.showData('margin_level')}\r\n                                                            {item.title == 'Floating P/L' && this.showData('profit')}\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n\r\n                            )}\r\n                        </Row>\r\n                        <Col md={12} sm={6}>\r\n                            <div className={sumOfHistoryTotal + sumOfOpenTotal >= 0 ? \"summary-box\" : \"summary-box-red\"}>\r\n\r\n\r\n                                {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\r\n                                {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\r\n                <span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\r\n\r\n                                <Col md={12} sm={12}>\r\n                                    <div className=\"summary-text text-center\" style={{ fontWeight: 600, color: \"#797979\" }}>Summary For ({uniqueSymbols}) {allHistoryRecord.history_info !== 0 && (<span> + Commission</span>)} </div>\r\n                                </Col>\r\n                                <Col md={12} sm={12}>\r\n                                    <div className=\"text-center\" style={{ fontWeight: 'bold', fontSize: \"18px\" }}>$ {' '}\r\n                                        <NumberFormat value={allHistoryRecord.history_info !== undefined ? sumOfHistoryTotal + sumOfOpenTotal + allHistoryRecord.history_info : sumOfHistoryTotal + sumOfOpenTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n\r\n                                        {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\r\n\r\n                                    </div>\r\n                                </Col>\r\n\r\n                                <div className=\"clearfix\"></div>\r\n                            </div>\r\n                        </Col>\r\n                    </Grid>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import Dashboard from \"views/Dashboard.jsx\";\r\n// import UserProfile from \"views/UserProfile.jsx\";\r\n// import TableList from \"views/TableList.jsx\";\r\n// import Typography from \"views/Typography.jsx\";\r\n// import Icons from \"views/Icons.jsx\";\r\n// import Maps from \"views/Maps.jsx\";\r\n// import Notifications from \"views/Notifications.jsx\";\r\n// import Upgrade from \"views/Upgrade.jsx\";\r\n// import Filter from '../src/views/Filter';\r\nimport Innerlogin from 'views/Innerlogin';\r\nimport Filterprofile from './views/filter/Filterprofile';\r\nimport Swap from '../src/views/swap';\r\nimport calculating from '../src/views/calculating';\r\nimport Exploser from '../src/views/exploser';\r\nimport ContractSize from './views/ContractSize/ContractSize';\r\nimport Statistics from './views/Statistics/Statistics';\r\nconst dashboardRoutes = [\r\n  {\r\n    id: 1,\r\n    child: false,\r\n    menu: false,\r\n    path: \"/dashboard\",\r\n    name: \"Dashboard\",\r\n    icon: \"pe-7s-graph\",\r\n    component: Dashboard,\r\n    layout: \"/dashboard\",\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    child: false,\r\n    menu: false,\r\n    path: \"/Statistics\",\r\n    name: \" Statistics\",\r\n    icon: \"pe-7s-filter\",\r\n    component: Statistics,\r\n    layout: \"/dashboard\",\r\n  },\r\n\r\n\r\n  {\r\n    id: 3,\r\n    child: false,\r\n    menu: false,\r\n    path: \"/calculating\",\r\n    name: \"Positions\",\r\n    icon: \"pe-7s-calculator\",\r\n    component: calculating,\r\n    layout: \"/dashboard\",\r\n  },\r\n  {\r\n    id: 3,\r\n    child: false,\r\n    menu: false,\r\n    path: \"/contractSize\",\r\n    name: \" Contract Size Exposure\",\r\n    icon: \"pe-7s-search\",\r\n    component: ContractSize,\r\n    // component: calculating,\r\n    layout: \"/dashboard\",\r\n  },\r\n \r\n\r\n\r\n  // {\r\n  //   path: \"/exploser\",\r\n  //   name: \"Exploser\",\r\n  //   icon: \"pe-7s-search\",\r\n  //   component: Exploser,\r\n  //   layout: \"/admin\"\r\n  // },\r\n\r\n\r\n  {\r\n    id: 4,\r\n    child: true,\r\n    menu: false,\r\n    // path: \"/innerlogin\",\r\n    name: \"Settings\",\r\n    // component: Innerlogin,\r\n    icon: \"pe-7s-note2\",\r\n    // layout: \"/admin\",\r\n\r\n\r\n    resources: [\r\n      {\r\n\r\n        path: \"/settings/innerlogin\",\r\n        name: \"Login/Accounts\",\r\n        icon: \"pe-7s-note2\",\r\n        component: Innerlogin,\r\n        layout: \"/dashboard\"\r\n      },\r\n\r\n\r\n      {\r\n\r\n        path: \"/settings/filterpage\",\r\n        name: \"Filter\",\r\n        icon: \"pe-7s-filter\",\r\n        component: Filterprofile,\r\n        layout: \"/dashboard\"\r\n      },\r\n\r\n\r\n      {\r\n\r\n        path: \"/settings/swap\",\r\n        name: \"Swap\",\r\n        icon: \"pe-7s-graph\",\r\n        component: Swap,\r\n        layout: \"/dashboard\",\r\n      },\r\n    ]\r\n  },\r\n\r\n  // {\r\n  //   path: \"/typography\",\r\n  //   name: \"Typography\",\r\n  //   icon: \"pe-7s-news-paper\",\r\n  //   component: Typography,\r\n  //   layout: \"/dashboard\"\r\n  // },\r\n  // {\r\n  //   path: \"/icons\",\r\n  //   name: \"Icons\",\r\n  //   icon: \"pe-7s-science\",\r\n  //   component: Icons,\r\n  //   layout: \"/dashboard\"\r\n  // },\r\n  // {\r\n  //   path: \"/maps\",\r\n  //   name: \"Maps\",\r\n  //   icon: \"pe-7s-map-marker\",\r\n  //   component: Maps,\r\n  //   layout: \"/dashboard\"\r\n  // },\r\n  // {\r\n  //   path: \"/notifications\",\r\n  //   name: \"Notifications\",\r\n  //   icon: \"pe-7s-bell\",\r\n  //   component: Notifications,\r\n  //   layout: \"/dashboard\"\r\n  // },\r\n  // {\r\n  //   upgrade: true,\r\n  //   path: \"/upgrade\",\r\n  //   name: \"Upgrade to PRO\",\r\n  //   icon: \"pe-7s-rocket\",\r\n  //   component: Upgrade,\r\n  //   layout: \"/dashboard\"\r\n  // }\r\n];\r\n\r\nexport default dashboardRoutes;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport NotificationSystem from \"react-notification-system\";\r\n\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\r\n// import Footer from \"components/Footer/Footer\";\r\nimport Sidebar from \"components/Sidebar/Sidebar\";\r\n// import FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\r\n\r\nimport { style } from \"variables/Variables.jsx\";\r\n\r\nimport routes from \"routes.js\";\r\n\r\nimport image from \"assets/img/sidebar-3.jpg\";\r\n\r\nclass Admin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      _notificationSystem: null,\r\n      image: image,\r\n      color: \"black\",\r\n      hasImage: true,\r\n      fixedClasses: \"dropdown show-dropdown open\"\r\n    };\r\n  }\r\n  // handleNotificationClick = position => {\r\n  //   var color = Math.floor(Math.random() * 4 + 1);\r\n  //   var level;\r\n  //   switch (color) {\r\n  //     case 1:\r\n  //       level = \"success\";\r\n  //       break;\r\n  //     case 2:\r\n  //       level = \"warning\";\r\n  //       break;\r\n  //     case 3:\r\n  //       level = \"error\";\r\n  //       break;\r\n  //     case 4:\r\n  //       level = \"info\";\r\n  //       break;\r\n  //     default:\r\n  //       break;\r\n  //   }\r\n  //   this.state._notificationSystem.addNotification({\r\n  //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\r\n  //     message: (\r\n  //       <div>\r\n  //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\r\n  //         every web developer.\r\n  //       </div>\r\n  //     ),\r\n  //     level: level,\r\n  //     position: position,\r\n  //     autoDismiss: 15\r\n  //   });\r\n  // };\r\n  getRoutes = routes => {\r\n    let routeArray = []\r\n    routes.map((data) => {\r\n      routeArray.push(data)\r\n      if (data.child === true) {\r\n        data.resources.map((prop) => {\r\n          routeArray.push(prop)\r\n        })\r\n      }\r\n    })\r\n    return routeArray.map((prop, key) => {\r\n      if (prop.layout === \"/dashboard\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            render={props => (\r\n              <prop.component\r\n                {...props}\r\n                handleClick={this.handleNotificationClick}\r\n              />\r\n            )}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  getBrandText = path => {\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (\r\n        this.props.location.pathname.indexOf(\r\n          routes[i].layout + routes[i].path\r\n        ) !== -1\r\n      ) {\r\n        return routes[i].name;\r\n      }\r\n    }\r\n    // return \"Brand\";\r\n  };\r\n  handleImageClick = image => {\r\n    this.setState({ image: image });\r\n  };\r\n  handleColorClick = color => {\r\n    this.setState({ color: color });\r\n  };\r\n  handleHasImage = hasImage => {\r\n    this.setState({ hasImage: hasImage });\r\n  };\r\n  handleFixedClick = () => {\r\n    if (this.state.fixedClasses === \"dropdown\") {\r\n      this.setState({ fixedClasses: \"dropdown show-dropdown open\" });\r\n    } else {\r\n      this.setState({ fixedClasses: \"dropdown\" });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    let currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    if (currentUser === null) {\r\n      this.props.history.push('/login')\r\n      return;\r\n    }\r\n    //   this.setState({ _notificationSystem: this.refs.notificationSystem });\r\n    //   var _notificationSystem = this.refs.notificationSystem;\r\n    //   var color = Math.floor(Math.random() * 4 + 1);\r\n    //   var level;\r\n    //   switch (color) {\r\n    //     case 1:\r\n    //       level = \"success\";\r\n    //       break;\r\n    //     case 2:\r\n    //       level = \"warning\";\r\n    //       break;\r\n    //     case 3:\r\n    //       level = \"error\";\r\n    //       break;\r\n    //     case 4:\r\n    //       level = \"info\";\r\n    //       break;\r\n    //     default:\r\n    //       break;\r\n    //   }\r\n    //   _notificationSystem.addNotification({\r\n    //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\r\n    //     message: (\r\n    //       <div>\r\n    //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\r\n    //         every web developer.\r\n    //       </div>\r\n    //     ),\r\n    //     level: level,\r\n    //     position: \"tr\",\r\n    //     autoDismiss: 15\r\n    //   });\r\n  }\r\n  componentDidUpdate(e) {\r\n    if (\r\n      window.innerWidth < 993 &&\r\n      e.history.location.pathname !== e.location.pathname &&\r\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n    ) {\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n    }\r\n    if (e.history.action === \"PUSH\") {\r\n      document.documentElement.scrollTop = 0;\r\n      document.scrollingElement.scrollTop = 0;\r\n      this.refs.mainPanel.scrollTop = 0;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <NotificationSystem ref=\"notificationSystem\" style={style} />\r\n        <Sidebar {...this.props} routes={routes} image={this.state.image}\r\n          color={this.state.color}\r\n          hasImage={this.state.hasImage} />\r\n        <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\r\n          <AdminNavbar\r\n            {...this.props}\r\n            brandText={this.getBrandText(this.props.location.pathname)}\r\n          />\r\n          <Switch>{this.getRoutes(routes)}</Switch>\r\n          {/* <Footer /> */}\r\n          {/* <FixedPlugin\r\n            handleImageClick={this.handleImageClick}\r\n            handleColorClick={this.handleColorClick}\r\n            handleHasImage={this.handleHasImage}\r\n            bgColor={this.state[\"color\"]}\r\n            bgImage={this.state[\"image\"]}\r\n            mini={this.state[\"mini\"]}\r\n            handleFixedClick={this.handleFixedClick}\r\n            fixedClasses={this.state.fixedClasses}\r\n          /> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin;\r\n","\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./assets/css/animate.min.css\";\r\nimport \"./assets/sass/light-bootstrap-dashboard-react.scss?v=1.3.0\";\r\nimport \"./assets/css/demo.css\";\r\nimport \"./assets/css/pe-icon-7-stroke.css\";\r\nimport \"./assets/css/dashboard.css\";\r\nimport innerfilter from \"./views/filter/innerfilter\";\r\nimport Login from \"./views/login\";\r\n\r\n\r\nimport AdminLayout from \"./layouts/Admin.jsx\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route path=\"/dashboard\" render={props => <AdminLayout {...props} />} />\r\n\r\n      <Route exact path=\"/dashboard/innerfilter\" component={innerfilter} />\r\n      <Route exact from=\"/login\" component={Login} />\r\n      {/* <Redirect from=\"/\" to=\"/admin/dashboard\" /> */}\r\n      {/* <Redirect from=\"/\" component={Login} /> */}\r\n      <Redirect from=\"/\" to=\"/login\"/>\r\n      {/* <Route exact path=\"/innerfilter\" component={innerfilter} /> */}\r\n\r\n    </Switch>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}