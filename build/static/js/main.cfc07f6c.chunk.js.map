{"version":3,"sources":["variables/Variables.jsx","assets/img/sidebar-3.jpg","constant/config.js","views/filter/innerfilter.js","views/login/index.js","components/Navbars/AdminNavbarLinks.jsx","components/Navbars/AdminNavbar.jsx","components/Sidebar/Sidebar.jsx","views/Closeposition.js","views/Data.js","views/Openposition.js","api.js","views/Innerlogin.js","views/TableList.jsx","views/Dashboard.jsx","views/filter/filteredit.js","views/filter/filterdetail.js","views/filter/Filterprofile.js","views/DatatablePage.js","views/swap/index.js","views/calculating/index.js","views/exploser/index.js","views/ContractSize/ContractSize.js","views/Statistics/Statistics.js","views/users/userdetail.js","views/users/useredit.js","views/users/adduser.js","views/users/users.js","routes.js","layouts/Admin.jsx","index.js"],"names":["defaultWidth","window","screen","width","style","Wrapper","Containers","DefaultStyle","position","padding","zIndex","WebkitBoxSizing","MozBoxSizing","boxSizing","height","display","border","fontSize","WebkitFontSmoothing","fontFamily","fontWeight","color","tl","top","bottom","left","right","tr","tc","margin","marginLeft","bl","br","bc","NotificationItem","cursor","borderRadius","opacity","transition","WebkitTransform","transform","willChange","isHidden","isVisible","success","borderTop","backgroundColor","WebkitBoxShadow","MozBoxShadow","boxShadow","error","warning","info","Title","marginTop","MessageWrapper","marginRight","maxWidthwidth","Dismiss","float","lineHeight","outline","textAlign","Action","background","ActionWrapper","module","exports","thArray","tdArray","iconsArray","dataPie","labels","series","legendPie","names","types","dataSales","optionsSales","low","high","showArea","axisX","showGrid","lineSmooth","showLine","showPoint","fullWidth","chartPadding","responsiveSales","labelInterpolationFnc","value","legendSales","dataBar","optionsBar","seriesBarDistance","responsiveBar","legendBar","config","baseurl","axios","require","Innerfilter","props","getSymbolInfo","self","get","then","response","status","setState","allAccounts","data","rows","allSymbols","handleDropdownChange","e","selectValue","target","handleChangeDate","date","startDate","handleChangeDateComm","startDateComm","handleEndDate","state","endDate","handleChangeDateTo","startDateTo","handleEndDateComm","endDateComm","handleEndDateTo","endDateTo","handleChange","event","Array","from","selectedOptions","item","renderAccountSelect","selectedAccountOption","options","map","id","label","login","placeholder","onChange","handleChangeAccount","handeChangeShowCommission","showCommission","showAddCommission","handleChangeAccountTo","selectedAccountOptionTo","renderAccountSelectTo","handleChangeCommissionAccount","selectedCommissionAccount","renderCommissionAccount","handleChangeMagicNumber","magicNumber","handleChangeMagicNumberTo","magicNumberTo","handleChangeMagicNumberComm","comm_magicNumber","handleChangeTicket","ticket","handleChangeTicketTo","ticketTo","handleChangeSymbol","selectedSymbolOption","renderSymbolSelect","name","isMulti","handleChangeSymbolTo","selectedSymbolOptionTo","renderSymbolSelectTo","changeIncludeDefaultProperty","include","exclude","changeExcludeDefaultProperty","changeIncludeDefaultPropertyComm","includeComm","excludeComm","changeIncludeDefaultPropertyTo","includeTo","excludeTo","changeExcludeDefaultPropertyComm","changeExcludeDefaultPropertyTo","changeIncludeDefaultPropertyTicket","includeTicket","includeTicketTo","excludeTicket","changeExcludeDefaultPropertyTicket","changeIncludeDefaultPropertyTicketTo","excludeTicketTo","changeExcludeDefaultPropertyTicketTo","profileName","showCommisoin","autoSyncClose","profileValues","nameError","showMagicNumber","showMagicNumberTo","tags","include_exclude_status","this","fetchfilterdata","token","JSON","parse","localStorage","getItem","headers","length","charAt","toUpperCase","slice","filter","profile_name","NotificationManager","listNotify","preventDefault","from_status","comm_status","to_status","from_status_ticket","to_status_ticket","symbolFrom","symbolto","Data","from_account_id","to_account_id","commission_acount_id","startdateFrom","enddateFrom","startdateTo","enddateTo","startdateComm","enddateComm","comm_include_exclude_status","comm_magic_number","stringify","from_symbols","to_symbols","auto_close","from_magic_number","to_magic_number","from_include_exclude_status","to_include_exclude_status","from_ticket","to_ticket","from_include_exclude_status_ticket","to_include_exclude_status_ticket","createdAt","Date","updatedAt","post","onHide","catch","className","Grid","fluid","onClick","crossClick","aria-hidden","type","handleprofileName","defaultChecked","handleChangeAutoSync","Row","Col","md","selected","isClearable","placeholderText","dateFormat","strictParsing","autoOk","onValidationReject","console","log","validationRegex","inputProps","checked","data-tip","Button","variant","size","block","formDataSubmit","Component","Login","toogle","loginForm","handleClose","handleShow","setShow","createNotification","show","username","password","alert","persons","shwPwd","shwMsg","invalidUsername","invalidPassword","accountlist","bind","onSubmit","trim","userdetail","setItem","accessToken","history","push","message","err","sm","disabled","AdminNavbarLinks","logout","a","logged_in","clear","currentUser","notification","Nav","NavItem","eventKey","href","NavDropdown","title","noCaret","MenuItem","pullRight","Header","mobileSidebarToggle","sidebarExists","document","documentElement","classList","toggle","node","createElement","onclick","parentElement","removeChild","body","appendChild","Navbar","Brand","brandText","Toggle","Collapse","Sidebar","routes","menu","innerWidth","routeName","location","pathname","indexOf","updateDimensions","addEventListener","image","data-color","data-image","hasImage","prop","key","redirect","upgrade","activeRoute","layout","path","to","activeClassName","icon","child","undefined","resources","sub","index","role","Closeposition","allHistoryRecord","fromHistoryOrderInfo","toHistoryOrderInfo","commissionHistoryOrderInfo","useState","fromSymbols","toSymbols","Object","entries","join","fromsum","tosum","commission","swap","profit","sumOfTotal","noRecord","total","accountFromInfo","alias","displayType","thousandSeparator","decimalScale","accountToInfo","marginBottom","accountCommissionInfo","history_info","tablePage","items","lot","closed","price","textA","dashBoardPage","textB","Openposition","allOpenRecord","fromOpenOrderInfo","toOpenOrderInfo","order_type","lots","intervalSet","timerWaitInterval","myInitObject","api","fetchAllHistoryTrade","responsHT","fetchAllOpenTrade","responsOT","fetchAllAccounts","responsAC","fetchActivefilterdata","responsAF","fetchLastUpdatedTime","responsLUT","fetchStatusData","responsSD","calculatingOpenTrade","responsCOT","calculatingHistoryTrade","responsCHT","calculatingCommission","responsCC","fetchAllSymbol","responsAS","fetchdailyswaps","responsDS","usersAllAccounts","responsAAC","responsFF","TableList","fetchDataAccordingSymbols","symbol","filterlist","selectedOption","renderSymbols","isOpen2","setInterval","activeProfileName","errorMassege","concat","i","ar","Dashboard","showData","accountDetailValue","accounts_details","currency","tableHeader","details","dateTime","fromAccounts","fromSymbol","toAccounts","toSymbol","fromOpenOrderInfos","toOpenOrderInfos","totalTo","blockloader","autoClose","loading","filteredInfoTime","contract_size","json","legend","fromsum1","tosum1","sumOfTotal1","lg","xs","toFixed","margin_currency","timerWait","Innerlogin","handlePageClick","page","fectheAllAccount","changeServer","is_server","checkUserConnected","broker","connected","currentAddLogin","currentAddBroker","currentAddAlias","clearInterval","timerShow","setIntervalCustom","content","innerHTML","closebtn","swal","timer","button","handleCloseEdit","editForm","handleCloseDetail","detailForm","createTr","scope","launched","viewFilter","editFilter","deleteFilter","onUpdate","count","pages","re","test","text","user","edituser","editserver","editalias","editpass","deleteData","showDelete","editData","editstatus","Modal","Body","closeButton","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","deletepopupClick","deletepopupclose","editPass","editAlias","FilterEdite","l","rules","required","abc","from_symbol","to_symbol","all_from_symbols","all_to_symbols","class","moment","FilterDetail","showMagicNumberFrom","showTicketFrom","showTicketTo","showMagicNumberComm","frm_ticket","frm_magic","to_magic","format","flexWrap","justifyContent","Filterprofile","showInnerfilter","createWariningNotification","showEdit","editeData","newDate","filterData","user_status","activateClick","deactivateClick","detailData","DatatablePage","columns","field","sort","swap_long","Number","parseFloat","swap_short","responsive","bordered","small","Swap","dailySwap","setdailySwap","setloading","setStartDate","setEndDate","account","setAccount","setSymbol","act","setAct","sym","setSym","newResult","setResult","filterResult","setFilterResult","filtered","setFiltered","setdateTime","setactiveProfileName","useEffect","dateFilter","method","sd","ed","result","d","time","isSameOrAfter","isSameOrBefore","loginData","paramsact","account_login","String","symbolData","paramssym","Container","AccountSelect","SymbolSelect","Label","selectsStart","selectsEnd","minDate","dataTOtalcloseFrom","comissionTotal","lotsTotal","profitTotal","swapTotal","dataTotalClosetTo","dataTOtalOpenTo","dataTOtalOpenFrom","ContractSize","_isMounted","uniqueSymbols","sumOfHistoryTotal","openfromsum","opentosum","sumOfOpenTotal","isNaN","parseInt","Fragment","Statistics","UserDetail","filter_profile","loggedIn","profiles","allFilterprofiles","matches","selectedProfiles","UserEdit","handleChangeFilterProfile","renderProfileSelect","loggged_in","allChecked","filterdata","remove_filterdata","selectedVal","includes","list","forEach","handleusername","readOnly","AddUser","all","fetchusersdata","userValues","handlepassword","Users","showaddUser","addUser","editUser","usersData","viewUser","deleteUser","dashboardRoutes","component","isOpen","setIsOpen","setIsOpen2","setIsOpen3","errormassage","setIErrormassage","isOpen3","fromAccountId","setFromAccountId","toAccountId","setToAccountId","fromOpenTrade","setFromOpenTrade","toOpenTrade","setToOpenTrade","fromHistoryTrade","setFromHistoryTrade","toHistoryTrade","setToHistoryTrade","setCommissionDetails","openTotal","setopenTotal","historyTotal","sethistoryTotal","commissionValue","setCommissionValue","setcustomSwap","setLoading","setallHistoryRecord","mounted","totalOfOpenOrder","customSwapTable","totalOfHistoryOrder","newCommissionRecord","fromclosedata","fromopendata","toclosedata","toopendata","newData","b","open_time","split","reverse","newopenData","newcloseData","totalOpen","reduce","totalClose","totalfromCloseSwap","totalfromOpenSwap","totalfromCloseCommission","totalfromOpenCommission","totaltoCloseSwap","totaltoOpenSwap","totaltoCloseCommission","totaltoOpenCommission","overflowX","last_price","utc","account_id","open_price","close_price","colSpan","fromOpenTradeTr","toOpenTradeTr","overflowY","close_time","fromHistoryTradeTr","toHistoryTradeTr","totalProfit","equity","Admin","getRoutes","routeArray","render","handleClick","handleNotificationClick","getBrandText","handleImageClick","handleColorClick","handleHasImage","handleFixedClick","fixedClasses","_notificationSystem","timeout","userLoggedIn","isTimedOut","idleTimer","onAction","_onAction","onActive","_onActive","onIdle","_onIdle","handleLogout","reset","action","ref","element","debounce","AdminNavbar","ReactDOM","exact","innerfilter","getElementById"],"mappings":"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,kBACA,aACA,mBACA,aACA,cACA,eACA,qBACA,iBACA,cACA,cACA,eACA,kBACA,eACA,iBACA,eACA,cACA,YACA,eACA,aACA,qBACA,aACA,cACA,kBACA,uBACA,YACA,qBACA,WACA,iBACA,mBACA,wBACA,cACA,oBACA,eACA,2BACA,cACA,mBACA,oBACA,0BACA,iBACA,mBACA,eACA,0BACA,iBACA,eACA,aACA,gBACA,gBACA,kBACA,cACA,aACA,eACA,eACA,iBACA,cACA,cACA,cACA,eACA,eACA,YACA,cACA,kBACA,aACA,gBACA,eACA,gBACA,gBACA,cACA,eACA,eACA,aACA,gBACA,aACA,eACA,eACA,gBACA,iBACA,sBACA,kBACA,cACA,cACA,cACA,gBACA,aACA,aACA,cACA,cACA,kBACA,cACA,aACA,mBACA,aACA,YACA,cACA,YACA,sBACA,YACA,cACA,aACA,YACA,oBACA,oBACA,oBACA,cACA,qBACA,iBACA,aACA,aACA,mBACA,kBACA,cACA,cACA,aACA,aACA,gBACA,cACA,aACA,YACA,mBACA,aACA,kBACA,uBACA,eACA,aACA,aACA,aACA,gBACA,aACA,aACA,cACA,aACA,eACA,aACA,aACA,aACA,cACA,cACA,eACA,eACA,eACA,cACA,eACA,cACA,gBACA,aACA,eACA,aACA,eACA,aACA,gBACA,gBACA,aACA,aACA,eACA,iBACA,iBACA,iBACA,iBACA,aACA,YACA,gBACA,aACA,eACA,kBACA,eACA,gBACA,gBACA,eACA,cACA,cACA,cACA,aACA,aACA,eACA,aACA,mBACA,gBACA,aACA,aACA,kBACA,gBACA,aACA,gBACA,aACA,aACA,kBACA,eACA,eACA,cACA,iBAwHAC,QA/GY,CACZC,OAAQ,CAAC,MAAO,MAAO,OACvBC,OAAQ,CAAC,GAAI,GAAI,KA8GjBC,UA5Gc,CACdC,MAAO,CAAC,OAAQ,SAAU,eAC1BC,MAAO,CAAC,OAAQ,SAAU,YA2G1BC,UAvGc,CACdL,OAAQ,CACN,SACA,UACA,SACA,SACA,SACA,UA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","file":"static/js/main.cfc07f6c.chunk.js","sourcesContent":["/*!\r\n\r\n=========================================================\r\n* Light Bootstrap Dashboard React - v1.3.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\n//\r\n// //\r\n// // // For notifications\r\n// //\r\n//\r\nvar defaultWidth =\r\n  window.screen.width > 768\r\n    ? (window.screen.width * 1) / 3\r\n    : window.screen.width;\r\n\r\nvar style = {\r\n  Wrapper: {},\r\n  Containers: {\r\n    DefaultStyle: {\r\n      position: \"fixed\",\r\n      width: defaultWidth,\r\n      padding: \"10px 10px 10px 20px\",\r\n      zIndex: 9998,\r\n      WebkitBoxSizing: \"\",\r\n      MozBoxSizing: \"\",\r\n      boxSizing: \"\",\r\n      height: \"auto\",\r\n      display: \"inline-block\",\r\n      border: \"0\",\r\n      fontSize: \"14px\",\r\n      WebkitFontSmoothing: \"antialiased\",\r\n      fontFamily: '\"Roboto\",\"Helvetica Neue\",Arial,sans-serif',\r\n      fontWeight: \"400\",\r\n      color: \"#FFFFFF\"\r\n    },\r\n\r\n    tl: {\r\n      top: \"0px\",\r\n      bottom: \"auto\",\r\n      left: \"0px\",\r\n      right: \"auto\"\r\n    },\r\n\r\n    tr: {\r\n      top: \"0px\",\r\n      bottom: \"auto\",\r\n      left: \"auto\",\r\n      right: \"0px\"\r\n    },\r\n\r\n    tc: {\r\n      top: \"0px\",\r\n      bottom: \"auto\",\r\n      margin: \"0 auto\",\r\n      left: \"50%\",\r\n      marginLeft: -(defaultWidth / 2)\r\n    },\r\n\r\n    bl: {\r\n      top: \"auto\",\r\n      bottom: \"0px\",\r\n      left: \"0px\",\r\n      right: \"auto\"\r\n    },\r\n\r\n    br: {\r\n      top: \"auto\",\r\n      bottom: \"0px\",\r\n      left: \"auto\",\r\n      right: \"0px\"\r\n    },\r\n\r\n    bc: {\r\n      top: \"auto\",\r\n      bottom: \"0px\",\r\n      margin: \"0 auto\",\r\n      left: \"50%\",\r\n      marginLeft: -(defaultWidth / 2)\r\n    }\r\n  },\r\n\r\n  NotificationItem: {\r\n    DefaultStyle: {\r\n      position: \"relative\",\r\n      width: \"100%\",\r\n      cursor: \"pointer\",\r\n      borderRadius: \"4px\",\r\n      fontSize: \"14px\",\r\n      margin: \"10px 0 0\",\r\n      padding: \"10px\",\r\n      display: \"block\",\r\n      WebkitBoxSizing: \"border-box\",\r\n      MozBoxSizing: \"border-box\",\r\n      boxSizing: \"border-box\",\r\n      opacity: 0,\r\n      transition: \"all 0.5s ease-in-out\",\r\n      WebkitTransform: \"translate3d(0, 0, 0)\",\r\n      transform: \"translate3d(0, 0, 0)\",\r\n      willChange: \"transform, opacity\",\r\n\r\n      isHidden: {\r\n        opacity: 0\r\n      },\r\n\r\n      isVisible: {\r\n        opacity: 1\r\n      }\r\n    },\r\n\r\n    success: {\r\n      borderTop: 0,\r\n      backgroundColor: \"#a1e82c\",\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0\r\n    },\r\n\r\n    error: {\r\n      borderTop: 0,\r\n      backgroundColor: \"#fc727a\",\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0\r\n    },\r\n\r\n    warning: {\r\n      borderTop: 0,\r\n      backgroundColor: \"#ffbc67\",\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0\r\n    },\r\n\r\n    info: {\r\n      borderTop: 0,\r\n      backgroundColor: \"#63d8f1\",\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0\r\n    }\r\n  },\r\n\r\n  Title: {\r\n    DefaultStyle: {\r\n      fontSize: \"30px\",\r\n      margin: \"0\",\r\n      padding: 0,\r\n      fontWeight: \"bold\",\r\n      color: \"#FFFFFF\",\r\n      display: \"block\",\r\n      left: \"15px\",\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      marginTop: \"-15px\"\r\n    }\r\n  },\r\n\r\n  MessageWrapper: {\r\n    DefaultStyle: {\r\n      marginLeft: \"55px\",\r\n      marginRight: \"30px\",\r\n      padding: \"0 12px 0 0\",\r\n      color: \"#FFFFFF\",\r\n      maxWidthwidth: \"89%\"\r\n    }\r\n  },\r\n\r\n  Dismiss: {\r\n    DefaultStyle: {\r\n      fontFamily: \"inherit\",\r\n      fontSize: \"21px\",\r\n      color: \"#000\",\r\n      float: \"right\",\r\n      position: \"absolute\",\r\n      right: \"10px\",\r\n      top: \"50%\",\r\n      marginTop: \"-13px\",\r\n      backgroundColor: \"#FFFFFF\",\r\n      display: \"block\",\r\n      borderRadius: \"50%\",\r\n      opacity: \".4\",\r\n      lineHeight: \"11px\",\r\n      width: \"25px\",\r\n      height: \"25px\",\r\n      outline: \"0 !important\",\r\n      textAlign: \"center\",\r\n      padding: \"6px 3px 3px 3px\",\r\n      fontWeight: \"300\",\r\n      marginLeft: \"65px\"\r\n    },\r\n\r\n    success: {\r\n      // color: '#f0f5ea',\r\n      // backgroundColor: '#a1e82c'\r\n    },\r\n\r\n    error: {\r\n      // color: '#f4e9e9',\r\n      // backgroundColor: '#fc727a'\r\n    },\r\n\r\n    warning: {\r\n      // color: '#f9f6f0',\r\n      // backgroundColor: '#ffbc67'\r\n    },\r\n\r\n    info: {\r\n      // color: '#e8f0f4',\r\n      // backgroundColor: '#63d8f1'\r\n    }\r\n  },\r\n\r\n  Action: {\r\n    DefaultStyle: {\r\n      background: \"#ffffff\",\r\n      borderRadius: \"2px\",\r\n      padding: \"6px 20px\",\r\n      fontWeight: \"bold\",\r\n      margin: \"10px 0 0 0\",\r\n      border: 0\r\n    },\r\n\r\n    success: {\r\n      backgroundColor: \"#a1e82c\",\r\n      color: \"#ffffff\"\r\n    },\r\n\r\n    error: {\r\n      backgroundColor: \"#fc727a\",\r\n      color: \"#ffffff\"\r\n    },\r\n\r\n    warning: {\r\n      backgroundColor: \"#ffbc67\",\r\n      color: \"#ffffff\"\r\n    },\r\n\r\n    info: {\r\n      backgroundColor: \"#63d8f1\",\r\n      color: \"#ffffff\"\r\n    }\r\n  },\r\n\r\n  ActionWrapper: {\r\n    DefaultStyle: {\r\n      margin: 0,\r\n      padding: 0\r\n    }\r\n  }\r\n};\r\n\r\n//\r\n// //\r\n// // // For tables\r\n// //\r\n//\r\nconst thArray = [\"ID\", \"Name\", \"Salary\", \"Country\", \"City\"];\r\nconst tdArray = [\r\n  [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\", \"Oud-Turnhout\"],\r\n  [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\", \"Sinaai-Waas\"],\r\n  [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\", \"Baileux\"],\r\n  [\"4\", \"Philip Chaney\", \"$38,735\", \"Korea, South\", \"Overland Park\"],\r\n  [\"5\", \"Doris Greene\", \"$63,542\", \"Malawi\", \"Feldkirchen in Kärnten\"],\r\n  [\"6\", \"Mason Porter\", \"$78,615\", \"Chile\", \"Gloucester\"]\r\n];\r\n\r\n//\r\n// //\r\n// // // For icons\r\n// //\r\n//\r\nconst iconsArray = [\r\n  \"pe-7s-album\",\r\n  \"pe-7s-arc\",\r\n  \"pe-7s-back-2\",\r\n  \"pe-7s-bandaid\",\r\n  \"pe-7s-car\",\r\n  \"pe-7s-diamond\",\r\n  \"pe-7s-door-lock\",\r\n  \"pe-7s-eyedropper\",\r\n  \"pe-7s-female\",\r\n  \"pe-7s-gym\",\r\n  \"pe-7s-hammer\",\r\n  \"pe-7s-headphones\",\r\n  \"pe-7s-helm\",\r\n  \"pe-7s-hourglass\",\r\n  \"pe-7s-leaf\",\r\n  \"pe-7s-magic-wand\",\r\n  \"pe-7s-male\",\r\n  \"pe-7s-map-2\",\r\n  \"pe-7s-next-2\",\r\n  \"pe-7s-paint-bucket\",\r\n  \"pe-7s-pendrive\",\r\n  \"pe-7s-photo\",\r\n  \"pe-7s-piggy\",\r\n  \"pe-7s-plugin\",\r\n  \"pe-7s-refresh-2\",\r\n  \"pe-7s-rocket\",\r\n  \"pe-7s-settings\",\r\n  \"pe-7s-shield\",\r\n  \"pe-7s-smile\",\r\n  \"pe-7s-usb\",\r\n  \"pe-7s-vector\",\r\n  \"pe-7s-wine\",\r\n  \"pe-7s-cloud-upload\",\r\n  \"pe-7s-cash\",\r\n  \"pe-7s-close\",\r\n  \"pe-7s-bluetooth\",\r\n  \"pe-7s-cloud-download\",\r\n  \"pe-7s-way\",\r\n  \"pe-7s-close-circle\",\r\n  \"pe-7s-id\",\r\n  \"pe-7s-angle-up\",\r\n  \"pe-7s-wristwatch\",\r\n  \"pe-7s-angle-up-circle\",\r\n  \"pe-7s-world\",\r\n  \"pe-7s-angle-right\",\r\n  \"pe-7s-volume\",\r\n  \"pe-7s-angle-right-circle\",\r\n  \"pe-7s-users\",\r\n  \"pe-7s-angle-left\",\r\n  \"pe-7s-user-female\",\r\n  \"pe-7s-angle-left-circle\",\r\n  \"pe-7s-up-arrow\",\r\n  \"pe-7s-angle-down\",\r\n  \"pe-7s-switch\",\r\n  \"pe-7s-angle-down-circle\",\r\n  \"pe-7s-scissors\",\r\n  \"pe-7s-wallet\",\r\n  \"pe-7s-safe\",\r\n  \"pe-7s-volume2\",\r\n  \"pe-7s-volume1\",\r\n  \"pe-7s-voicemail\",\r\n  \"pe-7s-video\",\r\n  \"pe-7s-user\",\r\n  \"pe-7s-upload\",\r\n  \"pe-7s-unlock\",\r\n  \"pe-7s-umbrella\",\r\n  \"pe-7s-trash\",\r\n  \"pe-7s-tools\",\r\n  \"pe-7s-timer\",\r\n  \"pe-7s-ticket\",\r\n  \"pe-7s-target\",\r\n  \"pe-7s-sun\",\r\n  \"pe-7s-study\",\r\n  \"pe-7s-stopwatch\",\r\n  \"pe-7s-star\",\r\n  \"pe-7s-speaker\",\r\n  \"pe-7s-signal\",\r\n  \"pe-7s-shuffle\",\r\n  \"pe-7s-shopbag\",\r\n  \"pe-7s-share\",\r\n  \"pe-7s-server\",\r\n  \"pe-7s-search\",\r\n  \"pe-7s-film\",\r\n  \"pe-7s-science\",\r\n  \"pe-7s-disk\",\r\n  \"pe-7s-ribbon\",\r\n  \"pe-7s-repeat\",\r\n  \"pe-7s-refresh\",\r\n  \"pe-7s-add-user\",\r\n  \"pe-7s-refresh-cloud\",\r\n  \"pe-7s-paperclip\",\r\n  \"pe-7s-radio\",\r\n  \"pe-7s-note2\",\r\n  \"pe-7s-print\",\r\n  \"pe-7s-network\",\r\n  \"pe-7s-prev\",\r\n  \"pe-7s-mute\",\r\n  \"pe-7s-power\",\r\n  \"pe-7s-medal\",\r\n  \"pe-7s-portfolio\",\r\n  \"pe-7s-like2\",\r\n  \"pe-7s-plus\",\r\n  \"pe-7s-left-arrow\",\r\n  \"pe-7s-play\",\r\n  \"pe-7s-key\",\r\n  \"pe-7s-plane\",\r\n  \"pe-7s-joy\",\r\n  \"pe-7s-photo-gallery\",\r\n  \"pe-7s-pin\",\r\n  \"pe-7s-phone\",\r\n  \"pe-7s-plug\",\r\n  \"pe-7s-pen\",\r\n  \"pe-7s-right-arrow\",\r\n  \"pe-7s-paper-plane\",\r\n  \"pe-7s-delete-user\",\r\n  \"pe-7s-paint\",\r\n  \"pe-7s-bottom-arrow\",\r\n  \"pe-7s-notebook\",\r\n  \"pe-7s-note\",\r\n  \"pe-7s-next\",\r\n  \"pe-7s-news-paper\",\r\n  \"pe-7s-musiclist\",\r\n  \"pe-7s-music\",\r\n  \"pe-7s-mouse\",\r\n  \"pe-7s-more\",\r\n  \"pe-7s-moon\",\r\n  \"pe-7s-monitor\",\r\n  \"pe-7s-micro\",\r\n  \"pe-7s-menu\",\r\n  \"pe-7s-map\",\r\n  \"pe-7s-map-marker\",\r\n  \"pe-7s-mail\",\r\n  \"pe-7s-mail-open\",\r\n  \"pe-7s-mail-open-file\",\r\n  \"pe-7s-magnet\",\r\n  \"pe-7s-loop\",\r\n  \"pe-7s-look\",\r\n  \"pe-7s-lock\",\r\n  \"pe-7s-lintern\",\r\n  \"pe-7s-link\",\r\n  \"pe-7s-like\",\r\n  \"pe-7s-light\",\r\n  \"pe-7s-less\",\r\n  \"pe-7s-keypad\",\r\n  \"pe-7s-junk\",\r\n  \"pe-7s-info\",\r\n  \"pe-7s-home\",\r\n  \"pe-7s-help2\",\r\n  \"pe-7s-help1\",\r\n  \"pe-7s-graph3\",\r\n  \"pe-7s-graph2\",\r\n  \"pe-7s-graph1\",\r\n  \"pe-7s-graph\",\r\n  \"pe-7s-global\",\r\n  \"pe-7s-gleam\",\r\n  \"pe-7s-glasses\",\r\n  \"pe-7s-gift\",\r\n  \"pe-7s-folder\",\r\n  \"pe-7s-flag\",\r\n  \"pe-7s-filter\",\r\n  \"pe-7s-file\",\r\n  \"pe-7s-expand1\",\r\n  \"pe-7s-exapnd2\",\r\n  \"pe-7s-edit\",\r\n  \"pe-7s-drop\",\r\n  \"pe-7s-drawer\",\r\n  \"pe-7s-download\",\r\n  \"pe-7s-display2\",\r\n  \"pe-7s-display1\",\r\n  \"pe-7s-diskette\",\r\n  \"pe-7s-date\",\r\n  \"pe-7s-cup\",\r\n  \"pe-7s-culture\",\r\n  \"pe-7s-crop\",\r\n  \"pe-7s-credit\",\r\n  \"pe-7s-copy-file\",\r\n  \"pe-7s-config\",\r\n  \"pe-7s-compass\",\r\n  \"pe-7s-comment\",\r\n  \"pe-7s-coffee\",\r\n  \"pe-7s-cloud\",\r\n  \"pe-7s-clock\",\r\n  \"pe-7s-check\",\r\n  \"pe-7s-chat\",\r\n  \"pe-7s-cart\",\r\n  \"pe-7s-camera\",\r\n  \"pe-7s-call\",\r\n  \"pe-7s-calculator\",\r\n  \"pe-7s-browser\",\r\n  \"pe-7s-box2\",\r\n  \"pe-7s-box1\",\r\n  \"pe-7s-bookmarks\",\r\n  \"pe-7s-bicycle\",\r\n  \"pe-7s-bell\",\r\n  \"pe-7s-battery\",\r\n  \"pe-7s-ball\",\r\n  \"pe-7s-back\",\r\n  \"pe-7s-attention\",\r\n  \"pe-7s-anchor\",\r\n  \"pe-7s-albums\",\r\n  \"pe-7s-alarm\",\r\n  \"pe-7s-airplay\"\r\n];\r\n\r\n//\r\n// //\r\n// // // // For dashboard's charts\r\n// //\r\n//\r\n// Data for Pie Chart\r\nvar dataPie = {\r\n  labels: [\"40%\", \"20%\", \"40%\"],\r\n  series: [40, 20, 40]\r\n};\r\nvar legendPie = {\r\n  names: [\"Open\", \"Bounce\", \"Unsubscribe\"],\r\n  types: [\"info\", \"danger\", \"warning\"]\r\n};\r\n\r\n// Data for Line Chart\r\nvar dataSales = {\r\n  labels: [\r\n    \"9:00AM\",\r\n    \"12:00AM\",\r\n    \"3:00PM\",\r\n    \"6:00PM\",\r\n    \"9:00PM\",\r\n    \"12:00PM\",\r\n    \"3:00AM\",\r\n    \"6:00AM\"\r\n  ],\r\n  series: [\r\n    [287, 385, 490, 492, 554, 586, 698, 695],\r\n    [67, 152, 143, 240, 287, 335, 435, 437],\r\n    [23, 113, 67, 108, 190, 239, 307, 308]\r\n  ]\r\n};\r\nvar optionsSales = {\r\n  low: 0,\r\n  high: 800,\r\n  showArea: false,\r\n  height: \"245px\",\r\n  axisX: {\r\n    showGrid: false\r\n  },\r\n  lineSmooth: true,\r\n  showLine: true,\r\n  showPoint: true,\r\n  fullWidth: true,\r\n  chartPadding: {\r\n    right: 50\r\n  }\r\n};\r\nvar responsiveSales = [\r\n  [\r\n    \"screen and (max-width: 640px)\",\r\n    {\r\n      axisX: {\r\n        labelInterpolationFnc: function(value) {\r\n          return value[0];\r\n        }\r\n      }\r\n    }\r\n  ]\r\n];\r\nvar legendSales = {\r\n  names: [\"Open\", \"Click\", \"Click Second Time\"],\r\n  types: [\"info\", \"danger\", \"warning\"]\r\n};\r\n\r\n// Data for Bar Chart\r\nvar dataBar = {\r\n  labels: [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"Mai\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n  ],\r\n  series: [\r\n    [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895],\r\n    [412, 243, 280, 580, 453, 353, 300, 364, 368, 410, 636, 695]\r\n  ]\r\n};\r\nvar optionsBar = {\r\n  seriesBarDistance: 10,\r\n  axisX: {\r\n    showGrid: false\r\n  },\r\n  height: \"245px\"\r\n};\r\nvar responsiveBar = [\r\n  [\r\n    \"screen and (max-width: 640px)\",\r\n    {\r\n      seriesBarDistance: 5,\r\n      axisX: {\r\n        labelInterpolationFnc: function(value) {\r\n          return value[0];\r\n        }\r\n      }\r\n    }\r\n  ]\r\n];\r\nvar legendBar = {\r\n  names: [\"Tesla Model S\", \"BMW 5 Series\"],\r\n  types: [\"info\", \"danger\"]\r\n};\r\n\r\nmodule.exports = {\r\n  style, // For notifications (App container and Notifications view)\r\n  thArray,\r\n  tdArray, // For tables (TableList view)\r\n  iconsArray, // For icons (Icons view)\r\n  dataPie,\r\n  legendPie,\r\n  dataSales,\r\n  optionsSales,\r\n  responsiveSales,\r\n  legendSales,\r\n  dataBar,\r\n  optionsBar,\r\n  responsiveBar,\r\n  legendBar // For charts (Dashboard view)\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/sidebar-3.34535b95.jpg\";","const config= {\r\n    baseurl:(process.env.NODE_ENV==\"development\") ? \"http://localhost:4000/api\": \"https://top4.trade/api\"\r\n}\r\n\r\nexport default config;","import React, { Component } from \"react\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport config from \"../../constant/config.js\";\r\nimport Select from \"react-select\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport { times } from \"chartist\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\nimport ReactTooltip from 'react-tooltip';\r\nconst axios = require(\"axios\");\r\n\r\nclass Innerfilter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedAccountOption: null,\r\n      selectedSymbolOption: null,\r\n      selectedSymbolOptionTo: null,\r\n      selectedAccountOptionTo: null,\r\n      selectedCommissionAccount: null,\r\n      startDate: null,\r\n      endDate: null,\r\n      startDateTo: null,\r\n      endDateTo: null,\r\n      startDateComm: null,\r\n      endDateComm: null,\r\n      comm_magicNumber: [],\r\n      excludeComm: false,\r\n      includeComm: false,\r\n      allAccounts: [],\r\n      allSymbols: [],\r\n      profileName: \"\",\r\n      error: \"\",\r\n      showCommisoin: false,\r\n      showAddCommission: false,\r\n      autoSyncClose: false,\r\n      profileValues: [],\r\n      nameError: false,\r\n      magicNumber: [],\r\n      magicNumberTo: [],\r\n      showMagicNumber: false,\r\n      showMagicNumberTo: false,\r\n      tags: [],\r\n      include_exclude_status: \"\",\r\n      exclude: false,\r\n      include: false,\r\n      excludeTo: false,\r\n      includeTo: false,\r\n      ticket: [],\r\n      ticketTo: [],\r\n      excludeTicket: false,\r\n      includeTicket: false,\r\n      excludeTicketTo: false,\r\n      includeTicketTo: false,\r\n\r\n      // options: [{ name: 'Srigar', id: 1 }, { name: 'Sam', id: 2 }],\r\n\r\n      // plainArray: [\"Option 1\", \"Option 2\", \"Option 3\", \"Option 4\", \"Option 5\"],\r\n      // objectArray: [\r\n      //     { key: \"Option 1\", cat: \"Group 1\" },\r\n      //     { key: \"Option 2\", cat: \"Group 1\" },\r\n      //     { key: \"Option 3\", cat: \"Group 1\" },\r\n      //     { key: \"Option 4\", cat: \"Group 2\" },\r\n      //     { key: \"Option 5\", cat: \"Group 2\" },\r\n      //     { key: \"Option 6\", cat: \"Group 2\" },\r\n      //     { key: \"Option 7\", cat: \"Group 2\" }\r\n      // ],\r\n      // selectedValues: [\r\n      //     { key: \"Option 1\", cat: \"Group 1\" },\r\n      //     { key: \"Option 2\", cat: \"Group 1\" }\r\n      // ]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getSymbolInfo();\r\n    this.fetchfilterdata();\r\n  }\r\n  getSymbolInfo = () => {\r\n    let self = this;\r\n    axios\r\n      .get(config.baseurl + \"/accounts/fetchAllAccounts\")\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          self.setState({ allAccounts: response.data.rows });\r\n        }\r\n      });\r\n    axios\r\n      .get(config.baseurl + \"/accounts/fetchAllSymbol\")\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          self.setState({ allSymbols: response.data.rows });\r\n        }\r\n      });\r\n  };\r\n  // addItem = () => {\r\n  //     this.selectedValues.push({ key: \"Option 3\", cat: \"Group 1\" });\r\n  // }\r\n  handleDropdownChange = (e) => {\r\n    this.setState({ selectValue: e.target.value });\r\n  };\r\n  handleChangeDate = (date) => {\r\n    this.setState({\r\n      startDate: date,\r\n    });\r\n  };\r\n  handleChangeDateComm = (date) => {\r\n    this.setState({\r\n      startDateComm: date,\r\n    });\r\n  };\r\n\r\n  handleEndDate = (date) => {\r\n    if (date < this.state.startDate && date != null) {\r\n      this.setState({ error: \"enddate\", endDate: \"\" });\r\n      return;\r\n    }\r\n    this.setState({\r\n      error: \"\",\r\n      endDate: date,\r\n    });\r\n  };\r\n  handleChangeDateTo = (date) => {\r\n    this.setState({\r\n      startDateTo: date,\r\n      error: \"\",\r\n    });\r\n  };\r\n  handleEndDateComm = (date) => {\r\n    if (date < this.state.startDateComm && date != null) {\r\n      this.setState({ error: \"enddatecomm\", endDateComm: \"\" });\r\n      return;\r\n    }\r\n    this.setState({\r\n      error: \"\",\r\n      endDateComm: date,\r\n    });\r\n  };\r\n  handleEndDateTo = (date) => {\r\n    if (date < this.state.startDateTo && date != null) {\r\n      this.setState({ error: \"enddateto\", endDateTo: \"\" });\r\n      return;\r\n    }\r\n    this.setState({\r\n      error: \"\",\r\n      endDateTo: date,\r\n    });\r\n  };\r\n  handleChange = (event) => {\r\n    //this.setState({value: event.option});\r\n    this.setState({\r\n      value: Array.from(event.target.selectedOptions, (item) => item.value),\r\n    });\r\n  };\r\n  renderAccountSelect = () => {\r\n    const { selectedAccountOption, allAccounts } = this.state;\r\n    let Data = {\r\n      account: selectedAccountOption,\r\n    };\r\n    // axios.post(config.baseurl + '/filter/fetchSymbolData', Data)\r\n    //     .then(function (response) {\r\n    //         if (response.status == 200) {\r\n    //             this.props.onHide()\r\n    //         }\r\n    //     })\r\n    //     .catch(function (error) {\r\n    //     });\r\n\r\n    let options = allAccounts.map((data) => {\r\n      return { value: data.id, label: data.login };\r\n    });\r\n    return (\r\n      <Select\r\n        placeholder=\"Select Account\"\r\n        value={selectedAccountOption}\r\n        onChange={this.handleChangeAccount}\r\n        options={options}\r\n      />\r\n    );\r\n  };\r\n  handeChangeShowCommission = (e) => {\r\n    this.setState({ showCommission: true }, () => {\r\n      this.setState({ showAddCommission: !this.state.showAddCommission });\r\n    });\r\n  };\r\n  handleChangeAccountTo = (selectedAccountOptionTo) => {\r\n    this.setState({ selectedAccountOptionTo, error: \"\" });\r\n  };\r\n  renderAccountSelectTo = () => {\r\n    const { selectedAccountOptionTo, allAccounts } = this.state;\r\n\r\n    let options = allAccounts.map((data) => {\r\n      return { value: data.id, label: data.login };\r\n    });\r\n    return (\r\n      <Select\r\n        placeholder=\"Select Account\"\r\n        value={selectedAccountOptionTo}\r\n        onChange={this.handleChangeAccountTo}\r\n        options={options}\r\n      />\r\n    );\r\n  };\r\n  handleChangeCommissionAccount = (selectedCommissionAccount) => {\r\n    this.setState({ selectedCommissionAccount });\r\n  };\r\n  renderCommissionAccount = () => {\r\n    const { selectedCommissionAccount, allAccounts } = this.state;\r\n\r\n    let options = allAccounts.map((data) => {\r\n      return { value: data.id, label: data.login };\r\n    });\r\n    return (\r\n      <Select\r\n        placeholder=\"Select Account\"\r\n        value={selectedCommissionAccount}\r\n        onChange={this.handleChangeCommissionAccount}\r\n        options={options}\r\n      />\r\n    );\r\n  };\r\n  handleChangeMagicNumber = (magicNumber) => {\r\n    this.setState({ magicNumber });\r\n  };\r\n  handleChangeMagicNumberTo = (magicNumberTo) => {\r\n    this.setState({ magicNumberTo });\r\n  };\r\n  handleChangeMagicNumberComm = (comm_magicNumber) => {\r\n    this.setState({ comm_magicNumber });\r\n  };\r\n  handleChangeTicket = (ticket) => {\r\n    this.setState({ ticket });\r\n  };\r\n  handleChangeTicketTo = (ticketTo) => {\r\n    this.setState({ ticketTo });\r\n  };\r\n\r\n  handleChangeAccount = (selectedAccountOption) => {\r\n    this.setState({ selectedAccountOption });\r\n  };\r\n  handleChangeSymbol = (selectedSymbolOption) => {\r\n    this.setState({ selectedSymbolOption });\r\n  };\r\n  renderSymbolSelect = () => {\r\n    const { selectedSymbolOption, allSymbols } = this.state;\r\n    // console.log(selectedSymbolOption, allSymbols, \"selectedSymbolOption, allSymbols--------->\")\r\n    let options = allSymbols.map((data) => {\r\n      return { value: data.name, label: data.name };\r\n    });\r\n    return (\r\n      <Select\r\n        placeholder=\"Select Symbol\"\r\n        value={selectedSymbolOption}\r\n        isMulti\r\n        onChange={this.handleChangeSymbol}\r\n        options={options}\r\n      />\r\n    );\r\n  };\r\n  handleChangeSymbolTo = (selectedSymbolOptionTo) => {\r\n    this.setState({ selectedSymbolOptionTo });\r\n  };\r\n  renderSymbolSelectTo = () => {\r\n    const { selectedSymbolOptionTo, allSymbols } = this.state;\r\n    let options = allSymbols.map((data) => {\r\n      return { value: data.name, label: data.name };\r\n    });\r\n\r\n    return (\r\n      <Select\r\n        placeholder=\"Select Symbol...\"\r\n        value={selectedSymbolOptionTo}\r\n        isMulti\r\n        onChange={this.handleChangeSymbolTo}\r\n        options={options}\r\n      />\r\n    );\r\n  };\r\n  fetchfilterdata() {\r\n    let self = this;\r\n    let token = JSON.parse(localStorage.getItem(\"accessToken\"));\r\n    axios\r\n      .get(config.baseurl + \"/filter/fetchfilterdata?page=1\", { headers: { 'x-access-token': token } })\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          self.setState({ profileValues: response.data.rows });\r\n        }\r\n      });\r\n  }\r\n\r\n  handleprofileName(e) {\r\n    this.setState({ nameError: false });\r\n    if (this.state.profileValues.length <= 0) {\r\n      this.setState({\r\n        profileName:\r\n          e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1),\r\n        error: \"\",\r\n      });\r\n    } else {\r\n      this.state.profileValues.filter((data) => {\r\n        if (data.profile_name.toUpperCase() !== e.target.value.toUpperCase()) {\r\n          this.setState({\r\n            profileName: e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1),\r\n            error: \"\",\r\n          });\r\n        } else {\r\n          this.setState({ nameError: true }, () => { });\r\n          NotificationManager.listNotify = [];\r\n          NotificationManager.error(\"Profile already exits!\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n  // handlemagicNumber(e){\r\n  //     this.setState({ magicNumber: e.target.value})\r\n  // }\r\n\r\n  // handlemagicNumberTo(e){\r\n  //     this.setState({ magicNumberTo: e.target.value})\r\n  // }\r\n\r\n  formDataSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    let from_status =\r\n      this.state.include === true && this.state.exclude === false\r\n        ? 1\r\n        : this.state.exclude === true && this.state.include === false\r\n          ? 2\r\n          : 0;\r\nlet comm_status =\r\n      this.state.includeComm === true && this.state.excludeComm === false\r\n        ? 1\r\n        : this.state.excludeComm === true && this.state.includeComm === false\r\n          ? 2\r\n          : 0;\r\n    let to_status =\r\n      this.state.includeTo === true && this.state.excludeTo === false\r\n        ? 1\r\n        : this.state.excludeTo === true && this.state.includeTo === false\r\n          ? 2\r\n          : 0;\r\n\r\n    let from_status_ticket =\r\n      this.state.includeTicket === true && this.state.excludeTicket === false\r\n        ? 1\r\n        : this.state.excludeTicket === true &&\r\n          this.state.includeTicket === false\r\n          ? 2\r\n          : 0;\r\n\r\n    let to_status_ticket =\r\n      this.state.includeTicketTo === true &&\r\n        this.state.excludeTicketTo === false\r\n        ? 1\r\n        : this.state.excludeTicketTo === true &&\r\n          this.state.includeTicketTo === false\r\n          ? 2\r\n          : 0;\r\n\r\n    let self = this;\r\n\r\n    if (this.state.profileName == null || this.state.profileName == \"\") {\r\n      NotificationManager.listNotify = [];\r\n      NotificationManager.error(\"Profile name is required !\");\r\n      return;\r\n    } else if (\r\n      this.state.selectedAccountOption == null ||\r\n      this.state.selectedAccountOption == \"\"\r\n    ) {\r\n      this.setState({ error: \"accountoption\" });\r\n      return;\r\n    } else if (\r\n      this.state.showCommission == true &&\r\n      (this.state.selectedCommissionAccount == null ||\r\n        this.state.selectedCommissionAccount == \"\")\r\n    ) {\r\n      this.setState({ error: \"selectedCommissionAccount\" });\r\n      return;\r\n    } else if (this.state.startDate == null || this.state.startDate == \"\") {\r\n      this.setState({ error: \"startdate\" });\r\n      return;\r\n    } else if (\r\n      this.state.selectedSymbolOption == null ||\r\n      this.state.selectedSymbolOption == \"\"\r\n    ) {\r\n      this.setState({ error: \"symbolselect\" });\r\n      return;\r\n    } else if (\r\n      this.state.selectedAccountOptionTo == null ||\r\n      this.state.selectedAccountOptionTo == \"\"\r\n    ) {\r\n      this.setState({ error: \"accountoptionto\" });\r\n      return;\r\n    } else if (this.state.startDateTo == null || this.state.startDateTo == \"\") {\r\n      this.setState({ error: \"startDateTo\" });\r\n      return;\r\n    } else if (\r\n      this.state.selectedSymbolOptionTo == null ||\r\n      this.state.selectedSymbolOptionTo == \"\"\r\n    ) {\r\n      this.setState({ error: \"selectedSymbolOptionTo\" });\r\n      return;\r\n    } else if (this.state.nameError) {\r\n      NotificationManager.listNotify = [];\r\n      NotificationManager.error(\"Profile Name Already Exist!\");\r\n    } else {\r\n      this.setState({ error: \" \" });\r\n      let fromSymbol = this.state.selectedSymbolOption;\r\n      let symbolFrom = fromSymbol.map((data) => {\r\n        return data.value;\r\n      });\r\n      let toSymbol = this.state.selectedSymbolOptionTo;\r\n      let symbolto = toSymbol.map((data) => {\r\n        return data.value;\r\n      });\r\n      // console.log(this.state.selectedCommissionAccount, 'this.state.selectedCommissionAccount')\r\n\r\n      let Data = {\r\n        profile_name: this.state.profileName,\r\n        from_account_id: this.state.selectedAccountOption.value,\r\n        to_account_id: this.state.selectedAccountOptionTo.value,\r\n        commission_acount_id: this.state.showAddCommission\r\n          ? this.state.selectedCommissionAccount.value\r\n          : 0,\r\n        startdateFrom: this.state.startDate,\r\n        enddateFrom: this.state.endDate,\r\n        startdateTo: this.state.startDateTo,\r\n        enddateTo: this.state.endDateTo,\r\n        startdateComm: this.state.startDateComm,\r\n        enddateComm: this.state.endDateComm,\r\n        comm_include_exclude_status: comm_status,\r\n        comm_magic_number: comm_status != 0 ? this.state.comm_magicNumber.length > 0\r\n            ? JSON.stringify(this.state.comm_magicNumber)\r\n            : JSON.stringify(\"\") : \"\",\r\n        from_symbols: JSON.stringify(symbolFrom),\r\n        to_symbols: JSON.stringify(symbolto),\r\n        auto_close: this.state.autoSyncClose ? 1 : 0,\r\n        from_magic_number:\r\n          from_status != 0\r\n            ? this.state.magicNumber.length > 0\r\n              ? JSON.stringify(this.state.magicNumber)\r\n              : JSON.stringify(\"\")\r\n            : \"\",\r\n        to_magic_number:\r\n          to_status != 0\r\n            ? this.state.magicNumberTo.length > 0\r\n              ? JSON.stringify(this.state.magicNumberTo)\r\n              : JSON.stringify(\"\")\r\n            : \"\",\r\n        from_include_exclude_status: from_status,\r\n        to_include_exclude_status: to_status,\r\n        from_ticket:\r\n          from_status_ticket != 0\r\n            ? this.state.ticket.length > 0\r\n              ? JSON.stringify(this.state.ticket)\r\n              : JSON.stringify(\"\")\r\n            : \"\",\r\n        to_ticket:\r\n          to_status_ticket != 0\r\n            ? this.state.ticketTo.length > 0\r\n              ? JSON.stringify(this.state.ticketTo)\r\n              : JSON.stringify(\"\")\r\n            : \"\",\r\n        from_include_exclude_status_ticket: from_status_ticket,\r\n        to_include_exclude_status_ticket: to_status_ticket,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n      };\r\n      //   console.log(Data, \"dat-------------\");\r\n\r\n      axios\r\n        .post(config.baseurl + \"/filter/addfilterdata\", Data)\r\n        .then(function (response) {\r\n          if (response.status == 200) {\r\n            self.props.onHide();\r\n          }\r\n        })\r\n        .catch(function (error) { });\r\n    }\r\n  }\r\n  crossClick(e) {\r\n    e.preventDefault();\r\n    this.props.onHide();\r\n  }\r\n  handleChangeAutoSync(e) {\r\n    this.setState({ autoSyncClose: !this.state.autoSyncClose }, () => { });\r\n  }\r\n\r\n  changeIncludeDefaultProperty = () => {\r\n    this.setState({ include: !this.state.include, exclude: false });\r\n    // if (!this.state.include == true) {\r\n    //     this.setState({ showMagicNumber: true })\r\n    // } else if (this.state.include == true) {\r\n    //     this.setState({ showMagicNumber: false })\r\n\r\n    // }\r\n  };\r\n  changeExcludeDefaultProperty = () => {\r\n    this.setState({ exclude: !this.state.exclude, include: false });\r\n    // if (!this.state.exclude == true) {\r\n    //     this.setState({ showMagicNumber: true })\r\n    // } else if (this.state.exclude == true) {\r\n    //     this.setState({ showMagicNumber: false })\r\n\r\n    // }\r\n  };\r\n  changeIncludeDefaultPropertyComm = () => {\r\n    this.setState({ includeComm: !this.state.includeComm, excludeComm: false });\r\n  }\r\n  changeIncludeDefaultPropertyTo = () => {\r\n    this.setState({ includeTo: !this.state.includeTo, excludeTo: false });\r\n    // if (!this.state.includeTo == true) {\r\n    //     this.setState({ showMagicNumberTo: true })\r\n    // } else if (this.state.includeTo == true) {\r\n    //     this.setState({ showMagicNumberTo: false })\r\n\r\n    // }\r\n  };\r\n  changeExcludeDefaultPropertyComm = () => {\r\n    this.setState({ excludeComm: !this.state.excludeComm, includeComm: false });\r\n  }\r\n  changeExcludeDefaultPropertyTo = () => {\r\n    this.setState({ excludeTo: !this.state.excludeTo, includeTo: false });\r\n    // if (!this.state.excludeTo == true) {\r\n    //     this.setState({ showMagicNumberTo: true })\r\n    // } else if (this.state.excludeTo == true) {\r\n    //     this.setState({ showMagicNumberTo: false })\r\n\r\n    // }\r\n  };\r\n  changeIncludeDefaultPropertyTicket = () => {\r\n    this.setState({\r\n      includeTicket: !this.state.includeTicketTo,\r\n      excludeTicket: false,\r\n    });\r\n  };\r\n  changeExcludeDefaultPropertyTicket = () => {\r\n    this.setState({\r\n      excludeTicket: !this.state.excludeTicket,\r\n      includeTicket: false,\r\n    });\r\n  };\r\n\r\n  changeIncludeDefaultPropertyTicketTo = () => {\r\n    this.setState({\r\n      includeTicketTo: !this.state.includeTicketTo,\r\n      excludeTicketTo: false,\r\n    });\r\n  };\r\n  changeExcludeDefaultPropertyTicketTo = () => {\r\n    this.setState({\r\n      excludeTicketTo: !this.state.excludeTicketTo,\r\n      includeTicketTo: false,\r\n    });\r\n  };\r\n  render() {\r\n    let s = this;\r\n    return (\r\n      <>\r\n        <NotificationContainer />\r\n        <div className=\"content\">\r\n          <Grid fluid>\r\n            <div className=\"symbol-box\">\r\n              <div className=\"cross_div\">\r\n                <a onClick={(e) => this.crossClick(e)}>\r\n                  <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n                </a>\r\n              </div>\r\n              <div className=\"terminal-text\">\r\n                <label className=\"pnameadjust\"> Profile Name </label>\r\n                <input type=\"text\" name=\"profilename\" className=\"Itext\" placeholder=\"Profile Name\" onChange={(e) => this.handleprofileName(e)} />\r\n              </div>\r\n              <div className=\"synclose\">\r\n                <label className=\"checkbox-inline\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    defaultChecked={this.state.autoSyncClose}\r\n                    name=\"changeAutoSync\"\r\n                    onChange={(e) => this.handleChangeAutoSync(e)}\r\n                  />\r\n                  <b>Auto Sync Close</b>\r\n                </label>\r\n              </div>\r\n\r\n              <form>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <div className=\"card bottom\">\r\n                      <div style={{ padding: \"10px 20px 0px\" }}>\r\n                        <span style={{ fontWeight: \"bold\" }}>Account A</span>\r\n                      </div>\r\n                      <table className=\"table mt20\">\r\n                        <tbody>\r\n                          <tr>\r\n                            <td className=\"b-clr\">\r\n                              <span className=\"accnt\">Account </span>\r\n                            </td>\r\n\r\n                            <td\r\n                              className=\"b-clr text-center\"\r\n                              style={{ width: \"50%\" }}\r\n                            >\r\n                              {/* <Multiselect\r\n                                                        options={objectArray}\r\n                                                        singleSelect\r\n                                                        displayValue=\"key\"\r\n                                                    /> */}\r\n                              {this.renderAccountSelect()}\r\n                              {this.state.error == \"accountoption\" && (\r\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                                  *Please Select Your Account\r\n                                </p>\r\n                              )}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td className=\"b-clr \">\r\n                              <span className=\"accnt\">From </span>\r\n                            </td>\r\n                            <td className=\"b-clr text-center datepicker_filter\">\r\n                              <DatePicker\r\n                                selected={this.state.startDate}\r\n                                onChange={this.handleChangeDate}\r\n                                isClearable\r\n                                placeholderText=\"dd/mm/yyyy\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                                startDate={this.state.startDate}\r\n                                endDate={this.state.endDate}\r\n                                strictParsing\r\n                              />\r\n                              {/* <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                                            <KeyboardDatePicker\r\n                                                                // margin=\"normal\"\r\n                                                                clearable={false}\r\n                                                                id=\"date-picker-dialog\"\r\n                                                                label=\"dd/MM/yyyy\"\r\n                                                                format=\"dd/MM/yyyy\"\r\n                                                                onError={() => { return null }}\r\n                                                                value={this.state.startDate}\r\n                                                                onChange={this.handleChangeDate}\r\n                                                                KeyboardButtonProps={{\r\n                                                                    'aria-label': 'change date',\r\n                                                                }}\r\n                                                            />\r\n                                                        </MuiPickersUtilsProvider> */}\r\n                              {this.state.error == \"startdate\" && (\r\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                                  *Please Select Start Date\r\n                                </p>\r\n                              )}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td className=\"b-clr \">\r\n                              <span className=\"accnt\">To </span>\r\n                            </td>\r\n                            <td className=\"b-clr text-center datepicker_filter\">\r\n                              <DatePicker\r\n                                autoOk={true}\r\n                                selected={this.state.endDate}\r\n                                onChange={this.handleEndDate}\r\n                                isClearable\r\n                                placeholderText=\"dd/mm/yyyy\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                                startDate={this.state.startDate}\r\n                                endDate={this.state.endDate}\r\n                              />\r\n                              {this.state.error == \"enddate\" && (\r\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                                  * Please ensure that the End Date is greater\r\n                                  than the Start Date.\r\n                                </p>\r\n                              )}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td className=\"b-clr \">\r\n                              <span className=\"accnt\">Symbol </span>\r\n                            </td>\r\n                            <td\r\n                              className=\"b-clr text-center\"\r\n                              style={{ width: \"40%\" }}\r\n                            >\r\n                              {/* <Multiselect\r\n                                                        options={objectArray}\r\n                                                        displayValue=\"key\"\r\n                                                        showCheckbox={true}\r\n                                                    /> */}\r\n                              {this.renderSymbolSelect()}\r\n                              {this.state.error == \"symbolselect\" && (\r\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                                  *Please Select Your Symbol{\" \"}\r\n                                </p>\r\n                              )}\r\n                            </td>\r\n                          </tr>\r\n\r\n                          <tr>\r\n                            <td className=\"b-clr \">\r\n                              <span className=\"accnt\">Magic Number </span>\r\n                            </td>\r\n                            <td\r\n                              className=\"b-clr text-center\"\r\n                              style={{ width: \"40%\" }}\r\n                            >\r\n                              <TagsInput\r\n                                onValidationReject={() =>\r\n                                  console.log(\"rejected\")\r\n                                }\r\n                                validationRegex={/^[0-9]*$/}\r\n                                inputProps={{\r\n                                  placeholder:\r\n                                    this.state.magicNumber.length > 0\r\n                                      ? \"\"\r\n                                      : \" Enter Magic Number\",\r\n                                }}\r\n                                type=\"number\"\r\n                                value={this.state.magicNumber}\r\n                                onChange={this.handleChangeMagicNumber}\r\n                              ></TagsInput>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td className=\"b-clr dataAdjust\">\r\n                              <div onClick={this.changeIncludeDefaultProperty}>\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"include\"\r\n                                  name=\"include\"\r\n                                  checked={this.state.include}\r\n                                />\r\n                                <span className=\"accnt \">Include</span>\r\n                              </div>\r\n                            </td>\r\n                            <td className=\"b-clr text-center\">\r\n                              <div onClick={this.changeExcludeDefaultProperty}>\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"exclude\"\r\n                                  name=\"exclude\"\r\n                                  checked={this.state.exclude}\r\n                                />\r\n                                <span className=\"accnt \">Exclude</span>\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td className=\"b-clr \">\r\n                              <span className=\"accnt\">Ticket </span>\r\n                            </td>\r\n                            <td\r\n                              className=\"b-clr text-center\"\r\n                              style={{ width: \"40%\" }}\r\n                            >\r\n                              <TagsInput\r\n                                onValidationReject={() =>\r\n                                  console.log(\"rejected\")\r\n                                }\r\n                                validationRegex={/^[0-9]*$/}\r\n                                inputProps={{\r\n                                  placeholder:\r\n                                    this.state.ticket.length > 0\r\n                                      ? \"\"\r\n                                      : \" Enter Ticket\",\r\n                                }}\r\n                                type=\"number\"\r\n                                value={this.state.ticket}\r\n                                onChange={this.handleChangeTicket}\r\n                              ></TagsInput>\r\n                            </td>\r\n                          </tr>\r\n\r\n                          <tr>\r\n                            <td className=\"b-clr dataAdjust\">\r\n                              <div\r\n                                onClick={\r\n                                  this.changeIncludeDefaultPropertyTicket\r\n                                }\r\n                              >\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"includeTicket\"\r\n                                  name=\"includeTicket\"\r\n                                  checked={this.state.includeTicket}\r\n                                />\r\n                                <span className=\"accnt \">Include</span>\r\n                              </div>\r\n                            </td>\r\n                            <td className=\"b-clr text-center\">\r\n                              <div\r\n                                onClick={\r\n                                  this.changeExcludeDefaultPropertyTicket\r\n                                }\r\n                              >\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"excludeTicket\"\r\n                                  name=\"excludeTicket\"\r\n                                  checked={this.state.excludeTicket}\r\n                                />\r\n                                <span className=\"accnt \">Exclude</span>\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <div className=\"card bottom\">\r\n                      <div style={{ padding: \"10px 20px 0px\" }}>\r\n                        <span style={{ fontWeight: \"bold\" }}>Account B</span>\r\n                      </div>\r\n                      <table className=\"table mt20\">\r\n                        <tbody>\r\n                          <tr>\r\n                            <td className=\"b-clr \">\r\n                              <span className=\"accnt\"> Account</span>\r\n                            </td>\r\n                            <td\r\n                              className=\"b-clr text-center\"\r\n                              style={{ width: \"50%\" }}\r\n                            >\r\n                              {this.renderAccountSelectTo()}\r\n                              {this.state.error == \"accountoptionto\" && (\r\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                                  *Please Select Your Account\r\n                                </p>\r\n                              )}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td className=\"b-clr \">\r\n                              <span className=\"accnt\">From </span>\r\n                            </td>\r\n                            <td className=\"b-clr text-center datepicker_filter\">\r\n                              <DatePicker\r\n                                selected={this.state.startDateTo}\r\n                                onChange={this.handleChangeDateTo}\r\n                                isClearable\r\n                                placeholderText=\"dd/mm/yyyy\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                                startDate={this.state.startDateTo}\r\n                                endDate={this.state.endDateTo}\r\n                                strictParsing\r\n                              />\r\n                              {this.state.error == \"startDateTo\" && (\r\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                                  *Please Select Start Date\r\n                                </p>\r\n                              )}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td className=\"b-clr \">\r\n                              <span className=\"accnt\">To </span>\r\n                            </td>\r\n                            <td className=\"b-clr text-center datepicker_filter\">\r\n                              <DatePicker\r\n                                selected={this.state.endDateTo}\r\n                                onChange={this.handleEndDateTo}\r\n                                isClearable\r\n                                placeholderText=\"dd/mm/yyyy\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                                startDate={this.state.startDateTo}\r\n                                endDate={this.state.endDateTo}\r\n                              />\r\n                              {this.state.error == \"enddateto\" && (\r\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                                  * Please ensure that the End Date is greater\r\n                                  than the Start Date.\r\n                                </p>\r\n                              )}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td className=\"b-clr\">\r\n                              <span className=\"accnt\"> Symbol </span>\r\n                            </td>\r\n                            <td\r\n                              className=\"b-clr text-center\"\r\n                              style={{ width: \"40%\" }}\r\n                            >\r\n                              {/* <Multiselect\r\n                                                        options={objectArray}\r\n                                                        displayValue=\"key\"\r\n                                                        showCheckbox={true}\r\n                                                    /> */}\r\n                              {this.renderSymbolSelectTo()}\r\n                              {this.state.error == \"selectedSymbolOptionTo\" && (\r\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                                  *Please Select Your Symbol{\" \"}\r\n                                </p>\r\n                              )}\r\n                            </td>\r\n                          </tr>\r\n\r\n                          <tr>\r\n                            <td className=\"b-clr \">\r\n                              <span className=\"accnt\">Magic Number </span>\r\n                            </td>\r\n                            <td\r\n                              className=\"b-clr text-center\"\r\n                              style={{ width: \"40%\" }}\r\n                            >\r\n                              <TagsInput\r\n                                onValidationReject={() =>\r\n                                  console.log(\"rejected\")\r\n                                }\r\n                                validationRegex={/^[0-9]*$/}\r\n                                inputProps={{\r\n                                  placeholder:\r\n                                    this.state.magicNumberTo.length > 0\r\n                                      ? \"\"\r\n                                      : \" Enter Magic Number\",\r\n                                }}\r\n                                type=\"number\"\r\n                                value={this.state.magicNumberTo}\r\n                                onChange={this.handleChangeMagicNumberTo}\r\n                              ></TagsInput>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td className=\"b-clr dataAdjust\">\r\n                              <div\r\n                                onClick={this.changeIncludeDefaultPropertyTo}\r\n                              >\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"includeTo\"\r\n                                  name=\"includeTo\"\r\n                                  checked={this.state.includeTo}\r\n                                />\r\n                                <span className=\"accnt \">Include</span>\r\n                              </div>\r\n                            </td>\r\n                            <td className=\"b-clr text-center\">\r\n                              <div\r\n                                onClick={this.changeExcludeDefaultPropertyTo}\r\n                              >\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"excludeTo\"\r\n                                  name=\"excludeTo\"\r\n                                  checked={this.state.excludeTo}\r\n                                />\r\n                                <span className=\"accnt \">Exclude</span>\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td className=\"b-clr \">\r\n                              <span className=\"accnt\">Ticket </span>\r\n                            </td>\r\n                            <td\r\n                              className=\"b-clr text-center\"\r\n                              style={{ width: \"40%\" }}\r\n                            >\r\n                              <TagsInput\r\n                                onValidationReject={() =>\r\n                                  console.log(\"rejected\")\r\n                                }\r\n                                validationRegex={/^[0-9]*$/}\r\n                                inputProps={{\r\n                                  placeholder:\r\n                                    this.state.ticketTo.length > 0\r\n                                      ? \"\"\r\n                                      : \" Enter Ticket\",\r\n                                }}\r\n                                type=\"number\"\r\n                                value={this.state.ticketTo}\r\n                                onChange={this.handleChangeTicketTo}\r\n                              ></TagsInput>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td className=\"b-clr dataAdjust\">\r\n                              <div\r\n                                onClick={\r\n                                  this.changeIncludeDefaultPropertyTicketTo\r\n                                }\r\n                              >\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"includeTicketTo\"\r\n                                  name=\"includeTicketTo\"\r\n                                  checked={this.state.includeTicketTo}\r\n                                />\r\n                                <span className=\"accnt \">Include</span>\r\n                              </div>\r\n                            </td>\r\n                            <td className=\"b-clr text-center\">\r\n                              <div\r\n                                onClick={\r\n                                  this.changeExcludeDefaultPropertyTicketTo\r\n                                }\r\n                              >\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"excludeTicketTo\"\r\n                                  name=\"excludeTicketTo\"\r\n                                  checked={this.state.excludeTicketTo}\r\n                                />\r\n                                <span className=\"accnt \">Exclude</span>\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <hr></hr>\r\n                <div className=\"chceckbox\">\r\n                  <label className=\"checkbox-inline\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      defaultChecked={this.state.showCommisoin}\r\n                      onChange={(e) => this.handeChangeShowCommission(e)}\r\n                    />\r\n                    <b>Add Commission</b>\r\n                  </label>\r\n                </div>\r\n                {this.state.showAddCommission && (\r\n                  <div className=\"center-com d-flex\">\r\n                    <div className=\"com\">\r\n                      <h3 style={{ fontWeight: \"bold\" }} data-tip=\"Commission\">Commission</h3>\r\n                      <ReactTooltip />\r\n                    </div>\r\n                    <table className=\"table mt20\">\r\n                      <tbody>\r\n                        <tr>\r\n                          <td className=\"b-clr \">\r\n                            <span className=\"accnt\"> Account </span>\r\n                          </td>\r\n                          <td\r\n                            className=\"b-clr text-center\"\r\n                            style={{ width: \"50%\" }}\r\n                          >\r\n                            {this.renderCommissionAccount()}\r\n\r\n                            {this.state.error ==\r\n                              \"selectedCommissionAccount\" && (\r\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                                  *Please Select Your Account{\" \"}\r\n                                </p>\r\n                              )}\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td className=\"b-clr \">\r\n                              <span className=\"accnt\">From </span>\r\n                            </td>\r\n                          <td className=\"b-clr text-center datepicker_filter\">\r\n                          <DatePicker\r\n                                selected={this.state.startDateComm}\r\n                                onChange={this.handleChangeDateComm}\r\n                                isClearable\r\n                                placeholderText=\"dd/mm/yyyy\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                                startDate={this.state.startDateComm}\r\n                                endDate={this.state.endDateComm}\r\n                                strictParsing\r\n                              />\r\n                              {this.state.error == \"startDateComm\" && (\r\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                                  *Please Select Start Date\r\n                                </p>\r\n                              )}\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"b-clr \">\r\n                              <span className=\"accnt\">To </span>\r\n                            </td>\r\n                            <td className=\"b-clr text-center datepicker_filter\">\r\n                              <DatePicker\r\n                                selected={this.state.endDateComm}\r\n                                onChange={this.handleEndDateComm}\r\n                                isClearable\r\n                                placeholderText=\"dd/mm/yyyy\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                                startDate={this.state.startDateComm}\r\n                                endDate={this.state.endDateComm}\r\n                              />\r\n                              {this.state.error == \"enddatecomm\" && (\r\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                                  * Please ensure that the End Date is greater\r\n                                  than the Start Date.\r\n                                </p>\r\n                              )}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td className=\"b-clr \">\r\n                              <span className=\"accnt\">Magic Number </span>\r\n                            </td>\r\n                            <td\r\n                              className=\"b-clr text-center\"\r\n                              style={{ width: \"40%\" }}\r\n                            >\r\n                              <TagsInput\r\n                                onValidationReject={() =>\r\n                                  console.log(\"rejected\")\r\n                                }\r\n                                validationRegex={/^[0-9]*$/}\r\n                                inputProps={{\r\n                                  placeholder:\r\n                                    this.state.comm_magicNumber.length > 0\r\n                                      ? \"\"\r\n                                      : \" Enter Magic Number\",\r\n                                }}\r\n                                type=\"number\"\r\n                                value={this.state.comm_magicNumber}\r\n                                onChange={this.handleChangeMagicNumberComm}\r\n                              ></TagsInput>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td className=\"b-clr dataAdjust\">\r\n                              <div\r\n                                onClick={this.changeIncludeDefaultPropertyComm}\r\n                              >\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"includecomm\"\r\n                                  name=\"includecomm\"\r\n                                  checked={this.state.includeComm}\r\n                                />\r\n                                <span className=\"accnt \">Include</span>\r\n                              </div>\r\n                            </td>\r\n                            <td className=\"b-clr text-center\">\r\n                              <div\r\n                                onClick={this.changeExcludeDefaultPropertyComm}\r\n                              >\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"excludeComm\"\r\n                                  name=\"excludeComm\"\r\n                                  checked={this.state.excludeComm}\r\n                                />\r\n                                <span className=\"accnt \">Exclude</span>\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                )}\r\n                <div className=\"save_button_filter\">\r\n                  <div className=\"savebtn\">\r\n                    <Button\r\n                      className=\"btn-primary savebutton\"\r\n                      variant=\"primary\"\r\n                      size=\"lg\"\r\n                      block\r\n                      onClick={(e) => this.formDataSubmit(e)}\r\n                    >\r\n                      <b>Save</b>\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Grid>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Innerfilter;\r\n","import React, { Component } from 'react';\r\nimport { Grid, Row, Col, Modal, Alert } from \"react-bootstrap\";\r\nimport swal from 'sweetalert';\r\nimport config from '../../constant/config.js';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nconst axios = require('axios');\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loginForm: false,\r\n            setShow: false,\r\n            show: true,\r\n            username: '',\r\n            password: '',\r\n            alert: null,\r\n            persons: [],\r\n            shwPwd: false,\r\n            shwMsg: false,\r\n            invalidUsername: '',\r\n            invalidPassword: '',\r\n            accountlist: []\r\n\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value.trim() })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const userdetail = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }\r\n        if (this.state.username == '') {\r\n            this.setState({ shwPwd: true })\r\n        }\r\n\r\n        let self = this;\r\n        axios.post(config.baseurl + '/users/mainLogin', userdetail)\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    // self.handleClose();\r\n                    if (response.data.rows && response.data.rows.length > 0) {\r\n                        localStorage.setItem('currentUser', JSON.stringify(response.data.rows));\r\n                        localStorage.setItem('accessToken', JSON.stringify(response.data.accessToken));\r\n                        self.props.history.push('/dashboard/dashboard')\r\n                    }\r\n                    if (response.data.message) {\r\n                        if (response.data.name == 'username') {\r\n                            self.setState({ invalidUsername: response.data.message })\r\n                            if (self.state.invalidUsername == '' || self.state.invalidUsername == 'Invalid username.' || self.state.invalidUsername == \"Invalid username\") {\r\n                                self.createNotification()\r\n                            }\r\n                        }\r\n                        if (response.data.name == 'password') {\r\n                            if (self.state.invalidPassword == '' || self.state.invalidPassword == 'Invalid password.') {\r\n                                self.createNotification()\r\n                            }\r\n                            self.setState({ invalidPassword: response.data.message, invalidUsername: '' })\r\n\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n            });\r\n    }\r\n    toogle = () => {\r\n        this.setState({ loginForm: !this.state.loginForm })\r\n    }\r\n    handleClose = () => {\r\n        this.setState({ loginForm: false })\r\n    }\r\n    handleShow = () => {\r\n        this.setState({ setShow: true })\r\n    }\r\n    createNotification = () => {\r\n        NotificationManager.listNotify = [];\r\n        NotificationManager.error('Invalid Credentials !');\r\n    }\r\n\r\n    componentDidMount() {\r\n        // let self = this;\r\n\r\n        let currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n        if (currentUser !== null) {\r\n            this.props.history.push('dashboard/dashboard')\r\n            return;\r\n        }\r\n        // axios.get(config.baseurl + '/users/allAccounts')\r\n        //     .then(function (response) {\r\n        //         if (response.status == 200) {\r\n        //             self.setState({ accountlist: response.data.rows })\r\n        //         }\r\n        //     })\r\n    }\r\n    render() {\r\n        const { invalidPassword, invalidUsername } = this.state;\r\n        return (\r\n            <div className=\"content\">\r\n                <Grid fluid style={{ marginTop: '20vh' }}>\r\n                    <Row>\r\n                        <Col md={4} />\r\n                        <Col\r\n                            md={4}\r\n                            sm={6}\r\n                        >\r\n                            <span className=\"login-form-header\">Rimon Hedge Funds Monitoring</span>\r\n                            <div className=\"form-box login-box\">\r\n                                {/* <Modal.Title className=\"text-center\"><b>Log In</b></Modal.Title> */}\r\n\r\n                                {/* <div className=\"container-fluid\" style={{ background: '#eee', padding: 15, marginTop: 10 }}>\r\n                                    <div>\r\n                                        <span style={{ fontWeight: 'bold' }}> Username: </span>\r\n                                                    testaccount\r\n                                                </div>\r\n                                    <div>\r\n                                        <span style={{ fontWeight: 'bold' }}> Password: </span>\r\n                                                    1234567\r\n                                                </div>\r\n                                </div> */}\r\n                                <form style={{ marginTop: '20px' }} onSubmit={this.onSubmit}>\r\n                                    <label>Username</label>\r\n\r\n                                    <input className=\"Itext\" placeholder=\"Enter Username\" name=\"username\" value={this.state.username} onChange={this.onChange}\r\n                                    // onKeyUp={this.checkValidUser}\r\n                                    ></input>\r\n                                    <label>Password</label>\r\n\r\n                                    <input className=\"Itext\" placeholder=\"Enter Password\" name=\"password\" type=\"password\" value={this.state.password} onChange={this.onChange}></input>\r\n\r\n                                    <div className=\"clearfix\">\r\n                                        <button type=\"submit\" disabled={!this.state.username || !this.state.password} className={!this.state.username || !this.state.password ? \"loginButton\" : \"loginButton save2 save1\"}>Login</button>\r\n\r\n                                    </div>\r\n                                    <div className=\"login-footer-text\">\r\n                                        alpha ver 0.11\r\n                                        <br />\r\n                                        ©Rimon Hedge Funds LTD\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n\r\n                            {/* </Modal.Body>\r\n                                </Modal> */}\r\n\r\n\r\n                        </Col>\r\n                        <Col md={4} />\r\n                    </Row>\r\n                </Grid>\r\n                <NotificationContainer />\r\n\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport { NavItem, Nav, NavDropdown, MenuItem } from \"react-bootstrap\";\r\nimport config from '../../constant/config';\r\nimport axios from \"axios\";\r\n\r\nclass AdminNavbarLinks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n\r\n    let currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    // console.log(currentUser[0]);\r\n    this.state = {\r\n      loginForm: false,\r\n      setShow: false,\r\n      show: true,\r\n      id: currentUser[0].id,\r\n      logged_in: currentUser[0].logged_in,\r\n    }\r\n  }\r\n  logout = async () => {\r\n    if (this.state.logged_in) {\r\n      const userdetail = {\r\n        id: this.state.id,\r\n      }\r\n      await axios.post(config.baseurl + '/users/logout', userdetail)\r\n        .then(function (response) {\r\n          if (response.status == 200) {\r\n            console.log({ message: 'logout' });\r\n          }\r\n        })\r\n    }\r\n    localStorage.clear();\r\n    this.props.history.push('/login');\r\n  }\r\n  render() {\r\n    const notification = (\r\n      <div>\r\n        {/* <i className=\"fa fa-globe\" />\r\n        <b className=\"caret\" /> */}\r\n        {/* <span className=\"notification\">5</span> */}\r\n        <p className=\"hidden-lg hidden-md\">Notification</p>\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        <Nav>\r\n          <NavItem eventKey={1} href=\"#\">\r\n            {/* <i className=\"fa fa-dashboard\" /> */}\r\n            <p className=\"hidden-lg hidden-md\">Dashboard</p>\r\n          </NavItem>\r\n          <NavDropdown\r\n            eventKey={2}\r\n            title={notification}\r\n            noCaret\r\n            id=\"basic-nav-dropdown\"\r\n          >\r\n            <MenuItem eventKey={2.1}>Notification 1</MenuItem>\r\n            <MenuItem eventKey={2.2}>Notification 2</MenuItem>\r\n            <MenuItem eventKey={2.3}>Notification 3</MenuItem>\r\n            <MenuItem eventKey={2.4}>Notification 4</MenuItem>\r\n            <MenuItem eventKey={2.5}>Another notifications</MenuItem>\r\n          </NavDropdown>\r\n          <NavItem eventKey={3} href=\"#\">\r\n            {/* <i className=\"fa fa-search\" />\r\n            <p className=\"hidden-lg hidden-md\">Search</p> */}\r\n          </NavItem>\r\n        </Nav>\r\n        <Nav pullRight>\r\n          {/* <NavItem eventKey={1} href=\"#\">\r\n            Account\r\n          </NavItem>\r\n          <NavDropdown\r\n            eventKey={2}\r\n            title=\"Dropdown\"\r\n            id=\"basic-nav-dropdown-right\"\r\n          >\r\n            <MenuItem eventKey={2.1}>Action</MenuItem>\r\n            <MenuItem eventKey={2.2}>Another action</MenuItem>\r\n            <MenuItem eventKey={2.3}>Something</MenuItem>\r\n            <MenuItem eventKey={2.4}>Another action</MenuItem>\r\n            <MenuItem eventKey={2.5}>Something</MenuItem>\r\n            <MenuItem divider />\r\n            <MenuItem eventKey={2.5}>Separated link</MenuItem>\r\n          </NavDropdown> */}\r\n          <NavItem eventKey={3} onClick={() => this.logout()}>\r\n            <span className=\"logOutbtn\">Logout</span>\r\n          </NavItem>\r\n        </Nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminNavbarLinks;\r\n","import React, { Component } from \"react\";\r\nimport { Navbar } from \"react-bootstrap\";\r\n\r\nimport AdminNavbarLinks from \"./AdminNavbarLinks\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.mobileSidebarToggle = this.mobileSidebarToggle.bind(this);\r\n    this.state = {\r\n      sidebarExists: false\r\n    };\r\n  }\r\n  mobileSidebarToggle(e) {\r\n    if (this.state.sidebarExists === false) {\r\n      this.setState({\r\n        sidebarExists: true\r\n      });\r\n    }\r\n    e.preventDefault();\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    var node = document.createElement(\"div\");\r\n    node.id = \"bodyClick\";\r\n    node.onclick = function() {\r\n      this.parentElement.removeChild(this);\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n    };\r\n    document.body.appendChild(node);\r\n  }\r\n  render() {\r\n    return (\r\n      <Navbar fluid>\r\n        <Navbar.Header>\r\n          <Navbar.Brand>\r\n            <a href=\"#\">{this.props.brandText== \"Dashboard\" ? \"Dashboard\" : this.props.brandText }</a>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle onClick={this.mobileSidebarToggle} />\r\n        </Navbar.Header>\r\n        <Navbar.Collapse>\r\n          <AdminNavbarLinks {...this.props}/>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Dropdown, DropdownButton } from 'react-bootstrap'\r\nimport AdminNavbarLinks from \"../Navbars/AdminNavbarLinks.jsx\";\r\n\r\n// import logo from \"assets/img/reactlogo.png\";\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: window.innerWidth,\r\n\r\n    };\r\n  }\r\n  toggle = (id) => {\r\n\r\n    // console.log(this.props.routes)\r\n    this.props.routes.filter((data) => {\r\n      if (data.id == id) {\r\n        data.menu = !data.menu\r\n      }\r\n      else {\r\n        data.menu = false\r\n      }\r\n    })\r\n  }\r\n\r\n  activeRoute(routeName) {\r\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\r\n  }\r\n  updateDimensions() {\r\n    this.setState({ width: window.innerWidth });\r\n  }\r\n  componentDidMount() {\r\n    // console.log(this.props, 'sidebar');\r\n    this.updateDimensions();\r\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\r\n  }\r\n\r\n  render() {\r\n    let currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    const sidebarBackground = {\r\n      backgroundImage: \"url(\" + this.props.image + \")\"\r\n    };\r\n    return (\r\n\r\n\r\n      <div\r\n        id=\"sidebar\"\r\n        className=\"sidebar\"\r\n        data-color={this.props.color}\r\n        data-image={this.props.image}\r\n      >\r\n        {this.props.hasImage ? (\r\n          <div className=\"sidebar-background\" />\r\n        ) : (\r\n            null\r\n          )}\r\n        <div className=\"logo\">\r\n          {/* <a\r\n            href=\"https://www.creative-tim.com?ref=lbd-sidebar\"\r\n            className=\"simple-text logo-mini\"\r\n          > */}\r\n          {/* <div className=\"logo-img\">\r\n\r\n            </div> */}\r\n          {/* </a> */}\r\n          <span className=\"logo-text simple-text logo-normal\">\r\n            Hedging Interest Differentials\r\n\r\n          </span>\r\n          {/* <a\r\n            href=\"https://www.creative-tim.com?ref=lbd-sidebar\"\r\n            className=\"simple-text logo-normal\"\r\n          >\r\n            Dashboard\r\n          </a> */}\r\n        </div>\r\n        <div className=\"sidebar-wrapper\">\r\n\r\n          <ul className=\"nav\">\r\n            {this.state.width <= 991 ? <AdminNavbarLinks {...this.props} /> : null}\r\n            {this.props.routes.map((prop, key) => {\r\n              if (!prop.redirect)\r\n                // console.log(prop.resources, 'resouces');\r\n                return (\r\n                  <li\r\n                    className={\r\n                      prop.upgrade\r\n                        ? \"active active-pro\"\r\n                        : this.activeRoute(prop.layout + prop.path)\r\n                    }\r\n\r\n                    key={key}\r\n                  >\r\n                    <NavLink\r\n                      to={prop.layout + prop.path}\r\n                      className=\"nav-link\"\r\n                      activeClassName=\"active\"\r\n                    >\r\n                      <i className={prop.icon} />\r\n                      <p\r\n                        onClick={() => this.toggle(prop.id)}\r\n\r\n                      >{prop.name}\r\n                        {prop.child !== false && <b style={{ transform: prop.menu ? 'rotate(360deg)' : 'rotate(270deg)' }} className=\"caret\"></b>}\r\n                      </p>\r\n\r\n                    </NavLink>\r\n                    {prop.menu &&\r\n                      <ul className='dropdown-menu-cutomize'>\r\n                        {prop.resources != undefined && prop.resources.map((sub, index) => {\r\n\r\n                          if (currentUser[0].role === \"user\" && sub.name !== \"Users\") {\r\n                            return <NavLink\r\n                              to={sub.layout + sub.path}\r\n                              className=\"nav-link\"\r\n                              activeClassName=\"active\"\r\n                            >\r\n                              <li\r\n\r\n                                key={index}>\r\n                                {/* <i className={sub.icon} /> */}\r\n                                <p >{sub.name}</p>\r\n                              </li>\r\n                            </NavLink>\r\n                          }\r\n                          else if (currentUser[0].role === \"admin\") {\r\n                            return <NavLink\r\n                              to={sub.layout + sub.path}\r\n                              className=\"nav-link\"\r\n                              activeClassName=\"active\"\r\n                              key={index}\r\n                            >\r\n                              <li\r\n\r\n                               >\r\n                                {/* <i className={sub.icon} /> */}\r\n                                <p >{sub.name}</p>\r\n                              </li>\r\n                            </NavLink>\r\n                          }\r\n\r\n\r\n\r\n                        })}\r\n\r\n                      </ul>\r\n                    }\r\n\r\n                  </li>\r\n                );\r\n              // return null;\r\n            })}\r\n          </ul>\r\n        </div>\r\n        {/* <NavLink>\r\n          <DropdownButton id=\"dropdown-item-button\" title=\"Dropdown button\">\r\n            <Dropdown.ItemText>Dropdown item text</Dropdown.ItemText>\r\n            <Dropdown.Item as=\"button\">Action</Dropdown.Item>\r\n            <Dropdown.Item as=\"button\">Another action</Dropdown.Item>\r\n            <Dropdown.Item as=\"button\">Something else</Dropdown.Item>\r\n          </DropdownButton>\r\n        </NavLink> */}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n\r\n","\r\nimport React, { useState, Fragment } from 'react';\r\nimport { Collapse } from 'reactstrap';\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport NumberFormat from 'react-number-format';\r\nimport Login from './login';\r\n\r\n// import Data from './Data';\r\n\r\nconst Closeposition = (props) => {\r\n    const { allHistoryRecord, fromHistoryOrderInfo, toHistoryOrderInfo, commissionHistoryOrderInfo } = props;\r\n    const [isOpen2, setIsOpen2] = useState(false);\r\n    const toggle2 = () => setIsOpen2(!isOpen2);\r\n\r\n    // const sumOfTotal = allHistoryRecord.reduce((current, data) => {\r\n    //     return (data.total + current);\r\n    // }, 0);\r\n    let fromSymbols = '';\r\n    let toSymbols = '';\r\n    if (allHistoryRecord && Object.entries(allHistoryRecord).length > 0) {\r\n        fromSymbols = JSON.parse(allHistoryRecord.from_symbols);\r\n        fromSymbols = (fromSymbols).map(data => data).join(', ');\r\n        toSymbols = JSON.parse(allHistoryRecord.to_symbols);\r\n        toSymbols = (toSymbols).map(data => data).join(', ')\r\n    }\r\n    let fromsum = 0;\r\n    let tosum = 0;\r\n    let commissionSum = 0;\r\n\r\n    if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\r\n        fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\r\n    }\r\n    if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\r\n        tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\r\n    }\r\n    if (commissionHistoryOrderInfo && commissionHistoryOrderInfo.length > 0) {\r\n        commissionSum = (commissionHistoryOrderInfo[0].commission + commissionHistoryOrderInfo[0].swap + commissionHistoryOrderInfo[0].profit);\r\n    }\r\n\r\n    let sumOfTotal = tosum + fromsum;\r\n\r\n    let noRecord = ((fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0 && fromHistoryOrderInfo[0].total == null) && (toHistoryOrderInfo && toHistoryOrderInfo.length > 0 && toHistoryOrderInfo[0].total == null)) ? true : false;\r\n    return (\r\n        <div>\r\n            <div className=\"openpositions symbol-box terminal-head-box\" style={{ margin: '20px 0px' }}>\r\n                <span className=\"p-text\">Realized Profit/Loss</span>\r\n                {/* <span className=\"icon-style\" onClick={toggle2}>\r\n                    {!isOpen2 ?\r\n                        <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\r\n                        :\r\n                        <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\r\n                    }\r\n                </span> */}\r\n            </div>\r\n            <div>\r\n                {/* <Collapse isOpen={isOpen2}> */}\r\n                <Row>\r\n                    {/* {Data.tablePage.items.map((item, index) =>\r\n                            <Col md={6} key={index}>\r\n                                <div className=\"card\">\r\n                                    <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\r\n                                    </div>\r\n                                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                        <table className=\"table\">\r\n                                            <tbody>\r\n                                                <tr><td>{item.closed} </td>\r\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\r\n                                                </tr>\r\n                                                <tr><td>{item.commission} </td>\r\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\r\n                                                </tr>\r\n                                                <tr><td>{item.swap} </td>\r\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\r\n                                                </tr>\r\n                                                <tr><td>{item.total} </td>\r\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n                        )} */}\r\n                    {/* {(allHistoryRecord && allHistoryRecord.length>0) && allHistoryRecord.map((item, index) =>\r\n                            <Fragment>\r\n\r\n                            <Col md={6} key={index}>\r\n                                <div className=\"card\">\r\n                                    <div className=\"header\">\r\n                                        <h5 className={item.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{item.account.login}</h5>\r\n                                        <h6 className={'colorDarkBlue'} style={{fontSize:10}}>({item.account.alias})</h6>\r\n                                    </div>\r\n                                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                        <table className=\"table\">\r\n                                            <tbody>\r\n                                                <tr><td>Closed P/L </td>\r\n                                                    <td className=\"td-actions text-right\">$ {item.profit}</td>\r\n                                                </tr>\r\n                                                <tr><td>Commission </td>\r\n                                                    <td className=\"td-actions text-right\">$ {item.commission}</td>\r\n                                                </tr>\r\n                                                <tr><td>Swap </td>\r\n                                                    <td className=\"td-actions text-right\">$ {item.swap}</td>\r\n                                                </tr>\r\n                                                <tr><td>Total </td>\r\n                                                    <td className=\"td-actions text-right\">$ {item.total}</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n                            </Fragment>\r\n                        )}\r\n                        {(allHistoryRecord && allHistoryRecord.length>0) && \r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <div>\r\n                                        <div className=\"total-box\">\r\n                                            <span className=\"text\">Sum of closed positions</span>\r\n                                            <span className=\"text\" style={{ float: 'right' }}>$ {sumOfTotal}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        } */}\r\n                    {noRecord ? (\r\n                        <div className=\"text-center\">\r\n                            No Record Found!\r\n                        </div>) :\r\n\r\n                        <Fragment>\r\n\r\n                            {(fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0 && fromHistoryOrderInfo[0].total != null) ? (\r\n                                <Col md={6}>\r\n                                    <div className=\"card\">\r\n                                        <div className=\"header\">\r\n                                            <h5 className={allHistoryRecord.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{allHistoryRecord.accountFromInfo[0].login}</h5>\r\n                                            <h6 className={'colorDarkBlue'} style={{ fontSize: 10 }}>({allHistoryRecord.accountFromInfo[0].alias})</h6>\r\n                                        </div>\r\n                                        <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                            <table className=\"table\">\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td className=\"symbolStyle removeBorder\">{fromSymbols}</td>\r\n                                                        {/* <td>{fromSymbols}</td> */}\r\n                                                        {/* <td className=\"td-actions text-right\">$ {fromHistoryOrderInfo[0].profit}</td> */}\r\n                                                    </tr>\r\n                                                    <tr><td>Closed P/L </td>\r\n                                                        <td className=\"td-actions text-right\">$ {' '}\r\n                                                            <NumberFormat value={fromHistoryOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                            {/* {fromHistoryOrderInfo[0].profit} */}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr><td>Commission </td>\r\n                                                        <td className=\"td-actions text-right\">$ {' '}\r\n                                                            {/* {fromHistoryOrderInfo[0].commission} */}\r\n                                                            <NumberFormat value={fromHistoryOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr><td>Swap </td>\r\n                                                        <td className=\"td-actions text-right\">$ {' '}\r\n                                                            <NumberFormat value={fromHistoryOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                            {/* {fromHistoryOrderInfo[0].swap} */}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr><td>Total </td>\r\n                                                        <td className=\"td-actions text-right\">$ {' '}\r\n                                                            <NumberFormat value={fromHistoryOrderInfo[0].total} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                            {/* {fromHistoryOrderInfo[0].total} */}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                            ) : (\r\n                                    <Col md={6}>\r\n                                        <div className=\"card noRecordCol\"> No Record Found</div>\r\n                                    </Col>\r\n                                )}\r\n                            {(toHistoryOrderInfo && toHistoryOrderInfo.length > 0 && toHistoryOrderInfo[0].total != null) ? (\r\n                                <Col md={6}>\r\n                                    <div className=\"card\">\r\n                                        <div className=\"header\">\r\n                                            <h5 className={allHistoryRecord.id == '1' ? 'acntText color2' : 'acntText color2'}>{allHistoryRecord.accountToInfo[0].login}</h5>\r\n                                            <h6 className={'color2'} style={{ fontSize: 10 }}>({allHistoryRecord.accountToInfo[0].alias})</h6>\r\n                                        </div>\r\n                                        <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                            <table className=\"table\">\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <span className=\"symbolStyle\">{toSymbols}</span>\r\n\r\n                                                        {/* <td>{toSymbols}</td> */}\r\n                                                        {/* <td className=\"td-actions text-right\">$ {fromHistoryOrderInfo[0].profit}</td> */}\r\n                                                    </tr>\r\n                                                    <tr><td>Closed P/L </td>\r\n                                                        <td className=\"td-actions text-right\">$ {' '}\r\n                                                            <NumberFormat value={toHistoryOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                            {/* {toHistoryOrderInfo[0].profit} */}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr><td>Commission </td>\r\n                                                        <td className=\"td-actions text-right\">$ {' '}\r\n                                                            {/* {toHistoryOrderInfo[0].commission} */}\r\n                                                            <NumberFormat value={toHistoryOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr><td>Swap </td>\r\n                                                        <td className=\"td-actions text-right\">$ {' '}\r\n                                                            {/* {toHistoryOrderInfo[0].swap} */}\r\n\r\n\r\n                                                            {\r\n                                                                <NumberFormat value={(toHistoryOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                                                                // toOpenOrderInfo[0].swap\r\n                                                            }\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr><td>Total </td>\r\n                                                        <td className=\"td-actions text-right\">$ {' '}\r\n                                                            {/* {toHistoryOrderInfo[0].total} */}\r\n                                                            <NumberFormat value={toHistoryOrderInfo[0].total} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                            ) : (\r\n                                    <Col md={6}>\r\n                                        <div className=\"card noRecordCol\"> No Record Found</div>\r\n                                    </Col>\r\n                                )\r\n\r\n                            }\r\n                            {(sumOfTotal != 0) &&\r\n                                <Row>\r\n                                    <Col md={12} style={{ marginBottom: 20 }}>\r\n                                        <div>\r\n                                            <div className=\"total-box\">\r\n                                                <span className=\"text\">Sum of closed positions</span>\r\n                                                <span className=\"text\" style={{ float: 'right' }}>$ {' '}\r\n                                                    <NumberFormat value={sumOfTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                    {/* {sumOfTotal} */}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            }\r\n\r\n\r\n\r\n\r\n\r\n                        </Fragment>\r\n                    }\r\n                </Row>\r\n                {/* </Collapse> */}\r\n                {allHistoryRecord.commission_acount_id !== 0 && allHistoryRecord.commission_acount_id !== undefined &&\r\n                    <Col md={12}>\r\n\r\n                        <div className=\"card \">\r\n                            <div className=\"header ptheader\">\r\n                                <h4 className=\"text-center\"><b>Commission</b></h4>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12 text-center\">\r\n\r\n                                        <h5 className={allHistoryRecord.id == '1' ? 'acntText color2' : 'acntText acadjust color2'}>{allHistoryRecord.accountCommissionInfo !== undefined && allHistoryRecord.accountCommissionInfo[0].login} <span>({allHistoryRecord.accountCommissionInfo !== undefined && allHistoryRecord.accountCommissionInfo[0].alias})</span></h5>\r\n\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"col-md-12 total text-center\">\r\n\r\n\r\n                                        <tr>\r\n                                            <td className=\"td-actions total_comm text-right\">\r\n\r\n                                                Total : $ {' '}\r\n                                                {/* {toHistoryOrderInfo[0].total} */}\r\n                                                <NumberFormat value={allHistoryRecord.history_info} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                            </td>\r\n                                        </tr>\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>}\r\n            </div>\r\n        </div >\r\n\r\n    );\r\n}\r\n\r\nexport default Closeposition;\r\n","const Data = {\r\n \r\n  tablePage: {\r\n    items: [\r\n      {id: 1,lot:'Buy 10 Lot', closed: 'Closed P/L', commission: 'Commission', swap: 'Swap', total: 'Total', price:'$ 1110',textA: 'Account A'},\r\n      {id: 2, lot:'Sell 10 Lot', closed: 'Closed P/L', commission: 'Commission', swap: 'Swap', total: 'Total', price:'$ 1111', textA: 'Account B'},\r\n    ]\r\n  },\r\n  dashBoardPage: {\r\n    items: [\r\n      {id: 1, title: 'Balance', textA: 'Account A', textB: 'Account B',price:'$ 400'},\r\n      {id: 2, title: 'Equity',textA: 'Account A', textB: 'Account B',price:'$ 400'},\r\n      {id: 3, title: 'Margin', textA: 'Account A', textB: 'Account B',price:'$ 400'},\r\n      {id: 4, title: 'Free Margin', textA: 'Account A', textB: 'Account B',price:'$ 400'},\r\n      {id: 5, title: 'Margin %', textA: 'Account A', textB: 'Account B',price:'$ 400'},\r\n      {id: 5, title: 'Unrealized P/L', textA: 'Account A', textB: 'Account B',price:'$ 400'}\r\n    ],\r\n  }\r\n};\r\n\r\nexport default Data;\r\n","import React, { useState, Fragment } from 'react';\r\nimport { Collapse } from 'reactstrap';\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport Data from './Data';\r\n\r\nexport default function Openposition(props) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const { allOpenRecord, fromOpenOrderInfo, toOpenOrderInfo, } = props;\r\n\r\n\r\n  let fromsum = 0;\r\n  let tosum = 0;\r\n  let fromSymbols = '';\r\n  let toSymbols = '';\r\n  if (allOpenRecord && Object.entries(allOpenRecord).length > 0) {\r\n    fromSymbols = JSON.parse(allOpenRecord.from_symbols);\r\n    fromSymbols = (fromSymbols).map(data => data).join(', ');\r\n    toSymbols = JSON.parse(allOpenRecord.to_symbols);\r\n    toSymbols = (toSymbols).map(data => data).join(', ')\r\n  }\r\n  // if(fromOpenOrderInfo && fromOpenOrderInfo.length>0){\r\n  //   fromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\r\n  // }\r\n  // if(toOpenOrderInfo && toOpenOrderInfo.length>0){\r\n  //   tosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n  // }\r\n  if (fromOpenOrderInfo && fromOpenOrderInfo.length > 0) {\r\n    // if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\r\n    //   fromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\r\n    // }else{\r\n    fromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\r\n    // }\r\n  }\r\n  if (toOpenOrderInfo && toOpenOrderInfo.length > 0) {\r\n    // if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\r\n    //   tosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap);\r\n    // }else{\r\n    tosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n    // }\r\n    // opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n  }\r\n\r\n  let sumOfTotal = tosum + fromsum;\r\n  let noRecord = ((fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total == null) && (toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total == null)) ? true : false;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"openpositions symbol-box terminal-head-box\" style={{ margin: '20px 0px' }}>\r\n        <span className=\"p-text\">Unrealized Profit/Loss</span>\r\n        {/* <span className=\"icon-style\" onClick={toggle}>\r\n          {!isOpen ?\r\n            <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\r\n            :\r\n            <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\r\n          }\r\n        </span> */}\r\n      </div>\r\n\r\n      <div>\r\n        {/* <Collapse isOpen={isOpen}> */}\r\n        <Row>\r\n\r\n\r\n\r\n          {/* {Data.tablePage.items.map((item, index) =>\r\n                  <Col md={6} key={index}>\r\n                    <div className=\"card\">\r\n                      <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\r\n                      </div>\r\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                        <table className=\"table\">\r\n                          <tbody>\r\n                            <tr><td>{item.lot} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.commission} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.swap} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.total} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                )} */}\r\n\r\n          {/* {(allOpenRecord && allOpenRecord.length>0) && allOpenRecord.map((item, index) =>\r\n                    \r\n                    <Col md={6} key={index}>\r\n                            <div className=\"card\">\r\n                            <div className=\"header\">\r\n                              <h5 className={item.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{item.account.login}</h5>\r\n                              <h6 style={{fontSize:10}} className={'colorDarkBlue'}>({item.account.alias})</h6>\r\n                            </div>\r\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>\r\n                                            {item.order_type ===0 ? 'BUY ' : 'SELL ' } \r\n                                            {item.lots} {(item.lots>1) ? 'Lots':'Lot'}\r\n                                        </td>\r\n                                        <td className=\"td-actions text-right\"> {''}</td>\r\n                                    </tr>\r\n                                    <tr><td>Floating P/L </td>\r\n                                        <td className=\"td-actions text-right\">$ {item.profit}</td>\r\n                                    </tr>\r\n                                    <tr><td>Commission </td>\r\n                                        <td className=\"td-actions text-right\">$ {item.commission}</td>\r\n                                    </tr>\r\n                                    <tr><td>Swap </td>\r\n                                        <td className=\"td-actions text-right\">$ {item.swap}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Total </td>\r\n                                        <td className=\"td-actions text-right\">\r\n                                          $ {Math.floor(item.commission + item.swap + item.profit)}\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                </table>\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                        </Col>\r\n                )} */}\r\n          {/* {(allOpenRecord && allOpenRecord.length>0) &&\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <div>\r\n                            <div className=\"total-box\">\r\n                                <span className=\"text\">Sum of open positions</span>\r\n                                <span className=\"text\" style={{ float: 'right' }}>$ {sumOfTotal}</span>\r\n                            </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                } */}\r\n          {(noRecord) ?\r\n            <div className=\"text-center\">\r\n              No Record Found!\r\n                    </div>\r\n            :\r\n            <Fragment>\r\n              {(fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total !== null) ?\r\n\r\n                <Col md={6}>\r\n                  <div className=\"card\">\r\n                    <div className=\"header\">\r\n                      <h5 className={allOpenRecord.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{allOpenRecord.accountFromInfo[0].login}</h5>\r\n                      <h6 style={{ fontSize: 10 }} className={'colorDarkBlue'}>({allOpenRecord.accountFromInfo[0].alias})</h6>\r\n                    </div>\r\n                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                      <table className=\"table\">\r\n                        <tbody>\r\n                          <tr>\r\n                            <span className=\"symbolStyle \">{fromSymbols}</span>\r\n                          </tr>\r\n                          {/* Buy 10 Lot  */}\r\n                          <tr>\r\n                            <td>\r\n                              {fromOpenOrderInfo[0].order_type == 0 ? 'BUY ' : 'SELL '}\r\n                              <NumberFormat\r\n                                                    value={fromOpenOrderInfo[0].lots}\r\n                                                    displayType={\"text\"}\r\n                                                    thousandSeparator={true}\r\n                                                    decimalScale={2}\r\n                                                  /> {' '}\r\n                               {(fromOpenOrderInfo[0].lots > 1) ? 'Lots' : 'Lot'}\r\n                            </td>\r\n                            <td className=\"td-actions text-right\"> {''}</td>\r\n                          </tr>\r\n                          {/* <tr><td>{(fromOpenOrderInfo[0].lots>1) ? 'Lots':'Lot'}</td>\r\n                                        <td className=\"td-actions text-right\">{fromOpenOrderInfo[0].lots}</td>\r\n                                    </tr> */}\r\n                          <tr><td>Floating P/L </td>\r\n                            <td className=\"td-actions text-right\">$ {' '}\r\n                              {/* {fromOpenOrderInfo[0].profit} */}\r\n                              <NumberFormat value={fromOpenOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                            </td>\r\n                          </tr>\r\n                          <tr><td>Commission </td>\r\n                            <td className=\"td-actions text-right\">$ {' '}\r\n                              {/* {fromOpenOrderInfo[0].commission} */}\r\n                              <NumberFormat value={fromOpenOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                            </td>\r\n                          </tr>\r\n                          <tr><td>Swap </td>\r\n                            <td className=\"td-actions text-right\">$ {' '}\r\n                              {/* {fromOpenOrderInfo[0].swap} */}\r\n                              {/* {allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length > 0 ?\r\n                                  <NumberFormat value={allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                  // (allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].swap) \r\n                                  : */}\r\n                              <NumberFormat value={fromOpenOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                              {/* // fromOpenOrderInfo[0].swap */}\r\n                              {/* } */}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>Total </td>\r\n                            <td className=\"td-actions text-right\">$ {' '}\r\n                              {/* $ {Math.floor(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)} */}\r\n                              {/* {allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length > 0 ?\r\n                                  <NumberFormat value={(fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} /> */}\r\n                              {/* // Math.floor(fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap) \r\n                                  // : */}\r\n                              <NumberFormat value={(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                              {/* //  Math.floor(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)\r\n                                // } */}\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n                :\r\n                <Col md={6}>\r\n                  <div className=\"card noRecordCol\"> No Record Found</div>\r\n                </Col>\r\n              }\r\n\r\n              {(toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total !== null) ?\r\n\r\n                <Col md={6}>\r\n                  <div className=\"card\">\r\n                    <div className=\"header\">\r\n                      <h5 className={allOpenRecord.id == '1' ? 'acntText color2' : 'acntText color2'}>{allOpenRecord.accountToInfo[0].login}</h5>\r\n                      <h6 style={{ fontSize: 10 }} className={'color2'}>({allOpenRecord.accountToInfo[0].alias})</h6>\r\n                    </div>\r\n                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                      <table className=\"table\">\r\n                        <tbody>\r\n                          {/* Buy 10 Lot  */}\r\n                          <tr>\r\n                            <span className=\"symbolStyle\">{toSymbols}</span>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                              {toOpenOrderInfo[0].order_type == 0 ? 'BUY ' : 'SELL '}\r\n                              <NumberFormat\r\n                                                    value={toOpenOrderInfo[0].lots}\r\n                                                    displayType={\"text\"}\r\n                                                    thousandSeparator={true}\r\n                                                    decimalScale={2}\r\n                                                  /> {' '}\r\n                               {(toOpenOrderInfo[0].lots > 1) ? 'Lots' : 'Lot'}\r\n                            </td>\r\n                            <td className=\"td-actions text-right\"> {''}</td>\r\n                          </tr>\r\n                          {/* <tr><td>{(fromOpenOrderInfo[0].lots>1) ? 'Lots':'Lot'}</td>\r\n                                        <td className=\"td-actions text-right\">{fromOpenOrderInfo[0].lots}</td>\r\n                                    </tr> */}\r\n                          <tr><td>Floating P/L </td>\r\n                            <td className=\"td-actions text-right\">$ {' '}\r\n                              {/* {toOpenOrderInfo[0].profit} */}\r\n                              <NumberFormat value={toOpenOrderInfo[0].profit !== null ? toOpenOrderInfo[0].profit : 0} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                            </td>\r\n                          </tr>\r\n                          <tr><td>Commission </td>\r\n                            <td className=\"td-actions text-right\">$ {' '}\r\n                              {/* {toOpenOrderInfo[0].commission} */}\r\n                              <NumberFormat value={toOpenOrderInfo[0].commission !== null ? toOpenOrderInfo[0].commission : 0} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                            </td>\r\n                          </tr>\r\n                          <tr><td>Swap </td>\r\n                            <td className=\"td-actions text-right\">$ {' '}\r\n                              {/* {toOpenOrderInfo[0].swap} */}\r\n                              {/* {allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length > 0 ?\r\n                                  // (allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].swap) \r\n                                  <NumberFormat value={(allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                  : */}\r\n                              <NumberFormat value={(toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                              {/* // toOpenOrderInfo[0].swap\r\n                                // } */}\r\n                            </td>\r\n\r\n                          </tr>\r\n                          <tr>\r\n                            <td>Total </td>\r\n                            <td className=\"td-actions text-right\"> $ {' '}\r\n                              {/* {allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length > 0 ?\r\n                                  //  Math.floor(toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap)\r\n                                  <NumberFormat value={(toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                  : */}\r\n                              <NumberFormat value={(toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                              {/* \r\n                                  //  Math.floor(toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit)\r\n                                } */}\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n                :\r\n                <Col md={6}>\r\n                  <div className=\"card noRecordCol\"> No Record Found</div>\r\n                </Col>\r\n              }\r\n              {\r\n                sumOfTotal != 0 &&\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <div>\r\n                      <div className=\"total-box\">\r\n                        <span className=\"text\">Sum of open positions</span>\r\n                        <span className=\"text\" style={{ float: 'right' }}>$ {' '}\r\n                          <NumberFormat value={sumOfTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                          {/* {sumOfTotal} */}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              }\r\n            </Fragment>\r\n          }\r\n        </Row>\r\n        {/* </Collapse> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import config from './constant/config';\r\n\r\nconst axios = require('axios');\r\n\r\n\r\nconst myInitObject = {}\r\nexport default myInitObject;\r\n\r\n\r\nexport const api = () => {\r\n    let token = JSON.parse(localStorage.getItem(\"accessToken\"));\r\n    // Object.keys(myInitObject).forEach(key=> myInitObject[key]=null)\r\n    // console.log(token, '-----------------+++++');\r\n    axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade', { headers: { 'x-access-token': token } })\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.fetchAllHistoryTrade = response.data\r\n                myInitObject.responsHT = true\r\n            }\r\n        })\r\n\r\n    axios.get(config.baseurl + '/accounts/fetchAllOpenTrade', { headers: { 'x-access-token': token } })\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.fetchAllOpenTrade = response.data\r\n                myInitObject.responsOT = true\r\n            }\r\n        })\r\n\r\n    axios.get(config.baseurl + '/accounts/fetchAllAccounts')\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.fetchAllAccounts = response.data\r\n                myInitObject.responsAC = true\r\n            }\r\n        });\r\n\r\n    axios.get(config.baseurl + '/filter/fetchActivefilterdata', { headers: { 'x-access-token': token } })\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.fetchActivefilterdata = response.data\r\n                myInitObject.responsAF = true\r\n            }\r\n        });\r\n\r\n    axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime', { headers: { 'x-access-token': token } })\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.fetchLastUpdatedTime = response.data\r\n                myInitObject.responsLUT = true\r\n            }\r\n        });\r\n\r\n    axios.get(config.baseurl + '/accounts/fetchStatusData', { headers: { 'x-access-token': token } })\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.fetchStatusData = response.data\r\n                myInitObject.responsSD = true\r\n            }\r\n        });\r\n\r\n    axios.get(config.baseurl + '/profilepositions/calculatingOpenTrade', { headers: { 'x-access-token': token } })\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.calculatingOpenTrade = response.data\r\n                myInitObject.responsCOT = true\r\n\r\n                axios.get(config.baseurl + '/profilepositions/calculatingHistoryTrade', { headers: { 'x-access-token': token } })\r\n                    .then(function (response) {\r\n                        if (response.status == 200) {\r\n                            myInitObject.calculatingHistoryTrade = response.data\r\n                            myInitObject.responsCHT = true\r\n\r\n                            axios.get(config.baseurl + '/profilepositions/calculatingCommission', { headers: { 'x-access-token': token } })\r\n                                .then(function (response) {\r\n                                    if (response.status == 200) {\r\n                                        myInitObject.calculatingCommission = response.data\r\n                                        myInitObject.responsCC = true\r\n                                    }\r\n                                })\r\n                        }\r\n                    })\r\n            }\r\n        })\r\n    axios.get(config.baseurl + '/accounts/fetchAllSymbol')\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.fetchAllSymbol = response.data\r\n                myInitObject.responsAS = true\r\n            }\r\n        })\r\n    axios.get(config.baseurl + '/filter/fetchdailyswaps')\r\n    .then(function (response) {\r\n        if (response.status == 200) {\r\n            myInitObject.fetchdailyswaps = response.data\r\n            myInitObject.responsDS = true\r\n        }\r\n    })\r\n    axios.get(config.baseurl + '/users/allAccounts?page=1')\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.usersAllAccounts = response.data\r\n                myInitObject.responsAAC = true\r\n            }\r\n        })\r\n\r\n    axios.get(config.baseurl + '/filter/fetchfilterdata?page=1', { headers: { 'x-access-token': token } })\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.fetchfilterdata = response.data\r\n                myInitObject.responsFF = true\r\n            }\r\n        })\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\r\n// import SweetAlert from 'react-bootstrap-sweetalert';\r\nimport swal from \"sweetalert\";\r\nimport config from \"../constant/config.js\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport myInitObject from \"../api\";\r\nconst axios = require(\"axios\");\r\n\r\nlet intervalSet;\r\nlet timerWaitInterval;\r\nlet timerWait = 100;\r\nclass Innerlogin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loginForm: false,\r\n      setShow: false,\r\n      show: true,\r\n      login: \"\",\r\n      password: \"\",\r\n      broker: \"\",\r\n      alias: \"\",\r\n      is_server: false,\r\n      alert: null,\r\n      persons: [],\r\n      shwPwd: false,\r\n      shwPwd: false,\r\n      shwLogin: false,\r\n      shwbroker: false,\r\n      accountlist: [],\r\n      count: \"\",\r\n      pages: \"\",\r\n      page: 1,\r\n      editForm: false,\r\n      detailForm: false,\r\n      editData: [],\r\n      edituser: \"\",\r\n      editserver: \"\",\r\n      editpass:\"\",\r\n      editalias: \"\",\r\n      editstatus: \"\",\r\n      id: \"\",\r\n      deleteData: [],\r\n      showDelete: false,\r\n      // tryAgainConnection: false,\r\n      currentAddLogin: null,\r\n      currentAddBroker: null,\r\n      currentAddAlias: null,\r\n      timerShow: false,\r\n      closebtn: true,\r\n      dateTime: \"\",\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n  }\r\n  // delete alert\r\n  // deleteThisGoal() {\r\n  //     const getAlert = () => (\r\n  //         <SweetAlert\r\n  //             success\r\n  //             title=\"Woot!\"\r\n  //             onConfirm={() => this.hideAlert()}\r\n  //         >\r\n  //             Hello world!\r\n  //       </SweetAlert>\r\n  //     );\r\n\r\n  //     this.setState({\r\n  //         alert: getAlert()\r\n  //     });\r\n  // }\r\n  fectheAllAccount() {\r\n    let self = this;\r\n    axios\r\n      .get(config.baseurl + `/users/allAccounts?page=${self.state.page}`)\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          self.setState({\r\n            accountlist: response.data.rows,\r\n            count: response.data.count,\r\n            pages: response.data.pages,\r\n          });\r\n        }\r\n      });\r\n    // console.log(response.status,\"accountlist\");\r\n  }\r\n\r\n  handlePageClick = (data) => {\r\n    this.setState({ page: data.selected + 1 }, () => {\r\n      this.fectheAllAccount(this.state.page);\r\n    });\r\n  };\r\n  changeServer = (e) => {\r\n    this.setState({ is_server: !this.state.is_server }, () => {});\r\n    console.log(this.state.is_server, \"ooooo\");\r\n  };\r\n  onChange(e) {\r\n    this.setState({ error: \"\" });\r\n    if (e.target.name === \"login\") {\r\n      const re = /^[0-9\\b]+$/;\r\n      if (e.target.value === \"\" || re.test(e.target.value)) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n      } else if (e.target.value !== re) {\r\n        this.setState({ error: \"alphabet\" });\r\n      }\r\n    } else {\r\n      this.setState({ [e.target.name]: e.target.value.trim() });\r\n    }\r\n  }\r\n\r\n  checkUserConnected = (login, broker) => {\r\n    let self = this;\r\n    axios\r\n      .post(config.baseurl + \"/users/checkUserConnected\", {\r\n        login: login,\r\n        broker: broker,\r\n      })\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          if (response.data.connected) {\r\n            self.setState({\r\n              currentAddLogin: null,\r\n              currentAddBroker: null,\r\n              currentAddAlias: null,\r\n            });\r\n            clearInterval(intervalSet);\r\n            clearInterval(timerWaitInterval);\r\n            self.setState({ timerShow: false });\r\n\r\n            timerWait = 100;\r\n            // self.setState({ tryAgainConnection: false });\r\n            self.setState({ loginForm: false });\r\n            self.handleClose();\r\n            self.fectheAllAccount();\r\n            // swal({\r\n            //     text: \"Connected\",\r\n            //     timer: 2000,\r\n            //     button: false\r\n            // })\r\n          }\r\n        } else {\r\n        }\r\n      });\r\n  };\r\n\r\n  setIntervalCustom = () => {\r\n    let self = this;\r\n    var name = \"Authorization Process Failed\";\r\n    var content = document.createElement(\"div\");\r\n    content.innerHTML = \" <strong>\" + name + \"</strong>\";\r\n\r\n    timerWaitInterval = setInterval(function () {\r\n      timerWait--;\r\n      if (timerWait <= 0) {\r\n        self.setState({\r\n          currentAddLogin: null,\r\n          currentAddBroker: null,\r\n          currentAddAlias: null,\r\n        });\r\n        clearInterval(intervalSet);\r\n        clearInterval(timerWaitInterval);\r\n        self.setState({ timerShow: false });\r\n        self.setState({ loginForm: false });\r\n        self.setState({ closebtn: true });\r\n        timerWait = 100;\r\n        swal({\r\n          content: content,\r\n          timer: 2000,\r\n          button: false,\r\n        });\r\n      } else {\r\n        self.setState({ timerShow: true });\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const userdetail = {\r\n      login: this.state.login,\r\n      password: this.state.password,\r\n      broker: this.state.broker,\r\n      alias: this.state.alias,\r\n      is_server: this.state.is_server ? 1 : 0,\r\n    };\r\n    if (this.state.login == \"\") {\r\n      this.setState({ error: \"login\" });\r\n    } else if (this.state.password == \"\") {\r\n      this.setState({ error: \"password\" });\r\n    } else if (this.state.broker == \"\") {\r\n      this.setState({ error: \"broker\" });\r\n    } else {\r\n      this.setState({ error: \"\" });\r\n    }\r\n    if (\r\n      this.state.login !== \"\" &&\r\n      this.state.password !== \"\" &&\r\n      this.state.broker !== \"\"\r\n    ) {\r\n      // {\r\n      //     swal({\r\n      //         text: \"User Already Connected\",\r\n      //         timer: 2000,\r\n      //         button: false\r\n      //     })\r\n      // }\r\n      let self = this;\r\n      self.setState({ closebtn: false });\r\n      axios\r\n        .post(config.baseurl + \"/users/addUser\", userdetail)\r\n        .then(function (response) {\r\n          if (response.data.status === true) {\r\n            self.setIntervalCustom();\r\n            self.fectheAllAccount();\r\n            self.setState({\r\n              currentAddLogin: userdetail.login,\r\n              currentAddBroker: userdetail.broker,\r\n              currentAddAlias: userdetail.alias,\r\n            });\r\n            intervalSet = setInterval(function () {\r\n              self.checkUserConnected(userdetail.login, userdetail.broker);\r\n            }, 5000);\r\n          }\r\n          if (response.data.status == 202) {\r\n            swal({\r\n              text: \"User doesn't exist\",\r\n              timer: 2000,\r\n              button: false,\r\n            });\r\n          }\r\n          if (response.data.status == \"500\") {\r\n            swal({\r\n              text: \"User Already Connected!\",\r\n              timer: 2000,\r\n              button: false,\r\n            });\r\n            self.setState({ closebtn: true });\r\n          } else if (response.status == 201) {\r\n            swal({\r\n              title: \"Done!\",\r\n              text: response.data,\r\n              // icon: \"{response.status == 200 ? 'warning ':'success'}\",\r\n              timer: 2000,\r\n              button: false,\r\n            });\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          self.handleClose();\r\n        });\r\n\r\n      /////////////////// redirect to dashboard\r\n      // login(user).then(res => {\r\n      //     if (res) {\r\n      //         this.props.history.push(`\\profile`)\r\n      //     }\r\n      // })\r\n    }\r\n  }\r\n  onUpdate(e) {\r\n    e.preventDefault();\r\n    const userdetail = {\r\n      id: this.state.id,\r\n      user: this.state.edituser,\r\n      broker: this.state.editserver,\r\n      alias: this.state.editalias,\r\n      password: this.state.editpass,\r\n      is_server: this.state.is_server ? 1 : 0,\r\n    };\r\n    let self = this;\r\n    axios\r\n      .post(config.baseurl + \"/users/updateuser\", userdetail)\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          // self.setState({ accountlist: response.data.rows })\r\n          self.fectheAllAccount();\r\n          self.handleCloseEdit();\r\n        }\r\n      })\r\n      .catch(function (error) {});\r\n  }\r\n  // checkValidUser = ()=> {\r\n  //     console.log(this.state,'loginnnnnnnnnnnnnnnnnnnnnnnn')\r\n  //     const userdetail = {\r\n  //         login: this.state.login,\r\n  //         password: this.state.password,\r\n  //         broker: this.state.broker,\r\n  //         alias: this.state.alias\r\n  //     }\r\n  //     axios.get(config.baseurl + '/accounts/matchUser',userdetail)\r\n  //     .then(function (response) {\r\n\r\n  //         if (response.status == 200) {\r\n  //             // alert(response.data)\r\n  //             swal({\r\n  //                 title: \"Done!\",\r\n  //                 text: response.data,\r\n  //                 // icon: \"{response.status == 200 ? 'warning ':'success'}\",\r\n  //                 timer: 2000,\r\n  //                 button: false\r\n  //             })\r\n\r\n  //         }\r\n  //         // console.log(response);\r\n  //     })\r\n  //     .catch(function (error) {\r\n  //         console.log(error);\r\n  //     });\r\n  // }\r\n  toogle = () => {\r\n    this.setState({ loginForm: !this.state.loginForm });\r\n    this.setState({\r\n      login: \"\",\r\n      password: \"\",\r\n      broker: \"\",\r\n      alias: \"\",\r\n      is_server: false,\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ loginForm: false });\r\n  };\r\n  handleCloseEdit = () => {\r\n    this.setState({ editForm: false });\r\n  };\r\n  handleCloseDetail = () => {\r\n    this.setState({ detailForm: false });\r\n  };\r\n  handleShow = () => {\r\n    this.setState({ setShow: true });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fectheAllAccount();\r\n    setInterval(() => {\r\n      if (myInitObject.responsLUT === undefined) {\r\n        console.log(\"no data\");\r\n      } else {\r\n        this.setState({\r\n          //last update time\r\n          dateTime: myInitObject.fetchLastUpdatedTime.filteredInfoTime,\r\n        });\r\n      }\r\n    }, 1000);\r\n  }\r\n  createTr = () => {\r\n    return (\r\n      this.state.accountlist.length > 0 &&\r\n      this.state.accountlist.map((item, index) => {\r\n        return (\r\n          <tr key={index}>\r\n            <th scope=\"row\">{index + 1}</th>\r\n            <td>{item.login}</td>\r\n            <td>{item.broker}</td>\r\n            <td>{item.alias}</td>\r\n            <td style={{ fontWeight: 600 }}>\r\n              {item.launched == 1 ? \"Connected\" : \"Disconnected\"}\r\n            </td>\r\n            <td>\r\n              <a href=\"\" onClick={(e) => this.viewFilter(e, item)}>\r\n                <i className=\"fa fa-eye facolor\" aria-hidden=\"true\"></i>\r\n              </a>\r\n              {JSON.parse(localStorage.getItem(\"currentUser\"))[0].role !==\r\n                \"user\" && (\r\n                <>\r\n                  <a href=\"\" onClick={(e) => this.editFilter(e, item)}>\r\n                    <i\r\n                      className=\"fa fa-pencil-square-o facolor\"\r\n                      aria-hidden=\"true\"\r\n                    ></i>\r\n                  </a>\r\n                  <a href=\"\" onClick={(e) => this.deleteFilter(e, item)}>\r\n                    <i\r\n                      className=\"pointer fa fa-trash facolor\"\r\n                      aria-hidden=\"true\"\r\n                    ></i>\r\n                  </a>\r\n                </>\r\n              )}\r\n              {/* <a href=\"\" onClick={(e)=> this.deleteFilter(e,item)}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></a> */}\r\n            </td>\r\n          </tr>\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  deleteFilter(e, data) {\r\n    e.preventDefault();\r\n    this.setState({ deleteData: data, showDelete: true });\r\n  }\r\n  deletepopupClick(e) {\r\n    e.preventDefault();\r\n    let Data = {\r\n      id: this.state.deleteData.id,\r\n    };\r\n    let self = this;\r\n    axios\r\n      .post(config.baseurl + \"/users/deleteuser\", Data)\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          self.setState({ showDelete: false });\r\n          self.fectheAllAccount();\r\n        }\r\n      });\r\n  }\r\n  deletepopupclose(e) {\r\n    e.preventDefault();\r\n    this.setState({ showDelete: false });\r\n  }\r\n  editFilter(e, data) {\r\n    e.preventDefault();\r\n    this.setState({\r\n      editForm: true,\r\n      editData: data,\r\n      id: data.id,\r\n      edituser: data.login,\r\n      editserver: data.broker,\r\n      editalias: data.alias,\r\n    });\r\n  }\r\n  editAlias(e) {\r\n    this.setState({ editalias: e.target.value });\r\n  }\r\n  editPass(e) {\r\n    this.setState({ editpass: e.target.value });\r\n  }\r\n  viewFilter(e, data) {\r\n    e.preventDefault();\r\n    this.setState({\r\n      detailForm: true,\r\n      edituser: data.login,\r\n      editserver: data.broker,\r\n      editalias: data.alias,\r\n      editstatus: data.status,\r\n    });\r\n  }\r\n  render() {\r\n    let val = this.state.page;\r\n    return (\r\n      <div className=\"content\">\r\n        <Row>\r\n          <div className=\"lastUpdate\">\r\n            <span> Last Updated : </span>\r\n            {this.state.dateTime}(UTC){\" \"}\r\n          </div>\r\n        </Row>\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12} sm={6}>\r\n              <div className=\"terminal-box\">\r\n                <span className=\"terminal-text\">Terminal Accounts</span>\r\n                {/* <div style={{ padding: '20px' }}>\r\n                                    <a\r\n                                        onClick={() => this.deleteThisGoal()}\r\n                                        className='btn btn-danger'\r\n                                    >\r\n                                        <i className=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete Goal\r\n                                     </a>\r\n                                    {this.state.alert}\r\n                                </div> */}\r\n              </div>\r\n              {JSON.parse(localStorage.getItem(\"currentUser\"))[0].role !==\r\n                \"user\" && (\r\n                <button className=\"pull-right add-button\" onClick={this.toogle}>\r\n                  Add New\r\n                </button>\r\n              )}\r\n\r\n              {this.state.loginForm && (\r\n                <Modal\r\n                  show={this.state.show}\r\n                  onHide={\r\n                    this.state.closebtn\r\n                      ? this.handleClose\r\n                      : () => console.log(\"error\")\r\n                  }\r\n                >\r\n                  {/* <Modal.Header closeButton>\r\n                                        <Modal.Title>Log In</Modal.Title>\r\n                                    </Modal.Header> */}\r\n                  <Modal.Body>\r\n                    <div className=\"form-box\">\r\n                      <Modal.Header\r\n                        closeButton={this.state.closebtn ? true : false}\r\n                      >\r\n                        <Modal.Title className=\"text-center\">\r\n                          <b>Log In</b>\r\n                        </Modal.Title>\r\n                      </Modal.Header>\r\n                      <form\r\n                        style={{ marginTop: \"20px\" }}\r\n                        onSubmit={this.onSubmit}\r\n                      >\r\n                        <label>User Name</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"Itext labelSet \"\r\n                          placeholder=\"Enter Username\"\r\n                          name=\"login\"\r\n                          value={this.state.login}\r\n                          onChange={this.onChange}\r\n                          disabled={this.state.currentAddLogin ? true : false}\r\n                          // onKeyUp={this.checkValidUser}\r\n                        ></input>\r\n\r\n                        {this.state.error == \"login\" && (\r\n                          <span style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                            Please enter Username{\" \"}\r\n                          </span>\r\n                        )}\r\n\r\n                        {this.state.error == \"alphabet\" && (\r\n                          <span style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                            \"Invalid format. login should contain only digits.\"\r\n                          </span>\r\n                        )}\r\n                        <br></br>\r\n                        <label className=\"labeAdjust\">Password</label>\r\n                        <input\r\n                          className=\"Itext labelSet\"\r\n                          placeholder=\"Password\"\r\n                          name=\"password\"\r\n                          type=\"password\"\r\n                          value={this.state.password}\r\n                          onChange={this.onChange}\r\n                          disabled={this.state.currentAddLogin ? true : false}\r\n                        ></input>\r\n                        {this.state.error == \"password\" && (\r\n                          <span style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                            Please enter Password{\" \"}\r\n                          </span>\r\n                        )}\r\n                        <br></br>\r\n                        <label className=\"labeAdjust\">Server</label>\r\n                        <input\r\n                          className=\"Itext labelSet\"\r\n                          name=\"broker\"\r\n                          placeholder=\"Server\"\r\n                          value={this.state.broker}\r\n                          onChange={this.onChange}\r\n                          disabled={this.state.currentAddBroker ? true : false}\r\n                        ></input>\r\n                        {this.state.error == \"broker\" && (\r\n                          <span style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                            Please enter Server{\" \"}\r\n                          </span>\r\n                        )}\r\n                        <br></br>\r\n                        <label className=\"labeAdjust\">Alias</label>\r\n                        <input\r\n                          className=\"Itext labelSet\"\r\n                          placeholder=\"Alias\"\r\n                          value={this.state.alias}\r\n                          onChange={this.onChange}\r\n                          name=\"alias\"\r\n                          disabled={this.state.currentAddAlias ? true : false}\r\n                        ></input>\r\n                        <br></br>\r\n                        <div className=\"chceckbox\">\r\n                          <label className=\"checkbox-inline\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              defaultChecked={this.state.is_server}\r\n                              onChange={(e) => this.changeServer(e)}\r\n                            />\r\n                            <b>Is Server</b>\r\n                          </label>\r\n                        </div>\r\n                        {this.state.timerShow && (\r\n                          <p>\r\n                            Connecting to server... {timerWait} seconds remains\r\n                          </p>\r\n                        )}\r\n                        <div className=\" topadjust clearfix\">\r\n                          {/* {this.state.tryAgainConnection === false ? */}\r\n                          {/* ( */}\r\n                          {this.state.timerShow == false && (\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"save\"\r\n                              className={\r\n                                !this.state.login ||\r\n                                !this.state.password ||\r\n                                !this.state.broker\r\n                                  ? \"loginButton\"\r\n                                  : \"loginButton save2 save1\"\r\n                              }\r\n                            >\r\n                              Submit\r\n                            </button>\r\n                          )}\r\n                          {/* ) */}\r\n                          {/* //     :\r\n                                                    //     (this.state.timerShow == false && <div ></div>)\r\n                                                    // } */}\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </Modal.Body>\r\n                  {/* <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                                            Close\r\n                                  </Button>\r\n                                        \r\n                                    </Modal.Footer> */}\r\n                </Modal>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n          <div style={{ background: \"#ffffff\" }}>\r\n            <Row>\r\n              <Col md={12}>\r\n                <div style={{ padding: \"10px\" }}>\r\n                  <table className=\"table table-striped table-bordered\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th scope=\"col\">Sr.No.</th>\r\n                        <th scope=\"col\">User Name</th>\r\n                        <th scope=\"col\">Server</th>\r\n                        <th scope=\"col\">Alias</th>\r\n                        <th scope=\"col\">Status</th>\r\n                        <th scope=\"col\">Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {/* {this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => { */}\r\n                      {/* // console.log(\"hhhhhhhhhhh\") */}\r\n                      {this.createTr()}\r\n                      {/* })} */}\r\n                      {/* <tr>\r\n                                                <th scope=\"row\">2</th>\r\n                                                <td>Jacob</td>\r\n                                                <td>Thornton</td>\r\n                                                <td>5.1.2.9</td>\r\n                                                <td>Connected</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th scope=\"row\">3</th>\r\n                                                <td>Larry</td>\r\n                                                <td>the Bird</td>\r\n                                                <td>ab@123</td>\r\n                                                <td>Connected</td>\r\n                                            </tr> */}\r\n                    </tbody>\r\n                  </table>\r\n                  <ReactPaginate\r\n                    previousLabel={\"prev\"}\r\n                    nextLabel={\"next\"}\r\n                    breakLabel={\"...\"}\r\n                    pageCount={this.state.pages}\r\n                    marginPagesDisplayed={9}\r\n                    pageRangeDisplayed={9}\r\n                    onPageChange={(e) => this.handlePageClick(e)}\r\n                    containerClassName={\"pagination\"}\r\n                    subContainerClassName={\"pages pagination\"}\r\n                    activeClassName={\"active\"}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <div className=\"centerbtn\"></div>\r\n            </Row>\r\n          </div>\r\n          {this.state.showDelete && (\r\n            <div className=\"delete_popup\">\r\n              <h3>Are you sure ?</h3>\r\n              <span\r\n                className=\"pointer dltbtn\"\r\n                onClick={(e) => this.deletepopupClick(e)}\r\n              >\r\n                Delete\r\n              </span>\r\n              <span\r\n                className=\"pointer closebtn\"\r\n                onClick={(e) => this.deletepopupclose(e)}\r\n              >\r\n                Close\r\n              </span>\r\n            </div>\r\n          )}\r\n        </Grid>\r\n\r\n        {this.state.editForm && (\r\n          <Modal show={this.state.show} onHide={this.handleCloseEdit}>\r\n            {/* <Modal.Header closeButton>\r\n                                        <Modal.Title>Log In</Modal.Title>\r\n                                    </Modal.Header> */}\r\n            <Modal.Body>\r\n              <div className=\"form-box\">\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title className=\"text-center\">\r\n                    <b>Edit</b>\r\n                  </Modal.Title>\r\n                </Modal.Header>\r\n                <form style={{ marginTop: \"20px\" }} onSubmit={this.onUpdate}>\r\n                  <label>User</label>\r\n                  <input\r\n                    className=\"Itext\"\r\n                    disabled\r\n                    name=\"broker\"\r\n                    placeholder=\"Server\"\r\n                    value={this.state.edituser}\r\n                  ></input>\r\n                  <label className=\"labeAdjust\">Password</label>\r\n                  <input\r\n                    className=\"Itext labelSet\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value={this.state.editpass}\r\n                    onChange={(e) => this.editPass(e)}\r\n                  ></input>\r\n                  <label>Server</label>\r\n                  <input\r\n                    className=\"Itext\"\r\n                    disabled\r\n                    name=\"broker\"\r\n                    placeholder=\"Server\"\r\n                    value={this.state.editserver}\r\n                  ></input>\r\n                  <label>Alias</label>\r\n                  <input\r\n                    className=\"Itext\"\r\n                    placeholder=\"Alias\"\r\n                    value={this.state.editalias}\r\n                    name=\"alias\"\r\n                    onChange={(e) => this.editAlias(e)}\r\n                  ></input>\r\n                  <div className=\"clearfix\">\r\n                    <button type=\"submit\" className=\"save\">\r\n                      Update\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                                            Close\r\n                                  </Button>\r\n                                        \r\n                                    </Modal.Footer> */}\r\n          </Modal>\r\n        )}\r\n\r\n        {this.state.detailForm && (\r\n          <Modal show={this.state.show} onHide={this.handleCloseDetail}>\r\n            {/* <Modal.Header closeButton>\r\n                                        <Modal.Title>Log In</Modal.Title>\r\n                                    </Modal.Header> */}\r\n            <Modal.Body>\r\n              <div className=\"form-box\">\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title className=\"text-center\">\r\n                    <b>Details</b>\r\n                  </Modal.Title>\r\n                </Modal.Header>\r\n                <div className=\"detail_div\">\r\n                  <table>\r\n                    <tr>\r\n                      <td>\r\n                        <label>User Name</label>\r\n                      </td>\r\n                      <td>\r\n                        <label>{this.state.edituser}</label>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <label>Server</label>\r\n                      </td>\r\n                      <td>\r\n                        <label>{this.state.editserver}</label>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <label>Alias</label>\r\n                      </td>\r\n                      <td>\r\n                        <label>{this.state.editalias}</label>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <label>Status</label>\r\n                      </td>\r\n                      <td>\r\n                        <label>\r\n                          {this.state.editstatus == 1\r\n                            ? \"Connected\"\r\n                            : \"Disconnected\"}\r\n                        </label>\r\n                      </td>\r\n                    </tr>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </Modal.Body>\r\n          </Modal>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Innerlogin;\r\n","import React, { Component } from 'react';\r\nimport { Collapse } from 'reactstrap';\r\nimport Select from 'react-select';\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\n// import Data from './Data';\r\nimport NumberFormat from 'react-number-format';\r\nimport Closeposition from 'views/Closeposition';\r\nimport Openposition from 'views/Openposition';\r\n\r\n// import config from '../constant/config.js';\r\nimport config from '../constant/config.js';\r\nimport myInitObject from '../api'\r\nconst axios = require('axios');\r\n\r\n// import Card from \"components/Card/Card.jsx\";\r\n// import { thArray, tdArray } from \"variables/Variables.jsx\";\r\n\r\nclass TableList extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      isOpen2: false,\r\n      allSymbols: [],\r\n      selectedOption: null,\r\n      allHistoryRecord: [],\r\n      allOpenRecord: [],\r\n      fromHistoryOrderInfo: [],\r\n      toHistoryOrderInfo: [],\r\n      commissionHistoryOrderInfo: [],\r\n      fromOpenOrderInfo: [],\r\n      toOpenOrderInfo: [],\r\n      filterlist: [],\r\n      allSymbols: [],\r\n      symbolsObj: [],\r\n      activeProfileName: ''\r\n    }\r\n\r\n  }\r\n  // toggle = () => {\r\n  //   this.setState({ isOpen: !this.state.isOpen })\r\n  // }\r\n  // componentWillMount() {\r\n  //   let self = this;\r\n  // axios.get(config.baseurl + '/accounts/fetchAllSymbol')\r\n  // .then(function (response) {\r\n  //   if (response.status == 200) {\r\n  //     self.setState({ allSymbols: response.data.rows })\r\n  //   }\r\n  // })\r\n\r\n  // axios.get(config.baseurl + '/filter/fetchfilterdata')\r\n  // .then(function (response) {\r\n  //   if (response.status == 200) {\r\n  //     self.setState({ filterlist: response.data.rows })\r\n  //   }\r\n  // })\r\n\r\n  // axios.get(config.baseurl + '/filter/fetchActivefilterdata')\r\n  // .then(function (response) {\r\n  //   if (response.status == 200) {\r\n  //     if(response.data.rows && response.data.rows.length>0){\r\n  //       // let symbolsObj = (response.data.rows[0].symbols).map(data => { return ({value:data, label:data})})\r\n  //         self.setState({ filterlist: response.data.rows, allSymbols: response.data.rows[0].symbols, \r\n  //         // selectedOption:symbolsObj\r\n  //        })\r\n  //     }\r\n  //   }\r\n  // });\r\n  // }\r\n\r\n  componentDidMount() {\r\n    setInterval(() => {\r\n      if((myInitObject.responsHT &&\r\n        myInitObject.responsOT &&\r\n        myInitObject.responsAC ) === undefined){\r\n        // console.log('no data');\r\n      }else{ \r\n        this.setState({\r\n          //history trade\r\n          allHistoryRecord: myInitObject.fetchAllHistoryTrade.rows,\r\n          fromHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.fromHistoryOrderInfo,\r\n          toHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.toHistoryOrderInfo,\r\n          //open trade\r\n          allOpenRecord: myInitObject.fetchAllOpenTrade.rows,\r\n          fromOpenOrderInfo: myInitObject.fetchAllOpenTrade.fromOpenOrderInfo,\r\n          toOpenOrderInfo: myInitObject.fetchAllOpenTrade.toOpenOrderInfo,\r\n          //active filter data\r\n          filterlist: myInitObject.fetchActivefilterdata.rows,\r\n          activeProfileName: myInitObject.fetchActivefilterdata.rows[0].profile_name,\r\n        },() =>{\r\n          this.setState({ errorMassege:this.state.filterlist.length == 0 ?  true : false,})\r\n        })\r\n      }}, 1000)\r\n    // let self = this;\r\n    // axios.get(config.baseurl + '/filter/fetchActivefilterdata')\r\n    //   .then(function (response) {\r\n    //     if (response.status == 200) {\r\n    //       console.log(response, \"respp----------------->\")\r\n    //       self.setState({ filterlist: response.data.rows, })\r\n    //       if (self.state.filterlist.length == 0) {\r\n    //         self.setState({ errorMassege: true, })\r\n    //       }\r\n    //       else {\r\n    //         self.setState({ activeProfileName: response.data.rows[0].profile_name })\r\n    //       }\r\n    //     }\r\n    //   });\r\n    // axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\r\n    //   .then(function (response) {\r\n    //     // console.log(response.data, 'response.data his')\r\n    //     if (response.status == 200) {\r\n    //       // self.setState({ allHistoryRecord: response.data.rows })\r\n    //       self.setState({\r\n    //         allHistoryRecord: response.data.rows,\r\n    //         fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,\r\n    //         toHistoryOrderInfo: response.data.toHistoryOrderInfo,\r\n    //         commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\r\n    //       })\r\n    //     }\r\n    //   })\r\n    // // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\r\n    // // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\r\n    // axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\r\n    //   .then(function (response) {\r\n    //     if (response.status == 200) {\r\n\r\n    //       // self.setState({ allOpenRecord: response.data.rows })\r\n    //       self.setState({\r\n    //         allOpenRecord: response.data.rows,\r\n    //         fromOpenOrderInfo: response.data.fromOpenOrderInfo,\r\n    //         toOpenOrderInfo: response.data.toOpenOrderInfo\r\n    //       })\r\n    //     }\r\n    //   })\r\n  }\r\n\r\n\r\n\r\n\r\n  fetchDataAccordingSymbols = (symbol) => {\r\n    let self = this;\r\n    let { startdateFrom, startdateTo, enddateFrom, enddateTo, to_account_id, from_account_id } = this.state.filterlist[0];\r\n\r\n    let postData = { \"to_account_id\": to_account_id, \"from_account_id\": from_account_id, \"startdateFrom\": startdateFrom, \"startdateTo\": startdateTo, \"enddateFrom\": enddateFrom, \"enddateTo\": enddateTo, \"symbol\": symbol }\r\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolHistory', {'symbol':symbol})\r\n\r\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolHistory', postData)\r\n    axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\r\n      .then(function (response) {\r\n        // console.log(response.data, 'response.data his')\r\n        if (response.status == 200) {\r\n          // self.setState({ allHistoryRecord: response.data.rows })\r\n          self.setState({\r\n            allHistoryRecord: response.data.rows,\r\n            fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,\r\n            toHistoryOrderInfo: response.data.toHistoryOrderInfo,\r\n            commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\r\n\r\n          })\r\n        }\r\n      })\r\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\r\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\r\n    axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          // console.log(response.data, 'response.data open')\r\n\r\n          // self.setState({ allOpenRecord: response.data.rows })\r\n          self.setState({\r\n            allOpenRecord: response.data.rows,\r\n            fromOpenOrderInfo: response.data.fromOpenOrderInfo,\r\n            toOpenOrderInfo: response.data.toOpenOrderInfo\r\n          })\r\n        }\r\n      })\r\n  }\r\n\r\n  handleChange = selectedOption => {\r\n    this.setState({ selectedOption });\r\n    this.fetchDataAccordingSymbols(selectedOption.value);\r\n  };\r\n\r\n  renderSymbols = () => {\r\n    const { selectedOption, allSymbols } = this.state;\r\n    // let options = allSymbols.map(data => {\r\n    //   return {value:data.name, label:data.name};\r\n    // })\r\n    let options = allSymbols.map(data => {\r\n      return { value: data, label: data };\r\n    });\r\n\r\n    return (\r\n      <Select\r\n        placeholder=\"Select Symbol...\"\r\n        className=\"S-text\"\r\n        // isMulti\r\n        value={selectedOption}\r\n        onChange={this.handleChange}\r\n        options={options}\r\n      />\r\n    )\r\n  }\r\n  // toggle2 = () => {\r\n  //   this.setState({ isOpen2: !this.state.isOpen2 })\r\n  // };\r\n  render() {\r\n    const { activeProfileName, allHistoryRecord, allOpenRecord, selectedOption, toOpenOrderInfo, fromOpenOrderInfo, fromHistoryOrderInfo, commissionHistoryOrderInfo, toHistoryOrderInfo } = this.state;\r\n    //   const sumOfOpenTotal = allOpenRecord.reduce((current, data) => {\r\n    //     return (Math.floor(data.commission + data.swap + data.profit+ current));\r\n    // }, 0);\r\n\r\n    //   const sumOfHistoryTotal = allHistoryRecord.reduce((current, data) => {\r\n    //     return (data.profit + current);\r\n    // }, 0);\r\n    let uniqueSymbols = \"\";\r\n    if (allOpenRecord && Object.entries(allOpenRecord).length > 0) {\r\n      let fromSymbols = JSON.parse(allOpenRecord.from_symbols);\r\n      // fromSymbols = (fromSymbols).map(data => data).join(', ');\r\n      let toSymbols = JSON.parse(allOpenRecord.to_symbols);\r\n      let combineSymbols = fromSymbols.concat(toSymbols);\r\n      uniqueSymbols = combineSymbols.filter((item, i, ar) => ar.indexOf(item) === i);\r\n      uniqueSymbols = (uniqueSymbols).map(data => data).join(', ')\r\n    }\r\n    let fromsum = 0;\r\n    let tosum = 0;\r\n    // if(fromHistoryOrderInfo && commissionHistoryOrderInfo && fromHistoryOrderInfo.length>0){\r\n    if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\r\n      fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\r\n    }\r\n\r\n    if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\r\n      tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\r\n    }\r\n\r\n    let sumOfHistoryTotal = tosum + fromsum;\r\n\r\n    let openfromsum = 0;\r\n    let opentosum = 0;\r\n    if ((fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total != null)) {\r\n      // if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\r\n      //   openfromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\r\n      // }else{\r\n      openfromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\r\n\r\n    }\r\n    if ((toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total != null)) {\r\n      // if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\r\n      //   opentosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit+ toOpenOrderInfo[0].swap);\r\n      // }\r\n\r\n      // else{\r\n      //   opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n      // }\r\n      opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n    }\r\n\r\n    let sumOfOpenTotal = opentosum + openfromsum;\r\n\r\n    //   console.log(opentosum, 'opentosum')\r\n    //   console.log(openfromsum, 'openfromsum')\r\n    //  console.log(sumOfHistoryTotal, \"sumOfHistoryTotal------\");\r\n    //  console.log(sumOfOpenTotal, \"sumOfOpenTotal-----\");\r\n    //  console.log(allOpenRecord, 'allOpenRecord')\r\n\r\n\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"shadoremove\">\r\n          {/* <div className=\"symbol-box\"> */}\r\n          {/* <span className=\"S-text\">EURUSD</span> */}\r\n          {/* <div style={{ borderBottom: '2px solid grey' }}>\r\n            {this.renderSymbols()}\r\n\r\n          </div> */}\r\n          {/* <div style={{ margin: '20px 0px' }}>\r\n            <span className=\"p-text\">Open Positions</span>\r\n            <span className=\"icon-style\" onClick={this.toggle}>\r\n              <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\r\n            </span>\r\n          </div>\r\n          <div>\r\n\r\n            <Collapse isOpen={this.state.isOpen}>\r\n              <Row>\r\n                {Data.tablePage.items.map((item, index) =>\r\n                  <Col md={6} key={index}>\r\n                    <div className=\"card\">\r\n                      <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\r\n                      </div>\r\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                        <table className=\"table\">\r\n                          <tbody>\r\n                            <tr><td>{item.lot} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.commission} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.swap} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.total} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                )}\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <div>\r\n                      <div className=\"total-box\">\r\n                        <span className=\"text\">Sum of open position</span>\r\n                        <span className=\"text\" style={{ float: 'right' }}>$111111</span>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Row>\r\n            </Collapse>\r\n          </div> */}\r\n          {/* closed position */}\r\n\r\n          <Openposition\r\n            allOpenRecord={allOpenRecord}\r\n            toOpenOrderInfo={toOpenOrderInfo}\r\n            fromOpenOrderInfo={fromOpenOrderInfo}\r\n          />\r\n          <Closeposition\r\n            allHistoryRecord={allHistoryRecord}\r\n            fromHistoryOrderInfo={fromHistoryOrderInfo}\r\n            commissionHistoryOrderInfo={commissionHistoryOrderInfo}\r\n            toHistoryOrderInfo={toHistoryOrderInfo}\r\n          />\r\n          {/* <Row>\r\n\r\n            <Col md={12} sm={6}>\r\n              <div className={sumOfHistoryTotal + sumOfOpenTotal >= 0 ? \"summary-box\" : \"summary-box-red\"}>\r\n\r\n\r\n                {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\r\n          {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\r\n                <span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\r\n\r\n          {/* <Col md={12} sm={12}>\r\n                  <div className=\"summary-text text-center\" style={{ fontWeight: 600, color: \"#797979\" }}>Unrealized & Realized P/L ({activeProfileName}) {allHistoryRecord.history_info !== 0 && (<span> + Commission</span>)} </div>\r\n                </Col>\r\n                <Col md={12} sm={12}>\r\n                  <div className=\"text-center\" style={{ fontWeight: 'bold', fontSize: \"18px\" }}>$ {' '}\r\n                    <NumberFormat value={allHistoryRecord.history_info !== undefined ? sumOfHistoryTotal + sumOfOpenTotal + allHistoryRecord.history_info : sumOfHistoryTotal + sumOfOpenTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} /> */}\r\n\r\n\r\n          {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\r\n\r\n          {/* </div>\r\n                </Col>\r\n\r\n                <div className=\"clearfix\"></div>\r\n              </div>\r\n            </Col>\r\n          </Row> */}\r\n          {/* </div> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default TableList;\r\n\r\n","import React, { Component } from \"react\";\r\n// import ChartistGraph from \"react-chartist\";\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\nimport TableList from '../views/TableList';\r\n// import { Card } from \"components/Card/Card.jsx\";\r\n// import { StatsCard } from \"components/StatsCard/StatsCard.jsx\";\r\n// import { Tasks } from \"components/Tasks/Tasks.jsx\";\r\nimport NumberFormat from 'react-number-format';\r\nimport ReactLoading from \"react-loading\";\r\nimport Loader from 'react-loader-spinner'\r\n\r\nimport Data from './Data';\r\nimport Moment from 'react-moment';\r\nimport config from '../constant/config.js';\r\n// import {DatatablePage} from './DatatablePage';\r\n\r\nimport {api} from '../api'\r\nimport myInitObject from '../api'\r\nconst axios = require('axios');\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      details: [],\r\n      accountlist: [],\r\n      filterlist: [],\r\n      errorMassege: false,\r\n      error: '',\r\n      dateTime: '',\r\n      fromAccounts: '',\r\n      fromSymbol: '',\r\n      toAccounts: '',\r\n      toSymbol: '',\r\n      fromOpenOrderInfos: '',\r\n      toOpenOrderInfos: '',\r\n      total: '',\r\n      totalTo: '',\r\n      blockloader: true,\r\n      activeProfileName: '',\r\n      autoClose: ' ',\r\n      //\r\n\r\n\r\n      allHistoryRecord: [],\r\n      allOpenRecord: [],\r\n      fromHistoryOrderInfo: [],\r\n      toHistoryOrderInfo: [],\r\n      commissionHistoryOrderInfo: [],\r\n      fromOpenOrderInfo: [],\r\n      toOpenOrderInfo: [],\r\n      loading: true,\r\n      //\r\n\r\n\r\n    }\r\n  }\r\n  componentWillMount() {\r\n    // this.fetchCloseAndOpenPositionTotal();\r\n    // this.getAllAccounts();\r\n    // this.fetchActivefilterData();\r\n    // this.fetchAllOpenTrade();\r\n    // this.fetchStatusData();\r\n    // fetchLastUpdatedTime()\r\n    setInterval(() => {\r\n    if((myInitObject.responsHT &&\r\n      myInitObject.responsOT &&\r\n      myInitObject.responsAC &&\r\n      myInitObject.responsAF &&\r\n      myInitObject.responsLUT &&\r\n      myInitObject.responsSD) === undefined){\r\n      console.log('no data');\r\n    }else{\r\n      this.setState({\r\n        //history trade\r\n        allHistoryRecord: myInitObject.fetchAllHistoryTrade.rows,\r\n        fromHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.fromHistoryOrderInfo,\r\n        toHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.toHistoryOrderInfo,\r\n        //open trade\r\n        allOpenRecord: myInitObject.fetchAllOpenTrade.rows,\r\n        fromOpenOrderInfo: myInitObject.fetchAllOpenTrade.fromOpenOrderInfo,\r\n        toOpenOrderInfo: myInitObject.fetchAllOpenTrade.toOpenOrderInfo,\r\n        //all Accounts\r\n        accountlist: myInitObject.fetchAllAccounts.rows,\r\n        //active filter data\r\n        filterlist: myInitObject.fetchActivefilterdata.rows,\r\n       \r\n        activeProfileName: myInitObject.fetchActivefilterdata.rows[0].profile_name,\r\n        autoClose: myInitObject.fetchActivefilterdata.rows[0].auto_close !== 0 ? 'ON' : 'OFF',     \r\n        //last updated time\r\n        dateTime: myInitObject.fetchLastUpdatedTime.filteredInfoTime,\r\n        // status data\r\n        loading: false,\r\n        fromAccounts: myInitObject.fetchStatusData.fromAccounts,\r\n        fromSymbol: myInitObject.fetchStatusData.fromSymbol,\r\n        toAccounts: myInitObject.fetchStatusData.toAccounts,\r\n        toSymbol: myInitObject.fetchStatusData.toSymbol,\r\n        fromOpenOrderInfos: myInitObject.fetchStatusData.fromOpenOrderInfos[0],\r\n        blockloader: myInitObject.fetchStatusData.fromOpenOrderInfos.length > 0 ? false : true,\r\n        total: myInitObject.fetchStatusData.fromOpenOrderInfos.length > 0 && myInitObject.fetchStatusData.fromOpenOrderInfos[0].order_type == 0 \r\n        ? myInitObject.fetchStatusData.fromSymbol?.contract_size * (myInitObject.fetchStatusData.fromOpenOrderInfos[0]?.lots)\r\n         : myInitObject.fetchStatusData.fromSymbol?.contract_size * -(myInitObject.fetchStatusData.fromOpenOrderInfos[0]?.lots),\r\n        toOpenOrderInfos: myInitObject.fetchStatusData.toOpenOrderInfos[0],\r\n        totalTo: myInitObject.fetchStatusData.toOpenOrderInfos.length > 0 && myInitObject.fetchStatusData.toOpenOrderInfos[0].order_type == 0 \r\n        ? myInitObject.fetchStatusData.toSymbol?.contract_size * (myInitObject.fetchStatusData.toOpenOrderInfos[0]?.lots) \r\n         : myInitObject.fetchStatusData.toSymbol?.contract_size * -(myInitObject.fetchStatusData.toOpenOrderInfos[0]?.lots),\r\n      \r\n        },() =>{\r\n          this.setState({ errorMassege:this.state.filterlist.length == 0 ?  true : false,})\r\n        })\r\n    }\r\n   },1000)\r\n\r\n  }\r\n\r\n  // fetchApiData = () => {\r\n\r\n  //   if(myInitObject.respons === true){\r\n  //     console.log(myInitObject)\r\n  //   }\r\n  // }\r\n  \r\n  // fetchCloseAndOpenPositionTotal = () => {\r\n  //   let self = this;\r\n  //   axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\r\n  //     .then(function (response) {\r\n  //       console.log(response.data, 'response.data his')\r\n  //       if (response.status == 200) {\r\n  //         self.setState({\r\n  //           allHistoryRecord: response.data.rows,\r\n  //           fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,\r\n  //           toHistoryOrderInfo: response.data.toHistoryOrderInfo,\r\n  //           commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\r\n  //         })\r\n  //       }\r\n  //     })\r\n\r\n  //   axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\r\n  //     .then(function (response) {\r\n  //       if (response.status == 200) {\r\n  //         self.setState({\r\n  //           allOpenRecord: response.data.rows,\r\n  //           fromOpenOrderInfo: response.data.fromOpenOrderInfo,\r\n  //           toOpenOrderInfo: response.data.toOpenOrderInfo\r\n  //         })\r\n  //       }\r\n  //     })\r\n  // }\r\n  createLegend(json) {\r\n    var legend = [];\r\n    for (var i = 0; i < json[\"names\"].length; i++) {\r\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\r\n      legend.push(<i className={type} key={i} />);\r\n      legend.push(\" \");\r\n      legend.push(json[\"names\"][i]);\r\n    }\r\n    return legend;\r\n  }\r\n\r\n  // getAllAccounts = () => {\r\n  //   let self = this;\r\n  //   axios.get(config.baseurl + '/accounts/fetchAllAccounts')\r\n  //     .then(function (response) {\r\n\r\n  //       if (response.status == 200) {\r\n  //         self.setState({ accountlist: response.data.rows })\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  // fetchActivefilterData = () => {\r\n  //   let self = this;\r\n  //   axios.get(config.baseurl + '/filter/fetchActivefilterdata')\r\n  //     .then(function (response) {\r\n  //       if (response.status == 200) {\r\n\r\n  //         self.setState({\r\n  //           filterlist: response.data.rows,\r\n\r\n  //         })\r\n  //         if (self.state.filterlist.length == 0) {\r\n\r\n  //           self.setState({ errorMassege: true })\r\n  //         }\r\n  //         else {\r\n  //           self.setState({\r\n\r\n  //             activeProfileName: response.data.rows[0].profile_name,\r\n  //             autoClose: response.data.rows[0].auto_close !== 0 ? 'ON' : 'OFF'\r\n  //           })\r\n  //         }\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  // fetchAllOpenTrade = () => {\r\n  //   let self = this;\r\n  //   axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\r\n  //     .then(function (response) {\r\n  //       if (response.status == 200) {\r\n  //         self.setState({ dateTime: response.data.filteredInfoTime })\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  // fetchStatusData = () => {\r\n  //   let self = this;\r\n  //   let tottal = 0;\r\n  //   axios.get(config.baseurl + '/accounts/fetchStatusData')\r\n  //     .then(function (response) {\r\n  //       console.log(response, \"active dat\")\r\n\r\n  //       if (response.status == 200) {\r\n  //         self.setState({ loading: false })\r\n\r\n  //         self.setState({ fromAccounts: response.data.fromAccounts })\r\n  //         self.setState({ fromSymbol: response.data.fromSymbol })\r\n  //         self.setState({ toAccounts: response.data.toAccounts })\r\n  //         self.setState({ toSymbol: response.data.toSymbol })\r\n  //         self.setState({ fromOpenOrderInfos: response.data.fromOpenOrderInfos[0] })\r\n  //         if (response.data.fromOpenOrderInfos.length > 0) {\r\n  //           self.setState({ blockloader: false })\r\n  //           if (response.data.fromOpenOrderInfos[0].order_type == 0) {\r\n  //             self.setState({ total: response.data.fromSymbol.contract_size * (response.data.fromOpenOrderInfos[0].lots) })\r\n  //           } else {\r\n  //             self.setState({ total: response.data.fromSymbol.contract_size * -(response.data.fromOpenOrderInfos[0].lots) })\r\n  //           }\r\n  //           console.log(response.data.fromSymbol.contract_size * -(response.data.fromOpenOrderInfos[0].lots), \"total\");\r\n  //           self.setState({ toOpenOrderInfos: response.data.toOpenOrderInfos[0] })\r\n  //         }\r\n  //         if (response.data.toOpenOrderInfos.length > 0) {\r\n  //           if (response.data.toOpenOrderInfos[0].order_type == 0) {\r\n  //             self.setState({ totalTo: response.data.toSymbol.contract_size * (response.data.toOpenOrderInfos[0].lots) })\r\n  //           } else {\r\n  //             self.setState({ totalTo: response.data.toSymbol.contract_size * -(response.data.toOpenOrderInfos[0].lots) })\r\n  //           }\r\n  //         }\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n\r\n\r\n\r\n  showData = (accountDetailValue) => {\r\n\r\n    return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\r\n      if (accountDetailValue === 'margin_level') {\r\n        return (\r\n          <>\r\n            <td className=\"tdClr2 tdClr boldText\" key={index}>\r\n              <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\r\n            </td>\r\n            <td className=\"tdClr2 boldText\" key={index}>\r\n              <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\r\n            </td>\r\n          </>\r\n        )\r\n      }\r\n      if (item.accountFromInfo.length > 0) {\r\n        return (\r\n          <>\r\n            <td className=\"tdClr2 tdClr boldText\" key={index}>\r\n              {item.accountFromInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''}  {' '}\r\n              <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n            </td>\r\n\r\n            <td className=\"tdClr2 boldText\" key={index}>\r\n              {item.accountToInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''} {' '}\r\n              <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n            </td>\r\n          </>\r\n        )\r\n\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  tableHeader = () => {\r\n\r\n    return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\r\n      return (\r\n        <>\r\n          <th key={index} className=\"bText colorDarkBlue text-center tdClr2 tdClr\">\r\n            <div className=\"colorDarkBlue\" >\r\n              {(item.accountFromInfo[0].alias != null) ? item.accountFromInfo[0].alias : '-'}\r\n            </div>\r\n            <span style={{ fontSize: 10 }}>\r\n              {item.accountFromInfo[0].login}\r\n            </span>\r\n\r\n          </th>\r\n          <th key={index} className=\"bText color2 text-center tdClr2\">\r\n            <div className=\"color2\" >\r\n              {(item.accountToInfo[0].alias != null) ? item.accountToInfo[0].alias : '-'}\r\n            </div>\r\n            <span style={{ fontSize: 10 }}>\r\n              {item.accountToInfo[0].login}\r\n            </span>\r\n\r\n          </th>\r\n        </>\r\n\r\n      )\r\n\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    // console.log(this.props, '================>');\r\n    const { allHistoryRecord, fromHistoryOrderInfo, toHistoryOrderInfo, commissionHistoryOrderInfo,\r\n      allOpenRecord, fromOpenOrderInfo, toOpenOrderInfo, } = this.state;\r\n\r\n\r\n    let fromsum = 0;\r\n    let tosum = 0;\r\n    let fromsum1 = 0;\r\n    let tosum1 = 0;\r\n\r\n\r\n    if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\r\n      fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\r\n    }\r\n    if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\r\n      tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\r\n    }\r\n\r\n    let sumOfTotal = tosum + fromsum;\r\n    if (fromOpenOrderInfo && fromOpenOrderInfo.length > 0) {\r\n\r\n      fromsum1 = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\r\n\r\n    }\r\n    if (toOpenOrderInfo && toOpenOrderInfo.length > 0) {\r\n\r\n      tosum1 = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n\r\n    }\r\n\r\n    let sumOfTotal1 = tosum1 + fromsum1;\r\n    const dateToFormat = new Date();\r\n    let FinalTotal = 0\r\n\r\n    return (\r\n\r\n      <div className=\"\">\r\n        {this.state.errorMassege === true &&\r\n          <div className=\"popup\">\r\n\r\n            <div className=\"card w-75 \">\r\n              <div className=\"card-body topmargin\">\r\n                <div className=\" card-text popuptext\" role=\"alert\">Please Select Filters To Continue...</div>\r\n              </div>\r\n            </div>\r\n          </div>}\r\n        <div className=\"content\">\r\n          {this.state.errorMassege !== true &&\r\n\r\n            <Grid fluid>\r\n\r\n              <Row>\r\n                <div className=\"lastUpdate\">\r\n                  <span> Last Updated :  </span>\r\n                  {this.state.dateTime}(UTC)  </div>\r\n                <Col md={12} sm={6}>\r\n                  <div className=\"terminal-box  terminal-head-box\">\r\n\r\n                    <span className=\"terminal-text\">Profile</span>\r\n                  </div>\r\n                  <Row >\r\n                    <Col lg={4} sm={4}>\r\n                      <div className=\"card-margin card card-stats\">\r\n                        <div className=\"content\">\r\n                          <Row className=\"row\">\r\n                            <Col xs={5}>\r\n                              <div style={{ fontSize: '3em' }} className=\"icon-big text-center icon-warning\">\r\n                                <i className=\"pe-7s-display1 text-warning\"></i>\r\n                              </div>\r\n                            </Col>\r\n                            <div className=\"col-xs-7\">\r\n                              <div className=\"numbers\"><p style={{\r\n                                textAlign: 'center',\r\n                                fontSize: '17px',\r\n                                marginTop: '15px'\r\n                              }}>Active Profile </p></div>\r\n                            </div>\r\n                          </Row>\r\n                          <div className=\"footer\"><hr /><p style={{ textAlign: 'center', fontSize: '17px' }}>{this.state.activeProfileName}</p></div></div></div>\r\n                    </Col>\r\n\r\n                    <div className=\" col-lg-offset-4 col-sm-offset-4 col-lg-4 col-sm-4\">\r\n                      <div className=\"card-margin card card-stats\">\r\n                        <div className=\"content\">\r\n                          <div className=\"row\">\r\n                            <div className=\"col-xs-5\">\r\n                              <div style={{ fontSize: '3em' }} className=\"icon-big text-center icon-warning\">\r\n                                <i style={{ color: this.state.autoClose == 'OFF' ? '#312f2f' : 'green' }} className=\"pe-7s-switch text-warning-switch\"></i>\r\n                              </div></div>\r\n                            <div className=\"col-xs-7\">\r\n                              <div className=\"numbers\"><p style={{\r\n                                textAlign: 'center',\r\n                                fontSize: '17px',\r\n                                marginTop: '15px'\r\n                              }}>Auto-Close </p></div>\r\n                            </div></div><div className=\"footer\"><hr /><p style={{ textAlign: 'center', fontSize: '17px' }}>{this.state.autoClose}</p></div></div></div></div>\r\n\r\n                  </Row>\r\n                  <div className=\"terminal-box terminal-head-box\">\r\n                    {/* {(this.state.errorMassege) && <p style={{ color: 'red', fontSize: '10px' }}>Please Select Any Account</p>} */}\r\n                    <span className=\"terminal-text\">Profit/Loss</span>\r\n                  </div>\r\n                  <Row >\r\n                    <div className=\"col-lg-12 col-sm-12\">\r\n                      <div className=\"card-margin card card-stats\">\r\n                        <div className=\"content\">\r\n                          <div className=\"row\">\r\n                            <div className=\"col-xs-6\">\r\n                              <div className=\"numbers\"><p style={{\r\n                                textAlign: 'center',\r\n                                fontSize: '20px',\r\n                        \r\n                                color: sumOfTotal > 0 ? 'green' : 'red'\r\n                              }}>Realized : $ {sumOfTotal} </p></div>\r\n                            </div>\r\n                            <div className=\"col-xs-6\">\r\n                              <div className=\"numbers\"><p style={{\r\n                                textAlign: 'center',\r\n                                fontSize: '20px',\r\n                            \r\n                                color: sumOfTotal1 > 0 ? 'green' : 'red'\r\n\r\n                              }}>Unrealized : $ {sumOfTotal1} </p></div>\r\n                            </div>\r\n                          </div><div className=\"footer\"><hr /><p style={{ color: (sumOfTotal1 + sumOfTotal) > 0 ? 'green' : 'red', textAlign: 'center', fontSize: '20px' }}>Total : $ {(sumOfTotal1 + sumOfTotal).toFixed(2)}</p></div></div></div></div>\r\n                  </Row>\r\n                  <div className=\"terminal-box  terminal-head-box\">\r\n                    {/* {(this.state.errorMassege) && <p style={{ color: 'red', fontSize: '10px' }}>Please Select Any Account</p>} */}\r\n                    <span className=\"terminal-text\">Exposure</span>\r\n                  </div>\r\n                  {this.state.loading ? <Loader\r\n                    type=\"ThreeDots\"\r\n                    color=\"black\"\r\n                    height={100}\r\n                    width={100}\r\n                    style={{ textAlign: 'center' }}\r\n\r\n\r\n                  />\r\n                    :\r\n                    <Row>\r\n                      {this.state.fromOpenOrderInfos && this.state.total ?\r\n                        // this.state.fromOpenOrderInfos.order_type !== null &&\r\n                        <div className=\"col-sm-6\">\r\n                         \r\n                          <div className=\"c-callout c-callout-info\">\r\n                            <small className=\"text-muted text-muted-dashboard\">{this.state.fromOpenOrderInfos.order_type == 0 ? 'long ' : 'short '} </small>\r\n                            <br />\r\n                            <strong className=\"h4 buy-sell-h4\"><NumberFormat value={this.state.total} displayType={'text'} thousandSeparator={true} decimalScale={2} />   {this.state.fromSymbol.margin_currency}\r\n                              <br />  <NumberFormat value={this.state.fromOpenOrderInfos.lots} displayType={'text'} thousandSeparator={true} decimalScale={2} />  {(this.state.fromOpenOrderInfos.lots > 1) ? 'Lots' : 'Lot'}</strong>\r\n                          </div>\r\n                        </div> : ''}\r\n                      {this.state.toOpenOrderInfos && this.state.totalTo ?\r\n                        // this.state.toOpenOrderInfos.order_type !== null &&\r\n                        <div className=\"col-sm-6\">\r\n                          <div className=\"c-callout callout-danger\">\r\n                            <small className=\"text-muted text-muted-dashboard\">{this.state.toOpenOrderInfos.order_type == 0 ? 'long ' : 'short '} </small>\r\n                            <br />\r\n                            <strong className=\"h4 buy-sell-h4\"><NumberFormat value={this.state.totalTo} displayType={'text'} thousandSeparator={true} decimalScale={2} />   {this.state.toSymbol.margin_currency}\r\n                              <br /> <NumberFormat value={this.state.toOpenOrderInfos.lots} displayType={'text'} thousandSeparator={true} decimalScale={2} />  {(this.state.toOpenOrderInfos.lots > 1) ? 'Lots' : 'Lot'} </strong>\r\n                          </div> \r\n                          </div>: '' }\r\n                          {!this.state.totalTo && !this.state.total ?\r\n                          <div className=\"col-sm-12 text-center\">\r\n                            <div className=\"c-callout c-callout-info\">\r\n                          <small className=\"text-muted text-muted-dashboard\">No Exposure</small>\r\n                          </div>\r\n                          </div> : ''}\r\n                    </Row>\r\n                  }\r\n                </Col>\r\n              </Row>\r\n              <Row style={{ margin: '20px 0px' }}></Row>\r\n            </Grid>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from 'react';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\r\nimport TagsInput from 'react-tagsinput'\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport config from '../../constant/config.js';\r\n\r\nimport Select from 'react-select';\r\nimport ReactTooltip from 'react-tooltip';\r\nconst axios = require('axios');\r\n\r\nclass FilterEdite extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedAccountOption: null,\r\n            selectedSymbolOption: null,\r\n            selectedSymbolOptionTo: null,\r\n            selectedAccountOptionTo: null,\r\n            selectedCommissionAccount: null,\r\n            startDate: null,\r\n            endDate: null,\r\n            startDateTo: null,\r\n            endDateTo: null,\r\n            startDateComm: null,\r\n            endDateComm: null,\r\n            comm_magicNumber: [],\r\n            excludeComm: false,\r\n            includeComm: false,\r\n            allAccounts: [],\r\n            allSymbols: [],\r\n            profileName: '',\r\n            showCommission: false,\r\n            // showAddCommission: false,\r\n            id: '',\r\n            error: '',\r\n            autoSyncClose: false,\r\n            magicNumber: [],\r\n            magicNumberTo: [],\r\n            tags: [],\r\n            include_exclude_status: '',\r\n            showMagicNumber: false,\r\n            showMagicNumberTo: false,\r\n            exclude: false,\r\n            include: false,\r\n            excludeTo: false,\r\n            includeTo: false,\r\n            ticket: [],\r\n            ticketTo: [],\r\n            // showTicket: false,\r\n            // showTicketTo: false,\r\n            excludeTicket: false,\r\n            includeTicket: false,\r\n            excludeTicketTo: false,\r\n            includeTicketTo: false,\r\n\r\n        };\r\n\r\n\r\n    }\r\n    componentWillMount() {\r\n\r\n        let self = this;\r\n        axios.get(config.baseurl + '/accounts/fetchAllAccounts')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.setState({ allAccounts: response.data.rows })\r\n                }\r\n            })\r\n        axios.get(config.baseurl + '/accounts/fetchAllSymbol')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    // console.log( response,\"response ---------------fetchAllSymbol>\")\r\n                    self.setState({ allSymbols: response.data.rows })\r\n                }\r\n            })\r\n    }\r\n    componentDidMount() {\r\n\r\n        let abc = this.props.data;\r\n        // console.log(abc.from_ticket, '------------------>>>');\r\n        if (abc) {\r\n            let from_symbol = JSON.parse(abc.from_symbols);\r\n            let to_symbol = JSON.parse(abc.to_symbols);\r\n\r\n            let all_from_symbols = from_symbol.map(data => { return ({ value: data, label: data }) });\r\n            let all_to_symbols = to_symbol.map(data => { return ({ value: data, label: data }) });\r\n\r\n            from_symbol = from_symbol.join(', ');\r\n            to_symbol = to_symbol.join(', ');\r\n\r\n            this.setState({\r\n                id: abc.id,\r\n                profileName: abc.profile_name,\r\n                selectedAccountOption: ({ value: abc.accountFromInfo[0].id, label: abc.accountFromInfo[0].login }),\r\n                selectedAccountOptionTo: ({ value: abc.accountToInfo[0].id, label: abc.accountToInfo[0].login }),\r\n                showCommission: abc.commission_acount_id !== 0 ? true : false,\r\n                selectedCommissionAccount: abc.commission_acount_id !== 0 ? ({ value: abc.accountCommissionInfo[0].id, label: abc.accountCommissionInfo[0].login }) : null,\r\n                showMagicNumber: abc.from_include_exclude_status !== 0 ? true : false,\r\n                showMagicNumberTo: abc.to_include_exclude_status !== 0 ? true : false,\r\n                magicNumber: abc.from_magic_number != \"0\" && abc.from_magic_number != \"\" ? JSON.parse(abc.from_magic_number) : [],\r\n                magicNumberTo: abc.to_magic_number != \"0\" && abc.to_magic_number != \"\" ? JSON.parse(abc.to_magic_number) : [],\r\n                include: abc.from_include_exclude_status === 1 ? true : false,\r\n                exclude: abc.from_include_exclude_status === 2 ? true : false,\r\n                includeTo: abc.to_include_exclude_status === 1 ? true : false,\r\n                excludeTo: abc.to_include_exclude_status === 2 ? true : false,\r\n                startDateComm: new Date(abc.startdateComm),\r\n                endDateComm: (abc.enddateComm != null) ? new Date(abc.enddateComm) : '',\r\n                includeComm: abc.comm_include_exclude_status === 1 ? true : false,\r\n                excludeComm: abc.comm_include_exclude_status === 2 ? true : false,\r\n                comm_magicNumber: abc.comm_magic_number != \"0\" && abc.comm_magic_number != \"\" ? JSON.parse(abc.comm_magic_number) : [],\r\n                // showTicket: abc.from_include_exclude_status_ticket !== 0 ? true : false,\r\n                // showTicketTo: abc.to_include_exclude_status_ticket !== 0 ? true : false,\r\n                ticket: abc.from_ticket != \"0\" && abc.from_ticket != \"\" ? JSON.parse(abc.from_ticket) : [],\r\n                ticketTo: abc.to_ticket != \"0\" && abc.to_ticket != \"\" ? JSON.parse(abc.to_ticket) : [],\r\n                includeTicket: abc.from_include_exclude_status_ticket === 1 ? true : false,\r\n                excludeTicket: abc.from_include_exclude_status_ticket === 2 ? true : false,\r\n                includeTicketTo: abc.to_include_exclude_status_ticket === 1 ? true : false,\r\n                excludeTicketTo: abc.to_include_exclude_status_ticket === 2 ? true : false,\r\n                selectedSymbolOption: all_from_symbols,\r\n                autoSyncClose: abc.auto_close == 1 ? true : false,\r\n                selectedSymbolOptionTo: all_to_symbols,\r\n                startDate: new Date(abc.startdateFrom),\r\n                startDateTo: new Date(abc.startdateTo),\r\n                endDate: (abc.enddateFrom != null) ? new Date(abc.enddateFrom) : '',\r\n                endDateTo: (abc.enddateTo != null) ? new Date(abc.enddateTo) : '',\r\n            })\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    handleDropdownChange = (e) => {\r\n        this.setState({ selectValue: e.target.value });\r\n    }\r\n    handleChangeDateComm = (date) => {\r\n        this.setState({\r\n            startDateComm: date,\r\n        });\r\n    };\r\n    handleEndDateComm = (date) => {\r\n        if (date < this.state.startDateComm && date != null) {\r\n            this.setState({ error: \"enddatecomm\", endDateComm: \"\" });\r\n            return;\r\n        }\r\n        this.setState({\r\n            error: \"\",\r\n            endDateComm: date,\r\n        });\r\n    };\r\n    handleChangeDate = date => {\r\n        this.setState({\r\n            startDate: date\r\n        });\r\n    }\r\n    handleEndDate = date => {\r\n\r\n        if (date < this.state.startDate && date != null) {\r\n            this.setState({ error: 'enddate', endDate: \"\" })\r\n            return\r\n        }\r\n        this.setState({\r\n            error: '',\r\n            endDate: date,\r\n        });\r\n    }\r\n    handleChangeDateTo = date => {\r\n        this.setState({\r\n            startDateTo: date\r\n        });\r\n    }\r\n    handleEndDateTo = date => {\r\n        if (date < this.state.startDateTo && date != null) {\r\n            this.setState({ error: 'enddateto', endDateTo: \"\" })\r\n            return\r\n        }\r\n        this.setState({\r\n            error: '',\r\n            endDateTo: date,\r\n        });\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({ value: Array.from(event.target.selectedOptions, (item) => item.value) });\r\n    }\r\n\r\n    handeChangeShowCommission = () => {\r\n        this.setState({ showCommission: !this.state.showCommission })\r\n    }\r\n    handleChangeCommissionAccount = selectedCommissionAccount => {\r\n        this.setState({ selectedCommissionAccount });\r\n    };\r\n\r\n    renderCommissionAccount = () => {\r\n        const { selectedCommissionAccount, allAccounts } = this.state;\r\n\r\n        let options = allAccounts.map(data => {\r\n            return { value: data.id, label: data.login };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Account\"\r\n                value={selectedCommissionAccount}\r\n                onChange={this.handleChangeCommissionAccount}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n\r\n    renderAccountSelect = () => {\r\n        const { selectedAccountOption, allAccounts } = this.state;\r\n        let options = allAccounts.map(data => {\r\n            return { value: data.id, label: data.login };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Account\"\r\n                value={selectedAccountOption}\r\n                onChange={this.handleChangeAccount} l\r\n                options={options}\r\n                rules={{ required: 'Please select an option' }}\r\n            />\r\n        )\r\n    }\r\n\r\n    handleChangeAccountTo = selectedAccountOptionTo => {\r\n        this.setState({ selectedAccountOptionTo, error: '' });\r\n    };\r\n    renderAccountSelectTo = () => {\r\n        const { selectedAccountOptionTo, allAccounts } = this.state;\r\n\r\n        let options = allAccounts.map(data => {\r\n            return { value: data.id, label: data.login };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Account\"\r\n                value={selectedAccountOptionTo}\r\n                onChange={this.handleChangeAccountTo}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n\r\n    handleChangeAccount = selectedAccountOption => {\r\n        this.setState({ selectedAccountOption });\r\n    };\r\n    handleChangeSymbol = selectedSymbolOption => {\r\n        this.setState({ selectedSymbolOption });\r\n    };\r\n    renderSymbolSelect = () => {\r\n        const { selectedSymbolOption, allSymbols } = this.state;\r\n        let options = allSymbols.map(data => {\r\n            return { value: data.name, label: data.name };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Symbol\"\r\n                value={selectedSymbolOption}\r\n                isMulti\r\n                onChange={this.handleChangeSymbol}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n    handleChangeSymbolTo = selectedSymbolOptionTo => {\r\n        this.setState({ selectedSymbolOptionTo });\r\n    };\r\n    renderSymbolSelectTo = () => {\r\n        const { selectedSymbolOptionTo, allSymbols } = this.state;\r\n        let options = allSymbols.map(data => {\r\n            return { value: data.name, label: data.name };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Symbol\"\r\n                value={selectedSymbolOptionTo}\r\n                isMulti\r\n                onChange={this.handleChangeSymbolTo}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n\r\n    handleChangeMagicNumber = (magicNumber) => {\r\n\r\n\r\n        // if(re.test(tags))\r\n        this.setState({ magicNumber })\r\n    }\r\n    handleChangeMagicNumberTo = (magicNumberTo) => {\r\n\r\n\r\n        // if(re.test(tags))\r\n        this.setState({ magicNumberTo })\r\n    }\r\n    handleChangeMagicNumberComm = (comm_magicNumber) => {\r\n        this.setState({ comm_magicNumber });\r\n    };\r\n    handleChangeTicket = (ticket) => {\r\n\r\n\r\n        this.setState({ ticket })\r\n\r\n    }\r\n    handleChangeTicketTo = (ticketTo) => {\r\n\r\n        this.setState({ ticketTo })\r\n    }\r\n    changeIncludeDefaultProperty = () => {\r\n\r\n        this.setState({ include: !this.state.include, exclude: false })\r\n\r\n        // if (!this.state.include == true) {\r\n        //     this.setState({ showMagicNumber: true })\r\n        // } else if (this.state.include == true) {\r\n        //     this.setState({ showMagicNumber: false })\r\n\r\n        // }\r\n\r\n\r\n    }\r\n    changeExcludeDefaultProperty = () => {\r\n        this.setState({ exclude: !this.state.exclude, include: false })\r\n        // if (!this.state.exclude == true) {\r\n        //     this.setState({ showMagicNumber: true })\r\n        // } else if (this.state.exclude == true) {\r\n        //     this.setState({ showMagicNumber: false })\r\n\r\n        // }\r\n\r\n    }\r\n\r\n    changeIncludeDefaultPropertyTo = () => {\r\n        this.setState({ includeTo: !this.state.includeTo, excludeTo: false })\r\n        // if (!this.state.includeTo == true) {\r\n        //     this.setState({ showMagicNumberTo: true })\r\n        // } else if (this.state.includeTo == true) {\r\n        //     this.setState({ showMagicNumberTo: false })\r\n\r\n        // }\r\n    }\r\n    changeExcludeDefaultPropertyTo = () => {\r\n        this.setState({ excludeTo: !this.state.excludeTo, includeTo: false })\r\n        // if (!this.state.excludeTo == true) {\r\n        //     this.setState({ showMagicNumberTo: true })\r\n        // } else if (this.state.excludeTo == true) {\r\n        //     this.setState({ showMagicNumberTo: false })\r\n\r\n        // }\r\n\r\n    }\r\n\r\n    changeIncludeDefaultPropertyTicket = () => {\r\n\r\n        this.setState({ includeTicket: !this.state.includeTicketTo, excludeTicket: false }\r\n        )\r\n        // if (!this.state.includeTicket == true) {\r\n        //     this.setState({ showTicket: true })\r\n        // } else if (this.state.includeTicket == true) {\r\n        //     this.setState({ showTicket: false })\r\n\r\n        // }\r\n\r\n\r\n    }\r\n    changeExcludeDefaultPropertyTicket = () => {\r\n        this.setState({ excludeTicket: !this.state.excludeTicket, includeTicket: false })\r\n        // if (!this.state.excludeTicket == true) {\r\n        //     this.setState({ showTicket: true })\r\n        // } else if (this.state.excludeTicket == true) {\r\n        //     this.setState({ showTicket: false })\r\n\r\n        // }\r\n\r\n    }\r\n\r\n    changeIncludeDefaultPropertyTicketTo = () => {\r\n        this.setState({ includeTicketTo: !this.state.includeTicketTo, excludeTicketTo: false })\r\n        // if (!this.state.includeTicketTo == true) {\r\n        //     this.setState({ showTicketTo: true })\r\n        // } else if (this.state.includeTicketTo == true) {\r\n        //     this.setState({ showTicketTo: false })\r\n\r\n        // }\r\n    }\r\n    changeExcludeDefaultPropertyTicketTo = () => {\r\n        this.setState({ excludeTicketTo: !this.state.excludeTicketTo, includeTicketTo: false })\r\n        // if (!this.state.excludeTicketTo == true) {\r\n        //     this.setState({ showTicketTo: true })\r\n        // } else if (this.state.excludeTicketTo == true) {\r\n        //     this.setState({ showTicketTo: false })\r\n\r\n        // }\r\n\r\n    }\r\n    changeExcludeDefaultPropertyComm = () => {\r\n        this.setState({ excludeComm: !this.state.excludeComm, includeComm: false });\r\n    }\r\n    changeIncludeDefaultPropertyComm = () => {\r\n        this.setState({ includeComm: !this.state.includeComm, excludeComm: false });\r\n    }\r\n    handleprofileName(e) {\r\n\r\n        this.setState({ profileName: e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1), error: '' })\r\n\r\n    }\r\n    handleChangeAutoSync(e) {\r\n        this.setState({ autoSyncClose: !this.state.autoSyncClose }, () => {\r\n        })\r\n    }\r\n    formDataSubmit(e) {\r\n        e.preventDefault();\r\n        let comm_status =\r\n            this.state.includeComm === true && this.state.excludeComm === false\r\n                ? 1\r\n                : this.state.excludeComm === true && this.state.includeComm === false\r\n                    ? 2\r\n                    : 0;\r\n        let from_status = this.state.include === true && this.state.exclude === false ? 1 : this.state.exclude === true && this.state.include === false ? 2 : 0\r\n\r\n        let to_status = this.state.includeTo === true && this.state.excludeTo === false ? 1 : this.state.excludeTo === true && this.state.includeTo === false ? 2 : 0\r\n\r\n        let from_status_ticket = this.state.includeTicket === true && this.state.excludeTicket === false ? 1 : this.state.excludeTicket === true && this.state.includeTicket === false ? 2 : 0\r\n\r\n        let to_status_ticket = this.state.includeTicketTo === true && this.state.excludeTicketTo === false ? 1 : this.state.excludeTicketTo === true && this.state.includeTicketTo === false ? 2 : 0\r\n\r\n        let self = this\r\n\r\n\r\n        if (this.state.profileName == null || this.state.profileName == '') {\r\n            NotificationManager.listNotify = [];\r\n            NotificationManager.error('Please select profile name !')\r\n            return\r\n        }\r\n        else if (this.state.selectedAccountOption == null || this.state.selectedAccountOption == '') {\r\n            this.setState({ error: 'accountoption' })\r\n            return\r\n        }\r\n        else if (this.state.showCommission == true && (this.state.selectedCommissionAccount == null || this.state.selectedCommissionAccount == '')) {\r\n            this.setState({ error: 'selectedCommissionAccount' })\r\n            return\r\n        }\r\n        else if (this.state.startDate == null || this.state.startDate == '') {\r\n            this.setState({ error: 'startdate' })\r\n            return\r\n        } else if (this.state.selectedSymbolOption == null || this.state.selectedSymbolOption == '') {\r\n            this.setState({ error: 'symbolselect' })\r\n            return\r\n        }\r\n        else if (this.state.selectedAccountOptionTo == null || this.state.selectedAccountOptionTo == '') {\r\n            this.setState({ error: 'accountoptionto' })\r\n            return\r\n        } else if (this.state.startDateTo == null || this.state.startDateTo == '') {\r\n            this.setState({ error: 'startDateTo' })\r\n            return\r\n        }\r\n        else if (this.state.selectedSymbolOptionTo == null || this.state.selectedSymbolOptionTo == '') {\r\n            this.setState({ error: 'selectedSymbolOptionTo' })\r\n            return\r\n        }\r\n        else {\r\n            this.setState({ error: '' })\r\n        }\r\n        let fromSymbol = this.state.selectedSymbolOption;\r\n        let toSymbol = this.state.selectedSymbolOptionTo;\r\n\r\n        let symbolFrom = fromSymbol.map((data) => data.value)\r\n        let symbolto = toSymbol.map((data) => data.value)\r\n\r\n        let Data = {\r\n            id: this.state.id,\r\n            profile_name: this.state.profileName,\r\n            from_account_id: this.state.selectedAccountOption.value,\r\n            to_account_id: this.state.selectedAccountOptionTo.value,\r\n            commission_acount_id: this.state.showCommission == true ? this.state.selectedCommissionAccount.value : 0,\r\n            startdateFrom: this.state.startDate,\r\n            // enddateFrom: this.state.endDate,\r\n            enddateFrom: (this.state.endDate) ? this.state.endDate : null,\r\n            startdateTo: this.state.startDateTo,\r\n            enddateTo: (this.state.endDateTo) ? this.state.endDateTo : null,\r\n            startdateComm: this.state.startDateComm,\r\n            enddateComm: (this.state.endDateComm) ? this.state.endDateComm : null,\r\n            comm_include_exclude_status: comm_status,\r\n            comm_magic_number: (comm_status != 0) ? this.state.comm_magicNumber.length > 0\r\n                ? JSON.stringify(this.state.comm_magicNumber)\r\n                : JSON.stringify([]) : \"\",\r\n            from_symbols: JSON.stringify(symbolFrom),\r\n            to_symbols: JSON.stringify(symbolto),\r\n            auto_close: this.state.autoSyncClose ? 1 : 0,\r\n            from_magic_number: (from_status != 0) ? this.state.magicNumber.length > 0 ? JSON.stringify(this.state.magicNumber) : JSON.stringify([]) : \"\",\r\n            to_magic_number: (to_status != 0) ? this.state.magicNumberTo.length > 0 ? JSON.stringify(this.state.magicNumberTo) : JSON.stringify([]) : \"\",\r\n\r\n            from_include_exclude_status: from_status,\r\n            to_include_exclude_status: to_status,\r\n            from_ticket: (from_status_ticket != 0) ? this.state.ticket.length > 0 ? JSON.stringify(this.state.ticket) : JSON.stringify([]) : \"\",\r\n            to_ticket: (to_status_ticket != 0) ? this.state.ticketTo.length > 0 ? JSON.stringify(this.state.ticketTo) : JSON.stringify([]) : \"\",\r\n            from_include_exclude_status_ticket: from_status_ticket,\r\n            to_include_exclude_status_ticket: to_status_ticket,\r\n            createdAt: new Date(),\r\n            updatedAt: new Date()\r\n        }\r\n\r\n        axios.post(config.baseurl + '/filter/updatefilterdatafull', Data)\r\n            .then(function (response) {\r\n\r\n                if (response.status == 200) {\r\n                    self.props.onHide()\r\n\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n            });\r\n\r\n    }\r\n    crossClick(e) {\r\n        e.preventDefault();\r\n        this.props.onHide()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content\">\r\n                <Grid fluid>\r\n                    <div className=\"symbol-box\">\r\n                        <div className=\"cross_div\"><a onClick={(e) => this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\r\n                        <div className=\"terminal-text\" >\r\n                            <p className=\"profilename pnameadjust\"> Profile Name</p>\r\n                            <input type=\"text\" name=\"profilename\" value={this.state.profileName} className=\"Itext\" onChange={(e) => this.handleprofileName(e)} />\r\n                            {(this.state.error == 'profileName') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Fill Your Profile Name </p>}\r\n\r\n                        </div>\r\n                        <div className=\"synclose\">\r\n                            <label class=\"checkbox-inline\"><input type=\"checkbox\" checked={this.state.autoSyncClose} name=\"changeAutoSync\" onChange={(e) => this.handleChangeAutoSync(e)} /><b>Auto Sync Close</b></label>\r\n                        </div>\r\n                        <form>\r\n                            <Row>\r\n                                {/* <Col md={12}>\r\n                                    <div className=\"card\">\r\n                                        <div style={{ padding: '10px 20px 35px ', }}>\r\n                                            <div>\r\n                                                <h3 className=\" text-center\">Filter By Magic Numbers</h3>\r\n\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-6 text-center\">\r\n\r\n                                                    <button type=\"button\" class=\"text-center filter-add-button\">Include</button>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-md-6 text-center btnspace\">\r\n                                                    <button type=\"button\" class=\"filter-add-button\">Exclude</button>\r\n                                                </div>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col\">\r\n                                                        <div class=\"text-center  \">\r\n                                                            <input class=\"form-control input-css\" placeholder=\"Select Numbers\" type=\"number\"></input>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>from_include_exclude_status\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </Col> */}\r\n                                <Col md={6}>\r\n                                    <div className=\"card bottom\">\r\n                                        <div style={{ padding: '10px 20px 0px' }}>\r\n                                            <span style={{ fontWeight: 'bold' }}>Account A</span>\r\n                                        </div>\r\n                                        <table className=\"table mt20\">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr\">\r\n                                                        <span className=\"accnt\">Account :</span>\r\n                                                    </td>\r\n\r\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                        {this.renderAccountSelect()}\r\n                                                        {(this.state.error == 'accountoption') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">From:  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center datepicker_filter\">\r\n                                                        <DatePicker\r\n                                                            selected={this.state.startDate}\r\n                                                            onChange={this.handleChangeDate}\r\n                                                            isClearable\r\n                                                            placeholderText=\"dd/mm/yyyy\"\r\n                                                            dateFormat=\"dd/MM/yyyy\"\r\n                                                            startDate={this.state.startDate}\r\n                                                            endDate={this.state.endDate}\r\n                                                            strictParsing\r\n                                                        />\r\n                                                        {(this.state.error == 'startdate') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">To :  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center datepicker_filter\">\r\n                                                        <DatePicker\r\n\r\n                                                            selected={this.state.endDate}\r\n                                                            onChange={this.handleEndDate}\r\n                                                            isClearable\r\n                                                            placeholderText=\"dd/mm/yyyy\"\r\n                                                            dateFormat=\"dd/MM/yyyy\"\r\n                                                            startDate={this.state.startDate}\r\n                                                            endDate={this.state.endDate}\r\n                                                        />\r\n                                                        {(this.state.error == 'enddate') && <p style={{ color: 'red', fontSize: '13px' }}>*\r\n                                                        Please ensure that the End Date is greater than  the Start Date.</p>}\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">Symbol :  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center\" style={{ width: '50%' }}>\r\n                                                        {this.renderSymbolSelect()}\r\n                                                        {(this.state.error == 'symbolselect') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">Magic Number </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                        <TagsInput\r\n                                                            onValidationReject={() => console.log('rejected')}\r\n                                                            validationRegex={/^[0-9]*$/}\r\n                                                            inputProps={{ placeholder: this.state.magicNumber.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumber\r\n                                                            } onChange={this.handleChangeMagicNumber}></TagsInput>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr dataAdjust\">\r\n                                                        <div onClick={this.changeIncludeDefaultProperty}>\r\n                                                            <input\r\n                                                                type=\"radio\" id=\"include\" name=\"include\" checked={this.state.include} />\r\n                                                            <span className=\"accnt \">Include</span>\r\n\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center\">\r\n                                                        <div onClick={this.changeExcludeDefaultProperty} >\r\n                                                            <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.exclude} />\r\n                                                            <span className=\"accnt \">Exclude</span>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">Ticket </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                        <TagsInput\r\n                                                            onValidationReject={() => console.log('rejected')}\r\n                                                            validationRegex={/^[0-9]*$/}\r\n                                                            inputProps={{ placeholder: this.state.ticket.length > 0 ? \"\" : \" Enter Ticket\" }} type=\"number\" value={this.state.ticket\r\n                                                            } onChange={this.handleChangeTicket}></TagsInput>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr dataAdjust\">\r\n                                                        <div onClick={this.changeIncludeDefaultPropertyTicket}>\r\n                                                            <input\r\n                                                                type=\"radio\" id=\"includeTicket\" name=\"includeTicket\" checked={this.state.includeTicket} />\r\n                                                            <span className=\"accnt \">Include</span>\r\n\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center\">\r\n                                                        <div onClick={this.changeExcludeDefaultPropertyTicket} >\r\n                                                            <input type=\"radio\" id=\"excludeTicket\" name=\"excludeTicket\" checked={this.state.excludeTicket} />\r\n                                                            <span className=\"accnt \">Exclude</span>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n\r\n                                            </tbody>\r\n                                        </table>\r\n                                        {/* <div className=\"text-center\">\r\n                                            <span c> Magic Number :  </span>\r\n                                        </div>\r\n\r\n                                        <table className=\"table \">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr dataAdjust\">\r\n                                                        <div onClick={this.changeIncludeDefaultProperty}>\r\n                                                            <input\r\n                                                                type=\"radio\" id=\"include\" name=\"include\" checked={this.state.include} />\r\n                                                            <span class=\"accnt \">Include</span>\r\n\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <div onClick={this.changeExcludeDefaultProperty} >\r\n                                                            <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.exclude} />\r\n                                                            <span class=\"accnt \">Exclude</span>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n\r\n\r\n                                        {this.state.showMagicNumber &&\r\n                                            <div className=\"b-clr magicnumber\" style={{}}>\r\n                                                <TagsInput\r\n                                                    onValidationReject={() => console.log('rejected')}\r\n                                                    validationRegex={/^[0-9]*$/}\r\n                                                    inputProps={{ placeholder: this.state.magicNumber.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumber\r\n                                                    } onChange={this.handleChangeMagicNumber}></TagsInput>\r\n                                            </div>}\r\n\r\n                                            <div className=\"text-center\">\r\n                                                <span > Ticket   </span>\r\n                                            </div>\r\n\r\n                                            <table className=\"table \">\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr dataAdjust\">\r\n                                                            <div onClick={this.changeIncludeDefaultPropertyTicket}>\r\n                                                                <input\r\n                                                                    type=\"radio\" id=\"includeTicket\" name=\"includeTicket\" checked={this.state.includeTicket} />\r\n                                                                <span className=\"accnt \">Include</span>\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\">\r\n                                                            <div onClick={this.changeExcludeDefaultPropertyTicket} >\r\n                                                                <input type=\"radio\" id=\"excludeTicket\" name=\"excludeTicket\" checked={this.state.excludeTicket} />\r\n                                                                <span className=\"accnt \">Exclude</span>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n\r\n\r\n                                            {this.state.showTicket === true ?\r\n                                                <div className=\"b-clr magicnumber\" style={{}}>\r\n                                                    <TagsInput\r\n                                                        onValidationReject={() => console.log('rejected')}\r\n                                                        validationRegex={/^[0-9]*$/}\r\n                                                        inputProps={{ placeholder: this.state.ticket.length > 0 ? \"\" : \" Enter Ticket\" }} type=\"number\" value={this.state.ticket\r\n                                                        } onChange={this.handleChangeTicket}></TagsInput>\r\n                                                </div> : null} */}\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    <div className=\"card bottom\">\r\n                                        <div style={{ padding: '10px 20px 0px' }}>\r\n                                            <span style={{ fontWeight: 'bold' }}>Account B</span>\r\n                                        </div>\r\n\r\n                                        <table className=\"table mt20\">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">Account :</span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center\" style={{ width: '50%' }}>\r\n                                                        {this.renderAccountSelectTo()}\r\n                                                        {(this.state.error == 'accountoptionto') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\r\n\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">From:  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center datepicker_filter\">\r\n                                                        <DatePicker\r\n                                                            selected={this.state.startDateTo}\r\n                                                            onChange={this.handleChangeDateTo}\r\n                                                            isClearable\r\n                                                            placeholderText=\"dd/mm/yyyy\"\r\n                                                            dateFormat=\"dd/MM/yyyy\"\r\n                                                            startDate={this.state.startDateTo}\r\n                                                            endDate={this.state.endDateTo}\r\n                                                        />\r\n\r\n                                                        {(this.state.error == 'startDateTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">To :  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center datepicker_filter\">\r\n                                                        <DatePicker\r\n                                                            selected={this.state.endDateTo}\r\n                                                            onChange={this.handleEndDateTo}\r\n                                                            isClearable\r\n                                                            placeholderText=\"dd/mm/yyyy\"\r\n                                                            dateFormat=\"dd/MM/yyyy\"\r\n                                                            startDate={this.state.startDateTo}\r\n                                                            endDate={this.state.endDateTo}\r\n\r\n                                                        />\r\n\r\n                                                        {(this.state.error == 'enddateto') && <p style={{ color: 'red', fontSize: '13px' }}>*\r\n                                                        Please ensure that the End Date is greater than  the Start Date.</p>}\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr\">\r\n                                                        <span className=\"accnt\">Symbol :  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                        {this.renderSymbolSelectTo()}\r\n                                                        {(this.state.error == 'selectedSymbolOptionTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\r\n\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">Magic Number </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                        <TagsInput\r\n                                                            onValidationReject={() => console.log('rejected')}\r\n                                                            validationRegex={/^[0-9]*$/}\r\n                                                            inputProps={{ placeholder: this.state.magicNumberTo.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumberTo\r\n                                                            } onChange={this.handleChangeMagicNumberTo}></TagsInput>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr checkboxAdjust\">\r\n                                                        <div onClick={this.changeIncludeDefaultPropertyTo} >\r\n                                                            <input\r\n                                                                type=\"radio\" id=\"includeTo\" name=\"includeTo\" checked={this.state.includeTo} />\r\n                                                            <span className=\"accnt \">Include</span>\r\n\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr checkboxAdjust text-center\">\r\n                                                        <div onClick={this.changeExcludeDefaultPropertyTo} >\r\n                                                            <input type=\"radio\" id=\"excludeTo\" name=\"excludeTo\" checked={this.state.excludeTo} />\r\n                                                            <span className=\"accnt \">Exclude</span>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">Ticket </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                        <TagsInput\r\n                                                            onValidationReject={() => console.log('rejected')}\r\n                                                            validationRegex={/^[0-9]*$/}\r\n                                                            inputProps={{ placeholder: this.state.ticketTo.length > 0 ? \"\" : \" Enter Ticket\" }} type=\"number\" value={this.state.ticketTo\r\n                                                            } onChange={this.handleChangeTicketTo}></TagsInput>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr checkboxAdjust\">\r\n                                                        <div onClick={this.changeIncludeDefaultPropertyTicketTo} >\r\n                                                            <input\r\n                                                                type=\"radio\" id=\"includeTicketTo\" name=\"includeTicketTo\" checked={this.state.includeTicketTo} />\r\n                                                            <span className=\"accnt \">Include</span>\r\n\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr checkboxAdjust text-center\">\r\n                                                        <div onClick={this.changeExcludeDefaultPropertyTicketTo} >\r\n                                                            <input type=\"radio\" id=\"excludeTicketTo\" name=\"excludeTicketTo\" checked={this.state.excludeTicketTo} />\r\n                                                            <span className=\"accnt \">Exclude</span>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n\r\n\r\n                                        {/* <div className=\"text-center\">\r\n                                            <span > Magic Number :  </span>\r\n                                        </div>\r\n                                        <table className=\"table mt20\">\r\n                                            <tbody>\r\n\r\n                                                <tr>\r\n                                                    <td className=\"b-clr checkboxAdjust\">\r\n                                                        <div onClick={this.changeIncludeDefaultPropertyTo} >\r\n                                                            <input\r\n                                                                type=\"radio\" id=\"includeTo\" name=\"includeTo\" checked={this.state.includeTo} />\r\n                                                            <span class=\"accnt \">Include</span>\r\n\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr checkboxAdjust\">\r\n                                                        <div onClick={this.changeExcludeDefaultPropertyTo} >\r\n                                                            <input type=\"radio\" id=\"excludeTo\" name=\"excludeTo\" checked={this.state.excludeTo} />\r\n                                                            <span class=\"accnt \">Exclude</span>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                        <div>\r\n\r\n                                            {this.state.showMagicNumberTo === true ?\r\n                                                <div className=\"b-clr magicnumber\" style={{}}>\r\n                                                    <TagsInput\r\n                                                        onValidationReject={() => console.log('rejected')}\r\n                                                        validationRegex={/^[0-9]*$/}\r\n                                                        inputProps={{ placeholder: this.state.magicNumber.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumberTo\r\n                                                        } onChange={this.handleChangeMagicNumberTo}></TagsInput>\r\n                                                </div> : null}\r\n                                        </div>\r\n\r\n                                        <div className=\"text-center\">\r\n                                                <span > Ticket  </span>\r\n                                            </div>\r\n                                            <table className=\"table mt20\">\r\n                                                <tbody>\r\n\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr checkboxAdjust\">\r\n                                                            <div onClick={this.changeIncludeDefaultPropertyTicketTo} >\r\n                                                                <input\r\n                                                                    type=\"radio\" id=\"includeTicketTo\" name=\"includeTicketTo\" checked={this.state.includeTicketTo} />\r\n                                                                <span className=\"accnt \">Include</span>\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr checkboxAdjust text-center\">\r\n                                                            <div onClick={this.changeExcludeDefaultPropertyTicketTo} >\r\n                                                                <input type=\"radio\" id=\"excludeTicketTo\" name=\"excludeTicketTo\" checked={this.state.excludeTicketTo} />\r\n                                                                <span className=\"accnt \">Exclude</span>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                            <div>\r\n\r\n                                                {this.state.showTicketTo === true ?\r\n                                                    <div className=\"b-clr magicnumber\" style={{}}>\r\n                                                        <TagsInput\r\n                                                            onValidationReject={() => console.log('rejected')}\r\n                                                            validationRegex={/^[0-9]*$/}\r\n                                                            inputProps={{ placeholder: this.state.ticketTo.length > 0 ? \"\" : \" Enter Ticket\" }} type=\"number\" value={this.state.ticketTo\r\n                                                            } onChange={this.handleChangeTicketTo}></TagsInput>\r\n                                                    </div> : null}\r\n                                            </div> */}\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <hr></hr>\r\n                            <div className=\"chceckbox\">\r\n\r\n                                <label class=\"checkbox-inline\"><input type=\"checkbox\" checked={this.state.showCommission} onChange={this.handeChangeShowCommission} /><b>Add Commission</b></label>\r\n                            </div>\r\n\r\n\r\n\r\n                            {this.state.showCommission &&\r\n                                <div className=\"center-com d-flex\">\r\n                                    <div className=\"com\">\r\n                                        <h3 style={{ fontWeight: 'bold' }} data-tip=\"Commission\">Commission</h3>\r\n                                        <ReactTooltip />\r\n\r\n                                    </div>\r\n                                    <table className=\"table mt20\">\r\n\r\n                                        <tbody>\r\n                                            <tr>\r\n\r\n                                                <td className=\"b-clr \">\r\n                                                    <span className=\"accnt\"> Account :</span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center\" style={{ width: '50%' }}>\r\n                                                    {this.renderCommissionAccount()}\r\n                                                    {(this.state.error == 'selectedCommissionAccount') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account </p>}\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span className=\"accnt\">From </span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center datepicker_filter\">\r\n                                                    <DatePicker\r\n                                                        selected={this.state.startDateComm}\r\n                                                        onChange={this.handleChangeDateComm}\r\n                                                        isClearable\r\n                                                        placeholderText=\"dd/mm/yyyy\"\r\n                                                        dateFormat=\"dd/MM/yyyy\"\r\n                                                        startDate={this.state.startDateComm}\r\n                                                        endDate={this.state.endDateComm}\r\n                                                        strictParsing\r\n                                                    />\r\n                                                    {this.state.error == \"startDateComm\" && (\r\n                                                        <p style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                                                            *Please Select Start Date\r\n                                                        </p>\r\n                                                    )}\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span className=\"accnt\">To </span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center datepicker_filter\">\r\n                                                    <DatePicker\r\n                                                        selected={this.state.endDateComm}\r\n                                                        onChange={this.handleEndDateComm}\r\n                                                        isClearable\r\n                                                        placeholderText=\"dd/mm/yyyy\"\r\n                                                        dateFormat=\"dd/MM/yyyy\"\r\n                                                        startDate={this.state.startDateComm}\r\n                                                        endDate={this.state.endDateComm}\r\n                                                    />\r\n                                                    {this.state.error == \"enddatecomm\" && (\r\n                                                        <p style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                                                            * Please ensure that the End Date is greater\r\n                                                            than the Start Date.\r\n                                                        </p>\r\n                                                    )}\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span className=\"accnt\">Magic Number </span>\r\n                                                </td>\r\n                                                <td\r\n                                                    className=\"b-clr text-center\"\r\n                                                    style={{ width: \"40%\" }}\r\n                                                >\r\n                                                    <TagsInput\r\n                                                        onValidationReject={() =>\r\n                                                            console.log(\"rejected\")\r\n                                                        }\r\n                                                        validationRegex={/^[0-9]*$/}\r\n                                                        inputProps={{\r\n                                                            placeholder:\r\n                                                                this.state.comm_magicNumber.length > 0\r\n                                                                    ? \"\"\r\n                                                                    : \" Enter Magic Number\",\r\n                                                        }}\r\n                                                        type=\"number\"\r\n                                                        value={this.state.comm_magicNumber}\r\n                                                        onChange={this.handleChangeMagicNumberComm}\r\n                                                    ></TagsInput>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr dataAdjust\">\r\n                                                    <div\r\n                                                        onClick={this.changeIncludeDefaultPropertyComm}\r\n                                                    >\r\n                                                        <input\r\n                                                            type=\"radio\"\r\n                                                            id=\"includecomm\"\r\n                                                            name=\"includecomm\"\r\n                                                            checked={this.state.includeComm}\r\n                                                        />\r\n                                                        <span className=\"accnt \">Include</span>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center\">\r\n                                                    <div\r\n                                                        onClick={this.changeExcludeDefaultPropertyComm}\r\n                                                    >\r\n                                                        <input\r\n                                                            type=\"radio\"\r\n                                                            id=\"excludeComm\"\r\n                                                            name=\"excludeComm\"\r\n                                                            checked={this.state.excludeComm}\r\n                                                        />\r\n                                                        <span className=\"accnt \">Exclude</span>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n\r\n                            }\r\n                            <div className=\"save_button_filter\">\r\n                                <Button className=\"btn-primary savebutton\" variant=\"primary\" size=\"lg\" block onClick={(e) => this.formDataSubmit(e)}>\r\n                                    <b>Update</b>\r\n                                </Button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilterEdite;\r\n","import React, { Component } from \"react\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\r\nimport ReactTooltip from 'react-tooltip';\r\nvar moment = require(\"moment\");\r\n\r\nclass FilterDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      autoSyncClose: false,\r\n      exclude: false,\r\n      include: false,\r\n      excludeTo: false,\r\n      includeTo: false,\r\n      excludeTicket: false,\r\n      includeTicket: false,\r\n      excludeTicketTo: false,\r\n      includeTicketTo: false,\r\n      showMagicNumberFrom: false,\r\n      showMagicNumberTo: false,\r\n      showTicketFrom: false,\r\n      showTicketTo: false,\r\n      includeComm: false,\r\n      excludeComm: false,\r\n      showMagicNumberComm: false,\r\n    };\r\n  }\r\n  crossClick(e) {\r\n    e.preventDefault();\r\n    this.props.onHide();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let data = this.props.data;\r\n    this.setState({\r\n      autoSyncClose: data.auto_close == 1 ? true : false,\r\n      include: data.from_include_exclude_status == 1 ? true : false,\r\n      exclude: data.from_include_exclude_status == 2 ? true : false,\r\n      includeTo: data.to_include_exclude_status == 1 ? true : false,\r\n      excludeTo: data.to_include_exclude_status == 2 ? true : false,\r\n      includeComm: data.comm_include_exclude_status == 1 ? true : false,\r\n      excludeComm: data.comm_include_exclude_status == 2 ? true : false,\r\n      showMagicNumberComm: data.comm_include_exclude_status !== 0 ? true : false,\r\n      includeTicket:\r\n        data.from_include_exclude_status_ticket == 1 ? true : false,\r\n      excludeTicket:\r\n        data.from_include_exclude_status_ticket == 2 ? true : false,\r\n      includeTicketTo:\r\n        data.to_include_exclude_status_ticket == 1 ? true : false,\r\n      excludeTicketTo:\r\n        data.to_include_exclude_status_ticket == 2 ? true : false,\r\n      showMagicNumberFrom:\r\n        data.from_include_exclude_status !== 0 ? true : false,\r\n      showMagicNumberTo: data.to_include_exclude_status !== 0 ? true : false,\r\n      showTicketFrom:\r\n        data.from_include_exclude_status_ticket !== 0 ? true : false,\r\n      showTicketTo: data.to_include_exclude_status_ticket !== 0 ? true : false,\r\n    });\r\n  }\r\n\r\n  // componentWillMount = () => {\r\n  //     console.log(this.props,'props..................');\r\n  // }\r\n\r\n  render() {\r\n    let data = this.props.data;\r\n    console.log(data);\r\n    let frm_ticket = data.from_ticket !== \"\" && JSON.parse(data.from_ticket);\r\n    let to_ticket = data.to_ticket !== \"\" && JSON.parse(data.to_ticket);\r\n    let frm_magic =\r\n      data.from_magic_number !== \"\" && JSON.parse(data.from_magic_number);\r\n    let to_magic =\r\n      data.to_magic_number !== \"\" && JSON.parse(data.to_magic_number);\r\n    let comm_magic_number = data.comm_magic_number !== \"\" && JSON.parse(data.comm_magic_number);\r\n    let from_symbol = JSON.parse(data.from_symbols);\r\n    let to_symbol = JSON.parse(data.to_symbols);\r\n    from_symbol = from_symbol.join(\", \");\r\n    to_symbol = to_symbol.join(\", \");\r\n    return (\r\n      <div className=\"content\">\r\n        <Grid fluid>\r\n          <div className=\"symbol-box\">\r\n            <div className=\"cross_div\">\r\n              <a onClick={(e) => this.crossClick(e)}>\r\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n              </a>\r\n            </div>\r\n            <div className=\"detail-text\">\r\n              <h3> {data.profile_name} </h3>\r\n            </div>\r\n            <div className=\"synclose\">\r\n              <label className=\"checkbox-inline\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={this.state.autoSyncClose}\r\n                  name=\"changeAutoSync\"\r\n                />\r\n                <b>Auto Sync Close</b>\r\n              </label>\r\n            </div>\r\n            <Row>\r\n              <Col md={6}>\r\n                <div className=\"card\">\r\n                  <div\r\n                    className=\"detail_account\"\r\n                    style={{ padding: \"10px 20px 0px\" }}\r\n                  >\r\n                    <span style={{ fontWeight: \"bold\" }}>Account A</span>\r\n                  </div>\r\n                  <table className=\"table mt20\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <td className=\"b-clr\">\r\n                          <span>Account :</span>\r\n                        </td>\r\n\r\n                        <td\r\n                          className=\"b-clr text-center\"\r\n                          style={{ width: \"50%\" }}\r\n                        >\r\n                          {data.accountFromInfo[0].login}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"b-clr \">\r\n                          <span>From : </span>\r\n                        </td>\r\n                        <td className=\"b-clr text-center datepicker_filter\">\r\n                          {moment(data.startdateFrom).format(\"DD/MM/YYYY\")}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"b-clr \">\r\n                          <span>To : </span>\r\n                        </td>\r\n                        <td className=\"b-clr text-center datepicker_filter\">\r\n                          {data.enddateFrom !== null\r\n                            ? moment(data.enddateFrom).format(\"DD/MM/YYYY\")\r\n                            : \"-\"}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"b-clr \">\r\n                          <span>Symbol : </span>\r\n                        </td>\r\n                        <td\r\n                          className=\"b-clr text-center\"\r\n                          style={{ width: \"50%\" }}\r\n                        >\r\n                          {from_symbol}\r\n                        </td>\r\n                      </tr>\r\n                      {this.state.showMagicNumberFrom && (\r\n                        <>\r\n                          <tr>\r\n                            <td className=\"b-clr \">\r\n                              <span>Magic Number : </span>\r\n                            </td>\r\n\r\n                            <td\r\n                              className=\"b-clr text-center\"\r\n                              style={{ width: \"50%\" }}\r\n                            >\r\n                              <div\r\n                                className=\"row\"\r\n                                style={{\r\n                                  width: \"100%\",\r\n                                  display: \"flex\",\r\n                                  flexWrap: \"wrap\",\r\n                                }}\r\n                              >\r\n                                {frm_magic &&\r\n                                  frm_magic.map((item, index) => (\r\n                                    <div key={index} className=\"tags-all\">\r\n                                      {item}\r\n                                    </div>\r\n                                  ))}\r\n                              </div>{\" \"}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td className=\"b-clr dataAdjust\">\r\n                              <div onClick={this.changeIncludeDefaultProperty}>\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"include\"\r\n                                  name=\"include\"\r\n                                  checked={this.state.include}\r\n                                />\r\n                                <span className=\"accnt \">Include</span>\r\n                              </div>\r\n                            </td>\r\n                            <td className=\"b-clr \">\r\n                              <div onClick={this.changeExcludeDefaultProperty}>\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"exclude\"\r\n                                  name=\"exclude\"\r\n                                  checked={this.state.exclude}\r\n                                />\r\n                                <span className=\"accnt \">Exclude</span>\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                        </>\r\n                      )}\r\n                      {this.state.showTicketFrom && (\r\n                        <>\r\n                          <tr>\r\n                            <td className=\"b-clr \">\r\n                              <span>Ticket : </span>\r\n                            </td>\r\n\r\n                            <td\r\n                              className=\"b-clr text-center\"\r\n                              style={{ width: \"50%\" }}\r\n                            >\r\n                              <div\r\n                                className=\"row\"\r\n                                style={{\r\n                                  width: \"100%\",\r\n                                  display: \"flex\",\r\n                                  flexWrap: \"wrap\",\r\n                                }}\r\n                              >\r\n                                {frm_ticket &&\r\n                                  frm_ticket.map((item, index) => (\r\n                                    <div key={index} className=\"tags-all\">\r\n                                      {item}\r\n                                    </div>\r\n                                  ))}\r\n                              </div>{\" \"}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td className=\"b-clr dataAdjust\">\r\n                              <div\r\n                                onClick={\r\n                                  this.changeIncludeDefaultPropertyTicket\r\n                                }\r\n                              >\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"includeTicket\"\r\n                                  name=\"includeTicket\"\r\n                                  checked={this.state.includeTicket}\r\n                                />\r\n                                <span className=\"accnt \">Include</span>\r\n                              </div>\r\n                            </td>\r\n                            <td className=\"b-clr \">\r\n                              <div\r\n                                onClick={\r\n                                  this.changeExcludeDefaultPropertyTicket\r\n                                }\r\n                              >\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"excludeTicket\"\r\n                                  name=\"excludeTicket\"\r\n                                  checked={this.state.excludeTicket}\r\n                                />\r\n                                <span className=\"accnt \">Exclude</span>\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                        </>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </Col>\r\n              <Col md={6}>\r\n                <div className=\"card\">\r\n                  <div\r\n                    className=\"detail_account\"\r\n                    style={{ padding: \"10px 20px 0px\" }}\r\n                  >\r\n                    <span style={{ fontWeight: \"bold\" }}>Account B</span>\r\n                  </div>\r\n\r\n                  <table className=\"table mt20\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <td className=\"b-clr \">\r\n                          <span>Account :</span>\r\n                        </td>\r\n                        <td\r\n                          className=\"b-clr text-center\"\r\n                          style={{ width: \"50%\" }}\r\n                        >\r\n                          {data.accountToInfo[0].login}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"b-clr \">\r\n                          <span>From : </span>\r\n                        </td>\r\n                        <td className=\"b-clr text-center datepicker_filter\">\r\n                          {moment(data.startdateTo).format(\"DD/MM/YYYY\")}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"b-clr \">\r\n                          <span>To : </span>\r\n                        </td>\r\n                        <td className=\"b-clr text-center datepicker_filter\">\r\n                          {data.enddateTo != null\r\n                            ? moment(data.enddateTo).format(\"DD/MM/YYYY\")\r\n                            : \"-\"}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"b-clr\">\r\n                          <span>Symbol : </span>\r\n                        </td>\r\n                        <td\r\n                          className=\"b-clr text-center\"\r\n                          style={{ width: \"50%\" }}\r\n                        >\r\n                          {to_symbol}\r\n                        </td>\r\n                      </tr>\r\n                      {this.state.showMagicNumberTo && (\r\n                        <>\r\n                          <tr>\r\n                            <td className=\"b-clr\">\r\n                              <span>Magic Number : </span>\r\n                            </td>\r\n                            <td\r\n                              className=\"b-clr text-center\"\r\n                              style={{ width: \"50%\" }}\r\n                            >\r\n                              <div\r\n                                className=\"row\"\r\n                                style={{\r\n                                  width: \"100%\",\r\n                                  display: \"flex\",\r\n                                  flexWrap: \"wrap\",\r\n                                }}\r\n                              >\r\n                                {to_magic &&\r\n                                  to_magic.map((item, index) => (\r\n                                    <div key={index} className=\"tags-all\">\r\n                                      {item}\r\n                                    </div>\r\n                                  ))}\r\n                              </div>{\" \"}\r\n                            </td>\r\n                          </tr>\r\n\r\n                          <tr>\r\n                            <td className=\"b-clr checkboxAdjust\">\r\n                              <div\r\n                                onClick={this.changeIncludeDefaultPropertyTo}\r\n                              >\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"includeTo\"\r\n                                  name=\"includeTO\"\r\n                                  checked={this.state.includeTo}\r\n                                />\r\n                                <span className=\"accnt \">Include</span>\r\n                              </div>\r\n                            </td>\r\n                            <td className=\"b-clr checkboxAdjust\">\r\n                              <div\r\n                                onClick={this.changeExcludeDefaultPropertyTo}\r\n                              >\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"exclude\"\r\n                                  name=\"exclude\"\r\n                                  checked={this.state.excludeTo}\r\n                                />\r\n                                <span className=\"accnt \">Exclude</span>\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                        </>\r\n                      )}\r\n                      {this.state.showTicketTo && (\r\n                        <>\r\n                          <tr>\r\n                            <td className=\"b-clr\">\r\n                              <span>Ticket : </span>\r\n                            </td>\r\n                            <td\r\n                              className=\"b-clr text-center\"\r\n                              style={{ width: \"50%\" }}\r\n                            >\r\n                              <div\r\n                                className=\"row\"\r\n                                style={{\r\n                                  width: \"100%\",\r\n                                  display: \"flex\",\r\n                                  flexWrap: \"wrap\",\r\n                                }}\r\n                              >\r\n                                {to_ticket &&\r\n                                  to_ticket.map((item, index) => (\r\n                                    <div key={index} className=\"tags-all\">\r\n                                      {item}\r\n                                    </div>\r\n                                  ))}\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n\r\n                          <tr>\r\n                            <td className=\"b-clr checkboxAdjust\">\r\n                              <div\r\n                                onClick={\r\n                                  this.changeIncludeDefaultPropertyTicketTo\r\n                                }\r\n                              >\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"includeTicketTo\"\r\n                                  name=\"includeTicketTo\"\r\n                                  checked={this.state.includeTicketTo}\r\n                                />\r\n                                <span className=\"accnt \">Include</span>\r\n                              </div>\r\n                            </td>\r\n                            <td className=\"b-clr checkboxAdjust\">\r\n                              <div\r\n                                onClick={\r\n                                  this.changeExcludeDefaultPropertyTicketTo\r\n                                }\r\n                              >\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"excludeTicketTo\"\r\n                                  name=\"excludeTicketTo\"\r\n                                  checked={this.state.excludeTicketTo}\r\n                                />\r\n                                <span className=\"accnt \">Exclude</span>\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                        </>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </Col>\r\n              {data.commission_acount_id !== 0 && (\r\n                <Col md={12}>\r\n                  <div className=\"card bottom\">\r\n                    <div\r\n                      className=\"detail_account\"\r\n                      style={{ padding: \"10px 20px 0px\" }}\r\n                    >\r\n                      <h3 style={{ fontWeight: \"bold\" }} data-tip=\"Commission\">Commission</h3>\r\n                      <ReactTooltip />\r\n                    </div>\r\n                    <table className=\"table mt20\">\r\n                      <tbody>\r\n                        <tr>\r\n                          <td\r\n                            className=\"b-clr text-center\"\r\n                            style={{ width: \"50%\" }}\r\n                          >\r\n                            <span>Account :</span>\r\n                          </td>\r\n                          <td\r\n                            className=\"b-clr text-center\"\r\n                            style={{ width: \"50%\" }}\r\n                          >\r\n                            {data.accountCommissionInfo[0].login}\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td className=\"b-clr text-center\" style={{ width: \"50%\" }}>\r\n                            <span>From : </span>\r\n                          </td>\r\n                          <td className=\"b-clr text-center datepicker_filter\" style={{ width: \"50%\" }}>\r\n                            {moment(data.startdateComm).format(\"DD/MM/YYYY\")}\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td className=\"b-clr text-center\" style={{ width: \"50%\" }}>\r\n                            <span>To : </span>\r\n                          </td>\r\n                          <td className=\"b-clr text-center datepicker_filter\" style={{ width: \"50%\" }}>\r\n                            {data.enddateComm != null\r\n                              ? moment(data.enddateComm).format(\"DD/MM/YYYY\")\r\n                              : \"-\"}\r\n                          </td>\r\n                        </tr>\r\n                        {this.state.showMagicNumberComm && (\r\n                          <>\r\n                            <tr>\r\n                              <td className=\"b-clr text-center\" style={{ width: \"50%\" }}>\r\n                                <span>Magic Number : </span>\r\n                              </td>\r\n                              <td\r\n                                className=\"b-clr text-center\"\r\n                                style={{ width: \"50%\" }}\r\n                              >\r\n                                <div\r\n                                  className=\"row\"\r\n                                  style={{\r\n                                    width: \"100%\",\r\n                                    display: \"flex\",\r\n                                    flexWrap: \"wrap\",\r\n                                    justifyContent: \"center\"\r\n                                  }}\r\n                                >\r\n                                  {comm_magic_number &&\r\n                                    comm_magic_number.map((item, index) => (\r\n                                      <div key={index} className=\"tags-all\">\r\n                                        {item}\r\n                                      </div>\r\n                                    ))}\r\n                                </div>{\" \"}\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td className=\"b-clr text-center dataAdjust\">\r\n                                <div onClick={this.changeIncludeDefaultProperty}>\r\n                                  <input\r\n                                    type=\"radio\"\r\n                                    id=\"includeComm\"\r\n                                    name=\"includeComm\"\r\n                                    checked={this.state.includeComm}\r\n                                  />\r\n                                  <span className=\"accnt \">Include</span>\r\n                                </div>\r\n                              </td>\r\n                              <td className=\"b-clr text-center\">\r\n                                <div onClick={this.changeExcludeDefaultProperty}>\r\n                                  <input\r\n                                    type=\"radio\"\r\n                                    id=\"excludeComm\"\r\n                                    name=\"excludeComm\"\r\n                                    checked={this.state.excludeComm}\r\n                                  />\r\n                                  <span className=\"accnt \">Exclude</span>\r\n                                </div>\r\n                              </td>\r\n                            </tr>\r\n                          </>\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </Col>\r\n              )}\r\n            </Row>\r\n          </div>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterDetail;\r\n","import React, { Component } from \"react\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\r\nimport Innerfilter from \"../filter/innerfilter\";\r\nimport FilterEdite from \"../filter/filteredit\";\r\nimport FilterDetail from \"../filter/filterdetail\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport config from \"../../constant/config.js\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport { api } from \"api\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport myInitObject from \"../../api\";\r\n\r\nconst axios = require(\"axios\");\r\nvar moment = require(\"moment\");\r\n\r\nclass Filterprofile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Innerfilter: false,\r\n      filter: true,\r\n      filterData: [],\r\n      deleteData: [],\r\n      editeData: [],\r\n      showDelete: false,\r\n      showEdit: false,\r\n      detailForm: false,\r\n      detailData: [],\r\n      count: \"\",\r\n      pages: \"\",\r\n      page: 1,\r\n      dateTime:'',\r\n    };\r\n\r\n    // this.handleDropdownChange = this.handleDropdownChange.bind(this);\r\n  }\r\n  fetchfilterdata() {\r\n    let token = JSON.parse(localStorage.getItem(\"accessToken\"));\r\n    let self = this;\r\n    axios\r\n      .get(config.baseurl + `/filter/fetchfilterdata?page=${self.state.page}`, {\r\n        headers: { \"x-access-token\": token },\r\n      })\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          self.setState({\r\n            filterData: response.data.rows,\r\n            count: response.data.count,\r\n            pages: response.data.pages,\r\n          });\r\n        }\r\n      });\r\n  }\r\n  handlePageClick = (data) => {\r\n    this.setState({ page: data.selected + 1 }, () => {\r\n      this.fectheAllAccount(this.state.page);\r\n    });\r\n  };\r\n  showInnerfilter = () => {\r\n    this.setState({ Innerfilter: true, filter: false });\r\n  };\r\n  componentDidMount() {\r\n    this.fetchfilterdata();\r\n    setInterval(() => {\r\n      if (myInitObject.responsLUT === undefined) {\r\n        console.log(\"no data\");\r\n      } else {\r\n        this.setState({\r\n          //last update time\r\n          dateTime: myInitObject.fetchLastUpdatedTime.filteredInfoTime,\r\n        });\r\n      }\r\n    }, 1000);\r\n    // let self = this;\r\n    // axios.get(config.baseurl + '/filter/fetchfilterdata')\r\n    //     .then(function (response) {\r\n    //         if (response.status == 200) {\r\n    //             self.setState({ filterData: response.data.rows })\r\n    //         }\r\n    //     }) adfasdfsd\r\n  }\r\n\r\n  createNotification = (profile_name, type) => {\r\n    NotificationManager.listNotify = [];\r\n    NotificationManager.info(\"Profile Is Activated !\", profile_name);\r\n  };\r\n\r\n  createWariningNotification = (profile_name, type) => {\r\n    NotificationManager.listNotify = [];\r\n    NotificationManager.error(\"Profile Is Deactivated !\", profile_name);\r\n  };\r\n\r\n  activateClick(e, data) {\r\n    e.preventDefault();\r\n    let token = JSON.parse(localStorage.getItem(\"accessToken\"));\r\n    let Data = {\r\n      id: data.id,\r\n      status: 1,\r\n    };\r\n    let self = this;\r\n    axios\r\n      .post(config.baseurl + \"/filter/updatefilterdata\", Data, {\r\n        headers: { \"x-access-token\": token },\r\n      })\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          self.fetchfilterdata();\r\n          self.createNotification(data.profile_name, \"info\");\r\n          // self.setState({ filterData: response.data.rows })\r\n          api();\r\n        }\r\n      });\r\n  }\r\n\r\n  //  App(){\r\n  //     const notify = () => toast(\"Wow so easy !\");\r\n\r\n  //     return (\r\n  //       <div>\r\n  //         <button onClick={notify}>Notify !</button>\r\n  //         <ToastContainer />\r\n  //       </div>\r\n  //     );\r\n  //   }\r\n\r\n  deactivateClick(e, data) {\r\n    e.preventDefault();\r\n    let token = JSON.parse(localStorage.getItem(\"accessToken\"));\r\n    let Data = {\r\n      id: data.id,\r\n      status: 0,\r\n    };\r\n    let self = this;\r\n    axios\r\n      .post(config.baseurl + \"/filter/updatefilterdata\", Data, {\r\n        headers: { \"x-access-token\": token },\r\n      })\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          self.fetchfilterdata();\r\n          self.createWariningNotification(data.profile_name, \"error\");\r\n          // self.setState({ filterData: response.data.rows })\r\n        }\r\n      });\r\n  }\r\n  editFilter = (e, data) => {\r\n    // e.preventDefault();\r\n    if (this.state.endDate == null || this.state.endDate == \"\") {\r\n      let newDate = new Date();\r\n      this.setState({ endDate: newDate });\r\n      return;\r\n    }\r\n    this.setState({ showEdit: true, editeData: data });\r\n  };\r\n\r\n  deleteFilter(e, data) {\r\n    e.preventDefault();\r\n    this.setState({ deleteData: data, showDelete: true });\r\n  }\r\n  deletepopupClick(e) {\r\n    e.preventDefault();\r\n    let Data = {\r\n      id: this.state.deleteData.id,\r\n    };\r\n    let self = this;\r\n    axios\r\n      .post(config.baseurl + \"/filter/deletefilter\", Data)\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          self.setState({ showDelete: false });\r\n          self.fetchfilterdata();\r\n        }\r\n      });\r\n  }\r\n  deletepopupclose(e) {\r\n    e.preventDefault();\r\n    this.setState({ showDelete: false });\r\n  }\r\n  viewFilter(e, data) {\r\n    e.preventDefault();\r\n\r\n    this.setState({ detailForm: true, detailData: data });\r\n  }\r\n\r\n  createTr = () => {\r\n    return (\r\n      this.state.filterData.length > 0 &&\r\n      this.state.filterData.map((item, index) => {\r\n        return (\r\n          <tr key={index}>\r\n            <th scope=\"row\">{index + 1}</th>\r\n            <td>{item.profile_name}</td>\r\n            <td>{moment(item.createdAt).format(\"DD/MM/YYYY\")}</td>\r\n            {/* <td>{item.status == 1 ? 'Activated' : 'Deactivated' }</td> */}\r\n            <td>\r\n              {JSON.parse(localStorage.getItem(\"currentUser\"))[0].role ===\r\n              \"user\" ? (\r\n                <>\r\n                  {item.user_status == 0 ? (\r\n                    <div className=\"activate_button pointer\">\r\n                      <span\r\n                        className=\"button_interactivate btcolor\"\r\n                        onClick={(e) => this.activateClick(e, item)}\r\n                      >\r\n                        {\" \"}\r\n                        Activate{\" \"}\r\n                      </span>{\" \"}\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"deactivate_button pointer\">\r\n                      <span\r\n                        className=\"button_deactivate pointer\"\r\n                        onClick={(e) => this.deactivateClick(e, item)}\r\n                      >\r\n                        Deactivate\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {item.status == 0 ? (\r\n                    <div className=\"activate_button pointer\">\r\n                      <span\r\n                        className=\"button_interactivate btcolor\"\r\n                        onClick={(e) => this.activateClick(e, item)}\r\n                      >\r\n                        {\" \"}\r\n                        Activate{\" \"}\r\n                      </span>{\" \"}\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"deactivate_button pointer\">\r\n                      <span\r\n                        className=\"button_deactivate pointer\"\r\n                        onClick={(e) => this.deactivateClick(e, item)}\r\n                      >\r\n                        Deactivate\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n            </td>\r\n            <td>\r\n              <span onClick={(e) => this.viewFilter(e, item)}>\r\n                <i className=\"pointer fa fa-eye facolor\" aria-hidden=\"true\"></i>\r\n              </span>\r\n              {JSON.parse(localStorage.getItem(\"currentUser\"))[0].role !==\r\n                \"user\" && (\r\n                <>\r\n                  <span onClick={(e) => this.editFilter(e, item)}>\r\n                    <i\r\n                      className=\"pointer fa fa-pencil-square-o facolor\"\r\n                      aria-hidden=\"true\"\r\n                    ></i>\r\n                  </span>\r\n                  {item.status == 0 && (\r\n                    <span onClick={(e) => this.deleteFilter(e, item)}>\r\n                      <i\r\n                        className=\"pointer fa fa-trash facolor\"\r\n                        aria-hidden=\"true\"\r\n                      ></i>\r\n                    </span>\r\n                  )}\r\n                </>\r\n              )}\r\n            </td>\r\n            {/* <td>{item.accountToInfo[0].login}</td>\r\n                    <td>{moment(item.startdateFrom).format(\"DD/MM/YYYY\") + ' - ' + moment(item.enddateFrom).format(\"DD/MM/YYYY\")}</td>\r\n                    <td>{moment(item.startdateTo).format(\"DD/MM/YYYY\") + ' - ' + moment(item.enddateTo).format(\"DD/MM/YYYY\")}</td>\r\n                    <td>{item.from_symbols}</td>\r\n                    <td>{item.to_symbols}</td> */}\r\n            {/* <td style={{fontWeight:600}}>{item.status == 1 && 'Connected'}</td> */}\r\n          </tr>\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n    return (\r\n      <>\r\n        <NotificationContainer />\r\n        <Row>\r\n              <div className=\"lastUpdate\">\r\n                <span> Last Updated : </span>\r\n                {this.state.dateTime}(UTC){\" \"}\r\n              </div>\r\n            </Row>\r\n        <div className=\"content\">\r\n          {this.state.detailForm ? (\r\n            <FilterDetail\r\n              data={this.state.detailData}\r\n              show={this.state.detailForm}\r\n              onHide={() => this.setState({ detailForm: false })}\r\n            />\r\n          ) : (\r\n            <>\r\n              {this.state.showEdit ? (\r\n                <FilterEdite\r\n                  data={this.state.editeData}\r\n                  show={this.state.showEdit}\r\n                  // onHide={() => this.setState({ showEdit: false })}\r\n                  onHide={() =>\r\n                    this.setState({ showEdit: false }, () =>\r\n                      this.fetchfilterdata()\r\n                    )\r\n                  }\r\n                />\r\n              ) : (\r\n                <>\r\n                  {!this.state.Innerfilter && (\r\n                    <Grid fluid>\r\n                      <div className=\"selection-box\">\r\n                        <span className=\"terminal-text\"> Profiles </span>\r\n\r\n                        {/* <span className=\"icon-style\">\r\n                            <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\r\n                        </span> */}\r\n                        {/* <Link to=\"/innerfilter\">\r\n                       <button className=\"pull-right\">Add New</button>\r\n                       </Link> */}\r\n\r\n                        {/* <Link to=\"/admin/innerfilter\">\r\n                       <button className=\"pull-right\">abc</button>\r\n                       </Link> */}\r\n                      </div>\r\n                      {currentUser[0].role !== \"user\" && (\r\n                        <button\r\n                          className=\"pull-right filter-add-button\"\r\n                          onClick={this.showInnerfilter}\r\n                        >\r\n                          Add New\r\n                        </button>\r\n                      )}\r\n                    </Grid>\r\n                  )}\r\n                  {\r\n                    this.state.Innerfilter ? (\r\n                      <Innerfilter\r\n                        show={this.state.Innerfilter}\r\n                        onHide={() =>\r\n                          this.setState({ Innerfilter: false }, () => {\r\n                            this.fetchfilterdata();\r\n                          })\r\n                        }\r\n                      />\r\n                    ) : (\r\n                      <div style={{ background: \"#ffffff\" }}>\r\n                        <Row>\r\n                          <Col md={12}>\r\n                            <div style={{ padding: \"10px\" }}>\r\n                              <table className=\"table table-striped table-bordered\">\r\n                                <thead>\r\n                                  <tr>\r\n                                    <th scope=\"col\">Sr.No.</th>\r\n                                    <th scope=\"col\">Profile Name</th>\r\n                                    <th scope=\"col\">Created At</th>\r\n                                    <th scope=\"col\">Status</th>\r\n                                    <th scope=\"col\">Action</th>\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                  {/* {this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => { */}\r\n\r\n                                  {this.createTr()}\r\n                                  {/* })} */}\r\n                                  {/* <tr>\r\n                                                <th scope=\"row\">2</th>\r\n                                                <td>Jacob</td>\r\n                                                <td>Thornton</td>\r\n                                                <td>5.1.2.9</td>\r\n                                                <td>Connected</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th scope=\"row\">3</th>\r\n                                                <td>Larry</td>\r\n                                                <td>the Bird</td>\r\n                                                <td>ab@123</td>\r\n                                                <td>Connected</td>\r\n                                            </tr> */}\r\n                                </tbody>\r\n                              </table>\r\n                              <ReactPaginate\r\n                                previousLabel={\"prev\"}\r\n                                nextLabel={\"next\"}\r\n                                breakLabel={\"...\"}\r\n                                pageCount={this.state.pages}\r\n                                marginPagesDisplayed={9}\r\n                                pageRangeDisplayed={9}\r\n                                onPageChange={(e) => this.handlePageClick(e)}\r\n                                containerClassName={\"pagination\"}\r\n                                subContainerClassName={\"pages pagination\"}\r\n                                activeClassName={\"active\"}\r\n                              />\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                    )\r\n                    //     <div className=\"filter_page_table\">\r\n                    //     <table className=\"table table-striped\">\r\n                    //         <thead>\r\n                    //             <tr>\r\n                    //                 <th scope=\"col\">Sr.No.</th>\r\n                    //                 <th scope=\"col\">Profile Name</th>\r\n                    //                 <th scope=\"col\">Created At</th>\r\n                    //                 <th scope=\"col\">Status</th>\r\n                    //                 <th scope=\"col\">Action</th>\r\n                    //             </tr>\r\n                    //         </thead>\r\n                    //         <tbody>\r\n                    //             {this.createTr()}\r\n                    //         </tbody>\r\n                    //     </table>\r\n\r\n                    // </div>\r\n                  }\r\n\r\n                  {this.state.showDelete && (\r\n                    <div className=\"delete_popup\">\r\n                      <h3>Are you sure ?</h3>\r\n                      <span\r\n                        className=\"pointer dltbtn\"\r\n                        onClick={(e) => this.deletepopupClick(e)}\r\n                      >\r\n                        Delete\r\n                      </span>\r\n                      <span\r\n                        className=\"pointer closebtn\"\r\n                        onClick={(e) => this.deletepopupclose(e)}\r\n                      >\r\n                        Close\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filterprofile;\r\n","import React from 'react';\r\nimport { MDBDataTable } from 'mdbreact';\r\nconst moment = require(\"moment\");\r\n\r\nconst DatatablePage = (props) => {\r\n    let data = {\r\n        columns: [\r\n            {\r\n                label: 'Date',\r\n                field: 'date',\r\n                sort: 'asc',\r\n                width: 100\r\n            },\r\n            {\r\n                label: 'Login',\r\n                field: 'account_login',\r\n                sort: 'asc',\r\n                width: 100\r\n            },\r\n            {\r\n                label: 'Symbol',\r\n                field: 'symbol',\r\n                sort: 'asc',\r\n                width: 100\r\n            },\r\n            {\r\n                label: 'Long',\r\n                field: 'swap_long',\r\n                sort: 'asc',\r\n                width: 100\r\n            },\r\n            {\r\n                label: 'Short',\r\n                field: 'swap_short',\r\n                sort: 'asc',\r\n                width: 100\r\n            },\r\n            \r\n        ],\r\n        \r\n        rows: props.data.map(data => {\r\n            data.date = moment(data.date).format('L');\r\n\r\n            data.swap_long = Number.parseFloat(data.swap_long).toFixed(2);\r\n            data.swap_short = Number.parseFloat(data.swap_short).toFixed(2);\r\n            \r\n            return data\r\n        }\r\n        )\r\n    };\r\n    return <MDBDataTable responsive bordered small data={data} />;\r\n}\r\nexport default DatatablePage;","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Col, Row, Label } from \"reactstrap\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport myInitObject from \"../../api\";\r\nimport DatatablePage from \"views/DatatablePage\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Select from \"react-select\";\r\n// import \"react-select/dist/react-select.css\";\r\nconst moment = require(\"moment\");\r\nconst Swap = () => {\r\n  const [dailySwap, setdailySwap] = useState([]);\r\n  const [loading, setloading] = useState([]);\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [account, setAccount] = useState([]);\r\n  const [symbol, setSymbol] = useState([]);\r\n  const [act, setAct] = useState(\"\");\r\n  const [sym, setSym] = useState(\"\");\r\n  const [newResult, setResult] = useState([]);\r\n  const [filterResult, setFilterResult] = useState([]);\r\n  const [filtered, setFiltered] = useState(false);\r\n  const [dateTime, setdateTime] = useState(\"\");\r\n  const [activeProfileName, setactiveProfileName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      if (myInitObject.responsLUT &&\r\n        myInitObject.responsDS &&\r\n        myInitObject.responsAC &&\r\n        myInitObject.responsAS &&\r\n        myInitObject.responsAF === undefined\r\n      ) {\r\n        console.log(\"no data\");\r\n      } else { \r\n        setdateTime(myInitObject.fetchLastUpdatedTime.filteredInfoTime);\r\n        setloading(myInitObject.fetchdailyswaps === 0 ? true : false);\r\n        setdailySwap(myInitObject.fetchdailyswaps.rows);\r\n        setSymbol(myInitObject.fetchAllSymbol.rows);\r\n        setAccount(myInitObject.fetchAllAccounts.rows);\r\n        setResult(myInitObject.fetchdailyswaps.rows);\r\n        setactiveProfileName(myInitObject.fetchActivefilterdata.rows[0].profile_name);\r\n      }\r\n    }, 1000);\r\n  }, []);\r\n  // useEffect(() => {\r\n  //   let sd = moment(startDate).format(\"DD-MM-yyyy\");\r\n  //   let ed = moment(endDate).format(\"DD-MM-yyyy\");\r\n  //   let result = dailySwap.filter((d) => {\r\n  //     var time = moment(d.date).format(\"DD-MM-yyyy\");\r\n  //     if (sd === \"Invalid date\" && ed === \"Invalid date\") {\r\n  //       return dailySwap;\r\n  //     } else if (sd !== \"Invalid date\" && ed === \"Invalid date\") {\r\n  //       return time >= sd;\r\n  //     } else if (sd === \"Invalid date\" && ed !== \"Invalid date\") {\r\n  //       return time <= ed;\r\n  //     } else if (time >= sd && time <= ed) {\r\n  //       return d;\r\n  //     }\r\n  //     //  return (sd <= time && time <= ed);\r\n  //   });\r\n  //   setFilterResult(result);\r\n  // }, [dailySwap]);\r\n  const dateFilter = (date, method) => {\r\n    console.log(date);\r\n    let sd, ed;\r\n    sd = startDate ? startDate : \"\";\r\n    ed = endDate ? endDate : \"\";\r\n    if (method === \"start\") {\r\n      console.log(startDate);\r\n\r\n      sd = date ? moment(date).format(\"MM-DD-yyyy\") : date;\r\n      setStartDate(date);\r\n    }\r\n    if (method === \"end\") {\r\n      console.log(startDate);\r\n      ed = date ? moment(date).format(\"MM-DD-yyyy\") : date;\r\n\r\n      setEndDate(date);\r\n    }\r\n\r\n    // sd = moment(sd).isSameOrBefore(ed, 'day') ? sd : ed;\r\n    // ed = moment(ed).isSameOrAfter(sd, 'day') ? ed : sd;\r\n\r\n    let result = dailySwap.filter((d) => {\r\n      let time = moment(d.date).format(\"MM-DD-yyyy\");\r\n      // if (sd === \"Invalid date\" && ed === \"Invalid date\") {\r\n      //   return dailySwap;\r\n      // } else if (sd !== \"Invalid date\" && ed === \"Invalid date\") {\r\n      //   return time >= sd;\r\n      // } else if (sd === \"Invalid date\" && ed !== \"Invalid date\") {\r\n      //   return time <= ed;\r\n      // } else if (time >= sd && time <= ed) {\r\n      //   return d;\r\n      // }\r\n      if (sd == false && ed == false) {\r\n        return true;\r\n      } else if (sd != false && ed == false) {\r\n        return moment(time).isSameOrAfter(sd, \"day\");\r\n        // return time >= sd;\r\n      } else if (sd == false && ed != false) {\r\n        return moment(time).isSameOrBefore(ed, \"day\");\r\n        // return time <= ed;\r\n      } else if (sd != false && ed != false) {\r\n        return (\r\n          moment(time).isSameOrAfter(sd, \"day\") &&\r\n          moment(time).isSameOrBefore(ed, \"day\")\r\n        );\r\n      }\r\n      //  return (sd <= time && time <= ed);\r\n    });\r\n    console.log(sd, ed, result);\r\n    setFilterResult(result, setFiltered(true));\r\n  };\r\n  const loginData = (paramsact) => {\r\n    setAct(paramsact);\r\n    let result = newResult.filter(\r\n      (d) => d.account_login === String(paramsact.value) && true\r\n    );\r\n    setFilterResult(result, setFiltered(true));\r\n  };\r\n  const symbolData = (paramssym) => {\r\n    setSym(paramssym);\r\n    let result = newResult.filter((d) => d.symbol === paramssym.value && true);\r\n    setFilterResult(result, setFiltered(true));\r\n  };\r\n\r\n  const SymbolSelect = () => {\r\n    let options = symbol.map((data) => {\r\n      return { value: data.name, label: data.name };\r\n    });\r\n\r\n    return (\r\n      <Select\r\n        placeholder=\"Select Symbol...\"\r\n        value={sym}\r\n        onChange={symbolData}\r\n        options={options}\r\n      />\r\n    );\r\n  };\r\n  const AccountSelect = () => {\r\n    let options = account.map((data) => {\r\n      return { value: data.login, label: data.login };\r\n    });\r\n\r\n    return (\r\n      <Select\r\n        placeholder=\"Select Account...\"\r\n        value={act}\r\n        onChange={loginData}\r\n        options={options}\r\n      />\r\n    );\r\n  };\r\n  // console.log(filterResult,  \"filterResult\");\r\n  return (\r\n    <Container fluid>\r\n       <Row className=\"no-margin\">\r\n            <div className=\"lastUpdate\">\r\n              <span> Last Updated : </span>\r\n              {dateTime}(UTC)\r\n            </div>\r\n          </Row>\r\n      <div className=\"pad-y\">\r\n        <div className=\"symbol-box\" style={{ marginBottom: \"20px\" }}>\r\n          <div className=\"openpositions\">\r\n            <span className=\"p-text\">Daily Swaps</span>\r\n          </div>\r\n        </div>\r\n        {loading ? (\r\n          <Loader\r\n            type=\"ThreeDots\"\r\n            color=\"black\"\r\n            height={100}\r\n            width={100}\r\n            style={{ textAlign: \"center\" }}\r\n          />\r\n        ) : (\r\n          <div className=\"symbol-box\">\r\n            <Row>\r\n              <Col md={6}>\r\n                <label>Login</label>\r\n                {AccountSelect()}\r\n              </Col>\r\n              <Col md={6}>\r\n                <label>Symbol</label>\r\n                {SymbolSelect()}\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={12} className=\"filter-date\">\r\n                <Label>Start Date</Label>\r\n                <DatePicker\r\n                  selected={startDate}\r\n                  onChange={(date) => {\r\n                    dateFilter(date, \"start\");\r\n                  }}\r\n                  selectsStart\r\n                  placeholderText=\"mm-dd-yyyy\"\r\n                  dateFormat=\"MM-dd-yyyy\"\r\n                  startDate={startDate}\r\n                  endDate={endDate}\r\n                />\r\n                <Label>End Date</Label>\r\n                <DatePicker\r\n                  selected={endDate}\r\n                  onChange={(date) => {\r\n                    dateFilter(date, \"end\");\r\n                  }}\r\n                  selectsEnd\r\n                  placeholderText=\"mm-dd-yyyy\"\r\n                  dateFormat=\"MM-dd-yyyy\"\r\n                  startDate={startDate}\r\n                  endDate={endDate}\r\n                  minDate={startDate}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <DatatablePage\r\n              data={filtered === true ? filterResult : newResult}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Swap;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { Collapse } from \"reactstrap\";\r\nimport TableList from \"../TableList\";\r\nimport config from \"../../constant/config.js\";\r\nimport DatatablePage from \"../DatatablePage\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { api } from \"../../api\";\r\nimport myInitObject from \"../../api\";\r\nconst axios = require(\"axios\");\r\nconst moment = require(\"moment\");\r\nlet dataTOtalcloseFrom = {\r\n  comissionTotal: 0,\r\n  lotsTotal: 0,\r\n  profitTotal: 0,\r\n  swapTotal: 0,\r\n};\r\nlet dataTotalClosetTo = {\r\n  comissionTotal: 0,\r\n  lotsTotal: 0,\r\n  profitTotal: 0,\r\n  swapTotal: 0,\r\n};\r\nlet dataTOtalOpenTo = {\r\n  comissionTotal: 0,\r\n  lotsTotal: 0,\r\n  profitTotal: 0,\r\n  swapTotal: 0,\r\n};\r\nlet dataTOtalOpenFrom = {\r\n  comissionTotal: 0,\r\n  lotsTotal: 0,\r\n  profitTotal: 0,\r\n  swapTotal: 0,\r\n};\r\nexport default function Calculating(props) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen);\r\n    setIsOpen2(false);\r\n    setIsOpen3(false);\r\n  };\r\n  const [isOpen2, setIsOpen2] = useState(true);\r\n  const [errormassage, setIErrormassage] = useState(false);\r\n  const toggle2 = () => {\r\n    setIsOpen2(!isOpen2);\r\n    setIsOpen(false);\r\n    setIsOpen3(false);\r\n  };\r\n  const [isOpen3, setIsOpen3] = useState(false);\r\n  const toggle3 = () => {\r\n    setIsOpen3(!isOpen3);\r\n    setIsOpen(false);\r\n    setIsOpen2(false);\r\n  };\r\n\r\n  const [fromAccountId, setFromAccountId] = useState(\"\");\r\n  const [toAccountId, setToAccountId] = useState(\"\");\r\n  const [fromOpenTrade, setFromOpenTrade] = useState([]);\r\n  const [toOpenTrade, setToOpenTrade] = useState([]);\r\n  const [fromHistoryTrade, setFromHistoryTrade] = useState([]);\r\n  const [toHistoryTrade, setToHistoryTrade] = useState([]);\r\n  const [commissionDetails, setCommissionDetails] = useState([]);\r\n  const [openTotal, setopenTotal] = useState();\r\n  const [historyTotal, sethistoryTotal] = useState();\r\n  const [totalOpenAndHistory, settotalOpenAndHistory] = useState();\r\n  const [commissionValue, setCommissionValue] = useState({});\r\n  const [dateTime, setdateTime] = useState(\"\");\r\n  const [customSwap, setcustomSwap] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [allHistoryRecord, setallHistoryRecord] = useState([]);\r\n  const [activeProfileName, setactiveProfileName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    if(mounted){\r\n    setInterval(() => {\r\n      if (\r\n        (myInitObject.responsLUT &&\r\n          myInitObject.responsCOT &&\r\n          myInitObject.responsCHT &&\r\n          myInitObject.responsCC &&\r\n          myInitObject.responsHT &&\r\n          myInitObject.responsAF) === undefined\r\n      ) {\r\n        console.log(\"no data\");\r\n      } else {\r\n        //calculate open Trade\r\n        setIErrormassage(\r\n          myInitObject.calculatingOpenTrade === 0 ? !errormassage : false\r\n        );\r\n        setFromAccountId(\r\n          myInitObject.calculatingOpenTrade.rows.accountFromInfo[0]\r\n        );\r\n        setToAccountId(myInitObject.calculatingOpenTrade.rows.accountToInfo[0]);\r\n        setFromOpenTrade(myInitObject.calculatingOpenTrade.fromOpenOrderInfo);\r\n        setToOpenTrade(myInitObject.calculatingOpenTrade.toOpenOrderInfo);\r\n        setopenTotal(myInitObject.calculatingOpenTrade.totalOfOpenOrder);\r\n        //calculate history trade\r\n        setLoading(myInitObject.calculatingHistoryTrade ? false : true);\r\n        setFromHistoryTrade(\r\n          myInitObject.calculatingHistoryTrade.fromHistoryOrderInfo\r\n        );\r\n        setToHistoryTrade(\r\n          myInitObject.calculatingHistoryTrade.toHistoryOrderInfo\r\n        );\r\n        setcustomSwap(myInitObject.calculatingHistoryTrade.customSwapTable);\r\n        sethistoryTotal(\r\n          myInitObject.calculatingHistoryTrade.totalOfHistoryOrder\r\n        );\r\n        setCommissionDetails(\r\n          myInitObject.calculatingHistoryTrade.newCommissionRecord\r\n        );\r\n        //calculate commission\r\n        setCommissionValue(myInitObject.calculatingCommission);\r\n        //last update time\r\n        setdateTime(myInitObject.fetchLastUpdatedTime.filteredInfoTime);\r\n        //fetch all history trade\r\n        setallHistoryRecord(myInitObject.fetchAllHistoryTrade.rows);\r\n        //fetch status data\r\n        setactiveProfileName(\r\n          myInitObject.fetchActivefilterdata.rows[0].profile_name\r\n        );\r\n      }\r\n    }, 1000);\r\n  }\r\n    // fetchLastUpdatedTime()\r\n    // let fromAccountId;\r\n    // let toAccountId;\r\n    // let fromOpenTrade;\r\n    // let toOpenTrade;\r\n    // let fromHistoryTrade;\r\n    // let toHistoryTrade;\r\n    // let openTotal;\r\n    // let historyTotal;\r\n    // let commissionDetails;\r\n    // let customSwap;\r\n    // axios.get(config.baseurl + '/profilepositions/calculatingOpenTrade')\r\n    //     .then(function (response) {\r\n    //         console.log(response, \"response -------------->\")\r\n    //         if (response.status == 200) {\r\n    //             if (response.data.rows == 0) {\r\n\r\n    //                 setIErrormassage((!errormassage));\r\n\r\n    //             }\r\n    //             fromAccountId = response.data.rows.accountFromInfo[0];\r\n    //             toAccountId = response.data.rows.accountToInfo[0];\r\n    //             fromOpenTrade = response.data.fromOpenOrderInfo;\r\n    //             // fromOpenTrade.map((data) => {\r\n\r\n    //             //     data.open_time = moment(data.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')\r\n    //             // })\r\n\r\n    //             toOpenTrade = response.data.toOpenOrderInfo;\r\n    //             // toOpenTrade.map((data) => {\r\n    //             //     data.open_time = moment(data.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')\r\n    //             // })\r\n    //             // openTotal = response.data.totalOfOpenOrder;\r\n\r\n    //             axios.get(config.baseurl + '/profilepositions/calculatingHistoryTrade')\r\n    //                 .then(function (response) {\r\n\r\n    //                     if (response.status == 200) {\r\n    //                         setLoading(false)\r\n    //                         fromHistoryTrade = response.data.fromHistoryOrderInfo;\r\n    //                         toHistoryTrade = response.data.toHistoryOrderInfo;\r\n    //                         customSwap = response.data.customSwapTable\r\n\r\n    //                         console.log(toHistoryTrade, \"toHistoryTrade =========>\")\r\n    //                         // fromHistoryTrade.map((data) => {\r\n\r\n    //                         //     data.open_time = moment(data.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')\r\n    //                         //     data.close_time = moment(data.close_time).utc().format('DD-MM-YYYY  HH:mm:ss')\r\n\r\n    //                         // })\r\n\r\n    //                         // toHistoryTrade.map((data) => {\r\n    //                         //     data.open_time = moment(data.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')\r\n    //                         //     data.close_time = moment(data.close_time).utc().format('DD-MM-YYYY  HH:mm:ss')\r\n\r\n    //                         // })\r\n    //                         historyTotal = response.data.totalOfHistoryOrder;\r\n    //                         commissionDetails = response.data.newCommissionRecord\r\n\r\n    //                         axios.get(config.baseurl + '/profilepositions/calculatingCommission')\r\n    //                             .then(function (response) {\r\n\r\n    //                                 if (response.status == 200) {\r\n    //                                     // console.log(\"jhkfkjjkldwkjdwjkdwkbdwjhkwirvbwjh\");\r\n    //                                     setFromAccountId(fromAccountId);\r\n    //                                     setToAccountId(toAccountId);\r\n    //                                     setFromOpenTrade(fromOpenTrade);\r\n    //                                     setToOpenTrade(toOpenTrade);\r\n    //                                     setFromHistoryTrade(fromHistoryTrade);\r\n    //                                     setToHistoryTrade(toHistoryTrade);\r\n    //                                     setCommissionDetails(commissionDetails);\r\n    //                                     setopenTotal(openTotal);\r\n    //                                     sethistoryTotal(historyTotal);\r\n    //                                     settotalOpenAndHistory(historyTotal + openTotal + response.data.commission);\r\n    //                                     setCommissionValue(response.data);\r\n    //                                     setcustomSwap(customSwap)\r\n\r\n    //                                 }\r\n\r\n    //                             })\r\n    //                             .catch(function (error) {\r\n    //                             });\r\n    //                     }\r\n    //                 })\r\n    //                 .catch(function (error) {\r\n    //                 });\r\n    //         }\r\n    //     })\r\n    //     .catch(function (error) {\r\n    //     });\r\n    return () => mounted = false;\r\n  }, []);\r\n  // const fetchLastUpdatedTime = () => {\r\n  //     let self = this;\r\n  //     axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\r\n  //         .then(function (response) {\r\n  //             if (response.status == 200) {\r\n  //                 setdateTime(response.data.filteredInfoTime)\r\n  //                 // console.log(self.state.dataOpenTrade.accountFromInfo,\"outyfjhkjh\");\r\n  //             }\r\n  //         });\r\n  // }\r\n  let total = { openTotal } + { historyTotal };\r\n\r\n  let openFromOrderTotal = 0;\r\n  const fromOpenTradeTr = () => {\r\n    //1//\r\n    let lotsTotal = 0;\r\n    // let open_Total = 0;\r\n    let comissionTotal = 0;\r\n    let profitTotal = 0;\r\n    let swapTotal = 0;\r\n    let contractSizeTotal = 0;\r\n    let openpricetotal = 0;\r\n    // console.log(fromOpenTrade, '1==================<>');\r\n    return (\r\n      fromOpenTrade.length > 0 &&\r\n      fromOpenTrade.map((item, index) => {\r\n        // customSwap.map((data) => {\r\n\r\n        //     if (data.account_id == item.account_id) {\r\n        //         item.swap = item.swap + data.open_value\r\n        //     }\r\n        // })\r\n        lotsTotal += item.lots;\r\n        comissionTotal += item.commission;\r\n        profitTotal += item.profit;\r\n        openFromOrderTotal = comissionTotal + profitTotal + swapTotal;\r\n        contractSizeTotal += item.contract_size;\r\n        openpricetotal += item.open_price;\r\n        swapTotal += item.swap;\r\n        // console.log(openOrderTotal,'openOrderTotal----------');\r\n        {\r\n          /* open_time,type,symbol,lot,contract_size,open_price,commission,swap,profit */\r\n        }\r\n        if (index == fromOpenTrade.length - 1) {\r\n          let a = {\r\n            lotsTotal: lotsTotal,\r\n            comissionTotal: comissionTotal,\r\n            profitTotal: profitTotal,\r\n            swapTotal: swapTotal,\r\n          };\r\n          dataTOtalOpenFrom = a;\r\n          // console.log(dataTOtalOpenFrom, 'data==========>>>>');\r\n          return (\r\n            <>\r\n              <tr\r\n                key={index}\r\n                className=\" text-center\"\r\n                style={{\r\n                  background:\r\n                    item.order_type == 0\r\n                      ? \"rgb(189 179 179 / 43%)\"\r\n                      : item.order_type == 1\r\n                      ? \"rgb(181 178 178 / 21%)\"\r\n                      : \" \",\r\n                }}\r\n              >\r\n                <td className=\"text-center colorDarkBlue no-padding \">\r\n                  {fromAccountId.login}\r\n                </td>\r\n                <td>\r\n                  {moment(item.open_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\r\n                </td>\r\n                <td>\r\n                  {item.order_type == 0\r\n                    ? \"BUY\"\r\n                    : item.order_type == 1\r\n                    ? \"SELL\"\r\n                    : \"\"}\r\n                </td>\r\n                <td>{item.symbol}</td>\r\n                <td>{item.lots}</td>\r\n                <td>\r\n                  {item.order_type == 0\r\n                    ? item.lots * item.contract_size\r\n                    : item.order_type == 1\r\n                    ? -item.lots * item.contract_size\r\n                    : item.lots * item.contract_size}\r\n                </td>\r\n                <td>{item.open_price}</td>\r\n                <td>{item.commission !== 0 ? item.commission : \"\"}</td>\r\n                <td>{item.swap !== 0 ? item.swap : \"\"}</td>\r\n                {/* <td>{item.magic_number !== 0 ? item.magic_number : ''}</td> */}\r\n                <td>\r\n                  {item.profit}\r\n                  {/* {item.margin_currency} */}\r\n                </td>\r\n              </tr>\r\n              <tr className=\"text-center\" key={index + 1}>\r\n                <td className=\"buycolor\">\r\n                  <b>Total Buy Positions</b>\r\n                </td>\r\n                <td></td>\r\n\r\n                <td></td>\r\n                <td></td>\r\n                <td>\r\n                  <b>{lotsTotal.toFixed(2)}</b>\r\n                </td>\r\n                <td></td>\r\n                <td> </td>\r\n                <td>\r\n                  <b>{comissionTotal.toFixed(2)}</b>\r\n                </td>\r\n                <td>\r\n                  <b>{swapTotal.toFixed(2)}</b>\r\n                </td>\r\n\r\n                <td>\r\n                  <b>{profitTotal.toFixed(2)}</b>\r\n                </td>\r\n              </tr>\r\n            </>\r\n          );\r\n        } else {\r\n          return (\r\n            <tr\r\n              key={index}\r\n              className=\"text-center\"\r\n              style={{\r\n                background:\r\n                  item.order_type == 0\r\n                    ? \"rgb(189 179 179 / 43%)\"\r\n                    : item.order_type == 1\r\n                    ? \"rgb(181 178 178 / 21%)\"\r\n                    : \" \",\r\n              }}\r\n            >\r\n              <td className=\"text-center colorDarkBlue no-padding \">\r\n                {fromAccountId.login}\r\n              </td>\r\n\r\n              <td>\r\n                {moment(item.open_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\r\n              </td>\r\n              <td>\r\n                {item.order_type == 0\r\n                  ? \"BUY\"\r\n                  : item.order_type == 1\r\n                  ? \"SELL\"\r\n                  : \"\"}\r\n              </td>\r\n              <td>{item.symbol}</td>\r\n              <td>{item.lots}</td>\r\n              <td>\r\n                {item.order_type == 0\r\n                  ? item.lots * item.contract_size\r\n                  : item.order_type == 1\r\n                  ? -item.lots * item.contract_size\r\n                  : item.lots * item.contract_size}\r\n              </td>\r\n              <td>{item.open_price}</td>\r\n              <td>{item.commission !== 0 ? item.commission : \"\"}</td>\r\n              <td>{item.swap !== 0 ? item.swap : \"\"}</td>\r\n              {/* <td>{item.magic_number !== 0 ? item.magic_number : ''}</td> */}\r\n              <td>\r\n                {item.profit}\r\n                {/* {item.margin_currency} */}\r\n              </td>\r\n            </tr>\r\n          );\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  let openFromHistoryTotal;\r\n  const fromHistoryTradeTr = () => {\r\n    //2//\r\n    let lotsTotal = 0;\r\n    let comissionTotal = 0;\r\n    let profitTotal = 0;\r\n    let swapTotal = 0;\r\n    let contractSizeTotal = 0;\r\n    let openpricetotal = 0;\r\n    let closepricetotal = 0;\r\n    // console.log(fromHistoryTrade, '2==================<>');\r\n    return (\r\n      fromHistoryTrade.length > 0 &&\r\n      fromHistoryTrade.map((item, index) => {\r\n        // customSwap.map((data) => {\r\n\r\n        //     if (data.account_id == item.account_id) {\r\n        //         item.swap = item.swap + data.open_value\r\n        //     }\r\n        // })\r\n\r\n        lotsTotal += item.lots;\r\n        comissionTotal += item.commission;\r\n        profitTotal += item.profit;\r\n        swapTotal += item.swap;\r\n        openFromHistoryTotal = comissionTotal + profitTotal + swapTotal;\r\n        contractSizeTotal += item.contract_size;\r\n        openpricetotal += item.open_price;\r\n        closepricetotal += item.close_price;\r\n\r\n        if (index == fromHistoryTrade.length - 1) {\r\n          let a = {\r\n            lotsTotal: lotsTotal,\r\n            comissionTotal: comissionTotal,\r\n            profitTotal: profitTotal,\r\n            swapTotal: swapTotal,\r\n          };\r\n          dataTOtalcloseFrom = a;\r\n          // console.log(dataTOtalcloseFrom, 'data2==========>>>>');\r\n          return (\r\n            <>\r\n              <tr\r\n                key={index}\r\n                className=\"text-center\"\r\n                style={{\r\n                  background:\r\n                    item.order_type == 0\r\n                      ? \"rgb(189 179 179 / 43%)\"\r\n                      : item.order_type == 1\r\n                      ? \"rgb(181 178 178 / 21%)\"\r\n                      : \" \",\r\n                }}\r\n              >\r\n                <td className=\"text-center colorDarkBlue no-padding\">\r\n                  {fromAccountId.login}\r\n                </td>\r\n                <td>\r\n                  {moment(item.open_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\r\n                </td>\r\n                <td>\r\n                  {item.order_type == 0\r\n                    ? \"BUY\"\r\n                    : item.order_type == 1\r\n                    ? \"SELL\"\r\n                    : \"\"}\r\n                </td>\r\n                <td>{item.symbol}</td>\r\n                <td>{item.lots}</td>\r\n                <td>\r\n                  {item.order_type == 0\r\n                    ? item.lots * item.contract_size\r\n                    : item.order_type == 1\r\n                    ? -item.lots * item.contract_size\r\n                    : item.lots * item.contract_size}\r\n                </td>\r\n                <td>{item.open_price}</td>\r\n                <td>\r\n                  {moment(item.close_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\r\n                </td>\r\n                <td>{item.close_price}</td>\r\n\r\n                <td>{item.commission !== 0 ? item.commission : \"\"}</td>\r\n                <td>{item.swap !== 0 ? item.swap : \"\"}</td>\r\n                <td>\r\n                  {item.profit}\r\n                  {/* {item.margin_currency} */}\r\n                </td>\r\n              </tr>\r\n              <tr className=\"text-center\" key={index + 1}>\r\n                <td className=\"buycolor\">\r\n                  <b>Total Buy Positions</b>\r\n                </td>\r\n                <td></td>\r\n\r\n                <td></td>\r\n                <td></td>\r\n                <td>\r\n                  <b>{lotsTotal.toFixed(2)}</b>\r\n                </td>\r\n                <td></td>\r\n\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n\r\n                <td>\r\n                  <b>{comissionTotal.toFixed(2)}</b>\r\n                </td>\r\n                <td>\r\n                  <b>{swapTotal.toFixed(2)}</b>\r\n                </td>\r\n                {/* <td></td> */}\r\n\r\n                <td>\r\n                  <b>{profitTotal.toFixed(2)}</b>\r\n                </td>\r\n              </tr>\r\n            </>\r\n          );\r\n        } else {\r\n          return (\r\n            <tr\r\n              key={index}\r\n              className=\"text-center\"\r\n              style={{\r\n                background:\r\n                  item.order_type == 0\r\n                    ? \"rgb(189 179 179 / 43%)\"\r\n                    : item.order_type == 1\r\n                    ? \"rgb(181 178 178 / 21%)\"\r\n                    : \" \",\r\n              }}\r\n            >\r\n              <td className=\"text-center colorDarkBlue no-padding\">\r\n                {fromAccountId.login}\r\n              </td>\r\n\r\n              <td>\r\n                {moment(item.open_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\r\n              </td>\r\n              <td>\r\n                {item.order_type == 0\r\n                  ? \"BUY\"\r\n                  : item.order_type == 1\r\n                  ? \"SELL\"\r\n                  : \"\"}\r\n              </td>\r\n              <td>{item.symbol}</td>\r\n              <td>{item.lots}</td>\r\n              <td>\r\n                {item.order_type == 0\r\n                  ? item.lots * item.contract_size\r\n                  : item.order_type == 1\r\n                  ? -item.lots * item.contract_size\r\n                  : item.lots * item.contract_size}\r\n              </td>\r\n              <td>{item.open_price}</td>\r\n              <td>\r\n                {moment(item.close_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\r\n              </td>\r\n              <td>{item.close_price}</td>\r\n\r\n              <td>{item.commission !== 0 ? item.commission : \"\"}</td>\r\n              <td>{item.swap !== 0 ? item.swap : \"\"}</td>\r\n\r\n              <td>\r\n                {item.profit}\r\n                {/* {item.margin_currency} */}\r\n              </td>\r\n            </tr>\r\n          );\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  let openToOrderTotal;\r\n  const toOpenTradeTr = () => {\r\n    //3//\r\n    let lotsTotal = 0;\r\n    let comissionTotal = 0;\r\n    let profitTotal = 0;\r\n    let swapTotal = 0;\r\n    let contractSizeTotal = 0;\r\n    let openpricetotal = 0;\r\n    // console.log(toOpenTrade, '3==================<>');\r\n    return (\r\n      toOpenTrade.length > 0 &&\r\n      toOpenTrade.map((item, index) => {\r\n        lotsTotal += item.lots;\r\n        comissionTotal += item.commission;\r\n        profitTotal += item.profit;\r\n        swapTotal += item.swap;\r\n        openToOrderTotal = comissionTotal + profitTotal + swapTotal;\r\n        contractSizeTotal += item.contract_size;\r\n        openpricetotal += item.open_price;\r\n        if (index == toOpenTrade.length - 1) {\r\n          let a = {\r\n            lotsTotal: lotsTotal,\r\n            comissionTotal: comissionTotal,\r\n            profitTotal: profitTotal,\r\n            swapTotal: swapTotal,\r\n          };\r\n          dataTOtalOpenTo = a;\r\n          // console.log(dataTOtalOpenTo, 'data3==========>>>>');\r\n          return (\r\n            <>\r\n              <tr\r\n                key={index}\r\n                className=\"text-center\"\r\n                style={{\r\n                  background:\r\n                    item.order_type == 0\r\n                      ? \"rgb(189 179 179 / 43%)\"\r\n                      : item.order_type == 1\r\n                      ? \"rgb(181 178 178 / 21%)\"\r\n                      : \" \",\r\n                }}\r\n              >\r\n                <td className=\"text-center color2 no-padding\">\r\n                  {toAccountId.login}\r\n                </td>\r\n                <td>\r\n                  {moment(item.open_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\r\n                </td>\r\n                <td>\r\n                  {item.order_type == 0\r\n                    ? \"BUY\"\r\n                    : item.order_type == 1\r\n                    ? \"SELL\"\r\n                    : \"\"}\r\n                </td>\r\n                <td>{item.symbol}</td>\r\n                <td>{item.lots}</td>\r\n                <td>\r\n                  {item.order_type == 0\r\n                    ? item.lots * item.contract_size\r\n                    : item.order_type == 1\r\n                    ? -item.lots * item.contract_size\r\n                    : item.lots * item.contract_size}\r\n                </td>\r\n                <td>{item.open_price}</td>\r\n                <td>{item.commission !== 0 ? item.commission : \"\"}</td>\r\n                <td>{item.swap !== 0 ? item.swap : \"\"}</td>\r\n                {/* <td>{item.magic_number !== 0 ? item.magic_number : ''}</td> */}\r\n                <td>\r\n                  {item.profit}\r\n                  {/* {item.margin_currency} */}\r\n                </td>\r\n              </tr>\r\n              <tr className=\"text-center\" key={index + 1}>\r\n                <td className=\"sellcolor\">\r\n                  <b>Total Sell Positions</b>\r\n                </td>\r\n                <td></td>\r\n\r\n                <td></td>\r\n                <td></td>\r\n                <td>\r\n                  <b>{lotsTotal.toFixed(2)}</b>\r\n                </td>\r\n                <td></td>\r\n\r\n                <td> </td>\r\n                <td>\r\n                  <b>{comissionTotal.toFixed(2)}</b>\r\n                </td>\r\n                <td>\r\n                  <b>{swapTotal.toFixed(2)}</b>\r\n                </td>\r\n\r\n                <td>\r\n                  <b>{profitTotal.toFixed(2)}</b>\r\n                </td>\r\n              </tr>\r\n            </>\r\n          );\r\n        } else {\r\n          return (\r\n            <tr\r\n              key={index}\r\n              className=\"text-center\"\r\n              style={{\r\n                background:\r\n                  item.order_type == 0\r\n                    ? \"rgb(189 179 179 / 43%)\"\r\n                    : item.order_type == 1\r\n                    ? \"rgb(181 178 178 / 21%)\"\r\n                    : \" \",\r\n              }}\r\n            >\r\n              <td className=\"text-center color2 no-padding\">\r\n                {toAccountId.login}\r\n              </td>\r\n\r\n              <td>\r\n                {moment(item.open_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\r\n              </td>\r\n              <td>\r\n                {item.order_type == 0\r\n                  ? \"BUY\"\r\n                  : item.order_type == 1\r\n                  ? \"SELL\"\r\n                  : \"\"}\r\n              </td>\r\n              <td>{item.symbol}</td>\r\n              <td>{item.lots}</td>\r\n              <td>\r\n                {item.order_type == 0\r\n                  ? item.lots * item.contract_size\r\n                  : item.order_type == 1\r\n                  ? -item.lots * item.contract_size\r\n                  : item.lots * item.contract_size}\r\n              </td>\r\n              <td>{item.open_price}</td>\r\n              <td>{item.commission !== 0 ? item.commission : \"\"}</td>\r\n              <td>{item.swap !== 0 ? item.swap : \"\"}</td>\r\n              {/* <td>{item.magic_number !== 0 ? item.magic_number : ''}</td> */}\r\n              <td>\r\n                {item.profit}\r\n                {/* {item.margin_currency} */}\r\n              </td>\r\n            </tr>\r\n          );\r\n        }\r\n      })\r\n    );\r\n  };\r\n  let openToHistoryTotal;\r\n  const toHistoryTradeTr = () => {\r\n    //4//\r\n    let lotsTotal = 0;\r\n    let comissionTotal = 0;\r\n    let profitTotal = 0;\r\n    let swapTotal = 0;\r\n    let contractSizeTotal = 0;\r\n    let openpricetotal = 0;\r\n    let closepricetotal = 0;\r\n    // console.log(toHistoryTrade, '4==================<>');\r\n    return (\r\n      toHistoryTrade.length > 0 &&\r\n      toHistoryTrade.map((item, index) => {\r\n        // customSwap.map((data) => {\r\n\r\n        //     if (data.account_id == item.account_id) {\r\n        //         item.swap = item.swap + data.open_value\r\n        //     }\r\n        // })\r\n        lotsTotal += item.lots;\r\n        comissionTotal += item.commission;\r\n        profitTotal += item.profit;\r\n        swapTotal += item.swap;\r\n        openToHistoryTotal = comissionTotal + profitTotal + swapTotal;\r\n        contractSizeTotal += item.contract_size;\r\n        openpricetotal += item.open_price;\r\n        closepricetotal += item.close_price;\r\n        if (index == toHistoryTrade.length - 1) {\r\n          let a = {\r\n            lotsTotal: lotsTotal,\r\n            comissionTotal: comissionTotal,\r\n            profitTotal: profitTotal,\r\n            swapTotal: swapTotal,\r\n          };\r\n          dataTotalClosetTo = a;\r\n          // console.log(dataTotalClosetTo, 'data4==========>>>>');\r\n          return (\r\n            <>\r\n              <tr\r\n                key={index}\r\n                className=\"text-center\"\r\n                style={{\r\n                  background:\r\n                    item.order_type == 0\r\n                      ? \"rgb(189 179 179 / 43%)\"\r\n                      : item.order_type == 1\r\n                      ? \"rgb(181 178 178 / 21%)\"\r\n                      : \" \",\r\n                }}\r\n              >\r\n                <td className=\"text-center color2 no-padding\">\r\n                  {toAccountId.login}\r\n                </td>\r\n                <td>\r\n                  {moment(item.open_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\r\n                </td>\r\n                <td>\r\n                  {item.order_type == 0\r\n                    ? \"BUY\"\r\n                    : item.order_type == 1\r\n                    ? \"SELL\"\r\n                    : \"\"}\r\n                </td>\r\n                <td>{item.symbol}</td>\r\n                <td>{item.lots}</td>\r\n                <td>\r\n                  {item.order_type == 0\r\n                    ? item.lots * item.contract_size\r\n                    : item.order_type == 1\r\n                    ? -item.lots * item.contract_size\r\n                    : item.lots * item.contract_size}\r\n                </td>\r\n                <td>{item.open_price}</td>\r\n                <td>\r\n                  {moment(item.close_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\r\n                </td>\r\n                <td>{item.close_price}</td>\r\n\r\n                <td>{item.commission !== 0 ? item.commission : \"\"}</td>\r\n                <td>{item.swap !== 0 ? item.swap : \"\"}</td>\r\n\r\n                <td>\r\n                  {item.profit}\r\n                  {/* {item.margin_currency} */}\r\n                </td>\r\n              </tr>\r\n              <tr className=\"text-center\" key={index + 1}>\r\n                <td className=\"sellcolor\">\r\n                  <b>Total Sell Positions</b>\r\n                </td>\r\n                <td></td>\r\n\r\n                <td></td>\r\n                <td></td>\r\n                <td>\r\n                  <b>{lotsTotal.toFixed(2)}</b>\r\n                </td>\r\n                <td></td>\r\n\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n\r\n                <td>\r\n                  <b>{comissionTotal.toFixed(2)}</b>\r\n                </td>\r\n                <td>\r\n                  <b>{swapTotal.toFixed(2)}</b>\r\n                </td>\r\n                {/* <td></td> */}\r\n\r\n                <td>\r\n                  <b>{profitTotal.toFixed(2)}</b>\r\n                </td>\r\n              </tr>\r\n            </>\r\n          );\r\n        } else {\r\n          return (\r\n            <tr\r\n              key={index}\r\n              className=\"text-center\"\r\n              style={{\r\n                background:\r\n                  item.order_type == 0\r\n                    ? \"rgb(189 179 179 / 43%)\"\r\n                    : item.order_type == 1\r\n                    ? \"rgb(181 178 178 / 21%)\"\r\n                    : \" \",\r\n              }}\r\n            >\r\n              <td className=\"text-center color2 no-padding\">\r\n                {toAccountId.login}\r\n              </td>\r\n\r\n              <td>\r\n                {moment(item.open_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\r\n              </td>\r\n              <td>\r\n                {item.order_type == 0\r\n                  ? \"BUY\"\r\n                  : item.order_type == 1\r\n                  ? \"SELL\"\r\n                  : \"\"}\r\n              </td>\r\n              <td>{item.symbol}</td>\r\n              <td>{item.lots}</td>\r\n              <td>\r\n                {item.order_type == 0\r\n                  ? item.lots * item.contract_size\r\n                  : item.order_type == 1\r\n                  ? -item.lots * item.contract_size\r\n                  : item.lots * item.contract_size}{\" \"}\r\n              </td>\r\n              <td>{item.open_price}</td>\r\n              <td>\r\n                {moment(item.close_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\r\n              </td>\r\n              <td>{item.close_price}</td>\r\n\r\n              <td>{item.commission !== 0 ? item.commission : \"\"}</td>\r\n              <td>{item.swap !== 0 ? item.swap : \"\"}</td>\r\n              <td>\r\n                {item.profit}\r\n                {/* {item.margin_currency} */}\r\n              </td>\r\n            </tr>\r\n          );\r\n        }\r\n      })\r\n    );\r\n  };\r\n  let fromclosedata = fromHistoryTrade.map((data) => {\r\n    return data;\r\n  });\r\n  let fromopendata = fromOpenTrade.map((data) => {\r\n    return data;\r\n  });\r\n  let toclosedata = toHistoryTrade.map((data) => {\r\n    return data;\r\n  });\r\n  let toopendata = toOpenTrade.map((data) => {\r\n    return data;\r\n  });\r\n  let newData = [\r\n    ...fromclosedata,\r\n    ...fromopendata,\r\n    ...toclosedata,\r\n    ...toopendata,\r\n  ];\r\n  newData = newData.sort(\r\n    (a, b) =>\r\n      new Date(...b.open_time.split(\"/\").reverse()) -\r\n      new Date(...a.open_time.split(\"/\").reverse())\r\n  );\r\n  let newopenData = [...fromopendata, ...toopendata];\r\n  let newcloseData = [...fromclosedata, ...toclosedata];\r\n  let totalOpen = newopenData\r\n    .map((item) => {\r\n      let openProfit = 0;\r\n      return (openProfit += item.profit);\r\n    })\r\n    .reduce((a, b) => a + b, 0);\r\n  let totalClose = newcloseData\r\n    .map((item) => {\r\n      let closeProfit = 0;\r\n      return (closeProfit += item.profit);\r\n    })\r\n    .reduce((a, b) => a + b, 0);\r\n  let totalfromCloseSwap = fromclosedata.reduce((a, item) => a + item.swap, 0);\r\n  let totalfromOpenSwap = fromopendata.reduce((a, item) => a + item.swap, 0);\r\n  let totalfromCloseCommission = fromclosedata.reduce(\r\n    (a, item) => a + item.commission,\r\n    0\r\n  );\r\n  let totalfromOpenCommission = fromopendata.reduce(\r\n    (a, item) => a + item.commission,\r\n    0\r\n  );\r\n  let totaltoCloseSwap = toclosedata.reduce((a, item) => a + item.swap, 0);\r\n  let totaltoOpenSwap = toopendata.reduce((a, item) => a + item.swap, 0);\r\n  let totaltoCloseCommission = toclosedata.reduce(\r\n    (a, item) => a + item.commission,\r\n    0\r\n  );\r\n  let totaltoOpenCommission = toopendata.reduce(\r\n    (a, item) => a + item.commission,\r\n    0\r\n  );\r\n\r\n  // console.log(totalOpenCommission, totalCloseCommission, 'historyinfo===============>><');\r\n  // console.log(fromHistoryTrade, fromOpenTrade, toHistoryTrade, toOpenTrade, '5--------->');\r\n  // console.log(dataTOtalcloseFrom,\r\n  //     dataTotalClosetTo,\r\n  //     dataTOtalOpenTo,\r\n  //     dataTOtalOpenFrom, 'redata==========<<<<<<<<<<>>>>>>>>>>');\r\n  // console.log(fromAccountId, toAccountId, fromOpenTrade, toOpenTrade, fromHistoryTrade, toHistoryTrade, commissionValue, 'commissionValue');\r\n  return (\r\n    <>\r\n      {errormassage ? (\r\n        <div className=\"popup\">\r\n          <div class=\"card w-75 \">\r\n            <div class=\"card-body topmargin\">\r\n              <div class=\" card-text popuptext\" role=\"alert\">\r\n                {\" \"}\r\n                Please activate filter profile to view stats. ...\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <Row className=\"no-margin\">\r\n            <div className=\"lastUpdate\">\r\n              <span> Last Updated : </span>\r\n              {dateTime}(UTC)\r\n            </div>\r\n          </Row>\r\n          {loading ? (\r\n            <Loader\r\n              type=\"ThreeDots\"\r\n              color=\"black\"\r\n              height={100}\r\n              width={100}\r\n              style={{ textAlign: \"center\" }}\r\n            />\r\n          ) : (\r\n            <div\r\n              style={{ overflowX: \"hidden\" }}\r\n              className=\"symbol-box shadoremove\"\r\n            >\r\n              <Row>\r\n                <Col md={12}>\r\n                  <div className=\"symbol-box\" style={{ marginBottom: \"20px\" }}>\r\n                    <div className=\"openpositions\">\r\n                      <span className=\"p-text\">Block view</span>\r\n                      <span className=\"icon-style\" onClick={toggle2}>\r\n                        {isOpen2 ? (\r\n                          <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\r\n                        ) : (\r\n                          <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\r\n                        )}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <Collapse isOpen={isOpen2}>\r\n                    <div className=\"openOrder\" style={{ marginBottom: \"20px\" }}>\r\n                      <table className=\"table table-responsive table-bordered border-bottom-0 align-th custom-thin\">\r\n                        <thead>\r\n                          <tr className=\"text-center thUnset\">\r\n                            <th>Trades / Pair</th>\r\n                            <th>Date</th>\r\n                            <th>Account</th>\r\n                            <th>Direction</th>\r\n                            <th>Open Price</th>\r\n                            <th>Close Price</th>\r\n                            <th>Trade Quantity</th>\r\n                            <th>Realized P/L</th>\r\n                            <th>\r\n                              Unrealized P/L\r\n                              {/* <br /><span>L {fromOpenTrade ? fromOpenTrade[0]?.symbol : ''} = {fromOpenTrade ? fromOpenTrade[0]?.last_price : ''} </span> */}\r\n                              <br />\r\n                              <span>\r\n                                {toOpenTrade[0] && (\r\n                                  <>\r\n                                    S{\" \"}\r\n                                    {toOpenTrade ? toOpenTrade[0]?.symbol : \"\"}{\" \"}\r\n                                    ={\" \"}\r\n                                    {toOpenTrade\r\n                                      ? toOpenTrade[0]?.last_price\r\n                                      : \"\"}{\" \"}\r\n                                  </>\r\n                                )}{\" \"}\r\n                              </span>\r\n                            </th>\r\n                          </tr>\r\n                        </thead>\r\n                        {newData.length > 0 ? (\r\n                          <tbody>\r\n                            {newData.length > 0\r\n                              ? newData.map((item) => {\r\n                                  let profitTotal = 0;\r\n                                  return (\r\n                                    <tr className=\"text-center\">\r\n                                      <td>\r\n                                        {item.order_type === 0 ||\r\n                                        item.order_type === 1\r\n                                          ? item.symbol\r\n                                          : \"\"}\r\n                                      </td>\r\n                                      <td>\r\n                                        {moment(item.open_time)\r\n                                          .utc()\r\n                                          .format(\"DD-MM-YYYY  HH:mm:ss\")}\r\n                                      </td>\r\n                                      {item.account_id === toAccountId.id ? (\r\n                                        <td className=\"color2\">\r\n                                          {toAccountId.alias}\r\n                                        </td>\r\n                                      ) : (\r\n                                        \"\"\r\n                                      )}\r\n                                      {item.account_id === fromAccountId.id ? (\r\n                                        <td className=\"colorDarkBlue\">\r\n                                          {fromAccountId.alias}\r\n                                        </td>\r\n                                      ) : (\r\n                                        \"\"\r\n                                      )}\r\n                                      <td>\r\n                                        {item.order_type == 0\r\n                                          ? item.lots\r\n                                          : item.order_type == 1\r\n                                          ? \"-\" + item.lots\r\n                                          : \"\"}\r\n                                      </td>\r\n                                      <td>{item.open_price}</td>\r\n                                      <td>{item.close_price}</td>\r\n                                      <td>\r\n                                        <NumberFormat\r\n                                          value={item.lots * item.contract_size}\r\n                                          displayType={\"text\"}\r\n                                          thousandSeparator={true}\r\n                                          decimalScale={2}\r\n                                        />{\" \"}\r\n                                      </td>\r\n                                      <td>\r\n                                        {item.open_price && item.close_price\r\n                                          ? (profitTotal += item.profit)\r\n                                          : \"\"}\r\n                                      </td>\r\n                                      <td>\r\n                                        {item.open_price && item.close_price\r\n                                          ? \"\"\r\n                                          : (profitTotal += item.profit)}\r\n                                      </td>\r\n                                    </tr>\r\n                                  );\r\n                                })\r\n                              : \"\"}\r\n                            {(totalfromCloseCommission !== 0 &&\r\n                              totalfromOpenCommission !== 0) ||\r\n                            (totalfromCloseCommission !== 0 &&\r\n                              totalfromOpenCommission === 0) ||\r\n                            (totalfromCloseCommission === 0 &&\r\n                              totalfromOpenCommission !== 0) ? (\r\n                              <tr className=\"text-center\">\r\n                                <td>\r\n                                  <b>Commission</b>\r\n                                </td>\r\n                                <td></td>\r\n                                <td className=\"colorDarkBlue\">\r\n                                  {fromAccountId.alias}\r\n                                </td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td>\r\n                                  <b>{totalfromCloseCommission}</b>\r\n                                </td>\r\n                                <td>\r\n                                  <b>{totalfromOpenCommission}</b>\r\n                                </td>\r\n                              </tr>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                            {(totaltoCloseCommission !== 0 &&\r\n                              totaltoOpenCommission !== 0) ||\r\n                            (totaltoCloseCommission !== 0 &&\r\n                              totaltoOpenCommission === 0) ||\r\n                            (totaltoCloseCommission === 0 &&\r\n                              totaltoOpenCommission !== 0) ? (\r\n                              <tr className=\"text-center\">\r\n                                <td>\r\n                                  <b>\r\n                                    {totalfromCloseCommission ||\r\n                                    totalfromOpenCommission\r\n                                      ? \"\"\r\n                                      : \"Commission\"}\r\n                                  </b>\r\n                                </td>\r\n                                <td></td>\r\n                                <td className=\"color2\">{toAccountId.alias}</td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td>\r\n                                  <b>{totaltoCloseCommission}</b>\r\n                                </td>\r\n                                <td>\r\n                                  <b>{totaltoOpenCommission}</b>\r\n                                </td>\r\n                              </tr>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                            {(totalfromCloseSwap !== 0 &&\r\n                              totalfromOpenSwap !== 0) ||\r\n                            (totalfromCloseSwap !== 0 &&\r\n                              totalfromOpenSwap === 0) ||\r\n                            (totalfromCloseSwap === 0 &&\r\n                              totalfromOpenSwap !== 0) ? (\r\n                              <tr className=\"text-center\">\r\n                                <td>\r\n                                  <b>Swap</b>\r\n                                </td>\r\n                                <td></td>\r\n                                <td className=\"colorDarkBlue\">\r\n                                  {fromAccountId.alias}\r\n                                </td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td>\r\n                                  <b>{totalfromCloseSwap}</b>\r\n                                </td>\r\n                                <td>\r\n                                  <b>{totalfromOpenSwap}</b>\r\n                                </td>\r\n                              </tr>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                            {(totaltoCloseSwap !== 0 &&\r\n                              totaltoOpenSwap !== 0) ||\r\n                            (totaltoCloseSwap !== 0 && totaltoOpenSwap === 0) ||\r\n                            (totaltoCloseSwap === 0 &&\r\n                              totaltoOpenSwap !== 0) ? (\r\n                              <tr className=\"text-center\">\r\n                                <td>\r\n                                  <b>\r\n                                    {totalfromCloseSwap || totalfromOpenSwap\r\n                                      ? \"\"\r\n                                      : \"Swap\"}\r\n                                  </b>\r\n                                </td>\r\n                                <td></td>\r\n                                <td className=\"color2\">{toAccountId.alias}</td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td>\r\n                                  <b>{totaltoCloseSwap}</b>\r\n                                </td>\r\n                                <td>\r\n                                  <b>{totaltoOpenSwap}</b>\r\n                                </td>\r\n                              </tr>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                            <tr className=\"text-center\">\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td>\r\n                                <b>Trading</b>\r\n                              </td>\r\n                              <td>\r\n                                <b>{totalClose}</b>\r\n                              </td>\r\n                              <td>\r\n                                <b>{totalOpen}</b>\r\n                              </td>\r\n                            </tr>\r\n                            <tr className=\"text-center\">\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td>\r\n                                <b>Comm & Swap</b>\r\n                              </td>\r\n                              <td>\r\n                                <b>\r\n                                  {totalfromCloseSwap +\r\n                                    totaltoCloseSwap +\r\n                                    totalfromCloseCommission +\r\n                                    totaltoCloseCommission}\r\n                                </b>\r\n                              </td>\r\n                              <td>\r\n                                <b>\r\n                                  {totalfromOpenSwap +\r\n                                    totaltoOpenSwap +\r\n                                    totalfromOpenCommission +\r\n                                    totaltoOpenCommission}\r\n                                </b>\r\n                              </td>\r\n                            </tr>\r\n                            <tr className=\"text-center\">\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td>\r\n                                <b>Total</b>\r\n                              </td>\r\n                              <td>\r\n                                <b>\r\n                                  <NumberFormat\r\n                                    value={historyTotal}\r\n                                    displayType={\"text\"}\r\n                                    thousandSeparator={true}\r\n                                    decimalScale={2}\r\n                                  />\r\n                                  {fromAccountId[\r\n                                    `accounts_details.currency`\r\n                                  ] === toAccountId[`accounts_details.currency`]\r\n                                    ? `  ` +\r\n                                        fromAccountId[\r\n                                          `accounts_details.currency`\r\n                                        ] ||\r\n                                      toAccountId[`accounts_details.currency`]\r\n                                    : \"\"}\r\n                                </b>\r\n                              </td>\r\n                              <td>\r\n                                <b>\r\n                                  <NumberFormat\r\n                                    value={openTotal}\r\n                                    displayType={\"text\"}\r\n                                    thousandSeparator={true}\r\n                                    decimalScale={2}\r\n                                  />\r\n                                  {fromAccountId[\r\n                                    `accounts_details.currency`\r\n                                  ] === toAccountId[`accounts_details.currency`]\r\n                                    ? `  ` +\r\n                                        fromAccountId[\r\n                                          `accounts_details.currency`\r\n                                        ] ||\r\n                                      toAccountId[`accounts_details.currency`]\r\n                                    : \"\"}\r\n                                </b>\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                        ) : (\r\n                          <tbody className=\"text-center\">\r\n                            <tr>\r\n                              <td colSpan=\"9\">No Record Found</td>\r\n                            </tr>\r\n                          </tbody>\r\n                        )}\r\n                      </table>\r\n                    </div>\r\n                    <Row style={{ marginBottom: `20px` }}>\r\n                      <Col md={12} sm={6}>\r\n                        <div\r\n                          className={\r\n                            historyTotal + openTotal >= 0\r\n                              ? \"summary-box\"\r\n                              : \"summary-box-red\"\r\n                          }\r\n                        >\r\n                          {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\r\n                          {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\r\n<span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\r\n\r\n                          <Col md={12} sm={12}>\r\n                            <div\r\n                              className=\"summary-text text-center\"\r\n                              style={{ fontWeight: 600, color: \"#797979\" }}\r\n                            >\r\n                              Unrealized & Realized P/L ({activeProfileName}){\" \"}\r\n                              {allHistoryRecord.history_info !== 0 && (\r\n                                <span> + Commission</span>\r\n                              )}{\" \"}\r\n                            </div>\r\n                          </Col>\r\n                          <Col md={12} sm={12}>\r\n                            <div\r\n                              className=\"text-center\"\r\n                              style={{ fontWeight: \"bold\", fontSize: \"18px\" }}\r\n                            >\r\n                              ${\" \"}\r\n                              <NumberFormat\r\n                                value={\r\n                                  allHistoryRecord.history_info !== undefined\r\n                                    ? historyTotal +\r\n                                      openTotal +\r\n                                      allHistoryRecord.history_info\r\n                                    : historyTotal + openTotal\r\n                                }\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                decimalScale={2}\r\n                              />\r\n                              {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\r\n                            </div>\r\n                          </Col>\r\n\r\n                          <div className=\"clearfix\"></div>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Collapse>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col md={12} sm={6}>\r\n                  <div className=\"symbol-box\" style={{ marginBottom: \"20px\" }}>\r\n                    <div className=\"openpositions\">\r\n                      <span className=\"p-text\">Table view</span>\r\n                      <span className=\"icon-style\" onClick={toggle}>\r\n                        {isOpen ? (\r\n                          <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\r\n                        ) : (\r\n                          <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\r\n                        )}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <Collapse isOpen={isOpen}>\r\n                    <div style={{ marginBottom: \"20px\" }}>\r\n                      <div>\r\n                        <div className=\"symbol-box terminal-head-box\">\r\n                          <div className=\"openpositions\">\r\n                            <span className=\"p-text\">\r\n                              Unrealized Profit/Loss\r\n                            </span>\r\n                            <span className=\"icon-style\" onClick={toggle}>\r\n                              {/* {isOpen ?\r\n                                                <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\r\n                                                :\r\n                                                <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\r\n                                            } */}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"openOrder\">\r\n                          {fromOpenTrade && fromOpenTrade.length > 0 ? (\r\n                            <Row>\r\n                              <Col md={12}>\r\n                                {\" \"}\r\n                                {/*/1/*/}\r\n                                {/* <div className={'colorDarkBlue , boldText loginCenter'}>{fromAccountId.alias}</div>\r\n                                                    <span className=\"text-center colorDarkBlue no-padding \"> {fromAccountId.login}</span> */}\r\n                                <table className=\"table table-responsive table-bordered border-bottom-0 align-th\">\r\n                                  <thead>\r\n                                    <tr className=\"text-center thUnset\">\r\n                                      {/* open_time,type,symbol,lot,contract_size,open_price,commission,swap,profit */}\r\n                                      <th>Login</th>\r\n                                      <th>Open Time</th>\r\n                                      <th scope=\"col\">Type</th>\r\n\r\n                                      <th scope=\"col\">symbol</th>\r\n                                      <th scope=\"col\">lots</th>\r\n                                      {/* <th scope=\"col\">open_time</th> */}\r\n                                      <th>Contract size</th>\r\n                                      <th>Open Price</th>\r\n\r\n                                      <th scope=\"col\">commission</th>\r\n                                      <th scope=\"col\">swap</th>\r\n                                      {/* <th scope=\"col\">magic_number</th> */}\r\n                                      <th scope=\"col\">profit</th>\r\n                                    </tr>\r\n                                  </thead>\r\n                                  <tbody>\r\n                                    {fromOpenTradeTr()}\r\n                                    {toOpenTrade.length === 0 && (\r\n                                      <tr className=\"text-center opencolor\">\r\n                                        <td>\r\n                                          <b>Total Unrealized</b>\r\n                                        </td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td>\r\n                                          <b>\r\n                                            <NumberFormat\r\n                                              value={\r\n                                                dataTOtalOpenFrom.lotsTotal +\r\n                                                dataTOtalOpenTo.lotsTotal\r\n                                              }\r\n                                              displayType={\"text\"}\r\n                                              thousandSeparator={true}\r\n                                              decimalScale={2}\r\n                                            />\r\n                                          </b>\r\n                                        </td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td>\r\n                                          <b>\r\n                                            {dataTOtalOpenFrom.comissionTotal +\r\n                                              dataTOtalOpenTo.comissionTotal}\r\n                                          </b>\r\n                                        </td>\r\n                                        <td>\r\n                                          <b>\r\n                                            {dataTOtalOpenFrom.swapTotal +\r\n                                              dataTOtalOpenTo.swapTotal}\r\n                                          </b>\r\n                                        </td>\r\n                                        <td>\r\n                                          <b>\r\n                                            {dataTOtalOpenFrom.profitTotal +\r\n                                              dataTOtalOpenTo.profitTotal}\r\n                                          </b>\r\n                                        </td>\r\n                                      </tr>\r\n                                    )}\r\n                                  </tbody>\r\n                                </table>\r\n                                {toOpenTrade.length === 0 && (\r\n                                  <div className=\"text-right opencolor pad\">\r\n                                    <b>\r\n                                      Total{\" \"}\r\n                                      {dataTOtalOpenFrom.comissionTotal +\r\n                                        dataTOtalOpenTo.comissionTotal +\r\n                                        dataTOtalOpenFrom.swapTotal +\r\n                                        dataTOtalOpenTo.swapTotal +\r\n                                        dataTOtalOpenFrom.profitTotal +\r\n                                        dataTOtalOpenTo.profitTotal}\r\n                                      {fromAccountId[\r\n                                        `accounts_details.currency`\r\n                                      ] ===\r\n                                      toAccountId[`accounts_details.currency`]\r\n                                        ? `  ` +\r\n                                            fromAccountId[\r\n                                              `accounts_details.currency`\r\n                                            ] ||\r\n                                          toAccountId[\r\n                                            `accounts_details.currency`\r\n                                          ]\r\n                                        : \"\"}\r\n                                    </b>\r\n                                  </div>\r\n                                )}\r\n                              </Col>\r\n                            </Row>\r\n                          ) : (\r\n                            \" \"\r\n                            // <Col md={12} >\r\n                            //     <div className=\"card change noRecordCol\"> No Record Found</div>\r\n                            // </Col>\r\n                          )}\r\n\r\n                          {toOpenTrade && toOpenTrade.length > 0 ? (\r\n                            <Row>\r\n                              <Col md={12}>\r\n                                {\" \"}\r\n                                {/*3*/}\r\n                                {/* <div className={'color2 , boldText loginCenter'}>{toAccountId.alias}</div>\r\n                                                    <span className=\"text-center color2 no-padding\">{toAccountId.login}</span> */}\r\n                                <table class=\"table table-responsive table-bordered border-botttom-0 align-th\">\r\n                                  <thead>\r\n                                    <tr className=\"text-center thUnset\">\r\n                                      {\" \"}\r\n                                      {/* open_time,type,symbol,lot,contract_size,open_price,close_time,close_price,commission,swap,profit */}\r\n                                      <th>Login</th>\r\n                                      <th>Open Time</th>\r\n                                      <th scope=\"col\">Type</th>\r\n                                      <th scope=\"col\">symbol</th>\r\n                                      <th scope=\"col\">lots</th>\r\n                                      <th>Contract size</th>\r\n                                      <th>Open Price</th>\r\n                                      <th scope=\"col\">commission</th>\r\n                                      <th scope=\"col\">swap</th>\r\n                                      <th scope=\"col\">profit</th>\r\n                                    </tr>\r\n                                  </thead>\r\n                                  <tbody>\r\n                                    {toOpenTradeTr()}\r\n                                    {dataTOtalOpenFrom && dataTOtalOpenTo && (\r\n                                      <tr className=\"text-center opencolor\">\r\n                                        <td>\r\n                                          <b>Total Unrealized</b>\r\n                                        </td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td>\r\n                                          <b>\r\n                                            <NumberFormat\r\n                                              value={\r\n                                                dataTOtalOpenFrom.lotsTotal +\r\n                                                dataTOtalOpenTo.lotsTotal\r\n                                              }\r\n                                              displayType={\"text\"}\r\n                                              thousandSeparator={true}\r\n                                              decimalScale={2}\r\n                                            />\r\n                                          </b>\r\n                                        </td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td>\r\n                                          <b>\r\n                                            {dataTOtalOpenFrom.comissionTotal +\r\n                                              dataTOtalOpenTo.comissionTotal}\r\n                                          </b>\r\n                                        </td>\r\n                                        <td>\r\n                                          <b>\r\n                                            {dataTOtalOpenFrom.swapTotal +\r\n                                              dataTOtalOpenTo.swapTotal}\r\n                                          </b>\r\n                                        </td>\r\n                                        <td>\r\n                                          <b>\r\n                                            {dataTOtalOpenFrom.profitTotal +\r\n                                              dataTOtalOpenTo.profitTotal}\r\n                                          </b>\r\n                                        </td>\r\n                                      </tr>\r\n                                    )}\r\n                                  </tbody>\r\n                                </table>\r\n                                <div className=\"text-right opencolor pad\">\r\n                                  <b>\r\n                                    Total{\" \"}\r\n                                    {dataTOtalOpenFrom.comissionTotal +\r\n                                      dataTOtalOpenTo.comissionTotal +\r\n                                      dataTOtalOpenFrom.swapTotal +\r\n                                      dataTOtalOpenTo.swapTotal +\r\n                                      dataTOtalOpenFrom.profitTotal +\r\n                                      dataTOtalOpenTo.profitTotal}\r\n                                    {fromAccountId[\r\n                                      `accounts_details.currency`\r\n                                    ] ===\r\n                                    toAccountId[`accounts_details.currency`]\r\n                                      ? `  ` +\r\n                                          fromAccountId[\r\n                                            `accounts_details.currency`\r\n                                          ] ||\r\n                                        toAccountId[`accounts_details.currency`]\r\n                                      : \"\"}\r\n                                  </b>\r\n                                </div>\r\n                              </Col>\r\n                            </Row>\r\n                          ) : (\r\n                            \" \"\r\n                            // <Col md={12}>\r\n                            //     <div className=\"card change noRecordCol\"> No Record Found</div>\r\n                            // </Col>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"symbol-box terminal-head-box topSet\">\r\n                        <div className=\"openpositions\">\r\n                          <span className=\"p-text\">Realized Profit/Loss</span>\r\n                          <span\r\n                            className=\"icon-style\"\r\n                            // onClick={toggle2}\r\n                          >\r\n                            {/* {isOpen2 ?\r\n                                            <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\r\n                                            :\r\n                                            <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\r\n                                        } */}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <div>\r\n                        {/* <Collapse isOpen={isOpen2}> */}\r\n\r\n                        <div className=\"openOrder\">\r\n                          {/*2*/}\r\n                          {fromHistoryTrade.length > 0 ||\r\n                          toHistoryTrade.length > 0 ? (\r\n                            <div>\r\n                              <Row>\r\n                                {fromHistoryTrade &&\r\n                                fromHistoryTrade.length > 0 ? (\r\n                                  <Col md={12}>\r\n                                    {/* <div className={'colorDarkBlue , boldText loginCenter'}>{fromAccountId.alias}</div>\r\n                                                            <span className=\"text-center colorDarkBlue no-padding\">{fromAccountId.login}</span> */}\r\n                                    <table\r\n                                      style={{ overflowY: \"scroll\" }}\r\n                                      className=\"table table-responsive table-bordered border-bottom-0 align-th\"\r\n                                    >\r\n                                      <thead>\r\n                                        <tr className=\"text-center thUnset\">\r\n                                          <th>Login</th>\r\n\r\n                                          <th>Open Time</th>\r\n                                          <th scope=\"col\">Type</th>\r\n\r\n                                          <th scope=\"col\">symbol</th>\r\n                                          <th scope=\"col\">lots</th>\r\n\r\n                                          <th>Contract size</th>\r\n                                          <th>Open Price</th>\r\n                                          <th>Close Time</th>\r\n\r\n                                          <th>Close Price</th>\r\n\r\n                                          <th scope=\"col\">commission</th>\r\n                                          <th scope=\"col\">swap</th>\r\n\r\n                                          <th scope=\"col\">profit</th>\r\n                                        </tr>\r\n                                      </thead>\r\n                                      <tbody>\r\n                                        {fromHistoryTradeTr()}\r\n                                        {toHistoryTrade.length === 0 && (\r\n                                          <tr className=\"text-center closecolor\">\r\n                                            <td>\r\n                                              <b>Total Realized</b>\r\n                                            </td>\r\n                                            <td></td>\r\n                                            <td></td>\r\n                                            <td></td>\r\n                                            <td>\r\n                                              <b>\r\n                                                <NumberFormat\r\n                                                  value={\r\n                                                    dataTOtalcloseFrom.lotsTotal +\r\n                                                    dataTotalClosetTo.lotsTotal\r\n                                                  }\r\n                                                  displayType={\"text\"}\r\n                                                  thousandSeparator={true}\r\n                                                  decimalScale={2}\r\n                                                />\r\n                                              </b>\r\n                                            </td>\r\n                                            <td></td>\r\n                                            <td></td>\r\n                                            <td></td>\r\n                                            <td></td>\r\n                                            <td>\r\n                                              <b>\r\n                                                {dataTOtalcloseFrom.comissionTotal +\r\n                                                  dataTotalClosetTo.comissionTotal}\r\n                                              </b>\r\n                                            </td>\r\n                                            <td>\r\n                                              <b>\r\n                                                {dataTOtalcloseFrom.swapTotal +\r\n                                                  dataTotalClosetTo.swapTotal}\r\n                                              </b>\r\n                                            </td>\r\n                                            <td>\r\n                                              <b>\r\n                                                {dataTOtalcloseFrom.profitTotal +\r\n                                                  dataTotalClosetTo.profitTotal}\r\n                                              </b>\r\n                                            </td>\r\n                                          </tr>\r\n                                        )}\r\n                                      </tbody>\r\n                                    </table>\r\n                                    {toHistoryTrade.length === 0 && (\r\n                                      <div className=\"text-right closecolor pad\">\r\n                                        <b>\r\n                                          Total{\" \"}\r\n                                          {dataTOtalcloseFrom.comissionTotal +\r\n                                            dataTotalClosetTo.comissionTotal +\r\n                                            dataTOtalcloseFrom.swapTotal +\r\n                                            dataTotalClosetTo.swapTotal +\r\n                                            dataTOtalcloseFrom.profitTotal +\r\n                                            dataTotalClosetTo.profitTotal}\r\n                                          {fromAccountId[\r\n                                            `accounts_details.currency`\r\n                                          ] ===\r\n                                          toAccountId[\r\n                                            `accounts_details.currency`\r\n                                          ]\r\n                                            ? `  ` +\r\n                                                fromAccountId[\r\n                                                  `accounts_details.currency`\r\n                                                ] ||\r\n                                              toAccountId[\r\n                                                `accounts_details.currency`\r\n                                              ]\r\n                                            : \"\"}\r\n                                        </b>\r\n                                      </div>\r\n                                    )}\r\n                                  </Col>\r\n                                ) : (\r\n                                  \"\"\r\n                                  // <Col md={12}>\r\n                                  //     <div className=\"card change noRecordCol\"> No Record Found</div>\r\n                                  // </Col>\r\n                                )}\r\n                              </Row>\r\n                              {/**4 */}\r\n                              {toHistoryTrade && toHistoryTrade.length > 0 ? (\r\n                                <Row>\r\n                                  <Col md={12}>\r\n                                    {/* <div className={'color2 , boldText loginCenter'}>{toAccountId.alias}</div>\r\n                                                                <span className=\"text-center color2 no-padding\">{toAccountId.login}</span> */}\r\n\r\n                                    <table className=\"table table-responsive table-bordered border-bottom-0 align-th\">\r\n                                      <thead>\r\n                                        <tr className=\"text-center thUnset\">\r\n                                          <th>Login</th>\r\n\r\n                                          <th>Open Time</th>\r\n                                          <th scope=\"col\">Type</th>\r\n\r\n                                          <th scope=\"col\">symbol</th>\r\n                                          <th scope=\"col\">lots</th>\r\n\r\n                                          <th>Contract size</th>\r\n                                          <th>Open Price</th>\r\n                                          <th>Close Time</th>\r\n\r\n                                          <th>Close Price</th>\r\n\r\n                                          <th scope=\"col\">commission</th>\r\n                                          <th scope=\"col\">swap</th>\r\n\r\n                                          <th scope=\"col\">profit</th>\r\n                                        </tr>\r\n                                      </thead>\r\n                                      <tbody>\r\n                                        {toHistoryTradeTr()}\r\n                                        {dataTOtalcloseFrom &&\r\n                                          dataTotalClosetTo && (\r\n                                            <tr className=\"text-center closecolor\">\r\n                                              <td>\r\n                                                <b>Total Realized</b>\r\n                                              </td>\r\n                                              <td></td>\r\n                                              <td></td>\r\n                                              <td></td>\r\n                                              <td>\r\n                                                <b>\r\n                                                  <NumberFormat\r\n                                                    value={\r\n                                                      dataTOtalcloseFrom.lotsTotal +\r\n                                                      dataTotalClosetTo.lotsTotal\r\n                                                    }\r\n                                                    displayType={\"text\"}\r\n                                                    thousandSeparator={true}\r\n                                                    decimalScale={2}\r\n                                                  />\r\n                                                </b>\r\n                                              </td>\r\n                                              <td></td>\r\n                                              <td></td>\r\n                                              <td></td>\r\n                                              <td></td>\r\n                                              <td>\r\n                                                <b>\r\n                                                  {dataTOtalcloseFrom.comissionTotal +\r\n                                                    dataTotalClosetTo.comissionTotal}\r\n                                                </b>\r\n                                              </td>\r\n                                              <td>\r\n                                                <b>\r\n                                                  {dataTOtalcloseFrom.swapTotal +\r\n                                                    dataTotalClosetTo.swapTotal}\r\n                                                </b>\r\n                                              </td>\r\n\r\n                                              <td>\r\n                                                <b>\r\n                                                  {dataTOtalcloseFrom.profitTotal +\r\n                                                    dataTotalClosetTo.profitTotal}\r\n                                                </b>\r\n                                              </td>\r\n                                            </tr>\r\n                                          )}\r\n                                      </tbody>\r\n                                    </table>\r\n                                    <div className=\"text-right closecolor pad\">\r\n                                      <b>\r\n                                        Total{\" \"}\r\n                                        {dataTOtalcloseFrom.comissionTotal +\r\n                                          dataTotalClosetTo.comissionTotal +\r\n                                          dataTOtalcloseFrom.swapTotal +\r\n                                          dataTotalClosetTo.swapTotal +\r\n                                          dataTOtalcloseFrom.profitTotal +\r\n                                          dataTotalClosetTo.profitTotal}\r\n                                        {fromAccountId[\r\n                                          `accounts_details.currency`\r\n                                        ] ===\r\n                                        toAccountId[`accounts_details.currency`]\r\n                                          ? `  ` +\r\n                                              fromAccountId[\r\n                                                `accounts_details.currency`\r\n                                              ] ||\r\n                                            toAccountId[\r\n                                              `accounts_details.currency`\r\n                                            ]\r\n                                          : \"\"}\r\n                                      </b>\r\n                                    </div>\r\n                                  </Col>\r\n                                </Row>\r\n                              ) : (\r\n                                \"\"\r\n                                // <Col md={12}>\r\n                                //     <div className=\"card change noRecordCol\"> No Record Found</div>\r\n                                // </Col>\r\n                              )}\r\n                            </div>\r\n                          ) : (\r\n                            \"\"\r\n                            // <Col md={12} >\r\n                            //     <div className=\"card change noRecordCol\"> No Record Found</div>\r\n                            // </Col>\r\n                          )}\r\n                          <Row className=\"no-margin\">\r\n                            {commissionValue &&\r\n                              commissionValue.commission_acount_id > 0 && (\r\n                                <div className=\"card pad-x\">\r\n                                  <div className=\"header ptheader b-shadow\">\r\n                                    <h4 className=\"text-center bText1\">\r\n                                      <b>Commission</b>\r\n                                    </h4>\r\n                                    {/* <h4 className=\"text-center\">{commissionDetails[0].login}</h4> */}\r\n\r\n                                    <div className=\"row\">\r\n                                      <div className=\"col-md-4 text-center\">\r\n                                        <h4 className=\"bText\"> Balance </h4>\r\n                                        {console.log(commissionValue,\"commissionValue\")}\r\n                                        <NumberFormat\r\n                                          value={commissionValue.totalProfit === null ? 0 : commissionValue.totalProfit }\r\n                                          displayType={\"text\"}\r\n                                          thousandSeparator={true}\r\n                                          decimalScale={2}\r\n                                        />\r\n                                      </div>\r\n                                      <div className=\"col-md-4 text-center\">\r\n                                        <h4 className=\"bText\"> Equity </h4>\r\n                                        <NumberFormat\r\n                                          displayType={\"text\"}\r\n                                          thousandSeparator={true}\r\n                                          decimalScale={2}\r\n                                        />\r\n                                        <span>{commissionValue.equity}</span>\r\n                                      </div>\r\n                                      <div className=\"col-md-4 text-center\">\r\n                                        <h4 className=\"bText\"> Order Type </h4>\r\n                                        <span>6</span>\r\n                                      </div>\r\n\r\n                                      <div className=\"col-md-12 text-center\">\r\n                                        <h4>\r\n                                          <b>Total</b>{\" \"}\r\n                                        </h4>\r\n                                        <NumberFormat\r\n                                          value={commissionValue.commission === null ? 0 : commissionValue.commission}\r\n                                          displayType={\"text\"}\r\n                                          thousandSeparator={true}\r\n                                          decimalScale={2}\r\n                                        />\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                          </Row>\r\n                        </div>\r\n                        {/* </Collapse> */}\r\n                      </div>\r\n\r\n                      {/* <div className=\"symbol-box  topSet \" >\r\n                            <div className=\"text-center\" >\r\n                                <span className=\"  summrayAdjust \" style={{ fontWeight: 600, color: \"#797979\" }}>Summary</span>\r\n                                <h5 style={{ fontWeight: 600, color: \"#797979\" }}> Open Positions + Closed Positions {commissionValue.commission_acount_id > 0 && (<span> + Commission</span>)}</h5>\r\n                                <h5 className=\"bText\">\r\n                                    <NumberFormat value={totalOpenAndHistory} displayType={'text'} thousandSeparator={true} decimalScale={2} ></NumberFormat></h5>\r\n                            </div>\r\n\r\n                        </div> */}\r\n                    </div>\r\n                    <Row style={{ marginBottom: `20px` }}>\r\n                      <Col md={12} sm={6}>\r\n                        <div\r\n                          className={\r\n                            historyTotal + openTotal >= 0\r\n                              ? \"summary-box\"\r\n                              : \"summary-box-red\"\r\n                          }\r\n                        >\r\n                          {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\r\n                          {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\r\n<span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\r\n\r\n                          <Col md={12} sm={12}>\r\n                            <div\r\n                              className=\"summary-text text-center\"\r\n                              style={{ fontWeight: 600, color: \"#797979\" }}\r\n                            >\r\n                              Unrealized & Realized P/L ({activeProfileName}){\" \"}\r\n                              {allHistoryRecord.history_info !== 0 && (\r\n                                <span> + Commission</span>\r\n                              )}{\" \"}\r\n                            </div>\r\n                          </Col>\r\n                          <Col md={12} sm={12}>\r\n                            <div\r\n                              className=\"text-center\"\r\n                              style={{ fontWeight: \"bold\", fontSize: \"18px\" }}\r\n                            >\r\n                              ${\" \"}\r\n                              <NumberFormat\r\n                                value={\r\n                                  allHistoryRecord.history_info !== undefined\r\n                                    ? historyTotal +\r\n                                      openTotal +\r\n                                      allHistoryRecord.history_info\r\n                                    : historyTotal + openTotal\r\n                                }\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                decimalScale={2}\r\n                              />\r\n                              {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\r\n                            </div>\r\n                          </Col>\r\n\r\n                          <div className=\"clearfix\"></div>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Collapse>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col md={12} sm={6}>\r\n                  <div className=\"symbol-box\" style={{ marginBottom: `20px` }}>\r\n                    <span className=\"p-text\">Side by side View</span>\r\n                    <span className=\"icon-style\" onClick={toggle3}>\r\n                      {isOpen3 ? (\r\n                        <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\r\n                      ) : (\r\n                        <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\r\n                      )}\r\n                    </span>\r\n                  </div>\r\n\r\n                  <Collapse isOpen={isOpen3}>\r\n                    <TableList />\r\n                    <Row style={{ marginBottom: `20px` }}>\r\n                      <Col md={12} sm={6}>\r\n                        <div\r\n                          className={\r\n                            historyTotal + openTotal >= 0\r\n                              ? \"summary-box\"\r\n                              : \"summary-box-red\"\r\n                          }\r\n                        >\r\n                          {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\r\n                          {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\r\n<span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\r\n\r\n                          <Col md={12} sm={12}>\r\n                            <div\r\n                              className=\"summary-text text-center\"\r\n                              style={{ fontWeight: 600, color: \"#797979\" }}\r\n                            >\r\n                              Unrealized & Realized P/L ({activeProfileName}){\" \"}\r\n                              {allHistoryRecord.history_info !== 0 && (\r\n                                <span> + Commission</span>\r\n                              )}{\" \"}\r\n                            </div>\r\n                          </Col>\r\n                          <Col md={12} sm={12}>\r\n                            <div\r\n                              className=\"text-center\"\r\n                              style={{ fontWeight: \"bold\", fontSize: \"18px\" }}\r\n                            >\r\n                              ${\" \"}\r\n                              <NumberFormat\r\n                                value={\r\n                                  allHistoryRecord.history_info !== undefined\r\n                                    ? historyTotal +\r\n                                      openTotal +\r\n                                      allHistoryRecord.history_info\r\n                                    : historyTotal + openTotal\r\n                                }\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                decimalScale={2}\r\n                              />\r\n                              {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\r\n                            </div>\r\n                          </Col>\r\n\r\n                          <div className=\"clearfix\"></div>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Collapse>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          )}\r\n          <Grid fluid>\r\n            {/* <div className=\"symbol-box shadoremove\"> */}\r\n            {/* <div className=\"openOrder\">\r\n\r\n                            <div className=\"border-box row\"> */}\r\n            {/* <DatatablePage state={'open'} data={fromOpenTrade} /> */}\r\n            {/* </div> */}\r\n            {/* <div className=\"border-box row\"> */}\r\n\r\n            {/* <DatatablePage state={'open'} data={toOpenTrade} /> */}\r\n            {/* </div> */}\r\n            {/* <div className=\"border-box row\"> */}\r\n\r\n            {/* <DatatablePage state={'close'} data={fromHistoryTrade} /> */}\r\n            {/* </div> */}\r\n            {/* <div className=\"border-box row\"> */}\r\n\r\n            {/* <DatatablePage state={'close'} data={toHistoryTrade} /> */}\r\n            {/* </div> */}\r\n            {/* </div> */}\r\n            {/* </div> */}\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\r\n\r\nexport default class Exploser extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"boxFix\">\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <div className=\"card \">\r\n\r\n                            <div className=\"header\">\r\n\r\n                                <h6 className={'colorDarkBlue , loginCenter'}>Account - A</h6>\r\n                            </div>\r\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                <table className=\"table\">\r\n                                    <tbody>\r\n\r\n                                        <tr><td>Symbol </td>\r\n                                            <td className=\"td-actions text-right\">Symbol\r\n\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr><td>Lots </td>\r\n                                            <td className=\"td-actions text-right\">Lots\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr><td>BUY/SELL </td>\r\n                                            <td className=\"td-actions text-right\">Buy/Sell\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Contract Size </td>\r\n                                            <td className=\"td-actions text-right\">Size\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Exploser </td>\r\n                                            <td className=\"td-actions text-right\">Exploser Total\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n\r\n\r\n                    <Col md={6}>\r\n                        <div className=\"card \">\r\n\r\n                            <div className=\"header\">\r\n\r\n                                <h6 className={'colorDarkBlue , loginCenter'}>Account - B</h6>\r\n                            </div>\r\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                <table className=\"table\">\r\n                                    <tbody>\r\n\r\n                                        <tr><td>Symbol </td>\r\n                                            <td className=\"td-actions text-right\">Symbol\r\n\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr><td>Lots </td>\r\n                                            <td className=\"td-actions text-right\">Lots\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr><td>BUY/SELL </td>\r\n                                            <td className=\"td-actions text-right\">Sell\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Contract Size </td>\r\n                                            <td className=\"td-actions text-right\">Size\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Exploser </td>\r\n                                            <td className=\"td-actions text-right\">Total\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n\r\n\r\n                </Row>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport config from \"../../constant/config\";\r\nimport Data from \"../Data\";\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\nimport \"./ContractSize.css\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { api } from \"../../api\";\r\nimport myInitObject from \"../../api\";\r\nconst axios = require(\"axios\");\r\nexport default class ContractSize extends Component {\r\n  _isMounted = false;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fromAccounts: \"\",\r\n      fromSymbol: \"\",\r\n      toAccounts: \"\",\r\n      toSymbol: \"\",\r\n      fromOpenOrderInfos: \"\",\r\n      toOpenOrderInfos: \"\",\r\n      total: \"\",\r\n      totalTo: \"\",\r\n      blockloader: true,\r\n      selectedOption: null,\r\n      allHistoryRecord: [],\r\n      allOpenRecord: [],\r\n      fromHistoryOrderInfo: [],\r\n      toHistoryOrderInfo: [],\r\n      commissionHistoryOrderInfo: [],\r\n      fromOpenOrderInfo: [],\r\n      toOpenOrderInfo: [],\r\n      filterlist: [],\r\n      loading: true,\r\n      dateTime: \"\",\r\n      errorMassege: true,\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    this._isMounted = true;\r\n    if (this._isMounted) {\r\n    setInterval(() => {\r\n      if (\r\n        (myInitObject.responsHT &&\r\n          myInitObject.responsOT &&\r\n          myInitObject.responsSD) === undefined\r\n      ) {\r\n        console.log(\"no data\");\r\n      } else {\r\n        this.setState(\r\n          {\r\n            //last update time\r\n            dateTime: myInitObject.fetchLastUpdatedTime.filteredInfoTime,\r\n            // status data\r\n            loading: false,\r\n            fromAccounts: myInitObject.fetchStatusData.fromAccounts,\r\n            fromSymbol: myInitObject.fetchStatusData.fromSymbol,\r\n            toAccounts: myInitObject.fetchStatusData.toAccounts,\r\n            toSymbol: myInitObject.fetchStatusData.toSymbol,\r\n            fromOpenOrderInfos:\r\n              myInitObject.fetchStatusData.fromOpenOrderInfos.length > 0\r\n                ? myInitObject.fetchStatusData.fromOpenOrderInfos[0]\r\n                : \"\",\r\n            blockloader:\r\n              myInitObject.fetchStatusData.fromOpenOrderInfos.length > 0\r\n                ? false\r\n                : true,\r\n            total:\r\n              myInitObject.fetchStatusData.fromOpenOrderInfos.length > 0 &&\r\n              myInitObject.fetchStatusData.fromOpenOrderInfos[0].order_type == 0\r\n                ? myInitObject.fetchStatusData.fromSymbol?.contract_size *\r\n                  myInitObject.fetchStatusData.fromOpenOrderInfos[0]?.lots\r\n                : myInitObject.fetchStatusData.fromSymbol?.contract_size *\r\n                  -myInitObject.fetchStatusData.fromOpenOrderInfos[0]?.lots,\r\n            toOpenOrderInfos:\r\n              myInitObject.fetchStatusData.toOpenOrderInfos.length > 0\r\n                ? myInitObject.fetchStatusData.toOpenOrderInfos[0]\r\n                : \"\",\r\n            totalTo:\r\n              myInitObject.fetchStatusData.toOpenOrderInfos.length > 0 &&\r\n              myInitObject.fetchStatusData.toOpenOrderInfos[0].order_type == 0\r\n                ? myInitObject.fetchStatusData.toSymbol?.contract_size *\r\n                  myInitObject.fetchStatusData.toOpenOrderInfos[0]?.lots\r\n                : myInitObject.fetchStatusData.toSymbol?.contract_size *\r\n                  -myInitObject.fetchStatusData.toOpenOrderInfos[0]?.lots,\r\n            //history trade\r\n            allHistoryRecord: myInitObject.fetchAllHistoryTrade.rows,\r\n            fromHistoryOrderInfo:\r\n              myInitObject.fetchAllHistoryTrade.fromHistoryOrderInfo,\r\n            toHistoryOrderInfo:\r\n              myInitObject.fetchAllHistoryTrade.toHistoryOrderInfo,\r\n            //open trade\r\n            allOpenRecord: myInitObject.fetchAllOpenTrade.rows,\r\n            fromOpenOrderInfo: myInitObject.fetchAllOpenTrade.fromOpenOrderInfo,\r\n            toOpenOrderInfo: myInitObject.fetchAllOpenTrade.toOpenOrderInfo,\r\n          },\r\n          () => {\r\n            this.setState({\r\n              errorMassege:\r\n                this.state.allHistoryRecord.length == 0 ? true : false,\r\n            });\r\n          }\r\n        );\r\n      }\r\n    }, 1000);\r\n  }\r\n  }\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n  // componentDidMount() {\r\n  //     // this.fetchAllHIstoryTrade();\r\n  //     // this.fetchStatusData();\r\n  //     axios.get(config.baseurl + '/accounts/fetchAllSymbol')\r\n  //         .then(function (response) {\r\n  //             if (response.status == 200) {\r\n  //                 console.log(response, \"response ---------------fetchAllSymbol>\")\r\n  //             }\r\n  //         })\r\n  //     // this.fetchLastUpdatedTime();\r\n  // }\r\n  // fetchLastUpdatedTime = () => {\r\n  //     let self = this;\r\n  //     axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\r\n  //         .then(function (response) {\r\n  //             if (response.status == 200) {\r\n  //                 self.setState({ dateTime: response.data.filteredInfoTime })\r\n  //                 // console.log(self.state.dataOpenTrade.accountFromInfo,\"outyfjhkjh\");\r\n  //             }\r\n  //         });\r\n  // }\r\n\r\n  // fetchStatusData = () => {\r\n  //     let self = this;\r\n  //     let tottal = 0;\r\n  //     axios.get(config.baseurl + '/accounts/fetchStatusData')\r\n  //         .then(function (response) {\r\n  //             if (response.status == 200) {\r\n  //                 self.setState({ loading: false })\r\n\r\n  //                 self.setState({ fromAccounts: response.data.fromAccounts })\r\n  //                 self.setState({ fromSymbol: response.data.fromSymbol })\r\n  //                 // console.log(fromSymbol,\"fromSymbol\");\r\n  //                 self.setState({ toAccounts: response.data.toAccounts })\r\n  //                 self.setState({ toSymbol: response.data.toSymbol })\r\n  //                 self.setState({ fromOpenOrderInfos: response.data.fromOpenOrderInfos.length > 0 ? response.data.fromOpenOrderInfos[0] : '' })\r\n  //                 if (response.data.fromOpenOrderInfos.length > 0) {\r\n  //                     self.setState({ blockloader: false })\r\n  //                     if (response.data.fromOpenOrderInfos[0].order_type == 0) {\r\n  //                         self.setState({ total: response.data.fromSymbol.contract_size * (response.data.fromOpenOrderInfos[0].lots) })\r\n  //                     } else {\r\n  //                         self.setState({ total: response.data.fromSymbol.contract_size * -(response.data.fromOpenOrderInfos[0].lots) })\r\n  //                     }\r\n\r\n  //                     self.setState({ toOpenOrderInfos: response.data.toOpenOrderInfos.length > 0 ? response.data.toOpenOrderInfos[0] : '' })\r\n  //                 }\r\n  //                 if (response.data.toOpenOrderInfos.length > 0) {\r\n  //                     if (response.data.toOpenOrderInfos[0].order_type == 0) {\r\n  //                         self.setState({ totalTo: response.data.toSymbol.contract_size * (response.data.toOpenOrderInfos[0].lots) })\r\n  //                     } else {\r\n  //                         self.setState({ totalTo: response.data.toSymbol.contract_size * -(response.data.toOpenOrderInfos[0].lots) })\r\n  //                     }\r\n  //                 }\r\n\r\n  //             }\r\n  //         });\r\n  // }\r\n  // fetchAllHIstoryTrade = () => {\r\n  //     let self = this;\r\n  //     axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\r\n  //         .then(function (response) {\r\n  //             // console.log(response.data, 'response.data his')\r\n  //             if (response.status == 200) {\r\n  //                 self.setState({ errorMassege: false })\r\n  //                 // self.setState({ allHistoryRecord: response.data.rows })\r\n  //                 self.setState({\r\n  //                     allHistoryRecord: response.data.rows,\r\n  //                     fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,sNaN(parseInt(s)\r\n  //                     toHistoryOrderInfo: response.data.toHistoryOrderInfo,\r\n  //                     commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\r\n  //                 })\r\n  //             }\r\n  //         })\r\n  //     // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\r\n  //     // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\r\n  //     axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\r\n  //         .then(function (response) {\r\n  //             if (response.status == 200) {\r\n\r\n  //                 // self.setState({ allOpenRecord: response.data.rows })\r\n  //                 self.setState({\r\n  //                     allOpenRecord: response.data.rows,\r\n  //                     fromOpenOrderInfo: response.data.fromOpenOrderInfo,\r\n  //                     toOpenOrderInfo: response.data.toOpenOrderInfo\r\n  //                 })\r\n  //             }\r\n  //         })\r\n  // }\r\n\r\n  render() {\r\n    const {\r\n      allHistoryRecord,\r\n      allOpenRecord,\r\n      selectedOption,\r\n      toOpenOrderInfo,\r\n      fromOpenOrderInfo,\r\n      fromHistoryOrderInfo,\r\n      commissionHistoryOrderInfo,\r\n      toHistoryOrderInfo,\r\n    } = this.state;\r\n    //   const sumOfOpenTotal = allOpenRecord.reduce((current, data) => {\r\n    //     return (Math.floor(data.commission + data.swap + data.profit+ current));\r\n    // }, 0);\r\n\r\n    //   const sumOfHistoryTotal = allHistoryRecord.reduce((current, data) => {\r\n    //     return (data.profit + current);\r\n    // }, 0);\r\n    let uniqueSymbols = \"\";\r\n    if (allOpenRecord && Object.entries(allOpenRecord).length > 0) {\r\n      let fromSymbols = JSON.parse(allOpenRecord.from_symbols);\r\n      // fromSymbols = (fromSymbols).map(data => data).join(', ');\r\n      let toSymbols = JSON.parse(allOpenRecord.to_symbols);\r\n      let combineSymbols = fromSymbols.concat(toSymbols);\r\n      uniqueSymbols = combineSymbols.filter(\r\n        (item, i, ar) => ar.indexOf(item) === i\r\n      );\r\n      uniqueSymbols = uniqueSymbols.map((data) => data).join(\", \");\r\n    }\r\n    let fromsum = 0;\r\n    let tosum = 0;\r\n    // if(fromHistoryOrderInfo && commissionHistoryOrderInfo && fromHistoryOrderInfo.length>0){\r\n    if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\r\n      fromsum =\r\n        fromHistoryOrderInfo[0].commission +\r\n        fromHistoryOrderInfo[0].swap +\r\n        fromHistoryOrderInfo[0].profit;\r\n    }\r\n\r\n    if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\r\n      tosum =\r\n        toHistoryOrderInfo[0].commission +\r\n        toHistoryOrderInfo[0].swap +\r\n        toHistoryOrderInfo[0].profit;\r\n    }\r\n\r\n    let sumOfHistoryTotal = tosum + fromsum;\r\n\r\n    let openfromsum = 0;\r\n    let opentosum = 0;\r\n    if (\r\n      fromOpenOrderInfo &&\r\n      fromOpenOrderInfo.length > 0 &&\r\n      fromOpenOrderInfo[0].total != null\r\n    ) {\r\n      openfromsum =\r\n        fromOpenOrderInfo[0].commission +\r\n        fromOpenOrderInfo[0].swap +\r\n        fromOpenOrderInfo[0].profit;\r\n    }\r\n    if (\r\n      toOpenOrderInfo &&\r\n      toOpenOrderInfo.length > 0 &&\r\n      toOpenOrderInfo[0].total != null\r\n    ) {\r\n      opentosum =\r\n        toOpenOrderInfo[0].commission +\r\n        toOpenOrderInfo[0].swap +\r\n        toOpenOrderInfo[0].profit;\r\n    }\r\n\r\n    let sumOfOpenTotal = opentosum + openfromsum;\r\n    this.state.total = isNaN(parseInt(this.state.total)) ? 0 : parseInt(this.state.total)\r\n    this.state.totalTo = isNaN(parseInt(this.state.totalTo)) ? 0 : parseInt(this.state.totalTo)\r\n\r\n    // console.log(this.state.total , typeof isNaN(this.state.totalTo)  , \"jjjjjj\", this.state.totalTo);\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.errorMassege == true ? (\r\n          <div className=\"popup\">\r\n            <div className=\"card w-75 \">\r\n              <div className=\"card-body topmargin\">\r\n                <div className=\" card-text popuptext\" role=\"alert\">\r\n                  Please Select Filters To Continue...\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Row>\r\n              <div className=\"lastUpdate\">\r\n                <span> Last Updated : </span>\r\n                {this.state.dateTime}(UTC){\" \"}\r\n              </div>\r\n            </Row>\r\n            <div className=\"contractSize-wrapper\">\r\n              <div className=\" leftset card \">\r\n                {this.state.loading ? (\r\n                  <Loader\r\n                    type=\"ThreeDots\"\r\n                    color=\"black\"\r\n                    height={100}\r\n                    width={100}\r\n                    style={{ textAlign: \"center\" }}\r\n                  />\r\n                ) : (\r\n                  <Row>\r\n                    <h4 className=\"text-center \">\r\n                      <b>Exposure</b>\r\n                    </h4>\r\n                    {/* {this.state.fromOpenOrderInfos && this.state.fromOpenOrderInfos.order_type !== null || this.state.toOpenOrderInfos && this.state.toOpenOrderInfos.order_type !== null ? */}\r\n                    <>\r\n                      {\" \"}\r\n                      {this.state.fromOpenOrderInfos !== \"\" &&\r\n                      this.state.fromOpenOrderInfos.order_type !== null ? (\r\n                        <Col md={4}>\r\n                          <div className=\"card\">\r\n                            <div\r\n                              className={\"colorDarkBlue , boldText loginCenter\"}\r\n                            >\r\n                              {this.state.fromAccounts.alias}\r\n                            </div>\r\n\r\n                            <h6 className={\"colorDarkBlue loginCenter\"}>\r\n                              {this.state.fromAccounts.login}\r\n                            </h6>\r\n\r\n                            <div className=\"content table-full-width \">\r\n                              <div className=\"table-responsive\">\r\n                                <div className=\"text-center\">\r\n                                  <span>{this.state.fromSymbol.name}</span>\r\n                                  {this.state.fromOpenOrderInfos !== \"\" &&\r\n                                    this.state.fromOpenOrderInfos.order_type !==\r\n                                      null && (\r\n                                      <span\r\n                                        className=\"td-actions bText, clearBorder\"\r\n                                        style={{ display: \"block\" }}\r\n                                      >\r\n                                        {this.state.fromOpenOrderInfos\r\n                                          .order_type == 0\r\n                                          ? \"BUY \"\r\n                                          : \"SELL \"}\r\n                                          <NumberFormat value={this.state.fromOpenOrderInfos.lots} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                                        {\" \"}\r\n                                        {this.state.fromOpenOrderInfos.lots > 1\r\n                                          ? \"Lots\"\r\n                                          : \"Lot\"}\r\n                                      </span>\r\n                                    )}\r\n                                </div>\r\n                                <br></br>\r\n                                <div className=\"text-center\">\r\n                                  <span className=\"td-actions clearBorder text-right\">\r\n                                    <NumberFormat\r\n                                      value={this.state.total}\r\n                                      displayType={\"text\"}\r\n                                      thousandSeparator={true}\r\n                                      decimalScale={2}\r\n                                    />{\" \"}\r\n                                    {this.state.fromSymbol.margin_currency}\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </Col>\r\n                      ) : (\r\n                        <Col md={4}>\r\n                          <div className=\"card change noRecordCol\">\r\n                            {\" \"}\r\n                            No Record Found\r\n                          </div>\r\n                        </Col>\r\n                      )}\r\n                      <Col md={4}>\r\n                        <div className=\"card\">\r\n                          \r\n                            {(this.state.total + this.state.totalTo == 0) && \r\n                            this.state.total !== 0 && \r\n                            this.state.totalTo !== 0 ? (\r\n                            <h5 className=\"  text-center adjustMent\">\r\n                              <span style={{ color: \"green\" }}>\r\n                                <b> No Exposure</b>\r\n                              </span>\r\n                          </h5>)\r\n                              : ''}\r\n                              {this.state.total == 0 && this.state.totalTo == 0 ? (\r\n                            <h5 className=\"  text-center adjustMent\">\r\n                              <span style={{ color: \"green\" }}>\r\n                                <b> No Record Found</b>\r\n                              </span>\r\n                          </h5>)\r\n                              : ''}\r\n                          {this.state.total !== 0 &&\r\n                            this.state.totalTo !== 0 && \r\n                            this.state.total + this.state.totalTo != 0 && (\r\n                                <>\r\n                                 <h5 className=\"  text-center adjustMent\">\r\n                                  <b> Exposure</b> \r\n                              </h5>\r\n                              <div\r\n                                style={{ color: \"#b70606\" }}\r\n                                className=\" setBottom bText text-center\"\r\n                              >\r\n                                <NumberFormat\r\n                                  value={this.state.total + this.state.totalTo}\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  decimalScale={2}\r\n                                />\r\n                                {this.state.fromSymbol?.margin_currency ===\r\n                                this.state.toSymbol?.margin_currency\r\n                                  ? `  ` +\r\n                                      this.state.fromSymbol.margin_currency ||\r\n                                    this.state.toSymbol.margin_currency\r\n                                  : \"\"}\r\n                              </div>\r\n                              </>\r\n                            )}\r\n                          {this.state.totalTo !== 0 &&\r\n                            (isNaN(this.state.total) == true ||\r\n                              this.state.total == 0) && (\r\n                                  <>\r\n                                <h5 className=\"  text-center adjustMent\">\r\n                                  <b> Exposure</b> \r\n                              </h5>\r\n                              <div\r\n                                style={{ color: \"#b70606\" }}\r\n                                className=\" setBottom bText text-center\"\r\n                              >\r\n                                <NumberFormat\r\n                                  value={this.state.totalTo}\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  decimalScale={2}\r\n                                />\r\n                                {this.state.toSymbol?.margin_currency\r\n                                  ? `  ` + this.state.toSymbol.margin_currency\r\n                                  : \"\"}\r\n                              </div>\r\n                              </>\r\n                            )}\r\n                          {this.state.total != 0 &&\r\n                            (isNaN(this.state.totalTo) == true ||\r\n                              this.state.totalTo == 0) && (\r\n                                  <>\r\n                                <h5 className=\"  text-center adjustMent\">\r\n                                <b> Exposure</b> \r\n                            </h5>\r\n                              <div\r\n                                style={{ color: \"#b70606\" }}\r\n                                className=\" setBottom bText text-center\"\r\n                              >\r\n                                <NumberFormat\r\n                                  value={this.state.total}\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  decimalScale={2}\r\n                                />\r\n                                {this.state.fromSymbol?.margin_currency\r\n                                  ? `  ` + this.state.fromSymbol.margin_currency\r\n                                  : \"\"}\r\n                              </div>\r\n                              </>\r\n                            )}\r\n                        </div>\r\n                      </Col>\r\n                      {this.state.toOpenOrderInfos !== \"\" &&\r\n                      this.state.toOpenOrderInfos.order_type !== null ? (\r\n                        <Col md={4}>\r\n                          <div className=\" leftset1 card\">\r\n                            <div className={\"color2 , boldText loginCenter\"}>\r\n                              {this.state.toAccounts.alias}\r\n                            </div>\r\n\r\n                            <h6 className={\"color2 ,bText, loginCenter\"}>\r\n                              {this.state.toAccounts.login}\r\n                            </h6>\r\n\r\n                            <div className=\"content table-full-width \">\r\n                              <div className=\"table-responsive\">\r\n                                <div className=\"text-center\">\r\n                                  <span className=\"td-actions bText, clearBorder text-right\">\r\n                                    {this.state.toSymbol.name}\r\n                                  </span>\r\n                                  {this.state.toOpenOrderInfos !== \"\" &&\r\n                                    this.state.toOpenOrderInfos.order_type !==\r\n                                      null && (\r\n                                      <span\r\n                                        className=\"td-actions bText, clearBorder\"\r\n                                        style={{ display: \"block\" }}\r\n                                      >\r\n                                        {this.state.toOpenOrderInfos\r\n                                          .order_type == 0\r\n                                          ? \"BUY \"\r\n                                          : \"SELL \"}\r\n                                          <NumberFormat value={this.state.toOpenOrderInfos.lots} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                                          {\" \"}\r\n                                        {this.state.toOpenOrderInfos.lots > 1\r\n                                          ? \"Lots\"\r\n                                          : \"Lot\"}\r\n                                      </span>\r\n                                    )}\r\n                                </div>\r\n                                <br></br>\r\n                                <div className=\"text-center\">\r\n                                  <span>\r\n                                    <NumberFormat\r\n                                      value={this.state.totalTo}\r\n                                      displayType={\"text\"}\r\n                                      thousandSeparator={true}\r\n                                      decimalScale={2}\r\n                                    />{\" \"}\r\n                                    {this.state.toSymbol.margin_currency}\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </Col>\r\n                      ) : (\r\n                        <Col md={4}>\r\n                          <div className=\"card change noRecordCol\">\r\n                            {\" \"}\r\n                            No Record Found\r\n                          </div>\r\n                        </Col>\r\n                      )}\r\n                    </>\r\n                    {/* <Col md={12}>\r\n                                            <div className=\"card change noRecordCol\"> No Recor Found</div>\r\n                                        </Col> */}\r\n                    {/* } */}\r\n                  </Row>\r\n                )}\r\n                <Col md={12} sm={6}>\r\n                  <div\r\n                    className={\r\n                      sumOfHistoryTotal + sumOfOpenTotal >= 0\r\n                        ? \"summary-box\"\r\n                        : \"summary-box-red\"\r\n                    }\r\n                  >\r\n                    {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\r\n                    {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\r\n                <span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\r\n\r\n                    <Col md={12} sm={12}>\r\n                      <div\r\n                        className=\"summary-text text-center\"\r\n                        style={{ fontWeight: 600, color: \"#797979\" }}\r\n                      >\r\n                        Summary For ({uniqueSymbols}){\" \"}\r\n                        {allHistoryRecord.history_info !== 0 && (\r\n                          <span> + Commission</span>\r\n                        )}{\" \"}\r\n                      </div>\r\n                    </Col>\r\n                    <Col md={12} sm={12}>\r\n                      <div\r\n                        className=\"text-center\"\r\n                        style={{ fontWeight: \"bold\", fontSize: \"18px\" }}\r\n                      >\r\n                        ${\" \"}\r\n                        <NumberFormat\r\n                          value={\r\n                            allHistoryRecord.history_info !== undefined\r\n                              ? sumOfHistoryTotal +\r\n                                sumOfOpenTotal +\r\n                                allHistoryRecord.history_info\r\n                              : sumOfHistoryTotal + sumOfOpenTotal\r\n                          }\r\n                          displayType={\"text\"}\r\n                          thousandSeparator={true}\r\n                          decimalScale={2}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <div className=\"clearfix\"></div>\r\n                  </div>\r\n                </Col>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport NumberFormat from 'react-number-format';\r\nimport config from '../../constant/config';\r\nimport Data from '../Data';\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\nimport './Statistics.css'\r\nimport { api } from '../../api'\r\nimport myInitObject from '../../api'\r\nconst axios = require('axios');\r\nexport default class Statistics extends Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n            filterlist: [],\r\n            selectedOption: null,\r\n            allHistoryRecord: [],\r\n            allOpenRecord: [],\r\n            fromHistoryOrderInfo: [],\r\n            toHistoryOrderInfo: [],\r\n            commissionHistoryOrderInfo: [],\r\n            fromOpenOrderInfo: [],\r\n            dateTime: '',\r\n            activeProfileName: ''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        // this.fetchActivefilterData();\r\n        // this.fetchAllHIstoryTrade();\r\n        // this.fetchLastUpdatedTime()\r\n        this._isMounted = true;\r\n        if (this._isMounted) {\r\n        setInterval(() => {\r\n         if((myInitObject.responsHT &&\r\n           myInitObject.responsOT &&\r\n           myInitObject.responsAC &&\r\n           myInitObject.responsAF &&\r\n           myInitObject.responsLUT &&\r\n           myInitObject.responsSD) === undefined){\r\n           console.log('no data');\r\n         }else{\r\n        //    console.log(myInitObject, '=========><')\r\n           this.setState({\r\n             //history trade\r\n             allHistoryRecord: myInitObject.fetchAllHistoryTrade.rows,\r\n             fromHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.fromHistoryOrderInfo,\r\n             toHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.toHistoryOrderInfo,\r\n             //open trade\r\n             allOpenRecord: myInitObject.fetchAllOpenTrade.rows,\r\n             fromOpenOrderInfo: myInitObject.fetchAllOpenTrade.fromOpenOrderInfo,\r\n             toOpenOrderInfo: myInitObject.fetchAllOpenTrade.toOpenOrderInfo,\r\n            \r\n             //active filter data\r\n             filterlist: myInitObject.fetchActivefilterdata.rows,\r\n            \r\n             activeProfileName: myInitObject.fetchActivefilterdata.rows[0].profile_name, \r\n             //last updated time\r\n             dateTime: myInitObject.fetchLastUpdatedTime.filteredInfoTime,\r\n             \r\n             },() =>{\r\n               this.setState({ errorMassege:this.state.filterlist.length == 0 ?  true : false,})\r\n             })\r\n         }\r\n        },1000)\r\n    }\r\n    }\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n      }\r\n    // fetchLastUpdatedTime = () => {\r\n    //     let self = this;\r\n    //     axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\r\n    //         .then(function (response) {\r\n    //             if (response.status == 200) {\r\n    //                 self.setState({ dateTime: response.data.filteredInfoTime })\r\n    //                 // console.log(self.state.dataOpenTrade.accountFromInfo,\"outyfjhkjh\");\r\n    //             }\r\n    //         });\r\n    // }\r\n    // fetchActivefilterData = () => {\r\n    //     let self = this;\r\n    //     axios.get(config.baseurl + '/filter/fetchActivefilterdata')\r\n    //         .then(function (response) {\r\n    //             if (response.status == 200) {\r\n    //                 console.log(response, \"respp----------------->\")\r\n    //                 self.setState({ filterlist: response.data.rows, })\r\n    //                 if (self.state.filterlist.length == 0) {\r\n    //                     self.setState({ errorMassege: true ,})\r\n    //                     }\r\n    //                     else{\r\n    //                         self.setState({activeProfileName: response.data.rows[0].profile_name})\r\n    //                     }\r\n    //             }\r\n    //         });\r\n    // }\r\n\r\n    showData = (accountDetailValue) => {\r\n\r\n        return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\r\n            if (accountDetailValue === 'margin_level') {\r\n                return (\r\n                    <>\r\n                        <td className=\"tdClr2 tdClr boldText\" >\r\n                            <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\r\n                </td>\r\n                        <td className=\"tdClr2 boldText\">\r\n                            {/* {item.accountToInfo[0].accounts_details[0][accountDetailValue]} % */}\r\n                            <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\r\n                </td>\r\n                    </>\r\n                )\r\n            }\r\n            if (item.accountFromInfo.length > 0) {\r\n                return (\r\n                    <>\r\n                        <td className=\"tdClr2 tdClr boldText\" >\r\n                            {item.accountFromInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''}  {' '}\r\n                            <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                        </td>\r\n\r\n                        <td className=\"tdClr2 boldText\">\r\n                            {item.accountToInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''} {' '}\r\n                            {/* {item.accountToInfo[0].accounts_details[0][accountDetailValue]} */}\r\n                            <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                        </td>\r\n                    </>\r\n                )\r\n\r\n            }\r\n\r\n        })\r\n    }\r\n    tableHeader = () => {\r\n\r\n        return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\r\n            return (\r\n                <tr key={index}>\r\n                    <th  className=\"bText colorDarkBlue text-center tdClr2 tdClr\">\r\n                        <div className=\"colorDarkBlue\" >\r\n                            {(item.accountFromInfo[0].alias != null) ? item.accountFromInfo[0].alias : '-'}\r\n                        </div>\r\n                        <span style={{ fontSize: 10 }}>\r\n                            {item.accountFromInfo[0].login}\r\n                        </span>\r\n\r\n                    </th>\r\n                    <th className=\"bText color2 text-center tdClr2\">\r\n                        <div className=\"color2\" >\r\n                            {(item.accountToInfo[0].alias != null) ? item.accountToInfo[0].alias : '-'}\r\n                        </div>\r\n                        <span style={{ fontSize: 10 }}>\r\n                            {item.accountToInfo[0].login}\r\n                        </span>\r\n\r\n                    </th>\r\n                </tr>\r\n\r\n            )\r\n\r\n        })\r\n    }\r\n    // fetchAllHIstoryTrade = () => {\r\n    //     let self = this;\r\n    //     axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\r\n    //         .then(function (response) {\r\n    //             // console.log(response.data, 'response.data his')\r\n    //             if (response.status == 200) {\r\n    //                 // self.setState({ allHistoryRecord: response.data.rows })\r\n    //                 self.setState({\r\n    //                     allHistoryRecord: response.data.rows,\r\n    //                     fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,\r\n    //                     toHistoryOrderInfo: response.data.toHistoryOrderInfo,\r\n    //                     commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\r\n    //                 })\r\n    //             }\r\n    //         })\r\n    //     // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\r\n    //     // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\r\n    //     axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\r\n    //         .then(function (response) {\r\n    //             if (response.status == 200) {\r\n\r\n    //                 // self.setState({ allOpenRecord: response.data.rows })\r\n    //                 self.setState({\r\n    //                     allOpenRecord: response.data.rows,\r\n    //                     fromOpenOrderInfo: response.data.fromOpenOrderInfo,\r\n    //                     toOpenOrderInfo: response.data.toOpenOrderInfo\r\n    //                 })\r\n    //             }\r\n    //         })\r\n    // }\r\n    render() {\r\n        const { allHistoryRecord, allOpenRecord, selectedOption, toOpenOrderInfo, fromOpenOrderInfo, fromHistoryOrderInfo, commissionHistoryOrderInfo, toHistoryOrderInfo } = this.state;\r\n        //   const sumOfOpenTotal = allOpenRecord.reduce((current, data) => {\r\n        //     return (Math.floor(data.commission + data.swap + data.profit+ current));\r\n        // }, 0);\r\n\r\n        //   const sumOfHistoryTotal = allHistoryRecord.reduce((current, data) => {\r\n        //     return (data.profit + current);\r\n        // }, 0);\r\n        let uniqueSymbols = \"\";\r\n        if (allOpenRecord && Object.entries(allOpenRecord).length > 0) {\r\n            let fromSymbols = JSON.parse(allOpenRecord.from_symbols);\r\n            // fromSymbols = (fromSymbols).map(data => data).join(', ');\r\n            let toSymbols = JSON.parse(allOpenRecord.to_symbols);\r\n            let combineSymbols = fromSymbols.concat(toSymbols);\r\n            uniqueSymbols = combineSymbols.filter((item, i, ar) => ar.indexOf(item) === i);\r\n            uniqueSymbols = (uniqueSymbols).map(data => data).join(', ')\r\n        }\r\n        let fromsum = 0;\r\n        let tosum = 0;\r\n        // if(fromHistoryOrderInfo && commissionHistoryOrderInfo && fromHistoryOrderInfo.length>0){\r\n        if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\r\n            fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\r\n        }\r\n\r\n        if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\r\n            tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\r\n        }\r\n\r\n        let sumOfHistoryTotal = tosum + fromsum;\r\n\r\n        let openfromsum = 0;\r\n        let opentosum = 0;\r\n        if ((fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total != null)) {\r\n            // if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\r\n            //   openfromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\r\n            // }else{\r\n            openfromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\r\n\r\n        }\r\n        if ((toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total != null)) {\r\n            // if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\r\n            //   opentosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit+ toOpenOrderInfo[0].swap);\r\n            // }\r\n\r\n            // else{\r\n            //   opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n            // }\r\n            opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n        }\r\n\r\n        let sumOfOpenTotal = opentosum + openfromsum;\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {(this.state.errorMassege) ? <div className=\"popup\">\r\n\r\n                    <div className=\"card w-75 \">\r\n                        <div className=\"card-body topmargin\">\r\n                            <div className=\" card-text popuptext\" role=\"alert\">Please activate filter profile to view stats.......</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                    :\r\n                    <div className=\"statistic-wrapper\">\r\n                        <Grid fluid>\r\n                            <Row>\r\n                                <div className=\"lastUpdate\">\r\n                                    <span> Last Updated :  </span>\r\n                                    {this.state.dateTime}(UTC)  </div>\r\n                            </Row>\r\n                            <div className=\"terminal-box\">\r\n\r\n                                <span className=\"terminal-text\">Terminal Statistics</span>\r\n                            </div>\r\n                            <Row>\r\n                                {Data.dashBoardPage.items.map((item, index) =>\r\n\r\n                                    <Col md={4} sm={6} key={index}>\r\n                                        <div style={{ margin: '30px 0px' }} className=\"text-center\">\r\n                                            <span className=\"bText\">{item.title}</span>\r\n                                        </div>\r\n                                        <div className=\"balance-box Pmargin\"\r\n                                        // className={item.id == '1' ? 'balance-box' : item.id == '2' ?\r\n                                        //   'balance-box Pmargin' : item.id == '3' ? 'balance-box equity-box' :\r\n                                        //     item.id == '4' ? 'balance-box Fmargin' : item.id == '5' ? 'balance-box floating' : 'balance-box  margin-box'}\r\n                                        >\r\n                                            <div className=\"content\">\r\n                                                <div className=\"table-responsive\">\r\n\r\n                                                    <table className=\"table  text-center\">\r\n\r\n                                                        <tbody>\r\n                                                            \r\n                                                                {this.tableHeader()}\r\n                                                            \r\n                                                            <tr key={item.index}>\r\n                                                                {item.title == 'Balance' && this.showData('balance')}\r\n                                                                {item.title == 'Equity' && this.showData('equity')}\r\n                                                                {item.title == 'Margin' && this.showData('margin')}\r\n                                                                {item.title == 'Free Margin' && this.showData('free_margin')}\r\n                                                                {item.title == 'Margin %' && this.showData('margin_level')}\r\n                                                                {item.title == 'Unrealized P/L' && this.showData('profit')}\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                    </table>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Col>\r\n\r\n                                )}\r\n                            </Row>\r\n                            <Col md={12} sm={6}>\r\n                                <div className={sumOfHistoryTotal + sumOfOpenTotal >= 0 ? \"summary-box\" : \"summary-box-red\"}>\r\n\r\n\r\n                                    {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\r\n                                    {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\r\n                <span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\r\n\r\n                                    <Col md={12} sm={12}>\r\n                                        <div className=\"summary-text text-center\" style={{ fontWeight: 600, color: \"#797979\" }}>Summary For ({this.state.activeProfileName}) {allHistoryRecord.history_info !== 0 && (<span> + Commission</span>)} </div>\r\n                                    </Col>\r\n                                    <Col md={12} sm={12}>\r\n                                        <div className=\"text-center\" style={{ fontWeight: 'bold', fontSize: \"18px\" }}>$ {' '}\r\n                                            <NumberFormat value={allHistoryRecord.history_info !== undefined ? sumOfHistoryTotal + sumOfOpenTotal + allHistoryRecord.history_info : sumOfHistoryTotal + sumOfOpenTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n\r\n                                            {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\r\n\r\n                                        </div>\r\n                                    </Col>\r\n\r\n                                    <div className=\"clearfix\"></div>\r\n                                </div>\r\n                            </Col>\r\n                        </Grid>\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport config from \"constant/config\";\r\n\r\nclass UserDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      filter_profile: \"\",\r\n      loggedIn: \"\",\r\n      profiles: [],\r\n      result: [],\r\n    };\r\n  }\r\n  crossClick(e) {\r\n    e.preventDefault();\r\n    this.props.onHide();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let data = this.props.data;\r\n    this.allFilterprofiles();\r\n    this.setState({\r\n      username: data.username,\r\n      loggedIn: data.logged_in,\r\n      filter_profile: JSON.parse(data.filter_profile),\r\n    });\r\n    this.setState({})\r\n  }\r\n  allFilterprofiles() {\r\n    let self = this;\r\n    axios\r\n      .get(config.baseurl + \"/users/allFilterprofiles\")\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          self.setState({ profiles: response.data.rows });\r\n        }\r\n      });\r\n  }\r\n  selectedProfiles() {\r\n    let self = this;\r\n    var matches = [];\r\n\r\n    for (var i = 0; i < self.state.filter_profile.length; i++) {\r\n      for (var e = 0; e < self.state.profiles.length; e++) {\r\n        if (self.state.filter_profile[i] === self.state.profiles[e].id)\r\n          matches.push(JSON.stringify(self.state.profiles[e].profile_name)+'  ');\r\n      }\r\n    }\r\n    return matches;\r\n  \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <Grid fluid>\r\n          <div className=\"symbol-box\">\r\n            <div className=\"cross_div\">\r\n              <a onClick={(e) => this.crossClick(e)}>\r\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n              </a>\r\n            </div>\r\n            <div className=\"detail-text\">\r\n              <h3> User Details </h3>\r\n            </div>\r\n            <Row>\r\n              <Col md={12}>\r\n                <div className=\"card\">\r\n                  <table className=\"table mt20\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <td className=\"b-clr\">\r\n                          <span>Username </span>\r\n                        </td>\r\n\r\n                        <td\r\n                          className=\"b-clr text-center\"\r\n                          style={{ width: \"40%\" }}\r\n                        >\r\n                          {this.state.username}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"b-clr\">\r\n                          <span>Profile</span>\r\n                        </td>\r\n\r\n                        <td\r\n                          className=\"b-clr text-center\"\r\n                          style={{ width: \"40%\" }}\r\n                        >\r\n                          {this.state.filter_profile ? [ this.selectedProfiles()] :''}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"b-clr \">\r\n                          <span>Logged In </span>\r\n                        </td>\r\n                        <td\r\n                          className=\"b-clr text-center\"\r\n                          style={{ width: \"40%\" }}\r\n                        >\r\n                          {this.state.loggedIn === 1 ? \"Yes\" : \"No\"}\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserDetail;\r\n","import React, { Component } from \"react\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\r\nimport config from \"../../constant/config.js\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport Select from \"react-select\";\r\nimport TagsInput from \"react-tagsinput\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nclass UserEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      loggged_in: \"\",\r\n      filter_profile: [],\r\n      id: \"\",\r\n      nameError: false,\r\n      profiles: [],\r\n      allChecked: false,\r\n      filterdata: [],\r\n      remove_filterdata: [],\r\n    };\r\n  }\r\n  // componentDidMount() {\r\n\r\n  // }\r\n  componentDidMount() {\r\n    this.allFilterprofiles();\r\n  }\r\n\r\n  allFilterprofiles() {\r\n    let abc = this.props.data;\r\n\r\n    let self = this;\r\n    axios\r\n      .get(config.baseurl + \"/users/allFilterprofiles\")\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          let data = response.data.rows.map((item) => {\r\n            return {\r\n              ...item,\r\n              checked: false,\r\n            };\r\n          });\r\n          self.setState({ profiles: data }, () => {\r\n            if (abc) {\r\n              let selectedVal = self.state.profiles\r\n                .filter(\r\n                  (data) =>\r\n                    JSON.parse(abc.filter_profile).includes(data.id) && true\r\n                )\r\n                .map((data) => {\r\n                  return { value: data.id, label: data.profile_name };\r\n                });\r\n              self.setState({\r\n                filter_profile: selectedVal,\r\n                username: abc.username,\r\n                loggged_in: abc.logged_in,\r\n                id: abc.id,\r\n              });\r\n              // self.setState({\r\n              //   username: abc.username,\r\n              //   loggged_in: abc.logged_in,\r\n              //   id: abc.id,\r\n              // });\r\n            }\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  handleChangeFilterProfile = (filter_profile) => {\r\n    this.setState({ filter_profile });\r\n  };\r\n  renderProfileSelect = () => {\r\n    const { filter_profile, profiles } = this.state;\r\n    let options = profiles.map((data) => {\r\n      return { value: data.id, label: data.profile_name };\r\n    });\r\n    return (\r\n      <Select\r\n        placeholder=\"Select Profile\"\r\n        value={filter_profile}\r\n        isMulti\r\n        onChange={this.handleChangeFilterProfile}\r\n        options={options}\r\n      />\r\n    );\r\n  };\r\n  handleusername(e) {\r\n    this.setState({\r\n      username:\r\n        e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1),\r\n      error: \"\",\r\n    });\r\n  }\r\n  formDataSubmit(e) {\r\n    e.preventDefault();\r\n    let self = this;\r\n    let list = [];\r\n    this.state.filter_profile && this.state.filter_profile.forEach((data) => {\r\n      list.push(data.value);\r\n    });\r\n    let Data = {\r\n      username: this.state.username,\r\n      filter_profile: JSON.stringify(list),\r\n      id: this.state.id,\r\n    };\r\n\r\n    axios\r\n      .post(config.baseurl + `/users/update`, Data)\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          self.props.onHide();\r\n        }\r\n      })\r\n      .catch(function (error) {});\r\n  }\r\n  crossClick(e) {\r\n    e.preventDefault();\r\n    this.props.onHide();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <Grid fluid>\r\n          <div className=\"symbol-box\">\r\n            <div className=\"cross_div\">\r\n              <a onClick={(e) => this.crossClick(e)}>\r\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n              </a>\r\n            </div>\r\n            <div className=\"detail-text\">\r\n              <h3> Edit User Details</h3>\r\n            </div>\r\n            <form>\r\n              <div className=\"terminal-text\">\r\n                <p className=\"profilename pnameadjust\"> Username</p>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  value={this.state.username}\r\n                  className=\"Itext\"\r\n                  onChange={(e) => this.handleusername(e)}\r\n                />\r\n              </div>\r\n              <div className=\"terminal-text\">\r\n                <p className=\"profilename pnameadjust\"> Profile Id's</p>\r\n\r\n                {this.renderProfileSelect()}\r\n              </div>\r\n              <div className=\"terminal-text\">\r\n                <p className=\"profilename pnameadjust\"> Logged In</p>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"loggedIn\"\r\n                  value={this.state.loggged_in}\r\n                  className=\"Itext\"\r\n                  readOnly\r\n                />\r\n              </div>\r\n              <div className=\"save_button_filter\">\r\n                <Button\r\n                  className=\"btn-primary savebutton\"\r\n                  variant=\"primary\"\r\n                  size=\"lg\"\r\n                  block\r\n                  onClick={(e) => this.formDataSubmit(e)}\r\n                >\r\n                  <b>Update</b>\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserEdit;\r\n","import React, { Component } from \"react\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\r\nimport config from \"../../constant/config.js\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport Select from \"react-select\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nclass AddUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      filter_profile: [],\r\n      nameError: false,\r\n      profiles: [],\r\n      all: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.fetchusersdata();\r\n    this.allFilterprofiles();\r\n  }\r\n\r\n  fetchusersdata() {\r\n    let self = this;\r\n    axios\r\n      .get(config.baseurl + \"/users/allusers?page=1\")\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          self.setState({ userValues: response.data.rows });\r\n        }\r\n      });\r\n  }\r\n\r\n  allFilterprofiles() {\r\n    let self = this;\r\n    axios\r\n      .get(config.baseurl + \"/users/allFilterprofiles\")\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          let data = response.data.rows.map((item) => {\r\n            return {\r\n              ...item,\r\n              checked: false,\r\n            };\r\n          });\r\n          self.setState({ profiles: data });\r\n        }\r\n      });\r\n  }\r\n\r\n  handleChangeFilterProfile = (filter_profile) => {\r\n    this.setState({ filter_profile });\r\n  };\r\n  renderProfileSelect = () => {\r\n    const { filter_profile, profiles } = this.state;\r\n    let options = profiles.map((data) => {\r\n      return { value: data.id, label: data.profile_name };\r\n    });\r\n    return (\r\n      <Select\r\n        placeholder=\"Select Profile\"\r\n        value={filter_profile}\r\n        isMulti\r\n        onChange={this.handleChangeFilterProfile}\r\n        options={options}\r\n      />\r\n    );\r\n  };\r\n\r\n  handleusername(e) {\r\n    this.setState({ nameError: false });\r\n    if (this.state.userValues.length <= 0) {\r\n      this.setState({\r\n        username:\r\n          e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1),\r\n        error: \"\",\r\n      });\r\n    } else {\r\n      this.state.userValues.filter((data) => {\r\n        if (data.username.toUpperCase() !== e.target.value.toUpperCase()) {\r\n          this.setState({\r\n            username:\r\n              e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1),\r\n            error: \"\",\r\n          });\r\n        } else {\r\n          this.setState({ nameError: true }, () => {});\r\n          NotificationManager.listNotify = [];\r\n          NotificationManager.error(\"User already exits!\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n  handlepassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n  formDataSubmit(e) {\r\n    let self = this\r\n    let list = [];\r\n    (this.state.filter_profile) && (this.state.filter_profile).forEach(data => {\r\n        list.push(data.value);\r\n    });\r\n    e.preventDefault();\r\n    let Data = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      filter_profile: JSON.stringify(list),\r\n    };\r\n    axios\r\n      .post(config.baseurl + \"/users/create\", Data)\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n         self.props.onHide();\r\n        }\r\n      })\r\n      .catch(function (error) {});\r\n  }\r\n  crossClick(e) {\r\n    e.preventDefault();\r\n    this.props.onHide();\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <>\r\n        <NotificationContainer />\r\n        <div className=\"content\">\r\n          <Grid fluid>\r\n            <div className=\"symbol-box\">\r\n              <div className=\"cross_div\">\r\n                <a onClick={(e) => this.crossClick(e)}>\r\n                  <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n                </a>\r\n              </div>\r\n              <div className=\"detail-text\">\r\n                <h3> Add User </h3>\r\n              </div>\r\n              {/* <div className=\"terminal-text\">\r\n                <label className=\"pnameadjust\"> Profile Name </label>\r\n                <input type=\"text\" name=\"profilename\" className=\"Itext\" placeholder=\"Profile Name\" onChange={(e) => this.handleprofileName(e)} />\r\n              </div> */}\r\n\r\n              <form>\r\n                <div className=\"terminal-text\">\r\n                  <p className=\"profilename pnameadjust\"> Username</p>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    className=\"Itext\"\r\n                    onChange={(e) => this.handleusername(e)}\r\n                  />\r\n                </div>\r\n                <div className=\"terminal-text\">\r\n                  <p className=\"profilename pnameadjust\"> Password</p>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    className=\"Itext\"\r\n                    onChange={(e) => this.handlepassword(e)}\r\n                  />\r\n                </div>\r\n                <div className=\"terminal-text\">\r\n                  <p className=\"profilename pnameadjust\"> Profile</p>\r\n                 \r\n                  {this.renderProfileSelect()}\r\n                </div>\r\n                <div className=\"save_button_filter\">\r\n                  <div className=\"savebtn\">\r\n                    <Button\r\n                      className=\"btn-primary savebutton\"\r\n                      variant=\"primary\"\r\n                      size=\"lg\"\r\n                      block\r\n                      onClick={(e) => this.formDataSubmit(e)}\r\n                    >\r\n                      <b>Save</b>\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Grid>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddUser;\r\n","import React, { Component } from \"react\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport config from \"../../constant/config.js\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport { api } from \"api\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport UserDetail from \"./userdetail\";\r\nimport UserEdit from \"./useredit\";\r\nimport AddUser from \"./adduser\";\r\nimport myInitObject from \"../../api\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nclass Users extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      addUser: false,\r\n      filter: true,\r\n      usersData: [],\r\n      deleteData: [],\r\n      editData: [],\r\n      showDelete: false,\r\n      showEdit: false,\r\n      detailForm: false,\r\n      detailData: [],\r\n      count: \"\",\r\n      pages: \"\",\r\n      page: 1,\r\n      dateTime: \"\",\r\n    };\r\n  }\r\n  fetchusersdata() {\r\n    let self = this;\r\n    axios\r\n      .get(config.baseurl + `/users/allusers?page=${self.state.page}`)\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          // console.log(response.data, 'users')\r\n          self.setState({\r\n            usersData: response.data.rows,\r\n            count: response.data.count,\r\n            pages: response.data.pages,\r\n          });\r\n        }\r\n      });\r\n  }\r\n  handlePageClick = (data) => {\r\n    this.setState({ page: data.selected + 1 }, () => {\r\n      this.fectheAllAccount(this.state.page);\r\n    });\r\n  };\r\n  showaddUser = () => {\r\n    this.setState({ addUser: true, filter: false });\r\n  };\r\n  componentDidMount() {\r\n    this.fetchusersdata();\r\n    setInterval(() => {\r\n      if (myInitObject.responsLUT === undefined) {\r\n        console.log(\"no data\");\r\n      } else {\r\n        this.setState({\r\n          //last update time\r\n          dateTime: myInitObject.fetchLastUpdatedTime.filteredInfoTime,\r\n        });\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  editUser = (e, data) => {\r\n    e.preventDefault();\r\n    this.setState({ showEdit: true, editData: data });\r\n  };\r\n\r\n  deleteUser(e, data) {\r\n    e.preventDefault();\r\n    this.setState({ deleteData: data, showDelete: true });\r\n  }\r\n  deletepopupClick(e) {\r\n    e.preventDefault();\r\n    let Data = {\r\n      id: this.state.deleteData.id,\r\n    };\r\n    let self = this;\r\n    axios\r\n      .post(config.baseurl + \"/users/delete\", Data)\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          self.setState({ showDelete: false });\r\n          self.fetchusersdata();\r\n        }\r\n      });\r\n  }\r\n  deletepopupclose(e) {\r\n    e.preventDefault();\r\n    this.setState({ showDelete: false });\r\n  }\r\n  viewUser(e, data) {\r\n    e.preventDefault();\r\n\r\n    this.setState({ detailForm: true, detailData: data });\r\n  }\r\n\r\n  createTr = () => {\r\n    return (\r\n      this.state.usersData.length > 0 &&\r\n      this.state.usersData.map((item, index) => {\r\n        return (\r\n          <tr key={index}>\r\n            <th scope=\"row\">{index + 1}</th>\r\n            <td>{item.username}</td>\r\n            <td>{item.logged_in}</td>\r\n            <td>\r\n              <span onClick={(e) => this.viewUser(e, item)}>\r\n                <i className=\"pointer fa fa-eye facolor\" aria-hidden=\"true\"></i>\r\n              </span>\r\n              <span onClick={(e) => this.editUser(e, item)}>\r\n                <i\r\n                  className=\"pointer fa fa-pencil-square-o facolor\"\r\n                  aria-hidden=\"true\"\r\n                ></i>\r\n              </span>\r\n              <span onClick={(e) => this.deleteUser(e, item)}>\r\n                <i\r\n                  className=\"pointer fa fa-trash facolor\"\r\n                  aria-hidden=\"true\"\r\n                ></i>\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <NotificationContainer />\r\n        <Row>\r\n          <div className=\"lastUpdate\">\r\n            <span> Last Updated : </span>\r\n            {this.state.dateTime}(UTC){\" \"}\r\n          </div>\r\n        </Row>\r\n        <div className=\"content\">\r\n          {this.state.detailForm ? (\r\n            <UserDetail\r\n              data={this.state.detailData}\r\n              show={this.state.detailForm}\r\n              onHide={() => this.setState({ detailForm: false })}\r\n            />\r\n          ) : (\r\n            <>\r\n              {this.state.showEdit ? (\r\n                <UserEdit\r\n                  data={this.state.editData}\r\n                  show={this.state.showEdit}\r\n                  onHide={() =>\r\n                    this.setState({ showEdit: false }, () =>\r\n                      this.fetchusersdata()\r\n                    )\r\n                  }\r\n                />\r\n              ) : (\r\n                <>\r\n                  {!this.state.addUser && (\r\n                    <Grid fluid>\r\n                      <div className=\"selection-box\">\r\n                        <span className=\"terminal-text\"> Users </span>\r\n                      </div>\r\n                      <button\r\n                        className=\"pull-right filter-add-button\"\r\n                        onClick={this.showaddUser}\r\n                      >\r\n                        Add New\r\n                      </button>\r\n                    </Grid>\r\n                  )}\r\n                  {this.state.addUser ? (\r\n                    <AddUser\r\n                      show={this.state.addUser}\r\n                      onHide={() =>\r\n                        this.setState({ addUser: false }, () => {\r\n                          this.fetchusersdata();\r\n                        })\r\n                      }\r\n                    />\r\n                  ) : (\r\n                    <div style={{ background: \"#ffffff\" }}>\r\n                      <Row>\r\n                        <Col md={12}>\r\n                          <div style={{ padding: \"10px\" }}>\r\n                            <table className=\"table table-striped table-bordered\">\r\n                              <thead>\r\n                                <tr>\r\n                                  <th scope=\"col\">Sr.No.</th>\r\n                                  <th scope=\"col\">User Name</th>\r\n                                  <th scope=\"col\">Logged In</th>\r\n                                  <th scope=\"col\">Action</th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>{this.createTr()}</tbody>\r\n                            </table>\r\n                            <ReactPaginate\r\n                              previousLabel={\"prev\"}\r\n                              nextLabel={\"next\"}\r\n                              breakLabel={\"...\"}\r\n                              pageCount={this.state.pages}\r\n                              marginPagesDisplayed={9}\r\n                              pageRangeDisplayed={9}\r\n                              onPageChange={(e) => this.handlePageClick(e)}\r\n                              containerClassName={\"pagination\"}\r\n                              subContainerClassName={\"pages pagination\"}\r\n                              activeClassName={\"active\"}\r\n                            />\r\n                          </div>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                  )}\r\n\r\n                  {this.state.showDelete && (\r\n                    <div className=\"delete_popup\">\r\n                      <h3>Are you sure ?</h3>\r\n                      <span\r\n                        className=\"pointer dltbtn\"\r\n                        onClick={(e) => this.deletepopupClick(e)}\r\n                      >\r\n                        Delete\r\n                      </span>\r\n                      <span\r\n                        className=\"pointer closebtn\"\r\n                        onClick={(e) => this.deletepopupclose(e)}\r\n                      >\r\n                        Close\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Users;\r\n","import Dashboard from \"views/Dashboard.jsx\";\r\n// import UserProfile from \"views/UserProfile.jsx\";\r\n// import TableList from \"views/TableList.jsx\";\r\n// import Typography from \"views/Typography.jsx\";\r\n// import Icons from \"views/Icons.jsx\";\r\n// import Maps from \"views/Maps.jsx\";\r\n// import Notifications from \"views/Notifications.jsx\";\r\n// import Upgrade from \"views/Upgrade.jsx\";\r\n// import Filter from '../src/views/Filter';\r\nimport Innerlogin from 'views/Innerlogin';\r\nimport Filterprofile from './views/filter/Filterprofile';\r\nimport Swap from '../src/views/swap';\r\nimport calculating from '../src/views/calculating';\r\nimport Exploser from '../src/views/exploser';\r\nimport ContractSize from './views/ContractSize/ContractSize';\r\nimport Statistics from './views/Statistics/Statistics';\r\nimport myInitObject from './api'\r\nimport Users from \"../src/views/users/users\";\r\n\r\nconst dashboardRoutes = [\r\n  {\r\n    id: 1,\r\n    child: false,\r\n    menu: false,\r\n    path: \"/dashboard\",\r\n    name: \"Dashboard\",\r\n    icon: \"pe-7s-graph\",\r\n    component: Dashboard,\r\n    layout: \"/dashboard\",\r\n    data: myInitObject\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    child: false,\r\n    menu: false,\r\n    path: \"/Statistics\",\r\n    name: \" Statistics\",\r\n    icon: \"pe-7s-filter\",\r\n    component: Statistics,\r\n    layout: \"/dashboard\",\r\n  },\r\n\r\n\r\n  {\r\n    id: 3,\r\n    child: false,\r\n    menu: false,\r\n    path: \"/calculating\",\r\n    name: \"Positions\",\r\n    icon: \"pe-7s-calculator\",\r\n    component: calculating,\r\n    layout: \"/dashboard\",\r\n  },\r\n  {\r\n    id: 3,\r\n    child: false,\r\n    menu: false,\r\n    path: \"/contractSize\",\r\n    name: \" Contract Size Exposure\",\r\n    icon: \"pe-7s-search\",\r\n    component: ContractSize,\r\n    // component: calculating,\r\n    layout: \"/dashboard\",\r\n  },\r\n \r\n\r\n\r\n  // {\r\n  //   path: \"/exploser\",\r\n  //   name: \"Exploser\",\r\n  //   icon: \"pe-7s-search\",\r\n  //   component: Exploser,\r\n  //   layout: \"/admin\"\r\n  // },\r\n\r\n\r\n  {\r\n    id: 4,\r\n    child: true,\r\n    menu: false,\r\n    // path: \"/innerlogin\",\r\n    name: \"Settings\",\r\n    // component: Innerlogin,\r\n    icon: \"pe-7s-note2\",\r\n    // layout: \"/admin\",\r\n\r\n\r\n    resources: [\r\n      {\r\n\r\n        path: \"/settings/innerlogin\",\r\n        name: \"Login/Accounts\",\r\n        icon: \"pe-7s-note2\",\r\n        component: Innerlogin,\r\n        layout: \"/dashboard\"\r\n      },\r\n\r\n\r\n      {\r\n\r\n        path: \"/settings/filterpage\",\r\n        name: \"Filter\",\r\n        icon: \"pe-7s-filter\",\r\n        component: Filterprofile,\r\n        layout: \"/dashboard\"\r\n      },\r\n\r\n\r\n      {\r\n\r\n        path: \"/settings/swap\",\r\n        name: \"Swap\",\r\n        icon: \"pe-7s-graph\",\r\n        component: Swap,\r\n        layout: \"/dashboard\",\r\n      },\r\n      {\r\n\r\n        path: \"/settings/users\",\r\n        name: \"Users\",\r\n        icon: \"pe-7s-graph\",\r\n        component: Users,\r\n        layout: \"/dashboard\",\r\n      },\r\n    ]\r\n  },\r\n\r\n  // {\r\n  //   path: \"/typography\",\r\n  //   name: \"Typography\",\r\n  //   icon: \"pe-7s-news-paper\",\r\n  //   component: Typography,\r\n  //   layout: \"/dashboard\"\r\n  // },\r\n  // {\r\n  //   path: \"/icons\",\r\n  //   name: \"Icons\",\r\n  //   icon: \"pe-7s-science\",\r\n  //   component: Icons,\r\n  //   layout: \"/dashboard\"\r\n  // },\r\n  // {\r\n  //   path: \"/maps\",\r\n  //   name: \"Maps\",\r\n  //   icon: \"pe-7s-map-marker\",\r\n  //   component: Maps,\r\n  //   layout: \"/dashboard\"\r\n  // },\r\n  // {\r\n  //   path: \"/notifications\",\r\n  //   name: \"Notifications\",\r\n  //   icon: \"pe-7s-bell\",\r\n  //   component: Notifications,\r\n  //   layout: \"/dashboard\"\r\n  // },\r\n  // {\r\n  //   upgrade: true,\r\n  //   path: \"/upgrade\",\r\n  //   name: \"Upgrade to PRO\",\r\n  //   icon: \"pe-7s-rocket\",\r\n  //   component: Upgrade,\r\n  //   layout: \"/dashboard\"\r\n  // }\r\n];\r\n\r\nexport default dashboardRoutes;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport NotificationSystem from \"react-notification-system\";\r\nimport IdleTimer from 'react-idle-timer';\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\r\n// import Footer from \"components/Footer/Footer\";\r\nimport Sidebar from \"components/Sidebar/Sidebar\";\r\n// import FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\r\n\r\nimport { style } from \"variables/Variables.jsx\";\r\n\r\nimport routes from \"routes.js\";\r\n\r\nimport image from \"assets/img/sidebar-3.jpg\";\r\nimport { api } from '../api'\r\n\r\nclass Admin extends Component {\r\n  _isMounted = false;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      _notificationSystem: null,\r\n      image: image,\r\n      color: \"black\",\r\n      hasImage: true,\r\n      fixedClasses: \"dropdown show-dropdown open\",\r\n      timeout: 1000 * 900 * 1,\r\n      userLoggedIn: false,\r\n      isTimedOut: false\r\n    };\r\n    this.idleTimer = null\r\n    this.onAction = this._onAction.bind(this)\r\n    this.onActive = this._onActive.bind(this)\r\n    this.onIdle = this._onIdle.bind(this)\r\n    this.handleLogout = this.handleLogout.bind(this)\r\n  }\r\n\r\n\r\n  handleLogout() {\r\n    // console.log(new Date());\r\n    localStorage.clear()\r\n    this.props.history.push('/login')\r\n  }\r\n  _onAction(e) {\r\n    // console.log('user did something', e)\r\n    this.setState({ isTimedOut: false })\r\n    // console.log(new Date());\r\n  }\r\n\r\n  _onActive(e) {\r\n    // console.log('user is active', e)\r\n    this.setState({ isTimedOut: false })\r\n  }\r\n\r\n  _onIdle(e) {\r\n    // console.log('user is idle', e)\r\n\r\n    const isTimedOut = this.state.isTimedOut\r\n    if (isTimedOut) {\r\n      this.handleLogout()\r\n    } else {\r\n      this.idleTimer.reset();\r\n      this.setState({ isTimedOut: true })\r\n    }\r\n\r\n  }\r\n  // handleNotificationClick = position => {\r\n  //   var color = Math.floor(Math.random() * 4 + 1);\r\n  //   var level;\r\n  //   switch (color) {\r\n  //     case 1:\r\n  //       level = \"success\";\r\n  //       break;\r\n  //     case 2:\r\n  //       level = \"warning\";\r\n  //       break;\r\n  //     case 3:\r\n  //       level = \"error\";\r\n  //       break;\r\n  //     case 4:\r\n  //       level = \"info\";\r\n  //       break;\r\n  //     default:\r\n  //       break;\r\n  //   }\r\n  //   this.state._notificationSystem.addNotification({\r\n  //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\r\n  //     message: (\r\n  //       <div>\r\n  //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\r\n  //         every web developer.\r\n  //       </div>\r\n  //     ),\r\n  //     level: level,\r\n  //     position: position,\r\n  //     autoDismiss: 15\r\n  //   });\r\n  // };\r\n  getRoutes = routes => {\r\n    let routeArray = []\r\n    routes.map((data) => {\r\n      routeArray.push(data)\r\n      let role = JSON.parse(localStorage.getItem('currentUser'))[0].role;\r\n      if (role === \"user\" && data.child === true) {\r\n        data.resources.map((prop) => {\r\n          if (prop.name !== \"Users\") {\r\n            routeArray.push(prop)\r\n          }\r\n        })\r\n      } else if (data.child === true) {\r\n        data.resources.map((prop) => {\r\n          routeArray.push(prop)\r\n        })\r\n      }\r\n    })\r\n    return routeArray.map((prop, key) => {\r\n      if (prop.layout === \"/dashboard\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            render={props => (\r\n              <prop.component\r\n                {...props}\r\n                handleClick={this.handleNotificationClick}\r\n              />\r\n            )}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  getBrandText = path => {\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (\r\n        this.props.location.pathname.indexOf(\r\n          routes[i].layout + routes[i].path\r\n        ) !== -1\r\n      ) {\r\n        return routes[i].name;\r\n      }\r\n    }\r\n    // return \"Brand\";\r\n  };\r\n  handleImageClick = image => {\r\n    this.setState({ image: image });\r\n  };\r\n  handleColorClick = color => {\r\n    this.setState({ color: color });\r\n  };\r\n  handleHasImage = hasImage => {\r\n    this.setState({ hasImage: hasImage });\r\n  };\r\n  handleFixedClick = () => {\r\n    if (this.state.fixedClasses === \"dropdown\") {\r\n      this.setState({ fixedClasses: \"dropdown show-dropdown open\" });\r\n    } else {\r\n      this.setState({ fixedClasses: \"dropdown\" });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    if (this._isMounted) {\r\n      let currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n      if (currentUser === null) {\r\n        this.props.history.push('/login')\r\n        return;\r\n      } else {\r\n        api()\r\n        setInterval(() => {\r\n          api()\r\n        }, 300000);\r\n\r\n      }\r\n    }\r\n\r\n    //   this.setState({ _notificationSystem: this.refs.notificationSystem });\r\n    //   var _notificationSystem = this.refs.notificationSystem;\r\n    //   var color = Math.floor(Math.random() * 4 + 1);\r\n    //   var level;\r\n    //   switch (color) {\r\n    //     case 1:\r\n    //       level = \"success\";\r\n    //       break;\r\n    //     case 2:\r\n    //       level = \"warning\";\r\n    //       break;\r\n    //     case 3:\r\n    //       level = \"error\";\r\n    //       break;\r\n    //     case 4:\r\n    //       level = \"info\";\r\n    //       break;\r\n    //     default:\r\n    //       break;\r\n    //   }\r\n    //   _notificationSystem.addNotification({\r\n    //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\r\n    //     message: (\r\n    //       <div>\r\n    //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\r\n    //         every web developer.\r\n    //       </div>Modal\r\n    //     ),\r\n    //     level: level,\r\n    //     position: \"tr\",\r\n    //     autoDismiss: 15\r\n    //   });\r\n  }\r\n  componentDidUpdate(e) {\r\n    if (\r\n      window.innerWidth < 993 &&\r\n      e.history.location.pathname !== e.location.pathname &&\r\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n    ) {\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n    }\r\n    if (e.history.action === \"PUSH\") {\r\n      // document.documentElement.scrollTop = 0;\r\n      // document.scrollingElement.scrollTop = 0;\r\n      // this.refs.mainPanel.scrollTop = 0;\r\n\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <IdleTimer\r\n          ref={ref => { this.idleTimer = ref }}\r\n          element={document}\r\n          onActive={this.onActive}\r\n          onIdle={this.onIdle}\r\n          onAction={this.onAction}\r\n          debounce={250}\r\n          timeout={this.state.timeout} />\r\n        <div className=\"wrapper\">\r\n          <NotificationSystem ref=\"notificationSystem\" style={style} />\r\n          <Sidebar {...this.props} routes={routes} image={this.state.image}\r\n            color={this.state.color}\r\n            hasImage={this.state.hasImage} />\r\n          <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\r\n            <AdminNavbar\r\n              {...this.props}\r\n              brandText={this.getBrandText(this.props.location.pathname)}\r\n            />\r\n            <Switch>{this.getRoutes(routes)}</Switch>\r\n            {/* <Footer /> */}\r\n            {/* <FixedPlugin\r\n            handleImageClick={this.handleImageClick}\r\n            handleColorClick={this.handleColorClick}\r\n            handleHasImage={this.handleHasImage}\r\n            bgColor={this.state[\"color\"]}\r\n            bgImage={this.state[\"image\"]}\r\n            mini={this.state[\"mini\"]}\r\n            handleFixedClick={this.handleFixedClick}\r\n            fixedClasses={this.state.fixedClasses}\r\n          /> */}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin;\r\n","\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./assets/css/animate.min.css\";\r\nimport \"./assets/sass/light-bootstrap-dashboard-react.scss?v=1.3.0\";\r\nimport \"./assets/css/demo.css\";\r\nimport \"./assets/css/pe-icon-7-stroke.css\";\r\nimport \"./assets/css/dashboard.css\";\r\nimport innerfilter from \"./views/filter/innerfilter\";\r\nimport Login from \"./views/login\";\r\n\r\n\r\nimport AdminLayout from \"./layouts/Admin.jsx\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route path=\"/dashboard\" render={props => <AdminLayout {...props} />} />\r\n\r\n      <Route exact path=\"/dashboard/innerfilter\" component={innerfilter} />\r\n      <Route exact from=\"/login\" component={Login} />\r\n      {/* <Redirect from=\"/\" to=\"/admin/dashboard\" /> */}\r\n      {/* <Redirect from=\"/\" component={Login} /> */}\r\n      <Redirect from=\"/\" to=\"/login\"/>\r\n      {/* <Route exact path=\"/innerfilter\" component={innerfilter} /> */}\r\n\r\n    </Switch>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}