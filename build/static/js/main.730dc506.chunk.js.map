{"version":3,"sources":["variables/Variables.jsx","assets/img/sidebar-3.jpg","../node_modules/typescript/lib sync","constant/config.js","views/filter/innerfilter.js","views/login/index.js","components/Navbars/AdminNavbarLinks.jsx","components/Navbars/AdminNavbar.jsx","components/Sidebar/Sidebar.jsx","views/Closeposition.js","views/Data.js","views/Openposition.js","views/TableList.jsx","views/Innerlogin.js","views/Dashboard.jsx","views/filter/filteredit.js","views/filter/filterdetail.js","views/filter/Filterprofile.js","routes.js","views/swap/index.js","layouts/Admin.jsx","index.js"],"names":["defaultWidth","window","screen","width","style","Wrapper","Containers","DefaultStyle","position","padding","zIndex","WebkitBoxSizing","MozBoxSizing","boxSizing","height","display","border","fontSize","WebkitFontSmoothing","fontFamily","fontWeight","color","tl","top","bottom","left","right","tr","tc","margin","marginLeft","bl","br","bc","NotificationItem","cursor","borderRadius","opacity","transition","WebkitTransform","transform","willChange","isHidden","isVisible","success","borderTop","backgroundColor","WebkitBoxShadow","MozBoxShadow","boxShadow","error","warning","info","Title","marginTop","MessageWrapper","marginRight","maxWidthwidth","Dismiss","float","lineHeight","outline","textAlign","Action","background","ActionWrapper","module","exports","thArray","tdArray","iconsArray","dataPie","labels","series","legendPie","names","types","dataSales","optionsSales","low","high","showArea","axisX","showGrid","lineSmooth","showLine","showPoint","fullWidth","chartPadding","responsiveSales","labelInterpolationFnc","value","legendSales","dataBar","optionsBar","seriesBarDistance","responsiveBar","legendBar","__webpack_require__","p","webpackEmptyContext","req","e","Error","code","keys","resolve","id","config","baseurl","axios","require","Innerfilter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDropdownChange","setState","selectValue","target","handleChangeDate","date","startDate","handleEndDate","endDate","handleChangeDateTo","startDateTo","handleEndDateTo","endDateTo","handleChange","event","Array","from","selectedOptions","item","renderAccountSelect","_this$state","state","selectedAccountOption","options","allAccounts","map","data","label","login","react_default","a","createElement","react_select_browser_esm","placeholder","onChange","handleChangeAccount","handleChangeAccountTo","selectedAccountOptionTo","renderAccountSelectTo","_this$state2","handleChangeSymbol","selectedSymbolOption","renderSymbolSelect","_this$state3","allSymbols","name","isMulti","handleChangeSymbolTo","selectedSymbolOptionTo","renderSymbolSelectTo","_this$state4","profileName","self","get","then","response","status","rows","charAt","toUpperCase","slice","preventDefault","symbolFrom","symbolto","Data","profile_name","from_account_id","to_account_id","startdateFrom","enddateFrom","startdateTo","enddateTo","from_symbols","JSON","stringify","to_symbols","createdAt","Date","updatedAt","post","onHide","catch","console","log","_this2","className","Grid","fluid","onClick","crossClick","aria-hidden","type","handleprofileName","Row","Col","md","react_datepicker_min_default","selected","isClearable","placeholderText","dateFormat","strictParsing","Button","variant","size","block","formDataSubmit","Component","Login","toogle","loginForm","handleClose","handleShow","setShow","show","username","password","alert","persons","shwPwd","shwMsg","invalidUsername","invalidPassword","accountlist","bind","assertThisInitialized","onSubmit","defineProperty","trim","userdetail","length","localStorage","setItem","history","push","message","err","parse","getItem","sm","Modal","Alert","AdminNavbarLinks","logout","clear","notification","Nav","NavItem","eventKey","href","NavDropdown","title","noCaret","MenuItem","pullRight","Header","mobileSidebarToggle","sidebarExists","document","documentElement","classList","toggle","node","onclick","parentElement","removeChild","body","appendChild","Navbar","Brand","brandText","Toggle","Collapse","Navbars_AdminNavbarLinks","Sidebar","menu","innerWidth","routeName","location","pathname","indexOf","updateDimensions","addEventListener","image","data-color","data-image","hasImage","routes","prop","key","redirect","upgrade","activeRoute","layout","path","react_router_dom","to","activeClassName","icon","undefined","resources","sub","index","Closeposition","allHistoryRecord","fromHistoryOrderInfo","toHistoryOrderInfo","_useState","useState","_useState2","slicedToArray","isOpen2","setIsOpen2","fromSymbols","toSymbols","entries","join","fromsum","tosum","commission","swap","profit","sumOfTotal","noRecord","total","isOpen","react","accountFromInfo","alias","react_number_format_es","displayType","thousandSeparator","decimalScale","accountToInfo","marginBottom","tablePage","items","lot","closed","price","textA","dashBoardPage","textB","Openposition","setIsOpen","allOpenRecord","fromOpenOrderInfo","toOpenOrderInfo","swapFrominfo","open_value","swapToinfo","order_type","lots","intervalSet","timerWaitInterval","TableList","fetchDataAccordingSymbols","symbol","_this$state$filterlis","filterlist","selectedOption","renderSymbols","uniqueSymbols","concat","filter","i","ar","sumOfHistoryTotal","openfromsum","opentosum","sumOfOpenTotal","views_Closeposition","Dashboard","getAllAccounts","fetchActivefilterData","errorMassege","showData","accountDetailValue","Fragment","accounts_details","currency","tableHeader","details","formData","json","legend","class","views_TableList","timerWait","Innerlogin","checkUserConnected","broker","connected","currentAddLogin","currentAddBroker","clearInterval","timerShow","tryAgainConnection","fectheAllAccount","setIntervalCustom","setInterval","tryAgainConnectionFun","handleCloseEdit","editForm","handleCloseDetail","detailForm","createTr","scope","launched","viewFilter","editFilter","editData","edituser","editserver","editalias","editstatus","onUpdate","swal","text","timer","button","user","Body","closeButton","disabled","editAlias","FilterEdite","rules","required","abc","from_symbol","to_symbol","all_from_symbols","all_to_symbols","fromSymbol","toSymbol","moment","FilterDetail","format","dashboardRoutes","component","Filterprofile","showInnerfilter","createNotification","NotificationManager","createWariningNotification","filterData","activateClick","deactivateClick","deleteFilter","deleteData","editeData","showDelete","showEdit","detailData","fetchfilterdata","filterdetail","filteredit","innerfilter","deletepopupClick","deletepopupclose","lib","Admin","getRoutes","react_router","render","assign","handleClick","handleNotificationClick","getBrandText","handleImageClick","handleColorClick","handleHasImage","handleFixedClick","fixedClasses","_notificationSystem","action","scrollTop","scrollingElement","refs","mainPanel","NotificationSystem_default","ref","components_Sidebar_Sidebar","AdminNavbar","ReactDOM","layouts_Admin","exact","getElementById"],"mappings":"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kBACA,aACA,mBACA,aACA,cACA,eACA,qBACA,iBACA,cACA,cACA,eACA,kBACA,eACA,iBACA,eACA,cACA,YACA,eACA,aACA,qBACA,aACA,cACA,kBACA,uBACA,YACA,qBACA,WACA,iBACA,mBACA,wBACA,cACA,oBACA,eACA,2BACA,cACA,mBACA,oBACA,0BACA,iBACA,mBACA,eACA,0BACA,iBACA,eACA,aACA,gBACA,gBACA,kBACA,cACA,aACA,eACA,eACA,iBACA,cACA,cACA,cACA,eACA,eACA,YACA,cACA,kBACA,aACA,gBACA,eACA,gBACA,gBACA,cACA,eACA,eACA,aACA,gBACA,aACA,eACA,eACA,gBACA,iBACA,sBACA,kBACA,cACA,cACA,cACA,gBACA,aACA,aACA,cACA,cACA,kBACA,cACA,aACA,mBACA,aACA,YACA,cACA,YACA,sBACA,YACA,cACA,aACA,YACA,oBACA,oBACA,oBACA,cACA,qBACA,iBACA,aACA,aACA,mBACA,kBACA,cACA,cACA,aACA,aACA,gBACA,cACA,aACA,YACA,mBACA,aACA,kBACA,uBACA,eACA,aACA,aACA,aACA,gBACA,aACA,aACA,cACA,aACA,eACA,aACA,aACA,aACA,cACA,cACA,eACA,eACA,eACA,cACA,eACA,cACA,gBACA,aACA,eACA,aACA,eACA,aACA,gBACA,gBACA,aACA,aACA,eACA,iBACA,iBACA,iBACA,iBACA,aACA,YACA,gBACA,aACA,eACA,kBACA,eACA,gBACA,gBACA,eACA,cACA,cACA,cACA,aACA,aACA,eACA,aACA,mBACA,gBACA,aACA,aACA,kBACA,gBACA,aACA,gBACA,aACA,aACA,kBACA,eACA,eACA,cACA,iBAwHAC,QA/GY,CACZC,OAAQ,CAAC,MAAO,MAAO,OACvBC,OAAQ,CAAC,GAAI,GAAI,KA8GjBC,UA5Gc,CACdC,MAAO,CAAC,OAAQ,SAAU,eAC1BC,MAAO,CAAC,OAAQ,SAAU,YA2G1BC,UAvGc,CACdL,OAAQ,CACN,SACA,UACA,SACA,SACA,SACA,UAC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","file":"static/js/main.730dc506.chunk.js","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n//\n// //\n// // // For notifications\n// //\n//\nvar defaultWidth =\n  window.screen.width > 768\n    ? (window.screen.width * 1) / 3\n    : window.screen.width;\n\nvar style = {\n  Wrapper: {},\n  Containers: {\n    DefaultStyle: {\n      position: \"fixed\",\n      width: defaultWidth,\n      padding: \"10px 10px 10px 20px\",\n      zIndex: 9998,\n      WebkitBoxSizing: \"\",\n      MozBoxSizing: \"\",\n      boxSizing: \"\",\n      height: \"auto\",\n      display: \"inline-block\",\n      border: \"0\",\n      fontSize: \"14px\",\n      WebkitFontSmoothing: \"antialiased\",\n      fontFamily: '\"Roboto\",\"Helvetica Neue\",Arial,sans-serif',\n      fontWeight: \"400\",\n      color: \"#FFFFFF\"\n    },\n\n    tl: {\n      top: \"0px\",\n      bottom: \"auto\",\n      left: \"0px\",\n      right: \"auto\"\n    },\n\n    tr: {\n      top: \"0px\",\n      bottom: \"auto\",\n      left: \"auto\",\n      right: \"0px\"\n    },\n\n    tc: {\n      top: \"0px\",\n      bottom: \"auto\",\n      margin: \"0 auto\",\n      left: \"50%\",\n      marginLeft: -(defaultWidth / 2)\n    },\n\n    bl: {\n      top: \"auto\",\n      bottom: \"0px\",\n      left: \"0px\",\n      right: \"auto\"\n    },\n\n    br: {\n      top: \"auto\",\n      bottom: \"0px\",\n      left: \"auto\",\n      right: \"0px\"\n    },\n\n    bc: {\n      top: \"auto\",\n      bottom: \"0px\",\n      margin: \"0 auto\",\n      left: \"50%\",\n      marginLeft: -(defaultWidth / 2)\n    }\n  },\n\n  NotificationItem: {\n    DefaultStyle: {\n      position: \"relative\",\n      width: \"100%\",\n      cursor: \"pointer\",\n      borderRadius: \"4px\",\n      fontSize: \"14px\",\n      margin: \"10px 0 0\",\n      padding: \"10px\",\n      display: \"block\",\n      WebkitBoxSizing: \"border-box\",\n      MozBoxSizing: \"border-box\",\n      boxSizing: \"border-box\",\n      opacity: 0,\n      transition: \"all 0.5s ease-in-out\",\n      WebkitTransform: \"translate3d(0, 0, 0)\",\n      transform: \"translate3d(0, 0, 0)\",\n      willChange: \"transform, opacity\",\n\n      isHidden: {\n        opacity: 0\n      },\n\n      isVisible: {\n        opacity: 1\n      }\n    },\n\n    success: {\n      borderTop: 0,\n      backgroundColor: \"#a1e82c\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    error: {\n      borderTop: 0,\n      backgroundColor: \"#fc727a\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    warning: {\n      borderTop: 0,\n      backgroundColor: \"#ffbc67\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    info: {\n      borderTop: 0,\n      backgroundColor: \"#63d8f1\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    }\n  },\n\n  Title: {\n    DefaultStyle: {\n      fontSize: \"30px\",\n      margin: \"0\",\n      padding: 0,\n      fontWeight: \"bold\",\n      color: \"#FFFFFF\",\n      display: \"block\",\n      left: \"15px\",\n      position: \"absolute\",\n      top: \"50%\",\n      marginTop: \"-15px\"\n    }\n  },\n\n  MessageWrapper: {\n    DefaultStyle: {\n      marginLeft: \"55px\",\n      marginRight: \"30px\",\n      padding: \"0 12px 0 0\",\n      color: \"#FFFFFF\",\n      maxWidthwidth: \"89%\"\n    }\n  },\n\n  Dismiss: {\n    DefaultStyle: {\n      fontFamily: \"inherit\",\n      fontSize: \"21px\",\n      color: \"#000\",\n      float: \"right\",\n      position: \"absolute\",\n      right: \"10px\",\n      top: \"50%\",\n      marginTop: \"-13px\",\n      backgroundColor: \"#FFFFFF\",\n      display: \"block\",\n      borderRadius: \"50%\",\n      opacity: \".4\",\n      lineHeight: \"11px\",\n      width: \"25px\",\n      height: \"25px\",\n      outline: \"0 !important\",\n      textAlign: \"center\",\n      padding: \"6px 3px 3px 3px\",\n      fontWeight: \"300\",\n      marginLeft: \"65px\"\n    },\n\n    success: {\n      // color: '#f0f5ea',\n      // backgroundColor: '#a1e82c'\n    },\n\n    error: {\n      // color: '#f4e9e9',\n      // backgroundColor: '#fc727a'\n    },\n\n    warning: {\n      // color: '#f9f6f0',\n      // backgroundColor: '#ffbc67'\n    },\n\n    info: {\n      // color: '#e8f0f4',\n      // backgroundColor: '#63d8f1'\n    }\n  },\n\n  Action: {\n    DefaultStyle: {\n      background: \"#ffffff\",\n      borderRadius: \"2px\",\n      padding: \"6px 20px\",\n      fontWeight: \"bold\",\n      margin: \"10px 0 0 0\",\n      border: 0\n    },\n\n    success: {\n      backgroundColor: \"#a1e82c\",\n      color: \"#ffffff\"\n    },\n\n    error: {\n      backgroundColor: \"#fc727a\",\n      color: \"#ffffff\"\n    },\n\n    warning: {\n      backgroundColor: \"#ffbc67\",\n      color: \"#ffffff\"\n    },\n\n    info: {\n      backgroundColor: \"#63d8f1\",\n      color: \"#ffffff\"\n    }\n  },\n\n  ActionWrapper: {\n    DefaultStyle: {\n      margin: 0,\n      padding: 0\n    }\n  }\n};\n\n//\n// //\n// // // For tables\n// //\n//\nconst thArray = [\"ID\", \"Name\", \"Salary\", \"Country\", \"City\"];\nconst tdArray = [\n  [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\", \"Oud-Turnhout\"],\n  [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\", \"Sinaai-Waas\"],\n  [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\", \"Baileux\"],\n  [\"4\", \"Philip Chaney\", \"$38,735\", \"Korea, South\", \"Overland Park\"],\n  [\"5\", \"Doris Greene\", \"$63,542\", \"Malawi\", \"Feldkirchen in Kärnten\"],\n  [\"6\", \"Mason Porter\", \"$78,615\", \"Chile\", \"Gloucester\"]\n];\n\n//\n// //\n// // // For icons\n// //\n//\nconst iconsArray = [\n  \"pe-7s-album\",\n  \"pe-7s-arc\",\n  \"pe-7s-back-2\",\n  \"pe-7s-bandaid\",\n  \"pe-7s-car\",\n  \"pe-7s-diamond\",\n  \"pe-7s-door-lock\",\n  \"pe-7s-eyedropper\",\n  \"pe-7s-female\",\n  \"pe-7s-gym\",\n  \"pe-7s-hammer\",\n  \"pe-7s-headphones\",\n  \"pe-7s-helm\",\n  \"pe-7s-hourglass\",\n  \"pe-7s-leaf\",\n  \"pe-7s-magic-wand\",\n  \"pe-7s-male\",\n  \"pe-7s-map-2\",\n  \"pe-7s-next-2\",\n  \"pe-7s-paint-bucket\",\n  \"pe-7s-pendrive\",\n  \"pe-7s-photo\",\n  \"pe-7s-piggy\",\n  \"pe-7s-plugin\",\n  \"pe-7s-refresh-2\",\n  \"pe-7s-rocket\",\n  \"pe-7s-settings\",\n  \"pe-7s-shield\",\n  \"pe-7s-smile\",\n  \"pe-7s-usb\",\n  \"pe-7s-vector\",\n  \"pe-7s-wine\",\n  \"pe-7s-cloud-upload\",\n  \"pe-7s-cash\",\n  \"pe-7s-close\",\n  \"pe-7s-bluetooth\",\n  \"pe-7s-cloud-download\",\n  \"pe-7s-way\",\n  \"pe-7s-close-circle\",\n  \"pe-7s-id\",\n  \"pe-7s-angle-up\",\n  \"pe-7s-wristwatch\",\n  \"pe-7s-angle-up-circle\",\n  \"pe-7s-world\",\n  \"pe-7s-angle-right\",\n  \"pe-7s-volume\",\n  \"pe-7s-angle-right-circle\",\n  \"pe-7s-users\",\n  \"pe-7s-angle-left\",\n  \"pe-7s-user-female\",\n  \"pe-7s-angle-left-circle\",\n  \"pe-7s-up-arrow\",\n  \"pe-7s-angle-down\",\n  \"pe-7s-switch\",\n  \"pe-7s-angle-down-circle\",\n  \"pe-7s-scissors\",\n  \"pe-7s-wallet\",\n  \"pe-7s-safe\",\n  \"pe-7s-volume2\",\n  \"pe-7s-volume1\",\n  \"pe-7s-voicemail\",\n  \"pe-7s-video\",\n  \"pe-7s-user\",\n  \"pe-7s-upload\",\n  \"pe-7s-unlock\",\n  \"pe-7s-umbrella\",\n  \"pe-7s-trash\",\n  \"pe-7s-tools\",\n  \"pe-7s-timer\",\n  \"pe-7s-ticket\",\n  \"pe-7s-target\",\n  \"pe-7s-sun\",\n  \"pe-7s-study\",\n  \"pe-7s-stopwatch\",\n  \"pe-7s-star\",\n  \"pe-7s-speaker\",\n  \"pe-7s-signal\",\n  \"pe-7s-shuffle\",\n  \"pe-7s-shopbag\",\n  \"pe-7s-share\",\n  \"pe-7s-server\",\n  \"pe-7s-search\",\n  \"pe-7s-film\",\n  \"pe-7s-science\",\n  \"pe-7s-disk\",\n  \"pe-7s-ribbon\",\n  \"pe-7s-repeat\",\n  \"pe-7s-refresh\",\n  \"pe-7s-add-user\",\n  \"pe-7s-refresh-cloud\",\n  \"pe-7s-paperclip\",\n  \"pe-7s-radio\",\n  \"pe-7s-note2\",\n  \"pe-7s-print\",\n  \"pe-7s-network\",\n  \"pe-7s-prev\",\n  \"pe-7s-mute\",\n  \"pe-7s-power\",\n  \"pe-7s-medal\",\n  \"pe-7s-portfolio\",\n  \"pe-7s-like2\",\n  \"pe-7s-plus\",\n  \"pe-7s-left-arrow\",\n  \"pe-7s-play\",\n  \"pe-7s-key\",\n  \"pe-7s-plane\",\n  \"pe-7s-joy\",\n  \"pe-7s-photo-gallery\",\n  \"pe-7s-pin\",\n  \"pe-7s-phone\",\n  \"pe-7s-plug\",\n  \"pe-7s-pen\",\n  \"pe-7s-right-arrow\",\n  \"pe-7s-paper-plane\",\n  \"pe-7s-delete-user\",\n  \"pe-7s-paint\",\n  \"pe-7s-bottom-arrow\",\n  \"pe-7s-notebook\",\n  \"pe-7s-note\",\n  \"pe-7s-next\",\n  \"pe-7s-news-paper\",\n  \"pe-7s-musiclist\",\n  \"pe-7s-music\",\n  \"pe-7s-mouse\",\n  \"pe-7s-more\",\n  \"pe-7s-moon\",\n  \"pe-7s-monitor\",\n  \"pe-7s-micro\",\n  \"pe-7s-menu\",\n  \"pe-7s-map\",\n  \"pe-7s-map-marker\",\n  \"pe-7s-mail\",\n  \"pe-7s-mail-open\",\n  \"pe-7s-mail-open-file\",\n  \"pe-7s-magnet\",\n  \"pe-7s-loop\",\n  \"pe-7s-look\",\n  \"pe-7s-lock\",\n  \"pe-7s-lintern\",\n  \"pe-7s-link\",\n  \"pe-7s-like\",\n  \"pe-7s-light\",\n  \"pe-7s-less\",\n  \"pe-7s-keypad\",\n  \"pe-7s-junk\",\n  \"pe-7s-info\",\n  \"pe-7s-home\",\n  \"pe-7s-help2\",\n  \"pe-7s-help1\",\n  \"pe-7s-graph3\",\n  \"pe-7s-graph2\",\n  \"pe-7s-graph1\",\n  \"pe-7s-graph\",\n  \"pe-7s-global\",\n  \"pe-7s-gleam\",\n  \"pe-7s-glasses\",\n  \"pe-7s-gift\",\n  \"pe-7s-folder\",\n  \"pe-7s-flag\",\n  \"pe-7s-filter\",\n  \"pe-7s-file\",\n  \"pe-7s-expand1\",\n  \"pe-7s-exapnd2\",\n  \"pe-7s-edit\",\n  \"pe-7s-drop\",\n  \"pe-7s-drawer\",\n  \"pe-7s-download\",\n  \"pe-7s-display2\",\n  \"pe-7s-display1\",\n  \"pe-7s-diskette\",\n  \"pe-7s-date\",\n  \"pe-7s-cup\",\n  \"pe-7s-culture\",\n  \"pe-7s-crop\",\n  \"pe-7s-credit\",\n  \"pe-7s-copy-file\",\n  \"pe-7s-config\",\n  \"pe-7s-compass\",\n  \"pe-7s-comment\",\n  \"pe-7s-coffee\",\n  \"pe-7s-cloud\",\n  \"pe-7s-clock\",\n  \"pe-7s-check\",\n  \"pe-7s-chat\",\n  \"pe-7s-cart\",\n  \"pe-7s-camera\",\n  \"pe-7s-call\",\n  \"pe-7s-calculator\",\n  \"pe-7s-browser\",\n  \"pe-7s-box2\",\n  \"pe-7s-box1\",\n  \"pe-7s-bookmarks\",\n  \"pe-7s-bicycle\",\n  \"pe-7s-bell\",\n  \"pe-7s-battery\",\n  \"pe-7s-ball\",\n  \"pe-7s-back\",\n  \"pe-7s-attention\",\n  \"pe-7s-anchor\",\n  \"pe-7s-albums\",\n  \"pe-7s-alarm\",\n  \"pe-7s-airplay\"\n];\n\n//\n// //\n// // // // For dashboard's charts\n// //\n//\n// Data for Pie Chart\nvar dataPie = {\n  labels: [\"40%\", \"20%\", \"40%\"],\n  series: [40, 20, 40]\n};\nvar legendPie = {\n  names: [\"Open\", \"Bounce\", \"Unsubscribe\"],\n  types: [\"info\", \"danger\", \"warning\"]\n};\n\n// Data for Line Chart\nvar dataSales = {\n  labels: [\n    \"9:00AM\",\n    \"12:00AM\",\n    \"3:00PM\",\n    \"6:00PM\",\n    \"9:00PM\",\n    \"12:00PM\",\n    \"3:00AM\",\n    \"6:00AM\"\n  ],\n  series: [\n    [287, 385, 490, 492, 554, 586, 698, 695],\n    [67, 152, 143, 240, 287, 335, 435, 437],\n    [23, 113, 67, 108, 190, 239, 307, 308]\n  ]\n};\nvar optionsSales = {\n  low: 0,\n  high: 800,\n  showArea: false,\n  height: \"245px\",\n  axisX: {\n    showGrid: false\n  },\n  lineSmooth: true,\n  showLine: true,\n  showPoint: true,\n  fullWidth: true,\n  chartPadding: {\n    right: 50\n  }\n};\nvar responsiveSales = [\n  [\n    \"screen and (max-width: 640px)\",\n    {\n      axisX: {\n        labelInterpolationFnc: function(value) {\n          return value[0];\n        }\n      }\n    }\n  ]\n];\nvar legendSales = {\n  names: [\"Open\", \"Click\", \"Click Second Time\"],\n  types: [\"info\", \"danger\", \"warning\"]\n};\n\n// Data for Bar Chart\nvar dataBar = {\n  labels: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"Mai\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n  ],\n  series: [\n    [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895],\n    [412, 243, 280, 580, 453, 353, 300, 364, 368, 410, 636, 695]\n  ]\n};\nvar optionsBar = {\n  seriesBarDistance: 10,\n  axisX: {\n    showGrid: false\n  },\n  height: \"245px\"\n};\nvar responsiveBar = [\n  [\n    \"screen and (max-width: 640px)\",\n    {\n      seriesBarDistance: 5,\n      axisX: {\n        labelInterpolationFnc: function(value) {\n          return value[0];\n        }\n      }\n    }\n  ]\n];\nvar legendBar = {\n  names: [\"Tesla Model S\", \"BMW 5 Series\"],\n  types: [\"info\", \"danger\"]\n};\n\nmodule.exports = {\n  style, // For notifications (App container and Notifications view)\n  thArray,\n  tdArray, // For tables (TableList view)\n  iconsArray, // For icons (Icons view)\n  dataPie,\n  legendPie,\n  dataSales,\n  optionsSales,\n  responsiveSales,\n  legendSales,\n  dataBar,\n  optionsBar,\n  responsiveBar,\n  legendBar // For charts (Dashboard view)\n};\n","module.exports = __webpack_public_path__ + \"static/media/sidebar-3.34535b95.jpg\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 575;","const config= {\n    baseurl:\"https://top4.trade/api\"\n    // baseurl:\"http://localhost:4000/api\"\n}\n\nexport default config;","import React, { Component } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport config from '../../constant/config.js';\nimport Select from 'react-select'\nconst axios = require('axios');\n\n// import { Multiselect } from \"multiselect-react-dropdown\";\n\n// const options = [\n//     { value: 'chocolate', label: 'Chocolate' },\n//     { value: 'strawberry', label: 'Strawberry' },\n//     { value: 'vanilla', label: 'Vanilla' }\n// ]\n\nclass Innerfilter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // startDate: new Date(),\n            // endDate: new Date(),\n\n            selectedAccountOption: null,\n            selectedSymbolOption: null,\n            selectedSymbolOptionTo: null,\n            selectedAccountOptionTo: null,\n            startDate: null,\n            endDate: null,\n            startDateTo: null,\n            endDateTo: null,\n            allAccounts: [],\n            allSymbols: [],\n            profileName: '',\n            error: ''\n            // options: [{ name: 'Srigar', id: 1 }, { name: 'Sam', id: 2 }],\n\n            // plainArray: [\"Option 1\", \"Option 2\", \"Option 3\", \"Option 4\", \"Option 5\"],\n            // objectArray: [\n            //     { key: \"Option 1\", cat: \"Group 1\" },\n            //     { key: \"Option 2\", cat: \"Group 1\" },\n            //     { key: \"Option 3\", cat: \"Group 1\" },\n            //     { key: \"Option 4\", cat: \"Group 2\" },\n            //     { key: \"Option 5\", cat: \"Group 2\" },\n            //     { key: \"Option 6\", cat: \"Group 2\" },\n            //     { key: \"Option 7\", cat: \"Group 2\" }\n            // ],\n            // selectedValues: [\n            //     { key: \"Option 1\", cat: \"Group 1\" },\n            //     { key: \"Option 2\", cat: \"Group 1\" }\n            // ]\n        };\n\n\n    }\n    componentDidMount() {\n        let self = this;\n        axios.get(config.baseurl + '/accounts/fetchAllAccounts')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ allAccounts: response.data.rows })\n                }\n            })\n        axios.get(config.baseurl + '/accounts/fetchAllSymbol')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ allSymbols: response.data.rows })\n                }\n            })\n    }\n    // addItem = () => {\n    //     this.selectedValues.push({ key: \"Option 3\", cat: \"Group 1\" });\n    // }\n    handleDropdownChange = (e) => {\n        this.setState({ selectValue: e.target.value });\n    }\n    handleChangeDate = date => {\n\n        this.setState({\n            startDate: date\n        });\n    }\n    handleEndDate = date => {\n\n        this.setState({\n            endDate: date\n        });\n    }\n    handleChangeDateTo = date => {\n        this.setState({\n            startDateTo: date,\n            error: ''\n        });\n    }\n    handleEndDateTo = date => {\n        this.setState({\n            endDateTo: date\n        });\n    }\n    handleChange = (event) => {\n        //this.setState({value: event.option});\n        this.setState({ value: Array.from(event.target.selectedOptions, (item) => item.value) });\n    }\n\n    renderAccountSelect = () => {\n        const { selectedAccountOption, allAccounts } = this.state;\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account...\"\n                value={selectedAccountOption}\n                onChange={this.handleChangeAccount}\n                options={options}\n            />\n        )\n    }\n\n    handleChangeAccountTo = selectedAccountOptionTo => {\n        this.setState({ selectedAccountOptionTo, error: '' });\n    };\n    renderAccountSelectTo = () => {\n        const { selectedAccountOptionTo, allAccounts } = this.state;\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account...\"\n                value={selectedAccountOptionTo}\n                onChange={this.handleChangeAccountTo}\n                options={options}\n            />\n        )\n    }\n\n\n    handleChangeAccount = selectedAccountOption => {\n        this.setState({ selectedAccountOption });\n    };\n    handleChangeSymbol = selectedSymbolOption => {\n        this.setState({ selectedSymbolOption });\n    };\n    renderSymbolSelect = () => {\n        const { selectedSymbolOption, allSymbols } = this.state;\n        let options = allSymbols.map(data => {\n            return { value: data.name, label: data.name };\n        })\n        return (\n            <Select\n                placeholder=\"Select Symbol...\"\n                value={selectedSymbolOption}\n                isMulti\n                onChange={this.handleChangeSymbol}\n                options={options}\n            />\n        )\n    }\n    handleChangeSymbolTo = selectedSymbolOptionTo => {\n        this.setState({ selectedSymbolOptionTo });\n    };\n    renderSymbolSelectTo = () => {\n        const { selectedSymbolOptionTo, allSymbols } = this.state;\n        let options = allSymbols.map(data => {\n            return { value: data.name, label: data.name };\n        })\n        return (\n            <Select\n                placeholder=\"Select Symbol...\"\n                value={selectedSymbolOptionTo}\n                isMulti\n                onChange={this.handleChangeSymbolTo}\n                options={options}\n            />\n        )\n    }\n\n    handleprofileName(e) {\n        this.setState({ profileName: e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1), error: '' })\n    }\n    formDataSubmit(e) {\n        e.preventDefault();\n        let self = this\n\n        if (this.state.profileName == null || this.state.profileName == '') {\n            this.setState({ error: 'profileName' })\n            return\n        }\n        else if (this.state.selectedAccountOption == null || this.state.selectedAccountOption == '') {\n            this.setState({ error: 'accountoption' })\n            return\n        } else if (this.state.startDate == null || this.state.startDate == '') {\n            this.setState({ error: 'startdate' })\n            return\n        } else if (this.state.selectedSymbolOption == null || this.state.selectedSymbolOption == '') {\n            this.setState({ error: 'symbolselect' })\n            return\n        }\n        else if (this.state.selectedAccountOptionTo == null || this.state.selectedAccountOptionTo == '') {\n            this.setState({ error: 'accountoptionto' })\n            return\n        } else if (this.state.startDateTo == null || this.state.startDateTo == '') {\n            this.setState({ error: 'startDateTo' })\n            return\n        }\n        else if (this.state.selectedSymbolOptionTo == null || this.state.selectedSymbolOptionTo == '') {\n            this.setState({ error: 'selectedSymbolOptionTo' })\n            return\n        }\n        else {\n            this.setState({ error: '' })\n        }\n        let fromSymbol = this.state.selectedSymbolOption;\n        let symbolFrom = fromSymbol.map((data) => {\n            return data.value\n        })\n        let toSymbol = this.state.selectedSymbolOptionTo;\n        let symbolto = toSymbol.map((data) => {\n            return data.value\n        })\n\n        let Data = {\n            profile_name: this.state.profileName,\n            from_account_id: this.state.selectedAccountOption.value,\n            to_account_id: this.state.selectedAccountOptionTo.value,\n            startdateFrom: this.state.startDate,\n            enddateFrom: this.state.endDate,\n            startdateTo: this.state.startDateTo,\n            enddateTo: this.state.endDateTo,\n            from_symbols: JSON.stringify(symbolFrom),\n            to_symbols: JSON.stringify(symbolto),\n            createdAt: new Date(),\n            updatedAt: new Date(),\n\n        }\n        // console.log(Data,'data');\n\n        axios.post(config.baseurl + '/filter/addfilterdata', Data)\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.props.onHide()\n\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n    }\n    crossClick(e) {\n        e.preventDefault();\n        this.props.onHide()\n    }\n\n    render() {\n        // const {  objectArray } = this.state;\n\n        return (\n            <div className=\"content\">\n                <Grid fluid>\n                    <div className=\"symbol-box\">\n                        <div className=\"cross_div\"><a onClick={(e) => this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\n                        <div className=\"terminal-text\" >\n                            <label className=\"pnameadjust\"> Profile Name </label>\n                            <input type=\"text\" name=\"profilename\" className=\"Itext\" placeholder=\"Type Profile Name\" onChange={(e) => this.handleprofileName(e)} />\n                            {(this.state.error == 'profileName') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Fill Your Profile Name </p>}\n\n                        </div>\n                        <form>\n                            <Row>\n                                <Col md={6}>\n                                    <div className=\"card\">\n                                        <div style={{ padding: '10px 20px 0px' }}>\n                                            <span style={{ fontWeight: 'bold' }}>Account A</span>\n                                        </div>\n                                        <table className=\"table mt20\">\n                                            <tbody>\n                                                <tr>\n                                                    <td className=\"b-clr\">\n                                                        <span className=\"accnt\">Account :</span>\n                                                    </td>\n\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        {/* <Multiselect\n                                                        options={objectArray}\n                                                        singleSelect\n                                                        displayValue=\"key\"\n                                                    /> */}\n                                                        {this.renderAccountSelect()}\n                                                        {(this.state.error == 'accountoption') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">From:  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            selected={this.state.startDate}\n                                                            onChange={this.handleChangeDate}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDate}\n                                                            endDate={this.state.endDate}\n                                                            strictParsing\n                                                        />\n                                                        {(this.state.error == 'startdate') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">To :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            selected={this.state.endDate}\n                                                            onChange={this.handleEndDate}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDate}\n                                                            endDate={this.state.endDate}\n                                                        />\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">Symbol :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        {/* <Multiselect\n                                                        options={objectArray}\n                                                        displayValue=\"key\"\n                                                        showCheckbox={true}\n                                                    /> */}\n                                                        {this.renderSymbolSelect()}\n                                                        {(this.state.error == 'symbolselect') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\n                                                    </td>\n                                                </tr>\n\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </Col>\n                                <Col md={6}>\n                                    <div className=\"card\">\n                                        <div style={{ padding: '10px 20px 0px' }}>\n                                            <span style={{ fontWeight: 'bold' }}>Account B</span>\n                                        </div>\n\n                                        <table className=\"table mt20\">\n                                            <tbody>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\"> Account :</span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        {this.renderAccountSelectTo()}\n                                                        {(this.state.error == 'accountoptionto') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">From:  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            selected={this.state.startDateTo}\n                                                            onChange={this.handleChangeDateTo}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDateTo}\n                                                            endDate={this.state.endDateTo}\n                                                            strictParsing\n                                                        />\n                                                        {(this.state.error == 'startDateTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">To :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            selected={this.state.endDateTo}\n                                                            onChange={this.handleEndDateTo}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDateTo}\n                                                            endDate={this.state.endDateTo}\n                                                        />\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr\">\n                                                        <span className=\"accnt\"> Symbol :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        {/* <Multiselect\n                                                        options={objectArray}\n                                                        displayValue=\"key\"\n                                                        showCheckbox={true}\n                                                    /> */}\n                                                        {this.renderSymbolSelectTo()}\n                                                        {(this.state.error == 'selectedSymbolOptionTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\n\n                                                    </td>\n                                                </tr>\n\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </Col>\n                            </Row>\n                            <div className=\"save_button_filter\">\n                                <Button className=\"btn-primary\" variant=\"primary\" size=\"lg\" block onClick={(e) => this.formDataSubmit(e)}>\n                                    Save\n                            </Button>\n                            </div>\n                        </form>\n                    </div>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default Innerfilter;\n","import React, { Component } from 'react';\nimport { Grid, Row, Col, Modal, Alert } from \"react-bootstrap\";\nimport swal from 'sweetalert';\nimport config from '../../constant/config.js';\nconst axios = require('axios');\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loginForm: false,\n            setShow: false,\n            show: true,\n            username: '',\n            password: '',\n            alert: null,\n            persons: [],\n            shwPwd: false,\n            shwMsg: false,\n            invalidUsername:'',\n            invalidPassword:'',\n            accountlist: []\n\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value.trim() })\n    }\n    onSubmit(e) {\n        e.preventDefault();\n        const userdetail = {\n            username: this.state.username,\n            password: this.state.password\n        }\n        if (this.state.username == '') {\n            this.setState({ shwPwd: true })\n        }\n      \n        let self = this;\n        axios.post(config.baseurl + '/users/mainLogin', userdetail)\n            .then(function (response) {\n                if (response.status == 200 ) {\n                    // self.handleClose();\n                    if(response.data.rows && response.data.rows.length>0){\n                        localStorage.setItem('currentUser', JSON.stringify(response.data.rows));\n                        self.props.history.push('/admin/dashboard')\n                    }\n                    if(response.data.message){\n                        if(response.data.name=='username'){\n                            self.setState({invalidUsername:response.data.message})\n                        }\n                        if(response.data.name=='password'){\n                            self.setState({invalidPassword:response.data.message, invalidUsername:''})\n                        }\n                    }\n                }\n            })\n            .catch(function (err) {\n                console.log(err , 'errrr');\n            });\n    }\n    toogle = () => {\n        this.setState({ loginForm: !this.state.loginForm })\n    }\n    handleClose = () => {\n        this.setState({ loginForm: false })\n    }\n    handleShow = () => {\n        this.setState({ setShow: true })\n    }\n    componentDidMount() {\n        // let self = this;\n\n        let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n        if(currentUser!==null){\n            this.props.history.push('admin/dashboard')\n            return;\n        }\n        // axios.get(config.baseurl + '/users/allAccounts')\n        //     .then(function (response) {\n        //         if (response.status == 200) {\n        //             self.setState({ accountlist: response.data.rows })\n        //         }\n        //     })\n    }\n    render() {\n        const {invalidPassword,invalidUsername} = this.state;\n        return (\n            <div className=\"content\">\n                <Grid fluid style={{marginTop:'20vh'}}>\n                    <Row>\n                        <Col md={4} />\n                        <Col \n                            md={4} \n                            sm={6}\n                            >\n                                {/* <Modal show={show}>\n                                    <Modal.Body> */}\n                                        <div className=\"form-box login-box\">\n                                            <Modal.Title className=\"text-center\"><b>Log In</b></Modal.Title>\n\n                                            <div className=\"container-fluid\" style={{background:'#eee', padding:15, marginTop:10}}>\n                                                <div>\n                                                    <span style={{fontWeight:'bold'}}> Username: </span>\n                                                    testaccount\n                                                </div>\n                                                <div>\n                                                    <span style={{fontWeight:'bold'}}> Password: </span>\n                                                    1234567\n                                                </div>\n                                            </div>\n                                            <form style={{ marginTop: '20px' }} onSubmit={this.onSubmit}>\n                                                <label>Username</label>\n                                                {(invalidUsername!='') &&\n                                                    <Alert className=\"alert alert-danger show\">\n                                                        <span>{invalidUsername}</span>\n                                                    </Alert>\n                                                }\n                                                <input className=\"Itext\" placeholder=\"User Name\" name=\"username\" value={this.state.username} onChange={this.onChange}\n                                                // onKeyUp={this.checkValidUser}\n                                                ></input>\n                                                <label>Password</label>\n                                                {(invalidPassword!='') &&\n                                                    <Alert className=\"alert alert-danger show\">\n                                                        <span>{invalidPassword}</span>\n                                                    </Alert>\n                                                }\n                                                <input className=\"Itext\" placeholder=\"Password\" name=\"password\" type=\"password\" value={this.state.password} onChange={this.onChange}></input>\n\n                                              <div className=\"clearfix\">\n                                                    <button type=\"submit\" className=\"save\">Login</button>\n                                                </div>\n                                            </form>\n                                        </div>\n\n                                    {/* </Modal.Body>\n                                </Modal> */}\n\n                            \n                        </Col>\n                        <Col md={4} />\n                    </Row>\n                </Grid>\n            </div >\n        );\n    }\n}\n\nexport default Login;","import React, { Component } from \"react\";\nimport { NavItem, Nav, NavDropdown, MenuItem } from \"react-bootstrap\";\n\nclass AdminNavbarLinks extends Component {\n  constructor(props) {\n    super(props);\n  }\n  logout = () => {\n    localStorage.clear();\n    this.props.history.push('/login');\n  }\n  render() {\n    const notification = (\n      <div>\n        {/* <i className=\"fa fa-globe\" />\n        <b className=\"caret\" /> */}\n        {/* <span className=\"notification\">5</span> */}\n        <p className=\"hidden-lg hidden-md\">Notification</p>\n      </div>\n    );\n    return (\n      <div>\n        <Nav>\n          <NavItem eventKey={1} href=\"#\">\n            {/* <i className=\"fa fa-dashboard\" /> */}\n            <p className=\"hidden-lg hidden-md\">Dashboard</p>\n          </NavItem>\n          <NavDropdown\n            eventKey={2}\n            title={notification}\n            noCaret\n            id=\"basic-nav-dropdown\"\n          >\n            <MenuItem eventKey={2.1}>Notification 1</MenuItem>\n            <MenuItem eventKey={2.2}>Notification 2</MenuItem>\n            <MenuItem eventKey={2.3}>Notification 3</MenuItem>\n            <MenuItem eventKey={2.4}>Notification 4</MenuItem>\n            <MenuItem eventKey={2.5}>Another notifications</MenuItem>\n          </NavDropdown>\n          <NavItem eventKey={3} href=\"#\">\n            {/* <i className=\"fa fa-search\" />\n            <p className=\"hidden-lg hidden-md\">Search</p> */}\n          </NavItem>\n        </Nav>\n        <Nav pullRight>\n          {/* <NavItem eventKey={1} href=\"#\">\n            Account\n          </NavItem>\n          <NavDropdown\n            eventKey={2}\n            title=\"Dropdown\"\n            id=\"basic-nav-dropdown-right\"\n          >\n            <MenuItem eventKey={2.1}>Action</MenuItem>\n            <MenuItem eventKey={2.2}>Another action</MenuItem>\n            <MenuItem eventKey={2.3}>Something</MenuItem>\n            <MenuItem eventKey={2.4}>Another action</MenuItem>\n            <MenuItem eventKey={2.5}>Something</MenuItem>\n            <MenuItem divider />\n            <MenuItem eventKey={2.5}>Separated link</MenuItem>\n          </NavDropdown> */}\n          <NavItem  eventKey={3} onClick={() => this.logout()}>\n           <span className=\"logOutbtn\">Logout</span> \n          </NavItem>\n        </Nav>\n      </div>\n    );\n  }\n}\n\nexport default AdminNavbarLinks;\n","import React, { Component } from \"react\";\nimport { Navbar } from \"react-bootstrap\";\n\nimport AdminNavbarLinks from \"./AdminNavbarLinks\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.mobileSidebarToggle = this.mobileSidebarToggle.bind(this);\n    this.state = {\n      sidebarExists: false\n    };\n  }\n  mobileSidebarToggle(e) {\n    if (this.state.sidebarExists === false) {\n      this.setState({\n        sidebarExists: true\n      });\n    }\n    e.preventDefault();\n    document.documentElement.classList.toggle(\"nav-open\");\n    var node = document.createElement(\"div\");\n    node.id = \"bodyClick\";\n    node.onclick = function() {\n      this.parentElement.removeChild(this);\n      document.documentElement.classList.toggle(\"nav-open\");\n    };\n    document.body.appendChild(node);\n  }\n  render() {\n    return (\n      <Navbar fluid>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <a href=\"#\">{this.props.brandText== \"Dashboard\" ? \"Hedging Interest Differentials Monitoring\" : this.props.brandText }</a>\n          </Navbar.Brand>\n          <Navbar.Toggle onClick={this.mobileSidebarToggle} />\n        </Navbar.Header>\n        <Navbar.Collapse>\n          <AdminNavbarLinks {...this.props}/>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport AdminNavbarLinks from \"../Navbars/AdminNavbarLinks.jsx\";\n\n// import logo from \"assets/img/reactlogo.png\";\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth,\n      menu: false\n    };\n  }\n  toggle = () => {\n    this.setState({ menu: !this.state.menu })\n  }\n\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  updateDimensions() {\n    this.setState({ width: window.innerWidth });\n  }\n  componentDidMount() {\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n  render() {\n    const sidebarBackground = {\n      backgroundImage: \"url(\" + this.props.image + \")\"\n    };\n    return (\n\n\n      <div\n        id=\"sidebar\"\n        className=\"sidebar\"\n        data-color={this.props.color}\n        data-image={this.props.image}\n      >\n        {this.props.hasImage ? (\n          <div className=\"sidebar-background\"  />\n        ) : (\n            null\n          )}\n        <div className=\"logo\">\n          <a\n            href=\"https://www.creative-tim.com?ref=lbd-sidebar\"\n            className=\"simple-text logo-mini\"\n          >\n            <div className=\"logo-img\">\n\n            </div>\n          </a>\n          <span className=\"simple-text logo-normal\">\n            Dashboard\n          </span>\n          {/* <a\n            href=\"https://www.creative-tim.com?ref=lbd-sidebar\"\n            className=\"simple-text logo-normal\"\n          >\n            Dashboard\n          </a> */}\n        </div>\n        <div className=\"sidebar-wrapper\">\n          {/* <ul className=\"nav\" style={{margin:'0px 20px'}}>\n            <li className=\"side-list\">\n              <p> Dashboard </p>\n            </li>\n            <li className=\"side-list\">\n              <p onClick={this.toggle}>Filter\n                      <i className=\"fa fa-angle-down\" aria-hidden=\"true\" style={{ float: 'right' }}></i>\n              </p>\n              {this.state.menu &&\n                <ul>\n\n                  <li>\n                    <p>abc\n                  </p>\n                  </li>\n\n                </ul>\n              }\n            </li>\n            <li className=\"side-list\">\n              <p onClick={this.toggle}>Log In\n                      <i className=\"fa fa-angle-down\" aria-hidden=\"true\" style={{ float: 'right' }}></i>\n              </p>\n            </li>\n            <li className=\"side-list\">\n              <p>Symbol Managing\n              </p>\n            </li>\n            <li className=\"side-list\">\n              <p>Swap\n              </p>\n            </li> */}\n          <ul className=\"nav\" style={{ margin: '0px 20px' }}>\n            {this.state.width <= 991 ? <AdminNavbarLinks {...this.props} /> : null}\n            {this.props.routes.map((prop, key) => {\n              if (!prop.redirect)\n                // console.log(prop.resources, 'resouces');\n              return (\n                <li\n                  className={\n                    prop.upgrade\n                      ? \"active active-pro\"\n                      : this.activeRoute(prop.layout + prop.path)\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.layout + prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                  >\n                    <i className={prop.icon} />\n                    <p onClick={this.toggle}>{prop.name}\n                      {/* <i className=\"fa fa-angle-down\" aria-hidden=\"true\" style={{float:'right'}}></i> */}\n                    </p>\n                    {this.state.menu &&\n                      <ul>\n                        {prop.resources != undefined && prop.resources.map((sub, index) => (\n                          <li key={index}>\n                            <p>{sub.name}\n                            </p>\n                          </li>\n                        ))}\n                      </ul>\n                    }\n                  </NavLink>\n\n                </li>\n              );\n              // return null;\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","\nimport React, { useState, Fragment } from 'react';\nimport { Collapse } from 'reactstrap';\nimport { Row, Col } from \"react-bootstrap\";\nimport NumberFormat from 'react-number-format';\n\n// import Data from './Data';\n\nconst Closeposition = (props) => {\n    const {allHistoryRecord, fromHistoryOrderInfo, toHistoryOrderInfo} = props;\n    const [isOpen2, setIsOpen2] = useState(false);\n\n    const toggle2 = () => setIsOpen2(!isOpen2);\n\n    // const sumOfTotal = allHistoryRecord.reduce((current, data) => {\n    //     return (data.total + current);\n    // }, 0);\n    let fromSymbols='';\n    let toSymbols='';\n    if(allHistoryRecord && Object.entries(allHistoryRecord).length>0){\n      fromSymbols = JSON.parse(allHistoryRecord.from_symbols);\n      fromSymbols = (fromSymbols).map(data => data).join(', ');\n      toSymbols = JSON.parse(allHistoryRecord.to_symbols);\n      toSymbols = (toSymbols).map(data => data).join(', ')\n    }\n    let fromsum=0; \n    let tosum=0;\n    if(fromHistoryOrderInfo && fromHistoryOrderInfo.length>0){\n      fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\n    }\n    if(toHistoryOrderInfo && toHistoryOrderInfo.length>0){\n      tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\n    }\n\n    let sumOfTotal = tosum + fromsum;\n    let noRecord = ((fromHistoryOrderInfo && fromHistoryOrderInfo.length>0 && fromHistoryOrderInfo[0].total==null ) && (toHistoryOrderInfo && toHistoryOrderInfo.length>0 && toHistoryOrderInfo[0].total==null)) ? true:false;\n    return (\n        <div>\n            <div className=\"openpositions\" style={{ margin: '20px 0px' }}>\n                <span className=\"p-text\">Closed Positions</span>\n                <span className=\"icon-style\" onClick={toggle2}>\n                    {!isOpen2 ? \n                        <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n                     : \n                        <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\n                    }\n                </span>\n            </div>\n            <div>\n                <Collapse isOpen={isOpen2}>\n                    <Row>\n                        {/* {Data.tablePage.items.map((item, index) =>\n                            <Col md={6} key={index}>\n                                <div className=\"card\">\n                                    <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\n                                    </div>\n                                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                        <table className=\"table\">\n                                            <tbody>\n                                                <tr><td>{item.closed} </td>\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\n                                                </tr>\n                                                <tr><td>{item.commission} </td>\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\n                                                </tr>\n                                                <tr><td>{item.swap} </td>\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\n                                                </tr>\n                                                <tr><td>{item.total} </td>\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                    </div>\n                                </div>\n                            </Col>\n                        )} */}\n                        {/* {(allHistoryRecord && allHistoryRecord.length>0) && allHistoryRecord.map((item, index) =>\n                            <Fragment>\n\n                            <Col md={6} key={index}>\n                                <div className=\"card\">\n                                    <div className=\"header\">\n                                        <h5 className={item.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{item.account.login}</h5>\n                                        <h6 className={'colorDarkBlue'} style={{fontSize:10}}>({item.account.alias})</h6>\n                                    </div>\n                                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                        <table className=\"table\">\n                                            <tbody>\n                                                <tr><td>Closed P/L </td>\n                                                    <td className=\"td-actions text-right\">$ {item.profit}</td>\n                                                </tr>\n                                                <tr><td>Commission </td>\n                                                    <td className=\"td-actions text-right\">$ {item.commission}</td>\n                                                </tr>\n                                                <tr><td>Swap </td>\n                                                    <td className=\"td-actions text-right\">$ {item.swap}</td>\n                                                </tr>\n                                                <tr><td>Total </td>\n                                                    <td className=\"td-actions text-right\">$ {item.total}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                    </div>\n                                </div>\n                            </Col>\n                            </Fragment>\n                        )}\n                        {(allHistoryRecord && allHistoryRecord.length>0) && \n                            <Row>\n                                <Col md={12}>\n                                    <div>\n                                        <div className=\"total-box\">\n                                            <span className=\"text\">Sum of closed positions</span>\n                                            <span className=\"text\" style={{ float: 'right' }}>$ {sumOfTotal}</span>\n                                        </div>\n                                    </div>\n                                </Col>\n                            </Row>\n                        } */}\n                        {noRecord ? (\n                            <div className=\"text-center\">\n                                No Record Found!\n                            </div>):\n                            \n                        <Fragment>\n                            \n                         {(fromHistoryOrderInfo && fromHistoryOrderInfo.length>0 && fromHistoryOrderInfo[0].total!=null) ? (\n                            <Col md={6}>\n                                <div className=\"card\">\n                                    <div className=\"header\">\n                                        <h5 className={allHistoryRecord.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{allHistoryRecord.accountFromInfo[0].login}</h5>\n                                        <h6 className={'colorDarkBlue'} style={{fontSize:10}}>({allHistoryRecord.accountFromInfo[0].alias})</h6>\n                                    </div>\n                                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                        <table className=\"table\">\n                                            <tbody>\n                                                <tr>\n                                                    <span className=\"symbolStyle\">{fromSymbols}</span>\n                                                    {/* <td>{fromSymbols}</td> */}\n                                                    {/* <td className=\"td-actions text-right\">$ {fromHistoryOrderInfo[0].profit}</td> */}\n                                                </tr>\n                                                <tr><td>Closed P/L </td>\n                                                    <td className=\"td-actions text-right\">$ {' '}\n                                                    <NumberFormat value={fromHistoryOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                    {/* {fromHistoryOrderInfo[0].profit} */}\n                                                    </td>\n                                                </tr>\n                                                <tr><td>Commission </td>\n                                                    <td className=\"td-actions text-right\">$ {' '}\n                                                    {/* {fromHistoryOrderInfo[0].commission} */}\n                                                    <NumberFormat value={fromHistoryOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                                    \n                                                    </td>\n                                                </tr>\n                                                <tr><td>Swap </td>\n                                                    <td className=\"td-actions text-right\">$ {' '}\n                                                    <NumberFormat value={fromHistoryOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                                    \n                                                    {/* {fromHistoryOrderInfo[0].swap} */}\n                                                    </td>\n                                                </tr>\n                                                <tr><td>Total </td>\n                                                    <td className=\"td-actions text-right\">$ {' '}\n                                                    <NumberFormat value={fromHistoryOrderInfo[0].total} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                                    \n                                                    {/* {fromHistoryOrderInfo[0].total} */}\n                                                    </td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                    </div>\n                                </div>\n                            </Col>\n                        ):(\n                            <Col md={6}>\n                                <div className=\"card noRecordCol\"> No Record Found</div>\n                            </Col>\n                        )}\n                        {(toHistoryOrderInfo && toHistoryOrderInfo.length>0 && toHistoryOrderInfo[0].total!=null) ? (\n                            <Col md={6}>\n                                <div className=\"card\">\n                                    <div className=\"header\">\n                                        <h5 className={allHistoryRecord.id == '1' ? 'acntText color2' : 'acntText color2'}>{allHistoryRecord.accountToInfo[0].login}</h5>\n                                        <h6 className={'color2'} style={{fontSize:10}}>({allHistoryRecord.accountToInfo[0].alias})</h6>\n                                    </div>\n                                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                        <table className=\"table\">\n                                            <tbody>\n                                                <tr>\n                                                    <span className=\"symbolStyle\">{toSymbols}</span>\n\n                                                    {/* <td>{toSymbols}</td> */}\n                                                    {/* <td className=\"td-actions text-right\">$ {fromHistoryOrderInfo[0].profit}</td> */}\n                                                </tr>\n                                                <tr><td>Closed P/L </td>\n                                                    <td className=\"td-actions text-right\">$ {' '}\n                                                    <NumberFormat value={toHistoryOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                    {/* {toHistoryOrderInfo[0].profit} */}\n                                                    </td>\n                                                </tr>\n                                                <tr><td>Commission </td>\n                                                    <td className=\"td-actions text-right\">$ {' '}\n                                                    {/* {toHistoryOrderInfo[0].commission} */}\n                                                    <NumberFormat value={toHistoryOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                    </td>\n                                                </tr>\n                                                <tr><td>Swap </td>\n                                                    <td className=\"td-actions text-right\">$ {' '}\n                                                    {/* {toHistoryOrderInfo[0].swap} */}\n                                                    <NumberFormat value={toHistoryOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                    </td>\n                                                </tr>\n                                                <tr><td>Total </td>\n                                                    <td className=\"td-actions text-right\">$ {' '}\n                                                    {/* {toHistoryOrderInfo[0].total} */}\n                                                    <NumberFormat value={toHistoryOrderInfo[0].total} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                    </td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                    </div>\n                                </div>\n                            </Col>\n                        ):(\n                            <Col md={6}>\n                                <div className=\"card noRecordCol\"> No Record Found</div>\n                            </Col>\n                        )\n                    \n                        }\n                          {(sumOfTotal!=0) && \n                            <Row>\n                                <Col md={12} style={{marginBottom:20}}>\n                                    <div>\n                                        <div className=\"total-box\">\n                                            <span className=\"text\">Sum of closed positions</span>\n                                            <span className=\"text\" style={{ float: 'right' }}>$ {' '}\n                                            <NumberFormat value={sumOfTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                            \n                                            {/* {sumOfTotal} */}\n                                            </span>\n                                        </div>\n                                    </div>\n                                </Col>\n                            </Row>\n                        }\n                    </Fragment>\n                    }\n                    </Row>\n                </Collapse>\n            </div>\n        </div >\n\n    );\n}\n\nexport default Closeposition;\n","const Data = {\n \n  tablePage: {\n    items: [\n      {id: 1,lot:'Buy 10 Lot', closed: 'Closed P/L', commission: 'Commission', swap: 'Swap', total: 'Total', price:'$ 1110',textA: 'Account A'},\n      {id: 2, lot:'Sell 10 Lot', closed: 'Closed P/L', commission: 'Commission', swap: 'Swap', total: 'Total', price:'$ 1111', textA: 'Account B'},\n    ]\n  },\n  dashBoardPage: {\n    items: [\n      {id: 1, title: 'Balance', textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 2, title: 'Equity',textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 3, title: 'Margin', textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 4, title: 'Free Margin', textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 5, title: 'Margin %', textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 5, title: 'Floating P/L', textA: 'Account A', textB: 'Account B',price:'$ 400'}\n    ],\n  }\n};\n\nexport default Data;\n","import React, { useState, Fragment } from 'react';\nimport { Collapse } from 'reactstrap';\nimport { Row, Col } from \"react-bootstrap\";\nimport NumberFormat from 'react-number-format';\n\nimport Data from './Data';\n\nexport default function Openposition(props) {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => setIsOpen(!isOpen);\n    const {allOpenRecord,fromOpenOrderInfo, toOpenOrderInfo, } = props;\n    // const sumOfTotal = allOpenRecord.reduce((current, data) => {\n    //     return (Math.floor(data.commission + data.swap + data.profit+ current))\n    //     // return (data.profit + current);\n    // }, 0);\n\n    let fromsum=0; \n    let tosum=0;\n    let fromSymbols='';\n    let toSymbols='';\n    if(allOpenRecord && Object.entries(allOpenRecord).length>0){\n      fromSymbols = JSON.parse(allOpenRecord.from_symbols);\n      fromSymbols = (fromSymbols).map(data => data).join(', ');\n      toSymbols = JSON.parse(allOpenRecord.to_symbols);\n      toSymbols = (toSymbols).map(data => data).join(', ')\n    }\n    // if(fromOpenOrderInfo && fromOpenOrderInfo.length>0){\n    //   fromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\n    // }\n    // if(toOpenOrderInfo && toOpenOrderInfo.length>0){\n    //   tosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n    // }\n    if(fromOpenOrderInfo && fromOpenOrderInfo.length>0){\n      if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\n        fromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\n      }else{\n        fromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\n      }\n    }\n    if(toOpenOrderInfo && toOpenOrderInfo.length>0){\n      if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\n        tosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap);\n      }else{\n        tosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n      }\n      // opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n    }\n\n    let sumOfTotal = tosum + fromsum;\n    let noRecord = ((fromOpenOrderInfo && fromOpenOrderInfo.length>0 && fromOpenOrderInfo[0].total==null ) && (toOpenOrderInfo && toOpenOrderInfo.length>0 && toOpenOrderInfo[0].total==null)) ? true:false;\n\n    return (\n        <div>\n            <div className=\"openpositions\" style={{ margin: '20px 0px' }}>\n                <span className=\"p-text\">Open Positions</span>\n                <span className=\"icon-style\" onClick={toggle}>\n                    {!isOpen ? \n                        <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n                        : \n                        <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\n                    }\n                </span>\n          </div>\n          <div>\n\n            <Collapse isOpen={isOpen}>\n              <Row>\n               \n\n                    \n                {/* {Data.tablePage.items.map((item, index) =>\n                  <Col md={6} key={index}>\n                    <div className=\"card\">\n                      <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\n                      </div>\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                        <table className=\"table\">\n                          <tbody>\n                            <tr><td>{item.lot} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.commission} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.swap} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.total} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                      </div>\n                    </div>\n                  </Col>\n                )} */}\n\n                {/* {(allOpenRecord && allOpenRecord.length>0) && allOpenRecord.map((item, index) =>\n                    \n                    <Col md={6} key={index}>\n                            <div className=\"card\">\n                            <div className=\"header\">\n                              <h5 className={item.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{item.account.login}</h5>\n                              <h6 style={{fontSize:10}} className={'colorDarkBlue'}>({item.account.alias})</h6>\n                            </div>\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                <table className=\"table\">\n                                <tbody>\n                                    <tr>\n                                        <td>\n                                            {item.order_type ===0 ? 'BUY ' : 'SELL ' } \n                                            {item.lots} {(item.lots>1) ? 'Lots':'Lot'}\n                                        </td>\n                                        <td className=\"td-actions text-right\"> {''}</td>\n                                    </tr>\n                                    <tr><td>Floating P/L </td>\n                                        <td className=\"td-actions text-right\">$ {item.profit}</td>\n                                    </tr>\n                                    <tr><td>Commission </td>\n                                        <td className=\"td-actions text-right\">$ {item.commission}</td>\n                                    </tr>\n                                    <tr><td>Swap </td>\n                                        <td className=\"td-actions text-right\">$ {item.swap}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Total </td>\n                                        <td className=\"td-actions text-right\">\n                                          $ {Math.floor(item.commission + item.swap + item.profit)}\n                                        </td>\n                                    </tr>\n                                </tbody>\n                                </table>\n                            </div>\n                            </div>\n                            </div>\n                        </Col>\n                )} */}\n                {/* {(allOpenRecord && allOpenRecord.length>0) &&\n                    <Row>\n                        <Col md={12}>\n                            <div>\n                            <div className=\"total-box\">\n                                <span className=\"text\">Sum of open positions</span>\n                                <span className=\"text\" style={{ float: 'right' }}>$ {sumOfTotal}</span>\n                            </div>\n                            </div>\n                        </Col>\n                    </Row>\n                } */}\n                  {(noRecord)?\n                    <div className=\"text-center\">\n                        No Record Found!\n                    </div>\n                    :\n                    <Fragment>\n                  {(fromOpenOrderInfo && fromOpenOrderInfo.length>0 && fromOpenOrderInfo[0].total!=null) ?\n                    \n                    <Col md={6}>\n                            <div className=\"card\">\n                            <div className=\"header\">\n                              <h5 className={allOpenRecord.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{allOpenRecord.accountFromInfo[0].login}</h5>\n                              <h6 style={{fontSize:10}} className={'colorDarkBlue'}>({allOpenRecord.accountFromInfo[0].alias})</h6>\n                            </div>\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                <table className=\"table\">\n                                <tbody>\n                                    <tr>\n                                        <span className=\"symbolStyle\">{fromSymbols}</span>\n                                    </tr>\n                                            {/* Buy 10 Lot  */}\n                                    <tr>\n                                        <td>\n                                            {fromOpenOrderInfo[0].order_type == 0 ? 'BUY ' : 'SELL ' } \n                                            {fromOpenOrderInfo[0].lots} {(fromOpenOrderInfo[0].lots>1) ? 'Lots':'Lot'}\n                                        </td>\n                                        <td className=\"td-actions text-right\"> {''}</td>\n                                    </tr>\n                                    {/* <tr><td>{(fromOpenOrderInfo[0].lots>1) ? 'Lots':'Lot'}</td>\n                                        <td className=\"td-actions text-right\">{fromOpenOrderInfo[0].lots}</td>\n                                    </tr> */}\n                                    <tr><td>Floating P/L </td>\n                                        <td className=\"td-actions text-right\">$ {' '}\n                                        {/* {fromOpenOrderInfo[0].profit} */}\n                                        <NumberFormat value={fromOpenOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                        </td>\n                                    </tr>\n                                    <tr><td>Commission </td>\n                                        <td className=\"td-actions text-right\">$ {' '}\n                                        {/* {fromOpenOrderInfo[0].commission} */}\n                                        <NumberFormat value={fromOpenOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                        </td>\n                                    </tr>\n                                    <tr><td>Swap </td>\n                                        <td className=\"td-actions text-right\">$ {' '}\n                                        {/* {fromOpenOrderInfo[0].swap} */}\n                                        { allOpenRecord.swapFrominfo &&allOpenRecord.swapFrominfo.length>0 ? \n                                        <NumberFormat value={allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                        // (allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].swap) \n                                        : \n                                        <NumberFormat value={ fromOpenOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                        // fromOpenOrderInfo[0].swap\n                                        }\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Total </td>\n                                        <td className=\"td-actions text-right\">$ {' '}\n                                          {/* $ {Math.floor(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)} */}\n                                          { allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0 ? \n                                        <NumberFormat value={(fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap) } displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                        // Math.floor(fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap) \n                                        :\n                                        <NumberFormat value={(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                          //  Math.floor(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)\n                                        }\n                                        </td>\n                                    </tr>\n                                </tbody>\n                                </table>\n                            </div>\n                            </div>\n                            </div>\n                        </Col>\n                        :\n                      <Col md={6}>\n                          <div className=\"card noRecordCol\"> No Record Found</div>\n                      </Col>\n                  }\n\n                  {(toOpenOrderInfo && toOpenOrderInfo.length>0 && toOpenOrderInfo[0].total!=null) ?\n                    \n                    <Col md={6}>\n                            <div className=\"card\">\n                            <div className=\"header\">\n                              <h5 className={allOpenRecord.id == '1' ? 'acntText color2' : 'acntText color2'}>{allOpenRecord.accountToInfo[0].login}</h5>\n                              <h6 style={{fontSize:10}} className={'color2'}>({allOpenRecord.accountToInfo[0].alias})</h6>\n                            </div>\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                <table className=\"table\">\n                                <tbody>\n                                  {/* Buy 10 Lot  */}\n                                    <tr>\n                                        <span className=\"symbolStyle\">{toSymbols}</span>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            {toOpenOrderInfo[0].order_type == 0 ? 'BUY ' : 'SELL ' } \n                                            {toOpenOrderInfo[0].lots} {(toOpenOrderInfo[0].lots>1) ? 'Lots':'Lot'}\n                                        </td>\n                                        <td className=\"td-actions text-right\"> {''}</td>\n                                    </tr>\n                                    {/* <tr><td>{(fromOpenOrderInfo[0].lots>1) ? 'Lots':'Lot'}</td>\n                                        <td className=\"td-actions text-right\">{fromOpenOrderInfo[0].lots}</td>\n                                    </tr> */}\n                                    <tr><td>Floating P/L </td>\n                                        <td className=\"td-actions text-right\">$ {' '} \n                                        {/* {toOpenOrderInfo[0].profit} */}\n                                        <NumberFormat value={toOpenOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                        </td>\n                                    </tr>\n                                    <tr><td>Commission </td>\n                                        <td className=\"td-actions text-right\">$ {' '}\n                                        {/* {toOpenOrderInfo[0].commission} */}\n                                        <NumberFormat value={toOpenOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                        \n                                        </td>\n                                    </tr>\n                                    <tr><td>Swap </td>\n                                        <td className=\"td-actions text-right\">$ {' '}\n                                        {/* {toOpenOrderInfo[0].swap} */}\n                                        { allOpenRecord.swapToinfo &&allOpenRecord.swapToinfo.length>0 ? \n                                        // (allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].swap) \n                                        <NumberFormat value={(allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                        \n                                        : \n                                        <NumberFormat value={(toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                        // toOpenOrderInfo[0].swap\n                                        }\n                                        </td>\n\n                                    </tr>\n                                    <tr>\n                                        <td>Total </td>\n                                        <td className=\"td-actions text-right\"> $ {' '}\n                                        { allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0 ? \n                                          //  Math.floor(toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap)\n                                        <NumberFormat value={(toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                           \n                                           :\n                                        <NumberFormat value={(toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                          //  Math.floor(toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit)\n                                        }\n                                        </td>\n                                    </tr>\n                                </tbody>\n                                </table>\n                            </div>\n                            </div>\n                            </div>\n                        </Col>\n                  :\n                  <Col md={6}>\n                    <div className=\"card noRecordCol\"> No Record Found</div>\n                  </Col>\n                  }\n                  {\n                    sumOfTotal!=0 &&\n                    <Row>\n                        <Col md={12}>\n                            <div>\n                            <div className=\"total-box\">\n                                <span className=\"text\">Sum of open positions</span>\n                                <span className=\"text\" style={{ float: 'right' }}>$ {' '}\n                                <NumberFormat value={sumOfTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                {/* {sumOfTotal} */}\n                                </span>\n                            </div>\n                            </div>\n                        </Col>\n                    </Row>\n                  }\n                  </Fragment>\n                }\n              </Row>\n            </Collapse>\n          </div>\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport { Collapse } from 'reactstrap';\nimport Select from 'react-select';\nimport { Grid, Row, Col } from \"react-bootstrap\";\n// import Data from './Data';\nimport NumberFormat from 'react-number-format';\nimport Closeposition from 'views/Closeposition';\nimport Openposition from 'views/Openposition';\n\n// import config from '../constant/config.js';\nimport config from '../constant/config.js';\nconst axios = require('axios');\n\n// import Card from \"components/Card/Card.jsx\";\n// import { thArray, tdArray } from \"variables/Variables.jsx\";\n\nclass TableList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      // isOpen: false,\n      allSymbols:[],\n      selectedOption:null,\n      allHistoryRecord:[],\n      allOpenRecord:[],\n      fromHistoryOrderInfo:[],\n      toHistoryOrderInfo:[],\n      fromOpenOrderInfo:[],\n      toOpenOrderInfo:[],\n      filterlist:[],\n      allSymbols:[],\n      symbolsObj:[]\n    }\n\n  }\n  // toggle = () => {\n  //   this.setState({ isOpen: !this.state.isOpen })\n  // }\n  // componentWillMount() {\n  //   let self = this;\n      // axios.get(config.baseurl + '/accounts/fetchAllSymbol')\n      // .then(function (response) {\n      //   if (response.status == 200) {\n      //     self.setState({ allSymbols: response.data.rows })\n      //   }\n      // })\n\n      // axios.get(config.baseurl + '/filter/fetchfilterdata')\n      // .then(function (response) {\n      //   if (response.status == 200) {\n      //     self.setState({ filterlist: response.data.rows })\n      //   }\n      // })\n\n      // axios.get(config.baseurl + '/filter/fetchActivefilterdata')\n      // .then(function (response) {\n      //   if (response.status == 200) {\n      //     if(response.data.rows && response.data.rows.length>0){\n      //       // let symbolsObj = (response.data.rows[0].symbols).map(data => { return ({value:data, label:data})})\n      //         self.setState({ filterlist: response.data.rows, allSymbols: response.data.rows[0].symbols, \n      //         // selectedOption:symbolsObj\n      //        })\n      //     }\n      //   }\n      // });\n  // }\n\n  componentDidMount(){\n    let self = this;\n    axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\n    .then(function (response) {\n      // console.log(response.data, 'response.data his')\n      if (response.status == 200) {\n        // self.setState({ allHistoryRecord: response.data.rows })\n        self.setState({ \n          allHistoryRecord: response.data.rows ,\n          fromHistoryOrderInfo:response.data.fromHistoryOrderInfo,\n          toHistoryOrderInfo:response.data.toHistoryOrderInfo\n        })\n      }\n    })\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\n    axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\n    .then(function (response) {\n      if (response.status == 200) {\n      // console.log(response.data, 'response.data open')\n\n        // self.setState({ allOpenRecord: response.data.rows })\n        self.setState({ \n          allOpenRecord: response.data.rows ,\n          fromOpenOrderInfo:response.data.fromOpenOrderInfo,\n          toOpenOrderInfo:response.data.toOpenOrderInfo\n        })\n      }\n    })\n  }\n\n  fetchDataAccordingSymbols = (symbol) => {\n    let self = this;\n    let {startdateFrom, startdateTo,enddateFrom, enddateTo, to_account_id, from_account_id} = this.state.filterlist[0];\n    \n    let postData =  {\"to_account_id\":to_account_id, \"from_account_id\":from_account_id, \"startdateFrom\":startdateFrom, \"startdateTo\":startdateTo,\"enddateFrom\": enddateFrom, \"enddateTo\":enddateTo, \"symbol\":symbol}\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolHistory', {'symbol':symbol})\n    \n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolHistory', postData)\n    axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\n    .then(function (response) {\n      // console.log(response.data, 'response.data his')\n      if (response.status == 200) {\n        // self.setState({ allHistoryRecord: response.data.rows })\n        self.setState({ \n          allHistoryRecord: response.data.rows ,\n          fromHistoryOrderInfo:response.data.fromHistoryOrderInfo,\n          toHistoryOrderInfo:response.data.toHistoryOrderInfo\n        })\n      }\n    })\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\n    axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\n    .then(function (response) {\n      if (response.status == 200) {\n      // console.log(response.data, 'response.data open')\n\n        // self.setState({ allOpenRecord: response.data.rows })\n        self.setState({ \n          allOpenRecord: response.data.rows ,\n          fromOpenOrderInfo:response.data.fromOpenOrderInfo,\n          toOpenOrderInfo:response.data.toOpenOrderInfo\n        })\n      }\n    })\n  }\n\n  handleChange = selectedOption => {\n    this.setState({ selectedOption });\n    this.fetchDataAccordingSymbols(selectedOption.value);\n  };\n\n  renderSymbols = () => {\n    const { selectedOption, allSymbols } = this.state;\n    // let options = allSymbols.map(data => {\n    //   return {value:data.name, label:data.name};\n    // })\n    let options = allSymbols.map(data => {\n      return {value:data, label:data};\n    });\n   \n    return(\n      <Select\n        placeholder=\"Select Symbol...\"\n        className=\"S-text\"\n        // isMulti\n        value={selectedOption}\n        onChange={this.handleChange}\n        options={options}\n      />\n      )\n  }\n\n  render() {\n    const {allHistoryRecord, allOpenRecord, selectedOption, toOpenOrderInfo, fromOpenOrderInfo,fromHistoryOrderInfo ,toHistoryOrderInfo} = this.state;\n  //   const sumOfOpenTotal = allOpenRecord.reduce((current, data) => {\n  //     return (Math.floor(data.commission + data.swap + data.profit+ current));\n  // }, 0);\n\n  //   const sumOfHistoryTotal = allHistoryRecord.reduce((current, data) => {\n  //     return (data.profit + current);\n  // }, 0);\n    let uniqueSymbols=\"\";\n    if(allOpenRecord && Object.entries(allOpenRecord).length>0){\n      let fromSymbols = JSON.parse(allOpenRecord.from_symbols);\n      // fromSymbols = (fromSymbols).map(data => data).join(', ');\n      let toSymbols = JSON.parse(allOpenRecord.to_symbols);\n      let combineSymbols = fromSymbols.concat(toSymbols);\n      uniqueSymbols = combineSymbols.filter((item, i, ar) => ar.indexOf(item) === i);\n      uniqueSymbols = (uniqueSymbols).map(data => data).join(', ')\n    }\n    let fromsum=0; \n    let tosum=0;\n    if(fromHistoryOrderInfo && fromHistoryOrderInfo.length>0){\n      fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\n    }\n    if(toHistoryOrderInfo && toHistoryOrderInfo.length>0){\n      tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\n    }\n\n    let sumOfHistoryTotal = tosum + fromsum;\n\n    let openfromsum=0; \n    let opentosum=0;\n    if(fromOpenOrderInfo && fromOpenOrderInfo.length>0 && fromOpenOrderInfo[0].total!=null){\n      if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\n        openfromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\n      }else{\n        openfromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\n      }\n    }\n    if(toOpenOrderInfo && toOpenOrderInfo.length>0  && toOpenOrderInfo[0].total!=null){\n      if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\n        opentosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit+ toOpenOrderInfo[0].swap);\n      }else{\n        opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n      }\n      // opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n    }\n\n    let sumOfOpenTotal = opentosum + openfromsum;\n\n\n\n    return (\n      <div className=\"content col-md-12 col-sm-6\">\n        <Grid fluid className=\"symbol-box\">\n          {/* <div className=\"symbol-box\"> */}\n          {/* <span className=\"S-text\">EURUSD</span> */}\n          {/* <div style={{ borderBottom: '2px solid grey' }}>\n            {this.renderSymbols()}\n\n          </div> */}\n          {/* <div style={{ margin: '20px 0px' }}>\n            <span className=\"p-text\">Open Positions</span>\n            <span className=\"icon-style\" onClick={this.toggle}>\n              <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\n            </span>\n          </div>\n          <div>\n\n            <Collapse isOpen={this.state.isOpen}>\n              <Row>\n                {Data.tablePage.items.map((item, index) =>\n                  <Col md={6} key={index}>\n                    <div className=\"card\">\n                      <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\n                      </div>\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                        <table className=\"table\">\n                          <tbody>\n                            <tr><td>{item.lot} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.commission} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.swap} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.total} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                      </div>\n                    </div>\n                  </Col>\n                )}\n                <Row>\n                  <Col md={12}>\n                    <div>\n                      <div className=\"total-box\">\n                        <span className=\"text\">Sum of open position</span>\n                        <span className=\"text\" style={{ float: 'right' }}>$111111</span>\n                      </div>\n                    </div>\n                  </Col>\n                </Row>\n              </Row>\n            </Collapse>\n          </div> */}\n          {/* closed position */}\n          <Openposition \n            allOpenRecord={allOpenRecord}\n            toOpenOrderInfo={toOpenOrderInfo}\n            fromOpenOrderInfo={fromOpenOrderInfo}\n            />\n          <Closeposition \n            allHistoryRecord={allHistoryRecord}\n            fromHistoryOrderInfo={fromHistoryOrderInfo}\n            toHistoryOrderInfo={toHistoryOrderInfo}\n            />\n          <Row>\n            <Col md={12} sm={6}>\n              <div className={sumOfHistoryTotal + sumOfOpenTotal >= 0 ? \"summary-box\" : \"summary-box-red\"}>\n                {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\n                {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\n                <span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\n                \n                <Col md={12} sm={12}>\n                  <div className=\"summary-text text-center\" style={{fontWeight:600,color:\"#797979\"}}>Summary For {uniqueSymbols}</div>\n                </Col>\n                <Col md={12} sm={12}>\n                  <div className=\"text-center\" style={{fontWeight:'bold',fontSize:\"18px\"}}>$ {' '}\n                  <NumberFormat value={sumOfHistoryTotal + sumOfOpenTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                  \n                  {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\n                  \n                  </div>\n                </Col>\n                <div className=\"clearfix\"></div>\n              </div>\n            </Col>\n          </Row>\n          {/* </div> */}\n        </Grid>\n      </div>\n    );\n  }\n\n}\n\nexport default TableList;","import React, { Component } from 'react';\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\n// import SweetAlert from 'react-bootstrap-sweetalert';\nimport swal from 'sweetalert';\nimport config from '../constant/config.js';\nconst axios = require('axios');\n\nlet intervalSet;\nlet timerWaitInterval;\nlet timerWait = 100;\nclass Innerlogin extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loginForm: false,\n            setShow: false,\n            show: true,\n            login: '',\n            password: '',\n            broker: '',\n            alias: '',\n            alert: null,\n            persons: [],\n            shwPwd: false,\n            shwMsg: false,\n            accountlist: [],\n            editForm:false,\n            detailForm:false,\n            editData:[],\n            edituser:'',\n            editserver:'',\n            editalias:'',\n            editstatus:'',\n            id:'',\n            tryAgainConnection: false,\n            currentAddLogin: null,\n            currentAddBroker: null,\n            timerShow: false\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onUpdate = this.onUpdate.bind(this);\n\n    }\n    // delete alert\n    // deleteThisGoal() {\n    //     const getAlert = () => (\n    //         <SweetAlert\n    //             success\n    //             title=\"Woot!\"\n    //             onConfirm={() => this.hideAlert()}\n    //         >\n    //             Hello world!\n    //       </SweetAlert>\n    //     );\n\n    //     this.setState({\n    //         alert: getAlert()\n    //     });\n    // }\n    fectheAllAccount(){\n        let self = this;\n        axios.get(config.baseurl + '/users/allAccounts')\n        .then(function (response) {\n            if (response.status == 200) {\n                self.setState({ accountlist: response.data.rows })\n            }\n        })\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value.trim() })\n    }\n\n    checkUserConnected = (login, broker) => {\n        let self = this;\n        axios.post(config.baseurl + '/users/checkUserConnected', {login: login, broker: broker})\n        .then(function (response) {\n            // console.log(response, \"response connection\");\n            if (response.status == 200) {\n                if(response.data.connected){\n                    self.setState({currentAddLogin: null, currentAddBroker: null});\n                    clearInterval(intervalSet);\n                    clearInterval(timerWaitInterval);\n                    self.setState({timerShow: false});\n                    timerWait = 100\n                    self.setState({tryAgainConnection: false});\n                    self.handleClose();\n                    self.fectheAllAccount()\n                }\n            }else{\n\n            }\n        })\n    }\n\n    setIntervalCustom = () => {\n        let self = this;\n        timerWaitInterval = setInterval(function(){ \n            timerWait--;\n            if(timerWait <= 0) {\n                clearInterval(intervalSet);\n                clearInterval(timerWaitInterval);\n                self.setState({tryAgainConnection: true});\n                self.setState({timerShow: false});\n                timerWait = 100\n            }else{\n                self.setState({timerShow: true});\n            }\n        }, 1000);\n    }\n\n    tryAgainConnectionFun = () => {\n        let self = this;\n        self.setIntervalCustom();\n        intervalSet = setInterval(function(){ \n            self.checkUserConnected(self.state.currentAddLogin, self.state.currentAddBroker)\n        }, 5000);\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const userdetail = {\n            login: this.state.login,\n            password: this.state.password,\n            broker: this.state.broker,\n            alias: this.state.alias\n        }\n        if (this.state.login == '') {\n            this.setState({ shwPwd: true })\n        }\n      \n        let self = this;\n        axios.post(config.baseurl + '/users/addUser', userdetail)\n            .then(function (response) {\n                // console.log(response,'response')\n                if (response.status == 200 && response.data.status === true) {\n                    self.setIntervalCustom();\n                    self.fectheAllAccount();\n                    self.setState({currentAddLogin: userdetail.login, currentAddBroker: userdetail.broker});\n                    intervalSet = setInterval(function(){ \n                        self.checkUserConnected(userdetail.login, userdetail.broker)\n                    }, 5000);\n\n                    // self.handleClose();\n                    self.setState({login: \"\", password:'', broker:'', alias:''})\n\n                }\n                if(response.data.status == 202){\n                    swal({\n                        // title: \"Error\",\n                        text: \"User already exist\",\n                        // icon: \"{response.status == 200 ? 'warning ':'success'}\",\n                        timer: 2000,\n                        button: false\n                    })\n\n                }\n                // if(response.status == 200 && response.data.rows == 'error'){\n                //     swal({\n                //         title: \"Error\",\n                //         text: \"User doesn't exist\",\n                //         // icon: \"{response.status == 200 ? 'warning ':'success'}\",\n                //         timer: 2000,\n                //         button: false\n                //     })\n\n                // }\n                else if (response.status == 201) {\n                    swal({\n                        title: \"Done!\",\n                        text: response.data,\n                        // icon: \"{response.status == 200 ? 'warning ':'success'}\",\n                        timer: 2000,\n                        button: false\n                    })\n                }\n\n            })\n            .catch(function (error) {\n                console.log(error);\n                self.handleClose();\n            });\n\n\n\n        /////////////////// redirect to dashboard\n        // login(user).then(res => {\n        //     if (res) {\n        //         this.props.history.push(`\\profile`)\n        //     }\n        // })\n    }\n    onUpdate(e) {\n        e.preventDefault();\n        const userdetail = {\n            id:this.state.id,\n            user:this.state.edituser,\n            broker: this.state.editserver,\n            alias: this.state.editalias\n        }\n        let self = this;\n        axios.post(config.baseurl + '/users/updateuser', userdetail)\n            .then(function (response) {\n                if (response.status == 200) {\n                    // self.setState({ accountlist: response.data.rows })\n                    self.fectheAllAccount();\n                    self.handleCloseEdit();\n\n                }\n\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    // checkValidUser = ()=> {\n    //     console.log(this.state,'loginnnnnnnnnnnnnnnnnnnnnnnn')\n    //     const userdetail = {\n    //         login: this.state.login,\n    //         password: this.state.password,\n    //         broker: this.state.broker,\n    //         alias: this.state.alias\n    //     }\n    //     axios.get(config.baseurl + '/accounts/matchUser',userdetail)\n    //     .then(function (response) {\n\n    //         if (response.status == 200) {\n    //             // alert(response.data)\n    //             swal({\n    //                 title: \"Done!\",\n    //                 text: response.data,\n    //                 // icon: \"{response.status == 200 ? 'warning ':'success'}\",\n    //                 timer: 2000,\n    //                 button: false\n    //             })\n\n    //         }\n    //         // console.log(response);\n    //     })\n    //     .catch(function (error) {\n    //         console.log(error);\n    //     });\n    // }\n    toogle = () => {\n        this.setState({  loginForm: !this.state.loginForm,  })\n        this.setState({ login: '', password:'', broker:'', alias:''  })\n\n    }\n    handleClose = () => {\n        this.setState({ loginForm: false })\n        \n    }\n    handleCloseEdit = () => {\n        this.setState({ editForm: false })\n    }\n    handleCloseDetail = () => {\n        this.setState({ detailForm: false })\n    }\n    handleShow = () => {\n        this.setState({ setShow: true })\n    }\n    componentDidMount() {\n        this.fectheAllAccount();\n        // let self = this;\n        // axios.get(config.baseurl + '/users/allAccounts')\n        //     .then(function (response) {\n        //         console.log(response.data.rows,'response.data.rows');\n                \n        //         if (response.status == 200) {\n        //             self.setState({ accountlist: response.data.rows })\n        //         }\n        //     })\n    }\n    createTr = () => {\n        return this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => {\n            return (\n                <tr key={index}>\n                    <th scope=\"row\">{index + 1}</th>\n                    <td>{item.login}</td>\n                    <td>{item.broker}</td>\n                    <td>{item.alias}</td>\n                    <td style={{fontWeight:600}}>{item.launched == 1 ? 'Connected': 'Disconnected'}</td>\n                    <td>\n                        <a href=\"\" onClick={(e)=> this.viewFilter(e,item)}><i className=\"fa fa-eye\" aria-hidden=\"true\"></i></a>\n                        <a href=\"\" onClick={(e)=> this.editFilter(e,item)}><i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i></a>\n                        {/* <a href=\"\" onClick={(e)=> this.deleteFilter(e,item)}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></a> */}\n                        </td>\n                </tr>\n            )\n        })\n    }\n    editFilter(e, data){\n        e.preventDefault();\n        this.setState({editForm:true, editData:data, id:data.id, edituser:data.login, editserver:data.broker, editalias:data.alias})\n    }\n    editAlias(e){\n        this.setState({editalias:e.target.value})\n    }\n    viewFilter(e, data){\n        e.preventDefault();\n        this.setState({detailForm:true,edituser:data.login, editserver:data.broker, editalias:data.alias, editstatus:data.status})\n    }\n    render() {\n\n        return (\n            <div className=\"content\">\n                <Grid fluid>\n                    <Row>\n                        <Col md={12} sm={6}>\n                            <div className=\"terminal-box\">\n                                <span className=\"terminal-text\">Terminal Accounts</span>\n                                {/* <div style={{ padding: '20px' }}>\n                                    <a\n                                        onClick={() => this.deleteThisGoal()}\n                                        className='btn btn-danger'\n                                    >\n                                        <i className=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete Goal\n                                     </a>\n                                    {this.state.alert}\n                                </div> */}\n                            </div>\n                            {this.state.loginForm &&\n                                <Modal show={this.state.show} onHide={this.handleClose}>\n                                    {/* <Modal.Header closeButton>\n                                        <Modal.Title>Log In</Modal.Title>\n                                    </Modal.Header> */}\n                                    <Modal.Body>\n                                        <div className=\"form-box\">\n                                            <Modal.Header closeButton>\n                                                <Modal.Title className=\"text-center\"><b>Log In</b></Modal.Title>\n                                            </Modal.Header>\n                                            <form style={{ marginTop: '20px' }} onSubmit={this.onSubmit}>\n                                                <label>User Name</label>\n                                                <input className=\"Itext\" placeholder=\"User Name\"  name=\"login\" value={this.state.login} onChange={this.onChange} disabled={this.state.currentAddLogin ? true : false}\n                                                // onKeyUp={this.checkValidUser}\n                                                ></input>\n                                                {this.state.shwPwd &&\n                                                    <div>\n                                                        <span>Fill login field</span>\n                                                    </div>\n                                                }\n                                                {this.state.shwMsg &&\n                                                    <div>\n                                                        <span>Invalid login</span>\n                                                    </div>\n                                                }\n                                                <label>Password</label>\n                                                <input className=\"Itext\" placeholder=\"Password\" name=\"password\" type=\"password\" value={this.state.password} onChange={this.onChange} disabled={this.state.currentAddLogin ? true : false}></input>\n\n\n                                                <label>Server</label>\n                                                <input className=\"Itext\" name=\"broker\" placeholder=\"Server\" value={this.state.broker} onChange={this.onChange} disabled={this.state.currentAddBroker ? true : false}></input>\n                                                <label>Alias</label>\n                                                <input className=\"Itext\" placeholder=\"Alias\" value={this.state.alias} onChange={this.onChange} name=\"alias\"></input>\n                                                {this.state.timerShow &&\n                                                <p>\n                                                    Connecting to server... {timerWait} seconds remains\n                                                </p>\n                                                }\n                                                <div className=\"clearfix\">\n                                                    {this.state.tryAgainConnection === false ?\n                                                    (\n                                                        this.state.timerShow == false && \n                                                        <button type=\"submit\" className=\"save\">Submit</button>\n                                                    )\n                                                    :\n                                                    (this.state.timerShow == false && <div className=\"save\" onClick={() => this.tryAgainConnectionFun()}>Try again</div>)\n                                                    }\n                                                </div>\n                                            </form>\n                                        </div>\n\n                                    </Modal.Body>\n                                    {/* <Modal.Footer>\n                                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                                            Close\n                                  </Button>\n                                        \n                                    </Modal.Footer> */}\n                                </Modal>\n\n                            }\n                        </Col>\n                    </Row>\n                    <div style={{ background: '#ffffff' }}>\n                        <Row>\n                            <Col md={12}>\n                                <div style={{ padding: '10px' }}>\n                                    <table className=\"table table-striped\">\n                                        <thead>\n                                            <tr>\n                                                <th scope=\"col\">Sr.No.</th>\n                                                <th scope=\"col\">User Name</th>\n                                                <th scope=\"col\">Server</th>\n                                                <th scope=\"col\">Alias</th>\n                                                <th scope=\"col\">Status</th>\n                                                <th scope=\"col\">Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {/* {this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => { */}\n                                            {/* // console.log(\"hhhhhhhhhhh\") */}\n                                            {this.createTr()}\n                                            {/* })} */}\n                                            {/* <tr>\n                                                <th scope=\"row\">2</th>\n                                                <td>Jacob</td>\n                                                <td>Thornton</td>\n                                                <td>5.1.2.9</td>\n                                                <td>Connected</td>\n                                            </tr>\n                                            <tr>\n                                                <th scope=\"row\">3</th>\n                                                <td>Larry</td>\n                                                <td>the Bird</td>\n                                                <td>ab@123</td>\n                                                <td>Connected</td>\n                                            </tr> */}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </Col>\n                            <div className=\"centerbtn\">\n                            <button className=\"pull-right add-button\" onClick={this.toogle}>Add New</button>\n                            </div>\n\n                        </Row>\n                    </div>\n\n                </Grid>\n\n                {this.state.editForm &&\n                                <Modal show={this.state.show} onHide={this.handleCloseEdit}>\n                                    {/* <Modal.Header closeButton>\n                                        <Modal.Title>Log In</Modal.Title>\n                                    </Modal.Header> */}\n                                    <Modal.Body>\n                                        <div className=\"form-box\">\n                                            <Modal.Header closeButton>\n                                                <Modal.Title className=\"text-center\"><b>Edit</b></Modal.Title>\n                                            </Modal.Header>\n                                            <form style={{ marginTop: '20px' }} onSubmit={this.onUpdate}>\n                                            <label>USER</label>\n                                                <input className=\"Itext\" name=\"broker\" placeholder=\"Server\" value={this.state.edituser} disabled></input>\n                                                \n                                                <label>Server</label>\n                                                <input className=\"Itext\" name=\"broker\" placeholder=\"Server\" value={this.state.editserver} disabled></input>\n                                                <label>Alias</label>\n                                                <input className=\"Itext\" placeholder=\"Alias\" value={this.state.editalias}  name=\"alias\" onChange={(e)=>this.editAlias(e)}></input>\n                                                <div className=\"clearfix\">\n                                                    <button type=\"submit\" className=\"save\">Update</button>\n                                                </div>\n                                            </form>\n                                        </div>\n\n                                    </Modal.Body>\n                                    {/* <Modal.Footer>\n                                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                                            Close\n                                  </Button>\n                                        \n                                    </Modal.Footer> */}\n                                </Modal>\n\n                            }\n\n{this.state.detailForm &&\n                                <Modal show={this.state.show} onHide={this.handleCloseDetail}>\n                                    {/* <Modal.Header closeButton>\n                                        <Modal.Title>Log In</Modal.Title>\n                                    </Modal.Header> */}\n                                    <Modal.Body>\n                                        <div className=\"form-box\">\n                                            <Modal.Header closeButton>\n                                                <Modal.Title className=\"text-center\"><b>Details</b></Modal.Title>\n                                            </Modal.Header>\n                                            <div className=\"detail_div\">\n                                                <table>\n                                                    <tr>\n                                                        <td><label>User Name</label></td>\n                                                        <td><label>{this.state.edituser}</label></td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td><label>Server</label></td>\n                                                        <td><label>{this.state.editserver}</label></td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td><label>Alias</label></td>\n                                                        <td><label>{this.state.editalias}</label></td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td><label>Status</label></td>\n                                                        <td><label>{this.state.editstatus == 1 ?'Connected': 'Disconnected'}</label></td>\n                                                    </tr>\n                                                </table>\n                                            </div>\n                                        </div>\n\n                                    </Modal.Body>\n                                </Modal>\n\n                            }\n\n\n            </div >\n        );\n    }\n}\n\nexport default Innerlogin;","import React, { Component } from \"react\";\n// import ChartistGraph from \"react-chartist\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport TableList from '../views/TableList';\n// import { Card } from \"components/Card/Card.jsx\";\n// import { StatsCard } from \"components/StatsCard/StatsCard.jsx\";\n// import { Tasks } from \"components/Tasks/Tasks.jsx\";\nimport NumberFormat from 'react-number-format';\nimport Data from './Data';\n// import {\n//   dataPie,\n//   legendPie,\n//   dataSales,\n//   optionsSales,\n//   responsiveSales,\n//   legendSales,\n//   dataBar,\n//   optionsBar,\n//   responsiveBar,\n//   legendBar\n// } from \"variables/Variables.jsx\";\nimport config from '../constant/config.js';\nconst axios = require('axios');\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      details: [],\n      accountlist: [],\n      persons: [],\n      filterlist: [],\n      formData: [],\n      errorMassege: false,\n      error: '',\n      // allSymbols:[],\n      // symbolsObj:[]\n    }\n  }\n  createLegend(json) {\n    var legend = [];\n    for (var i = 0; i < json[\"names\"].length; i++) {\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\n      legend.push(<i className={type} key={i} />);\n      legend.push(\" \");\n      legend.push(json[\"names\"][i]);\n    }\n    return legend;\n  }\n\n  getAllAccounts = () => {\n    let self = this;\n    axios.get(config.baseurl + '/accounts/fetchAllAccounts')\n    .then(function (response) {\n      if (response.status == 200) {\n        self.setState({ accountlist: response.data.rows })\n      }\n    });\n  }\n\n  fetchActivefilterData = () => {\n    let self = this;\n    axios.get(config.baseurl + '/filter/fetchActivefilterdata')\n      .then(function (response) {\n        if (response.status == 200) {\n          self.setState({ filterlist: response.data.rows })\n\n          if (self.state.filterlist.length == 0) {\n            self.setState({ errorMassege: true })\n          }\n        }\n      });\n  }\n\n  componentWillMount() {\n    this.getAllAccounts();\n    this.fetchActivefilterData();\n    // axios.get(config.baseurl + '/filter/fetchfilterdata')\n    // .then(function (response) {\n    //   console.log(response.data,'hghghjghghj')\n    //   if (response.status == 200) {\n    //     // self.setState({ formData: response.data.rows })\n    //     // console.log(formData);\n\n    //     response.data.rows.map((item, index) => {\n    //       console.log(item,'item');\n    //         if (item.status==1){\n    //           self.setState({errorMassege: false},()=>{\n    //             console.log(self.state, \"display\");\n\n    //           })\n    //           // console.log(self.state.errorMassege);\n\n\n    //         }\n\n    //     })\n    //   }\n    // });\n    // axios.get(config.baseurl + '/filter/fetchfilterdata')\n    // .then(function (response) {\n    //   if (response.status == 200) {\n    //     self.setState({ filterlist: response.data.rows })\n    //   }\n    // })\n\n    // axios.get(config.baseurl + '/filter/fetchActivefilterdata')\n    // .then(function (response) {\n    //   if (response.status == 200) {\n\n    //     if(response.data.rows && response.data.rows.length>0){\n    //       let symbolsObj = (response.data.rows[0].symbols).map(data => {\n    //         return ({value:data, label:data})\n    //       })\n    //       self.setState({ filterlist: response.data.rows, allSymbols: response.data.rows[0].symbols, symbolsObj:symbolsObj })\n    //     }\n    //   }\n    // });\n    \n  }\n\n  showData = (accountDetailValue) => {\n\n    //    if (this.state.accountDetailValue == null || this.state.accountDetailValue == '') {\n    //     this.setState({ error: 'accountDetailValue' })\n    //     return\n    //  }\n    //  else{\n    //     this.setState({error:''})\n    // }\n    // return this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => {\n    //   if(accountDetailValue==='margin_level'){\n    //       return (\n    //         <td className={index !== (this.state.accountlist.length - 1) ? 'tdClr2 tdClr' : 'tdClr2'} key={index}>\n    //         {item.accounts_details[0][accountDetailValue]} %</td>\n    //       )\n    //   }\n    //   return (\n    //     <td className={index !== (this.state.accountlist.length - 1) ? 'tdClr2 tdClr' : 'tdClr2'} key={index}>\n    //     {item.accounts_details[0].currency == 'USD' ? '$' : ''} {item.accounts_details[0][accountDetailValue]}</td>\n    //   )\n    // })\n    return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\n      if (accountDetailValue === 'margin_level') {\n        return (\n          <>\n            <td className=\"tdClr2 tdClr\" key={index}> \n              <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true}  decimalScale={2} /> %\n            </td>\n            <td className=\"tdClr2\" key={index}>\n              {/* {item.accountToInfo[0].accounts_details[0][accountDetailValue]} % */}\n              <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true}  decimalScale={2} /> %\n            </td>\n          </>\n        )\n      }\n      if (item.accountFromInfo.length > 0) {\n        return (\n          <>\n            <td className=\"tdClr2 tdClr\" key={index}>\n              {item.accountFromInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''}  {' '}\n              <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true}  decimalScale={2} />\n            </td>\n\n            <td className=\"tdClr2\" key={index}>\n              {item.accountToInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''} {' '}\n              {/* {item.accountToInfo[0].accounts_details[0][accountDetailValue]} */}\n              <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n            </td>\n          </>\n        )\n\n      }\n\n    })\n  }\n  tableHeader = () => {\n\n    // return this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => {\n    //   return (\n    //     <th key={index} className={item.accounts_details[0].account_id == 1 && index !== (this.state.accountlist.length - 1) ? 'bText colorDarkBlue text-center tdClr2 tdClr' : 'bText colorDarkBlue text-center tdClr2'}>\n    //       <span>\n    //         {item.login}\n    //       </span>\n    //     <div className=\"colorDarkBlue\" style={{fontSize:10}}> \n    //       ({(item.alias!=null) ? item.alias : '-'})\n    //     </div>\n    //     </th>\n\n    //   )\n    // }\n    // )\n    return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\n      return (\n        <>\n          <th key={index} className=\"bText colorDarkBlue text-center tdClr2 tdClr\">\n            <span>\n              {item.accountFromInfo[0].login}\n            </span>\n            <div className=\"colorDarkBlue\" style={{ fontSize: 10 }}>\n              ({(item.accountFromInfo[0].alias != null) ? item.accountFromInfo[0].alias : '-'})\n          </div>\n          </th>\n          <th key={index} className=\"bText color2 text-center tdClr2\">\n            <span>\n              {item.accountToInfo[0].login}\n            </span>\n            <div className=\"color2\" style={{ fontSize: 10 }}>\n              ({(item.accountToInfo[0].alias != null) ? item.accountToInfo[0].alias : '-'})\n          </div>\n          </th>\n        </>\n\n      )\n\n    })\n  }\n\n  render() {\n    return (\n\n      <div className=\"content\">\n        {this.state.errorMassege == true &&\n          <div className=\"popup\">\n            <div class=\"card w-75 \">\n              <div class=\"card-body\">\n                <p class=\"card-text popuptext\" >Please Select Filters To Continue...</p>\n              </div>\n            </div>\n          </div>}\n\n\n        {this.state.errorMassege != true &&\n          <Grid fluid>\n            <Row>\n              <Col md={12} sm={6}>\n                <div className=\"terminal-box\">\n                  {(this.state.errorMassege) && <p style={{ color: 'red', fontSize: '10px' }}>Please Select Any Account</p>}\n                  <span className=\"terminal-text\">Terminal Statistics</span>\n                </div>\n              </Col>\n            </Row>\n            <Row style={{ margin: '20px 0px' }}>\n\n              <Row>\n                {Data.dashBoardPage.items.map((item, index) =>\n\n                  <Col md={4} sm={6} key={index}>\n                    <div style={{ margin: '30px 0px' }} className=\"text-center\">\n                      <span className=\"bText\">{item.title}</span>\n                    </div>\n                    <div className=\"balance-box Pmargin\"\n                    // className={item.id == '1' ? 'balance-box' : item.id == '2' ?\n                    //   'balance-box Pmargin' : item.id == '3' ? 'balance-box equity-box' :\n                    //     item.id == '4' ? 'balance-box Fmargin' : item.id == '5' ? 'balance-box floating' : 'balance-box  margin-box'}\n                    >\n                      <div className=\"content\">\n                        <div className=\"table-responsive\">\n\n                          <table className=\"table  text-center\">\n\n                            <tbody>\n                              <tr>\n                                {this.tableHeader()}\n                              </tr>\n                              <tr>\n                                {item.title == 'Balance' && this.showData('balance')}\n                                {item.title == 'Equity' && this.showData('equity')}\n                                {item.title == 'Margin' && this.showData('margin')}\n                                {item.title == 'Free Margin' && this.showData('free_margin')}\n                                {item.title == 'Margin %' && this.showData('margin_level')}\n\n                                {item.title == 'Floating P/L' && this.showData('profit')}\n                              </tr>\n                            </tbody>\n                          </table>\n\n                        </div>\n                      </div>\n                    </div>\n                  </Col>\n\n                )}\n              </Row>\n\n              {/* \n            <Row>\n              <Col md={4}>\n                <Row>\n                  <Col md={6}>\n                    <Row>\n                      <Col md={2}>\n                        <div>\n                          <div>\n                            <div>\n                              <span>Logn in</span>\n                            </div>\n                            <div>\n                              <span>Balance</span>\n                            </div>\n                          </div>\n                        </div>\n                      </Col>\n                      <Col md={2}>\n                        <div>\n                          <div>\n                            <div>\n                              <span>Logn in</span>\n                            </div>\n                            <div>\n                              <span>Balance</span>\n                            </div>\n                          </div>\n                        </div>\n                      </Col>\n                      <Col md={2}>\n                        <div>\n                          <div>\n                            <div>\n                              <span>Logn in</span>\n                            </div>\n                            <div>\n                              <span>Balance</span>\n                            </div>\n                          </div>\n                        </div>\n                      </Col>\n                    </Row>\n\n                  </Col>\n                </Row>\n              </Col>\n            </Row> */}\n\n            </Row>\n            <Row>\n              <Col md={12} sm={6}>\n                <div className=\"terminal-box\">\n                  <span className=\"terminal-text\">Statistics Per Symbol</span>\n                </div>\n              </Col>\n            </Row>\n            <Row>\n              <TableList />\n            </Row>\n          </Grid>\n        }\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport config from '../../constant/config.js';\nimport Select from 'react-select'\nimport { createLogicalAnd } from 'typescript';\nconst axios = require('axios');\n\nclass FilterEdite extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedAccountOption: null,\n            selectedSymbolOption: null,\n            selectedSymbolOptionTo: null,\n            selectedAccountOptionTo: null,\n            startDate: null,\n            endDate: null,\n            startDateTo: null,\n            endDateTo: null,\n            allAccounts: [],\n            allSymbols: [],\n            profileName: '',\n            id: '',\n            error: ''\n\n        };\n\n\n    }\n    componentWillMount() {\n        let self = this;\n        axios.get(config.baseurl + '/accounts/fetchAllAccounts')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ allAccounts: response.data.rows })\n                }\n            })\n        axios.get(config.baseurl + '/accounts/fetchAllSymbol')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ allSymbols: response.data.rows })\n                }\n            })\n    }\n    componentDidMount() {\n\n        if (this.props.data) {\n            let abc = this.props.data;\n            let from_symbol = JSON.parse(abc.from_symbols);\n            let to_symbol = JSON.parse(abc.to_symbols);\n\n            let all_from_symbols = from_symbol.map(data => { return ({ value: data, label: data }) });\n            let all_to_symbols = to_symbol.map(data => { return ({ value: data, label: data }) });\n\n            from_symbol = from_symbol.join(', ');\n            to_symbol = to_symbol.join(', ');\n            this.setState({\n                id: abc.id,\n                profileName: abc.profile_name,\n                selectedAccountOption: ({ value: abc.accountFromInfo[0].id, label: abc.accountFromInfo[0].login }),\n                selectedAccountOptionTo: ({ value: abc.accountToInfo[0].id, label: abc.accountToInfo[0].login }),\n                selectedSymbolOption: all_from_symbols,\n                selectedSymbolOptionTo: all_to_symbols,\n                startDate: new Date(abc.startdateFrom),\n                endDate: new Date(abc.enddateFrom),\n                startDateTo: new Date(abc.startdateTo),\n                endDateTo: new Date(abc.enddateTo),\n            })\n        }\n    }\n    handleDropdownChange = (e) => {\n        this.setState({ selectValue: e.target.value });\n    }\n    handleChangeDate = date => {\n        this.setState({\n            startDate: date\n        });\n    }\n    handleEndDate = date => {\n\n        this.setState({\n            endDate: date\n        });\n    }\n    handleChangeDateTo = date => {\n        this.setState({\n            startDateTo: date\n        });\n    }\n    handleEndDateTo = date => {\n        this.setState({\n            endDateTo: date\n        });\n    }\n    handleChange = (event) => {\n        this.setState({ value: Array.from(event.target.selectedOptions, (item) => item.value) });\n    }\n\n    renderAccountSelect = () => {\n        const { selectedAccountOption, allAccounts } = this.state;\n\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account...\"\n                value={selectedAccountOption}\n                onChange={this.handleChangeAccount}\n                options={options}\n                rules={{ required: 'Please select an option' }}\n            />\n        )\n    }\n\n    handleChangeAccountTo = selectedAccountOptionTo => {\n        this.setState({ selectedAccountOptionTo });\n    };\n    renderAccountSelectTo = () => {\n        const { selectedAccountOptionTo, allAccounts } = this.state;\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account...\"\n                value={selectedAccountOptionTo}\n                onChange={this.handleChangeAccountTo}\n                options={options}\n            />\n        )\n    }\n\n    handleChangeAccount = selectedAccountOption => {\n        this.setState({ selectedAccountOption });\n    };\n    handleChangeSymbol = selectedSymbolOption => {\n        this.setState({ selectedSymbolOption });\n    };\n    renderSymbolSelect = () => {\n        const { selectedSymbolOption, allSymbols } = this.state;\n        let options = allSymbols.map(data => {\n            return { value: data.name, label: data.name };\n        })\n        return (\n            <Select\n                placeholder=\"Select Symbol...\"\n                value={selectedSymbolOption}\n                isMulti\n                onChange={this.handleChangeSymbol}\n                options={options}\n            />\n        )\n    }\n    handleChangeSymbolTo = selectedSymbolOptionTo => {\n        this.setState({ selectedSymbolOptionTo });\n    };\n    renderSymbolSelectTo = () => {\n        const { selectedSymbolOptionTo, allSymbols } = this.state;\n        let options = allSymbols.map(data => {\n            return { value: data.name, label: data.name };\n        })\n        return (\n            <Select\n                placeholder=\"Select Symbol...\"\n                value={selectedSymbolOptionTo}\n                isMulti\n                onChange={this.handleChangeSymbolTo}\n                options={options}\n            />\n        )\n    }\n\n    handleprofileName(e) {\n        \n        this.setState({ profileName: e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1), error: '' })\n        \n\n    }\n    formDataSubmit(e) {\n        e.preventDefault();\n        let self = this;\n        if (this.state.profileName == null || this.state.profileName == '') {\n            this.setState({ error: 'profileName' })\n            return\n        }\n        else if (this.state.selectedAccountOption == null || this.state.selectedAccountOption == '') {\n            this.setState({ error: 'accountoption' })\n            return\n        } else if (this.state.startDate == null || this.state.startDate == '') {\n            this.setState({ error: 'startdate' })\n            return\n        } else if (this.state.selectedSymbolOption == null || this.state.selectedSymbolOption == '') {\n            this.setState({ error: 'symbolselect' })\n            return\n        }\n        else if (this.state.selectedAccountOptionTo == null || this.state.selectedAccountOptionTo == '') {\n            this.setState({ error: 'accountoptionto' })\n            return\n        } else if (this.state.startDateTo == null || this.state.startDateTo == '') {\n            this.setState({ error: 'startDateTo' })\n            return\n        }\n        else if (this.state.selectedSymbolOptionTo == null || this.state.selectedSymbolOptionTo == '') {\n            this.setState({ error: 'selectedSymbolOptionTo' })\n            return\n        }\n        else {\n            this.setState({ error: '' })\n        }\n        let fromSymbol = this.state.selectedSymbolOption;\n        let toSymbol = this.state.selectedSymbolOptionTo;\n\n        let symbolFrom = fromSymbol.map((data) =>  data.value)\n        let symbolto = toSymbol.map((data) => data.value)\n        let Data = {\n            id: this.state.id,\n            profile_name: this.state.profileName,\n            from_account_id: this.state.selectedAccountOption.value,\n            to_account_id: this.state.selectedAccountOptionTo.value,\n            startdateFrom: this.state.startDate,\n            enddateFrom: this.state.endDate,\n            startdateTo: this.state.startDateTo,\n            enddateTo: this.state.endDateTo,\n            from_symbols: JSON.stringify(symbolFrom),\n            to_symbols: JSON.stringify(symbolto),\n            createdAt: new Date(),\n            updatedAt: new Date(),\n\n        }\n        axios.post(config.baseurl + '/filter/updatefilterdatafull', Data)\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.props.onHide()\n\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n\n    }\n    crossClick(e) {\n        e.preventDefault();\n        this.props.onHide()\n    }\n\n    render() {\n        return (\n            <div className=\"content\">\n                <Grid fluid>\n                    <div className=\"symbol-box\">\n                        <div className=\"cross_div\"><a onClick={(e) => this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\n                        <div className=\"terminal-text\" >\n                            <p className=\"profilename pnameadjust\"> Profile Name</p>\n                            <input type=\"text\" name=\"profilename\" value={this.state.profileName} className=\"Itext\" onChange={(e) => this.handleprofileName(e)} />\n                            {(this.state.error == 'profileName') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Fill Your Profile Name </p>}\n\n                        </div>\n                        <form>\n                            <Row>\n                                <Col md={6}>\n                                    <div className=\"card\">\n                                        <div style={{ padding: '10px 20px 0px' }}>\n                                            <span style={{ fontWeight: 'bold' }}>Account A</span>\n                                        </div>\n                                        <table className=\"table mt20\">\n                                            <tbody>\n                                                <tr>\n                                                    <td className=\"b-clr\">\n                                                        <span className=\"accnt\">Account :</span>\n                                                    </td>\n\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        {this.renderAccountSelect()}\n                                                        {(this.state.error == 'accountoption') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">From:  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            selected={this.state.startDate}\n                                                            onChange={this.handleChangeDate}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDate}\n                                                            endDate={this.state.endDate}\n                                                            strictParsing\n                                                        />\n                                                        {(this.state.error == 'startdate') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">To :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            selected={this.state.endDate}\n                                                            onChange={this.handleEndDate}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDate}\n                                                            endDate={this.state.endDate}\n                                                        />\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">Symbol :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        {this.renderSymbolSelect()}\n                                                        {(this.state.error == 'symbolselect') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\n\n                                                    </td>\n                                                </tr>\n\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </Col>\n                                <Col md={6}>\n                                    <div className=\"card\">\n                                        <div style={{ padding: '10px 20px 0px' }}>\n                                            <span style={{ fontWeight: 'bold' }}>Account B</span>\n                                        </div>\n\n                                        <table className=\"table mt20\">\n                                            <tbody>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">Account :</span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        {this.renderAccountSelectTo()}\n                                                        {(this.state.error == 'accountoptionto') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">From:  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            selected={this.state.startDateTo}\n                                                            onChange={this.handleChangeDateTo}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDateTo}\n                                                            endDate={this.state.endDateTo}\n                                                            strictParsing\n                                                        />\n                                                        {(this.state.error == 'startDateTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">To :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            selected={this.state.endDateTo} selectedAccountOptionTo\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDateTo}\n                                                            endDate={this.state.endDateTo}\n                                                        />\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr\">\n                                                        <span className=\"accnt\">Symbol :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        {this.renderSymbolSelectTo()}\n                                                        {(this.state.error == 'selectedSymbolOptionTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\n\n\n                                                    </td>\n                                                </tr>\n\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </Col>\n                            </Row>\n                            <div className=\"save_button_filter\">\n                                <Button className=\"btn-primary\" variant=\"primary\" size=\"lg\" block onClick={(e) => this.formDataSubmit(e)}>\n                                    Update\n                        </Button>\n                            </div>\n                        </form>\n                    </div>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default FilterEdite;\n","import React, { Component } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\nvar moment = require('moment');\n\nclass FilterDetail extends Component {\n  constructor(props) {\n      super(props);\n      this.state = {};\n  }\ncrossClick(e){\n  e.preventDefault();\n  this.props.onHide()\n}\n\nrender() {\n  let data = this.props.data;\n  let from_symbol = JSON.parse(data.from_symbols);\n  let to_symbol = JSON.parse(data.to_symbols);\n  from_symbol = from_symbol.join(', ');\n  to_symbol = to_symbol.join(', ');\n    return (\n        <div className=\"content\">\n            <Grid fluid>\n                <div className=\"symbol-box\">\n                  <div className=\"cross_div\"><a onClick={(e)=> this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\n                    <div className=\"detail-text\"><h3> {data.profile_name} </h3></div>\n                    <Row>\n                        <Col md={6}>\n                            <div className=\"card\">\n                            <div className=\"detail_account\" style={{padding:'10px 20px 0px'}}>\n                                <span  style={{fontWeight:'bold'}}>Account A</span>\n                                </div>\n                                <table className=\"table mt20\">\n                                    <tbody>\n                                        <tr>\n                                            <td className=\"b-clr\">\n                                                <span>Account :</span>\n                                            </td>\n            \n                                            <td className=\"b-clr text-center\" style={{width:'40%'}}>\n                                                {data.accountFromInfo[0].login}\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td className=\"b-clr \">\n                                                <span>From :  </span>\n                                            </td>\n                                            <td className=\"b-clr text-center datepicker_filter\">\n                                            {moment(data.startdateFrom).format(\"DD/MM/YYYY\")}\n                                              \n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td className=\"b-clr \">\n                                                <span>To :  </span>\n                                            </td>\n                                            <td className=\"b-clr text-center datepicker_filter\">\n                                            {moment(data.enddateFrom).format(\"DD/MM/YYYY\")}\n                                                \n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td className=\"b-clr \">\n                                                <span>Symbol :  </span>\n                                            </td>\n                                            <td className=\"b-clr text-center\" style={{width:'40%'}}>\n                                               {from_symbol}\n                                            </td>\n                                        </tr>\n\n                                    </tbody>\n                                </table>\n                            </div>\n                        </Col>\n                        <Col md={6}>\n                            <div className=\"card\">\n                            <div className=\"detail_account\" style={{padding:'10px 20px 0px'}}>\n                                <span  style={{fontWeight:'bold'}}>Account B</span>\n                                </div>\n                            \n                                <table className=\"table mt20\">\n                                    <tbody>\n                                        <tr>\n                                            <td className=\"b-clr \">\n                                                <span>Account :</span>\n                                            </td>\n                                            <td className=\"b-clr text-center\"  style={{width:'40%'}}>\n                                            {data.accountToInfo[0].login}\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td className=\"b-clr \">\n                                                <span>From :  </span>\n                                            </td>\n                                            <td className=\"b-clr text-center datepicker_filter\">\n                                            {moment(data.startdateTo).format(\"DD/MM/YYYY\")}\n                                                \n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td className=\"b-clr \">\n                                                <span>To :  </span>\n                                            </td>\n                                            <td className=\"b-clr text-center datepicker_filter\">\n                                              {moment(data.enddateTo).format(\"DD/MM/YYYY\")}\n                                               \n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td className=\"b-clr\">\n                                                <span>Symbol :  </span>\n                                            </td>\n                                            <td className=\"b-clr text-center\" style={{width:'40%'}}>\n                                               {to_symbol}\n                                            </td>\n                                        </tr>\n\n                                    </tbody>\n                                </table>\n                            </div>\n                        </Col>\n                    </Row>\n                </div>\n            </Grid>\n        </div>\n    );\n}\n}\n\nexport default FilterDetail;\n","import React, { Component } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\nimport Innerfilter from '../filter/innerfilter';\nimport FilterEdite from '../filter/filteredit';\nimport FilterDetail from '../filter/filterdetail';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport config from '../../constant/config.js';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\n\nconst axios = require('axios');\nvar moment = require('moment');\n\nclass Filterprofile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            Innerfilter: false,\n            filter: true,\n            filterData: [],\n            deleteData: [],\n            editeData: [],\n            showDelete: false,\n            showEdit: false,\n            detailForm: false,\n            detailData: [],\n        };\n\n        // this.handleDropdownChange = this.handleDropdownChange.bind(this);\n    }\n    fetchfilterdata() {\n        let self = this;\n        axios.get(config.baseurl + '/filter/fetchfilterdata')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ filterData: response.data.rows })\n                }\n            })\n    }\n    showInnerfilter = () => {\n        this.setState({ Innerfilter: true, filter: false })\n    }\n    componentDidMount() {\n        this.fetchfilterdata();\n        // let self = this;\n        // axios.get(config.baseurl + '/filter/fetchfilterdata')\n        //     .then(function (response) {\n        //         if (response.status == 200) {\n        //             self.setState({ filterData: response.data.rows })\n        //         }\n        //     })\n    }\n\n\n    createNotification = (profile_name, type) => {\n        NotificationManager.info( 'Profile Is Activated !',profile_name, 3000);\n\n    }\n\n    createWariningNotification = (profile_name, type) => {\n        NotificationManager.error( 'Profile Is Deactivated !', profile_name);\n    }\n\n    activateClick(e, data) {\n        e.preventDefault();\n        let Data = {\n            id: data.id,\n            status: 1\n        }\n        let self = this;\n        axios.post(config.baseurl + '/filter/updatefilterdata', Data)\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.fetchfilterdata();\n                    self.createNotification(data.profile_name, 'info');\n                    // self.setState({ filterData: response.data.rows })\n                }\n            })\n    }\n\n    //  App(){\n    //     const notify = () => toast(\"Wow so easy !\");\n\n    //     return (\n    //       <div>\n    //         <button onClick={notify}>Notify !</button>\n    //         <ToastContainer />\n    //       </div>\n    //     );\n    //   }\n\n    deactivateClick(e, data) {\n        e.preventDefault();\n        let Data = {\n            id: data.id,\n            status: 0\n        }\n        let self = this;\n        axios.post(config.baseurl + '/filter/updatefilterdata', Data)\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.fetchfilterdata();\n                    self.createWariningNotification(data.profile_name, 'error');\n                    // self.setState({ filterData: response.data.rows })\n                }\n            })\n    }\n    editFilter(e, data) {\n        e.preventDefault();\n        this.setState({ showEdit: true, editeData: data })\n    }\n\n    deleteFilter(e, data) {\n        e.preventDefault();\n        this.setState({ deleteData: data, showDelete: true })\n\n    }\n    deletepopupClick(e) {\n        e.preventDefault();\n        let Data = {\n            id: this.state.deleteData.id\n        }\n        let self = this;\n        axios.post(config.baseurl + '/filter/deletefilter', Data)\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ showDelete: false })\n                    self.fetchfilterdata();\n                }\n            })\n    }\n    deletepopupclose(e) {\n        e.preventDefault();\n        this.setState({ showDelete: false })\n    }\n    viewFilter(e, data) {\n        e.preventDefault();\n        this.setState({ detailForm: true, detailData: data })\n    }\n\n    createTr = () => {\n        return this.state.filterData.length > 0 && this.state.filterData.map((item, index) => {\n            return (\n                <tr key={index}>\n                    <th scope=\"row\">{index + 1}</th>\n                    <td>{item.profile_name}</td>\n                    <td>{moment(item.createdAt).format(\"DD/MM/YYYY\")}</td>\n                    {/* <td>{item.status == 1 ? 'Activated' : 'Deactivated' }</td> */}\n                    <td>{item.status == 0 ?\n                        <div className=\"activate_button pointer\"><span className=\"button_interactivate \" onClick={(e) => this.activateClick(e, item)}> Activate </span> </div>\n                        :\n                        <div className=\"deactivate_button pointer\"><span className=\"button_deactivate pointer\" onClick={(e) => this.deactivateClick(e, item)}>Deactivate</span></div>}</td>\n                    <td>\n                        <span onClick={(e) => this.viewFilter(e, item)}><i className=\"pointer fa fa-eye facolor\" aria-hidden=\"true\"></i></span>\n                        <span onClick={(e) => this.editFilter(e, item)}><i className=\"pointer fa fa-pencil-square-o facolor\" aria-hidden=\"true\"></i></span>\n                        {item.status == 0 &&\n                            <span onClick={(e) => this.deleteFilter(e, item)}><i className=\"pointer fa fa-trash facolor\" aria-hidden=\"true\"></i></span>\n                        }\n                    </td>\n                    {/* <td>{item.accountToInfo[0].login}</td>\n                    <td>{moment(item.startdateFrom).format(\"DD/MM/YYYY\") + ' - ' + moment(item.enddateFrom).format(\"DD/MM/YYYY\")}</td>\n                    <td>{moment(item.startdateTo).format(\"DD/MM/YYYY\") + ' - ' + moment(item.enddateTo).format(\"DD/MM/YYYY\")}</td>\n                    <td>{item.from_symbols}</td>\n                    <td>{item.to_symbols}</td> */}\n                    {/* <td style={{fontWeight:600}}>{item.status == 1 && 'Connected'}</td> */}\n                </tr>\n            )\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"content\">\n                {this.state.detailForm ?\n                    <FilterDetail\n                        data={this.state.detailData}\n                        show={this.state.detailForm}\n                        onHide={() => this.setState({ detailForm: false })}\n                    />\n                    :\n                    <>\n                        {this.state.showEdit ?\n                            <FilterEdite\n                                data={this.state.editeData}\n                                show={this.state.showEdit}\n                                // onHide={() => this.setState({ showEdit: false })}\n                                onHide={() => this.setState({ showEdit: false },  () => this.fetchfilterdata())}\n                            />\n                            :\n                            <>\n                                {!this.state.Innerfilter &&\n                                    <Grid fluid>\n                                        <div className=\"selection-box\">\n                                            <span className=\"terminal-text\"> Profiles </span>\n\n                                            {/* <span className=\"icon-style\">\n                            <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\n                        </span> */}\n                                            {/* <Link to=\"/innerfilter\">\n                       <button className=\"pull-right\">Add New</button>\n                       </Link> */}\n\n                                            <button className=\"pull-right filter-add-button\" onClick={this.showInnerfilter}>Add New</button>\n                                            {/* <Link to=\"/admin/innerfilter\">\n                       <button className=\"pull-right\">abc</button>\n                       </Link> */}\n                                        </div>\n                                    </Grid>\n                                }\n                                {\n                                    this.state.Innerfilter ?\n                                        <Innerfilter\n                                            show={this.state.Innerfilter}\n                                            onHide={() => this.setState({ Innerfilter: false }, () => {\n                                                this.fetchfilterdata();\n                                            })}\n                                        />\n                                        :\n                                        <div style={{ background: '#ffffff' }}>\n                                            <Row>\n                                                <Col md={12}>\n                                                    <div style={{ padding: '10px' }}>\n                                                        <table className=\"table table-striped\">\n                                                            <thead>\n                                                                <tr>\n                                                                    <th scope=\"col\">Sr.No.</th>\n                                                                    <th scope=\"col\">Profile Name</th>\n                                                                    <th scope=\"col\">Created At</th>\n                                                                    <th scope=\"col\">Status</th>\n                                                                    <th scope=\"col\">Action</th>\n                                                                </tr>\n                                                            </thead>\n                                                            <tbody>\n                                                                {/* {this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => { */}\n                                                               \n                                                                {this.createTr()}\n                                                                {/* })} */}\n                                                                {/* <tr>\n                                                <th scope=\"row\">2</th>\n                                                <td>Jacob</td>\n                                                <td>Thornton</td>\n                                                <td>5.1.2.9</td>\n                                                <td>Connected</td>\n                                            </tr>\n                                            <tr>\n                                                <th scope=\"row\">3</th>\n                                                <td>Larry</td>\n                                                <td>the Bird</td>\n                                                <td>ab@123</td>\n                                                <td>Connected</td>\n                                            </tr> */}\n                                                            </tbody>\n                                                        </table>\n                                                    </div>\n                                                </Col>\n                                            </Row>\n                                        </div>\n                                    //     <div className=\"filter_page_table\">\n                                    //     <table className=\"table table-striped\">\n                                    //         <thead>\n                                    //             <tr>\n                                    //                 <th scope=\"col\">Sr.No.</th>\n                                    //                 <th scope=\"col\">Profile Name</th>\n                                    //                 <th scope=\"col\">Created At</th>\n                                    //                 <th scope=\"col\">Status</th>\n                                    //                 <th scope=\"col\">Action</th>\n                                    //             </tr>\n                                    //         </thead>\n                                    //         <tbody>\n                                    //             {this.createTr()}\n                                    //         </tbody>\n                                    //     </table>\n\n                                    // </div>\n\n                                }\n\n                                {this.state.showDelete &&\n                                    <div className=\"delete_popup\">\n                                        <h3>Are you sure ?</h3>\n                                        <span className=\"pointer dltbtn\"  onClick={(e) => this.deletepopupClick(e)}>Delete</span>\n                                        <span className=\"pointer closebtn\" onClick={(e) => this.deletepopupclose(e)}>Close</span>\n                                    </div>\n                                }\n                            </>\n                        }\n                    </>\n                }\n\n\n                <NotificationContainer />\n            </div>\n        );\n    }\n}\n\nexport default Filterprofile;\n","import Dashboard from \"views/Dashboard.jsx\";\n// import UserProfile from \"views/UserProfile.jsx\";\n// import TableList from \"views/TableList.jsx\";\n// import Typography from \"views/Typography.jsx\";\n// import Icons from \"views/Icons.jsx\";\n// import Maps from \"views/Maps.jsx\";\n// import Notifications from \"views/Notifications.jsx\";\n// import Upgrade from \"views/Upgrade.jsx\";\n// import Filter from '../src/views/Filter';\nimport Innerlogin from 'views/Innerlogin';\nimport Filterprofile from './views/filter/Filterprofile';\nimport Swap from '../src/views/swap';\nconst dashboardRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"pe-7s-graph\",\n    component: Dashboard,\n    layout: \"/admin\",\n  },\n  // {\n  //   path: \"/filter\",\n  //   name: \"Filter\",\n  //   icon: \"pe-7s-filter\",\n  //   component: Filter,\n  //   layout: \"/admin\",\n  // },\n  {\n    path: \"/innerlogin\",\n    name: \"Login/Accounts\",\n    icon: \"pe-7s-note2\",\n    component: Innerlogin,\n    layout: \"/admin\"\n  },\n\n  {\n    path: \"/filterpage\",\n    name: \"Filter\",\n    icon: \"pe-7s-filter\",\n    component: Filterprofile,\n    layout: \"/admin\"\n  },\n\n  // {\n  //   path: \"/symbolmanaging\",\n  //   name: \"Symbol Managing\",\n  //   icon: \"pe-7s-science\",\n  //   // component: Filter,\n  //   layout: \"/admin\",\n  // },\n  {\n    path: \"/swap\",\n    name: \"Swap\",\n    icon: \"pe-7s-graph\",\n    component: Swap,\n    layout: \"/admin\",\n  },\n  // {\n  //   path: \"/user\",\n  //   name: \"User Profile\",\n  //   icon: \"pe-7s-user\",\n  //   component: UserProfile,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/table\",\n  //   name: \"Table\",\n  //   icon: \"pe-7s-note2\",\n  //   component: TableList,\n  //   layout: \"/admin\",\n    // for sub menu listing\n    // resources: [\n    //   {\n       \n    //     name: \"Table abc\",\n        \n    //   },\n    //   {\n       \n    //     name: 'React AHA Moments',\n       \n    //   }\n    // ]\n  // },\n  \n  // {\n  //   path: \"/typography\",\n  //   name: \"Typography\",\n  //   icon: \"pe-7s-news-paper\",\n  //   component: Typography,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/icons\",\n  //   name: \"Icons\",\n  //   icon: \"pe-7s-science\",\n  //   component: Icons,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/maps\",\n  //   name: \"Maps\",\n  //   icon: \"pe-7s-map-marker\",\n  //   component: Maps,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/notifications\",\n  //   name: \"Notifications\",\n  //   icon: \"pe-7s-bell\",\n  //   component: Notifications,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   upgrade: true,\n  //   path: \"/upgrade\",\n  //   name: \"Upgrade to PRO\",\n  //   icon: \"pe-7s-rocket\",\n  //   component: Upgrade,\n  //   layout: \"/admin\"\n  // }\n];\n\nexport default dashboardRoutes;\n","import React, { Component } from 'react'\n\nexport default class Swap extends Component {\n    render() {\n        return (\n            <div className=\"text-center\" style={{height:'50%'}}>\n                Coming Soon...\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport NotificationSystem from \"react-notification-system\";\n\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\n// import Footer from \"components/Footer/Footer\";\nimport Sidebar from \"components/Sidebar/Sidebar\";\n// import FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\n\nimport { style } from \"variables/Variables.jsx\";\n\nimport routes from \"routes.js\";\n\nimport image from \"assets/img/sidebar-3.jpg\";\n\nclass Admin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      _notificationSystem: null,\n      image: image,\n      color: \"black\",\n      hasImage: true,\n      fixedClasses: \"dropdown show-dropdown open\"\n    };\n  }\n  // handleNotificationClick = position => {\n  //   var color = Math.floor(Math.random() * 4 + 1);\n  //   var level;\n  //   switch (color) {\n  //     case 1:\n  //       level = \"success\";\n  //       break;\n  //     case 2:\n  //       level = \"warning\";\n  //       break;\n  //     case 3:\n  //       level = \"error\";\n  //       break;\n  //     case 4:\n  //       level = \"info\";\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  //   this.state._notificationSystem.addNotification({\n  //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n  //     message: (\n  //       <div>\n  //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n  //         every web developer.\n  //       </div>\n  //     ),\n  //     level: level,\n  //     position: position,\n  //     autoDismiss: 15\n  //   });\n  // };\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            render={props => (\n              <prop.component\n                {...props}\n                handleClick={this.handleNotificationClick}\n              />\n            )}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    // return \"Brand\";\n  };\n  handleImageClick = image => {\n    this.setState({ image: image });\n  };\n  handleColorClick = color => {\n    this.setState({ color: color });\n  };\n  handleHasImage = hasImage => {\n    this.setState({ hasImage: hasImage });\n  };\n  handleFixedClick = () => {\n    if (this.state.fixedClasses === \"dropdown\") {\n      this.setState({ fixedClasses: \"dropdown show-dropdown open\" });\n    } else {\n      this.setState({ fixedClasses: \"dropdown\" });\n    }\n  };\n  componentDidMount() {\n    let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    if(currentUser===null){\n        this.props.history.push('/login')\n        return;\n    }\n  //   this.setState({ _notificationSystem: this.refs.notificationSystem });\n  //   var _notificationSystem = this.refs.notificationSystem;\n  //   var color = Math.floor(Math.random() * 4 + 1);\n  //   var level;\n  //   switch (color) {\n  //     case 1:\n  //       level = \"success\";\n  //       break;\n  //     case 2:\n  //       level = \"warning\";\n  //       break;\n  //     case 3:\n  //       level = \"error\";\n  //       break;\n  //     case 4:\n  //       level = \"info\";\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  //   _notificationSystem.addNotification({\n  //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n  //     message: (\n  //       <div>\n  //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n  //         every web developer.\n  //       </div>\n  //     ),\n  //     level: level,\n  //     position: \"tr\",\n  //     autoDismiss: 15\n  //   });\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n    }\n    if (e.history.action === \"PUSH\") {\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <NotificationSystem ref=\"notificationSystem\" style={style} />\n        <Sidebar {...this.props} routes={routes} image={this.state.image}\n        color={this.state.color}\n        hasImage={this.state.hasImage}/>\n        <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getBrandText(this.props.location.pathname)}\n          />\n          <Switch>{this.getRoutes(routes)}</Switch>\n          {/* <Footer /> */}\n          {/* <FixedPlugin\n            handleImageClick={this.handleImageClick}\n            handleColorClick={this.handleColorClick}\n            handleHasImage={this.handleHasImage}\n            bgColor={this.state[\"color\"]}\n            bgImage={this.state[\"image\"]}\n            mini={this.state[\"mini\"]}\n            handleFixedClick={this.handleFixedClick}\n            fixedClasses={this.state.fixedClasses}\n          /> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Admin;\n","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/css/animate.min.css\";\nimport \"./assets/sass/light-bootstrap-dashboard-react.scss?v=1.3.0\";\nimport \"./assets/css/demo.css\";\nimport \"./assets/css/pe-icon-7-stroke.css\";\nimport \"./assets/css/dashboard.css\";\nimport innerfilter from \"./views/filter/innerfilter\";\nimport Login from \"./views/login\";\n\n\nimport AdminLayout from \"./layouts/Admin.jsx\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\n\n      <Route exact path=\"/admin/innerfilter\" component={innerfilter} />\n      <Route exact from=\"/login\" component={Login} />\n      {/* <Redirect from=\"/\" to=\"/admin/dashboard\" /> */}\n      {/* <Redirect from=\"/\" component={Login} /> */}\n      <Redirect from=\"/\" to=\"/login\"/>\n      {/* <Route exact path=\"/innerfilter\" component={innerfilter} /> */}\n\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}