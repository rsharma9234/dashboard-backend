{"version":3,"sources":["variables/Variables.jsx","assets/img/sidebar-3.jpg","../node_modules/typescript/lib sync","constant/config.js","views/filter/innerfilter.js","views/login/index.js","components/Navbars/AdminNavbarLinks.jsx","components/Navbars/AdminNavbar.jsx","components/Sidebar/Sidebar.jsx","views/Closeposition.js","views/Data.js","views/Openposition.js","views/TableList.jsx","views/Innerlogin.js","views/Dashboard.jsx","views/filter/filteredit.js","views/filter/filterdetail.js","views/filter/Filterprofile.js","routes.js","views/swap/index.js","layouts/Admin.jsx","index.js"],"names":["defaultWidth","window","screen","width","style","Wrapper","Containers","DefaultStyle","position","padding","zIndex","WebkitBoxSizing","MozBoxSizing","boxSizing","height","display","border","fontSize","WebkitFontSmoothing","fontFamily","fontWeight","color","tl","top","bottom","left","right","tr","tc","margin","marginLeft","bl","br","bc","NotificationItem","cursor","borderRadius","opacity","transition","WebkitTransform","transform","willChange","isHidden","isVisible","success","borderTop","backgroundColor","WebkitBoxShadow","MozBoxShadow","boxShadow","error","warning","info","Title","marginTop","MessageWrapper","marginRight","maxWidthwidth","Dismiss","float","lineHeight","outline","textAlign","Action","background","ActionWrapper","module","exports","thArray","tdArray","iconsArray","dataPie","labels","series","legendPie","names","types","dataSales","optionsSales","low","high","showArea","axisX","showGrid","lineSmooth","showLine","showPoint","fullWidth","chartPadding","responsiveSales","labelInterpolationFnc","value","legendSales","dataBar","optionsBar","seriesBarDistance","responsiveBar","legendBar","__webpack_require__","p","webpackEmptyContext","req","e","Error","code","keys","resolve","id","config","baseurl","axios","require","Innerfilter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDropdownChange","setState","selectValue","target","handleChangeDate","date","startDate","handleEndDate","state","endDate","handleChangeDateTo","startDateTo","handleEndDateTo","endDateTo","handleChange","event","Array","from","selectedOptions","item","renderAccountSelect","_this$state","selectedAccountOption","allAccounts","Data","account","post","then","response","status","onHide","catch","options","map","data","label","login","react_default","a","createElement","react_select_browser_esm","placeholder","onChange","handleChangeAccount","handeChangeShowCommission","showCommission","showAddCommission","handleChangeAccountTo","selectedAccountOptionTo","renderAccountSelectTo","_this$state2","handleChangeCommissionAccount","selectedCommissionAccount","renderCommissionAccount","_this$state3","handleChangeSymbol","selectedSymbolOption","renderSymbolSelect","_this$state4","allSymbols","name","isMulti","handleChangeSymbolTo","selectedSymbolOptionTo","renderSymbolSelectTo","_this$state5","profileName","showCommisoin","self","get","rows","charAt","toUpperCase","slice","preventDefault","symbolFrom","symbolto","profile_name","from_account_id","to_account_id","commission_acount_id","startdateFrom","enddateFrom","startdateTo","enddateTo","from_symbols","JSON","stringify","to_symbols","createdAt","Date","updatedAt","console","log","_this2","className","Grid","fluid","onClick","crossClick","aria-hidden","type","handleprofileName","Row","Col","md","react_datepicker_min_default","selected","isClearable","placeholderText","dateFormat","strictParsing","autoOk","class","defaultChecked","Button","variant","size","block","formDataSubmit","Component","Login","toogle","loginForm","handleClose","handleShow","setShow","show","username","password","alert","persons","shwPwd","shwMsg","invalidUsername","invalidPassword","accountlist","bind","assertThisInitialized","onSubmit","defineProperty","trim","userdetail","length","localStorage","setItem","history","push","message","err","parse","getItem","sm","Modal","Alert","AdminNavbarLinks","logout","clear","notification","Nav","NavItem","eventKey","href","NavDropdown","title","noCaret","MenuItem","pullRight","Header","mobileSidebarToggle","sidebarExists","document","documentElement","classList","toggle","node","onclick","parentElement","removeChild","body","appendChild","Navbar","Brand","brandText","Toggle","Collapse","Navbars_AdminNavbarLinks","Sidebar","menu","innerWidth","routeName","location","pathname","indexOf","updateDimensions","addEventListener","image","data-color","data-image","hasImage","routes","prop","key","redirect","upgrade","activeRoute","layout","path","react_router_dom","to","activeClassName","icon","undefined","resources","sub","index","Closeposition","allHistoryRecord","fromHistoryOrderInfo","toHistoryOrderInfo","commissionHistoryOrderInfo","_useState","useState","_useState2","slicedToArray","isOpen2","setIsOpen2","fromSymbols","toSymbols","entries","join","fromsum","tosum","commission","swap","profit","sumOfTotal","noRecord","total","isOpen","react","accountFromInfo","alias","react_number_format_es","displayType","thousandSeparator","decimalScale","accountToInfo","marginBottom","accountCommissionInfo","history_info","tablePage","items","lot","closed","price","textA","dashBoardPage","textB","Openposition","setIsOpen","allOpenRecord","fromOpenOrderInfo","toOpenOrderInfo","swapFrominfo","open_value","swapToinfo","order_type","lots","intervalSet","timerWaitInterval","TableList","fetchDataAccordingSymbols","symbol","_this$state$filterlis","filterlist","selectedOption","renderSymbols","uniqueSymbols","concat","filter","i","ar","sumOfHistoryTotal","openfromsum","opentosum","sumOfOpenTotal","views_Closeposition","Dashboard","getAllAccounts","fetchActivefilterData","fetchActivefilterData1","errorMassege","user","showData","accountDetailValue","Fragment","accounts_details","currency","tableHeader","details","formData","json","legend","views_TableList","timerWait","Innerlogin","checkUserConnected","broker","connected","currentAddLogin","currentAddBroker","clearInterval","timerShow","tryAgainConnection","fectheAllAccount","setIntervalCustom","setInterval","tryAgainConnectionFun","handleCloseEdit","editForm","handleCloseDetail","detailForm","createTr","scope","launched","viewFilter","editFilter","editData","edituser","editserver","editalias","editstatus","onUpdate","swal","text","timer","button","Body","closeButton","disabled","editAlias","FilterEdite","rules","required","abc","from_symbol","to_symbol","all_from_symbols","all_to_symbols","fromSymbol","toSymbol","moment","FilterDetail","format","dashboardRoutes","component","Filterprofile","showInnerfilter","createNotification","NotificationManager","createWariningNotification","filterData","activateClick","deactivateClick","deleteFilter","deleteData","editeData","showDelete","showEdit","detailData","fetchfilterdata","newDate","filterdetail","filteredit","innerfilter","deletepopupClick","deletepopupclose","lib","Admin","getRoutes","react_router","render","assign","handleClick","handleNotificationClick","getBrandText","handleImageClick","handleColorClick","handleHasImage","handleFixedClick","fixedClasses","_notificationSystem","action","scrollTop","scrollingElement","refs","mainPanel","NotificationSystem_default","ref","components_Sidebar_Sidebar","AdminNavbar","ReactDOM","layouts_Admin","exact","getElementById"],"mappings":"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kBACA,aACA,mBACA,aACA,cACA,eACA,qBACA,iBACA,cACA,cACA,eACA,kBACA,eACA,iBACA,eACA,cACA,YACA,eACA,aACA,qBACA,aACA,cACA,kBACA,uBACA,YACA,qBACA,WACA,iBACA,mBACA,wBACA,cACA,oBACA,eACA,2BACA,cACA,mBACA,oBACA,0BACA,iBACA,mBACA,eACA,0BACA,iBACA,eACA,aACA,gBACA,gBACA,kBACA,cACA,aACA,eACA,eACA,iBACA,cACA,cACA,cACA,eACA,eACA,YACA,cACA,kBACA,aACA,gBACA,eACA,gBACA,gBACA,cACA,eACA,eACA,aACA,gBACA,aACA,eACA,eACA,gBACA,iBACA,sBACA,kBACA,cACA,cACA,cACA,gBACA,aACA,aACA,cACA,cACA,kBACA,cACA,aACA,mBACA,aACA,YACA,cACA,YACA,sBACA,YACA,cACA,aACA,YACA,oBACA,oBACA,oBACA,cACA,qBACA,iBACA,aACA,aACA,mBACA,kBACA,cACA,cACA,aACA,aACA,gBACA,cACA,aACA,YACA,mBACA,aACA,kBACA,uBACA,eACA,aACA,aACA,aACA,gBACA,aACA,aACA,cACA,aACA,eACA,aACA,aACA,aACA,cACA,cACA,eACA,eACA,eACA,cACA,eACA,cACA,gBACA,aACA,eACA,aACA,eACA,aACA,gBACA,gBACA,aACA,aACA,eACA,iBACA,iBACA,iBACA,iBACA,aACA,YACA,gBACA,aACA,eACA,kBACA,eACA,gBACA,gBACA,eACA,cACA,cACA,cACA,aACA,aACA,eACA,aACA,mBACA,gBACA,aACA,aACA,kBACA,gBACA,aACA,gBACA,aACA,aACA,kBACA,eACA,eACA,cACA,iBAwHAC,QA/GY,CACZC,OAAQ,CAAC,MAAO,MAAO,OACvBC,OAAQ,CAAC,GAAI,GAAI,KA8GjBC,UA5Gc,CACdC,MAAO,CAAC,OAAQ,SAAU,eAC1BC,MAAO,CAAC,OAAQ,SAAU,YA2G1BC,UAvGc,CACdL,OAAQ,CACN,SACA,UACA,SACA,SACA,SACA,UAC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","file":"static/js/main.4e1110ac.chunk.js","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n//\n// //\n// // // For notifications\n// //\n//\nvar defaultWidth =\n  window.screen.width > 768\n    ? (window.screen.width * 1) / 3\n    : window.screen.width;\n\nvar style = {\n  Wrapper: {},\n  Containers: {\n    DefaultStyle: {\n      position: \"fixed\",\n      width: defaultWidth,\n      padding: \"10px 10px 10px 20px\",\n      zIndex: 9998,\n      WebkitBoxSizing: \"\",\n      MozBoxSizing: \"\",\n      boxSizing: \"\",\n      height: \"auto\",\n      display: \"inline-block\",\n      border: \"0\",\n      fontSize: \"14px\",\n      WebkitFontSmoothing: \"antialiased\",\n      fontFamily: '\"Roboto\",\"Helvetica Neue\",Arial,sans-serif',\n      fontWeight: \"400\",\n      color: \"#FFFFFF\"\n    },\n\n    tl: {\n      top: \"0px\",\n      bottom: \"auto\",\n      left: \"0px\",\n      right: \"auto\"\n    },\n\n    tr: {\n      top: \"0px\",\n      bottom: \"auto\",\n      left: \"auto\",\n      right: \"0px\"\n    },\n\n    tc: {\n      top: \"0px\",\n      bottom: \"auto\",\n      margin: \"0 auto\",\n      left: \"50%\",\n      marginLeft: -(defaultWidth / 2)\n    },\n\n    bl: {\n      top: \"auto\",\n      bottom: \"0px\",\n      left: \"0px\",\n      right: \"auto\"\n    },\n\n    br: {\n      top: \"auto\",\n      bottom: \"0px\",\n      left: \"auto\",\n      right: \"0px\"\n    },\n\n    bc: {\n      top: \"auto\",\n      bottom: \"0px\",\n      margin: \"0 auto\",\n      left: \"50%\",\n      marginLeft: -(defaultWidth / 2)\n    }\n  },\n\n  NotificationItem: {\n    DefaultStyle: {\n      position: \"relative\",\n      width: \"100%\",\n      cursor: \"pointer\",\n      borderRadius: \"4px\",\n      fontSize: \"14px\",\n      margin: \"10px 0 0\",\n      padding: \"10px\",\n      display: \"block\",\n      WebkitBoxSizing: \"border-box\",\n      MozBoxSizing: \"border-box\",\n      boxSizing: \"border-box\",\n      opacity: 0,\n      transition: \"all 0.5s ease-in-out\",\n      WebkitTransform: \"translate3d(0, 0, 0)\",\n      transform: \"translate3d(0, 0, 0)\",\n      willChange: \"transform, opacity\",\n\n      isHidden: {\n        opacity: 0\n      },\n\n      isVisible: {\n        opacity: 1\n      }\n    },\n\n    success: {\n      borderTop: 0,\n      backgroundColor: \"#a1e82c\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    error: {\n      borderTop: 0,\n      backgroundColor: \"#fc727a\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    warning: {\n      borderTop: 0,\n      backgroundColor: \"#ffbc67\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    info: {\n      borderTop: 0,\n      backgroundColor: \"#63d8f1\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    }\n  },\n\n  Title: {\n    DefaultStyle: {\n      fontSize: \"30px\",\n      margin: \"0\",\n      padding: 0,\n      fontWeight: \"bold\",\n      color: \"#FFFFFF\",\n      display: \"block\",\n      left: \"15px\",\n      position: \"absolute\",\n      top: \"50%\",\n      marginTop: \"-15px\"\n    }\n  },\n\n  MessageWrapper: {\n    DefaultStyle: {\n      marginLeft: \"55px\",\n      marginRight: \"30px\",\n      padding: \"0 12px 0 0\",\n      color: \"#FFFFFF\",\n      maxWidthwidth: \"89%\"\n    }\n  },\n\n  Dismiss: {\n    DefaultStyle: {\n      fontFamily: \"inherit\",\n      fontSize: \"21px\",\n      color: \"#000\",\n      float: \"right\",\n      position: \"absolute\",\n      right: \"10px\",\n      top: \"50%\",\n      marginTop: \"-13px\",\n      backgroundColor: \"#FFFFFF\",\n      display: \"block\",\n      borderRadius: \"50%\",\n      opacity: \".4\",\n      lineHeight: \"11px\",\n      width: \"25px\",\n      height: \"25px\",\n      outline: \"0 !important\",\n      textAlign: \"center\",\n      padding: \"6px 3px 3px 3px\",\n      fontWeight: \"300\",\n      marginLeft: \"65px\"\n    },\n\n    success: {\n      // color: '#f0f5ea',\n      // backgroundColor: '#a1e82c'\n    },\n\n    error: {\n      // color: '#f4e9e9',\n      // backgroundColor: '#fc727a'\n    },\n\n    warning: {\n      // color: '#f9f6f0',\n      // backgroundColor: '#ffbc67'\n    },\n\n    info: {\n      // color: '#e8f0f4',\n      // backgroundColor: '#63d8f1'\n    }\n  },\n\n  Action: {\n    DefaultStyle: {\n      background: \"#ffffff\",\n      borderRadius: \"2px\",\n      padding: \"6px 20px\",\n      fontWeight: \"bold\",\n      margin: \"10px 0 0 0\",\n      border: 0\n    },\n\n    success: {\n      backgroundColor: \"#a1e82c\",\n      color: \"#ffffff\"\n    },\n\n    error: {\n      backgroundColor: \"#fc727a\",\n      color: \"#ffffff\"\n    },\n\n    warning: {\n      backgroundColor: \"#ffbc67\",\n      color: \"#ffffff\"\n    },\n\n    info: {\n      backgroundColor: \"#63d8f1\",\n      color: \"#ffffff\"\n    }\n  },\n\n  ActionWrapper: {\n    DefaultStyle: {\n      margin: 0,\n      padding: 0\n    }\n  }\n};\n\n//\n// //\n// // // For tables\n// //\n//\nconst thArray = [\"ID\", \"Name\", \"Salary\", \"Country\", \"City\"];\nconst tdArray = [\n  [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\", \"Oud-Turnhout\"],\n  [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\", \"Sinaai-Waas\"],\n  [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\", \"Baileux\"],\n  [\"4\", \"Philip Chaney\", \"$38,735\", \"Korea, South\", \"Overland Park\"],\n  [\"5\", \"Doris Greene\", \"$63,542\", \"Malawi\", \"Feldkirchen in Kärnten\"],\n  [\"6\", \"Mason Porter\", \"$78,615\", \"Chile\", \"Gloucester\"]\n];\n\n//\n// //\n// // // For icons\n// //\n//\nconst iconsArray = [\n  \"pe-7s-album\",\n  \"pe-7s-arc\",\n  \"pe-7s-back-2\",\n  \"pe-7s-bandaid\",\n  \"pe-7s-car\",\n  \"pe-7s-diamond\",\n  \"pe-7s-door-lock\",\n  \"pe-7s-eyedropper\",\n  \"pe-7s-female\",\n  \"pe-7s-gym\",\n  \"pe-7s-hammer\",\n  \"pe-7s-headphones\",\n  \"pe-7s-helm\",\n  \"pe-7s-hourglass\",\n  \"pe-7s-leaf\",\n  \"pe-7s-magic-wand\",\n  \"pe-7s-male\",\n  \"pe-7s-map-2\",\n  \"pe-7s-next-2\",\n  \"pe-7s-paint-bucket\",\n  \"pe-7s-pendrive\",\n  \"pe-7s-photo\",\n  \"pe-7s-piggy\",\n  \"pe-7s-plugin\",\n  \"pe-7s-refresh-2\",\n  \"pe-7s-rocket\",\n  \"pe-7s-settings\",\n  \"pe-7s-shield\",\n  \"pe-7s-smile\",\n  \"pe-7s-usb\",\n  \"pe-7s-vector\",\n  \"pe-7s-wine\",\n  \"pe-7s-cloud-upload\",\n  \"pe-7s-cash\",\n  \"pe-7s-close\",\n  \"pe-7s-bluetooth\",\n  \"pe-7s-cloud-download\",\n  \"pe-7s-way\",\n  \"pe-7s-close-circle\",\n  \"pe-7s-id\",\n  \"pe-7s-angle-up\",\n  \"pe-7s-wristwatch\",\n  \"pe-7s-angle-up-circle\",\n  \"pe-7s-world\",\n  \"pe-7s-angle-right\",\n  \"pe-7s-volume\",\n  \"pe-7s-angle-right-circle\",\n  \"pe-7s-users\",\n  \"pe-7s-angle-left\",\n  \"pe-7s-user-female\",\n  \"pe-7s-angle-left-circle\",\n  \"pe-7s-up-arrow\",\n  \"pe-7s-angle-down\",\n  \"pe-7s-switch\",\n  \"pe-7s-angle-down-circle\",\n  \"pe-7s-scissors\",\n  \"pe-7s-wallet\",\n  \"pe-7s-safe\",\n  \"pe-7s-volume2\",\n  \"pe-7s-volume1\",\n  \"pe-7s-voicemail\",\n  \"pe-7s-video\",\n  \"pe-7s-user\",\n  \"pe-7s-upload\",\n  \"pe-7s-unlock\",\n  \"pe-7s-umbrella\",\n  \"pe-7s-trash\",\n  \"pe-7s-tools\",\n  \"pe-7s-timer\",\n  \"pe-7s-ticket\",\n  \"pe-7s-target\",\n  \"pe-7s-sun\",\n  \"pe-7s-study\",\n  \"pe-7s-stopwatch\",\n  \"pe-7s-star\",\n  \"pe-7s-speaker\",\n  \"pe-7s-signal\",\n  \"pe-7s-shuffle\",\n  \"pe-7s-shopbag\",\n  \"pe-7s-share\",\n  \"pe-7s-server\",\n  \"pe-7s-search\",\n  \"pe-7s-film\",\n  \"pe-7s-science\",\n  \"pe-7s-disk\",\n  \"pe-7s-ribbon\",\n  \"pe-7s-repeat\",\n  \"pe-7s-refresh\",\n  \"pe-7s-add-user\",\n  \"pe-7s-refresh-cloud\",\n  \"pe-7s-paperclip\",\n  \"pe-7s-radio\",\n  \"pe-7s-note2\",\n  \"pe-7s-print\",\n  \"pe-7s-network\",\n  \"pe-7s-prev\",\n  \"pe-7s-mute\",\n  \"pe-7s-power\",\n  \"pe-7s-medal\",\n  \"pe-7s-portfolio\",\n  \"pe-7s-like2\",\n  \"pe-7s-plus\",\n  \"pe-7s-left-arrow\",\n  \"pe-7s-play\",\n  \"pe-7s-key\",\n  \"pe-7s-plane\",\n  \"pe-7s-joy\",\n  \"pe-7s-photo-gallery\",\n  \"pe-7s-pin\",\n  \"pe-7s-phone\",\n  \"pe-7s-plug\",\n  \"pe-7s-pen\",\n  \"pe-7s-right-arrow\",\n  \"pe-7s-paper-plane\",\n  \"pe-7s-delete-user\",\n  \"pe-7s-paint\",\n  \"pe-7s-bottom-arrow\",\n  \"pe-7s-notebook\",\n  \"pe-7s-note\",\n  \"pe-7s-next\",\n  \"pe-7s-news-paper\",\n  \"pe-7s-musiclist\",\n  \"pe-7s-music\",\n  \"pe-7s-mouse\",\n  \"pe-7s-more\",\n  \"pe-7s-moon\",\n  \"pe-7s-monitor\",\n  \"pe-7s-micro\",\n  \"pe-7s-menu\",\n  \"pe-7s-map\",\n  \"pe-7s-map-marker\",\n  \"pe-7s-mail\",\n  \"pe-7s-mail-open\",\n  \"pe-7s-mail-open-file\",\n  \"pe-7s-magnet\",\n  \"pe-7s-loop\",\n  \"pe-7s-look\",\n  \"pe-7s-lock\",\n  \"pe-7s-lintern\",\n  \"pe-7s-link\",\n  \"pe-7s-like\",\n  \"pe-7s-light\",\n  \"pe-7s-less\",\n  \"pe-7s-keypad\",\n  \"pe-7s-junk\",\n  \"pe-7s-info\",\n  \"pe-7s-home\",\n  \"pe-7s-help2\",\n  \"pe-7s-help1\",\n  \"pe-7s-graph3\",\n  \"pe-7s-graph2\",\n  \"pe-7s-graph1\",\n  \"pe-7s-graph\",\n  \"pe-7s-global\",\n  \"pe-7s-gleam\",\n  \"pe-7s-glasses\",\n  \"pe-7s-gift\",\n  \"pe-7s-folder\",\n  \"pe-7s-flag\",\n  \"pe-7s-filter\",\n  \"pe-7s-file\",\n  \"pe-7s-expand1\",\n  \"pe-7s-exapnd2\",\n  \"pe-7s-edit\",\n  \"pe-7s-drop\",\n  \"pe-7s-drawer\",\n  \"pe-7s-download\",\n  \"pe-7s-display2\",\n  \"pe-7s-display1\",\n  \"pe-7s-diskette\",\n  \"pe-7s-date\",\n  \"pe-7s-cup\",\n  \"pe-7s-culture\",\n  \"pe-7s-crop\",\n  \"pe-7s-credit\",\n  \"pe-7s-copy-file\",\n  \"pe-7s-config\",\n  \"pe-7s-compass\",\n  \"pe-7s-comment\",\n  \"pe-7s-coffee\",\n  \"pe-7s-cloud\",\n  \"pe-7s-clock\",\n  \"pe-7s-check\",\n  \"pe-7s-chat\",\n  \"pe-7s-cart\",\n  \"pe-7s-camera\",\n  \"pe-7s-call\",\n  \"pe-7s-calculator\",\n  \"pe-7s-browser\",\n  \"pe-7s-box2\",\n  \"pe-7s-box1\",\n  \"pe-7s-bookmarks\",\n  \"pe-7s-bicycle\",\n  \"pe-7s-bell\",\n  \"pe-7s-battery\",\n  \"pe-7s-ball\",\n  \"pe-7s-back\",\n  \"pe-7s-attention\",\n  \"pe-7s-anchor\",\n  \"pe-7s-albums\",\n  \"pe-7s-alarm\",\n  \"pe-7s-airplay\"\n];\n\n//\n// //\n// // // // For dashboard's charts\n// //\n//\n// Data for Pie Chart\nvar dataPie = {\n  labels: [\"40%\", \"20%\", \"40%\"],\n  series: [40, 20, 40]\n};\nvar legendPie = {\n  names: [\"Open\", \"Bounce\", \"Unsubscribe\"],\n  types: [\"info\", \"danger\", \"warning\"]\n};\n\n// Data for Line Chart\nvar dataSales = {\n  labels: [\n    \"9:00AM\",\n    \"12:00AM\",\n    \"3:00PM\",\n    \"6:00PM\",\n    \"9:00PM\",\n    \"12:00PM\",\n    \"3:00AM\",\n    \"6:00AM\"\n  ],\n  series: [\n    [287, 385, 490, 492, 554, 586, 698, 695],\n    [67, 152, 143, 240, 287, 335, 435, 437],\n    [23, 113, 67, 108, 190, 239, 307, 308]\n  ]\n};\nvar optionsSales = {\n  low: 0,\n  high: 800,\n  showArea: false,\n  height: \"245px\",\n  axisX: {\n    showGrid: false\n  },\n  lineSmooth: true,\n  showLine: true,\n  showPoint: true,\n  fullWidth: true,\n  chartPadding: {\n    right: 50\n  }\n};\nvar responsiveSales = [\n  [\n    \"screen and (max-width: 640px)\",\n    {\n      axisX: {\n        labelInterpolationFnc: function(value) {\n          return value[0];\n        }\n      }\n    }\n  ]\n];\nvar legendSales = {\n  names: [\"Open\", \"Click\", \"Click Second Time\"],\n  types: [\"info\", \"danger\", \"warning\"]\n};\n\n// Data for Bar Chart\nvar dataBar = {\n  labels: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"Mai\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n  ],\n  series: [\n    [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895],\n    [412, 243, 280, 580, 453, 353, 300, 364, 368, 410, 636, 695]\n  ]\n};\nvar optionsBar = {\n  seriesBarDistance: 10,\n  axisX: {\n    showGrid: false\n  },\n  height: \"245px\"\n};\nvar responsiveBar = [\n  [\n    \"screen and (max-width: 640px)\",\n    {\n      seriesBarDistance: 5,\n      axisX: {\n        labelInterpolationFnc: function(value) {\n          return value[0];\n        }\n      }\n    }\n  ]\n];\nvar legendBar = {\n  names: [\"Tesla Model S\", \"BMW 5 Series\"],\n  types: [\"info\", \"danger\"]\n};\n\nmodule.exports = {\n  style, // For notifications (App container and Notifications view)\n  thArray,\n  tdArray, // For tables (TableList view)\n  iconsArray, // For icons (Icons view)\n  dataPie,\n  legendPie,\n  dataSales,\n  optionsSales,\n  responsiveSales,\n  legendSales,\n  dataBar,\n  optionsBar,\n  responsiveBar,\n  legendBar // For charts (Dashboard view)\n};\n","module.exports = __webpack_public_path__ + \"static/media/sidebar-3.34535b95.jpg\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 575;","const config= {\n    baseurl:(process.env.NODE_ENV==\"development\") ? \"http://localhost:4000/api\": \"https://top4.trade/api\"\n}\n\nexport default config;","import React, { Component } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport config from '../../constant/config.js';\nimport Select from 'react-select'\nconst axios = require('axios');\n\n// import { Multiselect } from \"multiselect-react-dropdown\";\n\n// const options = [\n//     { value: 'chocolate', label: 'Chocolate' },\n//     { value: 'strawberry', label: 'Strawberry' },\n//     { value: 'vanilla', label: 'Vanilla' }\n// ]\n\nclass Innerfilter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // startDate: new Date(),\n            // endDate: new Date(),\n            selectedAccountOption: null,\n            selectedSymbolOption: null,\n            selectedSymbolOptionTo: null,\n            selectedAccountOptionTo: null,\n            selectedCommissionAccount: null,\n            startDate: null,\n            endDate: null,\n            startDateTo: null,\n            endDateTo: null,\n            allAccounts: [],\n            allSymbols: [],\n            profileName: '',\n            error: '',\n            showCommisoin: false,\n            showAddCommission: false\n            // options: [{ name: 'Srigar', id: 1 }, { name: 'Sam', id: 2 }],\n\n            // plainArray: [\"Option 1\", \"Option 2\", \"Option 3\", \"Option 4\", \"Option 5\"],\n            // objectArray: [\n            //     { key: \"Option 1\", cat: \"Group 1\" },\n            //     { key: \"Option 2\", cat: \"Group 1\" },\n            //     { key: \"Option 3\", cat: \"Group 1\" },\n            //     { key: \"Option 4\", cat: \"Group 2\" },\n            //     { key: \"Option 5\", cat: \"Group 2\" },\n            //     { key: \"Option 6\", cat: \"Group 2\" },\n            //     { key: \"Option 7\", cat: \"Group 2\" }\n            // ],\n            // selectedValues: [\n            //     { key: \"Option 1\", cat: \"Group 1\" },\n            //     { key: \"Option 2\", cat: \"Group 1\" }\n            // ]\n        };\n\n\n    }\n    componentDidMount() {\n        let self = this;\n        axios.get(config.baseurl + '/accounts/fetchAllAccounts')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ allAccounts: response.data.rows })\n                }\n            })\n        axios.get(config.baseurl + '/accounts/fetchAllSymbol')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ allSymbols: response.data.rows })\n                }\n            })\n    }\n    // addItem = () => {\n    //     this.selectedValues.push({ key: \"Option 3\", cat: \"Group 1\" });\n    // }\n    handleDropdownChange = (e) => {\n        this.setState({ selectValue: e.target.value });\n    }\n    handleChangeDate = date => {\n\n        this.setState({\n            startDate: date\n        });\n    }\n\n    handleEndDate = date => {\n        if (date < this.state.startDate && date != null) {\n            this.setState({ error: 'enddate', endDate: \"\" })\n            return\n        }\n        this.setState({\n            error: '',\n            endDate: date\n        })\n    }\n\n    handleChangeDateTo = date => {\n\n        this.setState({\n            startDateTo: date,\n            error: ''\n        });\n    }\n\n    handleEndDateTo = date => {\n        if (date < this.state.startDateTo && date != null) {\n            this.setState({ error: 'enddateto', endDateTo: \"\" })\n            return\n        }\n\n        this.setState({\n            error: '',\n            endDateTo: date\n        });\n    }\n    handleChange = (event) => {\n        //this.setState({value: event.option});\n        this.setState({ value: Array.from(event.target.selectedOptions, (item) => item.value) });\n    }\n\n    renderAccountSelect = () => {\n\n        const { selectedAccountOption, allAccounts } = this.state;\n        let Data = {\n            account: selectedAccountOption\n        }\n\n        axios.post(config.baseurl + '/filter/fetchSymbolData', Data)\n            .then(function (response) {\n                if (response.status == 200) {\n                    this.props.onHide()\n\n                }\n            })\n            .catch(function (error) {\n                // console.log(error);\n            });\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account...\"\n                value={selectedAccountOption}\n                onChange={this.handleChangeAccount}\n                options={options}\n            />\n        )\n    }\n\n    handeChangeShowCommission = (e) => {\n        this.setState({ showCommission: true }, () => {\n            this.setState({ showAddCommission: !this.state.showAddCommission })\n        })\n    }\n\n    handleChangeAccountTo = selectedAccountOptionTo => {\n        if (selectedAccountOptionTo.label == this.state.selectedAccountOption.label) {\n            this.setState({ error: 'err' })\n        } else\n            this.setState({ selectedAccountOptionTo, error: '' });\n    };\n    renderAccountSelectTo = () => {\n        const { selectedAccountOptionTo, allAccounts } = this.state;\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account...\"\n                value={selectedAccountOptionTo}\n                onChange={this.handleChangeAccountTo}\n                options={options}\n            />\n        )\n    }\n\n    handleChangeCommissionAccount = selectedCommissionAccount => {\n        this.setState({ selectedCommissionAccount, });\n    };\n    renderCommissionAccount = () => {\n        const { selectedCommissionAccount, allAccounts } = this.state;\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account...\"\n                value={selectedCommissionAccount}\n                onChange={this.handleChangeCommissionAccount}\n                options={options}\n            />\n        )\n    }\n\n    handleChangeAccount = selectedAccountOption => {\n        this.setState({ selectedAccountOption });\n    };\n    handleChangeSymbol = selectedSymbolOption => {\n        this.setState({ selectedSymbolOption });\n    };\n    renderSymbolSelect = () => {\n        const { selectedSymbolOption, allSymbols } = this.state;\n\n        let options = allSymbols.map(data => {\n            return { value: data.name, label: data.name };\n        })\n        return (\n            <Select\n                placeholder=\"Select Symbol...\"\n                value={selectedSymbolOption}\n                isMulti\n                onChange={this.handleChangeSymbol}\n                options={options}\n            />\n        )\n    }\n    handleChangeSymbolTo = selectedSymbolOptionTo => {\n        this.setState({ selectedSymbolOptionTo });\n    };\n    renderSymbolSelectTo = () => {\n        const { selectedSymbolOptionTo, allSymbols } = this.state;\n        let options = allSymbols.map(data => {\n            return { value: data.name, label: data.name };\n        })\n\n        return (\n            <Select\n                placeholder=\"Select Symbol...\"\n                value={selectedSymbolOptionTo}\n                isMulti\n                onChange={this.handleChangeSymbolTo}\n                options={options}\n            />\n        )\n    }\n\n    handleprofileName(e) {\n        this.setState({ profileName: e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1), error: '' })\n    }\n    formDataSubmit(e) {\n\n\n        e.preventDefault();\n        let self = this\n\n        if (this.state.profileName == null || this.state.profileName == '') {\n            this.setState({ error: 'profileName' })\n            return\n        }\n        else if (this.state.selectedAccountOption == null || this.state.selectedAccountOption == '') {\n            this.setState({ error: 'accountoption' })\n            return\n        }\n\n        else if (this.state.startDate == null || this.state.startDate == '') {\n            this.setState({ error: 'startdate' })\n            return\n        } else if (this.state.selectedSymbolOption == null || this.state.selectedSymbolOption == '') {\n            this.setState({ error: 'symbolselect' })\n            return\n        }\n        else if (this.state.selectedAccountOptionTo == null || this.state.selectedAccountOptionTo == '') {\n            this.setState({ error: 'accountoptionto' })\n            return\n        }\n\n        else if (this.state.startDateTo == null || this.state.startDateTo == '') {\n            this.setState({ error: 'startDateTo' })\n            return\n        }\n        else if (this.state.selectedSymbolOptionTo == null || this.state.selectedSymbolOptionTo == '') {\n            this.setState({ error: 'selectedSymbolOptionTo' })\n            return\n        }\n        else {\n            this.setState({ error: '' })\n        }\n        let fromSymbol = this.state.selectedSymbolOption;\n        let symbolFrom = fromSymbol.map((data) => {\n            return data.value\n        })\n        let toSymbol = this.state.selectedSymbolOptionTo;\n        let symbolto = toSymbol.map((data) => {\n            return data.value\n        })\n\n        let Data = {\n            profile_name: this.state.profileName,\n            from_account_id: this.state.selectedAccountOption.value,\n            to_account_id: this.state.selectedAccountOptionTo.value,\n            commission_acount_id: this.state.showAddCommission ? this.state.selectedCommissionAccount.value : 0,\n            startdateFrom: this.state.startDate,\n            enddateFrom: this.state.endDate,\n            startdateTo: this.state.startDateTo,\n            enddateTo: this.state.endDateTo,\n            from_symbols: JSON.stringify(symbolFrom),\n            to_symbols: JSON.stringify(symbolto),\n            createdAt: new Date(),\n            updatedAt: new Date(),\n\n\n        }\n\n\n        axios.post(config.baseurl + '/filter/addfilterdata', Data)\n\n            .then(function (response) {\n\n\n                if (response.status == 200) {\n                    self.props.onHide()\n\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n        console.log(Data, 'data');\n\n    }\n    crossClick(e) {\n        e.preventDefault();\n        this.props.onHide()\n    }\n\n    render() {\n        // const {  objectArray } = this.state;\n        return (\n            <div className=\"content\">\n                <Grid fluid>\n                    <div className=\"symbol-box\">\n                        <div className=\"cross_div\"><a onClick={(e) => this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\n                        <div className=\"terminal-text\" >\n                            <label className=\"pnameadjust\"> Profile Name </label>\n                            <input type=\"text\" name=\"profilename\" className=\"Itext\" placeholder=\"Type Profile Name\" onChange={(e) => this.handleprofileName(e)} />\n                            {(this.state.error == 'profileName') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Fill Your Profile Name </p>}\n\n                        </div>\n                        <form>\n                            <Row>\n                                <Col md={6}>\n                                    <div className=\"card\">\n                                        <div style={{ padding: '10px 20px 0px' }}>\n                                            <span style={{ fontWeight: 'bold' }}>Account A</span>\n                                        </div>\n                                        <table className=\"table mt20\">\n                                            <tbody>\n                                                <tr>\n                                                    <td className=\"b-clr\">\n                                                        <span className=\"accnt\">Account :</span>\n                                                    </td>\n\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        {/* <Multiselect\n                                                        options={objectArray}\n                                                        singleSelect\n                                                        displayValue=\"key\"\n                                                    /> */}\n                                                        {this.renderAccountSelect()}\n                                                        {(this.state.error == 'accountoption') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">From:  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            selected={this.state.startDate}\n                                                            onChange={this.handleChangeDate}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDate}\n                                                            endDate={this.state.endDate}\n                                                            strictParsing\n                                                        />\n                                                        {(this.state.error == 'startdate') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">To :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            autoOk={true}\n                                                            selected={this.state.endDate}\n                                                            onChange={this.handleEndDate}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDate}\n                                                            endDate={this.state.endDate}\n                                                        />\n                                                        {(this.state.error == 'enddate') && <p style={{ color: 'red', fontSize: '13px' }}>*\n                                                        Please ensure that the End Date is greater than the Start Date.</p>}\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">Symbol :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        {/* <Multiselect\n                                                        options={objectArray}\n                                                        displayValue=\"key\"\n                                                        showCheckbox={true}\n                                                    /> */}\n                                                        {this.renderSymbolSelect()}\n                                                        {(this.state.error == 'symbolselect') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\n                                                    </td>\n                                                </tr>\n\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </Col>\n                                <Col md={6}>\n                                    <div className=\"card\">\n                                        <div style={{ padding: '10px 20px 0px' }}>\n                                            <span style={{ fontWeight: 'bold' }}>Account B</span>\n                                        </div>\n\n                                        <table className=\"table mt20\">\n                                            <tbody>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\"> Account :</span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        {this.renderAccountSelectTo()}\n                                                        {(this.state.error == 'accountoptionto') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\n                                                        {(this.state.error == 'err') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Diffrent Account</p>}\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">From:  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            selected={this.state.startDateTo}\n                                                            onChange={this.handleChangeDateTo}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDateTo}\n                                                            endDate={this.state.endDateTo}\n                                                            strictParsing\n                                                        />\n                                                        {(this.state.error == 'startDateTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">To :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            selected={this.state.endDateTo}\n                                                            onChange={this.handleEndDateTo}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDateTo}\n                                                            endDate={this.state.endDateTo}\n                                                        />\n                                                        {(this.state.error == 'enddateto') && <p style={{ color: 'red', fontSize: '13px' }}>*\n                                                        Please ensure that the End Date is greater than the Start Date.</p>}\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr\">\n                                                        <span className=\"accnt\"> Symbol :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        {/* <Multiselect\n                                                        options={objectArray}\n                                                        displayValue=\"key\"\n                                                        showCheckbox={true}\n                                                    /> */}\n                                                        {this.renderSymbolSelectTo()}\n                                                        {(this.state.error == 'selectedSymbolOptionTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\n\n                                                    </td>\n                                                </tr>\n\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </Col>\n\n\n                            </Row>\n                            <hr></hr>\n                            <div>\n\n                                <label class=\"checkbox-inline\"><input type=\"checkbox\" defaultChecked={this.state.showCommisoin} onChange={(e) => this.handeChangeShowCommission(e)} /><b>Add Commission</b></label>\n                            </div>\n\n\n\n                            {this.state.showAddCommission &&\n                                <div className=\"center-com d-flex\">\n                                    <div className=\"com\">\n                                        <h3 style={{ fontWeight: 'bold' }}>Commission</h3>\n\n                                    </div>\n                                    <table className=\"table mt20\">\n\n                                        <tbody>\n                                            <tr>\n\n                                                <td className=\"b-clr \">\n                                                    <span className=\"accnt\"> Account :</span>\n                                                </td>\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {this.renderCommissionAccount()}\n                                                    {(this.state.error == 'accountoptionto') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n\n                            }\n\n                            <div className=\"save_button_filter\">\n                                <div className=\"savebtn\">\n                                    <Button className=\"btn-primary savebutton\" variant=\"primary\" size=\"lg\" block onClick={(e) => this.formDataSubmit(e)}>\n                                        <b>Save</b>\n                                    </Button>\n\n                                </div>\n\n                            </div>\n\n\n\n\n                        </form>\n                    </div>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default Innerfilter;\n","import React, { Component } from 'react';\nimport { Grid, Row, Col, Modal, Alert } from \"react-bootstrap\";\nimport swal from 'sweetalert';\nimport config from '../../constant/config.js';\nconst axios = require('axios');\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loginForm: false,\n            setShow: false,\n            show: true,\n            username: '',\n            password: '',\n            alert: null,\n            persons: [],\n            shwPwd: false,\n            shwMsg: false,\n            invalidUsername:'',\n            invalidPassword:'',\n            accountlist: []\n\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value.trim() })\n    }\n    onSubmit(e) {\n        e.preventDefault();\n        const userdetail = {\n            username: this.state.username,\n            password: this.state.password\n        }\n        if (this.state.username == '') {\n            this.setState({ shwPwd: true })\n        }\n      \n        let self = this;\n        axios.post(config.baseurl + '/users/mainLogin', userdetail)\n            .then(function (response) {\n                if (response.status == 200 ) {\n                    // self.handleClose();\n                    if(response.data.rows && response.data.rows.length>0){\n                        localStorage.setItem('currentUser', JSON.stringify(response.data.rows));\n                        self.props.history.push('/admin/dashboard')\n                    }\n                    if(response.data.message){\n                        if(response.data.name=='username'){\n                            self.setState({invalidUsername:response.data.message})\n                        }\n                        if(response.data.name=='password'){\n                            self.setState({invalidPassword:response.data.message, invalidUsername:''})\n                        }\n                    }\n                }\n            })\n            .catch(function (err) {\n                console.log(err , 'errrr');\n            });\n    }\n    toogle = () => {\n        this.setState({ loginForm: !this.state.loginForm })\n    }\n    handleClose = () => {\n        this.setState({ loginForm: false })\n    }\n    handleShow = () => {\n        this.setState({ setShow: true })\n    }\n    componentDidMount() {\n        // let self = this;\n\n        let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n        if(currentUser!==null){\n            this.props.history.push('admin/dashboard')\n            return;\n        }\n        // axios.get(config.baseurl + '/users/allAccounts')\n        //     .then(function (response) {\n        //         if (response.status == 200) {\n        //             self.setState({ accountlist: response.data.rows })\n        //         }\n        //     })\n    }\n    render() {\n        const {invalidPassword,invalidUsername} = this.state;\n        return (\n            <div className=\"content\">\n                <Grid fluid style={{marginTop:'20vh'}}>\n                    <Row>\n                        <Col md={4} />\n                        <Col \n                            md={4} \n                            sm={6}\n                            >\n                                {/* <Modal show={show}>\n                                    <Modal.Body> */}\n                                        <div className=\"form-box login-box\">\n                                            <Modal.Title className=\"text-center\"><b>Log In</b></Modal.Title>\n\n                                            <div className=\"container-fluid\" style={{background:'#eee', padding:15, marginTop:10}}>\n                                                <div>\n                                                    <span style={{fontWeight:'bold'}}> Username: </span>\n                                                    testaccount\n                                                </div>\n                                                <div>\n                                                    <span style={{fontWeight:'bold'}}> Password: </span>\n                                                    1234567\n                                                </div>\n                                            </div>\n                                            <form style={{ marginTop: '20px' }} onSubmit={this.onSubmit}>\n                                                <label>Username</label>\n                                                {(invalidUsername!='') &&\n                                                    <Alert className=\"alert alert-danger show\">\n                                                        <span>{invalidUsername}</span>\n                                                    </Alert>\n                                                }\n                                                <input className=\"Itext\" placeholder=\"User Name\" name=\"username\" value={this.state.username} onChange={this.onChange}\n                                                // onKeyUp={this.checkValidUser}\n                                                ></input>\n                                                <label>Password</label>\n                                                {(invalidPassword!='') &&\n                                                    <Alert className=\"alert alert-danger show\">\n                                                        <span>{invalidPassword}</span>\n                                                    </Alert>\n                                                }\n                                                <input className=\"Itext\" placeholder=\"Password\" name=\"password\" type=\"password\" value={this.state.password} onChange={this.onChange}></input>\n\n                                              <div className=\"clearfix\">\n                                                    <button type=\"submit\" className=\"save\">Login</button>\n                                                </div>\n                                            </form>\n                                        </div>\n\n                                    {/* </Modal.Body>\n                                </Modal> */}\n\n                            \n                        </Col>\n                        <Col md={4} />\n                    </Row>\n                </Grid>\n            </div >\n        );\n    }\n}\n\nexport default Login;","import React, { Component } from \"react\";\nimport { NavItem, Nav, NavDropdown, MenuItem } from \"react-bootstrap\";\n\nclass AdminNavbarLinks extends Component {\n  constructor(props) {\n    super(props);\n  }\n  logout = () => {\n    localStorage.clear();\n    this.props.history.push('/login');\n  }\n  render() {\n    const notification = (\n      <div>\n        {/* <i className=\"fa fa-globe\" />\n        <b className=\"caret\" /> */}\n        {/* <span className=\"notification\">5</span> */}\n        <p className=\"hidden-lg hidden-md\">Notification</p>\n      </div>\n    );\n    return (\n      <div>\n        <Nav>\n          <NavItem eventKey={1} href=\"#\">\n            {/* <i className=\"fa fa-dashboard\" /> */}\n            <p className=\"hidden-lg hidden-md\">Dashboard</p>\n          </NavItem>\n          <NavDropdown\n            eventKey={2}\n            title={notification}\n            noCaret\n            id=\"basic-nav-dropdown\"\n          >\n            <MenuItem eventKey={2.1}>Notification 1</MenuItem>\n            <MenuItem eventKey={2.2}>Notification 2</MenuItem>\n            <MenuItem eventKey={2.3}>Notification 3</MenuItem>\n            <MenuItem eventKey={2.4}>Notification 4</MenuItem>\n            <MenuItem eventKey={2.5}>Another notifications</MenuItem>\n          </NavDropdown>\n          <NavItem eventKey={3} href=\"#\">\n            {/* <i className=\"fa fa-search\" />\n            <p className=\"hidden-lg hidden-md\">Search</p> */}\n          </NavItem>\n        </Nav>\n        <Nav pullRight>\n          {/* <NavItem eventKey={1} href=\"#\">\n            Account\n          </NavItem>\n          <NavDropdown\n            eventKey={2}\n            title=\"Dropdown\"\n            id=\"basic-nav-dropdown-right\"\n          >\n            <MenuItem eventKey={2.1}>Action</MenuItem>\n            <MenuItem eventKey={2.2}>Another action</MenuItem>\n            <MenuItem eventKey={2.3}>Something</MenuItem>\n            <MenuItem eventKey={2.4}>Another action</MenuItem>\n            <MenuItem eventKey={2.5}>Something</MenuItem>\n            <MenuItem divider />\n            <MenuItem eventKey={2.5}>Separated link</MenuItem>\n          </NavDropdown> */}\n          <NavItem  eventKey={3} onClick={() => this.logout()}>\n           <span className=\"logOutbtn\">Logout</span> \n          </NavItem>\n        </Nav>\n      </div>\n    );\n  }\n}\n\nexport default AdminNavbarLinks;\n","import React, { Component } from \"react\";\nimport { Navbar } from \"react-bootstrap\";\n\nimport AdminNavbarLinks from \"./AdminNavbarLinks\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.mobileSidebarToggle = this.mobileSidebarToggle.bind(this);\n    this.state = {\n      sidebarExists: false\n    };\n  }\n  mobileSidebarToggle(e) {\n    if (this.state.sidebarExists === false) {\n      this.setState({\n        sidebarExists: true\n      });\n    }\n    e.preventDefault();\n    document.documentElement.classList.toggle(\"nav-open\");\n    var node = document.createElement(\"div\");\n    node.id = \"bodyClick\";\n    node.onclick = function() {\n      this.parentElement.removeChild(this);\n      document.documentElement.classList.toggle(\"nav-open\");\n    };\n    document.body.appendChild(node);\n  }\n  render() {\n    return (\n      <Navbar fluid>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <a href=\"#\">{this.props.brandText== \"Dashboard\" ? \"Hedging Interest Differentials Monitoring\" : this.props.brandText }</a>\n          </Navbar.Brand>\n          <Navbar.Toggle onClick={this.mobileSidebarToggle} />\n        </Navbar.Header>\n        <Navbar.Collapse>\n          <AdminNavbarLinks {...this.props}/>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport AdminNavbarLinks from \"../Navbars/AdminNavbarLinks.jsx\";\n\n// import logo from \"assets/img/reactlogo.png\";\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth,\n      menu: false\n    };\n  }\n  toggle = () => {\n    this.setState({ menu: !this.state.menu })\n  }\n\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  updateDimensions() {\n    this.setState({ width: window.innerWidth });\n  }\n  componentDidMount() {\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n  render() {\n    const sidebarBackground = {\n      backgroundImage: \"url(\" + this.props.image + \")\"\n    };\n    return (\n\n\n      <div\n        id=\"sidebar\"\n        className=\"sidebar\"\n        data-color={this.props.color}\n        data-image={this.props.image}\n      >\n        {this.props.hasImage ? (\n          <div className=\"sidebar-background\"  />\n        ) : (\n            null\n          )}\n        <div className=\"logo\">\n          <a\n            href=\"https://www.creative-tim.com?ref=lbd-sidebar\"\n            className=\"simple-text logo-mini\"\n          >\n            <div className=\"logo-img\">\n\n            </div>\n          </a>\n          <span className=\"simple-text logo-normal\">\n            Dashboard\n          </span>\n          {/* <a\n            href=\"https://www.creative-tim.com?ref=lbd-sidebar\"\n            className=\"simple-text logo-normal\"\n          >\n            Dashboard\n          </a> */}\n        </div>\n        <div className=\"sidebar-wrapper\">\n          {/* <ul className=\"nav\" style={{margin:'0px 20px'}}>\n            <li className=\"side-list\">\n              <p> Dashboard </p>\n            </li>\n            <li className=\"side-list\">\n              <p onClick={this.toggle}>Filter\n                      <i className=\"fa fa-angle-down\" aria-hidden=\"true\" style={{ float: 'right' }}></i>\n              </p>\n              {this.state.menu &&\n                <ul>\n\n                  <li>\n                    <p>abc\n                  </p>\n                  </li>\n\n                </ul>\n              }\n            </li>\n            <li className=\"side-list\">\n              <p onClick={this.toggle}>Log In\n                      <i className=\"fa fa-angle-down\" aria-hidden=\"true\" style={{ float: 'right' }}></i>\n              </p>\n            </li>\n            <li className=\"side-list\">\n              <p>Symbol Managing\n              </p>\n            </li>\n            <li className=\"side-list\">\n              <p>Swap\n              </p>\n            </li> */}\n          <ul className=\"nav\" style={{ margin: '0px 20px' }}>\n            {this.state.width <= 991 ? <AdminNavbarLinks {...this.props} /> : null}\n            {this.props.routes.map((prop, key) => {\n              if (!prop.redirect)\n                // console.log(prop.resources, 'resouces');\n              return (\n                <li\n                  className={\n                    prop.upgrade\n                      ? \"active active-pro\"\n                      : this.activeRoute(prop.layout + prop.path)\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.layout + prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                  >\n                    <i className={prop.icon} />\n                    <p onClick={this.toggle}>{prop.name}\n                      {/* <i className=\"fa fa-angle-down\" aria-hidden=\"true\" style={{float:'right'}}></i> */}\n                    </p>\n                    {this.state.menu &&\n                      <ul>\n                        {prop.resources != undefined && prop.resources.map((sub, index) => (\n                          <li key={index}>\n                            <p>{sub.name}\n                            </p>\n                          </li>\n                        ))}\n                      </ul>\n                    }\n                  </NavLink>\n\n                </li>\n              );\n              // return null;\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","\nimport React, { useState, Fragment } from 'react';\nimport { Collapse } from 'reactstrap';\nimport { Row, Col } from \"react-bootstrap\";\nimport NumberFormat from 'react-number-format';\nimport Login from './login';\n\n// import Data from './Data';\n\nconst Closeposition = (props) => {\n    const { allHistoryRecord, fromHistoryOrderInfo, toHistoryOrderInfo, commissionHistoryOrderInfo } = props;\n    const [isOpen2, setIsOpen2] = useState(false);\n    const toggle2 = () => setIsOpen2(!isOpen2); \n\n    // const sumOfTotal = allHistoryRecord.reduce((current, data) => {\n    //     return (data.total + current);\n    // }, 0);\n    let fromSymbols = '';\n    let toSymbols = '';\n    if (allHistoryRecord && Object.entries(allHistoryRecord).length > 0) {\n        fromSymbols = JSON.parse(allHistoryRecord.from_symbols);\n        fromSymbols = (fromSymbols).map(data => data).join(', ');\n        toSymbols = JSON.parse(allHistoryRecord.to_symbols);\n        toSymbols = (toSymbols).map(data => data).join(', ')\n    }\n    let fromsum = 0;\n    let tosum = 0;\n    let commissionSum = 0;\n\n    if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\n        fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\n    }\n    if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\n        tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\n    }\n    if (commissionHistoryOrderInfo && commissionHistoryOrderInfo.length > 0) {\n        commissionSum = (commissionHistoryOrderInfo[0].commission + commissionHistoryOrderInfo[0].swap + commissionHistoryOrderInfo[0].profit);\n    }\n\n    let sumOfTotal = tosum + fromsum;\n\n    let noRecord = ((fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0 && fromHistoryOrderInfo[0].total == null) && (toHistoryOrderInfo && toHistoryOrderInfo.length > 0 && toHistoryOrderInfo[0].total == null)) ? true : false;\n    return (\n        <div>\n            <div className=\"openpositions\" style={{ margin: '20px 0px' }}>\n                <span className=\"p-text\">Closed Positions</span>\n                <span className=\"icon-style\" onClick={toggle2}>\n                    {!isOpen2 ?\n                        <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n                        :\n                        <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\n                    }\n                </span>\n            </div>\n            <div>\n                <Collapse isOpen={isOpen2}>\n                    <Row>\n                        {/* {Data.tablePage.items.map((item, index) =>\n                            <Col md={6} key={index}>\n                                <div className=\"card\">\n                                    <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\n                                    </div>\n                                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                        <table className=\"table\">\n                                            <tbody>\n                                                <tr><td>{item.closed} </td>\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\n                                                </tr>\n                                                <tr><td>{item.commission} </td>\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\n                                                </tr>\n                                                <tr><td>{item.swap} </td>\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\n                                                </tr>\n                                                <tr><td>{item.total} </td>\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                    </div>\n                                </div>\n                            </Col>\n                        )} */}\n                        {/* {(allHistoryRecord && allHistoryRecord.length>0) && allHistoryRecord.map((item, index) =>\n                            <Fragment>\n\n                            <Col md={6} key={index}>\n                                <div className=\"card\">\n                                    <div className=\"header\">\n                                        <h5 className={item.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{item.account.login}</h5>\n                                        <h6 className={'colorDarkBlue'} style={{fontSize:10}}>({item.account.alias})</h6>\n                                    </div>\n                                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                        <table className=\"table\">\n                                            <tbody>\n                                                <tr><td>Closed P/L </td>\n                                                    <td className=\"td-actions text-right\">$ {item.profit}</td>\n                                                </tr>\n                                                <tr><td>Commission </td>\n                                                    <td className=\"td-actions text-right\">$ {item.commission}</td>\n                                                </tr>\n                                                <tr><td>Swap </td>\n                                                    <td className=\"td-actions text-right\">$ {item.swap}</td>\n                                                </tr>\n                                                <tr><td>Total </td>\n                                                    <td className=\"td-actions text-right\">$ {item.total}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                    </div>\n                                </div>\n                            </Col>\n                            </Fragment>\n                        )}\n                        {(allHistoryRecord && allHistoryRecord.length>0) && \n                            <Row>\n                                <Col md={12}>\n                                    <div>\n                                        <div className=\"total-box\">\n                                            <span className=\"text\">Sum of closed positions</span>\n                                            <span className=\"text\" style={{ float: 'right' }}>$ {sumOfTotal}</span>\n                                        </div>\n                                    </div>\n                                </Col>\n                            </Row>\n                        } */}\n                        {noRecord ? (\n                            <div className=\"text-center\">\n                                No Record Found!\n                            </div>) :\n\n                            <Fragment>\n\n                                {(fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0 && fromHistoryOrderInfo[0].total != null && fromHistoryOrderInfo[0].total != 0) ? (\n                                    <Col md={6}>\n                                        <div className=\"card\">\n                                            <div className=\"header\">\n                                                <h5 className={allHistoryRecord.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{allHistoryRecord.accountFromInfo[0].login}</h5>\n                                                <h6 className={'colorDarkBlue'} style={{ fontSize: 10 }}>({allHistoryRecord.accountFromInfo[0].alias})</h6>\n                                            </div>\n                                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                                <table className=\"table\">\n                                                    <tbody>\n                                                        <tr>\n                                                            <span className=\"symbolStyle\">{fromSymbols}</span>\n                                                            {/* <td>{fromSymbols}</td> */}\n                                                            {/* <td className=\"td-actions text-right\">$ {fromHistoryOrderInfo[0].profit}</td> */}\n                                                        </tr>\n                                                        <tr><td>Closed P/L </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                <NumberFormat value={fromHistoryOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                                {/* {fromHistoryOrderInfo[0].profit} */}\n                                                            </td>\n                                                        </tr>\n                                                        <tr><td>Commission </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                {/* {fromHistoryOrderInfo[0].commission} */}\n                                                                <NumberFormat value={fromHistoryOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                            </td>\n                                                        </tr>\n                                                        <tr><td>Swap </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                <NumberFormat value={fromHistoryOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                                {/* {fromHistoryOrderInfo[0].swap} */}\n                                                            </td>\n                                                        </tr>\n                                                        <tr><td>Total </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                <NumberFormat value={fromHistoryOrderInfo[0].total} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                                {/* {fromHistoryOrderInfo[0].total} */}\n                                                            </td>\n                                                        </tr>\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                            </div>\n                                        </div>\n                                    </Col>\n                                ) : (\n                                        <Col md={6}>\n                                            <div className=\"card noRecordCol\"> No Record Found</div>\n                                        </Col>\n                                    )}\n                                {(toHistoryOrderInfo && toHistoryOrderInfo.length > 0 && toHistoryOrderInfo[0].total != null && toHistoryOrderInfo[0].total != 0) ? (\n                                    <Col md={6}>\n                                        <div className=\"card\">\n                                            <div className=\"header\">\n                                                <h5 className={allHistoryRecord.id == '1' ? 'acntText color2' : 'acntText color2'}>{allHistoryRecord.accountToInfo[0].login}</h5>\n                                                <h6 className={'color2'} style={{ fontSize: 10 }}>({allHistoryRecord.accountToInfo[0].alias})</h6>\n                                            </div>\n                                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                                <table className=\"table\">\n                                                    <tbody>\n                                                        <tr>\n                                                            <span className=\"symbolStyle\">{toSymbols}</span>\n\n                                                            {/* <td>{toSymbols}</td> */}\n                                                            {/* <td className=\"td-actions text-right\">$ {fromHistoryOrderInfo[0].profit}</td> */}\n                                                        </tr>\n                                                        <tr><td>Closed P/L </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                <NumberFormat value={toHistoryOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                                {/* {toHistoryOrderInfo[0].profit} */}\n                                                            </td>\n                                                        </tr>\n                                                        <tr><td>Commission </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                {/* {toHistoryOrderInfo[0].commission} */}\n                                                                <NumberFormat value={toHistoryOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                            </td>\n                                                        </tr>\n                                                        <tr><td>Swap </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                {/* {toHistoryOrderInfo[0].swap} */}\n                                                                <NumberFormat value={toHistoryOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                            </td>\n                                                        </tr>\n                                                        <tr><td>Total </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                {/* {toHistoryOrderInfo[0].total} */}\n                                                                <NumberFormat value={toHistoryOrderInfo[0].total} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                            </td>\n                                                        </tr>\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                            </div>\n                                        </div>\n                                    </Col>\n                                ) : (\n                                        <Col md={6}>\n                                            <div className=\"card noRecordCol\"> No Record Found</div>\n                                        </Col>\n                                    )\n\n                                }\n                                {(sumOfTotal != 0) &&\n                                    <Row>\n                                        <Col md={12} style={{ marginBottom: 20 }}>\n                                            <div>\n                                                <div className=\"total-box\">\n                                                    <span className=\"text\">Sum of closed positions</span>\n                                                    <span className=\"text\" style={{ float: 'right' }}>$ {' '}\n                                                        <NumberFormat value={sumOfTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                        {/* {sumOfTotal} */}\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        </Col>\n                                    </Row>\n                                }\n\n                                \n\n\n\n                            </Fragment>\n                        }\n                    </Row>\n                </Collapse>\n                {allHistoryRecord.commission_acount_id !== 0 && allHistoryRecord.commission_acount_id !== undefined &&\n                                    <Col md={12}>\n\n                                        <div className=\"card \">\n                                            <div className=\"header ptheader\">\n                                                <h4 className=\"text-center\"><b>Commission</b></h4>\n                                                <div className=\"row\">\n                                                    <div className=\"col-md-12 text-center\">\n\n                                                        <h5 className={allHistoryRecord.id == '1' ? 'acntText color2' : 'acntText acadjust color2'}>{allHistoryRecord.accountCommissionInfo !== undefined && allHistoryRecord.accountCommissionInfo[0].login} <span>({allHistoryRecord.accountCommissionInfo !== undefined && allHistoryRecord.accountCommissionInfo[0].alias})</span></h5>\n\n                                                        \n                                                    </div>\n\n\n                                                    <div className=\"col-md-12 total text-center\">\n\n                                                       \n                                                        <tr>\n                                                            <td className=\"td-actions total_comm text-right\">\n                                                                \n                                                            Total : $ {' '}\n                                                                {/* {toHistoryOrderInfo[0].total} */}\n                                                                <NumberFormat value={allHistoryRecord.history_info} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                            </td>\n                                                        </tr>\n\n\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </Col>}\n            </div>\n        </div >\n\n    );\n}\n\nexport default Closeposition;\n","const Data = {\n \n  tablePage: {\n    items: [\n      {id: 1,lot:'Buy 10 Lot', closed: 'Closed P/L', commission: 'Commission', swap: 'Swap', total: 'Total', price:'$ 1110',textA: 'Account A'},\n      {id: 2, lot:'Sell 10 Lot', closed: 'Closed P/L', commission: 'Commission', swap: 'Swap', total: 'Total', price:'$ 1111', textA: 'Account B'},\n    ]\n  },\n  dashBoardPage: {\n    items: [\n      {id: 1, title: 'Balance', textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 2, title: 'Equity',textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 3, title: 'Margin', textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 4, title: 'Free Margin', textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 5, title: 'Margin %', textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 5, title: 'Floating P/L', textA: 'Account A', textB: 'Account B',price:'$ 400'}\n    ],\n  }\n};\n\nexport default Data;\n","import React, { useState, Fragment } from 'react';\nimport { Collapse } from 'reactstrap';\nimport { Row, Col } from \"react-bootstrap\";\nimport NumberFormat from 'react-number-format';\n\nimport Data from './Data';\n\nexport default function Openposition(props) {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => setIsOpen(!isOpen);\n    const {allOpenRecord,fromOpenOrderInfo, toOpenOrderInfo, } = props;\n    // const sumOfTotal = allOpenRecord.reduce((current, data) => {\n    //     return (Math.floor(data.commission + data.swap + data.profit+ current))\n    //     // return (data.profit + current);\n    // }, 0);\n\n    let fromsum=0; \n    let tosum=0;\n    let fromSymbols='';\n    let toSymbols='';\n    if(allOpenRecord && Object.entries(allOpenRecord).length>0){\n      fromSymbols = JSON.parse(allOpenRecord.from_symbols);\n      fromSymbols = (fromSymbols).map(data => data).join(', ');\n      toSymbols = JSON.parse(allOpenRecord.to_symbols);\n      toSymbols = (toSymbols).map(data => data).join(', ')\n    }\n    // if(fromOpenOrderInfo && fromOpenOrderInfo.length>0){\n    //   fromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\n    // }\n    // if(toOpenOrderInfo && toOpenOrderInfo.length>0){\n    //   tosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n    // }\n    if(fromOpenOrderInfo && fromOpenOrderInfo.length>0){\n      if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\n        fromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\n      }else{\n        fromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\n      }\n    }\n    if(toOpenOrderInfo && toOpenOrderInfo.length>0){\n      if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\n        tosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap);\n      }else{\n        tosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n      }\n      // opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n    }\n\n    let sumOfTotal = tosum + fromsum;\n    let noRecord = ((fromOpenOrderInfo && fromOpenOrderInfo.length>0 && fromOpenOrderInfo[0].total==null ) && (toOpenOrderInfo && toOpenOrderInfo.length>0 && toOpenOrderInfo[0].total==null)) ? true:false;\n\n    return (\n        <div>\n            <div className=\"openpositions\" style={{ margin: '20px 0px' }}>\n                <span className=\"p-text\">Open Positions</span>\n                <span className=\"icon-style\" onClick={toggle}>\n                    {!isOpen ? \n                        <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n                        : \n                        <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\n                    }\n                </span>\n          </div>\n          <div>\n\n            <Collapse isOpen={isOpen}>\n              <Row>\n               \n\n                    \n                {/* {Data.tablePage.items.map((item, index) =>\n                  <Col md={6} key={index}>\n                    <div className=\"card\">\n                      <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\n                      </div>\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                        <table className=\"table\">\n                          <tbody>\n                            <tr><td>{item.lot} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.commission} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.swap} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.total} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                      </div>\n                    </div>\n                  </Col>\n                )} */}\n\n                {/* {(allOpenRecord && allOpenRecord.length>0) && allOpenRecord.map((item, index) =>\n                    \n                    <Col md={6} key={index}>\n                            <div className=\"card\">\n                            <div className=\"header\">\n                              <h5 className={item.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{item.account.login}</h5>\n                              <h6 style={{fontSize:10}} className={'colorDarkBlue'}>({item.account.alias})</h6>\n                            </div>\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                <table className=\"table\">\n                                <tbody>\n                                    <tr>\n                                        <td>\n                                            {item.order_type ===0 ? 'BUY ' : 'SELL ' } \n                                            {item.lots} {(item.lots>1) ? 'Lots':'Lot'}\n                                        </td>\n                                        <td className=\"td-actions text-right\"> {''}</td>\n                                    </tr>\n                                    <tr><td>Floating P/L </td>\n                                        <td className=\"td-actions text-right\">$ {item.profit}</td>\n                                    </tr>\n                                    <tr><td>Commission </td>\n                                        <td className=\"td-actions text-right\">$ {item.commission}</td>\n                                    </tr>\n                                    <tr><td>Swap </td>\n                                        <td className=\"td-actions text-right\">$ {item.swap}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Total </td>\n                                        <td className=\"td-actions text-right\">\n                                          $ {Math.floor(item.commission + item.swap + item.profit)}\n                                        </td>\n                                    </tr>\n                                </tbody>\n                                </table>\n                            </div>\n                            </div>\n                            </div>\n                        </Col>\n                )} */}\n                {/* {(allOpenRecord && allOpenRecord.length>0) &&\n                    <Row>\n                        <Col md={12}>\n                            <div>\n                            <div className=\"total-box\">\n                                <span className=\"text\">Sum of open positions</span>\n                                <span className=\"text\" style={{ float: 'right' }}>$ {sumOfTotal}</span>\n                            </div>\n                            </div>\n                        </Col>\n                    </Row>\n                } */}\n                  {(noRecord)?\n                    <div className=\"text-center\">\n                        No Record Found!\n                    </div>\n                    :\n                    <Fragment>\n                  {(fromOpenOrderInfo && fromOpenOrderInfo.length>0 && fromOpenOrderInfo[0].total!=null) ?\n                    \n                    <Col md={6}>\n                            <div className=\"card\">\n                            <div className=\"header\">\n                              <h5 className={allOpenRecord.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{allOpenRecord.accountFromInfo[0].login}</h5>\n                              <h6 style={{fontSize:10}} className={'colorDarkBlue'}>({allOpenRecord.accountFromInfo[0].alias})</h6>\n                            </div>\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                <table className=\"table\">\n                                <tbody>\n                                    <tr>\n                                        <span className=\"symbolStyle\">{fromSymbols}</span>\n                                    </tr>\n                                            {/* Buy 10 Lot  */}\n                                    <tr>\n                                        <td>\n                                            {fromOpenOrderInfo[0].order_type == 0 ? 'BUY ' : 'SELL ' } \n                                            {fromOpenOrderInfo[0].lots} {(fromOpenOrderInfo[0].lots>1) ? 'Lots':'Lot'}\n                                        </td>\n                                        <td className=\"td-actions text-right\"> {''}</td>\n                                    </tr>\n                                    {/* <tr><td>{(fromOpenOrderInfo[0].lots>1) ? 'Lots':'Lot'}</td>\n                                        <td className=\"td-actions text-right\">{fromOpenOrderInfo[0].lots}</td>\n                                    </tr> */}\n                                    <tr><td>Floating P/L </td>\n                                        <td className=\"td-actions text-right\">$ {' '}\n                                        {/* {fromOpenOrderInfo[0].profit} */}\n                                        <NumberFormat value={fromOpenOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                        </td>\n                                    </tr>\n                                    <tr><td>Commission </td>\n                                        <td className=\"td-actions text-right\">$ {' '}\n                                        {/* {fromOpenOrderInfo[0].commission} */}\n                                        <NumberFormat value={fromOpenOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                        </td>\n                                    </tr>\n                                    <tr><td>Swap </td>\n                                        <td className=\"td-actions text-right\">$ {' '}\n                                        {/* {fromOpenOrderInfo[0].swap} */}\n                                        { allOpenRecord.swapFrominfo &&allOpenRecord.swapFrominfo.length>0 ? \n                                        <NumberFormat value={allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                        // (allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].swap) \n                                        : \n                                        <NumberFormat value={ fromOpenOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                        // fromOpenOrderInfo[0].swap\n                                        }\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Total </td>\n                                        <td className=\"td-actions text-right\">$ {' '}\n                                          {/* $ {Math.floor(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)} */}\n                                          { allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0 ? \n                                        <NumberFormat value={(fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap) } displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                        // Math.floor(fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap) \n                                        :\n                                        <NumberFormat value={(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                          //  Math.floor(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)\n                                        }\n                                        </td>\n                                    </tr>\n                                </tbody>\n                                </table>\n                            </div>\n                            </div>\n                            </div>\n                        </Col>\n                        :\n                      <Col md={6}>\n                          <div className=\"card noRecordCol\"> No Record Found</div>\n                      </Col>\n                  }\n\n                  {(toOpenOrderInfo && toOpenOrderInfo.length>0 && toOpenOrderInfo[0].total!=null) ?\n                    \n                    <Col md={6}>\n                            <div className=\"card\">\n                            <div className=\"header\">\n                              <h5 className={allOpenRecord.id == '1' ? 'acntText color2' : 'acntText color2'}>{allOpenRecord.accountToInfo[0].login}</h5>\n                              <h6 style={{fontSize:10}} className={'color2'}>({allOpenRecord.accountToInfo[0].alias})</h6>\n                            </div>\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                <table className=\"table\">\n                                <tbody>\n                                  {/* Buy 10 Lot  */}\n                                    <tr>\n                                        <span className=\"symbolStyle\">{toSymbols}</span>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            {toOpenOrderInfo[0].order_type == 0 ? 'BUY ' : 'SELL ' } \n                                            {toOpenOrderInfo[0].lots} {(toOpenOrderInfo[0].lots>1) ? 'Lots':'Lot'}\n                                        </td>\n                                        <td className=\"td-actions text-right\"> {''}</td>\n                                    </tr>\n                                    {/* <tr><td>{(fromOpenOrderInfo[0].lots>1) ? 'Lots':'Lot'}</td>\n                                        <td className=\"td-actions text-right\">{fromOpenOrderInfo[0].lots}</td>\n                                    </tr> */}\n                                    <tr><td>Floating P/L </td>\n                                        <td className=\"td-actions text-right\">$ {' '} \n                                        {/* {toOpenOrderInfo[0].profit} */}\n                                        <NumberFormat value={toOpenOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                        </td>\n                                    </tr>\n                                    <tr><td>Commission </td>\n                                        <td className=\"td-actions text-right\">$ {' '}\n                                        {/* {toOpenOrderInfo[0].commission} */}\n                                        <NumberFormat value={toOpenOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                        \n                                        </td>\n                                    </tr>\n                                    <tr><td>Swap </td>\n                                        <td className=\"td-actions text-right\">$ {' '}\n                                        {/* {toOpenOrderInfo[0].swap} */}\n                                        { allOpenRecord.swapToinfo &&allOpenRecord.swapToinfo.length>0 ? \n                                        // (allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].swap) \n                                        <NumberFormat value={(allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                        \n                                        : \n                                        <NumberFormat value={(toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                        // toOpenOrderInfo[0].swap\n                                        }\n                                        </td>\n\n                                    </tr>\n                                    <tr>\n                                        <td>Total </td>\n                                        <td className=\"td-actions text-right\"> $ {' '}\n                                        { allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0 ? \n                                          //  Math.floor(toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap)\n                                        <NumberFormat value={(toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                           \n                                           :\n                                        <NumberFormat value={(toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                          //  Math.floor(toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit)\n                                        }\n                                        </td>\n                                    </tr>\n                                </tbody>\n                                </table>\n                            </div>\n                            </div>\n                            </div>\n                        </Col>\n                  :\n                  <Col md={6}>\n                    <div className=\"card noRecordCol\"> No Record Found</div>\n                  </Col>\n                  }\n                  {\n                    sumOfTotal!=0 &&\n                    <Row>\n                        <Col md={12}>\n                            <div>\n                            <div className=\"total-box\">\n                                <span className=\"text\">Sum of open positions</span>\n                                <span className=\"text\" style={{ float: 'right' }}>$ {' '}\n                                <NumberFormat value={sumOfTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                {/* {sumOfTotal} */}\n                                </span>\n                            </div>\n                            </div>\n                        </Col>\n                    </Row>\n                  }\n                  </Fragment>\n                }\n              </Row>\n            </Collapse>\n          </div>\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport { Collapse } from 'reactstrap';\nimport Select from 'react-select';\nimport { Grid, Row, Col } from \"react-bootstrap\";\n// import Data from './Data';\nimport NumberFormat from 'react-number-format';\nimport Closeposition from 'views/Closeposition';\nimport Openposition from 'views/Openposition';\n\n// import config from '../constant/config.js';\nimport config from '../constant/config.js';\nconst axios = require('axios');\n\n// import Card from \"components/Card/Card.jsx\";\n// import { thArray, tdArray } from \"variables/Variables.jsx\";\n\nclass TableList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      // isOpen: false,\n      allSymbols:[],\n      selectedOption:null,\n      allHistoryRecord:[],\n      allOpenRecord:[],\n      fromHistoryOrderInfo:[],\n      toHistoryOrderInfo:[],\n      commissionHistoryOrderInfo:[],\n      fromOpenOrderInfo:[],\n      toOpenOrderInfo:[],\n      filterlist:[],\n      allSymbols:[],\n      symbolsObj:[]\n    }\n\n  }\n  // toggle = () => {\n  //   this.setState({ isOpen: !this.state.isOpen })\n  // }\n  // componentWillMount() {\n  //   let self = this;\n      // axios.get(config.baseurl + '/accounts/fetchAllSymbol')\n      // .then(function (response) {\n      //   if (response.status == 200) {\n      //     self.setState({ allSymbols: response.data.rows })\n      //   }\n      // })\n\n      // axios.get(config.baseurl + '/filter/fetchfilterdata')\n      // .then(function (response) {\n      //   if (response.status == 200) {\n      //     self.setState({ filterlist: response.data.rows })\n      //   }\n      // })\n\n      // axios.get(config.baseurl + '/filter/fetchActivefilterdata')\n      // .then(function (response) {\n      //   if (response.status == 200) {\n      //     if(response.data.rows && response.data.rows.length>0){\n      //       // let symbolsObj = (response.data.rows[0].symbols).map(data => { return ({value:data, label:data})})\n      //         self.setState({ filterlist: response.data.rows, allSymbols: response.data.rows[0].symbols, \n      //         // selectedOption:symbolsObj\n      //        })\n      //     }\n      //   }\n      // });\n  // }\n\n  componentDidMount(){\n    let self = this;\n    axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\n    .then(function (response) {\n      // console.log(response.data, 'response.data his')\n      if (response.status == 200) {\n        // self.setState({ allHistoryRecord: response.data.rows })\n        self.setState({ \n          allHistoryRecord: response.data.rows ,\n          fromHistoryOrderInfo:response.data.fromHistoryOrderInfo,\n          toHistoryOrderInfo:response.data.toHistoryOrderInfo,\n          commissionHistoryOrderInfo:response.data.commissionHistoryOrderInfo\n        })\n      }\n    })\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\n    axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\n    .then(function (response) {\n      if (response.status == 200) {\n      // console.log(response.data, 'response.data open')\n\n        // self.setState({ allOpenRecord: response.data.rows })\n        self.setState({ \n          allOpenRecord: response.data.rows ,\n          fromOpenOrderInfo:response.data.fromOpenOrderInfo,\n          toOpenOrderInfo:response.data.toOpenOrderInfo\n        })\n      }\n    })\n  }\n\n  fetchDataAccordingSymbols = (symbol) => {\n    let self = this;\n    let {startdateFrom, startdateTo,enddateFrom, enddateTo, to_account_id, from_account_id} = this.state.filterlist[0];\n    \n    let postData =  {\"to_account_id\":to_account_id, \"from_account_id\":from_account_id, \"startdateFrom\":startdateFrom, \"startdateTo\":startdateTo,\"enddateFrom\": enddateFrom, \"enddateTo\":enddateTo, \"symbol\":symbol}\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolHistory', {'symbol':symbol})\n    \n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolHistory', postData)\n    axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\n    .then(function (response) {\n      // console.log(response.data, 'response.data his')\n      if (response.status == 200) {\n        // self.setState({ allHistoryRecord: response.data.rows })\n        self.setState({ \n          allHistoryRecord: response.data.rows ,\n          fromHistoryOrderInfo:response.data.fromHistoryOrderInfo,\n          toHistoryOrderInfo:response.data.toHistoryOrderInfo,\n          commissionHistoryOrderInfo:response.data.commissionHistoryOrderInfo\n\n        })\n      }\n    })\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\n    axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\n    .then(function (response) {\n      if (response.status == 200) {\n      // console.log(response.data, 'response.data open')\n\n        // self.setState({ allOpenRecord: response.data.rows })\n        self.setState({ \n          allOpenRecord: response.data.rows ,\n          fromOpenOrderInfo:response.data.fromOpenOrderInfo,\n          toOpenOrderInfo:response.data.toOpenOrderInfo\n        })\n      }\n    })\n  }\n\n  handleChange = selectedOption => {\n    this.setState({ selectedOption });\n    this.fetchDataAccordingSymbols(selectedOption.value);\n  };\n\n  renderSymbols = () => {\n    const { selectedOption, allSymbols } = this.state;\n    // let options = allSymbols.map(data => {\n    //   return {value:data.name, label:data.name};\n    // })\n    let options = allSymbols.map(data => {\n      return {value:data, label:data};\n    });\n   \n    return(\n      <Select\n        placeholder=\"Select Symbol...\"\n        className=\"S-text\"\n        // isMulti\n        value={selectedOption}\n        onChange={this.handleChange}\n        options={options}\n      />\n      )\n  }\n\n  render() {\n    const {allHistoryRecord, allOpenRecord, selectedOption, toOpenOrderInfo, fromOpenOrderInfo,fromHistoryOrderInfo,commissionHistoryOrderInfo ,toHistoryOrderInfo} = this.state;\n  //   const sumOfOpenTotal = allOpenRecord.reduce((current, data) => {\n  //     return (Math.floor(data.commission + data.swap + data.profit+ current));\n  // }, 0);\n\n  //   const sumOfHistoryTotal = allHistoryRecord.reduce((current, data) => {\n  //     return (data.profit + current);\n  // }, 0);\n    let uniqueSymbols=\"\";\n    if(allOpenRecord && Object.entries(allOpenRecord).length>0){\n      let fromSymbols = JSON.parse(allOpenRecord.from_symbols);\n      // fromSymbols = (fromSymbols).map(data => data).join(', ');\n      let toSymbols = JSON.parse(allOpenRecord.to_symbols);\n      let combineSymbols = fromSymbols.concat(toSymbols);\n      uniqueSymbols = combineSymbols.filter((item, i, ar) => ar.indexOf(item) === i);\n      uniqueSymbols = (uniqueSymbols).map(data => data).join(', ')\n    }\n    let fromsum=0; \n    let tosum=0;\n    // if(fromHistoryOrderInfo && commissionHistoryOrderInfo && fromHistoryOrderInfo.length>0){\n      if(fromHistoryOrderInfo && fromHistoryOrderInfo.length>0){\n      fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\n    }\n   \n    if(toHistoryOrderInfo && toHistoryOrderInfo.length>0){\n      tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\n    }\n\n    let sumOfHistoryTotal = tosum + fromsum;\n\n    let openfromsum=0; \n    let opentosum=0;\n    if(fromOpenOrderInfo && fromOpenOrderInfo.length>0 && fromOpenOrderInfo[0].total!=null){\n      if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\n        openfromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\n      }else{\n        openfromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\n      }\n    }\n    if(toOpenOrderInfo && toOpenOrderInfo.length>0  && toOpenOrderInfo[0].total!=null){\n      if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\n        opentosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit+ toOpenOrderInfo[0].swap);\n      }else{\n        opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n      }\n      // opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n    }\n\n    let sumOfOpenTotal = opentosum + openfromsum;\n   \n\n\n    return (\n      <div className=\"content col-md-12 col-sm-6\">\n        <Grid fluid className=\"symbol-box\">\n          {/* <div className=\"symbol-box\"> */}\n          {/* <span className=\"S-text\">EURUSD</span> */}\n          {/* <div style={{ borderBottom: '2px solid grey' }}>\n            {this.renderSymbols()}\n\n          </div> */}\n          {/* <div style={{ margin: '20px 0px' }}>\n            <span className=\"p-text\">Open Positions</span>\n            <span className=\"icon-style\" onClick={this.toggle}>\n              <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\n            </span>\n          </div>\n          <div>\n\n            <Collapse isOpen={this.state.isOpen}>\n              <Row>\n                {Data.tablePage.items.map((item, index) =>\n                  <Col md={6} key={index}>\n                    <div className=\"card\">\n                      <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\n                      </div>\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                        <table className=\"table\">\n                          <tbody>\n                            <tr><td>{item.lot} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.commission} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.swap} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.total} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                      </div>\n                    </div>\n                  </Col>\n                )}\n                <Row>\n                  <Col md={12}>\n                    <div>\n                      <div className=\"total-box\">\n                        <span className=\"text\">Sum of open position</span>\n                        <span className=\"text\" style={{ float: 'right' }}>$111111</span>\n                      </div>\n                    </div>\n                  </Col>\n                </Row>\n              </Row>\n            </Collapse>\n          </div> */}\n          {/* closed position */}\n          <Openposition \n            allOpenRecord={allOpenRecord}\n            toOpenOrderInfo={toOpenOrderInfo}\n            fromOpenOrderInfo={fromOpenOrderInfo}\n            />\n          <Closeposition \n            allHistoryRecord={allHistoryRecord}\n            fromHistoryOrderInfo={fromHistoryOrderInfo}\n            commissionHistoryOrderInfo={commissionHistoryOrderInfo}\n            toHistoryOrderInfo={toHistoryOrderInfo}\n            />\n          <Row>\n            \n            <Col md={12} sm={6}>\n              <div className={sumOfHistoryTotal + sumOfOpenTotal >= 0 ? \"summary-box\" : \"summary-box-red\"}>\n                \n                \n                {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\n                {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\n                <span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\n                \n                <Col md={12} sm={12}>\n                  <div className=\"summary-text text-center\" style={{fontWeight:600,color:\"#797979\"}}>Summary For {uniqueSymbols}</div>\n                </Col>\n                <Col md={12} sm={12}>\n                  <div className=\"text-center\" style={{fontWeight:'bold',fontSize:\"18px\"}}>$ {' '}\n                  \n                  <NumberFormat value={allHistoryRecord.history_info !== undefined ?  sumOfHistoryTotal + sumOfOpenTotal + allHistoryRecord.history_info : sumOfHistoryTotal + sumOfOpenTotal } displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                  \n                  \n                  {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\n                  \n                  </div>\n                </Col>\n                \n                <div className=\"clearfix\"></div>\n              </div>\n            </Col>\n          </Row>\n          {/* </div> */}\n        </Grid>\n      </div>\n    );\n  }\n\n}\n\nexport default TableList;","import React, { Component } from 'react';\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\n// import SweetAlert from 'react-bootstrap-sweetalert';\nimport swal from 'sweetalert';\nimport config from '../constant/config.js';\nconst axios = require('axios');\n\nlet intervalSet;\nlet timerWaitInterval;\nlet timerWait = 100;\nclass Innerlogin extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loginForm: false,\n            setShow: false,\n            show: true,\n            login: '',\n            password: '',\n            broker: '',\n            alias: '',\n            alert: null,\n            persons: [],\n            shwPwd: false,\n            shwMsg: false,\n            accountlist: [],\n            editForm:false,\n            detailForm:false,\n            editData:[],\n            edituser:'',\n            editserver:'',\n            editalias:'',\n            editstatus:'',\n            id:'',\n            tryAgainConnection: false,\n            currentAddLogin: null,\n            currentAddBroker: null,\n            timerShow: false\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onUpdate = this.onUpdate.bind(this);\n\n    }\n    // delete alert\n    // deleteThisGoal() {\n    //     const getAlert = () => (\n    //         <SweetAlert\n    //             success\n    //             title=\"Woot!\"\n    //             onConfirm={() => this.hideAlert()}\n    //         >\n    //             Hello world!\n    //       </SweetAlert>\n    //     );\n\n    //     this.setState({\n    //         alert: getAlert()\n    //     });\n    // }\n    fectheAllAccount(){\n        let self = this;\n        axios.get(config.baseurl + '/users/allAccounts')\n        .then(function (response) {\n            if (response.status == 200) {\n                self.setState({ accountlist: response.data.rows })\n            }\n        })\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value.trim() })\n    }\n\n    checkUserConnected = (login, broker) => {\n        let self = this;\n        axios.post(config.baseurl + '/users/checkUserConnected', {login: login, broker: broker})\n        .then(function (response) {\n            // console.log(response, \"response connection\");\n            if (response.status == 200) {\n                if(response.data.connected){\n                    self.setState({currentAddLogin: null, currentAddBroker: null});\n                    clearInterval(intervalSet);\n                    clearInterval(timerWaitInterval);\n                    self.setState({timerShow: false});\n                    timerWait = 100\n                    self.setState({tryAgainConnection: false});\n                    self.handleClose();\n                    self.fectheAllAccount()\n                }\n            }else{\n\n            }\n        })\n    }\n\n    setIntervalCustom = () => {\n        let self = this;\n        timerWaitInterval = setInterval(function(){ \n            timerWait--;\n            if(timerWait <= 0) {\n                clearInterval(intervalSet);\n                clearInterval(timerWaitInterval);\n                self.setState({tryAgainConnection: true});\n                self.setState({timerShow: false});\n                timerWait = 100\n            }else{\n                self.setState({timerShow: true});\n            }\n        }, 1000);\n    }\n\n    tryAgainConnectionFun = () => {\n        let self = this;\n        self.setIntervalCustom();\n        intervalSet = setInterval(function(){ \n            self.checkUserConnected(self.state.currentAddLogin, self.state.currentAddBroker)\n        }, 5000);\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const userdetail = {\n            login: this.state.login,\n            password: this.state.password,\n            broker: this.state.broker,\n            alias: this.state.alias\n        }\n        if (this.state.login == '') {\n            this.setState({ shwPwd: true })\n        }\n      \n        let self = this;\n        axios.post(config.baseurl + '/users/addUser', userdetail)\n            .then(function (response) {\n                // console.log(response,'response')\n                if (response.status == 200 && response.data.status === true) {\n                    self.setIntervalCustom();\n                    self.fectheAllAccount();\n                    self.setState({currentAddLogin: userdetail.login, currentAddBroker: userdetail.broker});\n                    intervalSet = setInterval(function(){ \n                        self.checkUserConnected(userdetail.login, userdetail.broker)\n                    }, 5000);\n\n                    // self.handleClose();\n                    self.setState({login: \"\", password:'', broker:'', alias:''})\n\n                }\n                if(response.data.status == 202){\n                    swal({\n                        // title: \"Error\",\n                        text: \"User already exist\",\n                        // icon: \"{response.status == 200 ? 'warning ':'success'}\",\n                        timer: 2000,\n                        button: false\n                    })\n\n                }\n                // if(response.status == 200 && response.data.rows == 'error'){\n                //     swal({\n                //         title: \"Error\",\n                //         text: \"User doesn't exist\",\n                //         // icon: \"{response.status == 200 ? 'warning ':'success'}\",\n                //         timer: 2000,\n                //         button: false\n                //     })\n\n                // }\n                else if (response.status == 201) {\n                    swal({\n                        title: \"Done!\",\n                        text: response.data,\n                        // icon: \"{response.status == 200 ? 'warning ':'success'}\",\n                        timer: 2000,\n                        button: false\n                    })\n                }\n\n            })\n            .catch(function (error) {\n                console.log(error);\n                self.handleClose();\n            });\n\n\n\n        /////////////////// redirect to dashboard\n        // login(user).then(res => {\n        //     if (res) {\n        //         this.props.history.push(`\\profile`)\n        //     }\n        // })\n    }\n    onUpdate(e) {\n        e.preventDefault();\n        const userdetail = {\n            id:this.state.id,\n            user:this.state.edituser,\n            broker: this.state.editserver,\n            alias: this.state.editalias\n        }\n        let self = this;\n        axios.post(config.baseurl + '/users/updateuser', userdetail)\n            .then(function (response) {\n                if (response.status == 200) {\n                    // self.setState({ accountlist: response.data.rows })\n                    self.fectheAllAccount();\n                    self.handleCloseEdit();\n\n                }\n\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    // checkValidUser = ()=> {\n    //     console.log(this.state,'loginnnnnnnnnnnnnnnnnnnnnnnn')\n    //     const userdetail = {\n    //         login: this.state.login,\n    //         password: this.state.password,\n    //         broker: this.state.broker,\n    //         alias: this.state.alias\n    //     }\n    //     axios.get(config.baseurl + '/accounts/matchUser',userdetail)\n    //     .then(function (response) {\n\n    //         if (response.status == 200) {\n    //             // alert(response.data)\n    //             swal({\n    //                 title: \"Done!\",\n    //                 text: response.data,\n    //                 // icon: \"{response.status == 200 ? 'warning ':'success'}\",\n    //                 timer: 2000,\n    //                 button: false\n    //             })\n\n    //         }\n    //         // console.log(response);\n    //     })\n    //     .catch(function (error) {\n    //         console.log(error);\n    //     });\n    // }\n    toogle = () => {\n        this.setState({  loginForm: !this.state.loginForm,  })\n        this.setState({ login: '', password:'', broker:'', alias:''  })\n\n    }\n    handleClose = () => {\n        this.setState({ loginForm: false })\n        \n    }\n    handleCloseEdit = () => {\n        this.setState({ editForm: false })\n    }\n    handleCloseDetail = () => {\n        this.setState({ detailForm: false })\n    }\n    handleShow = () => {\n        this.setState({ setShow: true })\n    }\n    componentDidMount() {\n        this.fectheAllAccount();\n        // let self = this;\n        // axios.get(config.baseurl + '/users/allAccounts')\n        //     .then(function (response) {\n        //         console.log(response.data.rows,'response.data.rows');\n                \n        //         if (response.status == 200) {\n        //             self.setState({ accountlist: response.data.rows })\n        //         }\n        //     })\n    }\n    createTr = () => {\n        return this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => {\n            return (\n                <tr key={index}>\n                    <th scope=\"row\">{index + 1}</th>\n                    <td>{item.login}</td>\n                    <td>{item.broker}</td>\n                    <td>{item.alias}</td>\n                    <td style={{fontWeight:600}}>{item.launched == 1 ? 'Connected': 'Disconnected'}</td>\n                    <td>\n                        <a href=\"\" onClick={(e)=> this.viewFilter(e,item)}><i className=\"fa fa-eye facolor\" aria-hidden=\"true\"></i></a>\n                        <a href=\"\" onClick={(e)=> this.editFilter(e,item)}><i className=\"fa fa-pencil-square-o facolor\" aria-hidden=\"true\"></i></a>\n                        {/* <a href=\"\" onClick={(e)=> this.deleteFilter(e,item)}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></a> */}\n                        </td>\n                </tr>\n            )\n        })\n    }\n    editFilter(e, data){\n        e.preventDefault();\n        this.setState({editForm:true, editData:data, id:data.id, edituser:data.login, editserver:data.broker, editalias:data.alias})\n    }\n    editAlias(e){\n        this.setState({editalias:e.target.value})\n    }\n    viewFilter(e, data){\n        e.preventDefault();\n        this.setState({detailForm:true,edituser:data.login, editserver:data.broker, editalias:data.alias, editstatus:data.status})\n    }\n    render() {\n\n        return (\n            <div className=\"content\">\n                <Grid fluid>\n                    <Row>\n                        <Col md={12} sm={6}>\n                            <div className=\"terminal-box\">\n                                <span className=\"terminal-text\">Terminal Accounts</span>\n                                {/* <div style={{ padding: '20px' }}>\n                                    <a\n                                        onClick={() => this.deleteThisGoal()}\n                                        className='btn btn-danger'\n                                    >\n                                        <i className=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete Goal\n                                     </a>\n                                    {this.state.alert}\n                                </div> */}\n                            </div>\n                            <button className=\"pull-right add-button\" onClick={this.toogle}>Add New</button>\n\n                            {this.state.loginForm &&\n                                <Modal show={this.state.show} onHide={this.handleClose}>\n                                    {/* <Modal.Header closeButton>\n                                        <Modal.Title>Log In</Modal.Title>\n                                    </Modal.Header> */}\n                                    <Modal.Body>\n                                        <div className=\"form-box\">\n                                            <Modal.Header closeButton>\n                                                <Modal.Title className=\"text-center\"><b>Log In</b></Modal.Title>\n                                            </Modal.Header>\n                                            <form style={{ marginTop: '20px' }} onSubmit={this.onSubmit}>\n                                                <label>User Name</label>\n                                                <input className=\"Itext\" placeholder=\"User Name\"  name=\"login\" value={this.state.login} onChange={this.onChange} disabled={this.state.currentAddLogin ? true : false}\n                                                // onKeyUp={this.checkValidUser}\n                                                ></input>\n                                                {this.state.shwPwd &&\n                                                    <div>\n                                                        <span>Fill login field</span>\n                                                    </div>\n                                                }\n                                                {this.state.shwMsg &&\n                                                    <div>\n                                                        <span>Invalid login</span>\n                                                    </div>\n                                                }\n                                                <label>Password</label>\n                                                <input className=\"Itext\" placeholder=\"Password\" name=\"password\" type=\"password\" value={this.state.password} onChange={this.onChange} disabled={this.state.currentAddLogin ? true : false}></input>\n\n\n                                                <label>Server</label>\n                                                <input className=\"Itext\" name=\"broker\" placeholder=\"Server\" value={this.state.broker} onChange={this.onChange} disabled={this.state.currentAddBroker ? true : false}></input>\n                                                <label>Alias</label>\n                                                <input className=\"Itext\" placeholder=\"Alias\" value={this.state.alias} onChange={this.onChange} name=\"alias\"></input>\n                                                {this.state.timerShow &&\n                                                <p>\n                                                    Connecting to server... {timerWait} seconds remains\n                                                </p>\n                                                }\n                                                <div className=\"clearfix\">\n                                                    {this.state.tryAgainConnection === false ?\n                                                    (\n                                                        this.state.timerShow == false && \n                                                        <button type=\"submit\" className=\"save\">Submit</button>\n                                                    )\n                                                    :\n                                                    (this.state.timerShow == false && <div className=\"save\" onClick={() => this.tryAgainConnectionFun()}>Try again</div>)\n                                                    }\n                                                </div>\n                                            </form>\n                                        </div>\n\n                                    </Modal.Body>\n                                    {/* <Modal.Footer>\n                                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                                            Close\n                                  </Button>\n                                        \n                                    </Modal.Footer> */}\n                                </Modal>\n\n                            }\n                        </Col>\n                    </Row>\n                    <div style={{ background: '#ffffff' }}>\n                        <Row>\n                            <Col md={12}>\n                                <div style={{ padding: '10px' }}>\n                                    <table className=\"table table-striped\">\n                                        <thead>\n                                            <tr>\n                                                <th scope=\"col\">Sr.No.</th>\n                                                <th scope=\"col\">User Name</th>\n                                                <th scope=\"col\">Server</th>\n                                                <th scope=\"col\">Alias</th>\n                                                <th scope=\"col\">Status</th>\n                                                <th scope=\"col\">Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {/* {this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => { */}\n                                            {/* // console.log(\"hhhhhhhhhhh\") */}\n                                            {this.createTr()}\n                                            {/* })} */}\n                                            {/* <tr>\n                                                <th scope=\"row\">2</th>\n                                                <td>Jacob</td>\n                                                <td>Thornton</td>\n                                                <td>5.1.2.9</td>\n                                                <td>Connected</td>\n                                            </tr>\n                                            <tr>\n                                                <th scope=\"row\">3</th>\n                                                <td>Larry</td>\n                                                <td>the Bird</td>\n                                                <td>ab@123</td>\n                                                <td>Connected</td>\n                                            </tr> */}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </Col>\n                            <div className=\"centerbtn\">\n                            </div>\n\n                        </Row>\n                    </div>\n\n                </Grid>\n\n                {this.state.editForm &&\n                                <Modal show={this.state.show} onHide={this.handleCloseEdit}>\n                                    {/* <Modal.Header closeButton>\n                                        <Modal.Title>Log In</Modal.Title>\n                                    </Modal.Header> */}\n                                    <Modal.Body>\n                                        <div className=\"form-box\">\n                                            <Modal.Header closeButton>\n                                                <Modal.Title className=\"text-center\"><b>Edit</b></Modal.Title>\n                                            </Modal.Header>\n                                            <form style={{ marginTop: '20px' }} onSubmit={this.onUpdate}>\n                                            <label>USER</label>\n                                                <input className=\"Itext\" name=\"broker\" placeholder=\"Server\" value={this.state.edituser} ></input>\n                                                \n                                                <label>Server</label>\n                                                <input className=\"Itext\" name=\"broker\" placeholder=\"Server\" value={this.state.editserver} ></input>\n                                                <label>Alias</label>\n                                                <input className=\"Itext\" placeholder=\"Alias\" value={this.state.editalias}  name=\"alias\" onChange={(e)=>this.editAlias(e)}></input>\n                                                <div className=\"clearfix\">\n                                                    <button type=\"submit\" className=\"save\">Update</button>\n                                                </div>\n                                            </form>\n                                        </div>\n\n                                    </Modal.Body>\n                                    {/* <Modal.Footer>\n                                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                                            Close\n                                  </Button>\n                                        \n                                    </Modal.Footer> */}\n                                </Modal>\n\n                            }\n\n{this.state.detailForm &&\n                                <Modal show={this.state.show} onHide={this.handleCloseDetail}>\n                                    {/* <Modal.Header closeButton>\n                                        <Modal.Title>Log In</Modal.Title>\n                                    </Modal.Header> */}\n                                    <Modal.Body>\n                                        <div className=\"form-box\">\n                                            <Modal.Header closeButton>\n                                                <Modal.Title className=\"text-center\"><b>Details</b></Modal.Title>\n                                            </Modal.Header>\n                                            <div className=\"detail_div\">\n                                                <table>\n                                                    <tr>\n                                                        <td><label>User Name</label></td>\n                                                        <td><label>{this.state.edituser}</label></td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td><label>Server</label></td>\n                                                        <td><label>{this.state.editserver}</label></td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td><label>Alias</label></td>\n                                                        <td><label>{this.state.editalias}</label></td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td><label>Status</label></td>\n                                                        <td><label>{this.state.editstatus == 1 ?'Connected': 'Disconnected'}</label></td>\n                                                    </tr>\n                                                </table>\n                                            </div>\n                                        </div>\n\n                                    </Modal.Body>\n                                </Modal>\n\n                            }\n\n\n            </div >\n        );\n    }\n}\n\nexport default Innerlogin;","import React, { Component } from \"react\";\n// import ChartistGraph from \"react-chartist\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport TableList from '../views/TableList';\n// import { Card } from \"components/Card/Card.jsx\";\n// import { StatsCard } from \"components/StatsCard/StatsCard.jsx\";\n// import { Tasks } from \"components/Tasks/Tasks.jsx\";\nimport NumberFormat from 'react-number-format';\nimport Data from './Data';\n// import {\n//   dataPie,\n//   legendPie,\n//   dataSales,\n//   optionsSales,\n//   responsiveSales,\n//   legendSales,\n//   dataBar,\n//   optionsBar,\n//   responsiveBar,\n//   legendBar\n// } from \"variables/Variables.jsx\";\nimport config from '../constant/config.js';\nconst axios = require('axios');\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      details: [],\n      accountlist: [],\n      persons: [],\n      filterlist: [],\n      formData: [],\n      errorMassege: false,\n      error: '',\n      // allSymbols:[],\n      // symbolsObj:[]\n    }\n  }\n  createLegend(json) {\n    var legend = [];\n    for (var i = 0; i < json[\"names\"].length; i++) {\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\n      legend.push(<i className={type} key={i} />);\n      legend.push(\" \");\n      legend.push(json[\"names\"][i]);\n    }\n    return legend;\n  }\n\n  getAllAccounts = () => {\n    let self = this;\n    axios.get(config.baseurl + '/accounts/fetchAllAccounts')\n    .then(function (response) {\n      if (response.status == 200) {\n        self.setState({ accountlist: response.data.rows })\n      }\n    });\n  }\n\n  fetchActivefilterData = () => {\n    let self = this;\n    axios.get(config.baseurl + '/filter/fetchActivefilterdata')\n      .then(function (response) {\n        if (response.status == 200) {\n          self.fetchActivefilterData1();\n          self.setState({ filterlist: response.data.rows })\n\n          if (self.state.filterlist.length == 0) {\n            self.setState({ errorMassege: true })\n          }\n        }\n      });\n  }\n  fetchActivefilterData1 = () => {\n    let self = this;\n    let user = localStorage.getItem('currentUser');\n    let user1 = JSON.parse(user)\n    let data = user1[0].id\n    console.log(data)\n    axios.get(config.baseurl + `/filter/updateCustomDeposite/${data}`)\n      .then(function (response) {\n        if (response.status == 200) {\n          \n        }\n      });\n  }\n\n  componentWillMount() {\n    this.getAllAccounts();\n    this.fetchActivefilterData();\n    // axios.get(config.baseurl + '/filter/fetchfilterdata')\n    // .then(function (response) {\n    //   console.log(response.data,'hghghjghghj')\n    //   if (response.status == 200) {\n    //     // self.setState({ formData: response.data.rows })\n    //     // console.log(formData);\n\n    //     response.data.rows.map((item, index) => {\n    //       console.log(item,'item');\n    //         if (item.status==1){\n    //           self.setState({errorMassege: false},()=>{\n    //             console.log(self.state, \"display\");\n\n    //           })\n    //           // console.log(self.state.errorMassege);\n\n\n    //         }\n\n    //     })\n    //   }\n    // });\n    // axios.get(config.baseurl + '/filter/fetchfilterdata')\n    // .then(function (response) {\n    //   if (response.status == 200) {\n    //     self.setState({ filterlist: response.data.rows })\n    //   }\n    // })\n\n    // axios.get(config.baseurl + '/filter/fetchActivefilterdata')\n    // .then(function (response) {\n    //   if (response.status == 200) {\n\n    //     if(response.data.rows && response.data.rows.length>0){\n    //       let symbolsObj = (response.data.rows[0].symbols).map(data => {\n    //         return ({value:data, label:data})\n    //       })\n    //       self.setState({ filterlist: response.data.rows, allSymbols: response.data.rows[0].symbols, symbolsObj:symbolsObj })\n    //     }\n    //   }\n    // });\n    \n  }\n\n  showData = (accountDetailValue) => {\n    \n\n    //    if (this.state.accountDetailValue == null || this.state.accountDetailValue == '') {\n    //     this.setState({ error: 'accountDetailValue' })\n    //     return\n    //  }\n    //  else{\n    //     this.setState({error:''})\n    // }\n    // return this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => {\n    //   if(accountDetailValue==='margin_level'){\n    //       return (\n    //         <td className={index !== (this.state.accountlist.length - 1) ? 'tdClr2 tdClr' : 'tdClr2'} key={index}>\n    //         {item.accounts_details[0][accountDetailValue]} %</td>\n    //       )\n    //   }\n    //   return (\n    //     <td className={index !== (this.state.accountlist.length - 1) ? 'tdClr2 tdClr' : 'tdClr2'} key={index}>\n    //     {item.accounts_details[0].currency == 'USD' ? '$' : ''} {item.accounts_details[0][accountDetailValue]}</td>\n    //   )\n    // })\n    return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\n      if (accountDetailValue === 'margin_level') {\n        return (\n          <>\n            <td className=\"tdClr2 tdClr\" key={index}> \n              <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true}  decimalScale={2} /> %\n            </td>\n            <td className=\"tdClr2\" key={index}>\n              {/* {item.accountToInfo[0].accounts_details[0][accountDetailValue]} % */}\n              <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true}  decimalScale={2} /> %\n            </td>\n          </>\n        )\n      }\n      if (item.accountFromInfo.length > 0) {\n        return (\n          <>\n            <td className=\"tdClr2 tdClr\" key={index}>\n              {item.accountFromInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''}  {' '}\n              <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true}  decimalScale={2} />\n            </td>\n\n            <td className=\"tdClr2\" key={index}>\n              {item.accountToInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''} {' '}\n              {/* {item.accountToInfo[0].accounts_details[0][accountDetailValue]} */}\n              <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n            </td>\n          </>\n        )\n\n      }\n\n    })\n  }\n  tableHeader = () => {\n\n    // return this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => {\n    //   return (\n    //     <th key={index} className={item.accounts_details[0].account_id == 1 && index !== (this.state.accountlist.length - 1) ? 'bText colorDarkBlue text-center tdClr2 tdClr' : 'bText colorDarkBlue text-center tdClr2'}>\n    //       <span>\n    //         {item.login}\n    //       </span>\n    //     <div className=\"colorDarkBlue\" style={{fontSize:10}}> \n    //       ({(item.alias!=null) ? item.alias : '-'})\n    //     </div>\n    //     </th>\n\n    //   )\n    // }\n    // )\n    return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\n      return (\n        <>\n          <th key={index} className=\"bText colorDarkBlue text-center tdClr2 tdClr\">\n            <span>\n              {item.accountFromInfo[0].login}\n            </span>\n            <div className=\"colorDarkBlue\" style={{ fontSize: 10 }}>\n              ({(item.accountFromInfo[0].alias != null) ? item.accountFromInfo[0].alias : '-'})\n          </div>\n          </th>\n          <th key={index} className=\"bText color2 text-center tdClr2\">\n            <span>\n              {item.accountToInfo[0].login}\n            </span>\n            <div className=\"color2\" style={{ fontSize: 10 }}>\n              ({(item.accountToInfo[0].alias != null) ? item.accountToInfo[0].alias : '-'})\n          </div>\n          </th>\n        </>\n\n      )\n\n    })\n  }\n\n  render() {\n    return (\n\n      <div className=\"content\">\n        {this.state.errorMassege == true &&\n          <div className=\"popup\">\n            <div class=\"card w-75 \">\n              <div class=\"card-body\">\n                <p class=\"card-text popuptext\" >Please Select Filters To Continue...</p>\n              </div>\n            </div>\n          </div>}\n\n\n        {this.state.errorMassege != true &&\n          <Grid fluid>\n            <Row>\n              <Col md={12} sm={6}>\n                <div className=\"terminal-box\">\n                  {(this.state.errorMassege) && <p style={{ color: 'red', fontSize: '10px' }}>Please Select Any Account</p>}\n                  <span className=\"terminal-text\">Terminal Statistics</span>\n                </div>\n              </Col>\n            </Row>\n            <Row style={{ margin: '20px 0px' }}>\n\n              <Row>\n                {Data.dashBoardPage.items.map((item, index) =>\n\n                  <Col md={4} sm={6} key={index}>\n                    <div style={{ margin: '30px 0px' }} className=\"text-center\">\n                      <span className=\"bText\">{item.title}</span>\n                    </div>\n                    <div className=\"balance-box Pmargin\"\n                    // className={item.id == '1' ? 'balance-box' : item.id == '2' ?\n                    //   'balance-box Pmargin' : item.id == '3' ? 'balance-box equity-box' :\n                    //     item.id == '4' ? 'balance-box Fmargin' : item.id == '5' ? 'balance-box floating' : 'balance-box  margin-box'}\n                    >\n                      <div className=\"content\">\n                        <div className=\"table-responsive\">\n\n                          <table className=\"table  text-center\">\n\n                            <tbody>\n                              <tr>\n                                {this.tableHeader()}\n                              </tr>\n                              <tr>\n                                {item.title == 'Balance' && this.showData('balance')}\n                                {item.title == 'Equity' && this.showData('equity')}\n                                {item.title == 'Margin' && this.showData('margin')}\n                                {item.title == 'Free Margin' && this.showData('free_margin')}\n                                {item.title == 'Margin %' && this.showData('margin_level')}\n                                {item.title == 'Floating P/L' && this.showData('profit')}\n                              </tr>\n                            </tbody>\n                          </table>\n\n                        </div>\n                      </div>\n                    </div>\n                  </Col>\n\n                )}\n              </Row>\n\n              {/* \n            <Row>\n              <Col md={4}>\n                <Row>\n                  <Col md={6}>\n                    <Row>\n                      <Col md={2}>\n                        <div>\n                          <div>\n                            <div>\n                              <span>Logn in</span>\n                            </div>\n                            <div>\n                              <span>Balance</span>\n                            </div>\n                          </div>\n                        </div>\n                      </Col>\n                      <Col md={2}>\n                        <div>\n                          <div>\n                            <div>\n                              <span>Logn in</span>\n                            </div>\n                            <div>\n                              <span>Balance</span>\n                            </div>\n                          </div>\n                        </div>\n                      </Col>\n                      <Col md={2}>\n                        <div>\n                          <div>\n                            <div>\n                              <span>Logn in</span>\n                            </div>\n                            <div>\n                              <span>Balance</span>\n                            </div>\n                          </div>\n                        </div>\n                      </Col>\n                    </Row>\n\n                  </Col>\n                </Row>\n              </Col>\n            </Row> */}\n\n            </Row>\n            <Row>\n              <Col md={12} sm={6}>\n                <div className=\"terminal-box\">\n                  <span className=\"terminal-text\">Statistics Per Symbol</span>\n                </div>\n              </Col>\n            </Row>\n            <Row>\n              <TableList />\n            </Row>\n          </Grid>\n        }\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport config from '../../constant/config.js';\nimport Select from 'react-select'\nimport { createLogicalAnd } from 'typescript';\nconst axios = require('axios');\n\nclass FilterEdite extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedAccountOption: null,\n            selectedSymbolOption: null,\n            selectedSymbolOptionTo: null,\n            selectedAccountOptionTo: null,\n            startDate: null,\n            endDate: null,\n            startDateTo: null,\n            endDateTo: null,\n            allAccounts: [],\n            allSymbols: [],\n            profileName: '',\n            showCommisoin: false,\n            showAddCommission: false,\n            id: '',\n            error: ''\n\n        };\n\n\n    }\n    componentWillMount() {\n        let self = this;\n        axios.get(config.baseurl + '/accounts/fetchAllAccounts')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ allAccounts: response.data.rows })\n                }\n            })\n        axios.get(config.baseurl + '/accounts/fetchAllSymbol')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ allSymbols: response.data.rows })\n                }\n            })\n    }\n    componentDidMount() {\n\n        if (this.props.data) {\n            let abc = this.props.data;\n            let from_symbol = JSON.parse(abc.from_symbols);\n            let to_symbol = JSON.parse(abc.to_symbols);\n\n            let all_from_symbols = from_symbol.map(data => { return ({ value: data, label: data }) });\n            let all_to_symbols = to_symbol.map(data => { return ({ value: data, label: data }) });\n\n            from_symbol = from_symbol.join(', ');\n            to_symbol = to_symbol.join(', ');\n            this.setState({\n                id: abc.id,\n                profileName: abc.profile_name,\n                selectedAccountOption: ({ value: abc.accountFromInfo[0].id, label: abc.accountFromInfo[0].login }),\n                selectedAccountOptionTo: ({ value: abc.accountToInfo[0].id, label: abc.accountToInfo[0].login }),\n                selectedSymbolOption: all_from_symbols,\n                selectedSymbolOptionTo: all_to_symbols,\n                startDate: new Date(abc.startdateFrom),\n                startDateTo: new Date(abc.startdateTo),\n                endDate: (abc.enddateFrom!=null) ? new Date(abc.enddateFrom) : '',\n                endDateTo: (abc.enddateTo!=null) ? new Date(abc.enddateTo) : '',\n                // endDate: (abc.enddateFrom!=null) ? new Date(abc.enddateFrom) : new Date(),\n                // endDateTo: (abc.enddateTo!=null) ? new Date(abc.enddateTo) : new Date(),\n            })\n\n\n        }\n\n       \n        \n    }\n    handleDropdownChange = (e) => {\n        this.setState({ selectValue: e.target.value });\n    }\n    handleChangeDate = date => {\n        this.setState({\n            startDate: date\n        });\n    }\n    handleEndDate = date => {\n\n        if (date < this.state.startDate && date != null) {\n            this.setState({ error: 'enddate',endDate: \"\"})\n            return\n        }\n        this.setState({\n            error: '',\n            endDate: date,\n        });\n    }\n    handleChangeDateTo = date => {\n        this.setState({\n            startDateTo: date\n        });\n    }\n    handleEndDateTo = date => {\n        if (date < this.state.startDateTo && date != null) {\n            this.setState({ error: 'enddateto',endDateTo: \"\"})\n            return\n        }\n        this.setState({\n            error: '',\n            endDateTo: date,\n        });\n    }\n    handleChange = (event) => {\n        this.setState({ value: Array.from(event.target.selectedOptions, (item) => item.value) });\n    }\n\n    handeChangeShowCommission = (e) => {\n        this.setState({ showCommission: true }, () => {\n            this.setState({ showAddCommission: !this.state.showAddCommission })\n        })\n    }\n    handleChangeCommissionAccount = selectedCommissionAccount => {\n        this.setState({ selectedCommissionAccount, });\n    };\n\n    renderCommissionAccount = () => {\n        const { selectedCommissionAccount, allAccounts } = this.state;\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account...\"\n                value={selectedCommissionAccount}\n                onChange={this.handleChangeCommissionAccount}\n                options={options}\n            />\n        )\n    }\n\n\n\n    renderAccountSelect = () => {\n        const { selectedAccountOption, allAccounts } = this.state;\n\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account...\"\n                value={selectedAccountOption}\n                onChange={this.handleChangeAccount}\n                options={options}\n                rules={{ required: 'Please select an option' }}\n            />\n        )\n    }\n\n    handleChangeAccountTo = selectedAccountOptionTo => {\n        if (selectedAccountOptionTo.label == this.state.selectedAccountOption.label) {\n            this.setState({ error: 'err' })\n        } else\n        this.setState({ selectedAccountOptionTo });\n    };\n    renderAccountSelectTo = () => {\n        const { selectedAccountOptionTo, allAccounts } = this.state;\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account...\"\n                value={selectedAccountOptionTo}\n                onChange={this.handleChangeAccountTo}\n                options={options}\n            />\n        )\n    }\n\n    handleChangeAccount = selectedAccountOption => {\n        this.setState({ selectedAccountOption });\n    };\n    handleChangeSymbol = selectedSymbolOption => {\n        this.setState({ selectedSymbolOption });\n    };\n    renderSymbolSelect = () => {\n        const { selectedSymbolOption, allSymbols } = this.state;\n        let options = allSymbols.map(data => {\n            return { value: data.name, label: data.name };\n        })\n        return (\n            <Select\n                placeholder=\"Select Symbol...\"\n                value={selectedSymbolOption}\n                isMulti\n                onChange={this.handleChangeSymbol}\n                options={options}\n            />\n        )\n    }\n    handleChangeSymbolTo = selectedSymbolOptionTo => {\n        this.setState({ selectedSymbolOptionTo });\n    };\n    renderSymbolSelectTo = () => {\n        const { selectedSymbolOptionTo, allSymbols } = this.state;\n        let options = allSymbols.map(data => {\n            return { value: data.name, label: data.name };\n        })\n        return (\n            <Select\n                placeholder=\"Select Symbol...\"\n                value={selectedSymbolOptionTo}\n                isMulti\n                onChange={this.handleChangeSymbolTo}\n                options={options}\n            />\n        )\n    }\n\n    handleprofileName(e) {\n        \n        this.setState({ profileName: e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1), error: '' })\n        \n\n    }\n    formDataSubmit(e) {\n        e.preventDefault();\n        \n        let self = this;\n        if (this.state.profileName == null || this.state.profileName == '') {\n            this.setState({ error: 'profileName' })\n            return\n        }\n        else if (this.state.selectedAccountOption == null || this.state.selectedAccountOption == '') {\n            this.setState({ error: 'accountoption' })\n            return\n        } else if (this.state.startDate == null || this.state.startDate == '') {\n            this.setState({ error: 'startdate' })\n            return\n        } else if (this.state.selectedSymbolOption == null || this.state.selectedSymbolOption == '') {\n            this.setState({ error: 'symbolselect' })\n            return\n        } \n        else if (this.state.selectedAccountOptionTo == null || this.state.selectedAccountOptionTo == '') {\n            this.setState({ error: 'accountoptionto' })\n            return\n        } else if (this.state.startDateTo == null || this.state.startDateTo == '') {\n            this.setState({ error: 'startDateTo' })\n            return\n        }\n        else if (this.state.selectedSymbolOptionTo == null || this.state.selectedSymbolOptionTo == '') {\n            this.setState({ error: 'selectedSymbolOptionTo' })\n            return\n        }\n        else {\n            this.setState({ error: '' })\n        }\n        let fromSymbol = this.state.selectedSymbolOption;\n        let toSymbol = this.state.selectedSymbolOptionTo;\n\n        let symbolFrom = fromSymbol.map((data) =>  data.value)\n        let symbolto = toSymbol.map((data) => data.value)\n        let Data = {\n            id: this.state.id,\n            profile_name: this.state.profileName,\n            from_account_id: this.state.selectedAccountOption.value,\n            to_account_id: this.state.selectedAccountOptionTo.value,\n            commission_acount_id: this.state.showAddCommission ? this.state.selectedCommissionAccount.value : 0,\n            startdateFrom: this.state.startDate,\n            // enddateFrom: this.state.endDate,\n            enddateFrom: (this.state.endDate) ? this.state.endDate :null,\n            startdateTo: this.state.startDateTo,\n            enddateTo: (this.state.endDateTo) ? this.state.endDateTo : null,\n            from_symbols: JSON.stringify(symbolFrom),\n            to_symbols: JSON.stringify(symbolto),\n            createdAt: new Date(),\n            updatedAt: new Date(),\n\n        }\n        axios.post(config.baseurl + '/filter/updatefilterdatafull', Data)\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.props.onHide()\n\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n\n    }\n    crossClick(e) {\n        e.preventDefault();\n        this.props.onHide()\n    }\n\n    render() {\n        return (\n            <div className=\"content\">\n                <Grid fluid>\n                    <div className=\"symbol-box\">\n                        <div className=\"cross_div\"><a onClick={(e) => this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\n                        <div className=\"terminal-text\" >\n                            <p className=\"profilename pnameadjust\"> Profile Name</p>\n                            <input type=\"text\" name=\"profilename\" value={this.state.profileName} className=\"Itext\" onChange={(e) => this.handleprofileName(e)} />\n                            {(this.state.error == 'profileName') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Fill Your Profile Name </p>}\n\n                        </div>\n                        <form>\n                            <Row>\n                                <Col md={6}>\n                                    <div className=\"card\">\n                                        <div style={{ padding: '10px 20px 0px' }}>\n                                            <span style={{ fontWeight: 'bold' }}>Account A</span>\n                                        </div>\n                                        <table className=\"table mt20\">\n                                            <tbody>\n                                                <tr>\n                                                    <td className=\"b-clr\">\n                                                        <span className=\"accnt\">Account :</span>\n                                                    </td>\n\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        {this.renderAccountSelect()}\n                                                        {(this.state.error == 'accountoption') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">From:  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            selected={this.state.startDate}\n                                                            onChange={this.handleChangeDate}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDate}\n                                                            endDate={this.state.endDate}\n                                                            strictParsing\n                                                        />\n                                                        {(this.state.error == 'startdate') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">To :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            \n                                                            selected={this.state.endDate}\n                                                            onChange={this.handleEndDate}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDate}\n                                                            endDate={this.state.endDate}\n                                                        />\n                                                        {(this.state.error == 'enddate') && <p style={{ color: 'red', fontSize: '13px' }}>*\n                                                        Please ensure that the End Date is greater than  the Start Date.</p>}\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">Symbol :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        {this.renderSymbolSelect()}\n                                                        {(this.state.error == 'symbolselect') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\n\n                                                    </td>\n                                                </tr>\n\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </Col>\n                                <Col md={6}>\n                                    <div className=\"card\">\n                                        <div style={{ padding: '10px 20px 0px' }}>\n                                            <span style={{ fontWeight: 'bold' }}>Account B</span>\n                                        </div>\n\n                                        <table className=\"table mt20\">\n                                            <tbody>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">Account :</span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        {this.renderAccountSelectTo()}\n                                                        {(this.state.error == 'accountoptionto') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\n                                                        {(this.state.error == 'err') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Diffrent Account</p>}\n\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">From:  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            selected={this.state.startDateTo}\n                                                            onChange={this.handleChangeDateTo}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDateTo}\n                                                            endDate={this.state.endDateTo}\n                                                        />\n                                                        \n                                                        {(this.state.error == 'startDateTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">To :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                           selected={this.state.endDateTo}\n                                                           onChange={this.handleEndDateTo}\n                                                           isClearable\n                                                           placeholderText=\"dd/mm/yyyy\"\n                                                           dateFormat=\"dd/MM/yyyy\"\n                                                           startDate={this.state.startDateTo}\n                                                           endDate={this.state.endDateTo}\n                                                            \n                                                        />\n                                                        \n                                                        {(this.state.error == 'enddateto') && <p style={{ color: 'red', fontSize: '13px' }}>*\n                                                        Please ensure that the End Date is greater than  the Start Date.</p>}\n                                                      \n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr\">\n                                                        <span className=\"accnt\">Symbol :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        {this.renderSymbolSelectTo()}\n                                                        {(this.state.error == 'selectedSymbolOptionTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\n\n\n                                                    </td>\n                                                </tr>\n\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </Col>\n                            </Row>\n                            <hr></hr>\n                            <div>\n\n                                <label class=\"checkbox-inline\"><input type=\"checkbox\" defaultChecked={this.state.showCommisoin} onChange={(e) => this.handeChangeShowCommission(e)} /><b>Add Commission</b></label>\n                            </div>\n\n\n\n                            {this.state.showAddCommission &&\n                                <div className=\"center-com d-flex\">\n                                    <div className=\"com\">\n                                        <h3 style={{ fontWeight: 'bold' }}>Commission</h3>\n\n                                    </div>\n                                    <table className=\"table mt20\">\n\n                                        <tbody>\n                                            <tr>\n\n                                                <td className=\"b-clr \">\n                                                    <span className=\"accnt\"> Account :</span>\n                                                </td>\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {this.renderCommissionAccount()}\n                                                    {(this.state.error == 'accountoptionto') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n\n                            }\n                            <div className=\"save_button_filter\">\n                                <Button className=\"btn-primary savebutton\" variant=\"primary\" size=\"lg\" block onClick={(e) => this.formDataSubmit(e)}>\n                                   <b>Update</b> \n                        </Button>\n                            </div>\n                        </form>\n                    </div>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default FilterEdite;\n","import React, { Component } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\nvar moment = require('moment');\n\nclass FilterDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    crossClick(e) {\n        e.preventDefault();\n        this.props.onHide()\n    }\n\n    render() {\n        let data = this.props.data;\n        let from_symbol = JSON.parse(data.from_symbols);\n        let to_symbol = JSON.parse(data.to_symbols);\n        from_symbol = from_symbol.join(', ');\n        to_symbol = to_symbol.join(', ');\n        return (\n            <div className=\"content\">\n                <Grid fluid>\n                    <div className=\"symbol-box\">\n                        <div className=\"cross_div\"><a onClick={(e) => this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\n                        <div className=\"detail-text\"><h3> {data.profile_name} </h3></div>\n                        <Row>\n                            <Col md={6}>\n                                <div className=\"card\">\n                                    <div className=\"detail_account\" style={{ padding: '10px 20px 0px' }}>\n                                        <span style={{ fontWeight: 'bold' }}>Account A</span>\n                                    </div>\n                                    <table className=\"table mt20\">\n                                        <tbody>\n                                            <tr>\n                                                <td className=\"b-clr\">\n                                                    <span>Account :</span>\n                                                </td>\n\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {data.accountFromInfo[0].login}\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>From :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center datepicker_filter\">\n                                                    {moment(data.startdateFrom).format(\"DD/MM/YYYY\")}\n\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>To :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center datepicker_filter\">\n                                                    {data.enddateFrom  !== null ? moment(data.enddateFrom).format(\"DD/MM/YYYY\") :\"-\"}\n\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>Symbol :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {from_symbol}\n                                                </td>\n                                            </tr>\n\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </Col>\n                            <Col md={6}>\n                                <div className=\"card\">\n                                    <div className=\"detail_account\" style={{ padding: '10px 20px 0px' }}>\n                                        <span style={{ fontWeight: 'bold' }}>Account B</span>\n                                    </div>\n\n                                    <table className=\"table mt20\">\n                                        <tbody>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>Account :</span>\n                                                </td>\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {data.accountToInfo[0].login}\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>From :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center datepicker_filter\">\n                                                    {moment(data.startdateTo).format(\"DD/MM/YYYY\")}\n\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>To :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center datepicker_filter\">\n                                                    {data.enddateTo!=null ? (moment(data.enddateTo).format(\"DD/MM/YYYY\")) : '-'}\n\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr\">\n                                                    <span>Symbol :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {to_symbol}\n                                                </td>\n                                            </tr>\n\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </Col>\n                            {data.commission_acount_id !== 0 && <Col md={12}>\n                                <div className=\"card bottom\">\n                                    <div className=\"detail_account\" style={{ padding: '10px 20px 0px' }}>\n                                        <h3 style={{ fontWeight: 'bold' }}>Commission</h3>\n                                    </div>\n                                    <table className=\"table mt20\">\n                                        <tbody>\n                                            <tr>\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    <span>Account :</span>\n                                                </td>\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                {data.accountCommissionInfo[0].login}\n\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n\n                            </Col>}\n                        </Row>\n\n                    </div>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default FilterDetail;\n","import React, { Component } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\nimport Innerfilter from '../filter/innerfilter';\nimport FilterEdite from '../filter/filteredit';\nimport FilterDetail from '../filter/filterdetail';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport config from '../../constant/config.js';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\n\nconst axios = require('axios');\nvar moment = require('moment');\n\nclass Filterprofile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            Innerfilter: false,\n            filter: true,\n            filterData: [],\n            deleteData: [],\n            editeData: [],\n            showDelete: false,\n            showEdit: false,\n            detailForm: false,\n            detailData: [],\n        };\n\n        // this.handleDropdownChange = this.handleDropdownChange.bind(this);\n    }\n    fetchfilterdata() {\n        let self = this;\n        axios.get(config.baseurl + '/filter/fetchfilterdata')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ filterData: response.data.rows })\n                }\n            })\n    }\n    showInnerfilter = () => {\n        this.setState({ Innerfilter: true, filter: false })\n    }\n    componentDidMount() {\n        this.fetchfilterdata();\n        // let self = this;\n        // axios.get(config.baseurl + '/filter/fetchfilterdata')\n        //     .then(function (response) {\n        //         if (response.status == 200) {\n        //             self.setState({ filterData: response.data.rows })\n        //         }\n        //     }) adfasdfsd\n    }\n\n\n    createNotification = (profile_name, type) => {\n        NotificationManager.info( 'Profile Is Activated !',profile_name, 3000);\n\n    }\n\n    createWariningNotification = (profile_name, type) => {\n        NotificationManager.error( 'Profile Is Deactivated !', profile_name);\n    }\n\n    activateClick(e, data) {\n        e.preventDefault();\n        let Data = {\n            id: data.id,\n            status: 1\n        }\n        let self = this;\n        axios.post(config.baseurl + '/filter/updatefilterdata', Data)\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.fetchfilterdata();\n                    self.createNotification(data.profile_name, 'info');\n                    // self.setState({ filterData: response.data.rows })\n                }\n            })\n    }\n\n    //  App(){\n    //     const notify = () => toast(\"Wow so easy !\");\n\n    //     return (\n    //       <div>\n    //         <button onClick={notify}>Notify !</button>\n    //         <ToastContainer />\n    //       </div>\n    //     );\n    //   }\n\n    deactivateClick(e, data) {\n        e.preventDefault();\n        let Data = {\n            id: data.id,\n            status: 0\n        }\n        let self = this;\n        axios.post(config.baseurl + '/filter/updatefilterdata', Data)\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.fetchfilterdata();\n                    self.createWariningNotification(data.profile_name, 'error');\n                    // self.setState({ filterData: response.data.rows })\n                }\n            })\n    }\n    editFilter(e, data) {\n        e.preventDefault();\n        if (this.state.endDate  == null || this.state.endDate == '') {\n            let newDate = new Date();\n            this.setState({ endDate: newDate })\n            return\n        }\n        this.setState({ showEdit: true, editeData: data })\n        \n    }\n\n    deleteFilter(e, data) {\n        e.preventDefault();\n        this.setState({ deleteData: data, showDelete: true })\n\n    }\n    deletepopupClick(e) {\n        e.preventDefault();\n        let Data = {\n            id: this.state.deleteData.id\n        }\n        let self = this;\n        axios.post(config.baseurl + '/filter/deletefilter', Data)\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ showDelete: false })\n                    self.fetchfilterdata();\n                }\n            })\n    }\n    deletepopupclose(e) {\n        e.preventDefault();\n        this.setState({ showDelete: false })\n    }\n    viewFilter(e, data) {\n        e.preventDefault();\n         \n        this.setState({ detailForm: true, detailData: data })\n    }\n\n    createTr = () => {\n        return this.state.filterData.length > 0 && this.state.filterData.map((item, index) => {\n            return (\n                <tr key={index}>\n                    <th scope=\"row\">{index + 1}</th>\n                    <td>{item.profile_name}</td>\n                    <td>{moment(item.createdAt).format(\"DD/MM/YYYY\")}</td>\n                    {/* <td>{item.status == 1 ? 'Activated' : 'Deactivated' }</td> */}\n                    <td>{item.status == 0 ?\n                        <div className=\"activate_button pointer\"><span className=\"button_interactivate btcolor\" onClick={(e) => this.activateClick(e, item)}> Activate </span> </div>\n                        :\n                        <div className=\"deactivate_button pointer\"><span className=\"button_deactivate pointer\" onClick={(e) => this.deactivateClick(e, item)}>Deactivate</span></div>}</td>\n                    <td>\n                        <span onClick={(e) => this.viewFilter(e, item)}><i className=\"pointer fa fa-eye facolor\" aria-hidden=\"true\"></i></span>\n                        <span onClick={(e) => this.editFilter(e, item)}><i className=\"pointer fa fa-pencil-square-o facolor\" aria-hidden=\"true\"></i></span>\n                        {item.status == 0 &&\n                            <span onClick={(e) => this.deleteFilter(e, item)}><i className=\"pointer fa fa-trash facolor\" aria-hidden=\"true\"></i></span>\n                        }\n                    </td>\n                    {/* <td>{item.accountToInfo[0].login}</td>\n                    <td>{moment(item.startdateFrom).format(\"DD/MM/YYYY\") + ' - ' + moment(item.enddateFrom).format(\"DD/MM/YYYY\")}</td>\n                    <td>{moment(item.startdateTo).format(\"DD/MM/YYYY\") + ' - ' + moment(item.enddateTo).format(\"DD/MM/YYYY\")}</td>\n                    <td>{item.from_symbols}</td>\n                    <td>{item.to_symbols}</td> */}\n                    {/* <td style={{fontWeight:600}}>{item.status == 1 && 'Connected'}</td> */}\n                </tr>\n            )\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"content\">\n                {this.state.detailForm ?\n                    <FilterDetail\n                        data={this.state.detailData}\n                        show={this.state.detailForm}\n                        onHide={() => this.setState({ detailForm: false })}\n                    />\n                    :\n                    <>\n                        {this.state.showEdit ?\n                            <FilterEdite\n                                data={this.state.editeData}\n                                show={this.state.showEdit}\n                                // onHide={() => this.setState({ showEdit: false })}\n                                onHide={() => this.setState({ showEdit: false },  () => this.fetchfilterdata())}\n                            />\n                            :\n                            <>\n                                {!this.state.Innerfilter &&\n                                    <Grid fluid>\n                                        <div className=\"selection-box\">\n                                            <span className=\"terminal-text\"> Profiles </span>\n\n                                            {/* <span className=\"icon-style\">\n                            <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\n                        </span> */}\n                                            {/* <Link to=\"/innerfilter\">\n                       <button className=\"pull-right\">Add New</button>\n                       </Link> */}\n\n                                            {/* <Link to=\"/admin/innerfilter\">\n                       <button className=\"pull-right\">abc</button>\n                       </Link> */}\n                                        </div>\n                                        <button className=\"pull-right filter-add-button\" onClick={this.showInnerfilter}>Add New</button>\n\n                                    </Grid>\n                                }\n                                {\n                                    this.state.Innerfilter ?\n                                        <Innerfilter\n                                            show={this.state.Innerfilter}\n                                            onHide={() => this.setState({ Innerfilter: false }, () => {\n                                                this.fetchfilterdata();\n                                            })}\n                                        />\n                                        :\n                                        <div style={{ background: '#ffffff' }}>\n                                            <Row>\n                                                <Col md={12}>\n                                                    <div style={{ padding: '10px' }}>\n                                                        <table className=\"table table-striped\">\n                                                            <thead>\n                                                                <tr>\n                                                                    <th scope=\"col\">Sr.No.</th>\n                                                                    <th scope=\"col\">Profile Name</th>\n                                                                    <th scope=\"col\">Created At</th>\n                                                                    <th scope=\"col\">Status</th>\n                                                                    <th scope=\"col\">Action</th>\n                                                                </tr>\n                                                            </thead>\n                                                            <tbody>\n                                                                {/* {this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => { */}\n                                                               \n                                                                {this.createTr()}\n                                                                {/* })} */}\n                                                                {/* <tr>\n                                                <th scope=\"row\">2</th>\n                                                <td>Jacob</td>\n                                                <td>Thornton</td>\n                                                <td>5.1.2.9</td>\n                                                <td>Connected</td>\n                                            </tr>\n                                            <tr>\n                                                <th scope=\"row\">3</th>\n                                                <td>Larry</td>\n                                                <td>the Bird</td>\n                                                <td>ab@123</td>\n                                                <td>Connected</td>\n                                            </tr> */}\n                                                            </tbody>\n                                                        </table>\n                                                    </div>\n                                                </Col>\n                                            </Row>\n                                        </div>\n                                    //     <div className=\"filter_page_table\">\n                                    //     <table className=\"table table-striped\">\n                                    //         <thead>\n                                    //             <tr>\n                                    //                 <th scope=\"col\">Sr.No.</th>\n                                    //                 <th scope=\"col\">Profile Name</th>\n                                    //                 <th scope=\"col\">Created At</th>\n                                    //                 <th scope=\"col\">Status</th>\n                                    //                 <th scope=\"col\">Action</th>\n                                    //             </tr>\n                                    //         </thead>\n                                    //         <tbody>\n                                    //             {this.createTr()}\n                                    //         </tbody>\n                                    //     </table>\n\n                                    // </div>\n\n                                }\n\n                                {this.state.showDelete &&\n                                    <div className=\"delete_popup\">\n                                        <h3>Are you sure ?</h3>\n                                        <span className=\"pointer dltbtn\"  onClick={(e) => this.deletepopupClick(e)}>Delete</span>\n                                        <span className=\"pointer closebtn\" onClick={(e) => this.deletepopupclose(e)}>Close</span>\n                                    </div>\n                                }\n                            </>\n                        }\n                    </>\n                }\n\n\n                <NotificationContainer />\n            </div>\n        );\n    }\n}\n\nexport default Filterprofile;\n","import Dashboard from \"views/Dashboard.jsx\";\n// import UserProfile from \"views/UserProfile.jsx\";\n// import TableList from \"views/TableList.jsx\";\n// import Typography from \"views/Typography.jsx\";\n// import Icons from \"views/Icons.jsx\";\n// import Maps from \"views/Maps.jsx\";\n// import Notifications from \"views/Notifications.jsx\";\n// import Upgrade from \"views/Upgrade.jsx\";\n// import Filter from '../src/views/Filter';\nimport Innerlogin from 'views/Innerlogin';\nimport Filterprofile from './views/filter/Filterprofile';\nimport Swap from '../src/views/swap';\nconst dashboardRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"pe-7s-graph\",\n    component: Dashboard,\n    layout: \"/admin\",\n  },\n  // {\n  //   path: \"/filter\",\n  //   name: \"Filter\",\n  //   icon: \"pe-7s-filter\",\n  //   component: Filter,\n  //   layout: \"/admin\",\n  // },\n  {\n    path: \"/innerlogin\",\n    name: \"Login/Accounts\",\n    icon: \"pe-7s-note2\",\n    component: Innerlogin,\n    layout: \"/admin\"\n  },\n\n  {\n    path: \"/filterpage\",\n    name: \"Filter\",\n    icon: \"pe-7s-filter\",\n    component: Filterprofile,\n    layout: \"/admin\"\n  },\n\n  // {\n  //   path: \"/symbolmanaging\",\n  //   name: \"Symbol Managing\",\n  //   icon: \"pe-7s-science\",\n  //   // component: Filter,\n  //   layout: \"/admin\",\n  // },\n  {\n    path: \"/swap\",\n    name: \"Swap\",\n    icon: \"pe-7s-graph\",\n    component: Swap,\n    layout: \"/admin\",\n  },\n  // {\n  //   path: \"/user\",\n  //   name: \"User Profile\",\n  //   icon: \"pe-7s-user\",\n  //   component: UserProfile,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/table\",\n  //   name: \"Table\",\n  //   icon: \"pe-7s-note2\",\n  //   component: TableList,\n  //   layout: \"/admin\",\n    // for sub menu listing\n    // resources: [\n    //   {\n       \n    //     name: \"Table abc\",\n        \n    //   },\n    //   {\n       \n    //     name: 'React AHA Moments',\n       \n    //   }\n    // ]\n  // },\n  \n  // {\n  //   path: \"/typography\",\n  //   name: \"Typography\",\n  //   icon: \"pe-7s-news-paper\",\n  //   component: Typography,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/icons\",\n  //   name: \"Icons\",\n  //   icon: \"pe-7s-science\",\n  //   component: Icons,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/maps\",\n  //   name: \"Maps\",\n  //   icon: \"pe-7s-map-marker\",\n  //   component: Maps,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/notifications\",\n  //   name: \"Notifications\",\n  //   icon: \"pe-7s-bell\",\n  //   component: Notifications,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   upgrade: true,\n  //   path: \"/upgrade\",\n  //   name: \"Upgrade to PRO\",\n  //   icon: \"pe-7s-rocket\",\n  //   component: Upgrade,\n  //   layout: \"/admin\"\n  // }\n];\n\nexport default dashboardRoutes;\n","import React, { Component } from 'react'\n\nexport default class Swap extends Component {\n    render() {\n        return (\n            <div className=\"text-center\" style={{height:'50%'}}>\n                Coming Soon...\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport NotificationSystem from \"react-notification-system\";\n\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\n// import Footer from \"components/Footer/Footer\";\nimport Sidebar from \"components/Sidebar/Sidebar\";\n// import FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\n\nimport { style } from \"variables/Variables.jsx\";\n\nimport routes from \"routes.js\";\n\nimport image from \"assets/img/sidebar-3.jpg\";\n\nclass Admin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      _notificationSystem: null,\n      image: image,\n      color: \"black\",\n      hasImage: true,\n      fixedClasses: \"dropdown show-dropdown open\"\n    };\n  }\n  // handleNotificationClick = position => {\n  //   var color = Math.floor(Math.random() * 4 + 1);\n  //   var level;\n  //   switch (color) {\n  //     case 1:\n  //       level = \"success\";\n  //       break;\n  //     case 2:\n  //       level = \"warning\";\n  //       break;\n  //     case 3:\n  //       level = \"error\";\n  //       break;\n  //     case 4:\n  //       level = \"info\";\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  //   this.state._notificationSystem.addNotification({\n  //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n  //     message: (\n  //       <div>\n  //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n  //         every web developer.\n  //       </div>\n  //     ),\n  //     level: level,\n  //     position: position,\n  //     autoDismiss: 15\n  //   });\n  // };\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            render={props => (\n              <prop.component\n                {...props}\n                handleClick={this.handleNotificationClick}\n              />\n            )}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    // return \"Brand\";\n  };\n  handleImageClick = image => {\n    this.setState({ image: image });\n  };\n  handleColorClick = color => {\n    this.setState({ color: color });\n  };\n  handleHasImage = hasImage => {\n    this.setState({ hasImage: hasImage });\n  };\n  handleFixedClick = () => {\n    if (this.state.fixedClasses === \"dropdown\") {\n      this.setState({ fixedClasses: \"dropdown show-dropdown open\" });\n    } else {\n      this.setState({ fixedClasses: \"dropdown\" });\n    }\n  };\n  componentDidMount() {\n    let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    if(currentUser===null){\n        this.props.history.push('/login')\n        return;\n    }\n  //   this.setState({ _notificationSystem: this.refs.notificationSystem });\n  //   var _notificationSystem = this.refs.notificationSystem;\n  //   var color = Math.floor(Math.random() * 4 + 1);\n  //   var level;\n  //   switch (color) {\n  //     case 1:\n  //       level = \"success\";\n  //       break;\n  //     case 2:\n  //       level = \"warning\";\n  //       break;\n  //     case 3:\n  //       level = \"error\";\n  //       break;\n  //     case 4:\n  //       level = \"info\";\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  //   _notificationSystem.addNotification({\n  //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n  //     message: (\n  //       <div>\n  //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n  //         every web developer.\n  //       </div>\n  //     ),\n  //     level: level,\n  //     position: \"tr\",\n  //     autoDismiss: 15\n  //   });\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n    }\n    if (e.history.action === \"PUSH\") {\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <NotificationSystem ref=\"notificationSystem\" style={style} />\n        <Sidebar {...this.props} routes={routes} image={this.state.image}\n        color={this.state.color}\n        hasImage={this.state.hasImage}/>\n        <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getBrandText(this.props.location.pathname)}\n          />\n          <Switch>{this.getRoutes(routes)}</Switch>\n          {/* <Footer /> */}\n          {/* <FixedPlugin\n            handleImageClick={this.handleImageClick}\n            handleColorClick={this.handleColorClick}\n            handleHasImage={this.handleHasImage}\n            bgColor={this.state[\"color\"]}\n            bgImage={this.state[\"image\"]}\n            mini={this.state[\"mini\"]}\n            handleFixedClick={this.handleFixedClick}\n            fixedClasses={this.state.fixedClasses}\n          /> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Admin;\n","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/css/animate.min.css\";\nimport \"./assets/sass/light-bootstrap-dashboard-react.scss?v=1.3.0\";\nimport \"./assets/css/demo.css\";\nimport \"./assets/css/pe-icon-7-stroke.css\";\nimport \"./assets/css/dashboard.css\";\nimport innerfilter from \"./views/filter/innerfilter\";\nimport Login from \"./views/login\";\n\n\nimport AdminLayout from \"./layouts/Admin.jsx\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\n\n      <Route exact path=\"/admin/innerfilter\" component={innerfilter} />\n      <Route exact from=\"/login\" component={Login} />\n      {/* <Redirect from=\"/\" to=\"/admin/dashboard\" /> */}\n      {/* <Redirect from=\"/\" component={Login} /> */}\n      <Redirect from=\"/\" to=\"/login\"/>\n      {/* <Route exact path=\"/innerfilter\" component={innerfilter} /> */}\n\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}