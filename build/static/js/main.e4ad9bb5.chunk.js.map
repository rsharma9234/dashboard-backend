{"version":3,"sources":["variables/Variables.jsx","assets/img/sidebar-3.jpg","constant/config.js","views/filter/innerfilter.js","views/login/index.js","components/Navbars/AdminNavbarLinks.jsx","components/Navbars/AdminNavbar.jsx","components/Sidebar/Sidebar.jsx","views/Closeposition.js","views/Data.js","views/Openposition.js","api.js","views/Innerlogin.js","views/TableList.jsx","views/Dashboard.jsx","views/filter/filteredit.js","views/filter/filterdetail.js","views/filter/Filterprofile.js","views/DatatablePage.js","views/swap/index.js","views/calculating/index.js","views/exploser/index.js","views/ContractSize/ContractSize.js","views/Statistics/Statistics.js","views/users/userdetail.js","views/users/useredit.js","views/users/adduser.js","views/users/users.js","routes.js","layouts/Admin.jsx","index.js"],"names":["defaultWidth","window","screen","width","style","Wrapper","Containers","DefaultStyle","position","padding","zIndex","WebkitBoxSizing","MozBoxSizing","boxSizing","height","display","border","fontSize","WebkitFontSmoothing","fontFamily","fontWeight","color","tl","top","bottom","left","right","tr","tc","margin","marginLeft","bl","br","bc","NotificationItem","cursor","borderRadius","opacity","transition","WebkitTransform","transform","willChange","isHidden","isVisible","success","borderTop","backgroundColor","WebkitBoxShadow","MozBoxShadow","boxShadow","error","warning","info","Title","marginTop","MessageWrapper","marginRight","maxWidthwidth","Dismiss","float","lineHeight","outline","textAlign","Action","background","ActionWrapper","module","exports","thArray","tdArray","iconsArray","dataPie","labels","series","legendPie","names","types","dataSales","optionsSales","low","high","showArea","axisX","showGrid","lineSmooth","showLine","showPoint","fullWidth","chartPadding","responsiveSales","labelInterpolationFnc","value","legendSales","dataBar","optionsBar","seriesBarDistance","responsiveBar","legendBar","config","baseurl","axios","require","Innerfilter","props","getSymbolInfo","self","get","then","response","status","setState","allAccounts","data","rows","allSymbols","handleDropdownChange","e","selectValue","target","handleChangeDate","date","startDate","handleChangeDateComm","startDateComm","handleEndDate","state","endDate","handleChangeDateTo","startDateTo","handleEndDateComm","endDateComm","handleEndDateTo","endDateTo","handleChange","event","Array","from","selectedOptions","item","renderAccountSelect","selectedAccountOption","options","map","id","label","login","placeholder","onChange","handleChangeAccount","handeChangeShowCommission","showCommission","showAddCommission","handleChangeAccountTo","selectedAccountOptionTo","renderAccountSelectTo","handleChangeCommissionAccount","selectedCommissionAccount","renderCommissionAccount","handleChangeMagicNumber","magicNumber","handleChangeMagicNumberTo","magicNumberTo","handleChangeMagicNumberComm","comm_magicNumber","handleChangeTicket","ticket","handleChangeTicketTo","ticketTo","handleChangeSymbol","selectedSymbolOption","renderSymbolSelect","name","isMulti","handleChangeSymbolTo","selectedSymbolOptionTo","renderSymbolSelectTo","changeIncludeDefaultProperty","include","exclude","changeExcludeDefaultProperty","changeIncludeDefaultPropertyComm","includeComm","excludeComm","changeIncludeDefaultPropertyTo","includeTo","excludeTo","changeExcludeDefaultPropertyComm","changeExcludeDefaultPropertyTo","changeIncludeDefaultPropertyTicket","includeTicket","includeTicketTo","excludeTicket","changeExcludeDefaultPropertyTicket","changeIncludeDefaultPropertyTicketTo","excludeTicketTo","changeExcludeDefaultPropertyTicketTo","profileName","showCommisoin","autoSyncClose","profileValues","nameError","showMagicNumber","showMagicNumberTo","tags","include_exclude_status","this","fetchfilterdata","token","JSON","parse","localStorage","getItem","headers","length","charAt","toUpperCase","slice","filter","profile_name","NotificationManager","listNotify","preventDefault","from_status","comm_status","to_status","from_status_ticket","to_status_ticket","symbolFrom","symbolto","Data","from_account_id","to_account_id","commission_acount_id","startdateFrom","enddateFrom","startdateTo","enddateTo","startdateComm","enddateComm","comm_include_exclude_status","comm_magic_number","stringify","from_symbols","to_symbols","auto_close","from_magic_number","to_magic_number","from_include_exclude_status","to_include_exclude_status","from_ticket","to_ticket","from_include_exclude_status_ticket","to_include_exclude_status_ticket","createdAt","Date","updatedAt","post","onHide","catch","className","Grid","fluid","onClick","crossClick","aria-hidden","type","handleprofileName","defaultChecked","handleChangeAutoSync","Row","Col","md","selected","isClearable","placeholderText","dateFormat","strictParsing","autoOk","onValidationReject","console","log","validationRegex","inputProps","checked","data-tip","Button","variant","size","block","formDataSubmit","Component","Login","toogle","loginForm","handleClose","handleShow","setShow","createNotification","show","username","password","alert","persons","shwPwd","shwMsg","invalidUsername","invalidPassword","accountlist","bind","onSubmit","trim","userdetail","setItem","accessToken","history","push","message","err","sm","disabled","AdminNavbarLinks","logout","a","logged_in","clear","currentUser","notification","Nav","NavItem","eventKey","href","NavDropdown","title","noCaret","MenuItem","pullRight","Header","mobileSidebarToggle","sidebarExists","document","documentElement","classList","toggle","node","createElement","onclick","parentElement","removeChild","body","appendChild","Navbar","Brand","brandText","Toggle","Collapse","Sidebar","routes","menu","innerWidth","routeName","location","pathname","indexOf","updateDimensions","addEventListener","image","data-color","data-image","hasImage","prop","key","redirect","upgrade","activeRoute","layout","path","to","activeClassName","icon","child","undefined","resources","sub","index","role","Closeposition","allHistoryRecord","fromHistoryOrderInfo","toHistoryOrderInfo","commissionHistoryOrderInfo","useState","fromSymbols","toSymbols","Object","entries","join","fromsum","tosum","commission","swap","profit","sumOfTotal","noRecord","total","accountFromInfo","alias","displayType","thousandSeparator","decimalScale","accountToInfo","marginBottom","accountCommissionInfo","history_info","tablePage","items","lot","closed","price","textA","dashBoardPage","textB","Openposition","allOpenRecord","fromOpenOrderInfo","toOpenOrderInfo","order_type","lots","intervalSet","timerWaitInterval","myInitObject","api","fetchAllHistoryTrade","responsHT","fetchAllOpenTrade","responsOT","fetchAllAccounts","responsAC","fetchActivefilterdata","responsAF","fetchLastUpdatedTime","responsLUT","fetchStatusData","responsSD","calculatingOpenTrade","responsCOT","calculatingHistoryTrade","responsCHT","calculatingCommission","responsCC","fetchAllSymbol","responsAS","fetchdailyswaps","responsDS","usersAllAccounts","responsAAC","responsFF","TableList","fetchDataAccordingSymbols","symbol","filterlist","selectedOption","renderSymbols","isOpen2","setInterval","activeProfileName","errorMassege","concat","i","ar","Dashboard","showData","accountDetailValue","accounts_details","currency","tableHeader","details","dateTime","fromAccounts","fromSymbol","toAccounts","toSymbol","fromOpenOrderInfos","toOpenOrderInfos","totalTo","blockloader","autoClose","loading","filteredInfoTime","contract_size","json","legend","fromsum1","tosum1","sumOfTotal1","lg","xs","toFixed","margin_currency","timerWait","Innerlogin","handlePageClick","page","fectheAllAccount","changeServer","is_server","checkUserConnected","broker","connected","currentAddLogin","currentAddBroker","currentAddAlias","clearInterval","timerShow","setIntervalCustom","content","innerHTML","closebtn","swal","timer","button","handleCloseEdit","editForm","handleCloseDetail","detailForm","createTr","scope","launched","viewFilter","editFilter","deleteFilter","onUpdate","count","pages","re","test","text","user","edituser","editserver","editalias","editpass","deleteData","showDelete","editData","editstatus","Modal","Body","closeButton","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","deletepopupClick","deletepopupclose","editPass","editAlias","FilterEdite","l","rules","required","abc","from_symbol","to_symbol","all_from_symbols","all_to_symbols","class","moment","FilterDetail","showMagicNumberFrom","showTicketFrom","showTicketTo","showMagicNumberComm","frm_ticket","frm_magic","to_magic","format","flexWrap","justifyContent","Filterprofile","showInnerfilter","createWariningNotification","showEdit","editeData","newDate","filterData","user_status","activateClick","deactivateClick","detailData","DatatablePage","columns","sortable","ignoreRowClick","selector","minWidth","maxWidth","cell","row","Number","parseFloat","swap_long","swap_short","pagination","paginationPerPage","paginationRowsPerPageOptions","Swap","setdailySwap","setloading","setStartDate","setEndDate","account","setAccount","setSymbol","act","setAct","sym","setSym","newResult","setResult","filterResult","setFilterResult","filtered","setFiltered","setdateTime","setactiveProfileName","active","setActive","useEffect","dateFilter","method","sd","ed","result","d","time","isSameOrAfter","isSameOrBefore","loginData","paramsact","account_login","String","symbolData","paramssym","Container","AccountSelect","SymbolSelect","Label","selectsStart","selectsEnd","minDate","dataTOtalcloseFrom","comissionTotal","lotsTotal","profitTotal","swapTotal","dataTotalClosetTo","dataTOtalOpenTo","dataTOtalOpenFrom","ContractSize","_isMounted","uniqueSymbols","sumOfHistoryTotal","openfromsum","opentosum","sumOfOpenTotal","isNaN","parseInt","Fragment","Statistics","UserDetail","filter_profile","loggedIn","profiles","allFilterprofiles","matches","selectedProfiles","UserEdit","handleChangeFilterProfile","renderProfileSelect","loggged_in","allChecked","filterdata","remove_filterdata","selectedVal","includes","list","forEach","handleusername","readOnly","AddUser","all","fetchusersdata","userValues","handlepassword","Users","showaddUser","addUser","editUser","usersData","viewUser","deleteUser","dashboardRoutes","component","isOpen","setIsOpen","setIsOpen2","setIsOpen3","errormassage","setIErrormassage","isOpen3","fromAccountId","setFromAccountId","toAccountId","setToAccountId","fromOpenTrade","setFromOpenTrade","toOpenTrade","setToOpenTrade","fromHistoryTrade","setFromHistoryTrade","toHistoryTrade","setToHistoryTrade","setCommissionDetails","openTotal","setopenTotal","historyTotal","sethistoryTotal","commissionValue","setCommissionValue","setcustomSwap","setLoading","setallHistoryRecord","mounted","totalOfOpenOrder","customSwapTable","totalOfHistoryOrder","newCommissionRecord","fromclosedata","fromopendata","toclosedata","toopendata","newData","sort","b","open_time","split","reverse","newopenData","newcloseData","totalOpen","reduce","totalClose","totalfromCloseSwap","totalfromOpenSwap","totalfromCloseCommission","totalfromOpenCommission","totaltoCloseSwap","totaltoOpenSwap","totaltoCloseCommission","totaltoOpenCommission","overflowX","last_price","utc","account_id","open_price","close_price","colSpan","fromOpenTradeTr","toOpenTradeTr","overflowY","close_time","fromHistoryTradeTr","toHistoryTradeTr","totalProfit","equity","Admin","getRoutes","routeArray","render","handleClick","handleNotificationClick","getBrandText","handleImageClick","handleColorClick","handleHasImage","handleFixedClick","fixedClasses","_notificationSystem","timeout","userLoggedIn","isTimedOut","idleTimer","onAction","_onAction","onActive","_onActive","onIdle","_onIdle","handleLogout","reset","action","ref","element","debounce","AdminNavbar","ReactDOM","exact","innerfilter","getElementById"],"mappings":"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,kBACA,aACA,mBACA,aACA,cACA,eACA,qBACA,iBACA,cACA,cACA,eACA,kBACA,eACA,iBACA,eACA,cACA,YACA,eACA,aACA,qBACA,aACA,cACA,kBACA,uBACA,YACA,qBACA,WACA,iBACA,mBACA,wBACA,cACA,oBACA,eACA,2BACA,cACA,mBACA,oBACA,0BACA,iBACA,mBACA,eACA,0BACA,iBACA,eACA,aACA,gBACA,gBACA,kBACA,cACA,aACA,eACA,eACA,iBACA,cACA,cACA,cACA,eACA,eACA,YACA,cACA,kBACA,aACA,gBACA,eACA,gBACA,gBACA,cACA,eACA,eACA,aACA,gBACA,aACA,eACA,eACA,gBACA,iBACA,sBACA,kBACA,cACA,cACA,cACA,gBACA,aACA,aACA,cACA,cACA,kBACA,cACA,aACA,mBACA,aACA,YACA,cACA,YACA,sBACA,YACA,cACA,aACA,YACA,oBACA,oBACA,oBACA,cACA,qBACA,iBACA,aACA,aACA,mBACA,kBACA,cACA,cACA,aACA,aACA,gBACA,cACA,aACA,YACA,mBACA,aACA,kBACA,uBACA,eACA,aACA,aACA,aACA,gBACA,aACA,aACA,cACA,aACA,eACA,aACA,aACA,aACA,cACA,cACA,eACA,eACA,eACA,cACA,eACA,cACA,gBACA,aACA,eACA,aACA,eACA,aACA,gBACA,gBACA,aACA,aACA,eACA,iBACA,iBACA,iBACA,iBACA,aACA,YACA,gBACA,aACA,eACA,kBACA,eACA,gBACA,gBACA,eACA,cACA,cACA,cACA,aACA,aACA,eACA,aACA,mBACA,gBACA,aACA,aACA,kBACA,gBACA,aACA,gBACA,aACA,aACA,kBACA,eACA,eACA,cACA,iBAwHAC,QA/GY,CACZC,OAAQ,CAAC,MAAO,MAAO,OACvBC,OAAQ,CAAC,GAAI,GAAI,KA8GjBC,UA5Gc,CACdC,MAAO,CAAC,OAAQ,SAAU,eAC1BC,MAAO,CAAC,OAAQ,SAAU,YA2G1BC,UAvGc,CACdL,OAAQ,CACN,SACA,UACA,SACA,SACA,SACA,UA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BD,IAC2B,IAA1BC,IAC0B,IAA3BD,IAC2B,IAA1BC,GACA,wBAAIzf,UAAU,eACZ,4BACE,2BACGof,IACDC,GACI,GACA,eAGR,6BACA,wBAAIrf,UAAU,UAAU0c,EAAYxT,OACpC,6BACA,6BACA,6BACA,6BACA,4BACE,2BAAIsW,KAEN,4BACE,2BAAIC,MAIR,GAEuB,IAAvBP,IACsB,IAAtBC,IACsB,IAAvBD,IACuB,IAAtBC,IACsB,IAAvBD,IACuB,IAAtBC,GACA,wBAAInf,UAAU,eACZ,4BACE,oCAEF,6BACA,wBAAIA,UAAU,iBACXwc,EAActT,OAEjB,6BACA,6BACA,6BACA,6BACA,4BACE,2BAAIgW,KAEN,4BACE,2BAAIC,MAIR,GAEqB,IAArBG,IACoB,IAApBC,IACoB,IAArBD,IAA8C,IAApBC,IACL,IAArBD,IACqB,IAApBC,GACA,wBAAIvf,UAAU,eACZ,4BACE,2BACGkf,IAAsBC,GACnB,GACA,SAGR,6BACA,wBAAInf,UAAU,UAAU0c,EAAYxT,OACpC,6BACA,6BACA,6BACA,6BACA,4BACE,2BAAIoW,KAEN,4BACE,2BAAIC,MAIR,GAEF,wBAAIvf,UAAU,eACZ,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,4BACE,uCAEF,4BACE,2BAAIif,KAEN,4BACE,2BAAIF,MAGR,wBAAI/e,UAAU,eACZ,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,4BACE,2CAEF,4BACE,2BACGkf,GACCI,GACAF,GACAI,KAGN,4BACE,2BACGL,GACCI,GACAF,GACAI,MAIR,wBAAIzf,UAAU,eACZ,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,4BACE,qCAEF,4BACE,2BACE,kBAAC,IAAD,CACExK,MAAO+nB,GACPpU,YAAa,OACbC,mBAAmB,EACnBC,aAAc,IAEfmT,EAAc,+BAETE,EAAY,6BACd,KACEF,EAAc,+BAGhBE,EACA,KAGR,4BACE,2BACE,kBAAC,IAAD,CACElnB,MAAO6nB,GACPlU,YAAa,OACbC,mBAAmB,EACnBC,aAAc,IAEfmT,EAAc,+BAETE,EAAY,6BA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","file":"static/js/main.e4ad9bb5.chunk.js","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n//\n// //\n// // // For notifications\n// //\n//\nvar defaultWidth =\n  window.screen.width > 768\n    ? (window.screen.width * 1) / 3\n    : window.screen.width;\n\nvar style = {\n  Wrapper: {},\n  Containers: {\n    DefaultStyle: {\n      position: \"fixed\",\n      width: defaultWidth,\n      padding: \"10px 10px 10px 20px\",\n      zIndex: 9998,\n      WebkitBoxSizing: \"\",\n      MozBoxSizing: \"\",\n      boxSizing: \"\",\n      height: \"auto\",\n      display: \"inline-block\",\n      border: \"0\",\n      fontSize: \"14px\",\n      WebkitFontSmoothing: \"antialiased\",\n      fontFamily: '\"Roboto\",\"Helvetica Neue\",Arial,sans-serif',\n      fontWeight: \"400\",\n      color: \"#FFFFFF\"\n    },\n\n    tl: {\n      top: \"0px\",\n      bottom: \"auto\",\n      left: \"0px\",\n      right: \"auto\"\n    },\n\n    tr: {\n      top: \"0px\",\n      bottom: \"auto\",\n      left: \"auto\",\n      right: \"0px\"\n    },\n\n    tc: {\n      top: \"0px\",\n      bottom: \"auto\",\n      margin: \"0 auto\",\n      left: \"50%\",\n      marginLeft: -(defaultWidth / 2)\n    },\n\n    bl: {\n      top: \"auto\",\n      bottom: \"0px\",\n      left: \"0px\",\n      right: \"auto\"\n    },\n\n    br: {\n      top: \"auto\",\n      bottom: \"0px\",\n      left: \"auto\",\n      right: \"0px\"\n    },\n\n    bc: {\n      top: \"auto\",\n      bottom: \"0px\",\n      margin: \"0 auto\",\n      left: \"50%\",\n      marginLeft: -(defaultWidth / 2)\n    }\n  },\n\n  NotificationItem: {\n    DefaultStyle: {\n      position: \"relative\",\n      width: \"100%\",\n      cursor: \"pointer\",\n      borderRadius: \"4px\",\n      fontSize: \"14px\",\n      margin: \"10px 0 0\",\n      padding: \"10px\",\n      display: \"block\",\n      WebkitBoxSizing: \"border-box\",\n      MozBoxSizing: \"border-box\",\n      boxSizing: \"border-box\",\n      opacity: 0,\n      transition: \"all 0.5s ease-in-out\",\n      WebkitTransform: \"translate3d(0, 0, 0)\",\n      transform: \"translate3d(0, 0, 0)\",\n      willChange: \"transform, opacity\",\n\n      isHidden: {\n        opacity: 0\n      },\n\n      isVisible: {\n        opacity: 1\n      }\n    },\n\n    success: {\n      borderTop: 0,\n      backgroundColor: \"#a1e82c\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    error: {\n      borderTop: 0,\n      backgroundColor: \"#fc727a\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    warning: {\n      borderTop: 0,\n      backgroundColor: \"#ffbc67\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    info: {\n      borderTop: 0,\n      backgroundColor: \"#63d8f1\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    }\n  },\n\n  Title: {\n    DefaultStyle: {\n      fontSize: \"30px\",\n      margin: \"0\",\n      padding: 0,\n      fontWeight: \"bold\",\n      color: \"#FFFFFF\",\n      display: \"block\",\n      left: \"15px\",\n      position: \"absolute\",\n      top: \"50%\",\n      marginTop: \"-15px\"\n    }\n  },\n\n  MessageWrapper: {\n    DefaultStyle: {\n      marginLeft: \"55px\",\n      marginRight: \"30px\",\n      padding: \"0 12px 0 0\",\n      color: \"#FFFFFF\",\n      maxWidthwidth: \"89%\"\n    }\n  },\n\n  Dismiss: {\n    DefaultStyle: {\n      fontFamily: \"inherit\",\n      fontSize: \"21px\",\n      color: \"#000\",\n      float: \"right\",\n      position: \"absolute\",\n      right: \"10px\",\n      top: \"50%\",\n      marginTop: \"-13px\",\n      backgroundColor: \"#FFFFFF\",\n      display: \"block\",\n      borderRadius: \"50%\",\n      opacity: \".4\",\n      lineHeight: \"11px\",\n      width: \"25px\",\n      height: \"25px\",\n      outline: \"0 !important\",\n      textAlign: \"center\",\n      padding: \"6px 3px 3px 3px\",\n      fontWeight: \"300\",\n      marginLeft: \"65px\"\n    },\n\n    success: {\n      // color: '#f0f5ea',\n      // backgroundColor: '#a1e82c'\n    },\n\n    error: {\n      // color: '#f4e9e9',\n      // backgroundColor: '#fc727a'\n    },\n\n    warning: {\n      // color: '#f9f6f0',\n      // backgroundColor: '#ffbc67'\n    },\n\n    info: {\n      // color: '#e8f0f4',\n      // backgroundColor: '#63d8f1'\n    }\n  },\n\n  Action: {\n    DefaultStyle: {\n      background: \"#ffffff\",\n      borderRadius: \"2px\",\n      padding: \"6px 20px\",\n      fontWeight: \"bold\",\n      margin: \"10px 0 0 0\",\n      border: 0\n    },\n\n    success: {\n      backgroundColor: \"#a1e82c\",\n      color: \"#ffffff\"\n    },\n\n    error: {\n      backgroundColor: \"#fc727a\",\n      color: \"#ffffff\"\n    },\n\n    warning: {\n      backgroundColor: \"#ffbc67\",\n      color: \"#ffffff\"\n    },\n\n    info: {\n      backgroundColor: \"#63d8f1\",\n      color: \"#ffffff\"\n    }\n  },\n\n  ActionWrapper: {\n    DefaultStyle: {\n      margin: 0,\n      padding: 0\n    }\n  }\n};\n\n//\n// //\n// // // For tables\n// //\n//\nconst thArray = [\"ID\", \"Name\", \"Salary\", \"Country\", \"City\"];\nconst tdArray = [\n  [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\", \"Oud-Turnhout\"],\n  [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\", \"Sinaai-Waas\"],\n  [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\", \"Baileux\"],\n  [\"4\", \"Philip Chaney\", \"$38,735\", \"Korea, South\", \"Overland Park\"],\n  [\"5\", \"Doris Greene\", \"$63,542\", \"Malawi\", \"Feldkirchen in Kärnten\"],\n  [\"6\", \"Mason Porter\", \"$78,615\", \"Chile\", \"Gloucester\"]\n];\n\n//\n// //\n// // // For icons\n// //\n//\nconst iconsArray = [\n  \"pe-7s-album\",\n  \"pe-7s-arc\",\n  \"pe-7s-back-2\",\n  \"pe-7s-bandaid\",\n  \"pe-7s-car\",\n  \"pe-7s-diamond\",\n  \"pe-7s-door-lock\",\n  \"pe-7s-eyedropper\",\n  \"pe-7s-female\",\n  \"pe-7s-gym\",\n  \"pe-7s-hammer\",\n  \"pe-7s-headphones\",\n  \"pe-7s-helm\",\n  \"pe-7s-hourglass\",\n  \"pe-7s-leaf\",\n  \"pe-7s-magic-wand\",\n  \"pe-7s-male\",\n  \"pe-7s-map-2\",\n  \"pe-7s-next-2\",\n  \"pe-7s-paint-bucket\",\n  \"pe-7s-pendrive\",\n  \"pe-7s-photo\",\n  \"pe-7s-piggy\",\n  \"pe-7s-plugin\",\n  \"pe-7s-refresh-2\",\n  \"pe-7s-rocket\",\n  \"pe-7s-settings\",\n  \"pe-7s-shield\",\n  \"pe-7s-smile\",\n  \"pe-7s-usb\",\n  \"pe-7s-vector\",\n  \"pe-7s-wine\",\n  \"pe-7s-cloud-upload\",\n  \"pe-7s-cash\",\n  \"pe-7s-close\",\n  \"pe-7s-bluetooth\",\n  \"pe-7s-cloud-download\",\n  \"pe-7s-way\",\n  \"pe-7s-close-circle\",\n  \"pe-7s-id\",\n  \"pe-7s-angle-up\",\n  \"pe-7s-wristwatch\",\n  \"pe-7s-angle-up-circle\",\n  \"pe-7s-world\",\n  \"pe-7s-angle-right\",\n  \"pe-7s-volume\",\n  \"pe-7s-angle-right-circle\",\n  \"pe-7s-users\",\n  \"pe-7s-angle-left\",\n  \"pe-7s-user-female\",\n  \"pe-7s-angle-left-circle\",\n  \"pe-7s-up-arrow\",\n  \"pe-7s-angle-down\",\n  \"pe-7s-switch\",\n  \"pe-7s-angle-down-circle\",\n  \"pe-7s-scissors\",\n  \"pe-7s-wallet\",\n  \"pe-7s-safe\",\n  \"pe-7s-volume2\",\n  \"pe-7s-volume1\",\n  \"pe-7s-voicemail\",\n  \"pe-7s-video\",\n  \"pe-7s-user\",\n  \"pe-7s-upload\",\n  \"pe-7s-unlock\",\n  \"pe-7s-umbrella\",\n  \"pe-7s-trash\",\n  \"pe-7s-tools\",\n  \"pe-7s-timer\",\n  \"pe-7s-ticket\",\n  \"pe-7s-target\",\n  \"pe-7s-sun\",\n  \"pe-7s-study\",\n  \"pe-7s-stopwatch\",\n  \"pe-7s-star\",\n  \"pe-7s-speaker\",\n  \"pe-7s-signal\",\n  \"pe-7s-shuffle\",\n  \"pe-7s-shopbag\",\n  \"pe-7s-share\",\n  \"pe-7s-server\",\n  \"pe-7s-search\",\n  \"pe-7s-film\",\n  \"pe-7s-science\",\n  \"pe-7s-disk\",\n  \"pe-7s-ribbon\",\n  \"pe-7s-repeat\",\n  \"pe-7s-refresh\",\n  \"pe-7s-add-user\",\n  \"pe-7s-refresh-cloud\",\n  \"pe-7s-paperclip\",\n  \"pe-7s-radio\",\n  \"pe-7s-note2\",\n  \"pe-7s-print\",\n  \"pe-7s-network\",\n  \"pe-7s-prev\",\n  \"pe-7s-mute\",\n  \"pe-7s-power\",\n  \"pe-7s-medal\",\n  \"pe-7s-portfolio\",\n  \"pe-7s-like2\",\n  \"pe-7s-plus\",\n  \"pe-7s-left-arrow\",\n  \"pe-7s-play\",\n  \"pe-7s-key\",\n  \"pe-7s-plane\",\n  \"pe-7s-joy\",\n  \"pe-7s-photo-gallery\",\n  \"pe-7s-pin\",\n  \"pe-7s-phone\",\n  \"pe-7s-plug\",\n  \"pe-7s-pen\",\n  \"pe-7s-right-arrow\",\n  \"pe-7s-paper-plane\",\n  \"pe-7s-delete-user\",\n  \"pe-7s-paint\",\n  \"pe-7s-bottom-arrow\",\n  \"pe-7s-notebook\",\n  \"pe-7s-note\",\n  \"pe-7s-next\",\n  \"pe-7s-news-paper\",\n  \"pe-7s-musiclist\",\n  \"pe-7s-music\",\n  \"pe-7s-mouse\",\n  \"pe-7s-more\",\n  \"pe-7s-moon\",\n  \"pe-7s-monitor\",\n  \"pe-7s-micro\",\n  \"pe-7s-menu\",\n  \"pe-7s-map\",\n  \"pe-7s-map-marker\",\n  \"pe-7s-mail\",\n  \"pe-7s-mail-open\",\n  \"pe-7s-mail-open-file\",\n  \"pe-7s-magnet\",\n  \"pe-7s-loop\",\n  \"pe-7s-look\",\n  \"pe-7s-lock\",\n  \"pe-7s-lintern\",\n  \"pe-7s-link\",\n  \"pe-7s-like\",\n  \"pe-7s-light\",\n  \"pe-7s-less\",\n  \"pe-7s-keypad\",\n  \"pe-7s-junk\",\n  \"pe-7s-info\",\n  \"pe-7s-home\",\n  \"pe-7s-help2\",\n  \"pe-7s-help1\",\n  \"pe-7s-graph3\",\n  \"pe-7s-graph2\",\n  \"pe-7s-graph1\",\n  \"pe-7s-graph\",\n  \"pe-7s-global\",\n  \"pe-7s-gleam\",\n  \"pe-7s-glasses\",\n  \"pe-7s-gift\",\n  \"pe-7s-folder\",\n  \"pe-7s-flag\",\n  \"pe-7s-filter\",\n  \"pe-7s-file\",\n  \"pe-7s-expand1\",\n  \"pe-7s-exapnd2\",\n  \"pe-7s-edit\",\n  \"pe-7s-drop\",\n  \"pe-7s-drawer\",\n  \"pe-7s-download\",\n  \"pe-7s-display2\",\n  \"pe-7s-display1\",\n  \"pe-7s-diskette\",\n  \"pe-7s-date\",\n  \"pe-7s-cup\",\n  \"pe-7s-culture\",\n  \"pe-7s-crop\",\n  \"pe-7s-credit\",\n  \"pe-7s-copy-file\",\n  \"pe-7s-config\",\n  \"pe-7s-compass\",\n  \"pe-7s-comment\",\n  \"pe-7s-coffee\",\n  \"pe-7s-cloud\",\n  \"pe-7s-clock\",\n  \"pe-7s-check\",\n  \"pe-7s-chat\",\n  \"pe-7s-cart\",\n  \"pe-7s-camera\",\n  \"pe-7s-call\",\n  \"pe-7s-calculator\",\n  \"pe-7s-browser\",\n  \"pe-7s-box2\",\n  \"pe-7s-box1\",\n  \"pe-7s-bookmarks\",\n  \"pe-7s-bicycle\",\n  \"pe-7s-bell\",\n  \"pe-7s-battery\",\n  \"pe-7s-ball\",\n  \"pe-7s-back\",\n  \"pe-7s-attention\",\n  \"pe-7s-anchor\",\n  \"pe-7s-albums\",\n  \"pe-7s-alarm\",\n  \"pe-7s-airplay\"\n];\n\n//\n// //\n// // // // For dashboard's charts\n// //\n//\n// Data for Pie Chart\nvar dataPie = {\n  labels: [\"40%\", \"20%\", \"40%\"],\n  series: [40, 20, 40]\n};\nvar legendPie = {\n  names: [\"Open\", \"Bounce\", \"Unsubscribe\"],\n  types: [\"info\", \"danger\", \"warning\"]\n};\n\n// Data for Line Chart\nvar dataSales = {\n  labels: [\n    \"9:00AM\",\n    \"12:00AM\",\n    \"3:00PM\",\n    \"6:00PM\",\n    \"9:00PM\",\n    \"12:00PM\",\n    \"3:00AM\",\n    \"6:00AM\"\n  ],\n  series: [\n    [287, 385, 490, 492, 554, 586, 698, 695],\n    [67, 152, 143, 240, 287, 335, 435, 437],\n    [23, 113, 67, 108, 190, 239, 307, 308]\n  ]\n};\nvar optionsSales = {\n  low: 0,\n  high: 800,\n  showArea: false,\n  height: \"245px\",\n  axisX: {\n    showGrid: false\n  },\n  lineSmooth: true,\n  showLine: true,\n  showPoint: true,\n  fullWidth: true,\n  chartPadding: {\n    right: 50\n  }\n};\nvar responsiveSales = [\n  [\n    \"screen and (max-width: 640px)\",\n    {\n      axisX: {\n        labelInterpolationFnc: function(value) {\n          return value[0];\n        }\n      }\n    }\n  ]\n];\nvar legendSales = {\n  names: [\"Open\", \"Click\", \"Click Second Time\"],\n  types: [\"info\", \"danger\", \"warning\"]\n};\n\n// Data for Bar Chart\nvar dataBar = {\n  labels: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"Mai\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n  ],\n  series: [\n    [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895],\n    [412, 243, 280, 580, 453, 353, 300, 364, 368, 410, 636, 695]\n  ]\n};\nvar optionsBar = {\n  seriesBarDistance: 10,\n  axisX: {\n    showGrid: false\n  },\n  height: \"245px\"\n};\nvar responsiveBar = [\n  [\n    \"screen and (max-width: 640px)\",\n    {\n      seriesBarDistance: 5,\n      axisX: {\n        labelInterpolationFnc: function(value) {\n          return value[0];\n        }\n      }\n    }\n  ]\n];\nvar legendBar = {\n  names: [\"Tesla Model S\", \"BMW 5 Series\"],\n  types: [\"info\", \"danger\"]\n};\n\nmodule.exports = {\n  style, // For notifications (App container and Notifications view)\n  thArray,\n  tdArray, // For tables (TableList view)\n  iconsArray, // For icons (Icons view)\n  dataPie,\n  legendPie,\n  dataSales,\n  optionsSales,\n  responsiveSales,\n  legendSales,\n  dataBar,\n  optionsBar,\n  responsiveBar,\n  legendBar // For charts (Dashboard view)\n};\n","module.exports = __webpack_public_path__ + \"static/media/sidebar-3.34535b95.jpg\";","const config= {\n    baseurl:(process.env.NODE_ENV==\"development\") ? \"http://localhost:4000/api\": \"https://top4.trade/api\"\n}\n\nexport default config;","import React, { Component } from \"react\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport config from \"../../constant/config.js\";\nimport Select from \"react-select\";\nimport TagsInput from \"react-tagsinput\";\nimport \"react-tagsinput/react-tagsinput.css\";\nimport { times } from \"chartist\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\nimport ReactTooltip from 'react-tooltip';\nconst axios = require(\"axios\");\n\nclass Innerfilter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedAccountOption: null,\n      selectedSymbolOption: null,\n      selectedSymbolOptionTo: null,\n      selectedAccountOptionTo: null,\n      selectedCommissionAccount: null,\n      startDate: null,\n      endDate: null,\n      startDateTo: null,\n      endDateTo: null,\n      startDateComm: null,\n      endDateComm: null,\n      comm_magicNumber: [],\n      excludeComm: false,\n      includeComm: false,\n      allAccounts: [],\n      allSymbols: [],\n      profileName: \"\",\n      error: \"\",\n      showCommisoin: false,\n      showAddCommission: false,\n      autoSyncClose: false,\n      profileValues: [],\n      nameError: false,\n      magicNumber: [],\n      magicNumberTo: [],\n      showMagicNumber: false,\n      showMagicNumberTo: false,\n      tags: [],\n      include_exclude_status: \"\",\n      exclude: false,\n      include: false,\n      excludeTo: false,\n      includeTo: false,\n      ticket: [],\n      ticketTo: [],\n      excludeTicket: false,\n      includeTicket: false,\n      excludeTicketTo: false,\n      includeTicketTo: false,\n\n      // options: [{ name: 'Srigar', id: 1 }, { name: 'Sam', id: 2 }],\n\n      // plainArray: [\"Option 1\", \"Option 2\", \"Option 3\", \"Option 4\", \"Option 5\"],\n      // objectArray: [\n      //     { key: \"Option 1\", cat: \"Group 1\" },\n      //     { key: \"Option 2\", cat: \"Group 1\" },\n      //     { key: \"Option 3\", cat: \"Group 1\" },\n      //     { key: \"Option 4\", cat: \"Group 2\" },\n      //     { key: \"Option 5\", cat: \"Group 2\" },\n      //     { key: \"Option 6\", cat: \"Group 2\" },\n      //     { key: \"Option 7\", cat: \"Group 2\" }\n      // ],\n      // selectedValues: [\n      //     { key: \"Option 1\", cat: \"Group 1\" },\n      //     { key: \"Option 2\", cat: \"Group 1\" }\n      // ]\n    };\n  }\n  componentDidMount() {\n    this.getSymbolInfo();\n    this.fetchfilterdata();\n  }\n  getSymbolInfo = () => {\n    let self = this;\n    axios\n      .get(config.baseurl + \"/accounts/fetchAllAccounts\")\n      .then(function (response) {\n        if (response.status == 200) {\n          self.setState({ allAccounts: response.data.rows });\n        }\n      });\n    axios\n      .get(config.baseurl + \"/accounts/fetchAllSymbol\")\n      .then(function (response) {\n        if (response.status == 200) {\n          self.setState({ allSymbols: response.data.rows });\n        }\n      });\n  };\n  // addItem = () => {\n  //     this.selectedValues.push({ key: \"Option 3\", cat: \"Group 1\" });\n  // }\n  handleDropdownChange = (e) => {\n    this.setState({ selectValue: e.target.value });\n  };\n  handleChangeDate = (date) => {\n    this.setState({\n      startDate: date,\n    });\n  };\n  handleChangeDateComm = (date) => {\n    this.setState({\n      startDateComm: date,\n    });\n  };\n\n  handleEndDate = (date) => {\n    if (date < this.state.startDate && date != null) {\n      this.setState({ error: \"enddate\", endDate: \"\" });\n      return;\n    }\n    this.setState({\n      error: \"\",\n      endDate: date,\n    });\n  };\n  handleChangeDateTo = (date) => {\n    this.setState({\n      startDateTo: date,\n      error: \"\",\n    });\n  };\n  handleEndDateComm = (date) => {\n    if (date < this.state.startDateComm && date != null) {\n      this.setState({ error: \"enddatecomm\", endDateComm: \"\" });\n      return;\n    }\n    this.setState({\n      error: \"\",\n      endDateComm: date,\n    });\n  };\n  handleEndDateTo = (date) => {\n    if (date < this.state.startDateTo && date != null) {\n      this.setState({ error: \"enddateto\", endDateTo: \"\" });\n      return;\n    }\n    this.setState({\n      error: \"\",\n      endDateTo: date,\n    });\n  };\n  handleChange = (event) => {\n    //this.setState({value: event.option});\n    this.setState({\n      value: Array.from(event.target.selectedOptions, (item) => item.value),\n    });\n  };\n  renderAccountSelect = () => {\n    const { selectedAccountOption, allAccounts } = this.state;\n    let Data = {\n      account: selectedAccountOption,\n    };\n    // axios.post(config.baseurl + '/filter/fetchSymbolData', Data)\n    //     .then(function (response) {\n    //         if (response.status == 200) {\n    //             this.props.onHide()\n    //         }\n    //     })\n    //     .catch(function (error) {\n    //     });\n\n    let options = allAccounts.map((data) => {\n      return { value: data.id, label: data.login };\n    });\n    return (\n      <Select\n        placeholder=\"Select Account\"\n        value={selectedAccountOption}\n        onChange={this.handleChangeAccount}\n        options={options}\n      />\n    );\n  };\n  handeChangeShowCommission = (e) => {\n    this.setState({ showCommission: true }, () => {\n      this.setState({ showAddCommission: !this.state.showAddCommission });\n    });\n  };\n  handleChangeAccountTo = (selectedAccountOptionTo) => {\n    this.setState({ selectedAccountOptionTo, error: \"\" });\n  };\n  renderAccountSelectTo = () => {\n    const { selectedAccountOptionTo, allAccounts } = this.state;\n\n    let options = allAccounts.map((data) => {\n      return { value: data.id, label: data.login };\n    });\n    return (\n      <Select\n        placeholder=\"Select Account\"\n        value={selectedAccountOptionTo}\n        onChange={this.handleChangeAccountTo}\n        options={options}\n      />\n    );\n  };\n  handleChangeCommissionAccount = (selectedCommissionAccount) => {\n    this.setState({ selectedCommissionAccount });\n  };\n  renderCommissionAccount = () => {\n    const { selectedCommissionAccount, allAccounts } = this.state;\n\n    let options = allAccounts.map((data) => {\n      return { value: data.id, label: data.login };\n    });\n    return (\n      <Select\n        placeholder=\"Select Account\"\n        value={selectedCommissionAccount}\n        onChange={this.handleChangeCommissionAccount}\n        options={options}\n      />\n    );\n  };\n  handleChangeMagicNumber = (magicNumber) => {\n    this.setState({ magicNumber });\n  };\n  handleChangeMagicNumberTo = (magicNumberTo) => {\n    this.setState({ magicNumberTo });\n  };\n  handleChangeMagicNumberComm = (comm_magicNumber) => {\n    this.setState({ comm_magicNumber });\n  };\n  handleChangeTicket = (ticket) => {\n    this.setState({ ticket });\n  };\n  handleChangeTicketTo = (ticketTo) => {\n    this.setState({ ticketTo });\n  };\n\n  handleChangeAccount = (selectedAccountOption) => {\n    this.setState({ selectedAccountOption });\n  };\n  handleChangeSymbol = (selectedSymbolOption) => {\n    this.setState({ selectedSymbolOption });\n  };\n  renderSymbolSelect = () => {\n    const { selectedSymbolOption, allSymbols } = this.state;\n    // console.log(selectedSymbolOption, allSymbols, \"selectedSymbolOption, allSymbols--------->\")\n    let options = allSymbols.map((data) => {\n      return { value: data.name, label: data.name };\n    });\n    return (\n      <Select\n        placeholder=\"Select Symbol\"\n        value={selectedSymbolOption}\n        isMulti\n        onChange={this.handleChangeSymbol}\n        options={options}\n      />\n    );\n  };\n  handleChangeSymbolTo = (selectedSymbolOptionTo) => {\n    this.setState({ selectedSymbolOptionTo });\n  };\n  renderSymbolSelectTo = () => {\n    const { selectedSymbolOptionTo, allSymbols } = this.state;\n    let options = allSymbols.map((data) => {\n      return { value: data.name, label: data.name };\n    });\n\n    return (\n      <Select\n        placeholder=\"Select Symbol...\"\n        value={selectedSymbolOptionTo}\n        isMulti\n        onChange={this.handleChangeSymbolTo}\n        options={options}\n      />\n    );\n  };\n  fetchfilterdata() {\n    let self = this;\n    let token = JSON.parse(localStorage.getItem(\"accessToken\"));\n    axios\n      .get(config.baseurl + \"/filter/fetchfilterdata?page=1\", { headers: { 'x-access-token': token } })\n      .then(function (response) {\n        if (response.status == 200) {\n          self.setState({ profileValues: response.data.rows });\n        }\n      });\n  }\n\n  handleprofileName(e) {\n    this.setState({ nameError: false });\n    if (this.state.profileValues.length <= 0) {\n      this.setState({\n        profileName:\n          e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1),\n        error: \"\",\n      });\n    } else {\n      this.state.profileValues.filter((data) => {\n        if (data.profile_name.toUpperCase() !== e.target.value.toUpperCase()) {\n          this.setState({\n            profileName: e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1),\n            error: \"\",\n          });\n        } else {\n          this.setState({ nameError: true }, () => { });\n          NotificationManager.listNotify = [];\n          NotificationManager.error(\"Profile already exits!\");\n        }\n      });\n    }\n  }\n  // handlemagicNumber(e){\n  //     this.setState({ magicNumber: e.target.value})\n  // }\n\n  // handlemagicNumberTo(e){\n  //     this.setState({ magicNumberTo: e.target.value})\n  // }\n\n  formDataSubmit(e) {\n    e.preventDefault();\n\n    let from_status =\n      this.state.include === true && this.state.exclude === false\n        ? 1\n        : this.state.exclude === true && this.state.include === false\n          ? 2\n          : 0;\nlet comm_status =\n      this.state.includeComm === true && this.state.excludeComm === false\n        ? 1\n        : this.state.excludeComm === true && this.state.includeComm === false\n          ? 2\n          : 0;\n    let to_status =\n      this.state.includeTo === true && this.state.excludeTo === false\n        ? 1\n        : this.state.excludeTo === true && this.state.includeTo === false\n          ? 2\n          : 0;\n\n    let from_status_ticket =\n      this.state.includeTicket === true && this.state.excludeTicket === false\n        ? 1\n        : this.state.excludeTicket === true &&\n          this.state.includeTicket === false\n          ? 2\n          : 0;\n\n    let to_status_ticket =\n      this.state.includeTicketTo === true &&\n        this.state.excludeTicketTo === false\n        ? 1\n        : this.state.excludeTicketTo === true &&\n          this.state.includeTicketTo === false\n          ? 2\n          : 0;\n\n    let self = this;\n\n    if (this.state.profileName == null || this.state.profileName == \"\") {\n      NotificationManager.listNotify = [];\n      NotificationManager.error(\"Profile name is required !\");\n      return;\n    } else if (\n      this.state.selectedAccountOption == null ||\n      this.state.selectedAccountOption == \"\"\n    ) {\n      this.setState({ error: \"accountoption\" });\n      return;\n    } else if (\n      this.state.showCommission == true &&\n      (this.state.selectedCommissionAccount == null ||\n        this.state.selectedCommissionAccount == \"\")\n    ) {\n      this.setState({ error: \"selectedCommissionAccount\" });\n      return;\n    } else if (this.state.startDate == null || this.state.startDate == \"\") {\n      this.setState({ error: \"startdate\" });\n      return;\n    } else if (\n      this.state.selectedSymbolOption == null ||\n      this.state.selectedSymbolOption == \"\"\n    ) {\n      this.setState({ error: \"symbolselect\" });\n      return;\n    } else if (\n      this.state.selectedAccountOptionTo == null ||\n      this.state.selectedAccountOptionTo == \"\"\n    ) {\n      this.setState({ error: \"accountoptionto\" });\n      return;\n    } else if (this.state.startDateTo == null || this.state.startDateTo == \"\") {\n      this.setState({ error: \"startDateTo\" });\n      return;\n    } else if (\n      this.state.selectedSymbolOptionTo == null ||\n      this.state.selectedSymbolOptionTo == \"\"\n    ) {\n      this.setState({ error: \"selectedSymbolOptionTo\" });\n      return;\n    } else if (this.state.nameError) {\n      NotificationManager.listNotify = [];\n      NotificationManager.error(\"Profile Name Already Exist!\");\n    } else {\n      this.setState({ error: \" \" });\n      let fromSymbol = this.state.selectedSymbolOption;\n      let symbolFrom = fromSymbol.map((data) => {\n        return data.value;\n      });\n      let toSymbol = this.state.selectedSymbolOptionTo;\n      let symbolto = toSymbol.map((data) => {\n        return data.value;\n      });\n      // console.log(this.state.selectedCommissionAccount, 'this.state.selectedCommissionAccount')\n\n      let Data = {\n        profile_name: this.state.profileName,\n        from_account_id: this.state.selectedAccountOption.value,\n        to_account_id: this.state.selectedAccountOptionTo.value,\n        commission_acount_id: this.state.showAddCommission\n          ? this.state.selectedCommissionAccount.value\n          : 0,\n        startdateFrom: this.state.startDate,\n        enddateFrom: this.state.endDate,\n        startdateTo: this.state.startDateTo,\n        enddateTo: this.state.endDateTo,\n        startdateComm: this.state.startDateComm,\n        enddateComm: this.state.endDateComm,\n        comm_include_exclude_status: comm_status,\n        comm_magic_number: comm_status != 0 ? this.state.comm_magicNumber.length > 0\n            ? JSON.stringify(this.state.comm_magicNumber)\n            : JSON.stringify(\"\") : \"\",\n        from_symbols: JSON.stringify(symbolFrom),\n        to_symbols: JSON.stringify(symbolto),\n        auto_close: this.state.autoSyncClose ? 1 : 0,\n        from_magic_number:\n          from_status != 0\n            ? this.state.magicNumber.length > 0\n              ? JSON.stringify(this.state.magicNumber)\n              : JSON.stringify(\"\")\n            : \"\",\n        to_magic_number:\n          to_status != 0\n            ? this.state.magicNumberTo.length > 0\n              ? JSON.stringify(this.state.magicNumberTo)\n              : JSON.stringify(\"\")\n            : \"\",\n        from_include_exclude_status: from_status,\n        to_include_exclude_status: to_status,\n        from_ticket:\n          from_status_ticket != 0\n            ? this.state.ticket.length > 0\n              ? JSON.stringify(this.state.ticket)\n              : JSON.stringify(\"\")\n            : \"\",\n        to_ticket:\n          to_status_ticket != 0\n            ? this.state.ticketTo.length > 0\n              ? JSON.stringify(this.state.ticketTo)\n              : JSON.stringify(\"\")\n            : \"\",\n        from_include_exclude_status_ticket: from_status_ticket,\n        to_include_exclude_status_ticket: to_status_ticket,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      };\n      //   console.log(Data, \"dat-------------\");\n\n      axios\n        .post(config.baseurl + \"/filter/addfilterdata\", Data)\n        .then(function (response) {\n          if (response.status == 200) {\n            self.props.onHide();\n          }\n        })\n        .catch(function (error) { });\n    }\n  }\n  crossClick(e) {\n    e.preventDefault();\n    this.props.onHide();\n  }\n  handleChangeAutoSync(e) {\n    this.setState({ autoSyncClose: !this.state.autoSyncClose }, () => { });\n  }\n\n  changeIncludeDefaultProperty = () => {\n    this.setState({ include: !this.state.include, exclude: false });\n    // if (!this.state.include == true) {\n    //     this.setState({ showMagicNumber: true })\n    // } else if (this.state.include == true) {\n    //     this.setState({ showMagicNumber: false })\n\n    // }\n  };\n  changeExcludeDefaultProperty = () => {\n    this.setState({ exclude: !this.state.exclude, include: false });\n    // if (!this.state.exclude == true) {\n    //     this.setState({ showMagicNumber: true })\n    // } else if (this.state.exclude == true) {\n    //     this.setState({ showMagicNumber: false })\n\n    // }\n  };\n  changeIncludeDefaultPropertyComm = () => {\n    this.setState({ includeComm: !this.state.includeComm, excludeComm: false });\n  }\n  changeIncludeDefaultPropertyTo = () => {\n    this.setState({ includeTo: !this.state.includeTo, excludeTo: false });\n    // if (!this.state.includeTo == true) {\n    //     this.setState({ showMagicNumberTo: true })\n    // } else if (this.state.includeTo == true) {\n    //     this.setState({ showMagicNumberTo: false })\n\n    // }\n  };\n  changeExcludeDefaultPropertyComm = () => {\n    this.setState({ excludeComm: !this.state.excludeComm, includeComm: false });\n  }\n  changeExcludeDefaultPropertyTo = () => {\n    this.setState({ excludeTo: !this.state.excludeTo, includeTo: false });\n    // if (!this.state.excludeTo == true) {\n    //     this.setState({ showMagicNumberTo: true })\n    // } else if (this.state.excludeTo == true) {\n    //     this.setState({ showMagicNumberTo: false })\n\n    // }\n  };\n  changeIncludeDefaultPropertyTicket = () => {\n    this.setState({\n      includeTicket: !this.state.includeTicketTo,\n      excludeTicket: false,\n    });\n  };\n  changeExcludeDefaultPropertyTicket = () => {\n    this.setState({\n      excludeTicket: !this.state.excludeTicket,\n      includeTicket: false,\n    });\n  };\n\n  changeIncludeDefaultPropertyTicketTo = () => {\n    this.setState({\n      includeTicketTo: !this.state.includeTicketTo,\n      excludeTicketTo: false,\n    });\n  };\n  changeExcludeDefaultPropertyTicketTo = () => {\n    this.setState({\n      excludeTicketTo: !this.state.excludeTicketTo,\n      includeTicketTo: false,\n    });\n  };\n  render() {\n    let s = this;\n    return (\n      <>\n        <NotificationContainer />\n        <div className=\"content\">\n          <Grid fluid>\n            <div className=\"symbol-box\">\n              <div className=\"cross_div\">\n                <a onClick={(e) => this.crossClick(e)}>\n                  <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n                </a>\n              </div>\n              <div className=\"terminal-text\">\n                <label className=\"pnameadjust\"> Profile Name </label>\n                <input type=\"text\" name=\"profilename\" className=\"Itext\" placeholder=\"Profile Name\" onChange={(e) => this.handleprofileName(e)} />\n              </div>\n              <div className=\"synclose\">\n                <label className=\"checkbox-inline\">\n                  <input\n                    type=\"checkbox\"\n                    defaultChecked={this.state.autoSyncClose}\n                    name=\"changeAutoSync\"\n                    onChange={(e) => this.handleChangeAutoSync(e)}\n                  />\n                  <b>Auto Sync Close</b>\n                </label>\n              </div>\n\n              <form>\n                <Row>\n                  <Col md={6}>\n                    <div className=\"card bottom\">\n                      <div style={{ padding: \"10px 20px 0px\" }}>\n                        <span style={{ fontWeight: \"bold\" }}>Account A</span>\n                      </div>\n                      <table className=\"table mt20\">\n                        <tbody>\n                          <tr>\n                            <td className=\"b-clr\">\n                              <span className=\"accnt\">Account </span>\n                            </td>\n\n                            <td\n                              className=\"b-clr text-center\"\n                              style={{ width: \"50%\" }}\n                            >\n                              {/* <Multiselect\n                                                        options={objectArray}\n                                                        singleSelect\n                                                        displayValue=\"key\"\n                                                    /> */}\n                              {this.renderAccountSelect()}\n                              {this.state.error == \"accountoption\" && (\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\n                                  *Please Select Your Account\n                                </p>\n                              )}\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"b-clr \">\n                              <span className=\"accnt\">From </span>\n                            </td>\n                            <td className=\"b-clr text-center datepicker_filter\">\n                              <DatePicker\n                                selected={this.state.startDate}\n                                onChange={this.handleChangeDate}\n                                isClearable\n                                placeholderText=\"dd/mm/yyyy\"\n                                dateFormat=\"dd/MM/yyyy\"\n                                startDate={this.state.startDate}\n                                endDate={this.state.endDate}\n                                strictParsing\n                              />\n                              {/* <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                                            <KeyboardDatePicker\n                                                                // margin=\"normal\"\n                                                                clearable={false}\n                                                                id=\"date-picker-dialog\"\n                                                                label=\"dd/MM/yyyy\"\n                                                                format=\"dd/MM/yyyy\"\n                                                                onError={() => { return null }}\n                                                                value={this.state.startDate}\n                                                                onChange={this.handleChangeDate}\n                                                                KeyboardButtonProps={{\n                                                                    'aria-label': 'change date',\n                                                                }}\n                                                            />\n                                                        </MuiPickersUtilsProvider> */}\n                              {this.state.error == \"startdate\" && (\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\n                                  *Please Select Start Date\n                                </p>\n                              )}\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"b-clr \">\n                              <span className=\"accnt\">To </span>\n                            </td>\n                            <td className=\"b-clr text-center datepicker_filter\">\n                              <DatePicker\n                                autoOk={true}\n                                selected={this.state.endDate}\n                                onChange={this.handleEndDate}\n                                isClearable\n                                placeholderText=\"dd/mm/yyyy\"\n                                dateFormat=\"dd/MM/yyyy\"\n                                startDate={this.state.startDate}\n                                endDate={this.state.endDate}\n                              />\n                              {this.state.error == \"enddate\" && (\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\n                                  * Please ensure that the End Date is greater\n                                  than the Start Date.\n                                </p>\n                              )}\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"b-clr \">\n                              <span className=\"accnt\">Symbol </span>\n                            </td>\n                            <td\n                              className=\"b-clr text-center\"\n                              style={{ width: \"40%\" }}\n                            >\n                              {/* <Multiselect\n                                                        options={objectArray}\n                                                        displayValue=\"key\"\n                                                        showCheckbox={true}\n                                                    /> */}\n                              {this.renderSymbolSelect()}\n                              {this.state.error == \"symbolselect\" && (\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\n                                  *Please Select Your Symbol{\" \"}\n                                </p>\n                              )}\n                            </td>\n                          </tr>\n\n                          <tr>\n                            <td className=\"b-clr \">\n                              <span className=\"accnt\">Magic Number </span>\n                            </td>\n                            <td\n                              className=\"b-clr text-center\"\n                              style={{ width: \"40%\" }}\n                            >\n                              <TagsInput\n                                onValidationReject={() =>\n                                  console.log(\"rejected\")\n                                }\n                                validationRegex={/^[0-9]*$/}\n                                inputProps={{\n                                  placeholder:\n                                    this.state.magicNumber.length > 0\n                                      ? \"\"\n                                      : \" Enter Magic Number\",\n                                }}\n                                type=\"number\"\n                                value={this.state.magicNumber}\n                                onChange={this.handleChangeMagicNumber}\n                              ></TagsInput>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"b-clr dataAdjust\">\n                              <div onClick={this.changeIncludeDefaultProperty}>\n                                <input\n                                  type=\"radio\"\n                                  id=\"include\"\n                                  name=\"include\"\n                                  checked={this.state.include}\n                                />\n                                <span className=\"accnt \">Include</span>\n                              </div>\n                            </td>\n                            <td className=\"b-clr text-center\">\n                              <div onClick={this.changeExcludeDefaultProperty}>\n                                <input\n                                  type=\"radio\"\n                                  id=\"exclude\"\n                                  name=\"exclude\"\n                                  checked={this.state.exclude}\n                                />\n                                <span className=\"accnt \">Exclude</span>\n                              </div>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"b-clr \">\n                              <span className=\"accnt\">Ticket </span>\n                            </td>\n                            <td\n                              className=\"b-clr text-center\"\n                              style={{ width: \"40%\" }}\n                            >\n                              <TagsInput\n                                onValidationReject={() =>\n                                  console.log(\"rejected\")\n                                }\n                                validationRegex={/^[0-9]*$/}\n                                inputProps={{\n                                  placeholder:\n                                    this.state.ticket.length > 0\n                                      ? \"\"\n                                      : \" Enter Ticket\",\n                                }}\n                                type=\"number\"\n                                value={this.state.ticket}\n                                onChange={this.handleChangeTicket}\n                              ></TagsInput>\n                            </td>\n                          </tr>\n\n                          <tr>\n                            <td className=\"b-clr dataAdjust\">\n                              <div\n                                onClick={\n                                  this.changeIncludeDefaultPropertyTicket\n                                }\n                              >\n                                <input\n                                  type=\"radio\"\n                                  id=\"includeTicket\"\n                                  name=\"includeTicket\"\n                                  checked={this.state.includeTicket}\n                                />\n                                <span className=\"accnt \">Include</span>\n                              </div>\n                            </td>\n                            <td className=\"b-clr text-center\">\n                              <div\n                                onClick={\n                                  this.changeExcludeDefaultPropertyTicket\n                                }\n                              >\n                                <input\n                                  type=\"radio\"\n                                  id=\"excludeTicket\"\n                                  name=\"excludeTicket\"\n                                  checked={this.state.excludeTicket}\n                                />\n                                <span className=\"accnt \">Exclude</span>\n                              </div>\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  </Col>\n                  <Col md={6}>\n                    <div className=\"card bottom\">\n                      <div style={{ padding: \"10px 20px 0px\" }}>\n                        <span style={{ fontWeight: \"bold\" }}>Account B</span>\n                      </div>\n                      <table className=\"table mt20\">\n                        <tbody>\n                          <tr>\n                            <td className=\"b-clr \">\n                              <span className=\"accnt\"> Account</span>\n                            </td>\n                            <td\n                              className=\"b-clr text-center\"\n                              style={{ width: \"50%\" }}\n                            >\n                              {this.renderAccountSelectTo()}\n                              {this.state.error == \"accountoptionto\" && (\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\n                                  *Please Select Your Account\n                                </p>\n                              )}\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"b-clr \">\n                              <span className=\"accnt\">From </span>\n                            </td>\n                            <td className=\"b-clr text-center datepicker_filter\">\n                              <DatePicker\n                                selected={this.state.startDateTo}\n                                onChange={this.handleChangeDateTo}\n                                isClearable\n                                placeholderText=\"dd/mm/yyyy\"\n                                dateFormat=\"dd/MM/yyyy\"\n                                startDate={this.state.startDateTo}\n                                endDate={this.state.endDateTo}\n                                strictParsing\n                              />\n                              {this.state.error == \"startDateTo\" && (\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\n                                  *Please Select Start Date\n                                </p>\n                              )}\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"b-clr \">\n                              <span className=\"accnt\">To </span>\n                            </td>\n                            <td className=\"b-clr text-center datepicker_filter\">\n                              <DatePicker\n                                selected={this.state.endDateTo}\n                                onChange={this.handleEndDateTo}\n                                isClearable\n                                placeholderText=\"dd/mm/yyyy\"\n                                dateFormat=\"dd/MM/yyyy\"\n                                startDate={this.state.startDateTo}\n                                endDate={this.state.endDateTo}\n                              />\n                              {this.state.error == \"enddateto\" && (\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\n                                  * Please ensure that the End Date is greater\n                                  than the Start Date.\n                                </p>\n                              )}\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"b-clr\">\n                              <span className=\"accnt\"> Symbol </span>\n                            </td>\n                            <td\n                              className=\"b-clr text-center\"\n                              style={{ width: \"40%\" }}\n                            >\n                              {/* <Multiselect\n                                                        options={objectArray}\n                                                        displayValue=\"key\"\n                                                        showCheckbox={true}\n                                                    /> */}\n                              {this.renderSymbolSelectTo()}\n                              {this.state.error == \"selectedSymbolOptionTo\" && (\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\n                                  *Please Select Your Symbol{\" \"}\n                                </p>\n                              )}\n                            </td>\n                          </tr>\n\n                          <tr>\n                            <td className=\"b-clr \">\n                              <span className=\"accnt\">Magic Number </span>\n                            </td>\n                            <td\n                              className=\"b-clr text-center\"\n                              style={{ width: \"40%\" }}\n                            >\n                              <TagsInput\n                                onValidationReject={() =>\n                                  console.log(\"rejected\")\n                                }\n                                validationRegex={/^[0-9]*$/}\n                                inputProps={{\n                                  placeholder:\n                                    this.state.magicNumberTo.length > 0\n                                      ? \"\"\n                                      : \" Enter Magic Number\",\n                                }}\n                                type=\"number\"\n                                value={this.state.magicNumberTo}\n                                onChange={this.handleChangeMagicNumberTo}\n                              ></TagsInput>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"b-clr dataAdjust\">\n                              <div\n                                onClick={this.changeIncludeDefaultPropertyTo}\n                              >\n                                <input\n                                  type=\"radio\"\n                                  id=\"includeTo\"\n                                  name=\"includeTo\"\n                                  checked={this.state.includeTo}\n                                />\n                                <span className=\"accnt \">Include</span>\n                              </div>\n                            </td>\n                            <td className=\"b-clr text-center\">\n                              <div\n                                onClick={this.changeExcludeDefaultPropertyTo}\n                              >\n                                <input\n                                  type=\"radio\"\n                                  id=\"excludeTo\"\n                                  name=\"excludeTo\"\n                                  checked={this.state.excludeTo}\n                                />\n                                <span className=\"accnt \">Exclude</span>\n                              </div>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"b-clr \">\n                              <span className=\"accnt\">Ticket </span>\n                            </td>\n                            <td\n                              className=\"b-clr text-center\"\n                              style={{ width: \"40%\" }}\n                            >\n                              <TagsInput\n                                onValidationReject={() =>\n                                  console.log(\"rejected\")\n                                }\n                                validationRegex={/^[0-9]*$/}\n                                inputProps={{\n                                  placeholder:\n                                    this.state.ticketTo.length > 0\n                                      ? \"\"\n                                      : \" Enter Ticket\",\n                                }}\n                                type=\"number\"\n                                value={this.state.ticketTo}\n                                onChange={this.handleChangeTicketTo}\n                              ></TagsInput>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"b-clr dataAdjust\">\n                              <div\n                                onClick={\n                                  this.changeIncludeDefaultPropertyTicketTo\n                                }\n                              >\n                                <input\n                                  type=\"radio\"\n                                  id=\"includeTicketTo\"\n                                  name=\"includeTicketTo\"\n                                  checked={this.state.includeTicketTo}\n                                />\n                                <span className=\"accnt \">Include</span>\n                              </div>\n                            </td>\n                            <td className=\"b-clr text-center\">\n                              <div\n                                onClick={\n                                  this.changeExcludeDefaultPropertyTicketTo\n                                }\n                              >\n                                <input\n                                  type=\"radio\"\n                                  id=\"excludeTicketTo\"\n                                  name=\"excludeTicketTo\"\n                                  checked={this.state.excludeTicketTo}\n                                />\n                                <span className=\"accnt \">Exclude</span>\n                              </div>\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  </Col>\n                </Row>\n                <hr></hr>\n                <div className=\"chceckbox\">\n                  <label className=\"checkbox-inline\">\n                    <input\n                      type=\"checkbox\"\n                      defaultChecked={this.state.showCommisoin}\n                      onChange={(e) => this.handeChangeShowCommission(e)}\n                    />\n                    <b>Add Commission</b>\n                  </label>\n                </div>\n                {this.state.showAddCommission && (\n                  <div className=\"center-com d-flex\">\n                    <div className=\"com\">\n                      <h3 style={{ fontWeight: \"bold\" }} data-tip=\"Commission\">Commission</h3>\n                      <ReactTooltip />\n                    </div>\n                    <table className=\"table mt20\">\n                      <tbody>\n                        <tr>\n                          <td className=\"b-clr \">\n                            <span className=\"accnt\"> Account </span>\n                          </td>\n                          <td\n                            className=\"b-clr text-center\"\n                            style={{ width: \"50%\" }}\n                          >\n                            {this.renderCommissionAccount()}\n\n                            {this.state.error ==\n                              \"selectedCommissionAccount\" && (\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\n                                  *Please Select Your Account{\" \"}\n                                </p>\n                              )}\n                          </td>\n                        </tr>\n                        <tr>\n                        <td className=\"b-clr \">\n                              <span className=\"accnt\">From </span>\n                            </td>\n                          <td className=\"b-clr text-center datepicker_filter\">\n                          <DatePicker\n                                selected={this.state.startDateComm}\n                                onChange={this.handleChangeDateComm}\n                                isClearable\n                                placeholderText=\"dd/mm/yyyy\"\n                                dateFormat=\"dd/MM/yyyy\"\n                                startDate={this.state.startDateComm}\n                                endDate={this.state.endDateComm}\n                                strictParsing\n                              />\n                              {this.state.error == \"startDateComm\" && (\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\n                                  *Please Select Start Date\n                                </p>\n                              )}\n                          </td>\n                        </tr>\n                        <tr>\n                            <td className=\"b-clr \">\n                              <span className=\"accnt\">To </span>\n                            </td>\n                            <td className=\"b-clr text-center datepicker_filter\">\n                              <DatePicker\n                                selected={this.state.endDateComm}\n                                onChange={this.handleEndDateComm}\n                                isClearable\n                                placeholderText=\"dd/mm/yyyy\"\n                                dateFormat=\"dd/MM/yyyy\"\n                                startDate={this.state.startDateComm}\n                                endDate={this.state.endDateComm}\n                              />\n                              {this.state.error == \"enddatecomm\" && (\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\n                                  * Please ensure that the End Date is greater\n                                  than the Start Date.\n                                </p>\n                              )}\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"b-clr \">\n                              <span className=\"accnt\">Magic Number </span>\n                            </td>\n                            <td\n                              className=\"b-clr text-center\"\n                              style={{ width: \"40%\" }}\n                            >\n                              <TagsInput\n                                onValidationReject={() =>\n                                  console.log(\"rejected\")\n                                }\n                                validationRegex={/^[0-9]*$/}\n                                inputProps={{\n                                  placeholder:\n                                    this.state.comm_magicNumber.length > 0\n                                      ? \"\"\n                                      : \" Enter Magic Number\",\n                                }}\n                                type=\"number\"\n                                value={this.state.comm_magicNumber}\n                                onChange={this.handleChangeMagicNumberComm}\n                              ></TagsInput>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"b-clr dataAdjust\">\n                              <div\n                                onClick={this.changeIncludeDefaultPropertyComm}\n                              >\n                                <input\n                                  type=\"radio\"\n                                  id=\"includecomm\"\n                                  name=\"includecomm\"\n                                  checked={this.state.includeComm}\n                                />\n                                <span className=\"accnt \">Include</span>\n                              </div>\n                            </td>\n                            <td className=\"b-clr text-center\">\n                              <div\n                                onClick={this.changeExcludeDefaultPropertyComm}\n                              >\n                                <input\n                                  type=\"radio\"\n                                  id=\"excludeComm\"\n                                  name=\"excludeComm\"\n                                  checked={this.state.excludeComm}\n                                />\n                                <span className=\"accnt \">Exclude</span>\n                              </div>\n                            </td>\n                          </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                )}\n                <div className=\"save_button_filter\">\n                  <div className=\"savebtn\">\n                    <Button\n                      className=\"btn-primary savebutton\"\n                      variant=\"primary\"\n                      size=\"lg\"\n                      block\n                      onClick={(e) => this.formDataSubmit(e)}\n                    >\n                      <b>Save</b>\n                    </Button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Grid>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Innerfilter;\n","import React, { Component } from 'react';\nimport { Grid, Row, Col, Modal, Alert } from \"react-bootstrap\";\nimport swal from 'sweetalert';\nimport config from '../../constant/config.js';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nconst axios = require('axios');\n\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loginForm: false,\n            setShow: false,\n            show: true,\n            username: '',\n            password: '',\n            alert: null,\n            persons: [],\n            shwPwd: false,\n            shwMsg: false,\n            invalidUsername: '',\n            invalidPassword: '',\n            accountlist: []\n\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value.trim() })\n    }\n    onSubmit(e) {\n        e.preventDefault();\n        const userdetail = {\n            username: this.state.username,\n            password: this.state.password\n        }\n        if (this.state.username == '') {\n            this.setState({ shwPwd: true })\n        }\n\n        let self = this;\n        axios.post(config.baseurl + '/users/mainLogin', userdetail)\n            .then(function (response) {\n                if (response.status == 200) {\n                    // self.handleClose();\n                    if (response.data.rows && response.data.rows.length > 0) {\n                        localStorage.setItem('currentUser', JSON.stringify(response.data.rows));\n                        localStorage.setItem('accessToken', JSON.stringify(response.data.accessToken));\n                        self.props.history.push('/dashboard/dashboard')\n                    }\n                    if (response.data.message) {\n                        if (response.data.name == 'username') {\n                            self.setState({ invalidUsername: response.data.message })\n                            if (self.state.invalidUsername == '' || self.state.invalidUsername == 'Invalid username.' || self.state.invalidUsername == \"Invalid username\") {\n                                self.createNotification()\n                            }\n                        }\n                        if (response.data.name == 'password') {\n                            if (self.state.invalidPassword == '' || self.state.invalidPassword == 'Invalid password.') {\n                                self.createNotification()\n                            }\n                            self.setState({ invalidPassword: response.data.message, invalidUsername: '' })\n\n                        }\n                    }\n                }\n            })\n            .catch(function (err) {\n            });\n    }\n    toogle = () => {\n        this.setState({ loginForm: !this.state.loginForm })\n    }\n    handleClose = () => {\n        this.setState({ loginForm: false })\n    }\n    handleShow = () => {\n        this.setState({ setShow: true })\n    }\n    createNotification = () => {\n        NotificationManager.listNotify = [];\n        NotificationManager.error('Invalid Credentials !');\n    }\n\n    componentDidMount() {\n        // let self = this;\n\n        let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n        if (currentUser !== null) {\n            this.props.history.push('dashboard/dashboard')\n            return;\n        }\n        // axios.get(config.baseurl + '/users/allAccounts')\n        //     .then(function (response) {\n        //         if (response.status == 200) {\n        //             self.setState({ accountlist: response.data.rows })\n        //         }\n        //     })\n    }\n    render() {\n        const { invalidPassword, invalidUsername } = this.state;\n        return (\n            <div className=\"content\">\n                <Grid fluid style={{ marginTop: '20vh' }}>\n                    <Row>\n                        <Col md={4} />\n                        <Col\n                            md={4}\n                            sm={6}\n                        >\n                            <span className=\"login-form-header\">Rimon Hedge Funds Monitoring</span>\n                            <div className=\"form-box login-box\">\n                                {/* <Modal.Title className=\"text-center\"><b>Log In</b></Modal.Title> */}\n\n                                {/* <div className=\"container-fluid\" style={{ background: '#eee', padding: 15, marginTop: 10 }}>\n                                    <div>\n                                        <span style={{ fontWeight: 'bold' }}> Username: </span>\n                                                    testaccount\n                                                </div>\n                                    <div>\n                                        <span style={{ fontWeight: 'bold' }}> Password: </span>\n                                                    1234567\n                                                </div>\n                                </div> */}\n                                <form style={{ marginTop: '20px' }} onSubmit={this.onSubmit}>\n                                    <label>Username</label>\n\n                                    <input className=\"Itext\" placeholder=\"Enter Username\" name=\"username\" value={this.state.username} onChange={this.onChange}\n                                    // onKeyUp={this.checkValidUser}\n                                    ></input>\n                                    <label>Password</label>\n\n                                    <input className=\"Itext\" placeholder=\"Enter Password\" name=\"password\" type=\"password\" value={this.state.password} onChange={this.onChange}></input>\n\n                                    <div className=\"clearfix\">\n                                        <button type=\"submit\" disabled={!this.state.username || !this.state.password} className={!this.state.username || !this.state.password ? \"loginButton\" : \"loginButton save2 save1\"}>Login</button>\n\n                                    </div>\n                                    <div className=\"login-footer-text\">\n                                        alpha ver 0.11\n                                        <br />\n                                        ©Rimon Hedge Funds LTD\n                                    </div>\n                                </form>\n                            </div>\n\n                            {/* </Modal.Body>\n                                </Modal> */}\n\n\n                        </Col>\n                        <Col md={4} />\n                    </Row>\n                </Grid>\n                <NotificationContainer />\n\n            </div >\n        );\n    }\n}\n\nexport default Login;","import React, { Component } from \"react\";\nimport { NavItem, Nav, NavDropdown, MenuItem } from \"react-bootstrap\";\nimport config from '../../constant/config';\nimport axios from \"axios\";\n\nclass AdminNavbarLinks extends Component {\n  constructor(props) {\n    super(props);\n\n\n    let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    // console.log(currentUser[0]);\n    this.state = {\n      loginForm: false,\n      setShow: false,\n      show: true,\n      id: currentUser[0].id,\n      logged_in: currentUser[0].logged_in,\n    }\n  }\n  logout = async () => {\n    if (this.state.logged_in) {\n      const userdetail = {\n        id: this.state.id,\n      }\n      await axios.post(config.baseurl + '/users/logout', userdetail)\n        .then(function (response) {\n          if (response.status == 200) {\n            console.log({ message: 'logout' });\n          }\n        })\n    }\n    localStorage.clear();\n    this.props.history.push('/login');\n  }\n  render() {\n    const notification = (\n      <div>\n        {/* <i className=\"fa fa-globe\" />\n        <b className=\"caret\" /> */}\n        {/* <span className=\"notification\">5</span> */}\n        <p className=\"hidden-lg hidden-md\">Notification</p>\n      </div>\n    );\n    return (\n      <div>\n        <Nav>\n          <NavItem eventKey={1} href=\"#\">\n            {/* <i className=\"fa fa-dashboard\" /> */}\n            <p className=\"hidden-lg hidden-md\">Dashboard</p>\n          </NavItem>\n          <NavDropdown\n            eventKey={2}\n            title={notification}\n            noCaret\n            id=\"basic-nav-dropdown\"\n          >\n            <MenuItem eventKey={2.1}>Notification 1</MenuItem>\n            <MenuItem eventKey={2.2}>Notification 2</MenuItem>\n            <MenuItem eventKey={2.3}>Notification 3</MenuItem>\n            <MenuItem eventKey={2.4}>Notification 4</MenuItem>\n            <MenuItem eventKey={2.5}>Another notifications</MenuItem>\n          </NavDropdown>\n          <NavItem eventKey={3} href=\"#\">\n            {/* <i className=\"fa fa-search\" />\n            <p className=\"hidden-lg hidden-md\">Search</p> */}\n          </NavItem>\n        </Nav>\n        <Nav pullRight>\n          {/* <NavItem eventKey={1} href=\"#\">\n            Account\n          </NavItem>\n          <NavDropdown\n            eventKey={2}\n            title=\"Dropdown\"\n            id=\"basic-nav-dropdown-right\"\n          >\n            <MenuItem eventKey={2.1}>Action</MenuItem>\n            <MenuItem eventKey={2.2}>Another action</MenuItem>\n            <MenuItem eventKey={2.3}>Something</MenuItem>\n            <MenuItem eventKey={2.4}>Another action</MenuItem>\n            <MenuItem eventKey={2.5}>Something</MenuItem>\n            <MenuItem divider />\n            <MenuItem eventKey={2.5}>Separated link</MenuItem>\n          </NavDropdown> */}\n          <NavItem eventKey={3} onClick={() => this.logout()}>\n            <span className=\"logOutbtn\">Logout</span>\n          </NavItem>\n        </Nav>\n      </div>\n    );\n  }\n}\n\nexport default AdminNavbarLinks;\n","import React, { Component } from \"react\";\nimport { Navbar } from \"react-bootstrap\";\n\nimport AdminNavbarLinks from \"./AdminNavbarLinks\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.mobileSidebarToggle = this.mobileSidebarToggle.bind(this);\n    this.state = {\n      sidebarExists: false\n    };\n  }\n  mobileSidebarToggle(e) {\n    if (this.state.sidebarExists === false) {\n      this.setState({\n        sidebarExists: true\n      });\n    }\n    e.preventDefault();\n    document.documentElement.classList.toggle(\"nav-open\");\n    var node = document.createElement(\"div\");\n    node.id = \"bodyClick\";\n    node.onclick = function() {\n      this.parentElement.removeChild(this);\n      document.documentElement.classList.toggle(\"nav-open\");\n    };\n    document.body.appendChild(node);\n  }\n  render() {\n    return (\n      <Navbar fluid>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <a href=\"#\">{this.props.brandText== \"Dashboard\" ? \"Dashboard\" : this.props.brandText }</a>\n          </Navbar.Brand>\n          <Navbar.Toggle onClick={this.mobileSidebarToggle} />\n        </Navbar.Header>\n        <Navbar.Collapse>\n          <AdminNavbarLinks {...this.props}/>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Dropdown, DropdownButton } from 'react-bootstrap'\nimport AdminNavbarLinks from \"../Navbars/AdminNavbarLinks.jsx\";\n\n// import logo from \"assets/img/reactlogo.png\";\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth,\n\n    };\n  }\n  toggle = (id) => {\n\n    // console.log(this.props.routes)\n    this.props.routes.filter((data) => {\n      if (data.id == id) {\n        data.menu = !data.menu\n      }\n      else {\n        data.menu = false\n      }\n    })\n  }\n\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  updateDimensions() {\n    this.setState({ width: window.innerWidth });\n  }\n  componentDidMount() {\n    // console.log(this.props, 'sidebar');\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n  render() {\n    let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    const sidebarBackground = {\n      backgroundImage: \"url(\" + this.props.image + \")\"\n    };\n    return (\n\n\n      <div\n        id=\"sidebar\"\n        className=\"sidebar\"\n        data-color={this.props.color}\n        data-image={this.props.image}\n      >\n        {this.props.hasImage ? (\n          <div className=\"sidebar-background\" />\n        ) : (\n            null\n          )}\n        <div className=\"logo\">\n          {/* <a\n            href=\"https://www.creative-tim.com?ref=lbd-sidebar\"\n            className=\"simple-text logo-mini\"\n          > */}\n          {/* <div className=\"logo-img\">\n\n            </div> */}\n          {/* </a> */}\n          <span className=\"logo-text simple-text logo-normal\">\n            Hedging Interest Differentials\n\n          </span>\n          {/* <a\n            href=\"https://www.creative-tim.com?ref=lbd-sidebar\"\n            className=\"simple-text logo-normal\"\n          >\n            Dashboard\n          </a> */}\n        </div>\n        <div className=\"sidebar-wrapper\">\n\n          <ul className=\"nav\">\n            {this.state.width <= 991 ? <AdminNavbarLinks {...this.props} /> : null}\n            {this.props.routes.map((prop, key) => {\n              if (!prop.redirect)\n                // console.log(prop.resources, 'resouces');\n                return (\n                  <li\n                    className={\n                      prop.upgrade\n                        ? \"active active-pro\"\n                        : this.activeRoute(prop.layout + prop.path)\n                    }\n\n                    key={key}\n                  >\n                    <NavLink\n                      to={prop.layout + prop.path}\n                      className=\"nav-link\"\n                      activeClassName=\"active\"\n                    >\n                      <i className={prop.icon} />\n                      <p\n                        onClick={() => this.toggle(prop.id)}\n\n                      >{prop.name}\n                        {prop.child !== false && <b style={{ transform: prop.menu ? 'rotate(360deg)' : 'rotate(270deg)' }} className=\"caret\"></b>}\n                      </p>\n\n                    </NavLink>\n                    {prop.menu &&\n                      <ul className='dropdown-menu-cutomize'>\n                        {prop.resources != undefined && prop.resources.map((sub, index) => {\n\n                          if (currentUser[0].role === \"user\" && sub.name !== \"Users\") {\n                            return <NavLink\n                              to={sub.layout + sub.path}\n                              className=\"nav-link\"\n                              activeClassName=\"active\"\n                            >\n                              <li\n\n                                key={index}>\n                                {/* <i className={sub.icon} /> */}\n                                <p >{sub.name}</p>\n                              </li>\n                            </NavLink>\n                          }\n                          else if (currentUser[0].role === \"admin\") {\n                            return <NavLink\n                              to={sub.layout + sub.path}\n                              className=\"nav-link\"\n                              activeClassName=\"active\"\n                              key={index}\n                            >\n                              <li\n\n                               >\n                                {/* <i className={sub.icon} /> */}\n                                <p >{sub.name}</p>\n                              </li>\n                            </NavLink>\n                          }\n\n\n\n                        })}\n\n                      </ul>\n                    }\n\n                  </li>\n                );\n              // return null;\n            })}\n          </ul>\n        </div>\n        {/* <NavLink>\n          <DropdownButton id=\"dropdown-item-button\" title=\"Dropdown button\">\n            <Dropdown.ItemText>Dropdown item text</Dropdown.ItemText>\n            <Dropdown.Item as=\"button\">Action</Dropdown.Item>\n            <Dropdown.Item as=\"button\">Another action</Dropdown.Item>\n            <Dropdown.Item as=\"button\">Something else</Dropdown.Item>\n          </DropdownButton>\n        </NavLink> */}\n\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n\n","\nimport React, { useState, Fragment } from 'react';\nimport { Collapse } from 'reactstrap';\nimport { Row, Col } from \"react-bootstrap\";\nimport NumberFormat from 'react-number-format';\nimport Login from './login';\n\n// import Data from './Data';\n\nconst Closeposition = (props) => {\n    const { allHistoryRecord, fromHistoryOrderInfo, toHistoryOrderInfo, commissionHistoryOrderInfo } = props;\n    const [isOpen2, setIsOpen2] = useState(false);\n    const toggle2 = () => setIsOpen2(!isOpen2);\n\n    // const sumOfTotal = allHistoryRecord.reduce((current, data) => {\n    //     return (data.total + current);\n    // }, 0);\n    let fromSymbols = '';\n    let toSymbols = '';\n    if (allHistoryRecord && Object.entries(allHistoryRecord).length > 0) {\n        fromSymbols = JSON.parse(allHistoryRecord.from_symbols);\n        fromSymbols = (fromSymbols).map(data => data).join(', ');\n        toSymbols = JSON.parse(allHistoryRecord.to_symbols);\n        toSymbols = (toSymbols).map(data => data).join(', ')\n    }\n    let fromsum = 0;\n    let tosum = 0;\n    let commissionSum = 0;\n\n    if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\n        fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\n    }\n    if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\n        tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\n    }\n    if (commissionHistoryOrderInfo && commissionHistoryOrderInfo.length > 0) {\n        commissionSum = (commissionHistoryOrderInfo[0].commission + commissionHistoryOrderInfo[0].swap + commissionHistoryOrderInfo[0].profit);\n    }\n\n    let sumOfTotal = tosum + fromsum;\n\n    let noRecord = ((fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0 && fromHistoryOrderInfo[0].total == null) && (toHistoryOrderInfo && toHistoryOrderInfo.length > 0 && toHistoryOrderInfo[0].total == null)) ? true : false;\n    return (\n        <div>\n            <div className=\"openpositions symbol-box terminal-head-box\" style={{ margin: '20px 0px' }}>\n                <span className=\"p-text\">Realized Profit/Loss</span>\n                {/* <span className=\"icon-style\" onClick={toggle2}>\n                    {!isOpen2 ?\n                        <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n                        :\n                        <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\n                    }\n                </span> */}\n            </div>\n            <div>\n                {/* <Collapse isOpen={isOpen2}> */}\n                <Row>\n                    {/* {Data.tablePage.items.map((item, index) =>\n                            <Col md={6} key={index}>\n                                <div className=\"card\">\n                                    <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\n                                    </div>\n                                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                        <table className=\"table\">\n                                            <tbody>\n                                                <tr><td>{item.closed} </td>\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\n                                                </tr>\n                                                <tr><td>{item.commission} </td>\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\n                                                </tr>\n                                                <tr><td>{item.swap} </td>\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\n                                                </tr>\n                                                <tr><td>{item.total} </td>\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                    </div>\n                                </div>\n                            </Col>\n                        )} */}\n                    {/* {(allHistoryRecord && allHistoryRecord.length>0) && allHistoryRecord.map((item, index) =>\n                            <Fragment>\n\n                            <Col md={6} key={index}>\n                                <div className=\"card\">\n                                    <div className=\"header\">\n                                        <h5 className={item.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{item.account.login}</h5>\n                                        <h6 className={'colorDarkBlue'} style={{fontSize:10}}>({item.account.alias})</h6>\n                                    </div>\n                                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                        <table className=\"table\">\n                                            <tbody>\n                                                <tr><td>Closed P/L </td>\n                                                    <td className=\"td-actions text-right\">$ {item.profit}</td>\n                                                </tr>\n                                                <tr><td>Commission </td>\n                                                    <td className=\"td-actions text-right\">$ {item.commission}</td>\n                                                </tr>\n                                                <tr><td>Swap </td>\n                                                    <td className=\"td-actions text-right\">$ {item.swap}</td>\n                                                </tr>\n                                                <tr><td>Total </td>\n                                                    <td className=\"td-actions text-right\">$ {item.total}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                    </div>\n                                </div>\n                            </Col>\n                            </Fragment>\n                        )}\n                        {(allHistoryRecord && allHistoryRecord.length>0) && \n                            <Row>\n                                <Col md={12}>\n                                    <div>\n                                        <div className=\"total-box\">\n                                            <span className=\"text\">Sum of closed positions</span>\n                                            <span className=\"text\" style={{ float: 'right' }}>$ {sumOfTotal}</span>\n                                        </div>\n                                    </div>\n                                </Col>\n                            </Row>\n                        } */}\n                    {noRecord ? (\n                        <div className=\"text-center\">\n                            No Record Found!\n                        </div>) :\n\n                        <Fragment>\n\n                            {(fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0 && fromHistoryOrderInfo[0].total != null) ? (\n                                <Col md={6}>\n                                    <div className=\"card\">\n                                        <div className=\"header\">\n                                            <h5 className={allHistoryRecord.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{allHistoryRecord.accountFromInfo[0].login}</h5>\n                                            <h6 className={'colorDarkBlue'} style={{ fontSize: 10 }}>({allHistoryRecord.accountFromInfo[0].alias})</h6>\n                                        </div>\n                                        <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                            <table className=\"table\">\n                                                <tbody>\n                                                    <tr>\n                                                        <td className=\"symbolStyle removeBorder\">{fromSymbols}</td>\n                                                        {/* <td>{fromSymbols}</td> */}\n                                                        {/* <td className=\"td-actions text-right\">$ {fromHistoryOrderInfo[0].profit}</td> */}\n                                                    </tr>\n                                                    <tr><td>Closed P/L </td>\n                                                        <td className=\"td-actions text-right\">$ {' '}\n                                                            <NumberFormat value={fromHistoryOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                            {/* {fromHistoryOrderInfo[0].profit} */}\n                                                        </td>\n                                                    </tr>\n                                                    <tr><td>Commission </td>\n                                                        <td className=\"td-actions text-right\">$ {' '}\n                                                            {/* {fromHistoryOrderInfo[0].commission} */}\n                                                            <NumberFormat value={fromHistoryOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                        </td>\n                                                    </tr>\n                                                    <tr><td>Swap </td>\n                                                        <td className=\"td-actions text-right\">$ {' '}\n                                                            <NumberFormat value={fromHistoryOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                            {/* {fromHistoryOrderInfo[0].swap} */}\n                                                        </td>\n                                                    </tr>\n                                                    <tr><td>Total </td>\n                                                        <td className=\"td-actions text-right\">$ {' '}\n                                                            <NumberFormat value={fromHistoryOrderInfo[0].total} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                            {/* {fromHistoryOrderInfo[0].total} */}\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                        </div>\n                                    </div>\n                                </Col>\n                            ) : (\n                                    <Col md={6}>\n                                        <div className=\"card noRecordCol\"> No Record Found</div>\n                                    </Col>\n                                )}\n                            {(toHistoryOrderInfo && toHistoryOrderInfo.length > 0 && toHistoryOrderInfo[0].total != null) ? (\n                                <Col md={6}>\n                                    <div className=\"card\">\n                                        <div className=\"header\">\n                                            <h5 className={allHistoryRecord.id == '1' ? 'acntText color2' : 'acntText color2'}>{allHistoryRecord.accountToInfo[0].login}</h5>\n                                            <h6 className={'color2'} style={{ fontSize: 10 }}>({allHistoryRecord.accountToInfo[0].alias})</h6>\n                                        </div>\n                                        <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                            <table className=\"table\">\n                                                <tbody>\n                                                    <tr>\n                                                        <span className=\"symbolStyle\">{toSymbols}</span>\n\n                                                        {/* <td>{toSymbols}</td> */}\n                                                        {/* <td className=\"td-actions text-right\">$ {fromHistoryOrderInfo[0].profit}</td> */}\n                                                    </tr>\n                                                    <tr><td>Closed P/L </td>\n                                                        <td className=\"td-actions text-right\">$ {' '}\n                                                            <NumberFormat value={toHistoryOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                            {/* {toHistoryOrderInfo[0].profit} */}\n                                                        </td>\n                                                    </tr>\n                                                    <tr><td>Commission </td>\n                                                        <td className=\"td-actions text-right\">$ {' '}\n                                                            {/* {toHistoryOrderInfo[0].commission} */}\n                                                            <NumberFormat value={toHistoryOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                        </td>\n                                                    </tr>\n                                                    <tr><td>Swap </td>\n                                                        <td className=\"td-actions text-right\">$ {' '}\n                                                            {/* {toHistoryOrderInfo[0].swap} */}\n\n\n                                                            {\n                                                                <NumberFormat value={(toHistoryOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                                                // toOpenOrderInfo[0].swap\n                                                            }\n                                                        </td>\n                                                    </tr>\n                                                    <tr><td>Total </td>\n                                                        <td className=\"td-actions text-right\">$ {' '}\n                                                            {/* {toHistoryOrderInfo[0].total} */}\n                                                            <NumberFormat value={toHistoryOrderInfo[0].total} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                        </div>\n                                    </div>\n                                </Col>\n                            ) : (\n                                    <Col md={6}>\n                                        <div className=\"card noRecordCol\"> No Record Found</div>\n                                    </Col>\n                                )\n\n                            }\n                            {(sumOfTotal != 0) &&\n                                <Row>\n                                    <Col md={12} style={{ marginBottom: 20 }}>\n                                        <div>\n                                            <div className=\"total-box\">\n                                                <span className=\"text\">Sum of closed positions</span>\n                                                <span className=\"text\" style={{ float: 'right' }}>$ {' '}\n                                                    <NumberFormat value={sumOfTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                    {/* {sumOfTotal} */}\n                                                </span>\n                                            </div>\n                                        </div>\n                                    </Col>\n                                </Row>\n                            }\n\n\n\n\n\n                        </Fragment>\n                    }\n                </Row>\n                {/* </Collapse> */}\n                {allHistoryRecord.commission_acount_id !== 0 && allHistoryRecord.commission_acount_id !== undefined &&\n                    <Col md={12}>\n\n                        <div className=\"card \">\n                            <div className=\"header ptheader\">\n                                <h4 className=\"text-center\"><b>Commission</b></h4>\n                                <div className=\"row\">\n                                    <div className=\"col-md-12 text-center\">\n\n                                        <h5 className={allHistoryRecord.id == '1' ? 'acntText color2' : 'acntText acadjust color2'}>{allHistoryRecord.accountCommissionInfo !== undefined && allHistoryRecord.accountCommissionInfo[0].login} <span>({allHistoryRecord.accountCommissionInfo !== undefined && allHistoryRecord.accountCommissionInfo[0].alias})</span></h5>\n\n\n                                    </div>\n\n\n                                    <div className=\"col-md-12 total text-center\">\n\n\n                                        <tr>\n                                            <td className=\"td-actions total_comm text-right\">\n\n                                                Total : $ {' '}\n                                                {/* {toHistoryOrderInfo[0].total} */}\n                                                <NumberFormat value={allHistoryRecord.history_info} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                            </td>\n                                        </tr>\n\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Col>}\n            </div>\n        </div >\n\n    );\n}\n\nexport default Closeposition;\n","const Data = {\n \n  tablePage: {\n    items: [\n      {id: 1,lot:'Buy 10 Lot', closed: 'Closed P/L', commission: 'Commission', swap: 'Swap', total: 'Total', price:'$ 1110',textA: 'Account A'},\n      {id: 2, lot:'Sell 10 Lot', closed: 'Closed P/L', commission: 'Commission', swap: 'Swap', total: 'Total', price:'$ 1111', textA: 'Account B'},\n    ]\n  },\n  dashBoardPage: {\n    items: [\n      {id: 1, title: 'Balance', textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 2, title: 'Equity',textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 3, title: 'Margin', textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 4, title: 'Free Margin', textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 5, title: 'Margin %', textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 5, title: 'Unrealized P/L', textA: 'Account A', textB: 'Account B',price:'$ 400'}\n    ],\n  }\n};\n\nexport default Data;\n","import React, { useState, Fragment } from 'react';\nimport { Collapse } from 'reactstrap';\nimport { Row, Col } from \"react-bootstrap\";\nimport NumberFormat from 'react-number-format';\n\nimport Data from './Data';\n\nexport default function Openposition(props) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n  const { allOpenRecord, fromOpenOrderInfo, toOpenOrderInfo, } = props;\n\n\n  let fromsum = 0;\n  let tosum = 0;\n  let fromSymbols = '';\n  let toSymbols = '';\n  if (allOpenRecord && Object.entries(allOpenRecord).length > 0) {\n    fromSymbols = JSON.parse(allOpenRecord.from_symbols);\n    fromSymbols = (fromSymbols).map(data => data).join(', ');\n    toSymbols = JSON.parse(allOpenRecord.to_symbols);\n    toSymbols = (toSymbols).map(data => data).join(', ')\n  }\n  // if(fromOpenOrderInfo && fromOpenOrderInfo.length>0){\n  //   fromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\n  // }\n  // if(toOpenOrderInfo && toOpenOrderInfo.length>0){\n  //   tosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n  // }\n  if (fromOpenOrderInfo && fromOpenOrderInfo.length > 0) {\n    // if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\n    //   fromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\n    // }else{\n    fromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\n    // }\n  }\n  if (toOpenOrderInfo && toOpenOrderInfo.length > 0) {\n    // if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\n    //   tosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap);\n    // }else{\n    tosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n    // }\n    // opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n  }\n\n  let sumOfTotal = tosum + fromsum;\n  let noRecord = ((fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total == null) && (toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total == null)) ? true : false;\n\n  return (\n    <div>\n      <div className=\"openpositions symbol-box terminal-head-box\" style={{ margin: '20px 0px' }}>\n        <span className=\"p-text\">Unrealized Profit/Loss</span>\n        {/* <span className=\"icon-style\" onClick={toggle}>\n          {!isOpen ?\n            <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n            :\n            <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\n          }\n        </span> */}\n      </div>\n\n      <div>\n        {/* <Collapse isOpen={isOpen}> */}\n        <Row>\n\n\n\n          {/* {Data.tablePage.items.map((item, index) =>\n                  <Col md={6} key={index}>\n                    <div className=\"card\">\n                      <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\n                      </div>\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                        <table className=\"table\">\n                          <tbody>\n                            <tr><td>{item.lot} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.commission} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.swap} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.total} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                      </div>\n                    </div>\n                  </Col>\n                )} */}\n\n          {/* {(allOpenRecord && allOpenRecord.length>0) && allOpenRecord.map((item, index) =>\n                    \n                    <Col md={6} key={index}>\n                            <div className=\"card\">\n                            <div className=\"header\">\n                              <h5 className={item.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{item.account.login}</h5>\n                              <h6 style={{fontSize:10}} className={'colorDarkBlue'}>({item.account.alias})</h6>\n                            </div>\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                <table className=\"table\">\n                                <tbody>\n                                    <tr>\n                                        <td>\n                                            {item.order_type ===0 ? 'BUY ' : 'SELL ' } \n                                            {item.lots} {(item.lots>1) ? 'Lots':'Lot'}\n                                        </td>\n                                        <td className=\"td-actions text-right\"> {''}</td>\n                                    </tr>\n                                    <tr><td>Floating P/L </td>\n                                        <td className=\"td-actions text-right\">$ {item.profit}</td>\n                                    </tr>\n                                    <tr><td>Commission </td>\n                                        <td className=\"td-actions text-right\">$ {item.commission}</td>\n                                    </tr>\n                                    <tr><td>Swap </td>\n                                        <td className=\"td-actions text-right\">$ {item.swap}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Total </td>\n                                        <td className=\"td-actions text-right\">\n                                          $ {Math.floor(item.commission + item.swap + item.profit)}\n                                        </td>\n                                    </tr>\n                                </tbody>\n                                </table>\n                            </div>\n                            </div>\n                            </div>\n                        </Col>\n                )} */}\n          {/* {(allOpenRecord && allOpenRecord.length>0) &&\n                    <Row>\n                        <Col md={12}>\n                            <div>\n                            <div className=\"total-box\">\n                                <span className=\"text\">Sum of open positions</span>\n                                <span className=\"text\" style={{ float: 'right' }}>$ {sumOfTotal}</span>\n                            </div>\n                            </div>\n                        </Col>\n                    </Row>\n                } */}\n          {(noRecord) ?\n            <div className=\"text-center\">\n              No Record Found!\n                    </div>\n            :\n            <Fragment>\n              {(fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total !== null) ?\n\n                <Col md={6}>\n                  <div className=\"card\">\n                    <div className=\"header\">\n                      <h5 className={allOpenRecord.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{allOpenRecord.accountFromInfo[0].login}</h5>\n                      <h6 style={{ fontSize: 10 }} className={'colorDarkBlue'}>({allOpenRecord.accountFromInfo[0].alias})</h6>\n                    </div>\n                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                      <table className=\"table\">\n                        <tbody>\n                          <tr>\n                            <span className=\"symbolStyle \">{fromSymbols}</span>\n                          </tr>\n                          {/* Buy 10 Lot  */}\n                          <tr>\n                            <td>\n                              {fromOpenOrderInfo[0].order_type == 0 ? 'BUY ' : 'SELL '}\n                              <NumberFormat\n                                                    value={fromOpenOrderInfo[0].lots}\n                                                    displayType={\"text\"}\n                                                    thousandSeparator={true}\n                                                    decimalScale={2}\n                                                  /> {' '}\n                               {(fromOpenOrderInfo[0].lots > 1) ? 'Lots' : 'Lot'}\n                            </td>\n                            <td className=\"td-actions text-right\"> {''}</td>\n                          </tr>\n                          {/* <tr><td>{(fromOpenOrderInfo[0].lots>1) ? 'Lots':'Lot'}</td>\n                                        <td className=\"td-actions text-right\">{fromOpenOrderInfo[0].lots}</td>\n                                    </tr> */}\n                          <tr><td>Floating P/L </td>\n                            <td className=\"td-actions text-right\">$ {' '}\n                              {/* {fromOpenOrderInfo[0].profit} */}\n                              <NumberFormat value={fromOpenOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                            </td>\n                          </tr>\n                          <tr><td>Commission </td>\n                            <td className=\"td-actions text-right\">$ {' '}\n                              {/* {fromOpenOrderInfo[0].commission} */}\n                              <NumberFormat value={fromOpenOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                            </td>\n                          </tr>\n                          <tr><td>Swap </td>\n                            <td className=\"td-actions text-right\">$ {' '}\n                              {/* {fromOpenOrderInfo[0].swap} */}\n                              {/* {allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length > 0 ?\n                                  <NumberFormat value={allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                  // (allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].swap) \n                                  : */}\n                              <NumberFormat value={fromOpenOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                              {/* // fromOpenOrderInfo[0].swap */}\n                              {/* } */}\n                            </td>\n                          </tr>\n                          <tr>\n                            <td>Total </td>\n                            <td className=\"td-actions text-right\">$ {' '}\n                              {/* $ {Math.floor(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)} */}\n                              {/* {allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length > 0 ?\n                                  <NumberFormat value={(fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} /> */}\n                              {/* // Math.floor(fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap) \n                                  // : */}\n                              <NumberFormat value={(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                              {/* //  Math.floor(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)\n                                // } */}\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                    </div>\n                  </div>\n                </Col>\n                :\n                <Col md={6}>\n                  <div className=\"card noRecordCol\"> No Record Found</div>\n                </Col>\n              }\n\n              {(toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total !== null) ?\n\n                <Col md={6}>\n                  <div className=\"card\">\n                    <div className=\"header\">\n                      <h5 className={allOpenRecord.id == '1' ? 'acntText color2' : 'acntText color2'}>{allOpenRecord.accountToInfo[0].login}</h5>\n                      <h6 style={{ fontSize: 10 }} className={'color2'}>({allOpenRecord.accountToInfo[0].alias})</h6>\n                    </div>\n                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                      <table className=\"table\">\n                        <tbody>\n                          {/* Buy 10 Lot  */}\n                          <tr>\n                            <span className=\"symbolStyle\">{toSymbols}</span>\n                          </tr>\n                          <tr>\n                            <td>\n                              {toOpenOrderInfo[0].order_type == 0 ? 'BUY ' : 'SELL '}\n                              <NumberFormat\n                                                    value={toOpenOrderInfo[0].lots}\n                                                    displayType={\"text\"}\n                                                    thousandSeparator={true}\n                                                    decimalScale={2}\n                                                  /> {' '}\n                               {(toOpenOrderInfo[0].lots > 1) ? 'Lots' : 'Lot'}\n                            </td>\n                            <td className=\"td-actions text-right\"> {''}</td>\n                          </tr>\n                          {/* <tr><td>{(fromOpenOrderInfo[0].lots>1) ? 'Lots':'Lot'}</td>\n                                        <td className=\"td-actions text-right\">{fromOpenOrderInfo[0].lots}</td>\n                                    </tr> */}\n                          <tr><td>Floating P/L </td>\n                            <td className=\"td-actions text-right\">$ {' '}\n                              {/* {toOpenOrderInfo[0].profit} */}\n                              <NumberFormat value={toOpenOrderInfo[0].profit !== null ? toOpenOrderInfo[0].profit : 0} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                            </td>\n                          </tr>\n                          <tr><td>Commission </td>\n                            <td className=\"td-actions text-right\">$ {' '}\n                              {/* {toOpenOrderInfo[0].commission} */}\n                              <NumberFormat value={toOpenOrderInfo[0].commission !== null ? toOpenOrderInfo[0].commission : 0} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                            </td>\n                          </tr>\n                          <tr><td>Swap </td>\n                            <td className=\"td-actions text-right\">$ {' '}\n                              {/* {toOpenOrderInfo[0].swap} */}\n                              {/* {allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length > 0 ?\n                                  // (allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].swap) \n                                  <NumberFormat value={(allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                  : */}\n                              <NumberFormat value={(toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                              {/* // toOpenOrderInfo[0].swap\n                                // } */}\n                            </td>\n\n                          </tr>\n                          <tr>\n                            <td>Total </td>\n                            <td className=\"td-actions text-right\"> $ {' '}\n                              {/* {allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length > 0 ?\n                                  //  Math.floor(toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap)\n                                  <NumberFormat value={(toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                  : */}\n                              <NumberFormat value={(toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                              {/* \n                                  //  Math.floor(toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit)\n                                } */}\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                    </div>\n                  </div>\n                </Col>\n                :\n                <Col md={6}>\n                  <div className=\"card noRecordCol\"> No Record Found</div>\n                </Col>\n              }\n              {\n                sumOfTotal != 0 &&\n                <Row>\n                  <Col md={12}>\n                    <div>\n                      <div className=\"total-box\">\n                        <span className=\"text\">Sum of open positions</span>\n                        <span className=\"text\" style={{ float: 'right' }}>$ {' '}\n                          <NumberFormat value={sumOfTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                          {/* {sumOfTotal} */}\n                        </span>\n                      </div>\n                    </div>\n                  </Col>\n                </Row>\n              }\n            </Fragment>\n          }\n        </Row>\n        {/* </Collapse> */}\n      </div>\n    </div>\n  )\n}\n","import config from './constant/config';\n\nconst axios = require('axios');\n\n\nconst myInitObject = {}\nexport default myInitObject;\n\n\nexport const api = () => {\n    let token = JSON.parse(localStorage.getItem(\"accessToken\"));\n    // Object.keys(myInitObject).forEach(key=> myInitObject[key]=null)\n    // console.log(token, '-----------------+++++');\n    axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade', { headers: { 'x-access-token': token } })\n        .then(function (response) {\n            if (response.status == 200) {\n                myInitObject.fetchAllHistoryTrade = response.data\n                myInitObject.responsHT = true\n            }\n        })\n\n    axios.get(config.baseurl + '/accounts/fetchAllOpenTrade', { headers: { 'x-access-token': token } })\n        .then(function (response) {\n            if (response.status == 200) {\n                myInitObject.fetchAllOpenTrade = response.data\n                myInitObject.responsOT = true\n            }\n        })\n\n    axios.get(config.baseurl + '/accounts/fetchAllAccounts')\n        .then(function (response) {\n            if (response.status == 200) {\n                myInitObject.fetchAllAccounts = response.data\n                myInitObject.responsAC = true\n            }\n        });\n\n    axios.get(config.baseurl + '/filter/fetchActivefilterdata', { headers: { 'x-access-token': token } })\n        .then(function (response) {\n            if (response.status == 200) {\n                myInitObject.fetchActivefilterdata = response.data\n                myInitObject.responsAF = true\n            }\n        });\n\n    axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime', { headers: { 'x-access-token': token } })\n        .then(function (response) {\n            if (response.status == 200) {\n                myInitObject.fetchLastUpdatedTime = response.data\n                myInitObject.responsLUT = true\n            }\n        });\n\n    axios.get(config.baseurl + '/accounts/fetchStatusData', { headers: { 'x-access-token': token } })\n        .then(function (response) {\n            if (response.status == 200) {\n                myInitObject.fetchStatusData = response.data\n                myInitObject.responsSD = true\n            }\n        });\n\n    axios.get(config.baseurl + '/profilepositions/calculatingOpenTrade', { headers: { 'x-access-token': token } })\n        .then(function (response) {\n            if (response.status == 200) {\n                myInitObject.calculatingOpenTrade = response.data\n                myInitObject.responsCOT = true\n\n                axios.get(config.baseurl + '/profilepositions/calculatingHistoryTrade', { headers: { 'x-access-token': token } })\n                    .then(function (response) {\n                        if (response.status == 200) {\n                            myInitObject.calculatingHistoryTrade = response.data\n                            myInitObject.responsCHT = true\n\n                            axios.get(config.baseurl + '/profilepositions/calculatingCommission', { headers: { 'x-access-token': token } })\n                                .then(function (response) {\n                                    if (response.status == 200) {\n                                        myInitObject.calculatingCommission = response.data\n                                        myInitObject.responsCC = true\n                                    }\n                                })\n                        }\n                    })\n            }\n        })\n    axios.get(config.baseurl + '/accounts/fetchAllSymbol')\n        .then(function (response) {\n            if (response.status == 200) {\n                myInitObject.fetchAllSymbol = response.data\n                myInitObject.responsAS = true\n            }\n        })\n    axios.get(config.baseurl + '/filter/fetchdailyswaps')\n    .then(function (response) {\n        if (response.status == 200) {\n            myInitObject.fetchdailyswaps = response.data\n            myInitObject.responsDS = true\n        }\n    })\n    axios.get(config.baseurl + '/users/allAccounts?page=1')\n        .then(function (response) {\n            if (response.status == 200) {\n                myInitObject.usersAllAccounts = response.data\n                myInitObject.responsAAC = true\n            }\n        })\n\n    axios.get(config.baseurl + '/filter/fetchfilterdata?page=1', { headers: { 'x-access-token': token } })\n        .then(function (response) {\n            if (response.status == 200) {\n                myInitObject.fetchfilterdata = response.data\n                myInitObject.responsFF = true\n            }\n        })\n}\n","import React, { Component } from \"react\";\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\n// import SweetAlert from 'react-bootstrap-sweetalert';\nimport swal from \"sweetalert\";\nimport config from \"../constant/config.js\";\nimport ReactPaginate from \"react-paginate\";\nimport myInitObject from \"../api\";\nconst axios = require(\"axios\");\n\nlet intervalSet;\nlet timerWaitInterval;\nlet timerWait = 100;\nclass Innerlogin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loginForm: false,\n      setShow: false,\n      show: true,\n      login: \"\",\n      password: \"\",\n      broker: \"\",\n      alias: \"\",\n      is_server: false,\n      alert: null,\n      persons: [],\n      shwPwd: false,\n      shwPwd: false,\n      shwLogin: false,\n      shwbroker: false,\n      accountlist: [],\n      count: \"\",\n      pages: \"\",\n      page: 1,\n      editForm: false,\n      detailForm: false,\n      editData: [],\n      edituser: \"\",\n      editserver: \"\",\n      editpass:\"\",\n      editalias: \"\",\n      editstatus: \"\",\n      id: \"\",\n      deleteData: [],\n      showDelete: false,\n      // tryAgainConnection: false,\n      currentAddLogin: null,\n      currentAddBroker: null,\n      currentAddAlias: null,\n      timerShow: false,\n      closebtn: true,\n      dateTime: \"\",\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onUpdate = this.onUpdate.bind(this);\n  }\n  // delete alert\n  // deleteThisGoal() {\n  //     const getAlert = () => (\n  //         <SweetAlert\n  //             success\n  //             title=\"Woot!\"\n  //             onConfirm={() => this.hideAlert()}\n  //         >\n  //             Hello world!\n  //       </SweetAlert>\n  //     );\n\n  //     this.setState({\n  //         alert: getAlert()\n  //     });\n  // }\n  fectheAllAccount() {\n    let self = this;\n    axios\n      .get(config.baseurl + `/users/allAccounts?page=${self.state.page}`)\n      .then(function (response) {\n        if (response.status == 200) {\n          self.setState({\n            accountlist: response.data.rows,\n            count: response.data.count,\n            pages: response.data.pages,\n          });\n        }\n      });\n    // console.log(response.status,\"accountlist\");\n  }\n\n  handlePageClick = (data) => {\n    this.setState({ page: data.selected + 1 }, () => {\n      this.fectheAllAccount(this.state.page);\n    });\n  };\n  changeServer = (e) => {\n    this.setState({ is_server: !this.state.is_server }, () => {});\n    console.log(this.state.is_server, \"ooooo\");\n  };\n  onChange(e) {\n    this.setState({ error: \"\" });\n    if (e.target.name === \"login\") {\n      const re = /^[0-9\\b]+$/;\n      if (e.target.value === \"\" || re.test(e.target.value)) {\n        this.setState({ [e.target.name]: e.target.value });\n      } else if (e.target.value !== re) {\n        this.setState({ error: \"alphabet\" });\n      }\n    } else {\n      this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n  }\n\n  checkUserConnected = (login, broker) => {\n    let self = this;\n    axios\n      .post(config.baseurl + \"/users/checkUserConnected\", {\n        login: login,\n        broker: broker,\n      })\n      .then(function (response) {\n        if (response.status == 200) {\n          if (response.data.connected) {\n            self.setState({\n              currentAddLogin: null,\n              currentAddBroker: null,\n              currentAddAlias: null,\n            });\n            clearInterval(intervalSet);\n            clearInterval(timerWaitInterval);\n            self.setState({ timerShow: false });\n\n            timerWait = 100;\n            // self.setState({ tryAgainConnection: false });\n            self.setState({ loginForm: false });\n            self.handleClose();\n            self.fectheAllAccount();\n            // swal({\n            //     text: \"Connected\",\n            //     timer: 2000,\n            //     button: false\n            // })\n          }\n        } else {\n        }\n      });\n  };\n\n  setIntervalCustom = () => {\n    let self = this;\n    var name = \"Authorization Process Failed\";\n    var content = document.createElement(\"div\");\n    content.innerHTML = \" <strong>\" + name + \"</strong>\";\n\n    timerWaitInterval = setInterval(function () {\n      timerWait--;\n      if (timerWait <= 0) {\n        self.setState({\n          currentAddLogin: null,\n          currentAddBroker: null,\n          currentAddAlias: null,\n        });\n        clearInterval(intervalSet);\n        clearInterval(timerWaitInterval);\n        self.setState({ timerShow: false });\n        self.setState({ loginForm: false });\n        self.setState({ closebtn: true });\n        timerWait = 100;\n        swal({\n          content: content,\n          timer: 2000,\n          button: false,\n        });\n      } else {\n        self.setState({ timerShow: true });\n      }\n    }, 1000);\n  };\n\n  onSubmit(e) {\n    e.preventDefault();\n    const userdetail = {\n      login: this.state.login,\n      password: this.state.password,\n      broker: this.state.broker,\n      alias: this.state.alias,\n      is_server: this.state.is_server ? 1 : 0,\n    };\n    if (this.state.login == \"\") {\n      this.setState({ error: \"login\" });\n    } else if (this.state.password == \"\") {\n      this.setState({ error: \"password\" });\n    } else if (this.state.broker == \"\") {\n      this.setState({ error: \"broker\" });\n    } else {\n      this.setState({ error: \"\" });\n    }\n    if (\n      this.state.login !== \"\" &&\n      this.state.password !== \"\" &&\n      this.state.broker !== \"\"\n    ) {\n      // {\n      //     swal({\n      //         text: \"User Already Connected\",\n      //         timer: 2000,\n      //         button: false\n      //     })\n      // }\n      let self = this;\n      self.setState({ closebtn: false });\n      axios\n        .post(config.baseurl + \"/users/addUser\", userdetail)\n        .then(function (response) {\n          if (response.data.status === true) {\n            self.setIntervalCustom();\n            self.fectheAllAccount();\n            self.setState({\n              currentAddLogin: userdetail.login,\n              currentAddBroker: userdetail.broker,\n              currentAddAlias: userdetail.alias,\n            });\n            intervalSet = setInterval(function () {\n              self.checkUserConnected(userdetail.login, userdetail.broker);\n            }, 5000);\n          }\n          if (response.data.status == 202) {\n            swal({\n              text: \"User doesn't exist\",\n              timer: 2000,\n              button: false,\n            });\n          }\n          if (response.data.status == \"500\") {\n            swal({\n              text: \"User Already Connected!\",\n              timer: 2000,\n              button: false,\n            });\n            self.setState({ closebtn: true });\n          } else if (response.status == 201) {\n            swal({\n              title: \"Done!\",\n              text: response.data,\n              // icon: \"{response.status == 200 ? 'warning ':'success'}\",\n              timer: 2000,\n              button: false,\n            });\n          }\n        })\n        .catch(function (error) {\n          self.handleClose();\n        });\n\n      /////////////////// redirect to dashboard\n      // login(user).then(res => {\n      //     if (res) {\n      //         this.props.history.push(`\\profile`)\n      //     }\n      // })\n    }\n  }\n  onUpdate(e) {\n    e.preventDefault();\n    const userdetail = {\n      id: this.state.id,\n      user: this.state.edituser,\n      broker: this.state.editserver,\n      alias: this.state.editalias,\n      password: this.state.editpass,\n      is_server: this.state.is_server ? 1 : 0,\n    };\n    let self = this;\n    axios\n      .post(config.baseurl + \"/users/updateuser\", userdetail)\n      .then(function (response) {\n        if (response.status == 200) {\n          // self.setState({ accountlist: response.data.rows })\n          self.fectheAllAccount();\n          self.handleCloseEdit();\n        }\n      })\n      .catch(function (error) {});\n  }\n  // checkValidUser = ()=> {\n  //     console.log(this.state,'loginnnnnnnnnnnnnnnnnnnnnnnn')\n  //     const userdetail = {\n  //         login: this.state.login,\n  //         password: this.state.password,\n  //         broker: this.state.broker,\n  //         alias: this.state.alias\n  //     }\n  //     axios.get(config.baseurl + '/accounts/matchUser',userdetail)\n  //     .then(function (response) {\n\n  //         if (response.status == 200) {\n  //             // alert(response.data)\n  //             swal({\n  //                 title: \"Done!\",\n  //                 text: response.data,\n  //                 // icon: \"{response.status == 200 ? 'warning ':'success'}\",\n  //                 timer: 2000,\n  //                 button: false\n  //             })\n\n  //         }\n  //         // console.log(response);\n  //     })\n  //     .catch(function (error) {\n  //         console.log(error);\n  //     });\n  // }\n  toogle = () => {\n    this.setState({ loginForm: !this.state.loginForm });\n    this.setState({\n      login: \"\",\n      password: \"\",\n      broker: \"\",\n      alias: \"\",\n      is_server: false,\n    });\n  };\n\n  handleClose = () => {\n    this.setState({ loginForm: false });\n  };\n  handleCloseEdit = () => {\n    this.setState({ editForm: false });\n  };\n  handleCloseDetail = () => {\n    this.setState({ detailForm: false });\n  };\n  handleShow = () => {\n    this.setState({ setShow: true });\n  };\n\n  componentDidMount() {\n    this.fectheAllAccount();\n    setInterval(() => {\n      if (myInitObject.responsLUT === undefined) {\n        console.log(\"no data\");\n      } else {\n        this.setState({\n          //last update time\n          dateTime: myInitObject.fetchLastUpdatedTime.filteredInfoTime,\n        });\n      }\n    }, 1000);\n  }\n  createTr = () => {\n    return (\n      this.state.accountlist.length > 0 &&\n      this.state.accountlist.map((item, index) => {\n        return (\n          <tr key={index}>\n            <th scope=\"row\">{index + 1}</th>\n            <td>{item.login}</td>\n            <td>{item.broker}</td>\n            <td>{item.alias}</td>\n            <td style={{ fontWeight: 600 }}>\n              {item.launched == 1 ? \"Connected\" : \"Disconnected\"}\n            </td>\n            <td>\n              <a href=\"\" onClick={(e) => this.viewFilter(e, item)}>\n                <i className=\"fa fa-eye facolor\" aria-hidden=\"true\"></i>\n              </a>\n              {JSON.parse(localStorage.getItem(\"currentUser\"))[0].role !==\n                \"user\" && (\n                <>\n                  <a href=\"\" onClick={(e) => this.editFilter(e, item)}>\n                    <i\n                      className=\"fa fa-pencil-square-o facolor\"\n                      aria-hidden=\"true\"\n                    ></i>\n                  </a>\n                  <a href=\"\" onClick={(e) => this.deleteFilter(e, item)}>\n                    <i\n                      className=\"pointer fa fa-trash facolor\"\n                      aria-hidden=\"true\"\n                    ></i>\n                  </a>\n                </>\n              )}\n              {/* <a href=\"\" onClick={(e)=> this.deleteFilter(e,item)}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></a> */}\n            </td>\n          </tr>\n        );\n      })\n    );\n  };\n\n  deleteFilter(e, data) {\n    e.preventDefault();\n    this.setState({ deleteData: data, showDelete: true });\n  }\n  deletepopupClick(e) {\n    e.preventDefault();\n    let Data = {\n      id: this.state.deleteData.id,\n    };\n    let self = this;\n    axios\n      .post(config.baseurl + \"/users/deleteuser\", Data)\n      .then(function (response) {\n        if (response.status == 200) {\n          self.setState({ showDelete: false });\n          self.fectheAllAccount();\n        }\n      });\n  }\n  deletepopupclose(e) {\n    e.preventDefault();\n    this.setState({ showDelete: false });\n  }\n  editFilter(e, data) {\n    e.preventDefault();\n    this.setState({\n      editForm: true,\n      editData: data,\n      id: data.id,\n      edituser: data.login,\n      editserver: data.broker,\n      editalias: data.alias,\n    });\n  }\n  editAlias(e) {\n    this.setState({ editalias: e.target.value });\n  }\n  editPass(e) {\n    this.setState({ editpass: e.target.value });\n  }\n  viewFilter(e, data) {\n    e.preventDefault();\n    this.setState({\n      detailForm: true,\n      edituser: data.login,\n      editserver: data.broker,\n      editalias: data.alias,\n      editstatus: data.status,\n    });\n  }\n  render() {\n    let val = this.state.page;\n    return (\n      <div className=\"content\">\n        <Row>\n          <div className=\"lastUpdate\">\n            <span> Last Updated : </span>\n            {this.state.dateTime}(UTC){\" \"}\n          </div>\n        </Row>\n        <Grid fluid>\n          <Row>\n            <Col md={12} sm={6}>\n              <div className=\"terminal-box\">\n                <span className=\"terminal-text\">Terminal Accounts</span>\n                {/* <div style={{ padding: '20px' }}>\n                                    <a\n                                        onClick={() => this.deleteThisGoal()}\n                                        className='btn btn-danger'\n                                    >\n                                        <i className=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete Goal\n                                     </a>\n                                    {this.state.alert}\n                                </div> */}\n              </div>\n              {JSON.parse(localStorage.getItem(\"currentUser\"))[0].role !==\n                \"user\" && (\n                <button className=\"pull-right add-button\" onClick={this.toogle}>\n                  Add New\n                </button>\n              )}\n\n              {this.state.loginForm && (\n                <Modal\n                  show={this.state.show}\n                  onHide={\n                    this.state.closebtn\n                      ? this.handleClose\n                      : () => console.log(\"error\")\n                  }\n                >\n                  {/* <Modal.Header closeButton>\n                                        <Modal.Title>Log In</Modal.Title>\n                                    </Modal.Header> */}\n                  <Modal.Body>\n                    <div className=\"form-box\">\n                      <Modal.Header\n                        closeButton={this.state.closebtn ? true : false}\n                      >\n                        <Modal.Title className=\"text-center\">\n                          <b>Log In</b>\n                        </Modal.Title>\n                      </Modal.Header>\n                      <form\n                        style={{ marginTop: \"20px\" }}\n                        onSubmit={this.onSubmit}\n                      >\n                        <label>User Name</label>\n                        <input\n                          type=\"text\"\n                          className=\"Itext labelSet \"\n                          placeholder=\"Enter Username\"\n                          name=\"login\"\n                          value={this.state.login}\n                          onChange={this.onChange}\n                          disabled={this.state.currentAddLogin ? true : false}\n                          // onKeyUp={this.checkValidUser}\n                        ></input>\n\n                        {this.state.error == \"login\" && (\n                          <span style={{ color: \"red\", fontSize: \"13px\" }}>\n                            Please enter Username{\" \"}\n                          </span>\n                        )}\n\n                        {this.state.error == \"alphabet\" && (\n                          <span style={{ color: \"red\", fontSize: \"13px\" }}>\n                            \"Invalid format. login should contain only digits.\"\n                          </span>\n                        )}\n                        <br></br>\n                        <label className=\"labeAdjust\">Password</label>\n                        <input\n                          className=\"Itext labelSet\"\n                          placeholder=\"Password\"\n                          name=\"password\"\n                          type=\"password\"\n                          value={this.state.password}\n                          onChange={this.onChange}\n                          disabled={this.state.currentAddLogin ? true : false}\n                        ></input>\n                        {this.state.error == \"password\" && (\n                          <span style={{ color: \"red\", fontSize: \"13px\" }}>\n                            Please enter Password{\" \"}\n                          </span>\n                        )}\n                        <br></br>\n                        <label className=\"labeAdjust\">Server</label>\n                        <input\n                          className=\"Itext labelSet\"\n                          name=\"broker\"\n                          placeholder=\"Server\"\n                          value={this.state.broker}\n                          onChange={this.onChange}\n                          disabled={this.state.currentAddBroker ? true : false}\n                        ></input>\n                        {this.state.error == \"broker\" && (\n                          <span style={{ color: \"red\", fontSize: \"13px\" }}>\n                            Please enter Server{\" \"}\n                          </span>\n                        )}\n                        <br></br>\n                        <label className=\"labeAdjust\">Alias</label>\n                        <input\n                          className=\"Itext labelSet\"\n                          placeholder=\"Alias\"\n                          value={this.state.alias}\n                          onChange={this.onChange}\n                          name=\"alias\"\n                          disabled={this.state.currentAddAlias ? true : false}\n                        ></input>\n                        <br></br>\n                        <div className=\"chceckbox\">\n                          <label className=\"checkbox-inline\">\n                            <input\n                              type=\"checkbox\"\n                              defaultChecked={this.state.is_server}\n                              onChange={(e) => this.changeServer(e)}\n                            />\n                            <b>Is Server</b>\n                          </label>\n                        </div>\n                        {this.state.timerShow && (\n                          <p>\n                            Connecting to server... {timerWait} seconds remains\n                          </p>\n                        )}\n                        <div className=\" topadjust clearfix\">\n                          {/* {this.state.tryAgainConnection === false ? */}\n                          {/* ( */}\n                          {this.state.timerShow == false && (\n                            <button\n                              type=\"submit\"\n                              className=\"save\"\n                              className={\n                                !this.state.login ||\n                                !this.state.password ||\n                                !this.state.broker\n                                  ? \"loginButton\"\n                                  : \"loginButton save2 save1\"\n                              }\n                            >\n                              Submit\n                            </button>\n                          )}\n                          {/* ) */}\n                          {/* //     :\n                                                    //     (this.state.timerShow == false && <div ></div>)\n                                                    // } */}\n                        </div>\n                      </form>\n                    </div>\n                  </Modal.Body>\n                  {/* <Modal.Footer>\n                                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                                            Close\n                                  </Button>\n                                        \n                                    </Modal.Footer> */}\n                </Modal>\n              )}\n            </Col>\n          </Row>\n          <div style={{ background: \"#ffffff\" }}>\n            <Row>\n              <Col md={12}>\n                <div style={{ padding: \"10px\" }}>\n                  <table className=\"table table-striped table-bordered\">\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">Sr.No.</th>\n                        <th scope=\"col\">User Name</th>\n                        <th scope=\"col\">Server</th>\n                        <th scope=\"col\">Alias</th>\n                        <th scope=\"col\">Status</th>\n                        <th scope=\"col\">Action</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {/* {this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => { */}\n                      {/* // console.log(\"hhhhhhhhhhh\") */}\n                      {this.createTr()}\n                      {/* })} */}\n                      {/* <tr>\n                                                <th scope=\"row\">2</th>\n                                                <td>Jacob</td>\n                                                <td>Thornton</td>\n                                                <td>5.1.2.9</td>\n                                                <td>Connected</td>\n                                            </tr>\n                                            <tr>\n                                                <th scope=\"row\">3</th>\n                                                <td>Larry</td>\n                                                <td>the Bird</td>\n                                                <td>ab@123</td>\n                                                <td>Connected</td>\n                                            </tr> */}\n                    </tbody>\n                  </table>\n                  <ReactPaginate\n                    previousLabel={\"prev\"}\n                    nextLabel={\"next\"}\n                    breakLabel={\"...\"}\n                    pageCount={this.state.pages}\n                    marginPagesDisplayed={9}\n                    pageRangeDisplayed={9}\n                    onPageChange={(e) => this.handlePageClick(e)}\n                    containerClassName={\"pagination\"}\n                    subContainerClassName={\"pages pagination\"}\n                    activeClassName={\"active\"}\n                  />\n                </div>\n              </Col>\n              <div className=\"centerbtn\"></div>\n            </Row>\n          </div>\n          {this.state.showDelete && (\n            <div className=\"delete_popup\">\n              <h3>Are you sure ?</h3>\n              <span\n                className=\"pointer dltbtn\"\n                onClick={(e) => this.deletepopupClick(e)}\n              >\n                Delete\n              </span>\n              <span\n                className=\"pointer closebtn\"\n                onClick={(e) => this.deletepopupclose(e)}\n              >\n                Close\n              </span>\n            </div>\n          )}\n        </Grid>\n\n        {this.state.editForm && (\n          <Modal show={this.state.show} onHide={this.handleCloseEdit}>\n            {/* <Modal.Header closeButton>\n                                        <Modal.Title>Log In</Modal.Title>\n                                    </Modal.Header> */}\n            <Modal.Body>\n              <div className=\"form-box\">\n                <Modal.Header closeButton>\n                  <Modal.Title className=\"text-center\">\n                    <b>Edit</b>\n                  </Modal.Title>\n                </Modal.Header>\n                <form style={{ marginTop: \"20px\" }} onSubmit={this.onUpdate}>\n                  <label>User</label>\n                  <input\n                    className=\"Itext\"\n                    disabled\n                    name=\"broker\"\n                    placeholder=\"Server\"\n                    value={this.state.edituser}\n                  ></input>\n                  <label className=\"labeAdjust\">Password</label>\n                  <input\n                    className=\"Itext labelSet\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    type=\"password\"\n                    value={this.state.editpass}\n                    onChange={(e) => this.editPass(e)}\n                  ></input>\n                  <label>Server</label>\n                  <input\n                    className=\"Itext\"\n                    disabled\n                    name=\"broker\"\n                    placeholder=\"Server\"\n                    value={this.state.editserver}\n                  ></input>\n                  <label>Alias</label>\n                  <input\n                    className=\"Itext\"\n                    placeholder=\"Alias\"\n                    value={this.state.editalias}\n                    name=\"alias\"\n                    onChange={(e) => this.editAlias(e)}\n                  ></input>\n                  <div className=\"clearfix\">\n                    <button type=\"submit\" className=\"save\">\n                      Update\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </Modal.Body>\n            {/* <Modal.Footer>\n                                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                                            Close\n                                  </Button>\n                                        \n                                    </Modal.Footer> */}\n          </Modal>\n        )}\n\n        {this.state.detailForm && (\n          <Modal show={this.state.show} onHide={this.handleCloseDetail}>\n            {/* <Modal.Header closeButton>\n                                        <Modal.Title>Log In</Modal.Title>\n                                    </Modal.Header> */}\n            <Modal.Body>\n              <div className=\"form-box\">\n                <Modal.Header closeButton>\n                  <Modal.Title className=\"text-center\">\n                    <b>Details</b>\n                  </Modal.Title>\n                </Modal.Header>\n                <div className=\"detail_div\">\n                  <table>\n                    <tr>\n                      <td>\n                        <label>User Name</label>\n                      </td>\n                      <td>\n                        <label>{this.state.edituser}</label>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        <label>Server</label>\n                      </td>\n                      <td>\n                        <label>{this.state.editserver}</label>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        <label>Alias</label>\n                      </td>\n                      <td>\n                        <label>{this.state.editalias}</label>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        <label>Status</label>\n                      </td>\n                      <td>\n                        <label>\n                          {this.state.editstatus == 1\n                            ? \"Connected\"\n                            : \"Disconnected\"}\n                        </label>\n                      </td>\n                    </tr>\n                  </table>\n                </div>\n              </div>\n            </Modal.Body>\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Innerlogin;\n","import React, { Component } from 'react';\nimport { Collapse } from 'reactstrap';\nimport Select from 'react-select';\nimport { Grid, Row, Col } from \"react-bootstrap\";\n// import Data from './Data';\nimport NumberFormat from 'react-number-format';\nimport Closeposition from 'views/Closeposition';\nimport Openposition from 'views/Openposition';\n\n// import config from '../constant/config.js';\nimport config from '../constant/config.js';\nimport myInitObject from '../api'\nconst axios = require('axios');\n\n// import Card from \"components/Card/Card.jsx\";\n// import { thArray, tdArray } from \"variables/Variables.jsx\";\n\nclass TableList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isOpen2: false,\n      allSymbols: [],\n      selectedOption: null,\n      allHistoryRecord: [],\n      allOpenRecord: [],\n      fromHistoryOrderInfo: [],\n      toHistoryOrderInfo: [],\n      commissionHistoryOrderInfo: [],\n      fromOpenOrderInfo: [],\n      toOpenOrderInfo: [],\n      filterlist: [],\n      allSymbols: [],\n      symbolsObj: [],\n      activeProfileName: ''\n    }\n\n  }\n  // toggle = () => {\n  //   this.setState({ isOpen: !this.state.isOpen })\n  // }\n  // componentWillMount() {\n  //   let self = this;\n  // axios.get(config.baseurl + '/accounts/fetchAllSymbol')\n  // .then(function (response) {\n  //   if (response.status == 200) {\n  //     self.setState({ allSymbols: response.data.rows })\n  //   }\n  // })\n\n  // axios.get(config.baseurl + '/filter/fetchfilterdata')\n  // .then(function (response) {\n  //   if (response.status == 200) {\n  //     self.setState({ filterlist: response.data.rows })\n  //   }\n  // })\n\n  // axios.get(config.baseurl + '/filter/fetchActivefilterdata')\n  // .then(function (response) {\n  //   if (response.status == 200) {\n  //     if(response.data.rows && response.data.rows.length>0){\n  //       // let symbolsObj = (response.data.rows[0].symbols).map(data => { return ({value:data, label:data})})\n  //         self.setState({ filterlist: response.data.rows, allSymbols: response.data.rows[0].symbols, \n  //         // selectedOption:symbolsObj\n  //        })\n  //     }\n  //   }\n  // });\n  // }\n\n  componentDidMount() {\n    setInterval(() => {\n      if((myInitObject.responsHT &&\n        myInitObject.responsOT &&\n        myInitObject.responsAC ) === undefined){\n        // console.log('no data');\n      }else{ \n        this.setState({\n          //history trade\n          allHistoryRecord: myInitObject.fetchAllHistoryTrade.rows,\n          fromHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.fromHistoryOrderInfo,\n          toHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.toHistoryOrderInfo,\n          //open trade\n          allOpenRecord: myInitObject.fetchAllOpenTrade.rows,\n          fromOpenOrderInfo: myInitObject.fetchAllOpenTrade.fromOpenOrderInfo,\n          toOpenOrderInfo: myInitObject.fetchAllOpenTrade.toOpenOrderInfo,\n          //active filter data\n          filterlist: myInitObject.fetchActivefilterdata.rows,\n          activeProfileName: myInitObject.fetchActivefilterdata.rows[0].profile_name,\n        },() =>{\n          this.setState({ errorMassege:this.state.filterlist.length == 0 ?  true : false,})\n        })\n      }}, 1000)\n    // let self = this;\n    // axios.get(config.baseurl + '/filter/fetchActivefilterdata')\n    //   .then(function (response) {\n    //     if (response.status == 200) {\n    //       console.log(response, \"respp----------------->\")\n    //       self.setState({ filterlist: response.data.rows, })\n    //       if (self.state.filterlist.length == 0) {\n    //         self.setState({ errorMassege: true, })\n    //       }\n    //       else {\n    //         self.setState({ activeProfileName: response.data.rows[0].profile_name })\n    //       }\n    //     }\n    //   });\n    // axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\n    //   .then(function (response) {\n    //     // console.log(response.data, 'response.data his')\n    //     if (response.status == 200) {\n    //       // self.setState({ allHistoryRecord: response.data.rows })\n    //       self.setState({\n    //         allHistoryRecord: response.data.rows,\n    //         fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,\n    //         toHistoryOrderInfo: response.data.toHistoryOrderInfo,\n    //         commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\n    //       })\n    //     }\n    //   })\n    // // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\n    // // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\n    // axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\n    //   .then(function (response) {\n    //     if (response.status == 200) {\n\n    //       // self.setState({ allOpenRecord: response.data.rows })\n    //       self.setState({\n    //         allOpenRecord: response.data.rows,\n    //         fromOpenOrderInfo: response.data.fromOpenOrderInfo,\n    //         toOpenOrderInfo: response.data.toOpenOrderInfo\n    //       })\n    //     }\n    //   })\n  }\n\n\n\n\n  fetchDataAccordingSymbols = (symbol) => {\n    let self = this;\n    let { startdateFrom, startdateTo, enddateFrom, enddateTo, to_account_id, from_account_id } = this.state.filterlist[0];\n\n    let postData = { \"to_account_id\": to_account_id, \"from_account_id\": from_account_id, \"startdateFrom\": startdateFrom, \"startdateTo\": startdateTo, \"enddateFrom\": enddateFrom, \"enddateTo\": enddateTo, \"symbol\": symbol }\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolHistory', {'symbol':symbol})\n\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolHistory', postData)\n    axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\n      .then(function (response) {\n        // console.log(response.data, 'response.data his')\n        if (response.status == 200) {\n          // self.setState({ allHistoryRecord: response.data.rows })\n          self.setState({\n            allHistoryRecord: response.data.rows,\n            fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,\n            toHistoryOrderInfo: response.data.toHistoryOrderInfo,\n            commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\n\n          })\n        }\n      })\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\n    axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\n      .then(function (response) {\n        if (response.status == 200) {\n          // console.log(response.data, 'response.data open')\n\n          // self.setState({ allOpenRecord: response.data.rows })\n          self.setState({\n            allOpenRecord: response.data.rows,\n            fromOpenOrderInfo: response.data.fromOpenOrderInfo,\n            toOpenOrderInfo: response.data.toOpenOrderInfo\n          })\n        }\n      })\n  }\n\n  handleChange = selectedOption => {\n    this.setState({ selectedOption });\n    this.fetchDataAccordingSymbols(selectedOption.value);\n  };\n\n  renderSymbols = () => {\n    const { selectedOption, allSymbols } = this.state;\n    // let options = allSymbols.map(data => {\n    //   return {value:data.name, label:data.name};\n    // })\n    let options = allSymbols.map(data => {\n      return { value: data, label: data };\n    });\n\n    return (\n      <Select\n        placeholder=\"Select Symbol...\"\n        className=\"S-text\"\n        // isMulti\n        value={selectedOption}\n        onChange={this.handleChange}\n        options={options}\n      />\n    )\n  }\n  // toggle2 = () => {\n  //   this.setState({ isOpen2: !this.state.isOpen2 })\n  // };\n  render() {\n    const { activeProfileName, allHistoryRecord, allOpenRecord, selectedOption, toOpenOrderInfo, fromOpenOrderInfo, fromHistoryOrderInfo, commissionHistoryOrderInfo, toHistoryOrderInfo } = this.state;\n    //   const sumOfOpenTotal = allOpenRecord.reduce((current, data) => {\n    //     return (Math.floor(data.commission + data.swap + data.profit+ current));\n    // }, 0);\n\n    //   const sumOfHistoryTotal = allHistoryRecord.reduce((current, data) => {\n    //     return (data.profit + current);\n    // }, 0);\n    let uniqueSymbols = \"\";\n    if (allOpenRecord && Object.entries(allOpenRecord).length > 0) {\n      let fromSymbols = JSON.parse(allOpenRecord.from_symbols);\n      // fromSymbols = (fromSymbols).map(data => data).join(', ');\n      let toSymbols = JSON.parse(allOpenRecord.to_symbols);\n      let combineSymbols = fromSymbols.concat(toSymbols);\n      uniqueSymbols = combineSymbols.filter((item, i, ar) => ar.indexOf(item) === i);\n      uniqueSymbols = (uniqueSymbols).map(data => data).join(', ')\n    }\n    let fromsum = 0;\n    let tosum = 0;\n    // if(fromHistoryOrderInfo && commissionHistoryOrderInfo && fromHistoryOrderInfo.length>0){\n    if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\n      fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\n    }\n\n    if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\n      tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\n    }\n\n    let sumOfHistoryTotal = tosum + fromsum;\n\n    let openfromsum = 0;\n    let opentosum = 0;\n    if ((fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total != null)) {\n      // if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\n      //   openfromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\n      // }else{\n      openfromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\n\n    }\n    if ((toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total != null)) {\n      // if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\n      //   opentosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit+ toOpenOrderInfo[0].swap);\n      // }\n\n      // else{\n      //   opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n      // }\n      opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n    }\n\n    let sumOfOpenTotal = opentosum + openfromsum;\n\n    //   console.log(opentosum, 'opentosum')\n    //   console.log(openfromsum, 'openfromsum')\n    //  console.log(sumOfHistoryTotal, \"sumOfHistoryTotal------\");\n    //  console.log(sumOfOpenTotal, \"sumOfOpenTotal-----\");\n    //  console.log(allOpenRecord, 'allOpenRecord')\n\n\n\n    return (\n      <div>\n        <div className=\"shadoremove\">\n          {/* <div className=\"symbol-box\"> */}\n          {/* <span className=\"S-text\">EURUSD</span> */}\n          {/* <div style={{ borderBottom: '2px solid grey' }}>\n            {this.renderSymbols()}\n\n          </div> */}\n          {/* <div style={{ margin: '20px 0px' }}>\n            <span className=\"p-text\">Open Positions</span>\n            <span className=\"icon-style\" onClick={this.toggle}>\n              <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\n            </span>\n          </div>\n          <div>\n\n            <Collapse isOpen={this.state.isOpen}>\n              <Row>\n                {Data.tablePage.items.map((item, index) =>\n                  <Col md={6} key={index}>\n                    <div className=\"card\">\n                      <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\n                      </div>\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                        <table className=\"table\">\n                          <tbody>\n                            <tr><td>{item.lot} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.commission} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.swap} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.total} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                      </div>\n                    </div>\n                  </Col>\n                )}\n                <Row>\n                  <Col md={12}>\n                    <div>\n                      <div className=\"total-box\">\n                        <span className=\"text\">Sum of open position</span>\n                        <span className=\"text\" style={{ float: 'right' }}>$111111</span>\n                      </div>\n                    </div>\n                  </Col>\n                </Row>\n              </Row>\n            </Collapse>\n          </div> */}\n          {/* closed position */}\n\n          <Openposition\n            allOpenRecord={allOpenRecord}\n            toOpenOrderInfo={toOpenOrderInfo}\n            fromOpenOrderInfo={fromOpenOrderInfo}\n          />\n          <Closeposition\n            allHistoryRecord={allHistoryRecord}\n            fromHistoryOrderInfo={fromHistoryOrderInfo}\n            commissionHistoryOrderInfo={commissionHistoryOrderInfo}\n            toHistoryOrderInfo={toHistoryOrderInfo}\n          />\n          {/* <Row>\n\n            <Col md={12} sm={6}>\n              <div className={sumOfHistoryTotal + sumOfOpenTotal >= 0 ? \"summary-box\" : \"summary-box-red\"}>\n\n\n                {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\n          {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\n                <span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\n\n          {/* <Col md={12} sm={12}>\n                  <div className=\"summary-text text-center\" style={{ fontWeight: 600, color: \"#797979\" }}>Unrealized & Realized P/L ({activeProfileName}) {allHistoryRecord.history_info !== 0 && (<span> + Commission</span>)} </div>\n                </Col>\n                <Col md={12} sm={12}>\n                  <div className=\"text-center\" style={{ fontWeight: 'bold', fontSize: \"18px\" }}>$ {' '}\n                    <NumberFormat value={allHistoryRecord.history_info !== undefined ? sumOfHistoryTotal + sumOfOpenTotal + allHistoryRecord.history_info : sumOfHistoryTotal + sumOfOpenTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} /> */}\n\n\n          {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\n\n          {/* </div>\n                </Col>\n\n                <div className=\"clearfix\"></div>\n              </div>\n            </Col>\n          </Row> */}\n          {/* </div> */}\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default TableList;\n\n","import React, { Component } from \"react\";\n// import ChartistGraph from \"react-chartist\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport TableList from '../views/TableList';\n// import { Card } from \"components/Card/Card.jsx\";\n// import { StatsCard } from \"components/StatsCard/StatsCard.jsx\";\n// import { Tasks } from \"components/Tasks/Tasks.jsx\";\nimport NumberFormat from 'react-number-format';\nimport ReactLoading from \"react-loading\";\nimport Loader from 'react-loader-spinner'\n\nimport Data from './Data';\nimport Moment from 'react-moment';\nimport config from '../constant/config.js';\n// import {DatatablePage} from './DatatablePage';\n\nimport {api} from '../api'\nimport myInitObject from '../api'\nconst axios = require('axios');\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      details: [],\n      accountlist: [],\n      filterlist: [],\n      errorMassege: false,\n      error: '',\n      dateTime: '',\n      fromAccounts: '',\n      fromSymbol: '',\n      toAccounts: '',\n      toSymbol: '',\n      fromOpenOrderInfos: '',\n      toOpenOrderInfos: '',\n      total: '',\n      totalTo: '',\n      blockloader: true,\n      activeProfileName: '',\n      autoClose: ' ',\n      //\n\n\n      allHistoryRecord: [],\n      allOpenRecord: [],\n      fromHistoryOrderInfo: [],\n      toHistoryOrderInfo: [],\n      commissionHistoryOrderInfo: [],\n      fromOpenOrderInfo: [],\n      toOpenOrderInfo: [],\n      loading: true,\n      //\n\n\n    }\n  }\n  componentWillMount() {\n    // this.fetchCloseAndOpenPositionTotal();\n    // this.getAllAccounts();\n    // this.fetchActivefilterData();\n    // this.fetchAllOpenTrade();\n    // this.fetchStatusData();\n    // fetchLastUpdatedTime()\n    setInterval(() => {\n    if((myInitObject.responsHT &&\n      myInitObject.responsOT &&\n      myInitObject.responsAC &&\n      myInitObject.responsAF &&\n      myInitObject.responsLUT &&\n      myInitObject.responsSD) === undefined){\n      console.log('no data');\n    }else{\n      this.setState({\n        //history trade\n        allHistoryRecord: myInitObject.fetchAllHistoryTrade.rows,\n        fromHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.fromHistoryOrderInfo,\n        toHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.toHistoryOrderInfo,\n        //open trade\n        allOpenRecord: myInitObject.fetchAllOpenTrade.rows,\n        fromOpenOrderInfo: myInitObject.fetchAllOpenTrade.fromOpenOrderInfo,\n        toOpenOrderInfo: myInitObject.fetchAllOpenTrade.toOpenOrderInfo,\n        //all Accounts\n        accountlist: myInitObject.fetchAllAccounts.rows,\n        //active filter data\n        filterlist: myInitObject.fetchActivefilterdata.rows,\n       \n        activeProfileName: myInitObject.fetchActivefilterdata.rows[0].profile_name,\n        autoClose: myInitObject.fetchActivefilterdata.rows[0].auto_close !== 0 ? 'ON' : 'OFF',     \n        //last updated time\n        dateTime: myInitObject.fetchLastUpdatedTime.filteredInfoTime,\n        // status data\n        loading: false,\n        fromAccounts: myInitObject.fetchStatusData.fromAccounts,\n        fromSymbol: myInitObject.fetchStatusData.fromSymbol,\n        toAccounts: myInitObject.fetchStatusData.toAccounts,\n        toSymbol: myInitObject.fetchStatusData.toSymbol,\n        fromOpenOrderInfos: myInitObject.fetchStatusData.fromOpenOrderInfos[0],\n        blockloader: myInitObject.fetchStatusData.fromOpenOrderInfos.length > 0 ? false : true,\n        total: myInitObject.fetchStatusData.fromOpenOrderInfos.length > 0 && myInitObject.fetchStatusData.fromOpenOrderInfos[0].order_type == 0 \n        ? myInitObject.fetchStatusData.fromSymbol?.contract_size * (myInitObject.fetchStatusData.fromOpenOrderInfos[0]?.lots)\n         : myInitObject.fetchStatusData.fromSymbol?.contract_size * -(myInitObject.fetchStatusData.fromOpenOrderInfos[0]?.lots),\n        toOpenOrderInfos: myInitObject.fetchStatusData.toOpenOrderInfos[0],\n        totalTo: myInitObject.fetchStatusData.toOpenOrderInfos.length > 0 && myInitObject.fetchStatusData.toOpenOrderInfos[0].order_type == 0 \n        ? myInitObject.fetchStatusData.toSymbol?.contract_size * (myInitObject.fetchStatusData.toOpenOrderInfos[0]?.lots) \n         : myInitObject.fetchStatusData.toSymbol?.contract_size * -(myInitObject.fetchStatusData.toOpenOrderInfos[0]?.lots),\n      \n        },() =>{\n          this.setState({ errorMassege:this.state.filterlist.length == 0 ?  true : false,})\n        })\n    }\n   },1000)\n\n  }\n\n  // fetchApiData = () => {\n\n  //   if(myInitObject.respons === true){\n  //     console.log(myInitObject)\n  //   }\n  // }\n  \n  // fetchCloseAndOpenPositionTotal = () => {\n  //   let self = this;\n  //   axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\n  //     .then(function (response) {\n  //       console.log(response.data, 'response.data his')\n  //       if (response.status == 200) {\n  //         self.setState({\n  //           allHistoryRecord: response.data.rows,\n  //           fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,\n  //           toHistoryOrderInfo: response.data.toHistoryOrderInfo,\n  //           commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\n  //         })\n  //       }\n  //     })\n\n  //   axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\n  //     .then(function (response) {\n  //       if (response.status == 200) {\n  //         self.setState({\n  //           allOpenRecord: response.data.rows,\n  //           fromOpenOrderInfo: response.data.fromOpenOrderInfo,\n  //           toOpenOrderInfo: response.data.toOpenOrderInfo\n  //         })\n  //       }\n  //     })\n  // }\n  createLegend(json) {\n    var legend = [];\n    for (var i = 0; i < json[\"names\"].length; i++) {\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\n      legend.push(<i className={type} key={i} />);\n      legend.push(\" \");\n      legend.push(json[\"names\"][i]);\n    }\n    return legend;\n  }\n\n  // getAllAccounts = () => {\n  //   let self = this;\n  //   axios.get(config.baseurl + '/accounts/fetchAllAccounts')\n  //     .then(function (response) {\n\n  //       if (response.status == 200) {\n  //         self.setState({ accountlist: response.data.rows })\n  //       }\n  //     });\n  // }\n\n  // fetchActivefilterData = () => {\n  //   let self = this;\n  //   axios.get(config.baseurl + '/filter/fetchActivefilterdata')\n  //     .then(function (response) {\n  //       if (response.status == 200) {\n\n  //         self.setState({\n  //           filterlist: response.data.rows,\n\n  //         })\n  //         if (self.state.filterlist.length == 0) {\n\n  //           self.setState({ errorMassege: true })\n  //         }\n  //         else {\n  //           self.setState({\n\n  //             activeProfileName: response.data.rows[0].profile_name,\n  //             autoClose: response.data.rows[0].auto_close !== 0 ? 'ON' : 'OFF'\n  //           })\n  //         }\n  //       }\n  //     });\n  // }\n\n  // fetchAllOpenTrade = () => {\n  //   let self = this;\n  //   axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\n  //     .then(function (response) {\n  //       if (response.status == 200) {\n  //         self.setState({ dateTime: response.data.filteredInfoTime })\n  //       }\n  //     });\n  // }\n\n  // fetchStatusData = () => {\n  //   let self = this;\n  //   let tottal = 0;\n  //   axios.get(config.baseurl + '/accounts/fetchStatusData')\n  //     .then(function (response) {\n  //       console.log(response, \"active dat\")\n\n  //       if (response.status == 200) {\n  //         self.setState({ loading: false })\n\n  //         self.setState({ fromAccounts: response.data.fromAccounts })\n  //         self.setState({ fromSymbol: response.data.fromSymbol })\n  //         self.setState({ toAccounts: response.data.toAccounts })\n  //         self.setState({ toSymbol: response.data.toSymbol })\n  //         self.setState({ fromOpenOrderInfos: response.data.fromOpenOrderInfos[0] })\n  //         if (response.data.fromOpenOrderInfos.length > 0) {\n  //           self.setState({ blockloader: false })\n  //           if (response.data.fromOpenOrderInfos[0].order_type == 0) {\n  //             self.setState({ total: response.data.fromSymbol.contract_size * (response.data.fromOpenOrderInfos[0].lots) })\n  //           } else {\n  //             self.setState({ total: response.data.fromSymbol.contract_size * -(response.data.fromOpenOrderInfos[0].lots) })\n  //           }\n  //           console.log(response.data.fromSymbol.contract_size * -(response.data.fromOpenOrderInfos[0].lots), \"total\");\n  //           self.setState({ toOpenOrderInfos: response.data.toOpenOrderInfos[0] })\n  //         }\n  //         if (response.data.toOpenOrderInfos.length > 0) {\n  //           if (response.data.toOpenOrderInfos[0].order_type == 0) {\n  //             self.setState({ totalTo: response.data.toSymbol.contract_size * (response.data.toOpenOrderInfos[0].lots) })\n  //           } else {\n  //             self.setState({ totalTo: response.data.toSymbol.contract_size * -(response.data.toOpenOrderInfos[0].lots) })\n  //           }\n  //         }\n  //       }\n  //     });\n  // }\n\n\n\n\n  showData = (accountDetailValue) => {\n\n    return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\n      if (accountDetailValue === 'margin_level') {\n        return (\n          <>\n            <td className=\"tdClr2 tdClr boldText\" key={index}>\n              <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\n            </td>\n            <td className=\"tdClr2 boldText\" key={index}>\n              <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\n            </td>\n          </>\n        )\n      }\n      if (item.accountFromInfo.length > 0) {\n        return (\n          <>\n            <td className=\"tdClr2 tdClr boldText\" key={index}>\n              {item.accountFromInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''}  {' '}\n              <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n            </td>\n\n            <td className=\"tdClr2 boldText\" key={index}>\n              {item.accountToInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''} {' '}\n              <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n            </td>\n          </>\n        )\n\n      }\n\n    })\n  }\n\n  tableHeader = () => {\n\n    return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\n      return (\n        <>\n          <th key={index} className=\"bText colorDarkBlue text-center tdClr2 tdClr\">\n            <div className=\"colorDarkBlue\" >\n              {(item.accountFromInfo[0].alias != null) ? item.accountFromInfo[0].alias : '-'}\n            </div>\n            <span style={{ fontSize: 10 }}>\n              {item.accountFromInfo[0].login}\n            </span>\n\n          </th>\n          <th key={index} className=\"bText color2 text-center tdClr2\">\n            <div className=\"color2\" >\n              {(item.accountToInfo[0].alias != null) ? item.accountToInfo[0].alias : '-'}\n            </div>\n            <span style={{ fontSize: 10 }}>\n              {item.accountToInfo[0].login}\n            </span>\n\n          </th>\n        </>\n\n      )\n\n    })\n  }\n\n\n\n\n\n  render() {\n    // console.log(this.props, '================>');\n    const { allHistoryRecord, fromHistoryOrderInfo, toHistoryOrderInfo, commissionHistoryOrderInfo,\n      allOpenRecord, fromOpenOrderInfo, toOpenOrderInfo, } = this.state;\n\n\n    let fromsum = 0;\n    let tosum = 0;\n    let fromsum1 = 0;\n    let tosum1 = 0;\n\n\n    if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\n      fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\n    }\n    if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\n      tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\n    }\n\n    let sumOfTotal = tosum + fromsum;\n    if (fromOpenOrderInfo && fromOpenOrderInfo.length > 0) {\n\n      fromsum1 = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\n\n    }\n    if (toOpenOrderInfo && toOpenOrderInfo.length > 0) {\n\n      tosum1 = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n\n    }\n\n    let sumOfTotal1 = tosum1 + fromsum1;\n    const dateToFormat = new Date();\n    let FinalTotal = 0\n\n    return (\n\n      <div className=\"\">\n        {this.state.errorMassege === true &&\n          <div className=\"popup\">\n\n            <div className=\"card w-75 \">\n              <div className=\"card-body topmargin\">\n                <div className=\" card-text popuptext\" role=\"alert\">Please Select Filters To Continue...</div>\n              </div>\n            </div>\n          </div>}\n        <div className=\"content\">\n          {this.state.errorMassege !== true &&\n\n            <Grid fluid>\n\n              <Row>\n                <div className=\"lastUpdate\">\n                  <span> Last Updated :  </span>\n                  {this.state.dateTime}(UTC)  </div>\n                <Col md={12} sm={6}>\n                  <div className=\"terminal-box  terminal-head-box\">\n\n                    <span className=\"terminal-text\">Profile</span>\n                  </div>\n                  <Row >\n                    <Col lg={4} sm={4}>\n                      <div className=\"card-margin card card-stats\">\n                        <div className=\"content\">\n                          <Row className=\"row\">\n                            <Col xs={5}>\n                              <div style={{ fontSize: '3em' }} className=\"icon-big text-center icon-warning\">\n                                <i className=\"pe-7s-display1 text-warning\"></i>\n                              </div>\n                            </Col>\n                            <div className=\"col-xs-7\">\n                              <div className=\"numbers\"><p style={{\n                                textAlign: 'center',\n                                fontSize: '17px',\n                                marginTop: '15px'\n                              }}>Active Profile </p></div>\n                            </div>\n                          </Row>\n                          <div className=\"footer\"><hr /><p style={{ textAlign: 'center', fontSize: '17px' }}>{this.state.activeProfileName}</p></div></div></div>\n                    </Col>\n\n                    <div className=\" col-lg-offset-4 col-sm-offset-4 col-lg-4 col-sm-4\">\n                      <div className=\"card-margin card card-stats\">\n                        <div className=\"content\">\n                          <div className=\"row\">\n                            <div className=\"col-xs-5\">\n                              <div style={{ fontSize: '3em' }} className=\"icon-big text-center icon-warning\">\n                                <i style={{ color: this.state.autoClose == 'OFF' ? '#312f2f' : 'green' }} className=\"pe-7s-switch text-warning-switch\"></i>\n                              </div></div>\n                            <div className=\"col-xs-7\">\n                              <div className=\"numbers\"><p style={{\n                                textAlign: 'center',\n                                fontSize: '17px',\n                                marginTop: '15px'\n                              }}>Auto-Close </p></div>\n                            </div></div><div className=\"footer\"><hr /><p style={{ textAlign: 'center', fontSize: '17px' }}>{this.state.autoClose}</p></div></div></div></div>\n\n                  </Row>\n                  <div className=\"terminal-box terminal-head-box\">\n                    {/* {(this.state.errorMassege) && <p style={{ color: 'red', fontSize: '10px' }}>Please Select Any Account</p>} */}\n                    <span className=\"terminal-text\">Profit/Loss</span>\n                  </div>\n                  <Row >\n                    <div className=\"col-lg-12 col-sm-12\">\n                      <div className=\"card-margin card card-stats\">\n                        <div className=\"content\">\n                          <div className=\"row\">\n                            <div className=\"col-xs-6\">\n                              <div className=\"numbers\"><p style={{\n                                textAlign: 'center',\n                                fontSize: '20px',\n                        \n                                color: sumOfTotal > 0 ? 'green' : 'red'\n                              }}>Realized : $ {sumOfTotal} </p></div>\n                            </div>\n                            <div className=\"col-xs-6\">\n                              <div className=\"numbers\"><p style={{\n                                textAlign: 'center',\n                                fontSize: '20px',\n                            \n                                color: sumOfTotal1 > 0 ? 'green' : 'red'\n\n                              }}>Unrealized : $ {sumOfTotal1} </p></div>\n                            </div>\n                          </div><div className=\"footer\"><hr /><p style={{ color: (sumOfTotal1 + sumOfTotal) > 0 ? 'green' : 'red', textAlign: 'center', fontSize: '20px' }}>Total : $ {(sumOfTotal1 + sumOfTotal).toFixed(2)}</p></div></div></div></div>\n                  </Row>\n                  <div className=\"terminal-box  terminal-head-box\">\n                    {/* {(this.state.errorMassege) && <p style={{ color: 'red', fontSize: '10px' }}>Please Select Any Account</p>} */}\n                    <span className=\"terminal-text\">Exposure</span>\n                  </div>\n                  {this.state.loading ? <Loader\n                    type=\"ThreeDots\"\n                    color=\"black\"\n                    height={100}\n                    width={100}\n                    style={{ textAlign: 'center' }}\n\n\n                  />\n                    :\n                    <Row>\n                      {this.state.fromOpenOrderInfos && this.state.total ?\n                        // this.state.fromOpenOrderInfos.order_type !== null &&\n                        <div className=\"col-sm-6\">\n                         \n                          <div className=\"c-callout c-callout-info\">\n                            <small className=\"text-muted text-muted-dashboard\">{this.state.fromOpenOrderInfos.order_type == 0 ? 'long ' : 'short '} </small>\n                            <br />\n                            <strong className=\"h4 buy-sell-h4\"><NumberFormat value={this.state.total} displayType={'text'} thousandSeparator={true} decimalScale={2} />   {this.state.fromSymbol.margin_currency}\n                              <br />  <NumberFormat value={this.state.fromOpenOrderInfos.lots} displayType={'text'} thousandSeparator={true} decimalScale={2} />  {(this.state.fromOpenOrderInfos.lots > 1) ? 'Lots' : 'Lot'}</strong>\n                          </div>\n                        </div> : ''}\n                      {this.state.toOpenOrderInfos && this.state.totalTo ?\n                        // this.state.toOpenOrderInfos.order_type !== null &&\n                        <div className=\"col-sm-6\">\n                          <div className=\"c-callout callout-danger\">\n                            <small className=\"text-muted text-muted-dashboard\">{this.state.toOpenOrderInfos.order_type == 0 ? 'long ' : 'short '} </small>\n                            <br />\n                            <strong className=\"h4 buy-sell-h4\"><NumberFormat value={this.state.totalTo} displayType={'text'} thousandSeparator={true} decimalScale={2} />   {this.state.toSymbol.margin_currency}\n                              <br /> <NumberFormat value={this.state.toOpenOrderInfos.lots} displayType={'text'} thousandSeparator={true} decimalScale={2} />  {(this.state.toOpenOrderInfos.lots > 1) ? 'Lots' : 'Lot'} </strong>\n                          </div> \n                          </div>: '' }\n                          {!this.state.totalTo && !this.state.total ?\n                          <div className=\"col-sm-12 text-center\">\n                            <div className=\"c-callout c-callout-info\">\n                          <small className=\"text-muted text-muted-dashboard\">No Exposure</small>\n                          </div>\n                          </div> : ''}\n                    </Row>\n                  }\n                </Col>\n              </Row>\n              <Row style={{ margin: '20px 0px' }}></Row>\n            </Grid>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\nimport TagsInput from 'react-tagsinput'\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\n\nimport DatePicker from \"react-datepicker\";\nimport config from '../../constant/config.js';\n\nimport Select from 'react-select';\nimport ReactTooltip from 'react-tooltip';\nconst axios = require('axios');\n\nclass FilterEdite extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedAccountOption: null,\n            selectedSymbolOption: null,\n            selectedSymbolOptionTo: null,\n            selectedAccountOptionTo: null,\n            selectedCommissionAccount: null,\n            startDate: null,\n            endDate: null,\n            startDateTo: null,\n            endDateTo: null,\n            startDateComm: null,\n            endDateComm: null,\n            comm_magicNumber: [],\n            excludeComm: false,\n            includeComm: false,\n            allAccounts: [],\n            allSymbols: [],\n            profileName: '',\n            showCommission: false,\n            // showAddCommission: false,\n            id: '',\n            error: '',\n            autoSyncClose: false,\n            magicNumber: [],\n            magicNumberTo: [],\n            tags: [],\n            include_exclude_status: '',\n            showMagicNumber: false,\n            showMagicNumberTo: false,\n            exclude: false,\n            include: false,\n            excludeTo: false,\n            includeTo: false,\n            ticket: [],\n            ticketTo: [],\n            // showTicket: false,\n            // showTicketTo: false,\n            excludeTicket: false,\n            includeTicket: false,\n            excludeTicketTo: false,\n            includeTicketTo: false,\n\n        };\n\n\n    }\n    componentWillMount() {\n\n        let self = this;\n        axios.get(config.baseurl + '/accounts/fetchAllAccounts')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ allAccounts: response.data.rows })\n                }\n            })\n        axios.get(config.baseurl + '/accounts/fetchAllSymbol')\n            .then(function (response) {\n                if (response.status == 200) {\n                    // console.log( response,\"response ---------------fetchAllSymbol>\")\n                    self.setState({ allSymbols: response.data.rows })\n                }\n            })\n    }\n    componentDidMount() {\n\n        let abc = this.props.data;\n        // console.log(abc.from_ticket, '------------------>>>');\n        if (abc) {\n            let from_symbol = JSON.parse(abc.from_symbols);\n            let to_symbol = JSON.parse(abc.to_symbols);\n\n            let all_from_symbols = from_symbol.map(data => { return ({ value: data, label: data }) });\n            let all_to_symbols = to_symbol.map(data => { return ({ value: data, label: data }) });\n\n            from_symbol = from_symbol.join(', ');\n            to_symbol = to_symbol.join(', ');\n\n            this.setState({\n                id: abc.id,\n                profileName: abc.profile_name,\n                selectedAccountOption: ({ value: abc.accountFromInfo[0].id, label: abc.accountFromInfo[0].login }),\n                selectedAccountOptionTo: ({ value: abc.accountToInfo[0].id, label: abc.accountToInfo[0].login }),\n                showCommission: abc.commission_acount_id !== 0 ? true : false,\n                selectedCommissionAccount: abc.commission_acount_id !== 0 ? ({ value: abc.accountCommissionInfo[0].id, label: abc.accountCommissionInfo[0].login }) : null,\n                showMagicNumber: abc.from_include_exclude_status !== 0 ? true : false,\n                showMagicNumberTo: abc.to_include_exclude_status !== 0 ? true : false,\n                magicNumber: abc.from_magic_number != \"0\" && abc.from_magic_number != \"\" ? JSON.parse(abc.from_magic_number) : [],\n                magicNumberTo: abc.to_magic_number != \"0\" && abc.to_magic_number != \"\" ? JSON.parse(abc.to_magic_number) : [],\n                include: abc.from_include_exclude_status === 1 ? true : false,\n                exclude: abc.from_include_exclude_status === 2 ? true : false,\n                includeTo: abc.to_include_exclude_status === 1 ? true : false,\n                excludeTo: abc.to_include_exclude_status === 2 ? true : false,\n                startDateComm: new Date(abc.startdateComm),\n                endDateComm: (abc.enddateComm != null) ? new Date(abc.enddateComm) : '',\n                includeComm: abc.comm_include_exclude_status === 1 ? true : false,\n                excludeComm: abc.comm_include_exclude_status === 2 ? true : false,\n                comm_magicNumber: abc.comm_magic_number != \"0\" && abc.comm_magic_number != \"\" ? JSON.parse(abc.comm_magic_number) : [],\n                // showTicket: abc.from_include_exclude_status_ticket !== 0 ? true : false,\n                // showTicketTo: abc.to_include_exclude_status_ticket !== 0 ? true : false,\n                ticket: abc.from_ticket != \"0\" && abc.from_ticket != \"\" ? JSON.parse(abc.from_ticket) : [],\n                ticketTo: abc.to_ticket != \"0\" && abc.to_ticket != \"\" ? JSON.parse(abc.to_ticket) : [],\n                includeTicket: abc.from_include_exclude_status_ticket === 1 ? true : false,\n                excludeTicket: abc.from_include_exclude_status_ticket === 2 ? true : false,\n                includeTicketTo: abc.to_include_exclude_status_ticket === 1 ? true : false,\n                excludeTicketTo: abc.to_include_exclude_status_ticket === 2 ? true : false,\n                selectedSymbolOption: all_from_symbols,\n                autoSyncClose: abc.auto_close == 1 ? true : false,\n                selectedSymbolOptionTo: all_to_symbols,\n                startDate: new Date(abc.startdateFrom),\n                startDateTo: new Date(abc.startdateTo),\n                endDate: (abc.enddateFrom != null) ? new Date(abc.enddateFrom) : '',\n                endDateTo: (abc.enddateTo != null) ? new Date(abc.enddateTo) : '',\n            })\n\n\n        }\n\n\n\n    }\n\n    handleDropdownChange = (e) => {\n        this.setState({ selectValue: e.target.value });\n    }\n    handleChangeDateComm = (date) => {\n        this.setState({\n            startDateComm: date,\n        });\n    };\n    handleEndDateComm = (date) => {\n        if (date < this.state.startDateComm && date != null) {\n            this.setState({ error: \"enddatecomm\", endDateComm: \"\" });\n            return;\n        }\n        this.setState({\n            error: \"\",\n            endDateComm: date,\n        });\n    };\n    handleChangeDate = date => {\n        this.setState({\n            startDate: date\n        });\n    }\n    handleEndDate = date => {\n\n        if (date < this.state.startDate && date != null) {\n            this.setState({ error: 'enddate', endDate: \"\" })\n            return\n        }\n        this.setState({\n            error: '',\n            endDate: date,\n        });\n    }\n    handleChangeDateTo = date => {\n        this.setState({\n            startDateTo: date\n        });\n    }\n    handleEndDateTo = date => {\n        if (date < this.state.startDateTo && date != null) {\n            this.setState({ error: 'enddateto', endDateTo: \"\" })\n            return\n        }\n        this.setState({\n            error: '',\n            endDateTo: date,\n        });\n    }\n    handleChange = (event) => {\n        this.setState({ value: Array.from(event.target.selectedOptions, (item) => item.value) });\n    }\n\n    handeChangeShowCommission = () => {\n        this.setState({ showCommission: !this.state.showCommission })\n    }\n    handleChangeCommissionAccount = selectedCommissionAccount => {\n        this.setState({ selectedCommissionAccount });\n    };\n\n    renderCommissionAccount = () => {\n        const { selectedCommissionAccount, allAccounts } = this.state;\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account\"\n                value={selectedCommissionAccount}\n                onChange={this.handleChangeCommissionAccount}\n                options={options}\n            />\n        )\n    }\n\n\n\n    renderAccountSelect = () => {\n        const { selectedAccountOption, allAccounts } = this.state;\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account\"\n                value={selectedAccountOption}\n                onChange={this.handleChangeAccount} l\n                options={options}\n                rules={{ required: 'Please select an option' }}\n            />\n        )\n    }\n\n    handleChangeAccountTo = selectedAccountOptionTo => {\n        this.setState({ selectedAccountOptionTo, error: '' });\n    };\n    renderAccountSelectTo = () => {\n        const { selectedAccountOptionTo, allAccounts } = this.state;\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account\"\n                value={selectedAccountOptionTo}\n                onChange={this.handleChangeAccountTo}\n                options={options}\n            />\n        )\n    }\n\n    handleChangeAccount = selectedAccountOption => {\n        this.setState({ selectedAccountOption });\n    };\n    handleChangeSymbol = selectedSymbolOption => {\n        this.setState({ selectedSymbolOption });\n    };\n    renderSymbolSelect = () => {\n        const { selectedSymbolOption, allSymbols } = this.state;\n        let options = allSymbols.map(data => {\n            return { value: data.name, label: data.name };\n        })\n        return (\n            <Select\n                placeholder=\"Select Symbol\"\n                value={selectedSymbolOption}\n                isMulti\n                onChange={this.handleChangeSymbol}\n                options={options}\n            />\n        )\n    }\n    handleChangeSymbolTo = selectedSymbolOptionTo => {\n        this.setState({ selectedSymbolOptionTo });\n    };\n    renderSymbolSelectTo = () => {\n        const { selectedSymbolOptionTo, allSymbols } = this.state;\n        let options = allSymbols.map(data => {\n            return { value: data.name, label: data.name };\n        })\n        return (\n            <Select\n                placeholder=\"Select Symbol\"\n                value={selectedSymbolOptionTo}\n                isMulti\n                onChange={this.handleChangeSymbolTo}\n                options={options}\n            />\n        )\n    }\n\n    handleChangeMagicNumber = (magicNumber) => {\n\n\n        // if(re.test(tags))\n        this.setState({ magicNumber })\n    }\n    handleChangeMagicNumberTo = (magicNumberTo) => {\n\n\n        // if(re.test(tags))\n        this.setState({ magicNumberTo })\n    }\n    handleChangeMagicNumberComm = (comm_magicNumber) => {\n        this.setState({ comm_magicNumber });\n    };\n    handleChangeTicket = (ticket) => {\n\n\n        this.setState({ ticket })\n\n    }\n    handleChangeTicketTo = (ticketTo) => {\n\n        this.setState({ ticketTo })\n    }\n    changeIncludeDefaultProperty = () => {\n\n        this.setState({ include: !this.state.include, exclude: false })\n\n        // if (!this.state.include == true) {\n        //     this.setState({ showMagicNumber: true })\n        // } else if (this.state.include == true) {\n        //     this.setState({ showMagicNumber: false })\n\n        // }\n\n\n    }\n    changeExcludeDefaultProperty = () => {\n        this.setState({ exclude: !this.state.exclude, include: false })\n        // if (!this.state.exclude == true) {\n        //     this.setState({ showMagicNumber: true })\n        // } else if (this.state.exclude == true) {\n        //     this.setState({ showMagicNumber: false })\n\n        // }\n\n    }\n\n    changeIncludeDefaultPropertyTo = () => {\n        this.setState({ includeTo: !this.state.includeTo, excludeTo: false })\n        // if (!this.state.includeTo == true) {\n        //     this.setState({ showMagicNumberTo: true })\n        // } else if (this.state.includeTo == true) {\n        //     this.setState({ showMagicNumberTo: false })\n\n        // }\n    }\n    changeExcludeDefaultPropertyTo = () => {\n        this.setState({ excludeTo: !this.state.excludeTo, includeTo: false })\n        // if (!this.state.excludeTo == true) {\n        //     this.setState({ showMagicNumberTo: true })\n        // } else if (this.state.excludeTo == true) {\n        //     this.setState({ showMagicNumberTo: false })\n\n        // }\n\n    }\n\n    changeIncludeDefaultPropertyTicket = () => {\n\n        this.setState({ includeTicket: !this.state.includeTicketTo, excludeTicket: false }\n        )\n        // if (!this.state.includeTicket == true) {\n        //     this.setState({ showTicket: true })\n        // } else if (this.state.includeTicket == true) {\n        //     this.setState({ showTicket: false })\n\n        // }\n\n\n    }\n    changeExcludeDefaultPropertyTicket = () => {\n        this.setState({ excludeTicket: !this.state.excludeTicket, includeTicket: false })\n        // if (!this.state.excludeTicket == true) {\n        //     this.setState({ showTicket: true })\n        // } else if (this.state.excludeTicket == true) {\n        //     this.setState({ showTicket: false })\n\n        // }\n\n    }\n\n    changeIncludeDefaultPropertyTicketTo = () => {\n        this.setState({ includeTicketTo: !this.state.includeTicketTo, excludeTicketTo: false })\n        // if (!this.state.includeTicketTo == true) {\n        //     this.setState({ showTicketTo: true })\n        // } else if (this.state.includeTicketTo == true) {\n        //     this.setState({ showTicketTo: false })\n\n        // }\n    }\n    changeExcludeDefaultPropertyTicketTo = () => {\n        this.setState({ excludeTicketTo: !this.state.excludeTicketTo, includeTicketTo: false })\n        // if (!this.state.excludeTicketTo == true) {\n        //     this.setState({ showTicketTo: true })\n        // } else if (this.state.excludeTicketTo == true) {\n        //     this.setState({ showTicketTo: false })\n\n        // }\n\n    }\n    changeExcludeDefaultPropertyComm = () => {\n        this.setState({ excludeComm: !this.state.excludeComm, includeComm: false });\n    }\n    changeIncludeDefaultPropertyComm = () => {\n        this.setState({ includeComm: !this.state.includeComm, excludeComm: false });\n    }\n    handleprofileName(e) {\n\n        this.setState({ profileName: e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1), error: '' })\n\n    }\n    handleChangeAutoSync(e) {\n        this.setState({ autoSyncClose: !this.state.autoSyncClose }, () => {\n        })\n    }\n    formDataSubmit(e) {\n        e.preventDefault();\n        let comm_status =\n            this.state.includeComm === true && this.state.excludeComm === false\n                ? 1\n                : this.state.excludeComm === true && this.state.includeComm === false\n                    ? 2\n                    : 0;\n        let from_status = this.state.include === true && this.state.exclude === false ? 1 : this.state.exclude === true && this.state.include === false ? 2 : 0\n\n        let to_status = this.state.includeTo === true && this.state.excludeTo === false ? 1 : this.state.excludeTo === true && this.state.includeTo === false ? 2 : 0\n\n        let from_status_ticket = this.state.includeTicket === true && this.state.excludeTicket === false ? 1 : this.state.excludeTicket === true && this.state.includeTicket === false ? 2 : 0\n\n        let to_status_ticket = this.state.includeTicketTo === true && this.state.excludeTicketTo === false ? 1 : this.state.excludeTicketTo === true && this.state.includeTicketTo === false ? 2 : 0\n\n        let self = this\n\n\n        if (this.state.profileName == null || this.state.profileName == '') {\n            NotificationManager.listNotify = [];\n            NotificationManager.error('Please select profile name !')\n            return\n        }\n        else if (this.state.selectedAccountOption == null || this.state.selectedAccountOption == '') {\n            this.setState({ error: 'accountoption' })\n            return\n        }\n        else if (this.state.showCommission == true && (this.state.selectedCommissionAccount == null || this.state.selectedCommissionAccount == '')) {\n            this.setState({ error: 'selectedCommissionAccount' })\n            return\n        }\n        else if (this.state.startDate == null || this.state.startDate == '') {\n            this.setState({ error: 'startdate' })\n            return\n        } else if (this.state.selectedSymbolOption == null || this.state.selectedSymbolOption == '') {\n            this.setState({ error: 'symbolselect' })\n            return\n        }\n        else if (this.state.selectedAccountOptionTo == null || this.state.selectedAccountOptionTo == '') {\n            this.setState({ error: 'accountoptionto' })\n            return\n        } else if (this.state.startDateTo == null || this.state.startDateTo == '') {\n            this.setState({ error: 'startDateTo' })\n            return\n        }\n        else if (this.state.selectedSymbolOptionTo == null || this.state.selectedSymbolOptionTo == '') {\n            this.setState({ error: 'selectedSymbolOptionTo' })\n            return\n        }\n        else {\n            this.setState({ error: '' })\n        }\n        let fromSymbol = this.state.selectedSymbolOption;\n        let toSymbol = this.state.selectedSymbolOptionTo;\n\n        let symbolFrom = fromSymbol.map((data) => data.value)\n        let symbolto = toSymbol.map((data) => data.value)\n\n        let Data = {\n            id: this.state.id,\n            profile_name: this.state.profileName,\n            from_account_id: this.state.selectedAccountOption.value,\n            to_account_id: this.state.selectedAccountOptionTo.value,\n            commission_acount_id: this.state.showCommission == true ? this.state.selectedCommissionAccount.value : 0,\n            startdateFrom: this.state.startDate,\n            // enddateFrom: this.state.endDate,\n            enddateFrom: (this.state.endDate) ? this.state.endDate : null,\n            startdateTo: this.state.startDateTo,\n            enddateTo: (this.state.endDateTo) ? this.state.endDateTo : null,\n            startdateComm: this.state.startDateComm,\n            enddateComm: (this.state.endDateComm) ? this.state.endDateComm : null,\n            comm_include_exclude_status: comm_status,\n            comm_magic_number: (comm_status != 0) ? this.state.comm_magicNumber.length > 0\n                ? JSON.stringify(this.state.comm_magicNumber)\n                : JSON.stringify([]) : \"\",\n            from_symbols: JSON.stringify(symbolFrom),\n            to_symbols: JSON.stringify(symbolto),\n            auto_close: this.state.autoSyncClose ? 1 : 0,\n            from_magic_number: (from_status != 0) ? this.state.magicNumber.length > 0 ? JSON.stringify(this.state.magicNumber) : JSON.stringify([]) : \"\",\n            to_magic_number: (to_status != 0) ? this.state.magicNumberTo.length > 0 ? JSON.stringify(this.state.magicNumberTo) : JSON.stringify([]) : \"\",\n\n            from_include_exclude_status: from_status,\n            to_include_exclude_status: to_status,\n            from_ticket: (from_status_ticket != 0) ? this.state.ticket.length > 0 ? JSON.stringify(this.state.ticket) : JSON.stringify([]) : \"\",\n            to_ticket: (to_status_ticket != 0) ? this.state.ticketTo.length > 0 ? JSON.stringify(this.state.ticketTo) : JSON.stringify([]) : \"\",\n            from_include_exclude_status_ticket: from_status_ticket,\n            to_include_exclude_status_ticket: to_status_ticket,\n            createdAt: new Date(),\n            updatedAt: new Date()\n        }\n\n        axios.post(config.baseurl + '/filter/updatefilterdatafull', Data)\n            .then(function (response) {\n\n                if (response.status == 200) {\n                    self.props.onHide()\n\n                }\n            })\n            .catch(function (error) {\n            });\n\n    }\n    crossClick(e) {\n        e.preventDefault();\n        this.props.onHide()\n    }\n\n    render() {\n        return (\n            <div className=\"content\">\n                <Grid fluid>\n                    <div className=\"symbol-box\">\n                        <div className=\"cross_div\"><a onClick={(e) => this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\n                        <div className=\"terminal-text\" >\n                            <p className=\"profilename pnameadjust\"> Profile Name</p>\n                            <input type=\"text\" name=\"profilename\" value={this.state.profileName} className=\"Itext\" onChange={(e) => this.handleprofileName(e)} />\n                            {(this.state.error == 'profileName') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Fill Your Profile Name </p>}\n\n                        </div>\n                        <div className=\"synclose\">\n                            <label class=\"checkbox-inline\"><input type=\"checkbox\" checked={this.state.autoSyncClose} name=\"changeAutoSync\" onChange={(e) => this.handleChangeAutoSync(e)} /><b>Auto Sync Close</b></label>\n                        </div>\n                        <form>\n                            <Row>\n                                {/* <Col md={12}>\n                                    <div className=\"card\">\n                                        <div style={{ padding: '10px 20px 35px ', }}>\n                                            <div>\n                                                <h3 className=\" text-center\">Filter By Magic Numbers</h3>\n\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6 text-center\">\n\n                                                    <button type=\"button\" class=\"text-center filter-add-button\">Include</button>\n                                                </div>\n\n                                                <div className=\"col-md-6 text-center btnspace\">\n                                                    <button type=\"button\" class=\"filter-add-button\">Exclude</button>\n                                                </div>\n                                                <div className=\"row\">\n                                                    <div className=\"col\">\n                                                        <div class=\"text-center  \">\n                                                            <input class=\"form-control input-css\" placeholder=\"Select Numbers\" type=\"number\"></input>\n                                                        </div>\n                                                    </div>\n                                                </div>from_include_exclude_status\n\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                </Col> */}\n                                <Col md={6}>\n                                    <div className=\"card bottom\">\n                                        <div style={{ padding: '10px 20px 0px' }}>\n                                            <span style={{ fontWeight: 'bold' }}>Account A</span>\n                                        </div>\n                                        <table className=\"table mt20\">\n                                            <tbody>\n                                                <tr>\n                                                    <td className=\"b-clr\">\n                                                        <span className=\"accnt\">Account :</span>\n                                                    </td>\n\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        {this.renderAccountSelect()}\n                                                        {(this.state.error == 'accountoption') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">From:  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            selected={this.state.startDate}\n                                                            onChange={this.handleChangeDate}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDate}\n                                                            endDate={this.state.endDate}\n                                                            strictParsing\n                                                        />\n                                                        {(this.state.error == 'startdate') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">To :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n\n                                                            selected={this.state.endDate}\n                                                            onChange={this.handleEndDate}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDate}\n                                                            endDate={this.state.endDate}\n                                                        />\n                                                        {(this.state.error == 'enddate') && <p style={{ color: 'red', fontSize: '13px' }}>*\n                                                        Please ensure that the End Date is greater than  the Start Date.</p>}\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">Symbol :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '50%' }}>\n                                                        {this.renderSymbolSelect()}\n                                                        {(this.state.error == 'symbolselect') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">Magic Number </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        <TagsInput\n                                                            onValidationReject={() => console.log('rejected')}\n                                                            validationRegex={/^[0-9]*$/}\n                                                            inputProps={{ placeholder: this.state.magicNumber.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumber\n                                                            } onChange={this.handleChangeMagicNumber}></TagsInput>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr dataAdjust\">\n                                                        <div onClick={this.changeIncludeDefaultProperty}>\n                                                            <input\n                                                                type=\"radio\" id=\"include\" name=\"include\" checked={this.state.include} />\n                                                            <span className=\"accnt \">Include</span>\n\n                                                        </div>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\">\n                                                        <div onClick={this.changeExcludeDefaultProperty} >\n                                                            <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.exclude} />\n                                                            <span className=\"accnt \">Exclude</span>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">Ticket </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        <TagsInput\n                                                            onValidationReject={() => console.log('rejected')}\n                                                            validationRegex={/^[0-9]*$/}\n                                                            inputProps={{ placeholder: this.state.ticket.length > 0 ? \"\" : \" Enter Ticket\" }} type=\"number\" value={this.state.ticket\n                                                            } onChange={this.handleChangeTicket}></TagsInput>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr dataAdjust\">\n                                                        <div onClick={this.changeIncludeDefaultPropertyTicket}>\n                                                            <input\n                                                                type=\"radio\" id=\"includeTicket\" name=\"includeTicket\" checked={this.state.includeTicket} />\n                                                            <span className=\"accnt \">Include</span>\n\n                                                        </div>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\">\n                                                        <div onClick={this.changeExcludeDefaultPropertyTicket} >\n                                                            <input type=\"radio\" id=\"excludeTicket\" name=\"excludeTicket\" checked={this.state.excludeTicket} />\n                                                            <span className=\"accnt \">Exclude</span>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n\n                                            </tbody>\n                                        </table>\n                                        {/* <div className=\"text-center\">\n                                            <span c> Magic Number :  </span>\n                                        </div>\n\n                                        <table className=\"table \">\n                                            <tbody>\n                                                <tr>\n                                                    <td className=\"b-clr dataAdjust\">\n                                                        <div onClick={this.changeIncludeDefaultProperty}>\n                                                            <input\n                                                                type=\"radio\" id=\"include\" name=\"include\" checked={this.state.include} />\n                                                            <span class=\"accnt \">Include</span>\n\n                                                        </div>\n                                                    </td>\n                                                    <td className=\"b-clr \">\n                                                        <div onClick={this.changeExcludeDefaultProperty} >\n                                                            <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.exclude} />\n                                                            <span class=\"accnt \">Exclude</span>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n\n\n                                        {this.state.showMagicNumber &&\n                                            <div className=\"b-clr magicnumber\" style={{}}>\n                                                <TagsInput\n                                                    onValidationReject={() => console.log('rejected')}\n                                                    validationRegex={/^[0-9]*$/}\n                                                    inputProps={{ placeholder: this.state.magicNumber.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumber\n                                                    } onChange={this.handleChangeMagicNumber}></TagsInput>\n                                            </div>}\n\n                                            <div className=\"text-center\">\n                                                <span > Ticket   </span>\n                                            </div>\n\n                                            <table className=\"table \">\n                                                <tbody>\n                                                    <tr>\n                                                        <td className=\"b-clr dataAdjust\">\n                                                            <div onClick={this.changeIncludeDefaultPropertyTicket}>\n                                                                <input\n                                                                    type=\"radio\" id=\"includeTicket\" name=\"includeTicket\" checked={this.state.includeTicket} />\n                                                                <span className=\"accnt \">Include</span>\n\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"b-clr text-center\">\n                                                            <div onClick={this.changeExcludeDefaultPropertyTicket} >\n                                                                <input type=\"radio\" id=\"excludeTicket\" name=\"excludeTicket\" checked={this.state.excludeTicket} />\n                                                                <span className=\"accnt \">Exclude</span>\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n\n\n                                            {this.state.showTicket === true ?\n                                                <div className=\"b-clr magicnumber\" style={{}}>\n                                                    <TagsInput\n                                                        onValidationReject={() => console.log('rejected')}\n                                                        validationRegex={/^[0-9]*$/}\n                                                        inputProps={{ placeholder: this.state.ticket.length > 0 ? \"\" : \" Enter Ticket\" }} type=\"number\" value={this.state.ticket\n                                                        } onChange={this.handleChangeTicket}></TagsInput>\n                                                </div> : null} */}\n                                    </div>\n                                </Col>\n                                <Col md={6}>\n                                    <div className=\"card bottom\">\n                                        <div style={{ padding: '10px 20px 0px' }}>\n                                            <span style={{ fontWeight: 'bold' }}>Account B</span>\n                                        </div>\n\n                                        <table className=\"table mt20\">\n                                            <tbody>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">Account :</span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '50%' }}>\n                                                        {this.renderAccountSelectTo()}\n                                                        {(this.state.error == 'accountoptionto') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\n\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">From:  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            selected={this.state.startDateTo}\n                                                            onChange={this.handleChangeDateTo}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDateTo}\n                                                            endDate={this.state.endDateTo}\n                                                        />\n\n                                                        {(this.state.error == 'startDateTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">To :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            selected={this.state.endDateTo}\n                                                            onChange={this.handleEndDateTo}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDateTo}\n                                                            endDate={this.state.endDateTo}\n\n                                                        />\n\n                                                        {(this.state.error == 'enddateto') && <p style={{ color: 'red', fontSize: '13px' }}>*\n                                                        Please ensure that the End Date is greater than  the Start Date.</p>}\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr\">\n                                                        <span className=\"accnt\">Symbol :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        {this.renderSymbolSelectTo()}\n                                                        {(this.state.error == 'selectedSymbolOptionTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\n\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">Magic Number </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        <TagsInput\n                                                            onValidationReject={() => console.log('rejected')}\n                                                            validationRegex={/^[0-9]*$/}\n                                                            inputProps={{ placeholder: this.state.magicNumberTo.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumberTo\n                                                            } onChange={this.handleChangeMagicNumberTo}></TagsInput>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr checkboxAdjust\">\n                                                        <div onClick={this.changeIncludeDefaultPropertyTo} >\n                                                            <input\n                                                                type=\"radio\" id=\"includeTo\" name=\"includeTo\" checked={this.state.includeTo} />\n                                                            <span className=\"accnt \">Include</span>\n\n                                                        </div>\n                                                    </td>\n                                                    <td className=\"b-clr checkboxAdjust text-center\">\n                                                        <div onClick={this.changeExcludeDefaultPropertyTo} >\n                                                            <input type=\"radio\" id=\"excludeTo\" name=\"excludeTo\" checked={this.state.excludeTo} />\n                                                            <span className=\"accnt \">Exclude</span>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">Ticket </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        <TagsInput\n                                                            onValidationReject={() => console.log('rejected')}\n                                                            validationRegex={/^[0-9]*$/}\n                                                            inputProps={{ placeholder: this.state.ticketTo.length > 0 ? \"\" : \" Enter Ticket\" }} type=\"number\" value={this.state.ticketTo\n                                                            } onChange={this.handleChangeTicketTo}></TagsInput>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr checkboxAdjust\">\n                                                        <div onClick={this.changeIncludeDefaultPropertyTicketTo} >\n                                                            <input\n                                                                type=\"radio\" id=\"includeTicketTo\" name=\"includeTicketTo\" checked={this.state.includeTicketTo} />\n                                                            <span className=\"accnt \">Include</span>\n\n                                                        </div>\n                                                    </td>\n                                                    <td className=\"b-clr checkboxAdjust text-center\">\n                                                        <div onClick={this.changeExcludeDefaultPropertyTicketTo} >\n                                                            <input type=\"radio\" id=\"excludeTicketTo\" name=\"excludeTicketTo\" checked={this.state.excludeTicketTo} />\n                                                            <span className=\"accnt \">Exclude</span>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n\n\n                                        {/* <div className=\"text-center\">\n                                            <span > Magic Number :  </span>\n                                        </div>\n                                        <table className=\"table mt20\">\n                                            <tbody>\n\n                                                <tr>\n                                                    <td className=\"b-clr checkboxAdjust\">\n                                                        <div onClick={this.changeIncludeDefaultPropertyTo} >\n                                                            <input\n                                                                type=\"radio\" id=\"includeTo\" name=\"includeTo\" checked={this.state.includeTo} />\n                                                            <span class=\"accnt \">Include</span>\n\n                                                        </div>\n                                                    </td>\n                                                    <td className=\"b-clr checkboxAdjust\">\n                                                        <div onClick={this.changeExcludeDefaultPropertyTo} >\n                                                            <input type=\"radio\" id=\"excludeTo\" name=\"excludeTo\" checked={this.state.excludeTo} />\n                                                            <span class=\"accnt \">Exclude</span>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                        <div>\n\n                                            {this.state.showMagicNumberTo === true ?\n                                                <div className=\"b-clr magicnumber\" style={{}}>\n                                                    <TagsInput\n                                                        onValidationReject={() => console.log('rejected')}\n                                                        validationRegex={/^[0-9]*$/}\n                                                        inputProps={{ placeholder: this.state.magicNumber.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumberTo\n                                                        } onChange={this.handleChangeMagicNumberTo}></TagsInput>\n                                                </div> : null}\n                                        </div>\n\n                                        <div className=\"text-center\">\n                                                <span > Ticket  </span>\n                                            </div>\n                                            <table className=\"table mt20\">\n                                                <tbody>\n\n                                                    <tr>\n                                                        <td className=\"b-clr checkboxAdjust\">\n                                                            <div onClick={this.changeIncludeDefaultPropertyTicketTo} >\n                                                                <input\n                                                                    type=\"radio\" id=\"includeTicketTo\" name=\"includeTicketTo\" checked={this.state.includeTicketTo} />\n                                                                <span className=\"accnt \">Include</span>\n\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"b-clr checkboxAdjust text-center\">\n                                                            <div onClick={this.changeExcludeDefaultPropertyTicketTo} >\n                                                                <input type=\"radio\" id=\"excludeTicketTo\" name=\"excludeTicketTo\" checked={this.state.excludeTicketTo} />\n                                                                <span className=\"accnt \">Exclude</span>\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n                                            <div>\n\n                                                {this.state.showTicketTo === true ?\n                                                    <div className=\"b-clr magicnumber\" style={{}}>\n                                                        <TagsInput\n                                                            onValidationReject={() => console.log('rejected')}\n                                                            validationRegex={/^[0-9]*$/}\n                                                            inputProps={{ placeholder: this.state.ticketTo.length > 0 ? \"\" : \" Enter Ticket\" }} type=\"number\" value={this.state.ticketTo\n                                                            } onChange={this.handleChangeTicketTo}></TagsInput>\n                                                    </div> : null}\n                                            </div> */}\n                                    </div>\n                                </Col>\n                            </Row>\n                            <hr></hr>\n                            <div className=\"chceckbox\">\n\n                                <label class=\"checkbox-inline\"><input type=\"checkbox\" checked={this.state.showCommission} onChange={this.handeChangeShowCommission} /><b>Add Commission</b></label>\n                            </div>\n\n\n\n                            {this.state.showCommission &&\n                                <div className=\"center-com d-flex\">\n                                    <div className=\"com\">\n                                        <h3 style={{ fontWeight: 'bold' }} data-tip=\"Commission\">Commission</h3>\n                                        <ReactTooltip />\n\n                                    </div>\n                                    <table className=\"table mt20\">\n\n                                        <tbody>\n                                            <tr>\n\n                                                <td className=\"b-clr \">\n                                                    <span className=\"accnt\"> Account :</span>\n                                                </td>\n                                                <td className=\"b-clr text-center\" style={{ width: '50%' }}>\n                                                    {this.renderCommissionAccount()}\n                                                    {(this.state.error == 'selectedCommissionAccount') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account </p>}\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span className=\"accnt\">From </span>\n                                                </td>\n                                                <td className=\"b-clr text-center datepicker_filter\">\n                                                    <DatePicker\n                                                        selected={this.state.startDateComm}\n                                                        onChange={this.handleChangeDateComm}\n                                                        isClearable\n                                                        placeholderText=\"dd/mm/yyyy\"\n                                                        dateFormat=\"dd/MM/yyyy\"\n                                                        startDate={this.state.startDateComm}\n                                                        endDate={this.state.endDateComm}\n                                                        strictParsing\n                                                    />\n                                                    {this.state.error == \"startDateComm\" && (\n                                                        <p style={{ color: \"red\", fontSize: \"13px\" }}>\n                                                            *Please Select Start Date\n                                                        </p>\n                                                    )}\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span className=\"accnt\">To </span>\n                                                </td>\n                                                <td className=\"b-clr text-center datepicker_filter\">\n                                                    <DatePicker\n                                                        selected={this.state.endDateComm}\n                                                        onChange={this.handleEndDateComm}\n                                                        isClearable\n                                                        placeholderText=\"dd/mm/yyyy\"\n                                                        dateFormat=\"dd/MM/yyyy\"\n                                                        startDate={this.state.startDateComm}\n                                                        endDate={this.state.endDateComm}\n                                                    />\n                                                    {this.state.error == \"enddatecomm\" && (\n                                                        <p style={{ color: \"red\", fontSize: \"13px\" }}>\n                                                            * Please ensure that the End Date is greater\n                                                            than the Start Date.\n                                                        </p>\n                                                    )}\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span className=\"accnt\">Magic Number </span>\n                                                </td>\n                                                <td\n                                                    className=\"b-clr text-center\"\n                                                    style={{ width: \"40%\" }}\n                                                >\n                                                    <TagsInput\n                                                        onValidationReject={() =>\n                                                            console.log(\"rejected\")\n                                                        }\n                                                        validationRegex={/^[0-9]*$/}\n                                                        inputProps={{\n                                                            placeholder:\n                                                                this.state.comm_magicNumber.length > 0\n                                                                    ? \"\"\n                                                                    : \" Enter Magic Number\",\n                                                        }}\n                                                        type=\"number\"\n                                                        value={this.state.comm_magicNumber}\n                                                        onChange={this.handleChangeMagicNumberComm}\n                                                    ></TagsInput>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr dataAdjust\">\n                                                    <div\n                                                        onClick={this.changeIncludeDefaultPropertyComm}\n                                                    >\n                                                        <input\n                                                            type=\"radio\"\n                                                            id=\"includecomm\"\n                                                            name=\"includecomm\"\n                                                            checked={this.state.includeComm}\n                                                        />\n                                                        <span className=\"accnt \">Include</span>\n                                                    </div>\n                                                </td>\n                                                <td className=\"b-clr text-center\">\n                                                    <div\n                                                        onClick={this.changeExcludeDefaultPropertyComm}\n                                                    >\n                                                        <input\n                                                            type=\"radio\"\n                                                            id=\"excludeComm\"\n                                                            name=\"excludeComm\"\n                                                            checked={this.state.excludeComm}\n                                                        />\n                                                        <span className=\"accnt \">Exclude</span>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n\n                            }\n                            <div className=\"save_button_filter\">\n                                <Button className=\"btn-primary savebutton\" variant=\"primary\" size=\"lg\" block onClick={(e) => this.formDataSubmit(e)}>\n                                    <b>Update</b>\n                                </Button>\n                            </div>\n                        </form>\n                    </div>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default FilterEdite;\n","import React, { Component } from \"react\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\nimport ReactTooltip from 'react-tooltip';\nvar moment = require(\"moment\");\n\nclass FilterDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      autoSyncClose: false,\n      exclude: false,\n      include: false,\n      excludeTo: false,\n      includeTo: false,\n      excludeTicket: false,\n      includeTicket: false,\n      excludeTicketTo: false,\n      includeTicketTo: false,\n      showMagicNumberFrom: false,\n      showMagicNumberTo: false,\n      showTicketFrom: false,\n      showTicketTo: false,\n      includeComm: false,\n      excludeComm: false,\n      showMagicNumberComm: false,\n    };\n  }\n  crossClick(e) {\n    e.preventDefault();\n    this.props.onHide();\n  }\n\n  componentDidMount() {\n    let data = this.props.data;\n    this.setState({\n      autoSyncClose: data.auto_close == 1 ? true : false,\n      include: data.from_include_exclude_status == 1 ? true : false,\n      exclude: data.from_include_exclude_status == 2 ? true : false,\n      includeTo: data.to_include_exclude_status == 1 ? true : false,\n      excludeTo: data.to_include_exclude_status == 2 ? true : false,\n      includeComm: data.comm_include_exclude_status == 1 ? true : false,\n      excludeComm: data.comm_include_exclude_status == 2 ? true : false,\n      showMagicNumberComm: data.comm_include_exclude_status !== 0 ? true : false,\n      includeTicket:\n        data.from_include_exclude_status_ticket == 1 ? true : false,\n      excludeTicket:\n        data.from_include_exclude_status_ticket == 2 ? true : false,\n      includeTicketTo:\n        data.to_include_exclude_status_ticket == 1 ? true : false,\n      excludeTicketTo:\n        data.to_include_exclude_status_ticket == 2 ? true : false,\n      showMagicNumberFrom:\n        data.from_include_exclude_status !== 0 ? true : false,\n      showMagicNumberTo: data.to_include_exclude_status !== 0 ? true : false,\n      showTicketFrom:\n        data.from_include_exclude_status_ticket !== 0 ? true : false,\n      showTicketTo: data.to_include_exclude_status_ticket !== 0 ? true : false,\n    });\n  }\n\n  // componentWillMount = () => {\n  //     console.log(this.props,'props..................');\n  // }\n\n  render() {\n    let data = this.props.data;\n    console.log(data);\n    let frm_ticket = data.from_ticket !== \"\" && JSON.parse(data.from_ticket);\n    let to_ticket = data.to_ticket !== \"\" && JSON.parse(data.to_ticket);\n    let frm_magic =\n      data.from_magic_number !== \"\" && JSON.parse(data.from_magic_number);\n    let to_magic =\n      data.to_magic_number !== \"\" && JSON.parse(data.to_magic_number);\n    let comm_magic_number = data.comm_magic_number !== \"\" && JSON.parse(data.comm_magic_number);\n    let from_symbol = JSON.parse(data.from_symbols);\n    let to_symbol = JSON.parse(data.to_symbols);\n    from_symbol = from_symbol.join(\", \");\n    to_symbol = to_symbol.join(\", \");\n    return (\n      <div className=\"content\">\n        <Grid fluid>\n          <div className=\"symbol-box\">\n            <div className=\"cross_div\">\n              <a onClick={(e) => this.crossClick(e)}>\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n              </a>\n            </div>\n            <div className=\"detail-text\">\n              <h3> {data.profile_name} </h3>\n            </div>\n            <div className=\"synclose\">\n              <label className=\"checkbox-inline\">\n                <input\n                  type=\"checkbox\"\n                  checked={this.state.autoSyncClose}\n                  name=\"changeAutoSync\"\n                />\n                <b>Auto Sync Close</b>\n              </label>\n            </div>\n            <Row>\n              <Col md={6}>\n                <div className=\"card\">\n                  <div\n                    className=\"detail_account\"\n                    style={{ padding: \"10px 20px 0px\" }}\n                  >\n                    <span style={{ fontWeight: \"bold\" }}>Account A</span>\n                  </div>\n                  <table className=\"table mt20\">\n                    <tbody>\n                      <tr>\n                        <td className=\"b-clr\">\n                          <span>Account :</span>\n                        </td>\n\n                        <td\n                          className=\"b-clr text-center\"\n                          style={{ width: \"50%\" }}\n                        >\n                          {data.accountFromInfo[0].login}\n                        </td>\n                      </tr>\n                      <tr>\n                        <td className=\"b-clr \">\n                          <span>From : </span>\n                        </td>\n                        <td className=\"b-clr text-center datepicker_filter\">\n                          {moment(data.startdateFrom).format(\"DD/MM/YYYY\")}\n                        </td>\n                      </tr>\n                      <tr>\n                        <td className=\"b-clr \">\n                          <span>To : </span>\n                        </td>\n                        <td className=\"b-clr text-center datepicker_filter\">\n                          {data.enddateFrom !== null\n                            ? moment(data.enddateFrom).format(\"DD/MM/YYYY\")\n                            : \"-\"}\n                        </td>\n                      </tr>\n                      <tr>\n                        <td className=\"b-clr \">\n                          <span>Symbol : </span>\n                        </td>\n                        <td\n                          className=\"b-clr text-center\"\n                          style={{ width: \"50%\" }}\n                        >\n                          {from_symbol}\n                        </td>\n                      </tr>\n                      {this.state.showMagicNumberFrom && (\n                        <>\n                          <tr>\n                            <td className=\"b-clr \">\n                              <span>Magic Number : </span>\n                            </td>\n\n                            <td\n                              className=\"b-clr text-center\"\n                              style={{ width: \"50%\" }}\n                            >\n                              <div\n                                className=\"row\"\n                                style={{\n                                  width: \"100%\",\n                                  display: \"flex\",\n                                  flexWrap: \"wrap\",\n                                }}\n                              >\n                                {frm_magic &&\n                                  frm_magic.map((item, index) => (\n                                    <div key={index} className=\"tags-all\">\n                                      {item}\n                                    </div>\n                                  ))}\n                              </div>{\" \"}\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"b-clr dataAdjust\">\n                              <div onClick={this.changeIncludeDefaultProperty}>\n                                <input\n                                  type=\"radio\"\n                                  id=\"include\"\n                                  name=\"include\"\n                                  checked={this.state.include}\n                                />\n                                <span className=\"accnt \">Include</span>\n                              </div>\n                            </td>\n                            <td className=\"b-clr \">\n                              <div onClick={this.changeExcludeDefaultProperty}>\n                                <input\n                                  type=\"radio\"\n                                  id=\"exclude\"\n                                  name=\"exclude\"\n                                  checked={this.state.exclude}\n                                />\n                                <span className=\"accnt \">Exclude</span>\n                              </div>\n                            </td>\n                          </tr>\n                        </>\n                      )}\n                      {this.state.showTicketFrom && (\n                        <>\n                          <tr>\n                            <td className=\"b-clr \">\n                              <span>Ticket : </span>\n                            </td>\n\n                            <td\n                              className=\"b-clr text-center\"\n                              style={{ width: \"50%\" }}\n                            >\n                              <div\n                                className=\"row\"\n                                style={{\n                                  width: \"100%\",\n                                  display: \"flex\",\n                                  flexWrap: \"wrap\",\n                                }}\n                              >\n                                {frm_ticket &&\n                                  frm_ticket.map((item, index) => (\n                                    <div key={index} className=\"tags-all\">\n                                      {item}\n                                    </div>\n                                  ))}\n                              </div>{\" \"}\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"b-clr dataAdjust\">\n                              <div\n                                onClick={\n                                  this.changeIncludeDefaultPropertyTicket\n                                }\n                              >\n                                <input\n                                  type=\"radio\"\n                                  id=\"includeTicket\"\n                                  name=\"includeTicket\"\n                                  checked={this.state.includeTicket}\n                                />\n                                <span className=\"accnt \">Include</span>\n                              </div>\n                            </td>\n                            <td className=\"b-clr \">\n                              <div\n                                onClick={\n                                  this.changeExcludeDefaultPropertyTicket\n                                }\n                              >\n                                <input\n                                  type=\"radio\"\n                                  id=\"excludeTicket\"\n                                  name=\"excludeTicket\"\n                                  checked={this.state.excludeTicket}\n                                />\n                                <span className=\"accnt \">Exclude</span>\n                              </div>\n                            </td>\n                          </tr>\n                        </>\n                      )}\n                    </tbody>\n                  </table>\n                </div>\n              </Col>\n              <Col md={6}>\n                <div className=\"card\">\n                  <div\n                    className=\"detail_account\"\n                    style={{ padding: \"10px 20px 0px\" }}\n                  >\n                    <span style={{ fontWeight: \"bold\" }}>Account B</span>\n                  </div>\n\n                  <table className=\"table mt20\">\n                    <tbody>\n                      <tr>\n                        <td className=\"b-clr \">\n                          <span>Account :</span>\n                        </td>\n                        <td\n                          className=\"b-clr text-center\"\n                          style={{ width: \"50%\" }}\n                        >\n                          {data.accountToInfo[0].login}\n                        </td>\n                      </tr>\n                      <tr>\n                        <td className=\"b-clr \">\n                          <span>From : </span>\n                        </td>\n                        <td className=\"b-clr text-center datepicker_filter\">\n                          {moment(data.startdateTo).format(\"DD/MM/YYYY\")}\n                        </td>\n                      </tr>\n                      <tr>\n                        <td className=\"b-clr \">\n                          <span>To : </span>\n                        </td>\n                        <td className=\"b-clr text-center datepicker_filter\">\n                          {data.enddateTo != null\n                            ? moment(data.enddateTo).format(\"DD/MM/YYYY\")\n                            : \"-\"}\n                        </td>\n                      </tr>\n                      <tr>\n                        <td className=\"b-clr\">\n                          <span>Symbol : </span>\n                        </td>\n                        <td\n                          className=\"b-clr text-center\"\n                          style={{ width: \"50%\" }}\n                        >\n                          {to_symbol}\n                        </td>\n                      </tr>\n                      {this.state.showMagicNumberTo && (\n                        <>\n                          <tr>\n                            <td className=\"b-clr\">\n                              <span>Magic Number : </span>\n                            </td>\n                            <td\n                              className=\"b-clr text-center\"\n                              style={{ width: \"50%\" }}\n                            >\n                              <div\n                                className=\"row\"\n                                style={{\n                                  width: \"100%\",\n                                  display: \"flex\",\n                                  flexWrap: \"wrap\",\n                                }}\n                              >\n                                {to_magic &&\n                                  to_magic.map((item, index) => (\n                                    <div key={index} className=\"tags-all\">\n                                      {item}\n                                    </div>\n                                  ))}\n                              </div>{\" \"}\n                            </td>\n                          </tr>\n\n                          <tr>\n                            <td className=\"b-clr checkboxAdjust\">\n                              <div\n                                onClick={this.changeIncludeDefaultPropertyTo}\n                              >\n                                <input\n                                  type=\"radio\"\n                                  id=\"includeTo\"\n                                  name=\"includeTO\"\n                                  checked={this.state.includeTo}\n                                />\n                                <span className=\"accnt \">Include</span>\n                              </div>\n                            </td>\n                            <td className=\"b-clr checkboxAdjust\">\n                              <div\n                                onClick={this.changeExcludeDefaultPropertyTo}\n                              >\n                                <input\n                                  type=\"radio\"\n                                  id=\"exclude\"\n                                  name=\"exclude\"\n                                  checked={this.state.excludeTo}\n                                />\n                                <span className=\"accnt \">Exclude</span>\n                              </div>\n                            </td>\n                          </tr>\n                        </>\n                      )}\n                      {this.state.showTicketTo && (\n                        <>\n                          <tr>\n                            <td className=\"b-clr\">\n                              <span>Ticket : </span>\n                            </td>\n                            <td\n                              className=\"b-clr text-center\"\n                              style={{ width: \"50%\" }}\n                            >\n                              <div\n                                className=\"row\"\n                                style={{\n                                  width: \"100%\",\n                                  display: \"flex\",\n                                  flexWrap: \"wrap\",\n                                }}\n                              >\n                                {to_ticket &&\n                                  to_ticket.map((item, index) => (\n                                    <div key={index} className=\"tags-all\">\n                                      {item}\n                                    </div>\n                                  ))}\n                              </div>\n                            </td>\n                          </tr>\n\n                          <tr>\n                            <td className=\"b-clr checkboxAdjust\">\n                              <div\n                                onClick={\n                                  this.changeIncludeDefaultPropertyTicketTo\n                                }\n                              >\n                                <input\n                                  type=\"radio\"\n                                  id=\"includeTicketTo\"\n                                  name=\"includeTicketTo\"\n                                  checked={this.state.includeTicketTo}\n                                />\n                                <span className=\"accnt \">Include</span>\n                              </div>\n                            </td>\n                            <td className=\"b-clr checkboxAdjust\">\n                              <div\n                                onClick={\n                                  this.changeExcludeDefaultPropertyTicketTo\n                                }\n                              >\n                                <input\n                                  type=\"radio\"\n                                  id=\"excludeTicketTo\"\n                                  name=\"excludeTicketTo\"\n                                  checked={this.state.excludeTicketTo}\n                                />\n                                <span className=\"accnt \">Exclude</span>\n                              </div>\n                            </td>\n                          </tr>\n                        </>\n                      )}\n                    </tbody>\n                  </table>\n                </div>\n              </Col>\n              {data.commission_acount_id !== 0 && (\n                <Col md={12}>\n                  <div className=\"card bottom\">\n                    <div\n                      className=\"detail_account\"\n                      style={{ padding: \"10px 20px 0px\" }}\n                    >\n                      <h3 style={{ fontWeight: \"bold\" }} data-tip=\"Commission\">Commission</h3>\n                      <ReactTooltip />\n                    </div>\n                    <table className=\"table mt20\">\n                      <tbody>\n                        <tr>\n                          <td\n                            className=\"b-clr text-center\"\n                            style={{ width: \"50%\" }}\n                          >\n                            <span>Account :</span>\n                          </td>\n                          <td\n                            className=\"b-clr text-center\"\n                            style={{ width: \"50%\" }}\n                          >\n                            {data.accountCommissionInfo[0].login}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td className=\"b-clr text-center\" style={{ width: \"50%\" }}>\n                            <span>From : </span>\n                          </td>\n                          <td className=\"b-clr text-center datepicker_filter\" style={{ width: \"50%\" }}>\n                            {moment(data.startdateComm).format(\"DD/MM/YYYY\")}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td className=\"b-clr text-center\" style={{ width: \"50%\" }}>\n                            <span>To : </span>\n                          </td>\n                          <td className=\"b-clr text-center datepicker_filter\" style={{ width: \"50%\" }}>\n                            {data.enddateComm != null\n                              ? moment(data.enddateComm).format(\"DD/MM/YYYY\")\n                              : \"-\"}\n                          </td>\n                        </tr>\n                        {this.state.showMagicNumberComm && (\n                          <>\n                            <tr>\n                              <td className=\"b-clr text-center\" style={{ width: \"50%\" }}>\n                                <span>Magic Number : </span>\n                              </td>\n                              <td\n                                className=\"b-clr text-center\"\n                                style={{ width: \"50%\" }}\n                              >\n                                <div\n                                  className=\"row\"\n                                  style={{\n                                    width: \"100%\",\n                                    display: \"flex\",\n                                    flexWrap: \"wrap\",\n                                    justifyContent: \"center\"\n                                  }}\n                                >\n                                  {comm_magic_number &&\n                                    comm_magic_number.map((item, index) => (\n                                      <div key={index} className=\"tags-all\">\n                                        {item}\n                                      </div>\n                                    ))}\n                                </div>{\" \"}\n                              </td>\n                            </tr>\n                            <tr>\n                              <td className=\"b-clr text-center dataAdjust\">\n                                <div onClick={this.changeIncludeDefaultProperty}>\n                                  <input\n                                    type=\"radio\"\n                                    id=\"includeComm\"\n                                    name=\"includeComm\"\n                                    checked={this.state.includeComm}\n                                  />\n                                  <span className=\"accnt \">Include</span>\n                                </div>\n                              </td>\n                              <td className=\"b-clr text-center\">\n                                <div onClick={this.changeExcludeDefaultProperty}>\n                                  <input\n                                    type=\"radio\"\n                                    id=\"excludeComm\"\n                                    name=\"excludeComm\"\n                                    checked={this.state.excludeComm}\n                                  />\n                                  <span className=\"accnt \">Exclude</span>\n                                </div>\n                              </td>\n                            </tr>\n                          </>\n                        )}\n                      </tbody>\n                    </table>\n                  </div>\n                </Col>\n              )}\n            </Row>\n          </div>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default FilterDetail;\n","import React, { Component } from \"react\";\nimport \"react-calendar/dist/Calendar.css\";\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\nimport Innerfilter from \"../filter/innerfilter\";\nimport FilterEdite from \"../filter/filteredit\";\nimport FilterDetail from \"../filter/filterdetail\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport config from \"../../constant/config.js\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\nimport { api } from \"api\";\nimport ReactPaginate from \"react-paginate\";\nimport myInitObject from \"../../api\";\n\nconst axios = require(\"axios\");\nvar moment = require(\"moment\");\n\nclass Filterprofile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Innerfilter: false,\n      filter: true,\n      filterData: [],\n      deleteData: [],\n      editeData: [],\n      showDelete: false,\n      showEdit: false,\n      detailForm: false,\n      detailData: [],\n      count: \"\",\n      pages: \"\",\n      page: 1,\n      dateTime:'',\n    };\n\n    // this.handleDropdownChange = this.handleDropdownChange.bind(this);\n  }\n  fetchfilterdata() {\n    let token = JSON.parse(localStorage.getItem(\"accessToken\"));\n    let self = this;\n    axios\n      .get(config.baseurl + `/filter/fetchfilterdata?page=${self.state.page}`, {\n        headers: { \"x-access-token\": token },\n      })\n      .then(function (response) {\n        if (response.status == 200) {\n          self.setState({\n            filterData: response.data.rows,\n            count: response.data.count,\n            pages: response.data.pages,\n          });\n        }\n      });\n  }\n  handlePageClick = (data) => {\n    this.setState({ page: data.selected + 1 }, () => {\n      this.fectheAllAccount(this.state.page);\n    });\n  };\n  showInnerfilter = () => {\n    this.setState({ Innerfilter: true, filter: false });\n  };\n  componentDidMount() {\n    this.fetchfilterdata();\n    setInterval(() => {\n      if (myInitObject.responsLUT === undefined) {\n        console.log(\"no data\");\n      } else {\n        this.setState({\n          //last update time\n          dateTime: myInitObject.fetchLastUpdatedTime.filteredInfoTime,\n        });\n      }\n    }, 1000);\n    // let self = this;\n    // axios.get(config.baseurl + '/filter/fetchfilterdata')\n    //     .then(function (response) {\n    //         if (response.status == 200) {\n    //             self.setState({ filterData: response.data.rows })\n    //         }\n    //     }) adfasdfsd\n  }\n\n  createNotification = (profile_name, type) => {\n    NotificationManager.listNotify = [];\n    NotificationManager.info(\"Profile Is Activated !\", profile_name);\n  };\n\n  createWariningNotification = (profile_name, type) => {\n    NotificationManager.listNotify = [];\n    NotificationManager.error(\"Profile Is Deactivated !\", profile_name);\n  };\n\n  activateClick(e, data) {\n    e.preventDefault();\n    let token = JSON.parse(localStorage.getItem(\"accessToken\"));\n    let Data = {\n      id: data.id,\n      status: 1,\n    };\n    let self = this;\n    axios\n      .post(config.baseurl + \"/filter/updatefilterdata\", Data, {\n        headers: { \"x-access-token\": token },\n      })\n      .then(function (response) {\n        if (response.status == 200) {\n          self.fetchfilterdata();\n          self.createNotification(data.profile_name, \"info\");\n          // self.setState({ filterData: response.data.rows })\n          api();\n        }\n      });\n  }\n\n  //  App(){\n  //     const notify = () => toast(\"Wow so easy !\");\n\n  //     return (\n  //       <div>\n  //         <button onClick={notify}>Notify !</button>\n  //         <ToastContainer />\n  //       </div>\n  //     );\n  //   }\n\n  deactivateClick(e, data) {\n    e.preventDefault();\n    let token = JSON.parse(localStorage.getItem(\"accessToken\"));\n    let Data = {\n      id: data.id,\n      status: 0,\n    };\n    let self = this;\n    axios\n      .post(config.baseurl + \"/filter/updatefilterdata\", Data, {\n        headers: { \"x-access-token\": token },\n      })\n      .then(function (response) {\n        if (response.status == 200) {\n          self.fetchfilterdata();\n          self.createWariningNotification(data.profile_name, \"error\");\n          // self.setState({ filterData: response.data.rows })\n        }\n      });\n  }\n  editFilter = (e, data) => {\n    // e.preventDefault();\n    if (this.state.endDate == null || this.state.endDate == \"\") {\n      let newDate = new Date();\n      this.setState({ endDate: newDate });\n      return;\n    }\n    this.setState({ showEdit: true, editeData: data });\n  };\n\n  deleteFilter(e, data) {\n    e.preventDefault();\n    this.setState({ deleteData: data, showDelete: true });\n  }\n  deletepopupClick(e) {\n    e.preventDefault();\n    let Data = {\n      id: this.state.deleteData.id,\n    };\n    let self = this;\n    axios\n      .post(config.baseurl + \"/filter/deletefilter\", Data)\n      .then(function (response) {\n        if (response.status == 200) {\n          self.setState({ showDelete: false });\n          self.fetchfilterdata();\n        }\n      });\n  }\n  deletepopupclose(e) {\n    e.preventDefault();\n    this.setState({ showDelete: false });\n  }\n  viewFilter(e, data) {\n    e.preventDefault();\n\n    this.setState({ detailForm: true, detailData: data });\n  }\n\n  createTr = () => {\n    return (\n      this.state.filterData.length > 0 &&\n      this.state.filterData.map((item, index) => {\n        return (\n          <tr key={index}>\n            <th scope=\"row\">{index + 1}</th>\n            <td>{item.profile_name}</td>\n            <td>{moment(item.createdAt).format(\"DD/MM/YYYY\")}</td>\n            {/* <td>{item.status == 1 ? 'Activated' : 'Deactivated' }</td> */}\n            <td>\n              {JSON.parse(localStorage.getItem(\"currentUser\"))[0].role ===\n              \"user\" ? (\n                <>\n                  {item.user_status == 0 ? (\n                    <div className=\"activate_button pointer\">\n                      <span\n                        className=\"button_interactivate btcolor\"\n                        onClick={(e) => this.activateClick(e, item)}\n                      >\n                        {\" \"}\n                        Activate{\" \"}\n                      </span>{\" \"}\n                    </div>\n                  ) : (\n                    <div className=\"deactivate_button pointer\">\n                      <span\n                        className=\"button_deactivate pointer\"\n                        onClick={(e) => this.deactivateClick(e, item)}\n                      >\n                        Deactivate\n                      </span>\n                    </div>\n                  )}\n                </>\n              ) : (\n                <>\n                  {item.status == 0 ? (\n                    <div className=\"activate_button pointer\">\n                      <span\n                        className=\"button_interactivate btcolor\"\n                        onClick={(e) => this.activateClick(e, item)}\n                      >\n                        {\" \"}\n                        Activate{\" \"}\n                      </span>{\" \"}\n                    </div>\n                  ) : (\n                    <div className=\"deactivate_button pointer\">\n                      <span\n                        className=\"button_deactivate pointer\"\n                        onClick={(e) => this.deactivateClick(e, item)}\n                      >\n                        Deactivate\n                      </span>\n                    </div>\n                  )}\n                </>\n              )}\n            </td>\n            <td>\n              <span onClick={(e) => this.viewFilter(e, item)}>\n                <i className=\"pointer fa fa-eye facolor\" aria-hidden=\"true\"></i>\n              </span>\n              {JSON.parse(localStorage.getItem(\"currentUser\"))[0].role !==\n                \"user\" && (\n                <>\n                  <span onClick={(e) => this.editFilter(e, item)}>\n                    <i\n                      className=\"pointer fa fa-pencil-square-o facolor\"\n                      aria-hidden=\"true\"\n                    ></i>\n                  </span>\n                  {item.status == 0 && (\n                    <span onClick={(e) => this.deleteFilter(e, item)}>\n                      <i\n                        className=\"pointer fa fa-trash facolor\"\n                        aria-hidden=\"true\"\n                      ></i>\n                    </span>\n                  )}\n                </>\n              )}\n            </td>\n            {/* <td>{item.accountToInfo[0].login}</td>\n                    <td>{moment(item.startdateFrom).format(\"DD/MM/YYYY\") + ' - ' + moment(item.enddateFrom).format(\"DD/MM/YYYY\")}</td>\n                    <td>{moment(item.startdateTo).format(\"DD/MM/YYYY\") + ' - ' + moment(item.enddateTo).format(\"DD/MM/YYYY\")}</td>\n                    <td>{item.from_symbols}</td>\n                    <td>{item.to_symbols}</td> */}\n            {/* <td style={{fontWeight:600}}>{item.status == 1 && 'Connected'}</td> */}\n          </tr>\n        );\n      })\n    );\n  };\n\n  render() {\n    let currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\n    return (\n      <>\n        <NotificationContainer />\n        <Row>\n              <div className=\"lastUpdate\">\n                <span> Last Updated : </span>\n                {this.state.dateTime}(UTC){\" \"}\n              </div>\n            </Row>\n        <div className=\"content\">\n          {this.state.detailForm ? (\n            <FilterDetail\n              data={this.state.detailData}\n              show={this.state.detailForm}\n              onHide={() => this.setState({ detailForm: false })}\n            />\n          ) : (\n            <>\n              {this.state.showEdit ? (\n                <FilterEdite\n                  data={this.state.editeData}\n                  show={this.state.showEdit}\n                  // onHide={() => this.setState({ showEdit: false })}\n                  onHide={() =>\n                    this.setState({ showEdit: false }, () =>\n                      this.fetchfilterdata()\n                    )\n                  }\n                />\n              ) : (\n                <>\n                  {!this.state.Innerfilter && (\n                    <Grid fluid>\n                      <div className=\"selection-box\">\n                        <span className=\"terminal-text\"> Profiles </span>\n\n                        {/* <span className=\"icon-style\">\n                            <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\n                        </span> */}\n                        {/* <Link to=\"/innerfilter\">\n                       <button className=\"pull-right\">Add New</button>\n                       </Link> */}\n\n                        {/* <Link to=\"/admin/innerfilter\">\n                       <button className=\"pull-right\">abc</button>\n                       </Link> */}\n                      </div>\n                      {currentUser[0].role !== \"user\" && (\n                        <button\n                          className=\"pull-right filter-add-button\"\n                          onClick={this.showInnerfilter}\n                        >\n                          Add New\n                        </button>\n                      )}\n                    </Grid>\n                  )}\n                  {\n                    this.state.Innerfilter ? (\n                      <Innerfilter\n                        show={this.state.Innerfilter}\n                        onHide={() =>\n                          this.setState({ Innerfilter: false }, () => {\n                            this.fetchfilterdata();\n                          })\n                        }\n                      />\n                    ) : (\n                      <div style={{ background: \"#ffffff\" }}>\n                        <Row>\n                          <Col md={12}>\n                            <div style={{ padding: \"10px\" }}>\n                              <table className=\"table table-striped table-bordered\">\n                                <thead>\n                                  <tr>\n                                    <th scope=\"col\">Sr.No.</th>\n                                    <th scope=\"col\">Profile Name</th>\n                                    <th scope=\"col\">Created At</th>\n                                    <th scope=\"col\">Status</th>\n                                    <th scope=\"col\">Action</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  {/* {this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => { */}\n\n                                  {this.createTr()}\n                                  {/* })} */}\n                                  {/* <tr>\n                                                <th scope=\"row\">2</th>\n                                                <td>Jacob</td>\n                                                <td>Thornton</td>\n                                                <td>5.1.2.9</td>\n                                                <td>Connected</td>\n                                            </tr>\n                                            <tr>\n                                                <th scope=\"row\">3</th>\n                                                <td>Larry</td>\n                                                <td>the Bird</td>\n                                                <td>ab@123</td>\n                                                <td>Connected</td>\n                                            </tr> */}\n                                </tbody>\n                              </table>\n                              <ReactPaginate\n                                previousLabel={\"prev\"}\n                                nextLabel={\"next\"}\n                                breakLabel={\"...\"}\n                                pageCount={this.state.pages}\n                                marginPagesDisplayed={9}\n                                pageRangeDisplayed={9}\n                                onPageChange={(e) => this.handlePageClick(e)}\n                                containerClassName={\"pagination\"}\n                                subContainerClassName={\"pages pagination\"}\n                                activeClassName={\"active\"}\n                              />\n                            </div>\n                          </Col>\n                        </Row>\n                      </div>\n                    )\n                    //     <div className=\"filter_page_table\">\n                    //     <table className=\"table table-striped\">\n                    //         <thead>\n                    //             <tr>\n                    //                 <th scope=\"col\">Sr.No.</th>\n                    //                 <th scope=\"col\">Profile Name</th>\n                    //                 <th scope=\"col\">Created At</th>\n                    //                 <th scope=\"col\">Status</th>\n                    //                 <th scope=\"col\">Action</th>\n                    //             </tr>\n                    //         </thead>\n                    //         <tbody>\n                    //             {this.createTr()}\n                    //         </tbody>\n                    //     </table>\n\n                    // </div>\n                  }\n\n                  {this.state.showDelete && (\n                    <div className=\"delete_popup\">\n                      <h3>Are you sure ?</h3>\n                      <span\n                        className=\"pointer dltbtn\"\n                        onClick={(e) => this.deletepopupClick(e)}\n                      >\n                        Delete\n                      </span>\n                      <span\n                        className=\"pointer closebtn\"\n                        onClick={(e) => this.deletepopupclose(e)}\n                      >\n                        Close\n                      </span>\n                    </div>\n                  )}\n                </>\n              )}\n            </>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Filterprofile;\n","import React from 'react';\nimport { MDBDataTable } from 'mdbreact';\nimport DataTable from \"react-data-table-component\";\nconst moment = require(\"moment\");\n\nconst DatatablePage = (props) => {\n    // let data = {\n          let columns= [\n            {\n                name: 'Date',\n                sortable: true,\n                ignoreRowClick: true,\n                selector: 'date',\n                minWidth: 100,\n                maxWidth: 100,\n                cell: row => moment(row.date).format('L')\n            },\n            {\n                name: 'Login',\n                sortable: true,\n                ignoreRowClick: true,\n                selector: 'account_login',\n                minWidth: 100,\n                maxWidth: 100\n            },\n            {\n                name: 'Symbol',\n                sortable: true,\n                ignoreRowClick: true,\n                selector: 'symbol',\n                minWidth: 100,\n                maxWidth: 100\n            },\n            {\n                name: 'Long',\n                sortable: true,\n                ignoreRowClick: true,\n                selector: 'swap_long',\n                minWidth: 100,\n                maxWidth: 100,\n                cell: row => Number.parseFloat(row.swap_long).toFixed(2)\n            },\n            {\n                name: 'Short',\n                sortable: true,\n                ignoreRowClick: true,\n                selector: 'swap_short',\n                minWidth: 100,\n                maxWidth: 100,\n                cell: row =>  Number.parseFloat(row.swap_short).toFixed(2)\n            },\n            // {\n            //     label: 'Date',\n            //     field: 'date',\n            //     sort: 'asc',\n            //     width: 100\n            // },\n            // {\n            //     label: 'Login',\n            //     field: 'account_login',\n            //     sort: 'asc',\n            //     width: 100\n            // },\n            // {\n            //     label: 'Symbol',\n            //     field: 'symbol',\n            //     sort: 'asc',\n            //     width: 100\n            // },\n            // {\n            //     label: 'Long',\n            //     field: 'swap_long',\n            //     sort: 'asc',\n            //     width: 100\n            // },\n            // {\n            //     label: 'Short',\n            //     field: 'swap_short',\n            //     sort: 'asc',\n            //     width: 100\n            // },\n            \n        ];\n        \n    //     rows: props.data.map(data => {\n    //         data.date = moment(data.date).format('L');\n\n    //         data.swap_long = Number.parseFloat(data.swap_long).toFixed(2);\n    //         data.swap_short = Number.parseFloat(data.swap_short).toFixed(2);\n            \n    //         return data\n    //     }\n    //     )\n    // };\n    // return <MDBDataTable paging={true} responsive bordered small data={data} />;\n    return <DataTable pagination={true} columns={columns} paginationPerPage={10} paginationRowsPerPageOptions={[10]} data={props.data} />\n}\nexport default DatatablePage;","import React, { useState, useEffect } from \"react\";\nimport { Container, Col, Row, Label } from \"reactstrap\";\nimport Loader from \"react-loader-spinner\";\nimport myInitObject from \"../../api\";\nimport DatatablePage from \"views/DatatablePage\";\nimport DatePicker from \"react-datepicker\";\nimport Select from \"react-select\";\n// import \"react-select/dist/react-select.css\";\nconst moment = require(\"moment\");\nconst Swap = () => {\n  const [dailySwap, setdailySwap] = useState([]);\n  const [loading, setloading] = useState([]);\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const [account, setAccount] = useState([]);\n  const [symbol, setSymbol] = useState([]);\n  const [act, setAct] = useState(null);\n  const [sym, setSym] = useState(null);\n  const [newResult, setResult] = useState([]);\n  const [filterResult, setFilterResult] = useState([]);\n  const [filtered, setFiltered] = useState(false);\n  const [dateTime, setdateTime] = useState(\"\");\n  const [activeProfileName, setactiveProfileName] = useState(\"\");\n  const [active, setActive] = useState(false);\n\n  useEffect(() => {\n    setInterval(() => {\n      if (myInitObject.responsLUT &&\n        myInitObject.responsDS &&\n        myInitObject.responsAC &&\n        myInitObject.responsAS &&\n        myInitObject.responsAF === undefined\n      ) {\n        console.log(\"no data\");\n      } else { \n        setdateTime(myInitObject.fetchLastUpdatedTime.filteredInfoTime);\n        setloading(myInitObject.fetchdailyswaps === 0 ? true : false);\n        setdailySwap(myInitObject.fetchdailyswaps.rows);\n        setSymbol(myInitObject.fetchAllSymbol && myInitObject.fetchAllSymbol.rows);\n        setAccount(myInitObject.fetchAllAccounts.rows);\n        setResult(myInitObject.fetchdailyswaps.rows);\n        setactiveProfileName(myInitObject.fetchActivefilterdata.rows[0].profile_name);\n      }\n    }, 1000);\n  }, []);\n\n  const dateFilter = (date, method) => {\n    // console.log(date, 'call');\n    let sd, ed;\n    sd = startDate ? moment(startDate).format(\"MM-DD-yyyy\") : \"\";\n    ed = endDate ? moment(endDate).format(\"MM-DD-yyyy\") : \"\";\n    if (method === \"start\") {\n      // console.log(startDate);\n\n      sd = date && moment(date).format(\"MM-DD-yyyy\") ;\n      setStartDate(date);\n    }\n    if (method === \"end\") {\n      // console.log(startDate);\n      ed = date && moment(date).format(\"MM-DD-yyyy\") ;\n\n      setEndDate(date);\n    }\n    console.log(sd, ed, 'momnt');\n    let result = [];\n    if (filtered === true && filterResult && filterResult.length > 0) {\n      result = filterResult.filter((d) => {\n        let time = moment(d.date).format(\"MM-DD-yyyy\");\n        if (sd == false && ed == false) {\n          return true;\n        } else if (sd != false && ed == false) {\n          return moment(time).isSameOrAfter(sd, \"day\");\n        } else if (sd == false && ed != false) {\n          return moment(time).isSameOrBefore(ed, \"day\");\n        } else if (sd != false && ed != false) {\n          return (\n            moment(time).isSameOrAfter(sd, \"day\") &&\n            moment(time).isSameOrBefore(ed, \"day\")\n          );\n        }\n      });\n      setFilterResult(result);\n      setFiltered(true);\n    }else if(filtered === false || active === true){\n      result = newResult.filter((d) => {\n        let time = moment(d.date).format(\"MM-DD-yyyy\");\n        if (sd == false && ed == false) {\n          return true;\n        } else if (sd != false && ed == false) {\n          return moment(time).isSameOrAfter(sd, \"day\");\n        } else if (sd == false && ed != false) {\n          return moment(time).isSameOrBefore(ed, \"day\");\n        } else if (sd != false && ed != false) {\n          return (\n            moment(time).isSameOrAfter(sd, \"day\") &&\n            moment(time).isSameOrBefore(ed, \"day\")\n          );\n        }\n      });\n      setFilterResult(result);\n      // setFiltered(true);\n      setActive(true)\n    }\n\n  // let result = newResult.filter((d) => {\n  //   let time = moment(d.date).format(\"MM-DD-yyyy\");\n  //   if (sd == false && ed == false) {\n  //     return true;\n  //   } else if (sd != false && ed == false) {\n  //     return moment(time).isSameOrAfter(sd, \"day\");\n  //     // return time >= sd;\n  //   } else if (sd == false && ed != false) {\n  //     return moment(time).isSameOrBefore(ed, \"day\");\n  //     // return time <= ed;\n  //   } else if (sd != false && ed != false) {\n  //     return (\n  //       moment(time).isSameOrAfter(sd, \"day\") &&\n  //       moment(time).isSameOrBefore(ed, \"day\")\n  //     );\n  //   }\n  // });\n    // console.log(sd, ed, result);\n    // setFilterResult(result);\n    // setFiltered(true);\n  };\n  const loginData = (paramsact, ) => {\n    setAct(paramsact);\n    let result = []\n    // console.log(sym && sym.value, 'sym && sym.value');\n    if ((sym != null && sym.value)) {\n      result = newResult.filter((d) => ((d.account_login === String(paramsact.value)) && (d.symbol === sym.value)) && true);\n    } else {\n      result = newResult.filter((d) => d.account_login === String(paramsact.value) && true);\n    }\n    setFilterResult(result);\n    setFiltered(true);\n    setStartDate('')\n    setEndDate('')\n    // console.log(result, 'result96');\n  };\n  const symbolData = (paramssym) => {\n    setSym(paramssym);\n    let result = []\n    // console.log(act && act.value, 'act && act.value');\n    if ((act != null && act.value)) {\n      result = newResult.filter((d) => ((d.account_login === String(act.value)) && (d.symbol === paramssym.value)) && true);\n    } else {\n      result = newResult.filter((d) => d.symbol === paramssym.value && true);\n    }\n    setFilterResult(result);\n    setFiltered(true);\n    setStartDate('')\n    setEndDate('')\n    // console.log(result, 'result101');\n  };\n\n  const SymbolSelect = () => {\n    let options = symbol && symbol.map((data) => {\n      return { value: data.name, label: data.name };\n    });\n\n    return (\n      <Select\n        placeholder=\"Select Symbol...\"\n        value={sym}\n        onChange={symbolData}\n        options={options}\n      />\n    );\n  };\n  const AccountSelect = () => {\n    let options = account.map((data) => {\n      return { value: data.login, label: data.login };\n    });\n\n    return (\n      <Select\n        placeholder=\"Select Account...\"\n        value={act}\n        onChange={loginData}\n        options={options}\n      />\n    );\n  };\n  // console.log(filterResult,  \"filterResult\");\n  return (\n    <Container fluid>\n       <Row className=\"no-margin\">\n            <div className=\"lastUpdate\">\n              <span> Last Updated : </span>\n              {dateTime}(UTC)\n            </div>\n          </Row>\n      <div className=\"pad-y\">\n        <div className=\"symbol-box\" style={{ marginBottom: \"20px\" }}>\n          <div className=\"openpositions\">\n            <span className=\"p-text\">Daily Swaps</span>\n          </div>\n        </div>\n        {loading ? (\n          <Loader\n            type=\"ThreeDots\"\n            color=\"black\"\n            height={100}\n            width={100}\n            style={{ textAlign: \"center\" }}\n          />\n        ) : (\n          <div className=\"symbol-box\">\n            <Row>\n              <Col md={6}>\n                <label>Login</label>\n                {AccountSelect()}\n              </Col>\n              <Col md={6}>\n                <label>Symbol</label>\n                {SymbolSelect()}\n              </Col>\n            </Row>\n            <Row>\n              <Col md={12} className=\"filter-date\">\n                <Label>Start Date</Label>\n                <DatePicker\n                  selected={startDate}\n                  onChange={(date) => {\n                    dateFilter(date, \"start\");\n                  }}\n                  selectsStart\n                  placeholderText=\"mm-dd-yyyy\"\n                  dateFormat=\"MM-dd-yyyy\"\n                  startDate={startDate}\n                  endDate={endDate}\n                />\n                <Label>End Date</Label>\n                <DatePicker\n                  selected={endDate}\n                  onChange={(date) => {\n                    dateFilter(date, \"end\");\n                  }}\n                  selectsEnd\n                  placeholderText=\"mm-dd-yyyy\"\n                  dateFormat=\"MM-dd-yyyy\"\n                  startDate={startDate}\n                  endDate={endDate}\n                  minDate={startDate}\n                />\n              </Col>\n            </Row>\n            <div className=\"custom_dataTable\">\n            <DatatablePage\n              data={(filtered === true||active === true) ? filterResult : newResult}\n            />\n            </div>\n            {/* {filtered === true ? \n            <DatatablePage data={filterResult} /> : \n            <DatatablePage data={newResult} />} */}\n          </div>\n        )}\n      </div>\n    </Container>\n  );\n};\n\nexport default Swap;\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\nimport NumberFormat from \"react-number-format\";\nimport { Collapse } from \"reactstrap\";\nimport TableList from \"../TableList\";\nimport config from \"../../constant/config.js\";\nimport DatatablePage from \"../DatatablePage\";\nimport Loader from \"react-loader-spinner\";\nimport { api } from \"../../api\";\nimport myInitObject from \"../../api\";\nconst axios = require(\"axios\");\nconst moment = require(\"moment\");\nlet dataTOtalcloseFrom = {\n  comissionTotal: 0,\n  lotsTotal: 0,\n  profitTotal: 0,\n  swapTotal: 0,\n};\nlet dataTotalClosetTo = {\n  comissionTotal: 0,\n  lotsTotal: 0,\n  profitTotal: 0,\n  swapTotal: 0,\n};\nlet dataTOtalOpenTo = {\n  comissionTotal: 0,\n  lotsTotal: 0,\n  profitTotal: 0,\n  swapTotal: 0,\n};\nlet dataTOtalOpenFrom = {\n  comissionTotal: 0,\n  lotsTotal: 0,\n  profitTotal: 0,\n  swapTotal: 0,\n};\nexport default function Calculating(props) {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => {\n    setIsOpen(!isOpen);\n    setIsOpen2(false);\n    setIsOpen3(false);\n  };\n  const [isOpen2, setIsOpen2] = useState(true);\n  const [errormassage, setIErrormassage] = useState(false);\n  const toggle2 = () => {\n    setIsOpen2(!isOpen2);\n    setIsOpen(false);\n    setIsOpen3(false);\n  };\n  const [isOpen3, setIsOpen3] = useState(false);\n  const toggle3 = () => {\n    setIsOpen3(!isOpen3);\n    setIsOpen(false);\n    setIsOpen2(false);\n  };\n\n  const [fromAccountId, setFromAccountId] = useState(\"\");\n  const [toAccountId, setToAccountId] = useState(\"\");\n  const [fromOpenTrade, setFromOpenTrade] = useState([]);\n  const [toOpenTrade, setToOpenTrade] = useState([]);\n  const [fromHistoryTrade, setFromHistoryTrade] = useState([]);\n  const [toHistoryTrade, setToHistoryTrade] = useState([]);\n  const [commissionDetails, setCommissionDetails] = useState([]);\n  const [openTotal, setopenTotal] = useState();\n  const [historyTotal, sethistoryTotal] = useState();\n  const [totalOpenAndHistory, settotalOpenAndHistory] = useState();\n  const [commissionValue, setCommissionValue] = useState({});\n  const [dateTime, setdateTime] = useState(\"\");\n  const [customSwap, setcustomSwap] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [allHistoryRecord, setallHistoryRecord] = useState([]);\n  const [activeProfileName, setactiveProfileName] = useState(\"\");\n\n  useEffect(() => {\n    let mounted = true;\n    if(mounted){\n    setInterval(() => {\n      if (\n        (myInitObject.responsLUT &&\n          myInitObject.responsCOT &&\n          myInitObject.responsCHT &&\n          myInitObject.responsCC &&\n          myInitObject.responsHT &&\n          myInitObject.responsAF) === undefined\n      ) {\n        console.log(\"no data\");\n      } else {\n        //calculate open Trade\n        setIErrormassage(\n          myInitObject.calculatingOpenTrade === 0 ? !errormassage : false\n        );\n        setFromAccountId(\n          myInitObject.calculatingOpenTrade.rows.accountFromInfo[0]\n        );\n        setToAccountId(myInitObject.calculatingOpenTrade.rows.accountToInfo[0]);\n        setFromOpenTrade(myInitObject.calculatingOpenTrade.fromOpenOrderInfo);\n        setToOpenTrade(myInitObject.calculatingOpenTrade.toOpenOrderInfo);\n        setopenTotal(myInitObject.calculatingOpenTrade.totalOfOpenOrder);\n        //calculate history trade\n        setLoading(myInitObject.calculatingHistoryTrade ? false : true);\n        setFromHistoryTrade(\n          myInitObject.calculatingHistoryTrade.fromHistoryOrderInfo\n        );\n        setToHistoryTrade(\n          myInitObject.calculatingHistoryTrade.toHistoryOrderInfo\n        );\n        setcustomSwap(myInitObject.calculatingHistoryTrade.customSwapTable);\n        sethistoryTotal(\n          myInitObject.calculatingHistoryTrade.totalOfHistoryOrder\n        );\n        setCommissionDetails(\n          myInitObject.calculatingHistoryTrade.newCommissionRecord\n        );\n        //calculate commission\n        setCommissionValue(myInitObject.calculatingCommission);\n        //last update time\n        setdateTime(myInitObject.fetchLastUpdatedTime.filteredInfoTime);\n        //fetch all history trade\n        setallHistoryRecord(myInitObject.fetchAllHistoryTrade.rows);\n        //fetch status data\n        setactiveProfileName(\n          myInitObject.fetchActivefilterdata.rows[0].profile_name\n        );\n      }\n    }, 1000);\n  }\n    // fetchLastUpdatedTime()\n    // let fromAccountId;\n    // let toAccountId;\n    // let fromOpenTrade;\n    // let toOpenTrade;\n    // let fromHistoryTrade;\n    // let toHistoryTrade;\n    // let openTotal;\n    // let historyTotal;\n    // let commissionDetails;\n    // let customSwap;\n    // axios.get(config.baseurl + '/profilepositions/calculatingOpenTrade')\n    //     .then(function (response) {\n    //         console.log(response, \"response -------------->\")\n    //         if (response.status == 200) {\n    //             if (response.data.rows == 0) {\n\n    //                 setIErrormassage((!errormassage));\n\n    //             }\n    //             fromAccountId = response.data.rows.accountFromInfo[0];\n    //             toAccountId = response.data.rows.accountToInfo[0];\n    //             fromOpenTrade = response.data.fromOpenOrderInfo;\n    //             // fromOpenTrade.map((data) => {\n\n    //             //     data.open_time = moment(data.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')\n    //             // })\n\n    //             toOpenTrade = response.data.toOpenOrderInfo;\n    //             // toOpenTrade.map((data) => {\n    //             //     data.open_time = moment(data.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')\n    //             // })\n    //             // openTotal = response.data.totalOfOpenOrder;\n\n    //             axios.get(config.baseurl + '/profilepositions/calculatingHistoryTrade')\n    //                 .then(function (response) {\n\n    //                     if (response.status == 200) {\n    //                         setLoading(false)\n    //                         fromHistoryTrade = response.data.fromHistoryOrderInfo;\n    //                         toHistoryTrade = response.data.toHistoryOrderInfo;\n    //                         customSwap = response.data.customSwapTable\n\n    //                         console.log(toHistoryTrade, \"toHistoryTrade =========>\")\n    //                         // fromHistoryTrade.map((data) => {\n\n    //                         //     data.open_time = moment(data.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')\n    //                         //     data.close_time = moment(data.close_time).utc().format('DD-MM-YYYY  HH:mm:ss')\n\n    //                         // })\n\n    //                         // toHistoryTrade.map((data) => {\n    //                         //     data.open_time = moment(data.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')\n    //                         //     data.close_time = moment(data.close_time).utc().format('DD-MM-YYYY  HH:mm:ss')\n\n    //                         // })\n    //                         historyTotal = response.data.totalOfHistoryOrder;\n    //                         commissionDetails = response.data.newCommissionRecord\n\n    //                         axios.get(config.baseurl + '/profilepositions/calculatingCommission')\n    //                             .then(function (response) {\n\n    //                                 if (response.status == 200) {\n    //                                     // console.log(\"jhkfkjjkldwkjdwjkdwkbdwjhkwirvbwjh\");\n    //                                     setFromAccountId(fromAccountId);\n    //                                     setToAccountId(toAccountId);\n    //                                     setFromOpenTrade(fromOpenTrade);\n    //                                     setToOpenTrade(toOpenTrade);\n    //                                     setFromHistoryTrade(fromHistoryTrade);\n    //                                     setToHistoryTrade(toHistoryTrade);\n    //                                     setCommissionDetails(commissionDetails);\n    //                                     setopenTotal(openTotal);\n    //                                     sethistoryTotal(historyTotal);\n    //                                     settotalOpenAndHistory(historyTotal + openTotal + response.data.commission);\n    //                                     setCommissionValue(response.data);\n    //                                     setcustomSwap(customSwap)\n\n    //                                 }\n\n    //                             })\n    //                             .catch(function (error) {\n    //                             });\n    //                     }\n    //                 })\n    //                 .catch(function (error) {\n    //                 });\n    //         }\n    //     })\n    //     .catch(function (error) {\n    //     });\n    return () => mounted = false;\n  }, []);\n  // const fetchLastUpdatedTime = () => {\n  //     let self = this;\n  //     axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\n  //         .then(function (response) {\n  //             if (response.status == 200) {\n  //                 setdateTime(response.data.filteredInfoTime)\n  //                 // console.log(self.state.dataOpenTrade.accountFromInfo,\"outyfjhkjh\");\n  //             }\n  //         });\n  // }\n  let total = { openTotal } + { historyTotal };\n\n  let openFromOrderTotal = 0;\n  const fromOpenTradeTr = () => {\n    //1//\n    let lotsTotal = 0;\n    // let open_Total = 0;\n    let comissionTotal = 0;\n    let profitTotal = 0;\n    let swapTotal = 0;\n    let contractSizeTotal = 0;\n    let openpricetotal = 0;\n    // console.log(fromOpenTrade, '1==================<>');\n    return (\n      fromOpenTrade.length > 0 &&\n      fromOpenTrade.map((item, index) => {\n        // customSwap.map((data) => {\n\n        //     if (data.account_id == item.account_id) {\n        //         item.swap = item.swap + data.open_value\n        //     }\n        // })\n        lotsTotal += item.lots;\n        comissionTotal += item.commission;\n        profitTotal += item.profit;\n        openFromOrderTotal = comissionTotal + profitTotal + swapTotal;\n        contractSizeTotal += item.contract_size;\n        openpricetotal += item.open_price;\n        swapTotal += item.swap;\n        // console.log(openOrderTotal,'openOrderTotal----------');\n        {\n          /* open_time,type,symbol,lot,contract_size,open_price,commission,swap,profit */\n        }\n        if (index == fromOpenTrade.length - 1) {\n          let a = {\n            lotsTotal: lotsTotal,\n            comissionTotal: comissionTotal,\n            profitTotal: profitTotal,\n            swapTotal: swapTotal,\n          };\n          dataTOtalOpenFrom = a;\n          // console.log(dataTOtalOpenFrom, 'data==========>>>>');\n          return (\n            <>\n              <tr\n                key={index}\n                className=\" text-center\"\n                style={{\n                  background:\n                    item.order_type == 0\n                      ? \"rgb(189 179 179 / 43%)\"\n                      : item.order_type == 1\n                      ? \"rgb(181 178 178 / 21%)\"\n                      : \" \",\n                }}\n              >\n                <td className=\"text-center colorDarkBlue no-padding \">\n                  {fromAccountId.login}\n                </td>\n                <td>\n                  {moment(item.open_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\n                </td>\n                <td>\n                  {item.order_type == 0\n                    ? \"BUY\"\n                    : item.order_type == 1\n                    ? \"SELL\"\n                    : \"\"}\n                </td>\n                <td>{item.symbol}</td>\n                <td>{item.lots}</td>\n                <td>\n                  {item.order_type == 0\n                    ? item.lots * item.contract_size\n                    : item.order_type == 1\n                    ? -item.lots * item.contract_size\n                    : item.lots * item.contract_size}\n                </td>\n                <td>{item.open_price}</td>\n                <td>{item.commission !== 0 ? item.commission : \"\"}</td>\n                <td>{item.swap !== 0 ? item.swap : \"\"}</td>\n                {/* <td>{item.magic_number !== 0 ? item.magic_number : ''}</td> */}\n                <td>\n                  {item.profit}\n                  {/* {item.margin_currency} */}\n                </td>\n              </tr>\n              <tr className=\"text-center\" key={index + 1}>\n                <td className=\"buycolor\">\n                  <b>Total Buy Positions</b>\n                </td>\n                <td></td>\n\n                <td></td>\n                <td></td>\n                <td>\n                  <b>{lotsTotal.toFixed(2)}</b>\n                </td>\n                <td></td>\n                <td> </td>\n                <td>\n                  <b>{comissionTotal.toFixed(2)}</b>\n                </td>\n                <td>\n                  <b>{swapTotal.toFixed(2)}</b>\n                </td>\n\n                <td>\n                  <b>{profitTotal.toFixed(2)}</b>\n                </td>\n              </tr>\n            </>\n          );\n        } else {\n          return (\n            <tr\n              key={index}\n              className=\"text-center\"\n              style={{\n                background:\n                  item.order_type == 0\n                    ? \"rgb(189 179 179 / 43%)\"\n                    : item.order_type == 1\n                    ? \"rgb(181 178 178 / 21%)\"\n                    : \" \",\n              }}\n            >\n              <td className=\"text-center colorDarkBlue no-padding \">\n                {fromAccountId.login}\n              </td>\n\n              <td>\n                {moment(item.open_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\n              </td>\n              <td>\n                {item.order_type == 0\n                  ? \"BUY\"\n                  : item.order_type == 1\n                  ? \"SELL\"\n                  : \"\"}\n              </td>\n              <td>{item.symbol}</td>\n              <td>{item.lots}</td>\n              <td>\n                {item.order_type == 0\n                  ? item.lots * item.contract_size\n                  : item.order_type == 1\n                  ? -item.lots * item.contract_size\n                  : item.lots * item.contract_size}\n              </td>\n              <td>{item.open_price}</td>\n              <td>{item.commission !== 0 ? item.commission : \"\"}</td>\n              <td>{item.swap !== 0 ? item.swap : \"\"}</td>\n              {/* <td>{item.magic_number !== 0 ? item.magic_number : ''}</td> */}\n              <td>\n                {item.profit}\n                {/* {item.margin_currency} */}\n              </td>\n            </tr>\n          );\n        }\n      })\n    );\n  };\n\n  let openFromHistoryTotal;\n  const fromHistoryTradeTr = () => {\n    //2//\n    let lotsTotal = 0;\n    let comissionTotal = 0;\n    let profitTotal = 0;\n    let swapTotal = 0;\n    let contractSizeTotal = 0;\n    let openpricetotal = 0;\n    let closepricetotal = 0;\n    // console.log(fromHistoryTrade, '2==================<>');\n    return (\n      fromHistoryTrade.length > 0 &&\n      fromHistoryTrade.map((item, index) => {\n        // customSwap.map((data) => {\n\n        //     if (data.account_id == item.account_id) {\n        //         item.swap = item.swap + data.open_value\n        //     }\n        // })\n\n        lotsTotal += item.lots;\n        comissionTotal += item.commission;\n        profitTotal += item.profit;\n        swapTotal += item.swap;\n        openFromHistoryTotal = comissionTotal + profitTotal + swapTotal;\n        contractSizeTotal += item.contract_size;\n        openpricetotal += item.open_price;\n        closepricetotal += item.close_price;\n\n        if (index == fromHistoryTrade.length - 1) {\n          let a = {\n            lotsTotal: lotsTotal,\n            comissionTotal: comissionTotal,\n            profitTotal: profitTotal,\n            swapTotal: swapTotal,\n          };\n          dataTOtalcloseFrom = a;\n          // console.log(dataTOtalcloseFrom, 'data2==========>>>>');\n          return (\n            <>\n              <tr\n                key={index}\n                className=\"text-center\"\n                style={{\n                  background:\n                    item.order_type == 0\n                      ? \"rgb(189 179 179 / 43%)\"\n                      : item.order_type == 1\n                      ? \"rgb(181 178 178 / 21%)\"\n                      : \" \",\n                }}\n              >\n                <td className=\"text-center colorDarkBlue no-padding\">\n                  {fromAccountId.login}\n                </td>\n                <td>\n                  {moment(item.open_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\n                </td>\n                <td>\n                  {item.order_type == 0\n                    ? \"BUY\"\n                    : item.order_type == 1\n                    ? \"SELL\"\n                    : \"\"}\n                </td>\n                <td>{item.symbol}</td>\n                <td>{item.lots}</td>\n                <td>\n                  {item.order_type == 0\n                    ? item.lots * item.contract_size\n                    : item.order_type == 1\n                    ? -item.lots * item.contract_size\n                    : item.lots * item.contract_size}\n                </td>\n                <td>{item.open_price}</td>\n                <td>\n                  {moment(item.close_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\n                </td>\n                <td>{item.close_price}</td>\n\n                <td>{item.commission !== 0 ? item.commission : \"\"}</td>\n                <td>{item.swap !== 0 ? item.swap : \"\"}</td>\n                <td>\n                  {item.profit}\n                  {/* {item.margin_currency} */}\n                </td>\n              </tr>\n              <tr className=\"text-center\" key={index + 1}>\n                <td className=\"buycolor\">\n                  <b>Total Buy Positions</b>\n                </td>\n                <td></td>\n\n                <td></td>\n                <td></td>\n                <td>\n                  <b>{lotsTotal.toFixed(2)}</b>\n                </td>\n                <td></td>\n\n                <td></td>\n                <td></td>\n                <td></td>\n\n                <td>\n                  <b>{comissionTotal.toFixed(2)}</b>\n                </td>\n                <td>\n                  <b>{swapTotal.toFixed(2)}</b>\n                </td>\n                {/* <td></td> */}\n\n                <td>\n                  <b>{profitTotal.toFixed(2)}</b>\n                </td>\n              </tr>\n            </>\n          );\n        } else {\n          return (\n            <tr\n              key={index}\n              className=\"text-center\"\n              style={{\n                background:\n                  item.order_type == 0\n                    ? \"rgb(189 179 179 / 43%)\"\n                    : item.order_type == 1\n                    ? \"rgb(181 178 178 / 21%)\"\n                    : \" \",\n              }}\n            >\n              <td className=\"text-center colorDarkBlue no-padding\">\n                {fromAccountId.login}\n              </td>\n\n              <td>\n                {moment(item.open_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\n              </td>\n              <td>\n                {item.order_type == 0\n                  ? \"BUY\"\n                  : item.order_type == 1\n                  ? \"SELL\"\n                  : \"\"}\n              </td>\n              <td>{item.symbol}</td>\n              <td>{item.lots}</td>\n              <td>\n                {item.order_type == 0\n                  ? item.lots * item.contract_size\n                  : item.order_type == 1\n                  ? -item.lots * item.contract_size\n                  : item.lots * item.contract_size}\n              </td>\n              <td>{item.open_price}</td>\n              <td>\n                {moment(item.close_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\n              </td>\n              <td>{item.close_price}</td>\n\n              <td>{item.commission !== 0 ? item.commission : \"\"}</td>\n              <td>{item.swap !== 0 ? item.swap : \"\"}</td>\n\n              <td>\n                {item.profit}\n                {/* {item.margin_currency} */}\n              </td>\n            </tr>\n          );\n        }\n      })\n    );\n  };\n\n  let openToOrderTotal;\n  const toOpenTradeTr = () => {\n    //3//\n    let lotsTotal = 0;\n    let comissionTotal = 0;\n    let profitTotal = 0;\n    let swapTotal = 0;\n    let contractSizeTotal = 0;\n    let openpricetotal = 0;\n    // console.log(toOpenTrade, '3==================<>');\n    return (\n      toOpenTrade.length > 0 &&\n      toOpenTrade.map((item, index) => {\n        lotsTotal += item.lots;\n        comissionTotal += item.commission;\n        profitTotal += item.profit;\n        swapTotal += item.swap;\n        openToOrderTotal = comissionTotal + profitTotal + swapTotal;\n        contractSizeTotal += item.contract_size;\n        openpricetotal += item.open_price;\n        if (index == toOpenTrade.length - 1) {\n          let a = {\n            lotsTotal: lotsTotal,\n            comissionTotal: comissionTotal,\n            profitTotal: profitTotal,\n            swapTotal: swapTotal,\n          };\n          dataTOtalOpenTo = a;\n          // console.log(dataTOtalOpenTo, 'data3==========>>>>');\n          return (\n            <>\n              <tr\n                key={index}\n                className=\"text-center\"\n                style={{\n                  background:\n                    item.order_type == 0\n                      ? \"rgb(189 179 179 / 43%)\"\n                      : item.order_type == 1\n                      ? \"rgb(181 178 178 / 21%)\"\n                      : \" \",\n                }}\n              >\n                <td className=\"text-center color2 no-padding\">\n                  {toAccountId.login}\n                </td>\n                <td>\n                  {moment(item.open_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\n                </td>\n                <td>\n                  {item.order_type == 0\n                    ? \"BUY\"\n                    : item.order_type == 1\n                    ? \"SELL\"\n                    : \"\"}\n                </td>\n                <td>{item.symbol}</td>\n                <td>{item.lots}</td>\n                <td>\n                  {item.order_type == 0\n                    ? item.lots * item.contract_size\n                    : item.order_type == 1\n                    ? -item.lots * item.contract_size\n                    : item.lots * item.contract_size}\n                </td>\n                <td>{item.open_price}</td>\n                <td>{item.commission !== 0 ? item.commission : \"\"}</td>\n                <td>{item.swap !== 0 ? item.swap : \"\"}</td>\n                {/* <td>{item.magic_number !== 0 ? item.magic_number : ''}</td> */}\n                <td>\n                  {item.profit}\n                  {/* {item.margin_currency} */}\n                </td>\n              </tr>\n              <tr className=\"text-center\" key={index + 1}>\n                <td className=\"sellcolor\">\n                  <b>Total Sell Positions</b>\n                </td>\n                <td></td>\n\n                <td></td>\n                <td></td>\n                <td>\n                  <b>{lotsTotal.toFixed(2)}</b>\n                </td>\n                <td></td>\n\n                <td> </td>\n                <td>\n                  <b>{comissionTotal.toFixed(2)}</b>\n                </td>\n                <td>\n                  <b>{swapTotal.toFixed(2)}</b>\n                </td>\n\n                <td>\n                  <b>{profitTotal.toFixed(2)}</b>\n                </td>\n              </tr>\n            </>\n          );\n        } else {\n          return (\n            <tr\n              key={index}\n              className=\"text-center\"\n              style={{\n                background:\n                  item.order_type == 0\n                    ? \"rgb(189 179 179 / 43%)\"\n                    : item.order_type == 1\n                    ? \"rgb(181 178 178 / 21%)\"\n                    : \" \",\n              }}\n            >\n              <td className=\"text-center color2 no-padding\">\n                {toAccountId.login}\n              </td>\n\n              <td>\n                {moment(item.open_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\n              </td>\n              <td>\n                {item.order_type == 0\n                  ? \"BUY\"\n                  : item.order_type == 1\n                  ? \"SELL\"\n                  : \"\"}\n              </td>\n              <td>{item.symbol}</td>\n              <td>{item.lots}</td>\n              <td>\n                {item.order_type == 0\n                  ? item.lots * item.contract_size\n                  : item.order_type == 1\n                  ? -item.lots * item.contract_size\n                  : item.lots * item.contract_size}\n              </td>\n              <td>{item.open_price}</td>\n              <td>{item.commission !== 0 ? item.commission : \"\"}</td>\n              <td>{item.swap !== 0 ? item.swap : \"\"}</td>\n              {/* <td>{item.magic_number !== 0 ? item.magic_number : ''}</td> */}\n              <td>\n                {item.profit}\n                {/* {item.margin_currency} */}\n              </td>\n            </tr>\n          );\n        }\n      })\n    );\n  };\n  let openToHistoryTotal;\n  const toHistoryTradeTr = () => {\n    //4//\n    let lotsTotal = 0;\n    let comissionTotal = 0;\n    let profitTotal = 0;\n    let swapTotal = 0;\n    let contractSizeTotal = 0;\n    let openpricetotal = 0;\n    let closepricetotal = 0;\n    // console.log(toHistoryTrade, '4==================<>');\n    return (\n      toHistoryTrade.length > 0 &&\n      toHistoryTrade.map((item, index) => {\n        // customSwap.map((data) => {\n\n        //     if (data.account_id == item.account_id) {\n        //         item.swap = item.swap + data.open_value\n        //     }\n        // })\n        lotsTotal += item.lots;\n        comissionTotal += item.commission;\n        profitTotal += item.profit;\n        swapTotal += item.swap;\n        openToHistoryTotal = comissionTotal + profitTotal + swapTotal;\n        contractSizeTotal += item.contract_size;\n        openpricetotal += item.open_price;\n        closepricetotal += item.close_price;\n        if (index == toHistoryTrade.length - 1) {\n          let a = {\n            lotsTotal: lotsTotal,\n            comissionTotal: comissionTotal,\n            profitTotal: profitTotal,\n            swapTotal: swapTotal,\n          };\n          dataTotalClosetTo = a;\n          // console.log(dataTotalClosetTo, 'data4==========>>>>');\n          return (\n            <>\n              <tr\n                key={index}\n                className=\"text-center\"\n                style={{\n                  background:\n                    item.order_type == 0\n                      ? \"rgb(189 179 179 / 43%)\"\n                      : item.order_type == 1\n                      ? \"rgb(181 178 178 / 21%)\"\n                      : \" \",\n                }}\n              >\n                <td className=\"text-center color2 no-padding\">\n                  {toAccountId.login}\n                </td>\n                <td>\n                  {moment(item.open_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\n                </td>\n                <td>\n                  {item.order_type == 0\n                    ? \"BUY\"\n                    : item.order_type == 1\n                    ? \"SELL\"\n                    : \"\"}\n                </td>\n                <td>{item.symbol}</td>\n                <td>{item.lots}</td>\n                <td>\n                  {item.order_type == 0\n                    ? item.lots * item.contract_size\n                    : item.order_type == 1\n                    ? -item.lots * item.contract_size\n                    : item.lots * item.contract_size}\n                </td>\n                <td>{item.open_price}</td>\n                <td>\n                  {moment(item.close_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\n                </td>\n                <td>{item.close_price}</td>\n\n                <td>{item.commission !== 0 ? item.commission : \"\"}</td>\n                <td>{item.swap !== 0 ? item.swap : \"\"}</td>\n\n                <td>\n                  {item.profit}\n                  {/* {item.margin_currency} */}\n                </td>\n              </tr>\n              <tr className=\"text-center\" key={index + 1}>\n                <td className=\"sellcolor\">\n                  <b>Total Sell Positions</b>\n                </td>\n                <td></td>\n\n                <td></td>\n                <td></td>\n                <td>\n                  <b>{lotsTotal.toFixed(2)}</b>\n                </td>\n                <td></td>\n\n                <td></td>\n                <td></td>\n                <td></td>\n\n                <td>\n                  <b>{comissionTotal.toFixed(2)}</b>\n                </td>\n                <td>\n                  <b>{swapTotal.toFixed(2)}</b>\n                </td>\n                {/* <td></td> */}\n\n                <td>\n                  <b>{profitTotal.toFixed(2)}</b>\n                </td>\n              </tr>\n            </>\n          );\n        } else {\n          return (\n            <tr\n              key={index}\n              className=\"text-center\"\n              style={{\n                background:\n                  item.order_type == 0\n                    ? \"rgb(189 179 179 / 43%)\"\n                    : item.order_type == 1\n                    ? \"rgb(181 178 178 / 21%)\"\n                    : \" \",\n              }}\n            >\n              <td className=\"text-center color2 no-padding\">\n                {toAccountId.login}\n              </td>\n\n              <td>\n                {moment(item.open_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\n              </td>\n              <td>\n                {item.order_type == 0\n                  ? \"BUY\"\n                  : item.order_type == 1\n                  ? \"SELL\"\n                  : \"\"}\n              </td>\n              <td>{item.symbol}</td>\n              <td>{item.lots}</td>\n              <td>\n                {item.order_type == 0\n                  ? item.lots * item.contract_size\n                  : item.order_type == 1\n                  ? -item.lots * item.contract_size\n                  : item.lots * item.contract_size}{\" \"}\n              </td>\n              <td>{item.open_price}</td>\n              <td>\n                {moment(item.close_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\n              </td>\n              <td>{item.close_price}</td>\n\n              <td>{item.commission !== 0 ? item.commission : \"\"}</td>\n              <td>{item.swap !== 0 ? item.swap : \"\"}</td>\n              <td>\n                {item.profit}\n                {/* {item.margin_currency} */}\n              </td>\n            </tr>\n          );\n        }\n      })\n    );\n  };\n  let fromclosedata = fromHistoryTrade.map((data) => {\n    return data;\n  });\n  let fromopendata = fromOpenTrade.map((data) => {\n    return data;\n  });\n  let toclosedata = toHistoryTrade.map((data) => {\n    return data;\n  });\n  let toopendata = toOpenTrade.map((data) => {\n    return data;\n  });\n  let newData = [\n    ...fromclosedata,\n    ...fromopendata,\n    ...toclosedata,\n    ...toopendata,\n  ];\n  newData = newData.sort(\n    (a, b) =>\n      new Date(...b.open_time.split(\"/\").reverse()) -\n      new Date(...a.open_time.split(\"/\").reverse())\n  );\n  let newopenData = [...fromopendata, ...toopendata];\n  let newcloseData = [...fromclosedata, ...toclosedata];\n  let totalOpen = newopenData\n    .map((item) => {\n      let openProfit = 0;\n      return (openProfit += item.profit);\n    })\n    .reduce((a, b) => a + b, 0);\n  let totalClose = newcloseData\n    .map((item) => {\n      let closeProfit = 0;\n      return (closeProfit += item.profit);\n    })\n    .reduce((a, b) => a + b, 0);\n  let totalfromCloseSwap = fromclosedata.reduce((a, item) => a + item.swap, 0);\n  let totalfromOpenSwap = fromopendata.reduce((a, item) => a + item.swap, 0);\n  let totalfromCloseCommission = fromclosedata.reduce(\n    (a, item) => a + item.commission,\n    0\n  );\n  let totalfromOpenCommission = fromopendata.reduce(\n    (a, item) => a + item.commission,\n    0\n  );\n  let totaltoCloseSwap = toclosedata.reduce((a, item) => a + item.swap, 0);\n  let totaltoOpenSwap = toopendata.reduce((a, item) => a + item.swap, 0);\n  let totaltoCloseCommission = toclosedata.reduce(\n    (a, item) => a + item.commission,\n    0\n  );\n  let totaltoOpenCommission = toopendata.reduce(\n    (a, item) => a + item.commission,\n    0\n  );\n\n  // console.log(totalOpenCommission, totalCloseCommission, 'historyinfo===============>><');\n  // console.log(fromHistoryTrade, fromOpenTrade, toHistoryTrade, toOpenTrade, '5--------->');\n  // console.log(dataTOtalcloseFrom,\n  //     dataTotalClosetTo,\n  //     dataTOtalOpenTo,\n  //     dataTOtalOpenFrom, 'redata==========<<<<<<<<<<>>>>>>>>>>');\n  // console.log(fromAccountId, toAccountId, fromOpenTrade, toOpenTrade, fromHistoryTrade, toHistoryTrade, commissionValue, 'commissionValue');\n  return (\n    <>\n      {errormassage ? (\n        <div className=\"popup\">\n          <div class=\"card w-75 \">\n            <div class=\"card-body topmargin\">\n              <div class=\" card-text popuptext\" role=\"alert\">\n                {\" \"}\n                Please activate filter profile to view stats. ...\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <>\n          <Row className=\"no-margin\">\n            <div className=\"lastUpdate\">\n              <span> Last Updated : </span>\n              {dateTime}(UTC)\n            </div>\n          </Row>\n          {loading ? (\n            <Loader\n              type=\"ThreeDots\"\n              color=\"black\"\n              height={100}\n              width={100}\n              style={{ textAlign: \"center\" }}\n            />\n          ) : (\n            <div\n              style={{ overflowX: \"hidden\" }}\n              className=\"symbol-box shadoremove\"\n            >\n              <Row>\n                <Col md={12}>\n                  <div className=\"symbol-box\" style={{ marginBottom: \"20px\" }}>\n                    <div className=\"openpositions\">\n                      <span className=\"p-text\">Block view</span>\n                      <span className=\"icon-style\" onClick={toggle2}>\n                        {isOpen2 ? (\n                          <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\n                        ) : (\n                          <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n                        )}\n                      </span>\n                    </div>\n                  </div>\n                  <Collapse isOpen={isOpen2}>\n                    <div className=\"openOrder\" style={{ marginBottom: \"20px\" }}>\n                      <table className=\"table table-responsive table-bordered border-bottom-0 align-th custom-thin\">\n                        <thead>\n                          <tr className=\"text-center thUnset\">\n                            <th>Trades / Pair</th>\n                            <th>Date</th>\n                            <th>Account</th>\n                            <th>Direction</th>\n                            <th>Open Price</th>\n                            <th>Close Price</th>\n                            <th>Trade Quantity</th>\n                            <th>Realized P/L</th>\n                            <th>\n                              Unrealized P/L\n                              {/* <br /><span>L {fromOpenTrade ? fromOpenTrade[0]?.symbol : ''} = {fromOpenTrade ? fromOpenTrade[0]?.last_price : ''} </span> */}\n                              <br />\n                              <span>\n                                {toOpenTrade[0] && (\n                                  <>\n                                    S{\" \"}\n                                    {toOpenTrade ? toOpenTrade[0]?.symbol : \"\"}{\" \"}\n                                    ={\" \"}\n                                    {toOpenTrade\n                                      ? toOpenTrade[0]?.last_price\n                                      : \"\"}{\" \"}\n                                  </>\n                                )}{\" \"}\n                              </span>\n                            </th>\n                          </tr>\n                        </thead>\n                        {newData.length > 0 ? (\n                          <tbody>\n                            {newData.length > 0\n                              ? newData.map((item) => {\n                                  let profitTotal = 0;\n                                  return (\n                                    <tr className=\"text-center\">\n                                      <td>\n                                        {item.order_type === 0 ||\n                                        item.order_type === 1\n                                          ? item.symbol\n                                          : \"\"}\n                                      </td>\n                                      <td>\n                                        {moment(item.open_time)\n                                          .utc()\n                                          .format(\"DD-MM-YYYY  HH:mm:ss\")}\n                                      </td>\n                                      {item.account_id === toAccountId.id ? (\n                                        <td className=\"color2\">\n                                          {toAccountId.alias}\n                                        </td>\n                                      ) : (\n                                        \"\"\n                                      )}\n                                      {item.account_id === fromAccountId.id ? (\n                                        <td className=\"colorDarkBlue\">\n                                          {fromAccountId.alias}\n                                        </td>\n                                      ) : (\n                                        \"\"\n                                      )}\n                                      <td>\n                                        {item.order_type == 0\n                                          ? item.lots\n                                          : item.order_type == 1\n                                          ? \"-\" + item.lots\n                                          : \"\"}\n                                      </td>\n                                      <td>{item.open_price}</td>\n                                      <td>{item.close_price}</td>\n                                      <td>\n                                        <NumberFormat\n                                          value={item.lots * item.contract_size}\n                                          displayType={\"text\"}\n                                          thousandSeparator={true}\n                                          decimalScale={2}\n                                        />{\" \"}\n                                      </td>\n                                      <td>\n                                        {item.open_price && item.close_price\n                                          ? (profitTotal += item.profit)\n                                          : \"\"}\n                                      </td>\n                                      <td>\n                                        {item.open_price && item.close_price\n                                          ? \"\"\n                                          : (profitTotal += item.profit)}\n                                      </td>\n                                    </tr>\n                                  );\n                                })\n                              : \"\"}\n                            {(totalfromCloseCommission !== 0 &&\n                              totalfromOpenCommission !== 0) ||\n                            (totalfromCloseCommission !== 0 &&\n                              totalfromOpenCommission === 0) ||\n                            (totalfromCloseCommission === 0 &&\n                              totalfromOpenCommission !== 0) ? (\n                              <tr className=\"text-center\">\n                                <td>\n                                  <b>Commission</b>\n                                </td>\n                                <td></td>\n                                <td className=\"colorDarkBlue\">\n                                  {fromAccountId.alias}\n                                </td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td>\n                                  <b>{totalfromCloseCommission}</b>\n                                </td>\n                                <td>\n                                  <b>{totalfromOpenCommission}</b>\n                                </td>\n                              </tr>\n                            ) : (\n                              \"\"\n                            )}\n                            {(totaltoCloseCommission !== 0 &&\n                              totaltoOpenCommission !== 0) ||\n                            (totaltoCloseCommission !== 0 &&\n                              totaltoOpenCommission === 0) ||\n                            (totaltoCloseCommission === 0 &&\n                              totaltoOpenCommission !== 0) ? (\n                              <tr className=\"text-center\">\n                                <td>\n                                  <b>\n                                    {totalfromCloseCommission ||\n                                    totalfromOpenCommission\n                                      ? \"\"\n                                      : \"Commission\"}\n                                  </b>\n                                </td>\n                                <td></td>\n                                <td className=\"color2\">{toAccountId.alias}</td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td>\n                                  <b>{totaltoCloseCommission}</b>\n                                </td>\n                                <td>\n                                  <b>{totaltoOpenCommission}</b>\n                                </td>\n                              </tr>\n                            ) : (\n                              \"\"\n                            )}\n                            {(totalfromCloseSwap !== 0 &&\n                              totalfromOpenSwap !== 0) ||\n                            (totalfromCloseSwap !== 0 &&\n                              totalfromOpenSwap === 0) ||\n                            (totalfromCloseSwap === 0 &&\n                              totalfromOpenSwap !== 0) ? (\n                              <tr className=\"text-center\">\n                                <td>\n                                  <b>Swap</b>\n                                </td>\n                                <td></td>\n                                <td className=\"colorDarkBlue\">\n                                  {fromAccountId.alias}\n                                </td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td>\n                                  <b>{totalfromCloseSwap}</b>\n                                </td>\n                                <td>\n                                  <b>{totalfromOpenSwap}</b>\n                                </td>\n                              </tr>\n                            ) : (\n                              \"\"\n                            )}\n                            {(totaltoCloseSwap !== 0 &&\n                              totaltoOpenSwap !== 0) ||\n                            (totaltoCloseSwap !== 0 && totaltoOpenSwap === 0) ||\n                            (totaltoCloseSwap === 0 &&\n                              totaltoOpenSwap !== 0) ? (\n                              <tr className=\"text-center\">\n                                <td>\n                                  <b>\n                                    {totalfromCloseSwap || totalfromOpenSwap\n                                      ? \"\"\n                                      : \"Swap\"}\n                                  </b>\n                                </td>\n                                <td></td>\n                                <td className=\"color2\">{toAccountId.alias}</td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td>\n                                  <b>{totaltoCloseSwap}</b>\n                                </td>\n                                <td>\n                                  <b>{totaltoOpenSwap}</b>\n                                </td>\n                              </tr>\n                            ) : (\n                              \"\"\n                            )}\n                            <tr className=\"text-center\">\n                              <td></td>\n                              <td></td>\n                              <td></td>\n                              <td></td>\n                              <td></td>\n                              <td></td>\n                              <td>\n                                <b>Trading</b>\n                              </td>\n                              <td>\n                                <b>{totalClose}</b>\n                              </td>\n                              <td>\n                                <b>{totalOpen}</b>\n                              </td>\n                            </tr>\n                            <tr className=\"text-center\">\n                              <td></td>\n                              <td></td>\n                              <td></td>\n                              <td></td>\n                              <td></td>\n                              <td></td>\n                              <td>\n                                <b>Comm & Swap</b>\n                              </td>\n                              <td>\n                                <b>\n                                  {totalfromCloseSwap +\n                                    totaltoCloseSwap +\n                                    totalfromCloseCommission +\n                                    totaltoCloseCommission}\n                                </b>\n                              </td>\n                              <td>\n                                <b>\n                                  {totalfromOpenSwap +\n                                    totaltoOpenSwap +\n                                    totalfromOpenCommission +\n                                    totaltoOpenCommission}\n                                </b>\n                              </td>\n                            </tr>\n                            <tr className=\"text-center\">\n                              <td></td>\n                              <td></td>\n                              <td></td>\n                              <td></td>\n                              <td></td>\n                              <td></td>\n                              <td>\n                                <b>Total</b>\n                              </td>\n                              <td>\n                                <b>\n                                  <NumberFormat\n                                    value={historyTotal}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    decimalScale={2}\n                                  />\n                                  {fromAccountId[\n                                    `accounts_details.currency`\n                                  ] === toAccountId[`accounts_details.currency`]\n                                    ? `  ` +\n                                        fromAccountId[\n                                          `accounts_details.currency`\n                                        ] ||\n                                      toAccountId[`accounts_details.currency`]\n                                    : \"\"}\n                                </b>\n                              </td>\n                              <td>\n                                <b>\n                                  <NumberFormat\n                                    value={openTotal}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    decimalScale={2}\n                                  />\n                                  {fromAccountId[\n                                    `accounts_details.currency`\n                                  ] === toAccountId[`accounts_details.currency`]\n                                    ? `  ` +\n                                        fromAccountId[\n                                          `accounts_details.currency`\n                                        ] ||\n                                      toAccountId[`accounts_details.currency`]\n                                    : \"\"}\n                                </b>\n                              </td>\n                            </tr>\n                          </tbody>\n                        ) : (\n                          <tbody className=\"text-center\">\n                            <tr>\n                              <td colSpan=\"9\">No Record Found</td>\n                            </tr>\n                          </tbody>\n                        )}\n                      </table>\n                    </div>\n                    <Row style={{ marginBottom: `20px` }}>\n                      <Col md={12} sm={6}>\n                        <div\n                          className={\n                            historyTotal + openTotal >= 0\n                              ? \"summary-box\"\n                              : \"summary-box-red\"\n                          }\n                        >\n                          {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\n                          {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\n<span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\n\n                          <Col md={12} sm={12}>\n                            <div\n                              className=\"summary-text text-center\"\n                              style={{ fontWeight: 600, color: \"#797979\" }}\n                            >\n                              Unrealized & Realized P/L ({activeProfileName}){\" \"}\n                              {allHistoryRecord.history_info !== 0 && (\n                                <span> + Commission</span>\n                              )}{\" \"}\n                            </div>\n                          </Col>\n                          <Col md={12} sm={12}>\n                            <div\n                              className=\"text-center\"\n                              style={{ fontWeight: \"bold\", fontSize: \"18px\" }}\n                            >\n                              ${\" \"}\n                              <NumberFormat\n                                value={\n                                  allHistoryRecord.history_info !== undefined\n                                    ? historyTotal +\n                                      openTotal +\n                                      allHistoryRecord.history_info\n                                    : historyTotal + openTotal\n                                }\n                                displayType={\"text\"}\n                                thousandSeparator={true}\n                                decimalScale={2}\n                              />\n                              {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\n                            </div>\n                          </Col>\n\n                          <div className=\"clearfix\"></div>\n                        </div>\n                      </Col>\n                    </Row>\n                  </Collapse>\n                </Col>\n              </Row>\n              <Row>\n                <Col md={12} sm={6}>\n                  <div className=\"symbol-box\" style={{ marginBottom: \"20px\" }}>\n                    <div className=\"openpositions\">\n                      <span className=\"p-text\">Table view</span>\n                      <span className=\"icon-style\" onClick={toggle}>\n                        {isOpen ? (\n                          <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\n                        ) : (\n                          <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n                        )}\n                      </span>\n                    </div>\n                  </div>\n                  <Collapse isOpen={isOpen}>\n                    <div style={{ marginBottom: \"20px\" }}>\n                      <div>\n                        <div className=\"symbol-box terminal-head-box\">\n                          <div className=\"openpositions\">\n                            <span className=\"p-text\">\n                              Unrealized Profit/Loss\n                            </span>\n                            <span className=\"icon-style\" onClick={toggle}>\n                              {/* {isOpen ?\n                                                <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\n                                                :\n                                                <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n                                            } */}\n                            </span>\n                          </div>\n                        </div>\n\n                        <div className=\"openOrder\">\n                          {fromOpenTrade && fromOpenTrade.length > 0 ? (\n                            <Row>\n                              <Col md={12}>\n                                {\" \"}\n                                {/*/1/*/}\n                                {/* <div className={'colorDarkBlue , boldText loginCenter'}>{fromAccountId.alias}</div>\n                                                    <span className=\"text-center colorDarkBlue no-padding \"> {fromAccountId.login}</span> */}\n                                <table className=\"table table-responsive table-bordered border-bottom-0 align-th\">\n                                  <thead>\n                                    <tr className=\"text-center thUnset\">\n                                      {/* open_time,type,symbol,lot,contract_size,open_price,commission,swap,profit */}\n                                      <th>Login</th>\n                                      <th>Open Time</th>\n                                      <th scope=\"col\">Type</th>\n\n                                      <th scope=\"col\">symbol</th>\n                                      <th scope=\"col\">lots</th>\n                                      {/* <th scope=\"col\">open_time</th> */}\n                                      <th>Contract size</th>\n                                      <th>Open Price</th>\n\n                                      <th scope=\"col\">commission</th>\n                                      <th scope=\"col\">swap</th>\n                                      {/* <th scope=\"col\">magic_number</th> */}\n                                      <th scope=\"col\">profit</th>\n                                    </tr>\n                                  </thead>\n                                  <tbody>\n                                    {fromOpenTradeTr()}\n                                    {toOpenTrade.length === 0 && (\n                                      <tr className=\"text-center opencolor\">\n                                        <td>\n                                          <b>Total Unrealized</b>\n                                        </td>\n                                        <td></td>\n                                        <td></td>\n                                        <td></td>\n                                        <td>\n                                          <b>\n                                            <NumberFormat\n                                              value={\n                                                dataTOtalOpenFrom.lotsTotal +\n                                                dataTOtalOpenTo.lotsTotal\n                                              }\n                                              displayType={\"text\"}\n                                              thousandSeparator={true}\n                                              decimalScale={2}\n                                            />\n                                          </b>\n                                        </td>\n                                        <td></td>\n                                        <td></td>\n                                        <td>\n                                          <b>\n                                            {dataTOtalOpenFrom.comissionTotal +\n                                              dataTOtalOpenTo.comissionTotal}\n                                          </b>\n                                        </td>\n                                        <td>\n                                          <b>\n                                            {dataTOtalOpenFrom.swapTotal +\n                                              dataTOtalOpenTo.swapTotal}\n                                          </b>\n                                        </td>\n                                        <td>\n                                          <b>\n                                            {dataTOtalOpenFrom.profitTotal +\n                                              dataTOtalOpenTo.profitTotal}\n                                          </b>\n                                        </td>\n                                      </tr>\n                                    )}\n                                  </tbody>\n                                </table>\n                                {toOpenTrade.length === 0 && (\n                                  <div className=\"text-right opencolor pad\">\n                                    <b>\n                                      Total{\" \"}\n                                      {dataTOtalOpenFrom.comissionTotal +\n                                        dataTOtalOpenTo.comissionTotal +\n                                        dataTOtalOpenFrom.swapTotal +\n                                        dataTOtalOpenTo.swapTotal +\n                                        dataTOtalOpenFrom.profitTotal +\n                                        dataTOtalOpenTo.profitTotal}\n                                      {fromAccountId[\n                                        `accounts_details.currency`\n                                      ] ===\n                                      toAccountId[`accounts_details.currency`]\n                                        ? `  ` +\n                                            fromAccountId[\n                                              `accounts_details.currency`\n                                            ] ||\n                                          toAccountId[\n                                            `accounts_details.currency`\n                                          ]\n                                        : \"\"}\n                                    </b>\n                                  </div>\n                                )}\n                              </Col>\n                            </Row>\n                          ) : (\n                            \" \"\n                            // <Col md={12} >\n                            //     <div className=\"card change noRecordCol\"> No Record Found</div>\n                            // </Col>\n                          )}\n\n                          {toOpenTrade && toOpenTrade.length > 0 ? (\n                            <Row>\n                              <Col md={12}>\n                                {\" \"}\n                                {/*3*/}\n                                {/* <div className={'color2 , boldText loginCenter'}>{toAccountId.alias}</div>\n                                                    <span className=\"text-center color2 no-padding\">{toAccountId.login}</span> */}\n                                <table class=\"table table-responsive table-bordered border-botttom-0 align-th\">\n                                  <thead>\n                                    <tr className=\"text-center thUnset\">\n                                      {\" \"}\n                                      {/* open_time,type,symbol,lot,contract_size,open_price,close_time,close_price,commission,swap,profit */}\n                                      <th>Login</th>\n                                      <th>Open Time</th>\n                                      <th scope=\"col\">Type</th>\n                                      <th scope=\"col\">symbol</th>\n                                      <th scope=\"col\">lots</th>\n                                      <th>Contract size</th>\n                                      <th>Open Price</th>\n                                      <th scope=\"col\">commission</th>\n                                      <th scope=\"col\">swap</th>\n                                      <th scope=\"col\">profit</th>\n                                    </tr>\n                                  </thead>\n                                  <tbody>\n                                    {toOpenTradeTr()}\n                                    {dataTOtalOpenFrom && dataTOtalOpenTo && (\n                                      <tr className=\"text-center opencolor\">\n                                        <td>\n                                          <b>Total Unrealized</b>\n                                        </td>\n                                        <td></td>\n                                        <td></td>\n                                        <td></td>\n                                        <td>\n                                          <b>\n                                            <NumberFormat\n                                              value={\n                                                dataTOtalOpenFrom.lotsTotal +\n                                                dataTOtalOpenTo.lotsTotal\n                                              }\n                                              displayType={\"text\"}\n                                              thousandSeparator={true}\n                                              decimalScale={2}\n                                            />\n                                          </b>\n                                        </td>\n                                        <td></td>\n                                        <td></td>\n                                        <td>\n                                          <b>\n                                            {dataTOtalOpenFrom.comissionTotal +\n                                              dataTOtalOpenTo.comissionTotal}\n                                          </b>\n                                        </td>\n                                        <td>\n                                          <b>\n                                            {dataTOtalOpenFrom.swapTotal +\n                                              dataTOtalOpenTo.swapTotal}\n                                          </b>\n                                        </td>\n                                        <td>\n                                          <b>\n                                            {dataTOtalOpenFrom.profitTotal +\n                                              dataTOtalOpenTo.profitTotal}\n                                          </b>\n                                        </td>\n                                      </tr>\n                                    )}\n                                  </tbody>\n                                </table>\n                                <div className=\"text-right opencolor pad\">\n                                  <b>\n                                    Total{\" \"}\n                                    {dataTOtalOpenFrom.comissionTotal +\n                                      dataTOtalOpenTo.comissionTotal +\n                                      dataTOtalOpenFrom.swapTotal +\n                                      dataTOtalOpenTo.swapTotal +\n                                      dataTOtalOpenFrom.profitTotal +\n                                      dataTOtalOpenTo.profitTotal}\n                                    {fromAccountId[\n                                      `accounts_details.currency`\n                                    ] ===\n                                    toAccountId[`accounts_details.currency`]\n                                      ? `  ` +\n                                          fromAccountId[\n                                            `accounts_details.currency`\n                                          ] ||\n                                        toAccountId[`accounts_details.currency`]\n                                      : \"\"}\n                                  </b>\n                                </div>\n                              </Col>\n                            </Row>\n                          ) : (\n                            \" \"\n                            // <Col md={12}>\n                            //     <div className=\"card change noRecordCol\"> No Record Found</div>\n                            // </Col>\n                          )}\n                        </div>\n                      </div>\n\n                      <div className=\"symbol-box terminal-head-box topSet\">\n                        <div className=\"openpositions\">\n                          <span className=\"p-text\">Realized Profit/Loss</span>\n                          <span\n                            className=\"icon-style\"\n                            // onClick={toggle2}\n                          >\n                            {/* {isOpen2 ?\n                                            <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\n                                            :\n                                            <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n                                        } */}\n                          </span>\n                        </div>\n                      </div>\n                      <div>\n                        {/* <Collapse isOpen={isOpen2}> */}\n\n                        <div className=\"openOrder\">\n                          {/*2*/}\n                          {fromHistoryTrade.length > 0 ||\n                          toHistoryTrade.length > 0 ? (\n                            <div>\n                              <Row>\n                                {fromHistoryTrade &&\n                                fromHistoryTrade.length > 0 ? (\n                                  <Col md={12}>\n                                    {/* <div className={'colorDarkBlue , boldText loginCenter'}>{fromAccountId.alias}</div>\n                                                            <span className=\"text-center colorDarkBlue no-padding\">{fromAccountId.login}</span> */}\n                                    <table\n                                      style={{ overflowY: \"scroll\" }}\n                                      className=\"table table-responsive table-bordered border-bottom-0 align-th\"\n                                    >\n                                      <thead>\n                                        <tr className=\"text-center thUnset\">\n                                          <th>Login</th>\n\n                                          <th>Open Time</th>\n                                          <th scope=\"col\">Type</th>\n\n                                          <th scope=\"col\">symbol</th>\n                                          <th scope=\"col\">lots</th>\n\n                                          <th>Contract size</th>\n                                          <th>Open Price</th>\n                                          <th>Close Time</th>\n\n                                          <th>Close Price</th>\n\n                                          <th scope=\"col\">commission</th>\n                                          <th scope=\"col\">swap</th>\n\n                                          <th scope=\"col\">profit</th>\n                                        </tr>\n                                      </thead>\n                                      <tbody>\n                                        {fromHistoryTradeTr()}\n                                        {toHistoryTrade.length === 0 && (\n                                          <tr className=\"text-center closecolor\">\n                                            <td>\n                                              <b>Total Realized</b>\n                                            </td>\n                                            <td></td>\n                                            <td></td>\n                                            <td></td>\n                                            <td>\n                                              <b>\n                                                <NumberFormat\n                                                  value={\n                                                    dataTOtalcloseFrom.lotsTotal +\n                                                    dataTotalClosetTo.lotsTotal\n                                                  }\n                                                  displayType={\"text\"}\n                                                  thousandSeparator={true}\n                                                  decimalScale={2}\n                                                />\n                                              </b>\n                                            </td>\n                                            <td></td>\n                                            <td></td>\n                                            <td></td>\n                                            <td></td>\n                                            <td>\n                                              <b>\n                                                {dataTOtalcloseFrom.comissionTotal +\n                                                  dataTotalClosetTo.comissionTotal}\n                                              </b>\n                                            </td>\n                                            <td>\n                                              <b>\n                                                {dataTOtalcloseFrom.swapTotal +\n                                                  dataTotalClosetTo.swapTotal}\n                                              </b>\n                                            </td>\n                                            <td>\n                                              <b>\n                                                {dataTOtalcloseFrom.profitTotal +\n                                                  dataTotalClosetTo.profitTotal}\n                                              </b>\n                                            </td>\n                                          </tr>\n                                        )}\n                                      </tbody>\n                                    </table>\n                                    {toHistoryTrade.length === 0 && (\n                                      <div className=\"text-right closecolor pad\">\n                                        <b>\n                                          Total{\" \"}\n                                          {dataTOtalcloseFrom.comissionTotal +\n                                            dataTotalClosetTo.comissionTotal +\n                                            dataTOtalcloseFrom.swapTotal +\n                                            dataTotalClosetTo.swapTotal +\n                                            dataTOtalcloseFrom.profitTotal +\n                                            dataTotalClosetTo.profitTotal}\n                                          {fromAccountId[\n                                            `accounts_details.currency`\n                                          ] ===\n                                          toAccountId[\n                                            `accounts_details.currency`\n                                          ]\n                                            ? `  ` +\n                                                fromAccountId[\n                                                  `accounts_details.currency`\n                                                ] ||\n                                              toAccountId[\n                                                `accounts_details.currency`\n                                              ]\n                                            : \"\"}\n                                        </b>\n                                      </div>\n                                    )}\n                                  </Col>\n                                ) : (\n                                  \"\"\n                                  // <Col md={12}>\n                                  //     <div className=\"card change noRecordCol\"> No Record Found</div>\n                                  // </Col>\n                                )}\n                              </Row>\n                              {/**4 */}\n                              {toHistoryTrade && toHistoryTrade.length > 0 ? (\n                                <Row>\n                                  <Col md={12}>\n                                    {/* <div className={'color2 , boldText loginCenter'}>{toAccountId.alias}</div>\n                                                                <span className=\"text-center color2 no-padding\">{toAccountId.login}</span> */}\n\n                                    <table className=\"table table-responsive table-bordered border-bottom-0 align-th\">\n                                      <thead>\n                                        <tr className=\"text-center thUnset\">\n                                          <th>Login</th>\n\n                                          <th>Open Time</th>\n                                          <th scope=\"col\">Type</th>\n\n                                          <th scope=\"col\">symbol</th>\n                                          <th scope=\"col\">lots</th>\n\n                                          <th>Contract size</th>\n                                          <th>Open Price</th>\n                                          <th>Close Time</th>\n\n                                          <th>Close Price</th>\n\n                                          <th scope=\"col\">commission</th>\n                                          <th scope=\"col\">swap</th>\n\n                                          <th scope=\"col\">profit</th>\n                                        </tr>\n                                      </thead>\n                                      <tbody>\n                                        {toHistoryTradeTr()}\n                                        {dataTOtalcloseFrom &&\n                                          dataTotalClosetTo && (\n                                            <tr className=\"text-center closecolor\">\n                                              <td>\n                                                <b>Total Realized</b>\n                                              </td>\n                                              <td></td>\n                                              <td></td>\n                                              <td></td>\n                                              <td>\n                                                <b>\n                                                  <NumberFormat\n                                                    value={\n                                                      dataTOtalcloseFrom.lotsTotal +\n                                                      dataTotalClosetTo.lotsTotal\n                                                    }\n                                                    displayType={\"text\"}\n                                                    thousandSeparator={true}\n                                                    decimalScale={2}\n                                                  />\n                                                </b>\n                                              </td>\n                                              <td></td>\n                                              <td></td>\n                                              <td></td>\n                                              <td></td>\n                                              <td>\n                                                <b>\n                                                  {dataTOtalcloseFrom.comissionTotal +\n                                                    dataTotalClosetTo.comissionTotal}\n                                                </b>\n                                              </td>\n                                              <td>\n                                                <b>\n                                                  {dataTOtalcloseFrom.swapTotal +\n                                                    dataTotalClosetTo.swapTotal}\n                                                </b>\n                                              </td>\n\n                                              <td>\n                                                <b>\n                                                  {dataTOtalcloseFrom.profitTotal +\n                                                    dataTotalClosetTo.profitTotal}\n                                                </b>\n                                              </td>\n                                            </tr>\n                                          )}\n                                      </tbody>\n                                    </table>\n                                    <div className=\"text-right closecolor pad\">\n                                      <b>\n                                        Total{\" \"}\n                                        {dataTOtalcloseFrom.comissionTotal +\n                                          dataTotalClosetTo.comissionTotal +\n                                          dataTOtalcloseFrom.swapTotal +\n                                          dataTotalClosetTo.swapTotal +\n                                          dataTOtalcloseFrom.profitTotal +\n                                          dataTotalClosetTo.profitTotal}\n                                        {fromAccountId[\n                                          `accounts_details.currency`\n                                        ] ===\n                                        toAccountId[`accounts_details.currency`]\n                                          ? `  ` +\n                                              fromAccountId[\n                                                `accounts_details.currency`\n                                              ] ||\n                                            toAccountId[\n                                              `accounts_details.currency`\n                                            ]\n                                          : \"\"}\n                                      </b>\n                                    </div>\n                                  </Col>\n                                </Row>\n                              ) : (\n                                \"\"\n                                // <Col md={12}>\n                                //     <div className=\"card change noRecordCol\"> No Record Found</div>\n                                // </Col>\n                              )}\n                            </div>\n                          ) : (\n                            \"\"\n                            // <Col md={12} >\n                            //     <div className=\"card change noRecordCol\"> No Record Found</div>\n                            // </Col>\n                          )}\n                          <Row className=\"no-margin\">\n                            {commissionValue &&\n                              commissionValue.commission_acount_id > 0 && (\n                                <div className=\"card pad-x\">\n                                  <div className=\"header ptheader b-shadow\">\n                                    <h4 className=\"text-center bText1\">\n                                      <b>Commission</b>\n                                    </h4>\n                                    {/* <h4 className=\"text-center\">{commissionDetails[0].login}</h4> */}\n\n                                    <div className=\"row\">\n                                      <div className=\"col-md-4 text-center\">\n                                        <h4 className=\"bText\"> Balance </h4>\n                                        {console.log(commissionValue,\"commissionValue\")}\n                                        <NumberFormat\n                                          value={commissionValue.totalProfit === null ? 0 : commissionValue.totalProfit }\n                                          displayType={\"text\"}\n                                          thousandSeparator={true}\n                                          decimalScale={2}\n                                        />\n                                      </div>\n                                      <div className=\"col-md-4 text-center\">\n                                        <h4 className=\"bText\"> Equity </h4>\n                                        <NumberFormat\n                                          displayType={\"text\"}\n                                          thousandSeparator={true}\n                                          decimalScale={2}\n                                        />\n                                        <span>{commissionValue.equity}</span>\n                                      </div>\n                                      <div className=\"col-md-4 text-center\">\n                                        <h4 className=\"bText\"> Order Type </h4>\n                                        <span>6</span>\n                                      </div>\n\n                                      <div className=\"col-md-12 text-center\">\n                                        <h4>\n                                          <b>Total</b>{\" \"}\n                                        </h4>\n                                        <NumberFormat\n                                          value={commissionValue.commission === null ? 0 : commissionValue.commission}\n                                          displayType={\"text\"}\n                                          thousandSeparator={true}\n                                          decimalScale={2}\n                                        />\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              )}\n                          </Row>\n                        </div>\n                        {/* </Collapse> */}\n                      </div>\n\n                      {/* <div className=\"symbol-box  topSet \" >\n                            <div className=\"text-center\" >\n                                <span className=\"  summrayAdjust \" style={{ fontWeight: 600, color: \"#797979\" }}>Summary</span>\n                                <h5 style={{ fontWeight: 600, color: \"#797979\" }}> Open Positions + Closed Positions {commissionValue.commission_acount_id > 0 && (<span> + Commission</span>)}</h5>\n                                <h5 className=\"bText\">\n                                    <NumberFormat value={totalOpenAndHistory} displayType={'text'} thousandSeparator={true} decimalScale={2} ></NumberFormat></h5>\n                            </div>\n\n                        </div> */}\n                    </div>\n                    <Row style={{ marginBottom: `20px` }}>\n                      <Col md={12} sm={6}>\n                        <div\n                          className={\n                            historyTotal + openTotal >= 0\n                              ? \"summary-box\"\n                              : \"summary-box-red\"\n                          }\n                        >\n                          {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\n                          {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\n<span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\n\n                          <Col md={12} sm={12}>\n                            <div\n                              className=\"summary-text text-center\"\n                              style={{ fontWeight: 600, color: \"#797979\" }}\n                            >\n                              Unrealized & Realized P/L ({activeProfileName}){\" \"}\n                              {allHistoryRecord.history_info !== 0 && (\n                                <span> + Commission</span>\n                              )}{\" \"}\n                            </div>\n                          </Col>\n                          <Col md={12} sm={12}>\n                            <div\n                              className=\"text-center\"\n                              style={{ fontWeight: \"bold\", fontSize: \"18px\" }}\n                            >\n                              ${\" \"}\n                              <NumberFormat\n                                value={\n                                  allHistoryRecord.history_info !== undefined\n                                    ? historyTotal +\n                                      openTotal +\n                                      allHistoryRecord.history_info\n                                    : historyTotal + openTotal\n                                }\n                                displayType={\"text\"}\n                                thousandSeparator={true}\n                                decimalScale={2}\n                              />\n                              {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\n                            </div>\n                          </Col>\n\n                          <div className=\"clearfix\"></div>\n                        </div>\n                      </Col>\n                    </Row>\n                  </Collapse>\n                </Col>\n              </Row>\n\n              <Row>\n                <Col md={12} sm={6}>\n                  <div className=\"symbol-box\" style={{ marginBottom: `20px` }}>\n                    <span className=\"p-text\">Side by side View</span>\n                    <span className=\"icon-style\" onClick={toggle3}>\n                      {isOpen3 ? (\n                        <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\n                      ) : (\n                        <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n                      )}\n                    </span>\n                  </div>\n\n                  <Collapse isOpen={isOpen3}>\n                    <TableList />\n                    <Row style={{ marginBottom: `20px` }}>\n                      <Col md={12} sm={6}>\n                        <div\n                          className={\n                            historyTotal + openTotal >= 0\n                              ? \"summary-box\"\n                              : \"summary-box-red\"\n                          }\n                        >\n                          {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\n                          {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\n<span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\n\n                          <Col md={12} sm={12}>\n                            <div\n                              className=\"summary-text text-center\"\n                              style={{ fontWeight: 600, color: \"#797979\" }}\n                            >\n                              Unrealized & Realized P/L ({activeProfileName}){\" \"}\n                              {allHistoryRecord.history_info !== 0 && (\n                                <span> + Commission</span>\n                              )}{\" \"}\n                            </div>\n                          </Col>\n                          <Col md={12} sm={12}>\n                            <div\n                              className=\"text-center\"\n                              style={{ fontWeight: \"bold\", fontSize: \"18px\" }}\n                            >\n                              ${\" \"}\n                              <NumberFormat\n                                value={\n                                  allHistoryRecord.history_info !== undefined\n                                    ? historyTotal +\n                                      openTotal +\n                                      allHistoryRecord.history_info\n                                    : historyTotal + openTotal\n                                }\n                                displayType={\"text\"}\n                                thousandSeparator={true}\n                                decimalScale={2}\n                              />\n                              {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\n                            </div>\n                          </Col>\n\n                          <div className=\"clearfix\"></div>\n                        </div>\n                      </Col>\n                    </Row>\n                  </Collapse>\n                </Col>\n              </Row>\n            </div>\n          )}\n          <Grid fluid>\n            {/* <div className=\"symbol-box shadoremove\"> */}\n            {/* <div className=\"openOrder\">\n\n                            <div className=\"border-box row\"> */}\n            {/* <DatatablePage state={'open'} data={fromOpenTrade} /> */}\n            {/* </div> */}\n            {/* <div className=\"border-box row\"> */}\n\n            {/* <DatatablePage state={'open'} data={toOpenTrade} /> */}\n            {/* </div> */}\n            {/* <div className=\"border-box row\"> */}\n\n            {/* <DatatablePage state={'close'} data={fromHistoryTrade} /> */}\n            {/* </div> */}\n            {/* <div className=\"border-box row\"> */}\n\n            {/* <DatatablePage state={'close'} data={toHistoryTrade} /> */}\n            {/* </div> */}\n            {/* </div> */}\n            {/* </div> */}\n          </Grid>\n        </>\n      )}\n    </>\n  );\n}\n","import React, { Component } from 'react'\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\n\nexport default class Exploser extends Component {\n    render() {\n        return (\n            <div className=\"boxFix\">\n                <Row>\n                    <Col md={6}>\n                        <div className=\"card \">\n\n                            <div className=\"header\">\n\n                                <h6 className={'colorDarkBlue , loginCenter'}>Account - A</h6>\n                            </div>\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                <table className=\"table\">\n                                    <tbody>\n\n                                        <tr><td>Symbol </td>\n                                            <td className=\"td-actions text-right\">Symbol\n\n                                            </td>\n                                        </tr>\n                                        <tr><td>Lots </td>\n                                            <td className=\"td-actions text-right\">Lots\n                                            </td>\n                                        </tr>\n                                        <tr><td>BUY/SELL </td>\n                                            <td className=\"td-actions text-right\">Buy/Sell\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>Contract Size </td>\n                                            <td className=\"td-actions text-right\">Size\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>Exploser </td>\n                                            <td className=\"td-actions text-right\">Exploser Total\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                            </div>\n                        </div>\n                    </Col>\n\n\n                    <Col md={6}>\n                        <div className=\"card \">\n\n                            <div className=\"header\">\n\n                                <h6 className={'colorDarkBlue , loginCenter'}>Account - B</h6>\n                            </div>\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                <table className=\"table\">\n                                    <tbody>\n\n                                        <tr><td>Symbol </td>\n                                            <td className=\"td-actions text-right\">Symbol\n\n                                            </td>\n                                        </tr>\n                                        <tr><td>Lots </td>\n                                            <td className=\"td-actions text-right\">Lots\n                                            </td>\n                                        </tr>\n                                        <tr><td>BUY/SELL </td>\n                                            <td className=\"td-actions text-right\">Sell\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>Contract Size </td>\n                                            <td className=\"td-actions text-right\">Size\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>Exploser </td>\n                                            <td className=\"td-actions text-right\">Total\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                            </div>\n                        </div>\n                    </Col>\n\n\n                </Row>\n            </div>\n\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport NumberFormat from \"react-number-format\";\nimport config from \"../../constant/config\";\nimport Data from \"../Data\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport \"./ContractSize.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport { api } from \"../../api\";\nimport myInitObject from \"../../api\";\nconst axios = require(\"axios\");\nexport default class ContractSize extends Component {\n  _isMounted = false;\n  constructor(props) {\n    super(props);\n    this.state = {\n      fromAccounts: \"\",\n      fromSymbol: \"\",\n      toAccounts: \"\",\n      toSymbol: \"\",\n      fromOpenOrderInfos: \"\",\n      toOpenOrderInfos: \"\",\n      total: \"\",\n      totalTo: \"\",\n      blockloader: true,\n      selectedOption: null,\n      allHistoryRecord: [],\n      allOpenRecord: [],\n      fromHistoryOrderInfo: [],\n      toHistoryOrderInfo: [],\n      commissionHistoryOrderInfo: [],\n      fromOpenOrderInfo: [],\n      toOpenOrderInfo: [],\n      filterlist: [],\n      loading: true,\n      dateTime: \"\",\n      errorMassege: true,\n    };\n  }\n  componentWillMount() {\n    this._isMounted = true;\n    if (this._isMounted) {\n    setInterval(() => {\n      if (\n        (myInitObject.responsHT &&\n          myInitObject.responsOT &&\n          myInitObject.responsSD) === undefined\n      ) {\n        console.log(\"no data\");\n      } else {\n        this.setState(\n          {\n            //last update time\n            dateTime: myInitObject.fetchLastUpdatedTime.filteredInfoTime,\n            // status data\n            loading: false,\n            fromAccounts: myInitObject.fetchStatusData.fromAccounts,\n            fromSymbol: myInitObject.fetchStatusData.fromSymbol,\n            toAccounts: myInitObject.fetchStatusData.toAccounts,\n            toSymbol: myInitObject.fetchStatusData.toSymbol,\n            fromOpenOrderInfos:\n              myInitObject.fetchStatusData.fromOpenOrderInfos.length > 0\n                ? myInitObject.fetchStatusData.fromOpenOrderInfos[0]\n                : \"\",\n            blockloader:\n              myInitObject.fetchStatusData.fromOpenOrderInfos.length > 0\n                ? false\n                : true,\n            total:\n              myInitObject.fetchStatusData.fromOpenOrderInfos.length > 0 &&\n              myInitObject.fetchStatusData.fromOpenOrderInfos[0].order_type == 0\n                ? myInitObject.fetchStatusData.fromSymbol?.contract_size *\n                  myInitObject.fetchStatusData.fromOpenOrderInfos[0]?.lots\n                : myInitObject.fetchStatusData.fromSymbol?.contract_size *\n                  -myInitObject.fetchStatusData.fromOpenOrderInfos[0]?.lots,\n            toOpenOrderInfos:\n              myInitObject.fetchStatusData.toOpenOrderInfos.length > 0\n                ? myInitObject.fetchStatusData.toOpenOrderInfos[0]\n                : \"\",\n            totalTo:\n              myInitObject.fetchStatusData.toOpenOrderInfos.length > 0 &&\n              myInitObject.fetchStatusData.toOpenOrderInfos[0].order_type == 0\n                ? myInitObject.fetchStatusData.toSymbol?.contract_size *\n                  myInitObject.fetchStatusData.toOpenOrderInfos[0]?.lots\n                : myInitObject.fetchStatusData.toSymbol?.contract_size *\n                  -myInitObject.fetchStatusData.toOpenOrderInfos[0]?.lots,\n            //history trade\n            allHistoryRecord: myInitObject.fetchAllHistoryTrade.rows,\n            fromHistoryOrderInfo:\n              myInitObject.fetchAllHistoryTrade.fromHistoryOrderInfo,\n            toHistoryOrderInfo:\n              myInitObject.fetchAllHistoryTrade.toHistoryOrderInfo,\n            //open trade\n            allOpenRecord: myInitObject.fetchAllOpenTrade.rows,\n            fromOpenOrderInfo: myInitObject.fetchAllOpenTrade.fromOpenOrderInfo,\n            toOpenOrderInfo: myInitObject.fetchAllOpenTrade.toOpenOrderInfo,\n          },\n          () => {\n            this.setState({\n              errorMassege:\n                this.state.allHistoryRecord.length == 0 ? true : false,\n            });\n          }\n        );\n      }\n    }, 1000);\n  }\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  // componentDidMount() {\n  //     // this.fetchAllHIstoryTrade();\n  //     // this.fetchStatusData();\n  //     axios.get(config.baseurl + '/accounts/fetchAllSymbol')\n  //         .then(function (response) {\n  //             if (response.status == 200) {\n  //                 console.log(response, \"response ---------------fetchAllSymbol>\")\n  //             }\n  //         })\n  //     // this.fetchLastUpdatedTime();\n  // }\n  // fetchLastUpdatedTime = () => {\n  //     let self = this;\n  //     axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\n  //         .then(function (response) {\n  //             if (response.status == 200) {\n  //                 self.setState({ dateTime: response.data.filteredInfoTime })\n  //                 // console.log(self.state.dataOpenTrade.accountFromInfo,\"outyfjhkjh\");\n  //             }\n  //         });\n  // }\n\n  // fetchStatusData = () => {\n  //     let self = this;\n  //     let tottal = 0;\n  //     axios.get(config.baseurl + '/accounts/fetchStatusData')\n  //         .then(function (response) {\n  //             if (response.status == 200) {\n  //                 self.setState({ loading: false })\n\n  //                 self.setState({ fromAccounts: response.data.fromAccounts })\n  //                 self.setState({ fromSymbol: response.data.fromSymbol })\n  //                 // console.log(fromSymbol,\"fromSymbol\");\n  //                 self.setState({ toAccounts: response.data.toAccounts })\n  //                 self.setState({ toSymbol: response.data.toSymbol })\n  //                 self.setState({ fromOpenOrderInfos: response.data.fromOpenOrderInfos.length > 0 ? response.data.fromOpenOrderInfos[0] : '' })\n  //                 if (response.data.fromOpenOrderInfos.length > 0) {\n  //                     self.setState({ blockloader: false })\n  //                     if (response.data.fromOpenOrderInfos[0].order_type == 0) {\n  //                         self.setState({ total: response.data.fromSymbol.contract_size * (response.data.fromOpenOrderInfos[0].lots) })\n  //                     } else {\n  //                         self.setState({ total: response.data.fromSymbol.contract_size * -(response.data.fromOpenOrderInfos[0].lots) })\n  //                     }\n\n  //                     self.setState({ toOpenOrderInfos: response.data.toOpenOrderInfos.length > 0 ? response.data.toOpenOrderInfos[0] : '' })\n  //                 }\n  //                 if (response.data.toOpenOrderInfos.length > 0) {\n  //                     if (response.data.toOpenOrderInfos[0].order_type == 0) {\n  //                         self.setState({ totalTo: response.data.toSymbol.contract_size * (response.data.toOpenOrderInfos[0].lots) })\n  //                     } else {\n  //                         self.setState({ totalTo: response.data.toSymbol.contract_size * -(response.data.toOpenOrderInfos[0].lots) })\n  //                     }\n  //                 }\n\n  //             }\n  //         });\n  // }\n  // fetchAllHIstoryTrade = () => {\n  //     let self = this;\n  //     axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\n  //         .then(function (response) {\n  //             // console.log(response.data, 'response.data his')\n  //             if (response.status == 200) {\n  //                 self.setState({ errorMassege: false })\n  //                 // self.setState({ allHistoryRecord: response.data.rows })\n  //                 self.setState({\n  //                     allHistoryRecord: response.data.rows,\n  //                     fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,sNaN(parseInt(s)\n  //                     toHistoryOrderInfo: response.data.toHistoryOrderInfo,\n  //                     commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\n  //                 })\n  //             }\n  //         })\n  //     // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\n  //     // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\n  //     axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\n  //         .then(function (response) {\n  //             if (response.status == 200) {\n\n  //                 // self.setState({ allOpenRecord: response.data.rows })\n  //                 self.setState({\n  //                     allOpenRecord: response.data.rows,\n  //                     fromOpenOrderInfo: response.data.fromOpenOrderInfo,\n  //                     toOpenOrderInfo: response.data.toOpenOrderInfo\n  //                 })\n  //             }\n  //         })\n  // }\n\n  render() {\n    const {\n      allHistoryRecord,\n      allOpenRecord,\n      selectedOption,\n      toOpenOrderInfo,\n      fromOpenOrderInfo,\n      fromHistoryOrderInfo,\n      commissionHistoryOrderInfo,\n      toHistoryOrderInfo,\n    } = this.state;\n    //   const sumOfOpenTotal = allOpenRecord.reduce((current, data) => {\n    //     return (Math.floor(data.commission + data.swap + data.profit+ current));\n    // }, 0);\n\n    //   const sumOfHistoryTotal = allHistoryRecord.reduce((current, data) => {\n    //     return (data.profit + current);\n    // }, 0);\n    let uniqueSymbols = \"\";\n    if (allOpenRecord && Object.entries(allOpenRecord).length > 0) {\n      let fromSymbols = JSON.parse(allOpenRecord.from_symbols);\n      // fromSymbols = (fromSymbols).map(data => data).join(', ');\n      let toSymbols = JSON.parse(allOpenRecord.to_symbols);\n      let combineSymbols = fromSymbols.concat(toSymbols);\n      uniqueSymbols = combineSymbols.filter(\n        (item, i, ar) => ar.indexOf(item) === i\n      );\n      uniqueSymbols = uniqueSymbols.map((data) => data).join(\", \");\n    }\n    let fromsum = 0;\n    let tosum = 0;\n    // if(fromHistoryOrderInfo && commissionHistoryOrderInfo && fromHistoryOrderInfo.length>0){\n    if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\n      fromsum =\n        fromHistoryOrderInfo[0].commission +\n        fromHistoryOrderInfo[0].swap +\n        fromHistoryOrderInfo[0].profit;\n    }\n\n    if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\n      tosum =\n        toHistoryOrderInfo[0].commission +\n        toHistoryOrderInfo[0].swap +\n        toHistoryOrderInfo[0].profit;\n    }\n\n    let sumOfHistoryTotal = tosum + fromsum;\n\n    let openfromsum = 0;\n    let opentosum = 0;\n    if (\n      fromOpenOrderInfo &&\n      fromOpenOrderInfo.length > 0 &&\n      fromOpenOrderInfo[0].total != null\n    ) {\n      openfromsum =\n        fromOpenOrderInfo[0].commission +\n        fromOpenOrderInfo[0].swap +\n        fromOpenOrderInfo[0].profit;\n    }\n    if (\n      toOpenOrderInfo &&\n      toOpenOrderInfo.length > 0 &&\n      toOpenOrderInfo[0].total != null\n    ) {\n      opentosum =\n        toOpenOrderInfo[0].commission +\n        toOpenOrderInfo[0].swap +\n        toOpenOrderInfo[0].profit;\n    }\n\n    let sumOfOpenTotal = opentosum + openfromsum;\n    this.state.total = isNaN(parseInt(this.state.total)) ? 0 : parseInt(this.state.total)\n    this.state.totalTo = isNaN(parseInt(this.state.totalTo)) ? 0 : parseInt(this.state.totalTo)\n\n    // console.log(this.state.total , typeof isNaN(this.state.totalTo)  , \"jjjjjj\", this.state.totalTo);\n    return (\n      <React.Fragment>\n        {this.state.errorMassege == true ? (\n          <div className=\"popup\">\n            <div className=\"card w-75 \">\n              <div className=\"card-body topmargin\">\n                <div className=\" card-text popuptext\" role=\"alert\">\n                  Please Select Filters To Continue...\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <>\n            <Row>\n              <div className=\"lastUpdate\">\n                <span> Last Updated : </span>\n                {this.state.dateTime}(UTC){\" \"}\n              </div>\n            </Row>\n            <div className=\"contractSize-wrapper\">\n              <div className=\" leftset card \">\n                {this.state.loading ? (\n                  <Loader\n                    type=\"ThreeDots\"\n                    color=\"black\"\n                    height={100}\n                    width={100}\n                    style={{ textAlign: \"center\" }}\n                  />\n                ) : (\n                  <Row>\n                    <h4 className=\"text-center \">\n                      <b>Exposure</b>\n                    </h4>\n                    {/* {this.state.fromOpenOrderInfos && this.state.fromOpenOrderInfos.order_type !== null || this.state.toOpenOrderInfos && this.state.toOpenOrderInfos.order_type !== null ? */}\n                    <>\n                      {\" \"}\n                      {this.state.fromOpenOrderInfos !== \"\" &&\n                      this.state.fromOpenOrderInfos.order_type !== null ? (\n                        <Col md={4}>\n                          <div className=\"card\">\n                            <div\n                              className={\"colorDarkBlue , boldText loginCenter\"}\n                            >\n                              {this.state.fromAccounts.alias}\n                            </div>\n\n                            <h6 className={\"colorDarkBlue loginCenter\"}>\n                              {this.state.fromAccounts.login}\n                            </h6>\n\n                            <div className=\"content table-full-width \">\n                              <div className=\"table-responsive\">\n                                <div className=\"text-center\">\n                                  <span>{this.state.fromSymbol.name}</span>\n                                  {this.state.fromOpenOrderInfos !== \"\" &&\n                                    this.state.fromOpenOrderInfos.order_type !==\n                                      null && (\n                                      <span\n                                        className=\"td-actions bText, clearBorder\"\n                                        style={{ display: \"block\" }}\n                                      >\n                                        {this.state.fromOpenOrderInfos\n                                          .order_type == 0\n                                          ? \"BUY \"\n                                          : \"SELL \"}\n                                          <NumberFormat value={this.state.fromOpenOrderInfos.lots} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                        {\" \"}\n                                        {this.state.fromOpenOrderInfos.lots > 1\n                                          ? \"Lots\"\n                                          : \"Lot\"}\n                                      </span>\n                                    )}\n                                </div>\n                                <br></br>\n                                <div className=\"text-center\">\n                                  <span className=\"td-actions clearBorder text-right\">\n                                    <NumberFormat\n                                      value={this.state.total}\n                                      displayType={\"text\"}\n                                      thousandSeparator={true}\n                                      decimalScale={2}\n                                    />{\" \"}\n                                    {this.state.fromSymbol.margin_currency}\n                                  </span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </Col>\n                      ) : (\n                        <Col md={4}>\n                          <div className=\"card change noRecordCol\">\n                            {\" \"}\n                            No Record Found\n                          </div>\n                        </Col>\n                      )}\n                      <Col md={4}>\n                        <div className=\"card\">\n                          \n                            {(this.state.total + this.state.totalTo == 0) && \n                            this.state.total !== 0 && \n                            this.state.totalTo !== 0 ? (\n                            <h5 className=\"  text-center adjustMent\">\n                              <span style={{ color: \"green\" }}>\n                                <b> No Exposure</b>\n                              </span>\n                          </h5>)\n                              : ''}\n                              {this.state.total == 0 && this.state.totalTo == 0 ? (\n                            <h5 className=\"  text-center adjustMent\">\n                              <span style={{ color: \"green\" }}>\n                                <b> No Record Found</b>\n                              </span>\n                          </h5>)\n                              : ''}\n                          {this.state.total !== 0 &&\n                            this.state.totalTo !== 0 && \n                            this.state.total + this.state.totalTo != 0 && (\n                                <>\n                                 <h5 className=\"  text-center adjustMent\">\n                                  <b> Exposure</b> \n                              </h5>\n                              <div\n                                style={{ color: \"#b70606\" }}\n                                className=\" setBottom bText text-center\"\n                              >\n                                <NumberFormat\n                                  value={this.state.total + this.state.totalTo}\n                                  displayType={\"text\"}\n                                  thousandSeparator={true}\n                                  decimalScale={2}\n                                />\n                                {this.state.fromSymbol?.margin_currency ===\n                                this.state.toSymbol?.margin_currency\n                                  ? `  ` +\n                                      this.state.fromSymbol.margin_currency ||\n                                    this.state.toSymbol.margin_currency\n                                  : \"\"}\n                              </div>\n                              </>\n                            )}\n                          {this.state.totalTo !== 0 &&\n                            (isNaN(this.state.total) == true ||\n                              this.state.total == 0) && (\n                                  <>\n                                <h5 className=\"  text-center adjustMent\">\n                                  <b> Exposure</b> \n                              </h5>\n                              <div\n                                style={{ color: \"#b70606\" }}\n                                className=\" setBottom bText text-center\"\n                              >\n                                <NumberFormat\n                                  value={this.state.totalTo}\n                                  displayType={\"text\"}\n                                  thousandSeparator={true}\n                                  decimalScale={2}\n                                />\n                                {this.state.toSymbol?.margin_currency\n                                  ? `  ` + this.state.toSymbol.margin_currency\n                                  : \"\"}\n                              </div>\n                              </>\n                            )}\n                          {this.state.total != 0 &&\n                            (isNaN(this.state.totalTo) == true ||\n                              this.state.totalTo == 0) && (\n                                  <>\n                                <h5 className=\"  text-center adjustMent\">\n                                <b> Exposure</b> \n                            </h5>\n                              <div\n                                style={{ color: \"#b70606\" }}\n                                className=\" setBottom bText text-center\"\n                              >\n                                <NumberFormat\n                                  value={this.state.total}\n                                  displayType={\"text\"}\n                                  thousandSeparator={true}\n                                  decimalScale={2}\n                                />\n                                {this.state.fromSymbol?.margin_currency\n                                  ? `  ` + this.state.fromSymbol.margin_currency\n                                  : \"\"}\n                              </div>\n                              </>\n                            )}\n                        </div>\n                      </Col>\n                      {this.state.toOpenOrderInfos !== \"\" &&\n                      this.state.toOpenOrderInfos.order_type !== null ? (\n                        <Col md={4}>\n                          <div className=\" leftset1 card\">\n                            <div className={\"color2 , boldText loginCenter\"}>\n                              {this.state.toAccounts.alias}\n                            </div>\n\n                            <h6 className={\"color2 ,bText, loginCenter\"}>\n                              {this.state.toAccounts.login}\n                            </h6>\n\n                            <div className=\"content table-full-width \">\n                              <div className=\"table-responsive\">\n                                <div className=\"text-center\">\n                                  <span className=\"td-actions bText, clearBorder text-right\">\n                                    {this.state.toSymbol.name}\n                                  </span>\n                                  {this.state.toOpenOrderInfos !== \"\" &&\n                                    this.state.toOpenOrderInfos.order_type !==\n                                      null && (\n                                      <span\n                                        className=\"td-actions bText, clearBorder\"\n                                        style={{ display: \"block\" }}\n                                      >\n                                        {this.state.toOpenOrderInfos\n                                          .order_type == 0\n                                          ? \"BUY \"\n                                          : \"SELL \"}\n                                          <NumberFormat value={this.state.toOpenOrderInfos.lots} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                          {\" \"}\n                                        {this.state.toOpenOrderInfos.lots > 1\n                                          ? \"Lots\"\n                                          : \"Lot\"}\n                                      </span>\n                                    )}\n                                </div>\n                                <br></br>\n                                <div className=\"text-center\">\n                                  <span>\n                                    <NumberFormat\n                                      value={this.state.totalTo}\n                                      displayType={\"text\"}\n                                      thousandSeparator={true}\n                                      decimalScale={2}\n                                    />{\" \"}\n                                    {this.state.toSymbol.margin_currency}\n                                  </span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </Col>\n                      ) : (\n                        <Col md={4}>\n                          <div className=\"card change noRecordCol\">\n                            {\" \"}\n                            No Record Found\n                          </div>\n                        </Col>\n                      )}\n                    </>\n                    {/* <Col md={12}>\n                                            <div className=\"card change noRecordCol\"> No Recor Found</div>\n                                        </Col> */}\n                    {/* } */}\n                  </Row>\n                )}\n                <Col md={12} sm={6}>\n                  <div\n                    className={\n                      sumOfHistoryTotal + sumOfOpenTotal >= 0\n                        ? \"summary-box\"\n                        : \"summary-box-red\"\n                    }\n                  >\n                    {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\n                    {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\n                <span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\n\n                    <Col md={12} sm={12}>\n                      <div\n                        className=\"summary-text text-center\"\n                        style={{ fontWeight: 600, color: \"#797979\" }}\n                      >\n                        Summary For ({uniqueSymbols}){\" \"}\n                        {allHistoryRecord.history_info !== 0 && (\n                          <span> + Commission</span>\n                        )}{\" \"}\n                      </div>\n                    </Col>\n                    <Col md={12} sm={12}>\n                      <div\n                        className=\"text-center\"\n                        style={{ fontWeight: \"bold\", fontSize: \"18px\" }}\n                      >\n                        ${\" \"}\n                        <NumberFormat\n                          value={\n                            allHistoryRecord.history_info !== undefined\n                              ? sumOfHistoryTotal +\n                                sumOfOpenTotal +\n                                allHistoryRecord.history_info\n                              : sumOfHistoryTotal + sumOfOpenTotal\n                          }\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                        />\n                      </div>\n                    </Col>\n\n                    <div className=\"clearfix\"></div>\n                  </div>\n                </Col>\n              </div>\n            </div>\n          </>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport NumberFormat from 'react-number-format';\nimport config from '../../constant/config';\nimport Data from '../Data';\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport './Statistics.css'\nimport { api } from '../../api'\nimport myInitObject from '../../api'\nconst axios = require('axios');\nexport default class Statistics extends Component {\n    _isMounted = false;\n    constructor(props) {\n        super(props)\n        this.state = {\n\n            filterlist: [],\n            selectedOption: null,\n            allHistoryRecord: [],\n            allOpenRecord: [],\n            fromHistoryOrderInfo: [],\n            toHistoryOrderInfo: [],\n            commissionHistoryOrderInfo: [],\n            fromOpenOrderInfo: [],\n            dateTime: '',\n            activeProfileName: ''\n        }\n    }\n    componentDidMount() {\n        // this.fetchActivefilterData();\n        // this.fetchAllHIstoryTrade();\n        // this.fetchLastUpdatedTime()\n        this._isMounted = true;\n        if (this._isMounted) {\n        setInterval(() => {\n         if((myInitObject.responsHT &&\n           myInitObject.responsOT &&\n           myInitObject.responsAC &&\n           myInitObject.responsAF &&\n           myInitObject.responsLUT &&\n           myInitObject.responsSD) === undefined){\n           console.log('no data');\n         }else{\n        //    console.log(myInitObject, '=========><')\n           this.setState({\n             //history trade\n             allHistoryRecord: myInitObject.fetchAllHistoryTrade.rows,\n             fromHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.fromHistoryOrderInfo,\n             toHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.toHistoryOrderInfo,\n             //open trade\n             allOpenRecord: myInitObject.fetchAllOpenTrade.rows,\n             fromOpenOrderInfo: myInitObject.fetchAllOpenTrade.fromOpenOrderInfo,\n             toOpenOrderInfo: myInitObject.fetchAllOpenTrade.toOpenOrderInfo,\n            \n             //active filter data\n             filterlist: myInitObject.fetchActivefilterdata.rows,\n            \n             activeProfileName: myInitObject.fetchActivefilterdata.rows[0].profile_name, \n             //last updated time\n             dateTime: myInitObject.fetchLastUpdatedTime.filteredInfoTime,\n             \n             },() =>{\n               this.setState({ errorMassege:this.state.filterlist.length == 0 ?  true : false,})\n             })\n         }\n        },1000)\n    }\n    }\n    componentWillUnmount() {\n        this._isMounted = false;\n      }\n    // fetchLastUpdatedTime = () => {\n    //     let self = this;\n    //     axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\n    //         .then(function (response) {\n    //             if (response.status == 200) {\n    //                 self.setState({ dateTime: response.data.filteredInfoTime })\n    //                 // console.log(self.state.dataOpenTrade.accountFromInfo,\"outyfjhkjh\");\n    //             }\n    //         });\n    // }\n    // fetchActivefilterData = () => {\n    //     let self = this;\n    //     axios.get(config.baseurl + '/filter/fetchActivefilterdata')\n    //         .then(function (response) {\n    //             if (response.status == 200) {\n    //                 console.log(response, \"respp----------------->\")\n    //                 self.setState({ filterlist: response.data.rows, })\n    //                 if (self.state.filterlist.length == 0) {\n    //                     self.setState({ errorMassege: true ,})\n    //                     }\n    //                     else{\n    //                         self.setState({activeProfileName: response.data.rows[0].profile_name})\n    //                     }\n    //             }\n    //         });\n    // }\n\n    showData = (accountDetailValue) => {\n\n        return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\n            if (accountDetailValue === 'margin_level') {\n                return (\n                    <>\n                        <td className=\"tdClr2 tdClr boldText\" >\n                            <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\n                </td>\n                        <td className=\"tdClr2 boldText\">\n                            {/* {item.accountToInfo[0].accounts_details[0][accountDetailValue]} % */}\n                            <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\n                </td>\n                    </>\n                )\n            }\n            if (item.accountFromInfo.length > 0) {\n                return (\n                    <>\n                        <td className=\"tdClr2 tdClr boldText\" >\n                            {item.accountFromInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''}  {' '}\n                            <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                        </td>\n\n                        <td className=\"tdClr2 boldText\">\n                            {item.accountToInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''} {' '}\n                            {/* {item.accountToInfo[0].accounts_details[0][accountDetailValue]} */}\n                            <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                        </td>\n                    </>\n                )\n\n            }\n\n        })\n    }\n    tableHeader = () => {\n\n        return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\n            return (\n                <tr key={index}>\n                    <th  className=\"bText colorDarkBlue text-center tdClr2 tdClr\">\n                        <div className=\"colorDarkBlue\" >\n                            {(item.accountFromInfo[0].alias != null) ? item.accountFromInfo[0].alias : '-'}\n                        </div>\n                        <span style={{ fontSize: 10 }}>\n                            {item.accountFromInfo[0].login}\n                        </span>\n\n                    </th>\n                    <th className=\"bText color2 text-center tdClr2\">\n                        <div className=\"color2\" >\n                            {(item.accountToInfo[0].alias != null) ? item.accountToInfo[0].alias : '-'}\n                        </div>\n                        <span style={{ fontSize: 10 }}>\n                            {item.accountToInfo[0].login}\n                        </span>\n\n                    </th>\n                </tr>\n\n            )\n\n        })\n    }\n    // fetchAllHIstoryTrade = () => {\n    //     let self = this;\n    //     axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\n    //         .then(function (response) {\n    //             // console.log(response.data, 'response.data his')\n    //             if (response.status == 200) {\n    //                 // self.setState({ allHistoryRecord: response.data.rows })\n    //                 self.setState({\n    //                     allHistoryRecord: response.data.rows,\n    //                     fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,\n    //                     toHistoryOrderInfo: response.data.toHistoryOrderInfo,\n    //                     commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\n    //                 })\n    //             }\n    //         })\n    //     // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\n    //     // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\n    //     axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\n    //         .then(function (response) {\n    //             if (response.status == 200) {\n\n    //                 // self.setState({ allOpenRecord: response.data.rows })\n    //                 self.setState({\n    //                     allOpenRecord: response.data.rows,\n    //                     fromOpenOrderInfo: response.data.fromOpenOrderInfo,\n    //                     toOpenOrderInfo: response.data.toOpenOrderInfo\n    //                 })\n    //             }\n    //         })\n    // }\n    render() {\n        const { allHistoryRecord, allOpenRecord, selectedOption, toOpenOrderInfo, fromOpenOrderInfo, fromHistoryOrderInfo, commissionHistoryOrderInfo, toHistoryOrderInfo } = this.state;\n        //   const sumOfOpenTotal = allOpenRecord.reduce((current, data) => {\n        //     return (Math.floor(data.commission + data.swap + data.profit+ current));\n        // }, 0);\n\n        //   const sumOfHistoryTotal = allHistoryRecord.reduce((current, data) => {\n        //     return (data.profit + current);\n        // }, 0);\n        let uniqueSymbols = \"\";\n        if (allOpenRecord && Object.entries(allOpenRecord).length > 0) {\n            let fromSymbols = JSON.parse(allOpenRecord.from_symbols);\n            // fromSymbols = (fromSymbols).map(data => data).join(', ');\n            let toSymbols = JSON.parse(allOpenRecord.to_symbols);\n            let combineSymbols = fromSymbols.concat(toSymbols);\n            uniqueSymbols = combineSymbols.filter((item, i, ar) => ar.indexOf(item) === i);\n            uniqueSymbols = (uniqueSymbols).map(data => data).join(', ')\n        }\n        let fromsum = 0;\n        let tosum = 0;\n        // if(fromHistoryOrderInfo && commissionHistoryOrderInfo && fromHistoryOrderInfo.length>0){\n        if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\n            fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\n        }\n\n        if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\n            tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\n        }\n\n        let sumOfHistoryTotal = tosum + fromsum;\n\n        let openfromsum = 0;\n        let opentosum = 0;\n        if ((fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total != null)) {\n            // if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\n            //   openfromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\n            // }else{\n            openfromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\n\n        }\n        if ((toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total != null)) {\n            // if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\n            //   opentosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit+ toOpenOrderInfo[0].swap);\n            // }\n\n            // else{\n            //   opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n            // }\n            opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n        }\n\n        let sumOfOpenTotal = opentosum + openfromsum;\n\n\n\n\n\n        return (\n            <React.Fragment>\n                {(this.state.errorMassege) ? <div className=\"popup\">\n\n                    <div className=\"card w-75 \">\n                        <div className=\"card-body topmargin\">\n                            <div className=\" card-text popuptext\" role=\"alert\">Please activate filter profile to view stats.......</div>\n                        </div>\n                    </div>\n                </div>\n                    :\n                    <div className=\"statistic-wrapper\">\n                        <Grid fluid>\n                            <Row>\n                                <div className=\"lastUpdate\">\n                                    <span> Last Updated :  </span>\n                                    {this.state.dateTime}(UTC)  </div>\n                            </Row>\n                            <div className=\"terminal-box\">\n\n                                <span className=\"terminal-text\">Terminal Statistics</span>\n                            </div>\n                            <Row>\n                                {Data.dashBoardPage.items.map((item, index) =>\n\n                                    <Col md={4} sm={6} key={index}>\n                                        <div style={{ margin: '30px 0px' }} className=\"text-center\">\n                                            <span className=\"bText\">{item.title}</span>\n                                        </div>\n                                        <div className=\"balance-box Pmargin\"\n                                        // className={item.id == '1' ? 'balance-box' : item.id == '2' ?\n                                        //   'balance-box Pmargin' : item.id == '3' ? 'balance-box equity-box' :\n                                        //     item.id == '4' ? 'balance-box Fmargin' : item.id == '5' ? 'balance-box floating' : 'balance-box  margin-box'}\n                                        >\n                                            <div className=\"content\">\n                                                <div className=\"table-responsive\">\n\n                                                    <table className=\"table  text-center\">\n\n                                                        <tbody>\n                                                            \n                                                                {this.tableHeader()}\n                                                            \n                                                            <tr key={item.index}>\n                                                                {item.title == 'Balance' && this.showData('balance')}\n                                                                {item.title == 'Equity' && this.showData('equity')}\n                                                                {item.title == 'Margin' && this.showData('margin')}\n                                                                {item.title == 'Free Margin' && this.showData('free_margin')}\n                                                                {item.title == 'Margin %' && this.showData('margin_level')}\n                                                                {item.title == 'Unrealized P/L' && this.showData('profit')}\n                                                            </tr>\n                                                        </tbody>\n                                                    </table>\n\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </Col>\n\n                                )}\n                            </Row>\n                            <Col md={12} sm={6}>\n                                <div className={sumOfHistoryTotal + sumOfOpenTotal >= 0 ? \"summary-box\" : \"summary-box-red\"}>\n\n\n                                    {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\n                                    {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\n                <span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\n\n                                    <Col md={12} sm={12}>\n                                        <div className=\"summary-text text-center\" style={{ fontWeight: 600, color: \"#797979\" }}>Summary For ({this.state.activeProfileName}) {allHistoryRecord.history_info !== 0 && (<span> + Commission</span>)} </div>\n                                    </Col>\n                                    <Col md={12} sm={12}>\n                                        <div className=\"text-center\" style={{ fontWeight: 'bold', fontSize: \"18px\" }}>$ {' '}\n                                            <NumberFormat value={allHistoryRecord.history_info !== undefined ? sumOfHistoryTotal + sumOfOpenTotal + allHistoryRecord.history_info : sumOfHistoryTotal + sumOfOpenTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n\n                                            {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\n\n                                        </div>\n                                    </Col>\n\n                                    <div className=\"clearfix\"></div>\n                                </div>\n                            </Col>\n                        </Grid>\n                    </div>\n                }\n            </React.Fragment>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport config from \"constant/config\";\n\nclass UserDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      filter_profile: \"\",\n      loggedIn: \"\",\n      profiles: [],\n      result: [],\n    };\n  }\n  crossClick(e) {\n    e.preventDefault();\n    this.props.onHide();\n  }\n\n  componentDidMount() {\n    let data = this.props.data;\n    this.allFilterprofiles();\n    this.setState({\n      username: data.username,\n      loggedIn: data.logged_in,\n      filter_profile: JSON.parse(data.filter_profile),\n    });\n    this.setState({})\n  }\n  allFilterprofiles() {\n    let self = this;\n    axios\n      .get(config.baseurl + \"/users/allFilterprofiles\")\n      .then(function (response) {\n        if (response.status == 200) {\n          self.setState({ profiles: response.data.rows });\n        }\n      });\n  }\n  selectedProfiles() {\n    let self = this;\n    var matches = [];\n\n    for (var i = 0; i < self.state.filter_profile.length; i++) {\n      for (var e = 0; e < self.state.profiles.length; e++) {\n        if (self.state.filter_profile[i] === self.state.profiles[e].id)\n          matches.push(JSON.stringify(self.state.profiles[e].profile_name)+'  ');\n      }\n    }\n    return matches;\n  \n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <Grid fluid>\n          <div className=\"symbol-box\">\n            <div className=\"cross_div\">\n              <a onClick={(e) => this.crossClick(e)}>\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n              </a>\n            </div>\n            <div className=\"detail-text\">\n              <h3> User Details </h3>\n            </div>\n            <Row>\n              <Col md={12}>\n                <div className=\"card\">\n                  <table className=\"table mt20\">\n                    <tbody>\n                      <tr>\n                        <td className=\"b-clr\">\n                          <span>Username </span>\n                        </td>\n\n                        <td\n                          className=\"b-clr text-center\"\n                          style={{ width: \"40%\" }}\n                        >\n                          {this.state.username}\n                        </td>\n                      </tr>\n                      <tr>\n                        <td className=\"b-clr\">\n                          <span>Profile</span>\n                        </td>\n\n                        <td\n                          className=\"b-clr text-center\"\n                          style={{ width: \"40%\" }}\n                        >\n                          {this.state.filter_profile ? [ this.selectedProfiles()] :''}\n                        </td>\n                      </tr>\n                      <tr>\n                        <td className=\"b-clr \">\n                          <span>Logged In </span>\n                        </td>\n                        <td\n                          className=\"b-clr text-center\"\n                          style={{ width: \"40%\" }}\n                        >\n                          {this.state.loggedIn === 1 ? \"Yes\" : \"No\"}\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </Col>\n            </Row>\n          </div>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default UserDetail;\n","import React, { Component } from \"react\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\nimport config from \"../../constant/config.js\";\nimport \"react-tagsinput/react-tagsinput.css\";\nimport Select from \"react-select\";\nimport TagsInput from \"react-tagsinput\";\n\nconst axios = require(\"axios\");\n\nclass UserEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      loggged_in: \"\",\n      filter_profile: [],\n      id: \"\",\n      nameError: false,\n      profiles: [],\n      allChecked: false,\n      filterdata: [],\n      remove_filterdata: [],\n    };\n  }\n  // componentDidMount() {\n\n  // }\n  componentDidMount() {\n    this.allFilterprofiles();\n  }\n\n  allFilterprofiles() {\n    let abc = this.props.data;\n\n    let self = this;\n    axios\n      .get(config.baseurl + \"/users/allFilterprofiles\")\n      .then(function (response) {\n        if (response.status == 200) {\n          let data = response.data.rows.map((item) => {\n            return {\n              ...item,\n              checked: false,\n            };\n          });\n          self.setState({ profiles: data }, () => {\n            if (abc) {\n              let selectedVal = self.state.profiles\n                .filter(\n                  (data) =>\n                    JSON.parse(abc.filter_profile).includes(data.id) && true\n                )\n                .map((data) => {\n                  return { value: data.id, label: data.profile_name };\n                });\n              self.setState({\n                filter_profile: selectedVal,\n                username: abc.username,\n                loggged_in: abc.logged_in,\n                id: abc.id,\n              });\n              // self.setState({\n              //   username: abc.username,\n              //   loggged_in: abc.logged_in,\n              //   id: abc.id,\n              // });\n            }\n          });\n        }\n      });\n  }\n\n  handleChangeFilterProfile = (filter_profile) => {\n    this.setState({ filter_profile });\n  };\n  renderProfileSelect = () => {\n    const { filter_profile, profiles } = this.state;\n    let options = profiles.map((data) => {\n      return { value: data.id, label: data.profile_name };\n    });\n    return (\n      <Select\n        placeholder=\"Select Profile\"\n        value={filter_profile}\n        isMulti\n        onChange={this.handleChangeFilterProfile}\n        options={options}\n      />\n    );\n  };\n  handleusername(e) {\n    this.setState({\n      username:\n        e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1),\n      error: \"\",\n    });\n  }\n  formDataSubmit(e) {\n    e.preventDefault();\n    let self = this;\n    let list = [];\n    this.state.filter_profile && this.state.filter_profile.forEach((data) => {\n      list.push(data.value);\n    });\n    let Data = {\n      username: this.state.username,\n      filter_profile: JSON.stringify(list),\n      id: this.state.id,\n    };\n\n    axios\n      .post(config.baseurl + `/users/update`, Data)\n      .then(function (response) {\n        if (response.status == 200) {\n          self.props.onHide();\n        }\n      })\n      .catch(function (error) {});\n  }\n  crossClick(e) {\n    e.preventDefault();\n    this.props.onHide();\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <Grid fluid>\n          <div className=\"symbol-box\">\n            <div className=\"cross_div\">\n              <a onClick={(e) => this.crossClick(e)}>\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n              </a>\n            </div>\n            <div className=\"detail-text\">\n              <h3> Edit User Details</h3>\n            </div>\n            <form>\n              <div className=\"terminal-text\">\n                <p className=\"profilename pnameadjust\"> Username</p>\n                <input\n                  type=\"text\"\n                  name=\"username\"\n                  value={this.state.username}\n                  className=\"Itext\"\n                  onChange={(e) => this.handleusername(e)}\n                />\n              </div>\n              <div className=\"terminal-text\">\n                <p className=\"profilename pnameadjust\"> Profile Id's</p>\n\n                {this.renderProfileSelect()}\n              </div>\n              <div className=\"terminal-text\">\n                <p className=\"profilename pnameadjust\"> Logged In</p>\n                <input\n                  type=\"text\"\n                  name=\"loggedIn\"\n                  value={this.state.loggged_in}\n                  className=\"Itext\"\n                  readOnly\n                />\n              </div>\n              <div className=\"save_button_filter\">\n                <Button\n                  className=\"btn-primary savebutton\"\n                  variant=\"primary\"\n                  size=\"lg\"\n                  block\n                  onClick={(e) => this.formDataSubmit(e)}\n                >\n                  <b>Update</b>\n                </Button>\n              </div>\n            </form>\n          </div>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default UserEdit;\n","import React, { Component } from \"react\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\nimport config from \"../../constant/config.js\";\nimport \"react-tagsinput/react-tagsinput.css\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\nimport TagsInput from \"react-tagsinput\";\nimport Select from \"react-select\";\n\nconst axios = require(\"axios\");\n\nclass AddUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      filter_profile: [],\n      nameError: false,\n      profiles: [],\n      all: [],\n    };\n  }\n  componentDidMount() {\n    this.fetchusersdata();\n    this.allFilterprofiles();\n  }\n\n  fetchusersdata() {\n    let self = this;\n    axios\n      .get(config.baseurl + \"/users/allusers?page=1\")\n      .then(function (response) {\n        if (response.status == 200) {\n          self.setState({ userValues: response.data.rows });\n        }\n      });\n  }\n\n  allFilterprofiles() {\n    let self = this;\n    axios\n      .get(config.baseurl + \"/users/allFilterprofiles\")\n      .then(function (response) {\n        if (response.status == 200) {\n          let data = response.data.rows.map((item) => {\n            return {\n              ...item,\n              checked: false,\n            };\n          });\n          self.setState({ profiles: data });\n        }\n      });\n  }\n\n  handleChangeFilterProfile = (filter_profile) => {\n    this.setState({ filter_profile });\n  };\n  renderProfileSelect = () => {\n    const { filter_profile, profiles } = this.state;\n    let options = profiles.map((data) => {\n      return { value: data.id, label: data.profile_name };\n    });\n    return (\n      <Select\n        placeholder=\"Select Profile\"\n        value={filter_profile}\n        isMulti\n        onChange={this.handleChangeFilterProfile}\n        options={options}\n      />\n    );\n  };\n\n  handleusername(e) {\n    this.setState({ nameError: false });\n    if (this.state.userValues.length <= 0) {\n      this.setState({\n        username:\n          e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1),\n        error: \"\",\n      });\n    } else {\n      this.state.userValues.filter((data) => {\n        if (data.username.toUpperCase() !== e.target.value.toUpperCase()) {\n          this.setState({\n            username:\n              e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1),\n            error: \"\",\n          });\n        } else {\n          this.setState({ nameError: true }, () => {});\n          NotificationManager.listNotify = [];\n          NotificationManager.error(\"User already exits!\");\n        }\n      });\n    }\n  }\n  handlepassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n  formDataSubmit(e) {\n    let self = this\n    let list = [];\n    (this.state.filter_profile) && (this.state.filter_profile).forEach(data => {\n        list.push(data.value);\n    });\n    e.preventDefault();\n    let Data = {\n      username: this.state.username,\n      password: this.state.password,\n      filter_profile: JSON.stringify(list),\n    };\n    axios\n      .post(config.baseurl + \"/users/create\", Data)\n      .then(function (response) {\n        if (response.status == 200) {\n         self.props.onHide();\n        }\n      })\n      .catch(function (error) {});\n  }\n  crossClick(e) {\n    e.preventDefault();\n    this.props.onHide();\n  }\n  \n  render() {\n    return (\n      <>\n        <NotificationContainer />\n        <div className=\"content\">\n          <Grid fluid>\n            <div className=\"symbol-box\">\n              <div className=\"cross_div\">\n                <a onClick={(e) => this.crossClick(e)}>\n                  <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n                </a>\n              </div>\n              <div className=\"detail-text\">\n                <h3> Add User </h3>\n              </div>\n              {/* <div className=\"terminal-text\">\n                <label className=\"pnameadjust\"> Profile Name </label>\n                <input type=\"text\" name=\"profilename\" className=\"Itext\" placeholder=\"Profile Name\" onChange={(e) => this.handleprofileName(e)} />\n              </div> */}\n\n              <form>\n                <div className=\"terminal-text\">\n                  <p className=\"profilename pnameadjust\"> Username</p>\n                  <input\n                    type=\"text\"\n                    name=\"username\"\n                    value={this.state.username}\n                    className=\"Itext\"\n                    onChange={(e) => this.handleusername(e)}\n                  />\n                </div>\n                <div className=\"terminal-text\">\n                  <p className=\"profilename pnameadjust\"> Password</p>\n                  <input\n                    type=\"password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    className=\"Itext\"\n                    onChange={(e) => this.handlepassword(e)}\n                  />\n                </div>\n                <div className=\"terminal-text\">\n                  <p className=\"profilename pnameadjust\"> Profile</p>\n                 \n                  {this.renderProfileSelect()}\n                </div>\n                <div className=\"save_button_filter\">\n                  <div className=\"savebtn\">\n                    <Button\n                      className=\"btn-primary savebutton\"\n                      variant=\"primary\"\n                      size=\"lg\"\n                      block\n                      onClick={(e) => this.formDataSubmit(e)}\n                    >\n                      <b>Save</b>\n                    </Button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </Grid>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default AddUser;\n","import React, { Component } from \"react\";\nimport \"react-calendar/dist/Calendar.css\";\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport config from \"../../constant/config.js\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\nimport { api } from \"api\";\nimport ReactPaginate from \"react-paginate\";\nimport UserDetail from \"./userdetail\";\nimport UserEdit from \"./useredit\";\nimport AddUser from \"./adduser\";\nimport myInitObject from \"../../api\";\n\nconst axios = require(\"axios\");\n\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addUser: false,\n      filter: true,\n      usersData: [],\n      deleteData: [],\n      editData: [],\n      showDelete: false,\n      showEdit: false,\n      detailForm: false,\n      detailData: [],\n      count: \"\",\n      pages: \"\",\n      page: 1,\n      dateTime: \"\",\n    };\n  }\n  fetchusersdata() {\n    let self = this;\n    axios\n      .get(config.baseurl + `/users/allusers?page=${self.state.page}`)\n      .then(function (response) {\n        if (response.status == 200) {\n          // console.log(response.data, 'users')\n          self.setState({\n            usersData: response.data.rows,\n            count: response.data.count,\n            pages: response.data.pages,\n          });\n        }\n      });\n  }\n  handlePageClick = (data) => {\n    this.setState({ page: data.selected + 1 }, () => {\n      this.fectheAllAccount(this.state.page);\n    });\n  };\n  showaddUser = () => {\n    this.setState({ addUser: true, filter: false });\n  };\n  componentDidMount() {\n    this.fetchusersdata();\n    setInterval(() => {\n      if (myInitObject.responsLUT === undefined) {\n        console.log(\"no data\");\n      } else {\n        this.setState({\n          //last update time\n          dateTime: myInitObject.fetchLastUpdatedTime.filteredInfoTime,\n        });\n      }\n    }, 1000);\n  }\n\n  editUser = (e, data) => {\n    e.preventDefault();\n    this.setState({ showEdit: true, editData: data });\n  };\n\n  deleteUser(e, data) {\n    e.preventDefault();\n    this.setState({ deleteData: data, showDelete: true });\n  }\n  deletepopupClick(e) {\n    e.preventDefault();\n    let Data = {\n      id: this.state.deleteData.id,\n    };\n    let self = this;\n    axios\n      .post(config.baseurl + \"/users/delete\", Data)\n      .then(function (response) {\n        if (response.status == 200) {\n          self.setState({ showDelete: false });\n          self.fetchusersdata();\n        }\n      });\n  }\n  deletepopupclose(e) {\n    e.preventDefault();\n    this.setState({ showDelete: false });\n  }\n  viewUser(e, data) {\n    e.preventDefault();\n\n    this.setState({ detailForm: true, detailData: data });\n  }\n\n  createTr = () => {\n    return (\n      this.state.usersData.length > 0 &&\n      this.state.usersData.map((item, index) => {\n        return (\n          <tr key={index}>\n            <th scope=\"row\">{index + 1}</th>\n            <td>{item.username}</td>\n            <td>{item.logged_in}</td>\n            <td>\n              <span onClick={(e) => this.viewUser(e, item)}>\n                <i className=\"pointer fa fa-eye facolor\" aria-hidden=\"true\"></i>\n              </span>\n              <span onClick={(e) => this.editUser(e, item)}>\n                <i\n                  className=\"pointer fa fa-pencil-square-o facolor\"\n                  aria-hidden=\"true\"\n                ></i>\n              </span>\n              <span onClick={(e) => this.deleteUser(e, item)}>\n                <i\n                  className=\"pointer fa fa-trash facolor\"\n                  aria-hidden=\"true\"\n                ></i>\n              </span>\n            </td>\n          </tr>\n        );\n      })\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <NotificationContainer />\n        <Row>\n          <div className=\"lastUpdate\">\n            <span> Last Updated : </span>\n            {this.state.dateTime}(UTC){\" \"}\n          </div>\n        </Row>\n        <div className=\"content\">\n          {this.state.detailForm ? (\n            <UserDetail\n              data={this.state.detailData}\n              show={this.state.detailForm}\n              onHide={() => this.setState({ detailForm: false })}\n            />\n          ) : (\n            <>\n              {this.state.showEdit ? (\n                <UserEdit\n                  data={this.state.editData}\n                  show={this.state.showEdit}\n                  onHide={() =>\n                    this.setState({ showEdit: false }, () =>\n                      this.fetchusersdata()\n                    )\n                  }\n                />\n              ) : (\n                <>\n                  {!this.state.addUser && (\n                    <Grid fluid>\n                      <div className=\"selection-box\">\n                        <span className=\"terminal-text\"> Users </span>\n                      </div>\n                      <button\n                        className=\"pull-right filter-add-button\"\n                        onClick={this.showaddUser}\n                      >\n                        Add New\n                      </button>\n                    </Grid>\n                  )}\n                  {this.state.addUser ? (\n                    <AddUser\n                      show={this.state.addUser}\n                      onHide={() =>\n                        this.setState({ addUser: false }, () => {\n                          this.fetchusersdata();\n                        })\n                      }\n                    />\n                  ) : (\n                    <div style={{ background: \"#ffffff\" }}>\n                      <Row>\n                        <Col md={12}>\n                          <div style={{ padding: \"10px\" }}>\n                            <table className=\"table table-striped table-bordered\">\n                              <thead>\n                                <tr>\n                                  <th scope=\"col\">Sr.No.</th>\n                                  <th scope=\"col\">User Name</th>\n                                  <th scope=\"col\">Logged In</th>\n                                  <th scope=\"col\">Action</th>\n                                </tr>\n                              </thead>\n                              <tbody>{this.createTr()}</tbody>\n                            </table>\n                            <ReactPaginate\n                              previousLabel={\"prev\"}\n                              nextLabel={\"next\"}\n                              breakLabel={\"...\"}\n                              pageCount={this.state.pages}\n                              marginPagesDisplayed={9}\n                              pageRangeDisplayed={9}\n                              onPageChange={(e) => this.handlePageClick(e)}\n                              containerClassName={\"pagination\"}\n                              subContainerClassName={\"pages pagination\"}\n                              activeClassName={\"active\"}\n                            />\n                          </div>\n                        </Col>\n                      </Row>\n                    </div>\n                  )}\n\n                  {this.state.showDelete && (\n                    <div className=\"delete_popup\">\n                      <h3>Are you sure ?</h3>\n                      <span\n                        className=\"pointer dltbtn\"\n                        onClick={(e) => this.deletepopupClick(e)}\n                      >\n                        Delete\n                      </span>\n                      <span\n                        className=\"pointer closebtn\"\n                        onClick={(e) => this.deletepopupclose(e)}\n                      >\n                        Close\n                      </span>\n                    </div>\n                  )}\n                </>\n              )}\n            </>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Users;\n","import Dashboard from \"views/Dashboard.jsx\";\n// import UserProfile from \"views/UserProfile.jsx\";\n// import TableList from \"views/TableList.jsx\";\n// import Typography from \"views/Typography.jsx\";\n// import Icons from \"views/Icons.jsx\";\n// import Maps from \"views/Maps.jsx\";\n// import Notifications from \"views/Notifications.jsx\";\n// import Upgrade from \"views/Upgrade.jsx\";\n// import Filter from '../src/views/Filter';\nimport Innerlogin from 'views/Innerlogin';\nimport Filterprofile from './views/filter/Filterprofile';\nimport Swap from '../src/views/swap';\nimport calculating from '../src/views/calculating';\nimport Exploser from '../src/views/exploser';\nimport ContractSize from './views/ContractSize/ContractSize';\nimport Statistics from './views/Statistics/Statistics';\nimport myInitObject from './api'\nimport Users from \"../src/views/users/users\";\n\nconst dashboardRoutes = [\n  {\n    id: 1,\n    child: false,\n    menu: false,\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"pe-7s-graph\",\n    component: Dashboard,\n    layout: \"/dashboard\",\n    data: myInitObject\n  },\n\n  {\n    id: 2,\n    child: false,\n    menu: false,\n    path: \"/Statistics\",\n    name: \" Statistics\",\n    icon: \"pe-7s-filter\",\n    component: Statistics,\n    layout: \"/dashboard\",\n  },\n\n\n  {\n    id: 3,\n    child: false,\n    menu: false,\n    path: \"/calculating\",\n    name: \"Positions\",\n    icon: \"pe-7s-calculator\",\n    component: calculating,\n    layout: \"/dashboard\",\n  },\n  {\n    id: 3,\n    child: false,\n    menu: false,\n    path: \"/contractSize\",\n    name: \" Contract Size Exposure\",\n    icon: \"pe-7s-search\",\n    component: ContractSize,\n    // component: calculating,\n    layout: \"/dashboard\",\n  },\n \n\n\n  // {\n  //   path: \"/exploser\",\n  //   name: \"Exploser\",\n  //   icon: \"pe-7s-search\",\n  //   component: Exploser,\n  //   layout: \"/admin\"\n  // },\n\n\n  {\n    id: 4,\n    child: true,\n    menu: false,\n    // path: \"/innerlogin\",\n    name: \"Settings\",\n    // component: Innerlogin,\n    icon: \"pe-7s-note2\",\n    // layout: \"/admin\",\n\n\n    resources: [\n      {\n\n        path: \"/settings/innerlogin\",\n        name: \"Login/Accounts\",\n        icon: \"pe-7s-note2\",\n        component: Innerlogin,\n        layout: \"/dashboard\"\n      },\n\n\n      {\n\n        path: \"/settings/filterpage\",\n        name: \"Filter\",\n        icon: \"pe-7s-filter\",\n        component: Filterprofile,\n        layout: \"/dashboard\"\n      },\n\n\n      {\n\n        path: \"/settings/swap\",\n        name: \"Swap\",\n        icon: \"pe-7s-graph\",\n        component: Swap,\n        layout: \"/dashboard\",\n      },\n      {\n\n        path: \"/settings/users\",\n        name: \"Users\",\n        icon: \"pe-7s-graph\",\n        component: Users,\n        layout: \"/dashboard\",\n      },\n    ]\n  },\n\n  // {\n  //   path: \"/typography\",\n  //   name: \"Typography\",\n  //   icon: \"pe-7s-news-paper\",\n  //   component: Typography,\n  //   layout: \"/dashboard\"\n  // },\n  // {\n  //   path: \"/icons\",\n  //   name: \"Icons\",\n  //   icon: \"pe-7s-science\",\n  //   component: Icons,\n  //   layout: \"/dashboard\"\n  // },\n  // {\n  //   path: \"/maps\",\n  //   name: \"Maps\",\n  //   icon: \"pe-7s-map-marker\",\n  //   component: Maps,\n  //   layout: \"/dashboard\"\n  // },\n  // {\n  //   path: \"/notifications\",\n  //   name: \"Notifications\",\n  //   icon: \"pe-7s-bell\",\n  //   component: Notifications,\n  //   layout: \"/dashboard\"\n  // },\n  // {\n  //   upgrade: true,\n  //   path: \"/upgrade\",\n  //   name: \"Upgrade to PRO\",\n  //   icon: \"pe-7s-rocket\",\n  //   component: Upgrade,\n  //   layout: \"/dashboard\"\n  // }\n];\n\nexport default dashboardRoutes;\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport NotificationSystem from \"react-notification-system\";\nimport IdleTimer from 'react-idle-timer';\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\n// import Footer from \"components/Footer/Footer\";\nimport Sidebar from \"components/Sidebar/Sidebar\";\n// import FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\n\nimport { style } from \"variables/Variables.jsx\";\n\nimport routes from \"routes.js\";\n\nimport image from \"assets/img/sidebar-3.jpg\";\nimport { api } from '../api'\n\nclass Admin extends Component {\n  _isMounted = false;\n  constructor(props) {\n    super(props);\n    this.state = {\n      _notificationSystem: null,\n      image: image,\n      color: \"black\",\n      hasImage: true,\n      fixedClasses: \"dropdown show-dropdown open\",\n      timeout: 1000 * 900 * 1,\n      userLoggedIn: false,\n      isTimedOut: false\n    };\n    this.idleTimer = null\n    this.onAction = this._onAction.bind(this)\n    this.onActive = this._onActive.bind(this)\n    this.onIdle = this._onIdle.bind(this)\n    this.handleLogout = this.handleLogout.bind(this)\n  }\n\n\n  handleLogout() {\n    // console.log(new Date());\n    localStorage.clear()\n    this.props.history.push('/login')\n  }\n  _onAction(e) {\n    // console.log('user did something', e)\n    this.setState({ isTimedOut: false })\n    // console.log(new Date());\n  }\n\n  _onActive(e) {\n    // console.log('user is active', e)\n    this.setState({ isTimedOut: false })\n  }\n\n  _onIdle(e) {\n    // console.log('user is idle', e)\n\n    const isTimedOut = this.state.isTimedOut\n    if (isTimedOut) {\n      this.handleLogout()\n    } else {\n      this.idleTimer.reset();\n      this.setState({ isTimedOut: true })\n    }\n\n  }\n  // handleNotificationClick = position => {\n  //   var color = Math.floor(Math.random() * 4 + 1);\n  //   var level;\n  //   switch (color) {\n  //     case 1:\n  //       level = \"success\";\n  //       break;\n  //     case 2:\n  //       level = \"warning\";\n  //       break;\n  //     case 3:\n  //       level = \"error\";\n  //       break;\n  //     case 4:\n  //       level = \"info\";\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  //   this.state._notificationSystem.addNotification({\n  //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n  //     message: (\n  //       <div>\n  //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n  //         every web developer.\n  //       </div>\n  //     ),\n  //     level: level,\n  //     position: position,\n  //     autoDismiss: 15\n  //   });\n  // };\n  getRoutes = routes => {\n    let routeArray = []\n    routes.map((data) => {\n      routeArray.push(data)\n      let role = JSON.parse(localStorage.getItem('currentUser'))[0].role;\n      if (role === \"user\" && data.child === true) {\n        data.resources.map((prop) => {\n          if (prop.name !== \"Users\") {\n            routeArray.push(prop)\n          }\n        })\n      } else if (data.child === true) {\n        data.resources.map((prop) => {\n          routeArray.push(prop)\n        })\n      }\n    })\n    return routeArray.map((prop, key) => {\n      if (prop.layout === \"/dashboard\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            render={props => (\n              <prop.component\n                {...props}\n                handleClick={this.handleNotificationClick}\n              />\n            )}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    // return \"Brand\";\n  };\n  handleImageClick = image => {\n    this.setState({ image: image });\n  };\n  handleColorClick = color => {\n    this.setState({ color: color });\n  };\n  handleHasImage = hasImage => {\n    this.setState({ hasImage: hasImage });\n  };\n  handleFixedClick = () => {\n    if (this.state.fixedClasses === \"dropdown\") {\n      this.setState({ fixedClasses: \"dropdown show-dropdown open\" });\n    } else {\n      this.setState({ fixedClasses: \"dropdown\" });\n    }\n  };\n  componentDidMount() {\n    this._isMounted = true;\n    if (this._isMounted) {\n      let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n      if (currentUser === null) {\n        this.props.history.push('/login')\n        return;\n      } else {\n        api()\n        setInterval(() => {\n          api()\n        }, 300000);\n\n      }\n    }\n\n    //   this.setState({ _notificationSystem: this.refs.notificationSystem });\n    //   var _notificationSystem = this.refs.notificationSystem;\n    //   var color = Math.floor(Math.random() * 4 + 1);\n    //   var level;\n    //   switch (color) {\n    //     case 1:\n    //       level = \"success\";\n    //       break;\n    //     case 2:\n    //       level = \"warning\";\n    //       break;\n    //     case 3:\n    //       level = \"error\";\n    //       break;\n    //     case 4:\n    //       level = \"info\";\n    //       break;\n    //     default:\n    //       break;\n    //   }\n    //   _notificationSystem.addNotification({\n    //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n    //     message: (\n    //       <div>\n    //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n    //         every web developer.\n    //       </div>Modal\n    //     ),\n    //     level: level,\n    //     position: \"tr\",\n    //     autoDismiss: 15\n    //   });\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n    }\n    if (e.history.action === \"PUSH\") {\n      // document.documentElement.scrollTop = 0;\n      // document.scrollingElement.scrollTop = 0;\n      // this.refs.mainPanel.scrollTop = 0;\n\n    }\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n\n\n  render() {\n    return (\n      <>\n        <IdleTimer\n          ref={ref => { this.idleTimer = ref }}\n          element={document}\n          onActive={this.onActive}\n          onIdle={this.onIdle}\n          onAction={this.onAction}\n          debounce={250}\n          timeout={this.state.timeout} />\n        <div className=\"wrapper\">\n          <NotificationSystem ref=\"notificationSystem\" style={style} />\n          <Sidebar {...this.props} routes={routes} image={this.state.image}\n            color={this.state.color}\n            hasImage={this.state.hasImage} />\n          <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\n            <AdminNavbar\n              {...this.props}\n              brandText={this.getBrandText(this.props.location.pathname)}\n            />\n            <Switch>{this.getRoutes(routes)}</Switch>\n            {/* <Footer /> */}\n            {/* <FixedPlugin\n            handleImageClick={this.handleImageClick}\n            handleColorClick={this.handleColorClick}\n            handleHasImage={this.handleHasImage}\n            bgColor={this.state[\"color\"]}\n            bgImage={this.state[\"image\"]}\n            mini={this.state[\"mini\"]}\n            handleFixedClick={this.handleFixedClick}\n            fixedClasses={this.state.fixedClasses}\n          /> */}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Admin;\n","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/css/animate.min.css\";\nimport \"./assets/sass/light-bootstrap-dashboard-react.scss?v=1.3.0\";\nimport \"./assets/css/demo.css\";\nimport \"./assets/css/pe-icon-7-stroke.css\";\nimport \"./assets/css/dashboard.css\";\nimport innerfilter from \"./views/filter/innerfilter\";\nimport Login from \"./views/login\";\n\n\nimport AdminLayout from \"./layouts/Admin.jsx\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/dashboard\" render={props => <AdminLayout {...props} />} />\n\n      <Route exact path=\"/dashboard/innerfilter\" component={innerfilter} />\n      <Route exact from=\"/login\" component={Login} />\n      {/* <Redirect from=\"/\" to=\"/admin/dashboard\" /> */}\n      {/* <Redirect from=\"/\" component={Login} /> */}\n      <Redirect from=\"/\" to=\"/login\"/>\n      {/* <Route exact path=\"/innerfilter\" component={innerfilter} /> */}\n\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}