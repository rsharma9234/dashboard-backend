{"version":3,"sources":["variables/Variables.jsx","assets/img/sidebar-3.jpg","../node_modules/typescript/lib sync","constant/config.js","views/filter/innerfilter.js","views/login/index.js","components/Navbars/AdminNavbarLinks.jsx","components/Navbars/AdminNavbar.jsx","components/Sidebar/Sidebar.jsx","views/Closeposition.js","views/Data.js","views/Openposition.js","api.js","views/Innerlogin.js","views/TableList.jsx","views/Dashboard.jsx","views/filter/filteredit.js","views/filter/filterdetail.js","views/filter/Filterprofile.js","views/DatatablePage.js","views/swap/index.js","views/calculating/index.js","views/exploser/index.js","views/ContractSize/ContractSize.js","views/Statistics/Statistics.js","views/users/userdetail.js","views/users/useredit.js","views/users/adduser.js","views/users/users.js","routes.js","layouts/Admin.jsx","index.js"],"names":["defaultWidth","window","screen","width","style","Wrapper","Containers","DefaultStyle","position","padding","zIndex","WebkitBoxSizing","MozBoxSizing","boxSizing","height","display","border","fontSize","WebkitFontSmoothing","fontFamily","fontWeight","color","tl","top","bottom","left","right","tr","tc","margin","marginLeft","bl","br","bc","NotificationItem","cursor","borderRadius","opacity","transition","WebkitTransform","transform","willChange","isHidden","isVisible","success","borderTop","backgroundColor","WebkitBoxShadow","MozBoxShadow","boxShadow","error","warning","info","Title","marginTop","MessageWrapper","marginRight","maxWidthwidth","Dismiss","float","lineHeight","outline","textAlign","Action","background","ActionWrapper","module","exports","thArray","tdArray","iconsArray","dataPie","labels","series","legendPie","names","types","dataSales","optionsSales","low","high","showArea","axisX","showGrid","lineSmooth","showLine","showPoint","fullWidth","chartPadding","responsiveSales","labelInterpolationFnc","value","legendSales","dataBar","optionsBar","seriesBarDistance","responsiveBar","legendBar","webpackEmptyContext","req","e","Error","code","keys","resolve","id","config","baseurl","axios","require","Innerfilter","props","getSymbolInfo","self","get","then","response","status","setState","allAccounts","data","rows","allSymbols","handleDropdownChange","selectValue","target","handleChangeDate","date","startDate","handleEndDate","state","endDate","handleChangeDateTo","startDateTo","handleEndDateTo","endDateTo","handleChange","event","Array","from","selectedOptions","item","renderAccountSelect","selectedAccountOption","options","map","label","login","placeholder","onChange","handleChangeAccount","handeChangeShowCommission","showCommission","showAddCommission","handleChangeAccountTo","selectedAccountOptionTo","renderAccountSelectTo","handleChangeCommissionAccount","selectedCommissionAccount","renderCommissionAccount","handleChangeMagicNumber","magicNumber","handleChangeMagicNumberTo","magicNumberTo","handleChangeTicket","ticket","handleChangeTicketTo","ticketTo","handleChangeSymbol","selectedSymbolOption","renderSymbolSelect","name","isMulti","handleChangeSymbolTo","selectedSymbolOptionTo","renderSymbolSelectTo","changeIncludeDefaultProperty","include","exclude","changeExcludeDefaultProperty","changeIncludeDefaultPropertyTo","includeTo","excludeTo","changeExcludeDefaultPropertyTo","changeIncludeDefaultPropertyTicket","includeTicket","includeTicketTo","excludeTicket","changeExcludeDefaultPropertyTicket","changeIncludeDefaultPropertyTicketTo","excludeTicketTo","changeExcludeDefaultPropertyTicketTo","profileName","showCommisoin","autoSyncClose","profileValues","nameError","showMagicNumber","showMagicNumberTo","tags","include_exclude_status","this","fetchfilterdata","length","charAt","toUpperCase","slice","filter","profile_name","NotificationManager","listNotify","preventDefault","from_status","to_status","from_status_ticket","to_status_ticket","symbolFrom","symbolto","Data","from_account_id","to_account_id","commission_acount_id","startdateFrom","enddateFrom","startdateTo","enddateTo","from_symbols","JSON","stringify","to_symbols","auto_close","from_magic_number","to_magic_number","from_include_exclude_status","to_include_exclude_status","from_ticket","to_ticket","from_include_exclude_status_ticket","to_include_exclude_status_ticket","createdAt","Date","updatedAt","post","onHide","catch","className","Grid","fluid","onClick","crossClick","aria-hidden","type","handleprofileName","defaultChecked","handleChangeAutoSync","Row","Col","md","selected","isClearable","placeholderText","dateFormat","strictParsing","autoOk","onValidationReject","console","log","validationRegex","inputProps","checked","Button","variant","size","block","formDataSubmit","Component","Login","toogle","loginForm","handleClose","handleShow","setShow","createNotification","show","username","password","alert","persons","shwPwd","shwMsg","invalidUsername","invalidPassword","accountlist","bind","onSubmit","trim","userdetail","localStorage","setItem","history","push","message","err","parse","getItem","sm","disabled","AdminNavbarLinks","logout","a","logged_in","clear","currentUser","notification","Nav","NavItem","eventKey","href","NavDropdown","title","noCaret","MenuItem","pullRight","Header","mobileSidebarToggle","sidebarExists","document","documentElement","classList","toggle","node","createElement","onclick","parentElement","removeChild","body","appendChild","Navbar","Brand","brandText","Toggle","Collapse","Sidebar","routes","menu","innerWidth","routeName","location","pathname","indexOf","updateDimensions","addEventListener","image","data-color","data-image","hasImage","prop","key","redirect","upgrade","activeRoute","layout","path","to","activeClassName","icon","child","undefined","resources","sub","index","Closeposition","allHistoryRecord","fromHistoryOrderInfo","toHistoryOrderInfo","commissionHistoryOrderInfo","useState","fromSymbols","toSymbols","Object","entries","join","fromsum","tosum","commission","swap","profit","sumOfTotal","noRecord","total","accountFromInfo","alias","displayType","thousandSeparator","decimalScale","accountToInfo","marginBottom","accountCommissionInfo","history_info","tablePage","items","lot","closed","price","textA","dashBoardPage","textB","Openposition","allOpenRecord","fromOpenOrderInfo","toOpenOrderInfo","order_type","lots","intervalSet","timerWaitInterval","myInitObject","api","fetchAllHistoryTrade","responsHT","fetchAllOpenTrade","responsOT","fetchAllAccounts","responsAC","fetchActivefilterdata","responsAF","fetchLastUpdatedTime","responsLUT","fetchStatusData","responsSD","calculatingOpenTrade","responsCOT","calculatingHistoryTrade","responsCHT","calculatingCommission","responsCC","fetchAllSymbol","responsAS","fetchdailyswaps","responsDS","usersAllAccounts","responsAAC","responsFF","TableList","fetchDataAccordingSymbols","symbol","filterlist","selectedOption","renderSymbols","isOpen2","setInterval","activeProfileName","errorMassege","concat","i","ar","class","Dashboard","showData","accountDetailValue","accounts_details","currency","tableHeader","details","dateTime","fromAccounts","fromSymbol","toAccounts","toSymbol","fromOpenOrderInfos","toOpenOrderInfos","totalTo","blockloader","autoClose","loading","filteredInfoTime","contract_size","json","legend","fromsum1","tosum1","sumOfTotal1","role","lg","xs","toFixed","margin_currency","timerWait","Innerlogin","handlePageClick","page","fectheAllAccount","changeServer","is_server","checkUserConnected","broker","connected","currentAddLogin","currentAddBroker","currentAddAlias","clearInterval","timerShow","setIntervalCustom","content","innerHTML","closebtn","swal","timer","button","handleCloseEdit","editForm","handleCloseDetail","detailForm","createTr","scope","launched","viewFilter","editFilter","onUpdate","count","pages","re","test","text","user","edituser","editserver","editalias","editData","editstatus","Modal","Body","closeButton","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","editAlias","FilterEdite","l","rules","required","abc","from_symbol","to_symbol","all_from_symbols","all_to_symbols","moment","FilterDetail","showMagicNumberFrom","showTicketFrom","showTicketTo","format","Filterprofile","showInnerfilter","createWariningNotification","showEdit","editeData","newDate","filterData","activateClick","deactivateClick","deleteFilter","deleteData","showDelete","detailData","deletepopupClick","deletepopupclose","DatatablePage","columns","field","sort","swap_long","Number","parseFloat","swap_short","responsive","bordered","small","Swap","dailySwap","setdailySwap","setloading","setStartDate","setEndDate","useEffect","sd","ed","result","d","time","Container","Label","selectsStart","selectsEnd","minDate","dataTOtalcloseFrom","comissionTotal","lotsTotal","profitTotal","swapTotal","dataTotalClosetTo","dataTOtalOpenTo","dataTOtalOpenFrom","ContractSize","uniqueSymbols","sumOfHistoryTotal","openfromsum","opentosum","sumOfOpenTotal","isNaN","parseInt","Fragment","Statistics","noGutters","UserDetail","loggedIn","UserEdit","loggged_in","logggedIn","handleusername","AddUser","fetchusersdata","userValues","handlepassword","Users","showaddUser","addUser","editUser","usersData","viewUser","deleteUser","dashboardRoutes","component","isOpen","setIsOpen","setIsOpen2","setIsOpen3","errormassage","setIErrormassage","isOpen3","fromAccountId","setFromAccountId","toAccountId","setToAccountId","fromOpenTrade","setFromOpenTrade","toOpenTrade","setToOpenTrade","fromHistoryTrade","setFromHistoryTrade","toHistoryTrade","setToHistoryTrade","setCommissionDetails","openTotal","setopenTotal","historyTotal","sethistoryTotal","commissionValue","setCommissionValue","setdateTime","setcustomSwap","setLoading","setallHistoryRecord","setactiveProfileName","totalOfOpenOrder","customSwapTable","totalOfHistoryOrder","newCommissionRecord","fromclosedata","fromopendata","toclosedata","toopendata","newData","b","open_time","split","reverse","newopenData","newcloseData","totalOpen","reduce","totalClose","totalfromCloseSwap","totalfromOpenSwap","totalfromCloseCommission","totalfromOpenCommission","totaltoCloseSwap","totaltoOpenSwap","totaltoCloseCommission","totaltoOpenCommission","overflowX","last_price","utc","account_id","open_price","close_price","colSpan","fromOpenTradeTr","toOpenTradeTr","overflowY","close_time","fromHistoryTradeTr","toHistoryTradeTr","totalProfit","equity","Admin","getRoutes","routeArray","render","handleClick","handleNotificationClick","getBrandText","handleImageClick","handleColorClick","handleHasImage","handleFixedClick","fixedClasses","_notificationSystem","action","scrollTop","scrollingElement","refs","mainPanel","ref","AdminNavbar","ReactDOM","exact","innerfilter","getElementById"],"mappings":"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,kBACA,aACA,mBACA,aACA,cACA,eACA,qBACA,iBACA,cACA,cACA,eACA,kBACA,eACA,iBACA,eACA,cACA,YACA,eACA,aACA,qBACA,aACA,cACA,kBACA,uBACA,YACA,qBACA,WACA,iBACA,mBACA,wBACA,cACA,oBACA,eACA,2BACA,cACA,mBACA,oBACA,0BACA,iBACA,mBACA,eACA,0BACA,iBACA,eACA,aACA,gBACA,gBACA,kBACA,cACA,aACA,eACA,eACA,iBACA,cACA,cACA,cACA,eACA,eACA,YACA,cACA,kBACA,aACA,gBACA,eACA,gBACA,gBACA,cACA,eACA,eACA,aACA,gBACA,aACA,eACA,eACA,gBACA,iBACA,sBACA,kBACA,cACA,cACA,cACA,gBACA,aACA,aACA,cACA,cACA,kBACA,cACA,aACA,mBACA,aACA,YACA,cACA,YACA,sBACA,YACA,cACA,aACA,YACA,oBACA,oBACA,oBACA,cACA,qBACA,iBACA,aACA,aACA,mBACA,kBACA,cACA,cACA,aACA,aACA,gBACA,cACA,aACA,YACA,mBACA,aACA,kBACA,uBACA,eACA,aACA,aACA,aACA,gBACA,aACA,aACA,cACA,aACA,eACA,aACA,aACA,aACA,cACA,cACA,eACA,eACA,eACA,cACA,eACA,cACA,gBACA,aACA,eACA,aACA,eACA,aACA,gBACA,gBACA,aACA,aACA,eACA,iBACA,iBACA,iBACA,iBACA,aACA,YACA,gBACA,aACA,eACA,kBACA,eACA,gBACA,gBACA,eACA,cACA,cACA,cACA,aACA,aACA,eACA,aACA,mBACA,gBACA,aACA,aACA,kBACA,gBACA,aACA,gBACA,aACA,aACA,kBACA,eACA,eACA,cACA,iBAwHAC,QA/GY,CACZC,OAAQ,CAAC,MAAO,MAAO,OACvBC,OAAQ,CAAC,GAAI,GAAI,KA8GjBC,UA5Gc,CACdC,MAAO,CAAC,OAAQ,SAAU,eAC1BC,MAAO,CAAC,OAAQ,SAAU,YA2G1BC,UAvGc,CACdL,OAAQ,CACN,SACA,UACA,SACA,SACA,SACA,UA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","file":"static/js/main.05b6a4c4.chunk.js","sourcesContent":["/*!\r\n\r\n=========================================================\r\n* Light Bootstrap Dashboard React - v1.3.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\n//\r\n// //\r\n// // // For notifications\r\n// //\r\n//\r\nvar defaultWidth =\r\n  window.screen.width > 768\r\n    ? (window.screen.width * 1) / 3\r\n    : window.screen.width;\r\n\r\nvar style = {\r\n  Wrapper: {},\r\n  Containers: {\r\n    DefaultStyle: {\r\n      position: \"fixed\",\r\n      width: defaultWidth,\r\n      padding: \"10px 10px 10px 20px\",\r\n      zIndex: 9998,\r\n      WebkitBoxSizing: \"\",\r\n      MozBoxSizing: \"\",\r\n      boxSizing: \"\",\r\n      height: \"auto\",\r\n      display: \"inline-block\",\r\n      border: \"0\",\r\n      fontSize: \"14px\",\r\n      WebkitFontSmoothing: \"antialiased\",\r\n      fontFamily: '\"Roboto\",\"Helvetica Neue\",Arial,sans-serif',\r\n      fontWeight: \"400\",\r\n      color: \"#FFFFFF\"\r\n    },\r\n\r\n    tl: {\r\n      top: \"0px\",\r\n      bottom: \"auto\",\r\n      left: \"0px\",\r\n      right: \"auto\"\r\n    },\r\n\r\n    tr: {\r\n      top: \"0px\",\r\n      bottom: \"auto\",\r\n      left: \"auto\",\r\n      right: \"0px\"\r\n    },\r\n\r\n    tc: {\r\n      top: \"0px\",\r\n      bottom: \"auto\",\r\n      margin: \"0 auto\",\r\n      left: \"50%\",\r\n      marginLeft: -(defaultWidth / 2)\r\n    },\r\n\r\n    bl: {\r\n      top: \"auto\",\r\n      bottom: \"0px\",\r\n      left: \"0px\",\r\n      right: \"auto\"\r\n    },\r\n\r\n    br: {\r\n      top: \"auto\",\r\n      bottom: \"0px\",\r\n      left: \"auto\",\r\n      right: \"0px\"\r\n    },\r\n\r\n    bc: {\r\n      top: \"auto\",\r\n      bottom: \"0px\",\r\n      margin: \"0 auto\",\r\n      left: \"50%\",\r\n      marginLeft: -(defaultWidth / 2)\r\n    }\r\n  },\r\n\r\n  NotificationItem: {\r\n    DefaultStyle: {\r\n      position: \"relative\",\r\n      width: \"100%\",\r\n      cursor: \"pointer\",\r\n      borderRadius: \"4px\",\r\n      fontSize: \"14px\",\r\n      margin: \"10px 0 0\",\r\n      padding: \"10px\",\r\n      display: \"block\",\r\n      WebkitBoxSizing: \"border-box\",\r\n      MozBoxSizing: \"border-box\",\r\n      boxSizing: \"border-box\",\r\n      opacity: 0,\r\n      transition: \"all 0.5s ease-in-out\",\r\n      WebkitTransform: \"translate3d(0, 0, 0)\",\r\n      transform: \"translate3d(0, 0, 0)\",\r\n      willChange: \"transform, opacity\",\r\n\r\n      isHidden: {\r\n        opacity: 0\r\n      },\r\n\r\n      isVisible: {\r\n        opacity: 1\r\n      }\r\n    },\r\n\r\n    success: {\r\n      borderTop: 0,\r\n      backgroundColor: \"#a1e82c\",\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0\r\n    },\r\n\r\n    error: {\r\n      borderTop: 0,\r\n      backgroundColor: \"#fc727a\",\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0\r\n    },\r\n\r\n    warning: {\r\n      borderTop: 0,\r\n      backgroundColor: \"#ffbc67\",\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0\r\n    },\r\n\r\n    info: {\r\n      borderTop: 0,\r\n      backgroundColor: \"#63d8f1\",\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0\r\n    }\r\n  },\r\n\r\n  Title: {\r\n    DefaultStyle: {\r\n      fontSize: \"30px\",\r\n      margin: \"0\",\r\n      padding: 0,\r\n      fontWeight: \"bold\",\r\n      color: \"#FFFFFF\",\r\n      display: \"block\",\r\n      left: \"15px\",\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      marginTop: \"-15px\"\r\n    }\r\n  },\r\n\r\n  MessageWrapper: {\r\n    DefaultStyle: {\r\n      marginLeft: \"55px\",\r\n      marginRight: \"30px\",\r\n      padding: \"0 12px 0 0\",\r\n      color: \"#FFFFFF\",\r\n      maxWidthwidth: \"89%\"\r\n    }\r\n  },\r\n\r\n  Dismiss: {\r\n    DefaultStyle: {\r\n      fontFamily: \"inherit\",\r\n      fontSize: \"21px\",\r\n      color: \"#000\",\r\n      float: \"right\",\r\n      position: \"absolute\",\r\n      right: \"10px\",\r\n      top: \"50%\",\r\n      marginTop: \"-13px\",\r\n      backgroundColor: \"#FFFFFF\",\r\n      display: \"block\",\r\n      borderRadius: \"50%\",\r\n      opacity: \".4\",\r\n      lineHeight: \"11px\",\r\n      width: \"25px\",\r\n      height: \"25px\",\r\n      outline: \"0 !important\",\r\n      textAlign: \"center\",\r\n      padding: \"6px 3px 3px 3px\",\r\n      fontWeight: \"300\",\r\n      marginLeft: \"65px\"\r\n    },\r\n\r\n    success: {\r\n      // color: '#f0f5ea',\r\n      // backgroundColor: '#a1e82c'\r\n    },\r\n\r\n    error: {\r\n      // color: '#f4e9e9',\r\n      // backgroundColor: '#fc727a'\r\n    },\r\n\r\n    warning: {\r\n      // color: '#f9f6f0',\r\n      // backgroundColor: '#ffbc67'\r\n    },\r\n\r\n    info: {\r\n      // color: '#e8f0f4',\r\n      // backgroundColor: '#63d8f1'\r\n    }\r\n  },\r\n\r\n  Action: {\r\n    DefaultStyle: {\r\n      background: \"#ffffff\",\r\n      borderRadius: \"2px\",\r\n      padding: \"6px 20px\",\r\n      fontWeight: \"bold\",\r\n      margin: \"10px 0 0 0\",\r\n      border: 0\r\n    },\r\n\r\n    success: {\r\n      backgroundColor: \"#a1e82c\",\r\n      color: \"#ffffff\"\r\n    },\r\n\r\n    error: {\r\n      backgroundColor: \"#fc727a\",\r\n      color: \"#ffffff\"\r\n    },\r\n\r\n    warning: {\r\n      backgroundColor: \"#ffbc67\",\r\n      color: \"#ffffff\"\r\n    },\r\n\r\n    info: {\r\n      backgroundColor: \"#63d8f1\",\r\n      color: \"#ffffff\"\r\n    }\r\n  },\r\n\r\n  ActionWrapper: {\r\n    DefaultStyle: {\r\n      margin: 0,\r\n      padding: 0\r\n    }\r\n  }\r\n};\r\n\r\n//\r\n// //\r\n// // // For tables\r\n// //\r\n//\r\nconst thArray = [\"ID\", \"Name\", \"Salary\", \"Country\", \"City\"];\r\nconst tdArray = [\r\n  [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\", \"Oud-Turnhout\"],\r\n  [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\", \"Sinaai-Waas\"],\r\n  [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\", \"Baileux\"],\r\n  [\"4\", \"Philip Chaney\", \"$38,735\", \"Korea, South\", \"Overland Park\"],\r\n  [\"5\", \"Doris Greene\", \"$63,542\", \"Malawi\", \"Feldkirchen in Kärnten\"],\r\n  [\"6\", \"Mason Porter\", \"$78,615\", \"Chile\", \"Gloucester\"]\r\n];\r\n\r\n//\r\n// //\r\n// // // For icons\r\n// //\r\n//\r\nconst iconsArray = [\r\n  \"pe-7s-album\",\r\n  \"pe-7s-arc\",\r\n  \"pe-7s-back-2\",\r\n  \"pe-7s-bandaid\",\r\n  \"pe-7s-car\",\r\n  \"pe-7s-diamond\",\r\n  \"pe-7s-door-lock\",\r\n  \"pe-7s-eyedropper\",\r\n  \"pe-7s-female\",\r\n  \"pe-7s-gym\",\r\n  \"pe-7s-hammer\",\r\n  \"pe-7s-headphones\",\r\n  \"pe-7s-helm\",\r\n  \"pe-7s-hourglass\",\r\n  \"pe-7s-leaf\",\r\n  \"pe-7s-magic-wand\",\r\n  \"pe-7s-male\",\r\n  \"pe-7s-map-2\",\r\n  \"pe-7s-next-2\",\r\n  \"pe-7s-paint-bucket\",\r\n  \"pe-7s-pendrive\",\r\n  \"pe-7s-photo\",\r\n  \"pe-7s-piggy\",\r\n  \"pe-7s-plugin\",\r\n  \"pe-7s-refresh-2\",\r\n  \"pe-7s-rocket\",\r\n  \"pe-7s-settings\",\r\n  \"pe-7s-shield\",\r\n  \"pe-7s-smile\",\r\n  \"pe-7s-usb\",\r\n  \"pe-7s-vector\",\r\n  \"pe-7s-wine\",\r\n  \"pe-7s-cloud-upload\",\r\n  \"pe-7s-cash\",\r\n  \"pe-7s-close\",\r\n  \"pe-7s-bluetooth\",\r\n  \"pe-7s-cloud-download\",\r\n  \"pe-7s-way\",\r\n  \"pe-7s-close-circle\",\r\n  \"pe-7s-id\",\r\n  \"pe-7s-angle-up\",\r\n  \"pe-7s-wristwatch\",\r\n  \"pe-7s-angle-up-circle\",\r\n  \"pe-7s-world\",\r\n  \"pe-7s-angle-right\",\r\n  \"pe-7s-volume\",\r\n  \"pe-7s-angle-right-circle\",\r\n  \"pe-7s-users\",\r\n  \"pe-7s-angle-left\",\r\n  \"pe-7s-user-female\",\r\n  \"pe-7s-angle-left-circle\",\r\n  \"pe-7s-up-arrow\",\r\n  \"pe-7s-angle-down\",\r\n  \"pe-7s-switch\",\r\n  \"pe-7s-angle-down-circle\",\r\n  \"pe-7s-scissors\",\r\n  \"pe-7s-wallet\",\r\n  \"pe-7s-safe\",\r\n  \"pe-7s-volume2\",\r\n  \"pe-7s-volume1\",\r\n  \"pe-7s-voicemail\",\r\n  \"pe-7s-video\",\r\n  \"pe-7s-user\",\r\n  \"pe-7s-upload\",\r\n  \"pe-7s-unlock\",\r\n  \"pe-7s-umbrella\",\r\n  \"pe-7s-trash\",\r\n  \"pe-7s-tools\",\r\n  \"pe-7s-timer\",\r\n  \"pe-7s-ticket\",\r\n  \"pe-7s-target\",\r\n  \"pe-7s-sun\",\r\n  \"pe-7s-study\",\r\n  \"pe-7s-stopwatch\",\r\n  \"pe-7s-star\",\r\n  \"pe-7s-speaker\",\r\n  \"pe-7s-signal\",\r\n  \"pe-7s-shuffle\",\r\n  \"pe-7s-shopbag\",\r\n  \"pe-7s-share\",\r\n  \"pe-7s-server\",\r\n  \"pe-7s-search\",\r\n  \"pe-7s-film\",\r\n  \"pe-7s-science\",\r\n  \"pe-7s-disk\",\r\n  \"pe-7s-ribbon\",\r\n  \"pe-7s-repeat\",\r\n  \"pe-7s-refresh\",\r\n  \"pe-7s-add-user\",\r\n  \"pe-7s-refresh-cloud\",\r\n  \"pe-7s-paperclip\",\r\n  \"pe-7s-radio\",\r\n  \"pe-7s-note2\",\r\n  \"pe-7s-print\",\r\n  \"pe-7s-network\",\r\n  \"pe-7s-prev\",\r\n  \"pe-7s-mute\",\r\n  \"pe-7s-power\",\r\n  \"pe-7s-medal\",\r\n  \"pe-7s-portfolio\",\r\n  \"pe-7s-like2\",\r\n  \"pe-7s-plus\",\r\n  \"pe-7s-left-arrow\",\r\n  \"pe-7s-play\",\r\n  \"pe-7s-key\",\r\n  \"pe-7s-plane\",\r\n  \"pe-7s-joy\",\r\n  \"pe-7s-photo-gallery\",\r\n  \"pe-7s-pin\",\r\n  \"pe-7s-phone\",\r\n  \"pe-7s-plug\",\r\n  \"pe-7s-pen\",\r\n  \"pe-7s-right-arrow\",\r\n  \"pe-7s-paper-plane\",\r\n  \"pe-7s-delete-user\",\r\n  \"pe-7s-paint\",\r\n  \"pe-7s-bottom-arrow\",\r\n  \"pe-7s-notebook\",\r\n  \"pe-7s-note\",\r\n  \"pe-7s-next\",\r\n  \"pe-7s-news-paper\",\r\n  \"pe-7s-musiclist\",\r\n  \"pe-7s-music\",\r\n  \"pe-7s-mouse\",\r\n  \"pe-7s-more\",\r\n  \"pe-7s-moon\",\r\n  \"pe-7s-monitor\",\r\n  \"pe-7s-micro\",\r\n  \"pe-7s-menu\",\r\n  \"pe-7s-map\",\r\n  \"pe-7s-map-marker\",\r\n  \"pe-7s-mail\",\r\n  \"pe-7s-mail-open\",\r\n  \"pe-7s-mail-open-file\",\r\n  \"pe-7s-magnet\",\r\n  \"pe-7s-loop\",\r\n  \"pe-7s-look\",\r\n  \"pe-7s-lock\",\r\n  \"pe-7s-lintern\",\r\n  \"pe-7s-link\",\r\n  \"pe-7s-like\",\r\n  \"pe-7s-light\",\r\n  \"pe-7s-less\",\r\n  \"pe-7s-keypad\",\r\n  \"pe-7s-junk\",\r\n  \"pe-7s-info\",\r\n  \"pe-7s-home\",\r\n  \"pe-7s-help2\",\r\n  \"pe-7s-help1\",\r\n  \"pe-7s-graph3\",\r\n  \"pe-7s-graph2\",\r\n  \"pe-7s-graph1\",\r\n  \"pe-7s-graph\",\r\n  \"pe-7s-global\",\r\n  \"pe-7s-gleam\",\r\n  \"pe-7s-glasses\",\r\n  \"pe-7s-gift\",\r\n  \"pe-7s-folder\",\r\n  \"pe-7s-flag\",\r\n  \"pe-7s-filter\",\r\n  \"pe-7s-file\",\r\n  \"pe-7s-expand1\",\r\n  \"pe-7s-exapnd2\",\r\n  \"pe-7s-edit\",\r\n  \"pe-7s-drop\",\r\n  \"pe-7s-drawer\",\r\n  \"pe-7s-download\",\r\n  \"pe-7s-display2\",\r\n  \"pe-7s-display1\",\r\n  \"pe-7s-diskette\",\r\n  \"pe-7s-date\",\r\n  \"pe-7s-cup\",\r\n  \"pe-7s-culture\",\r\n  \"pe-7s-crop\",\r\n  \"pe-7s-credit\",\r\n  \"pe-7s-copy-file\",\r\n  \"pe-7s-config\",\r\n  \"pe-7s-compass\",\r\n  \"pe-7s-comment\",\r\n  \"pe-7s-coffee\",\r\n  \"pe-7s-cloud\",\r\n  \"pe-7s-clock\",\r\n  \"pe-7s-check\",\r\n  \"pe-7s-chat\",\r\n  \"pe-7s-cart\",\r\n  \"pe-7s-camera\",\r\n  \"pe-7s-call\",\r\n  \"pe-7s-calculator\",\r\n  \"pe-7s-browser\",\r\n  \"pe-7s-box2\",\r\n  \"pe-7s-box1\",\r\n  \"pe-7s-bookmarks\",\r\n  \"pe-7s-bicycle\",\r\n  \"pe-7s-bell\",\r\n  \"pe-7s-battery\",\r\n  \"pe-7s-ball\",\r\n  \"pe-7s-back\",\r\n  \"pe-7s-attention\",\r\n  \"pe-7s-anchor\",\r\n  \"pe-7s-albums\",\r\n  \"pe-7s-alarm\",\r\n  \"pe-7s-airplay\"\r\n];\r\n\r\n//\r\n// //\r\n// // // // For dashboard's charts\r\n// //\r\n//\r\n// Data for Pie Chart\r\nvar dataPie = {\r\n  labels: [\"40%\", \"20%\", \"40%\"],\r\n  series: [40, 20, 40]\r\n};\r\nvar legendPie = {\r\n  names: [\"Open\", \"Bounce\", \"Unsubscribe\"],\r\n  types: [\"info\", \"danger\", \"warning\"]\r\n};\r\n\r\n// Data for Line Chart\r\nvar dataSales = {\r\n  labels: [\r\n    \"9:00AM\",\r\n    \"12:00AM\",\r\n    \"3:00PM\",\r\n    \"6:00PM\",\r\n    \"9:00PM\",\r\n    \"12:00PM\",\r\n    \"3:00AM\",\r\n    \"6:00AM\"\r\n  ],\r\n  series: [\r\n    [287, 385, 490, 492, 554, 586, 698, 695],\r\n    [67, 152, 143, 240, 287, 335, 435, 437],\r\n    [23, 113, 67, 108, 190, 239, 307, 308]\r\n  ]\r\n};\r\nvar optionsSales = {\r\n  low: 0,\r\n  high: 800,\r\n  showArea: false,\r\n  height: \"245px\",\r\n  axisX: {\r\n    showGrid: false\r\n  },\r\n  lineSmooth: true,\r\n  showLine: true,\r\n  showPoint: true,\r\n  fullWidth: true,\r\n  chartPadding: {\r\n    right: 50\r\n  }\r\n};\r\nvar responsiveSales = [\r\n  [\r\n    \"screen and (max-width: 640px)\",\r\n    {\r\n      axisX: {\r\n        labelInterpolationFnc: function(value) {\r\n          return value[0];\r\n        }\r\n      }\r\n    }\r\n  ]\r\n];\r\nvar legendSales = {\r\n  names: [\"Open\", \"Click\", \"Click Second Time\"],\r\n  types: [\"info\", \"danger\", \"warning\"]\r\n};\r\n\r\n// Data for Bar Chart\r\nvar dataBar = {\r\n  labels: [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"Mai\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n  ],\r\n  series: [\r\n    [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895],\r\n    [412, 243, 280, 580, 453, 353, 300, 364, 368, 410, 636, 695]\r\n  ]\r\n};\r\nvar optionsBar = {\r\n  seriesBarDistance: 10,\r\n  axisX: {\r\n    showGrid: false\r\n  },\r\n  height: \"245px\"\r\n};\r\nvar responsiveBar = [\r\n  [\r\n    \"screen and (max-width: 640px)\",\r\n    {\r\n      seriesBarDistance: 5,\r\n      axisX: {\r\n        labelInterpolationFnc: function(value) {\r\n          return value[0];\r\n        }\r\n      }\r\n    }\r\n  ]\r\n];\r\nvar legendBar = {\r\n  names: [\"Tesla Model S\", \"BMW 5 Series\"],\r\n  types: [\"info\", \"danger\"]\r\n};\r\n\r\nmodule.exports = {\r\n  style, // For notifications (App container and Notifications view)\r\n  thArray,\r\n  tdArray, // For tables (TableList view)\r\n  iconsArray, // For icons (Icons view)\r\n  dataPie,\r\n  legendPie,\r\n  dataSales,\r\n  optionsSales,\r\n  responsiveSales,\r\n  legendSales,\r\n  dataBar,\r\n  optionsBar,\r\n  responsiveBar,\r\n  legendBar // For charts (Dashboard view)\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/sidebar-3.34535b95.jpg\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 629;","const config= {\r\n    baseurl:(process.env.NODE_ENV==\"development\") ? \"http://localhost:4000/api\": \"https://top4.trade/api\"\r\n}\r\n\r\nexport default config;","import React, { Component } from \"react\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport config from \"../../constant/config.js\";\r\nimport Select from \"react-select\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport { times } from \"chartist\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\nconst axios = require(\"axios\");\r\n\r\nclass Innerfilter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedAccountOption: null,\r\n      selectedSymbolOption: null,\r\n      selectedSymbolOptionTo: null,\r\n      selectedAccountOptionTo: null,\r\n      selectedCommissionAccount: null,\r\n      startDate: null,\r\n      endDate: null,\r\n      startDateTo: null,\r\n      endDateTo: null,\r\n      allAccounts: [],\r\n      allSymbols: [],\r\n      profileName: \"\",\r\n      error: \"\",\r\n      showCommisoin: false,\r\n      showAddCommission: false,\r\n      autoSyncClose: false,\r\n      profileValues: [],\r\n      nameError: false,\r\n      magicNumber: [],\r\n      magicNumberTo: [],\r\n      showMagicNumber: false,\r\n      showMagicNumberTo: false,\r\n      tags: [],\r\n      include_exclude_status: \"\",\r\n      exclude: false,\r\n      include: false,\r\n      excludeTo: false,\r\n      includeTo: false,\r\n      ticket: [],\r\n      ticketTo: [],\r\n      excludeTicket: false,\r\n      includeTicket: false,\r\n      excludeTicketTo: false,\r\n      includeTicketTo: false,\r\n\r\n      // options: [{ name: 'Srigar', id: 1 }, { name: 'Sam', id: 2 }],\r\n\r\n      // plainArray: [\"Option 1\", \"Option 2\", \"Option 3\", \"Option 4\", \"Option 5\"],\r\n      // objectArray: [\r\n      //     { key: \"Option 1\", cat: \"Group 1\" },\r\n      //     { key: \"Option 2\", cat: \"Group 1\" },\r\n      //     { key: \"Option 3\", cat: \"Group 1\" },\r\n      //     { key: \"Option 4\", cat: \"Group 2\" },\r\n      //     { key: \"Option 5\", cat: \"Group 2\" },\r\n      //     { key: \"Option 6\", cat: \"Group 2\" },\r\n      //     { key: \"Option 7\", cat: \"Group 2\" }\r\n      // ],\r\n      // selectedValues: [\r\n      //     { key: \"Option 1\", cat: \"Group 1\" },\r\n      //     { key: \"Option 2\", cat: \"Group 1\" }\r\n      // ]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getSymbolInfo();\r\n    this.fetchfilterdata();\r\n  }\r\n  getSymbolInfo = () => {\r\n    let self = this;\r\n    axios\r\n      .get(config.baseurl + \"/accounts/fetchAllAccounts\")\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          self.setState({ allAccounts: response.data.rows });\r\n        }\r\n      });\r\n    axios\r\n      .get(config.baseurl + \"/accounts/fetchAllSymbol\")\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          self.setState({ allSymbols: response.data.rows });\r\n        }\r\n      });\r\n  };\r\n  // addItem = () => {\r\n  //     this.selectedValues.push({ key: \"Option 3\", cat: \"Group 1\" });\r\n  // }\r\n  handleDropdownChange = (e) => {\r\n    this.setState({ selectValue: e.target.value });\r\n  };\r\n  handleChangeDate = (date) => {\r\n    this.setState({\r\n      startDate: date,\r\n    });\r\n  };\r\n\r\n  handleEndDate = (date) => {\r\n    if (date < this.state.startDate && date != null) {\r\n      this.setState({ error: \"enddate\", endDate: \"\" });\r\n      return;\r\n    }\r\n    this.setState({\r\n      error: \"\",\r\n      endDate: date,\r\n    });\r\n  };\r\n  handleChangeDateTo = (date) => {\r\n    this.setState({\r\n      startDateTo: date,\r\n      error: \"\",\r\n    });\r\n  };\r\n  handleEndDateTo = (date) => {\r\n    if (date < this.state.startDateTo && date != null) {\r\n      this.setState({ error: \"enddateto\", endDateTo: \"\" });\r\n      return;\r\n    }\r\n    this.setState({\r\n      error: \"\",\r\n      endDateTo: date,\r\n    });\r\n  };\r\n  handleChange = (event) => {\r\n    //this.setState({value: event.option});\r\n    this.setState({\r\n      value: Array.from(event.target.selectedOptions, (item) => item.value),\r\n    });\r\n  };\r\n  renderAccountSelect = () => {\r\n    const { selectedAccountOption, allAccounts } = this.state;\r\n    let Data = {\r\n      account: selectedAccountOption,\r\n    };\r\n    // axios.post(config.baseurl + '/filter/fetchSymbolData', Data)\r\n    //     .then(function (response) {\r\n    //         if (response.status == 200) {\r\n    //             this.props.onHide()\r\n    //         }\r\n    //     })\r\n    //     .catch(function (error) {\r\n    //     });\r\n\r\n    let options = allAccounts.map((data) => {\r\n      return { value: data.id, label: data.login };\r\n    });\r\n    return (\r\n      <Select\r\n        placeholder=\"Select Account\"\r\n        value={selectedAccountOption}\r\n        onChange={this.handleChangeAccount}\r\n        options={options}\r\n      />\r\n    );\r\n  };\r\n  handeChangeShowCommission = (e) => {\r\n    this.setState({ showCommission: true }, () => {\r\n      this.setState({ showAddCommission: !this.state.showAddCommission });\r\n    });\r\n  };\r\n  handleChangeAccountTo = (selectedAccountOptionTo) => {\r\n    this.setState({ selectedAccountOptionTo, error: \"\" });\r\n  };\r\n  renderAccountSelectTo = () => {\r\n    const { selectedAccountOptionTo, allAccounts } = this.state;\r\n\r\n    let options = allAccounts.map((data) => {\r\n      return { value: data.id, label: data.login };\r\n    });\r\n    return (\r\n      <Select\r\n        placeholder=\"Select Account\"\r\n        value={selectedAccountOptionTo}\r\n        onChange={this.handleChangeAccountTo}\r\n        options={options}\r\n      />\r\n    );\r\n  };\r\n  handleChangeCommissionAccount = (selectedCommissionAccount) => {\r\n    this.setState({ selectedCommissionAccount });\r\n  };\r\n  renderCommissionAccount = () => {\r\n    const { selectedCommissionAccount, allAccounts } = this.state;\r\n\r\n    let options = allAccounts.map((data) => {\r\n      return { value: data.id, label: data.login };\r\n    });\r\n    return (\r\n      <Select\r\n        placeholder=\"Select Account\"\r\n        value={selectedCommissionAccount}\r\n        onChange={this.handleChangeCommissionAccount}\r\n        options={options}\r\n      />\r\n    );\r\n  };\r\n  handleChangeMagicNumber = (magicNumber) => {\r\n    this.setState({ magicNumber });\r\n  };\r\n  handleChangeMagicNumberTo = (magicNumberTo) => {\r\n    this.setState({ magicNumberTo });\r\n  };\r\n\r\n  handleChangeTicket = (ticket) => {\r\n    this.setState({ ticket });\r\n  };\r\n  handleChangeTicketTo = (ticketTo) => {\r\n    this.setState({ ticketTo });\r\n  };\r\n\r\n  handleChangeAccount = (selectedAccountOption) => {\r\n    this.setState({ selectedAccountOption });\r\n  };\r\n  handleChangeSymbol = (selectedSymbolOption) => {\r\n    this.setState({ selectedSymbolOption });\r\n  };\r\n  renderSymbolSelect = () => {\r\n    const { selectedSymbolOption, allSymbols } = this.state;\r\n    // console.log(selectedSymbolOption, allSymbols, \"selectedSymbolOption, allSymbols--------->\")\r\n    let options = allSymbols.map((data) => {\r\n      return { value: data.name, label: data.name };\r\n    });\r\n    return (\r\n      <Select\r\n        placeholder=\"Select Symbol\"\r\n        value={selectedSymbolOption}\r\n        isMulti\r\n        onChange={this.handleChangeSymbol}\r\n        options={options}\r\n      />\r\n    );\r\n  };\r\n  handleChangeSymbolTo = (selectedSymbolOptionTo) => {\r\n    this.setState({ selectedSymbolOptionTo });\r\n  };\r\n  renderSymbolSelectTo = () => {\r\n    const { selectedSymbolOptionTo, allSymbols } = this.state;\r\n    let options = allSymbols.map((data) => {\r\n      return { value: data.name, label: data.name };\r\n    });\r\n\r\n    return (\r\n      <Select\r\n        placeholder=\"Select Symbol...\"\r\n        value={selectedSymbolOptionTo}\r\n        isMulti\r\n        onChange={this.handleChangeSymbolTo}\r\n        options={options}\r\n      />\r\n    );\r\n  };\r\n  fetchfilterdata() {\r\n    let self = this;\r\n    axios\r\n      .get(config.baseurl + \"/filter/fetchfilterdata?page=1\")\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          self.setState({ profileValues: response.data.rows });\r\n        }\r\n      });\r\n  }\r\n\r\n  handleprofileName(e) {\r\n      this.setState({ nameError: false });\r\n      if (this.state.profileValues.length <= 0) {\r\n        this.setState({\r\n        profileName:\r\n          e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1),\r\n        error: \"\",\r\n      });\r\n    } else {\r\n      this.state.profileValues.filter((data) => {\r\n         if (data.profile_name.toUpperCase() !== e.target.value.toUpperCase()) {\r\n          this.setState({profileName: e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1),\r\n            error: \"\",\r\n          });\r\n        } else {\r\n          this.setState({ nameError: true }, () => {});\r\n          NotificationManager.listNotify = [];\r\n          NotificationManager.error(\"Profile already exits!\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n  // handlemagicNumber(e){\r\n  //     this.setState({ magicNumber: e.target.value})\r\n  // }\r\n\r\n  // handlemagicNumberTo(e){\r\n  //     this.setState({ magicNumberTo: e.target.value})\r\n  // }\r\n\r\n  formDataSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    let from_status =\r\n      this.state.include === true && this.state.exclude === false\r\n        ? 1\r\n        : this.state.exclude === true && this.state.include === false\r\n        ? 2\r\n        : 0;\r\n\r\n    let to_status =\r\n      this.state.includeTo === true && this.state.excludeTo === false\r\n        ? 1\r\n        : this.state.excludeTo === true && this.state.includeTo === false\r\n        ? 2\r\n        : 0;\r\n\r\n    let from_status_ticket =\r\n      this.state.includeTicket === true && this.state.excludeTicket === false\r\n        ? 1\r\n        : this.state.excludeTicket === true &&\r\n          this.state.includeTicket === false\r\n        ? 2\r\n        : 0;\r\n\r\n    let to_status_ticket =\r\n      this.state.includeTicketTo === true &&\r\n      this.state.excludeTicketTo === false\r\n        ? 1\r\n        : this.state.excludeTicketTo === true &&\r\n          this.state.includeTicketTo === false\r\n        ? 2\r\n        : 0;\r\n\r\n    let self = this;\r\n\r\n    if (this.state.profileName == null || this.state.profileName == \"\") {\r\n      NotificationManager.listNotify = [];\r\n      NotificationManager.error(\"Profile name is required !\");\r\n      return;\r\n    } else if (\r\n      this.state.selectedAccountOption == null ||\r\n      this.state.selectedAccountOption == \"\"\r\n    ) {\r\n      this.setState({ error: \"accountoption\" });\r\n      return;\r\n    } else if (\r\n      this.state.showCommission == true &&\r\n      (this.state.selectedCommissionAccount == null ||\r\n        this.state.selectedCommissionAccount == \"\")\r\n    ) {\r\n      this.setState({ error: \"selectedCommissionAccount\" });\r\n      return;\r\n    } else if (this.state.startDate == null || this.state.startDate == \"\") {\r\n      this.setState({ error: \"startdate\" });\r\n      return;\r\n    } else if (\r\n      this.state.selectedSymbolOption == null ||\r\n      this.state.selectedSymbolOption == \"\"\r\n    ) {\r\n      this.setState({ error: \"symbolselect\" });\r\n      return;\r\n    } else if (\r\n      this.state.selectedAccountOptionTo == null ||\r\n      this.state.selectedAccountOptionTo == \"\"\r\n    ) {\r\n      this.setState({ error: \"accountoptionto\" });\r\n      return;\r\n    } else if (this.state.startDateTo == null || this.state.startDateTo == \"\") {\r\n      this.setState({ error: \"startDateTo\" });\r\n      return;\r\n    } else if (\r\n      this.state.selectedSymbolOptionTo == null ||\r\n      this.state.selectedSymbolOptionTo == \"\"\r\n    ) {\r\n      this.setState({ error: \"selectedSymbolOptionTo\" });\r\n      return;\r\n    } else if (this.state.nameError) {\r\n      NotificationManager.listNotify = [];\r\n      NotificationManager.error(\"Profile Name Already Exist!\");\r\n    } else {\r\n      this.setState({ error: \" \" });\r\n      let fromSymbol = this.state.selectedSymbolOption;\r\n      let symbolFrom = fromSymbol.map((data) => {\r\n        return data.value;\r\n      });\r\n      let toSymbol = this.state.selectedSymbolOptionTo;\r\n      let symbolto = toSymbol.map((data) => {\r\n        return data.value;\r\n      });\r\n      // console.log(this.state.selectedCommissionAccount, 'this.state.selectedCommissionAccount')\r\n\r\n      let Data = {\r\n        profile_name: this.state.profileName,\r\n        from_account_id: this.state.selectedAccountOption.value,\r\n        to_account_id: this.state.selectedAccountOptionTo.value,\r\n        commission_acount_id: this.state.showAddCommission\r\n          ? this.state.selectedCommissionAccount.value\r\n          : 0,\r\n        startdateFrom: this.state.startDate,\r\n        enddateFrom: this.state.endDate,\r\n        startdateTo: this.state.startDateTo,\r\n        enddateTo: this.state.endDateTo,\r\n        from_symbols: JSON.stringify(symbolFrom),\r\n        to_symbols: JSON.stringify(symbolto),\r\n        auto_close: this.state.autoSyncClose ? 1 : 0,\r\n        from_magic_number:\r\n          from_status != 0\r\n            ? this.state.magicNumber.length > 0\r\n              ? JSON.stringify(this.state.magicNumber)\r\n              : JSON.stringify(\"\")\r\n            : \"\",\r\n        to_magic_number:\r\n          to_status != 0\r\n            ? this.state.magicNumberTo.length > 0\r\n              ? JSON.stringify(this.state.magicNumberTo)\r\n              : JSON.stringify(\"\")\r\n            : \"\",\r\n        from_include_exclude_status: from_status,\r\n        to_include_exclude_status: to_status,\r\n        from_ticket:\r\n          from_status_ticket != 0\r\n            ? this.state.ticket.length > 0\r\n              ? JSON.stringify(this.state.ticket)\r\n              : JSON.stringify(\"\")\r\n            : \"\",\r\n        to_ticket:\r\n          to_status_ticket != 0\r\n            ? this.state.ticketTo.length > 0\r\n              ? JSON.stringify(this.state.ticketTo)\r\n              : JSON.stringify(\"\")\r\n            : \"\",\r\n        from_include_exclude_status_ticket: from_status_ticket,\r\n        to_include_exclude_status_ticket: to_status_ticket,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n      };\r\n    //   console.log(Data, \"dat-------------\");\r\n\r\n      axios\r\n        .post(config.baseurl + \"/filter/addfilterdata\", Data)\r\n        .then(function (response) {\r\n          if (response.status == 200) {\r\n            self.props.onHide();\r\n          }\r\n        })\r\n        .catch(function (error) {});\r\n    }\r\n  }\r\n  crossClick(e) {\r\n    e.preventDefault();\r\n    this.props.onHide();\r\n  }\r\n  handleChangeAutoSync(e) {\r\n    this.setState({ autoSyncClose: !this.state.autoSyncClose }, () => {});\r\n  }\r\n\r\n  changeIncludeDefaultProperty = () => {\r\n    this.setState({ include: !this.state.include, exclude: false });\r\n    // if (!this.state.include == true) {\r\n    //     this.setState({ showMagicNumber: true })\r\n    // } else if (this.state.include == true) {\r\n    //     this.setState({ showMagicNumber: false })\r\n\r\n    // }\r\n  };\r\n  changeExcludeDefaultProperty = () => {\r\n    this.setState({ exclude: !this.state.exclude, include: false });\r\n    // if (!this.state.exclude == true) {\r\n    //     this.setState({ showMagicNumber: true })\r\n    // } else if (this.state.exclude == true) {\r\n    //     this.setState({ showMagicNumber: false })\r\n\r\n    // }\r\n  };\r\n\r\n  changeIncludeDefaultPropertyTo = () => {\r\n    this.setState({ includeTo: !this.state.includeTo, excludeTo: false });\r\n    // if (!this.state.includeTo == true) {\r\n    //     this.setState({ showMagicNumberTo: true })\r\n    // } else if (this.state.includeTo == true) {\r\n    //     this.setState({ showMagicNumberTo: false })\r\n\r\n    // }\r\n  };\r\n  changeExcludeDefaultPropertyTo = () => {\r\n    this.setState({ excludeTo: !this.state.excludeTo, includeTo: false });\r\n    // if (!this.state.excludeTo == true) {\r\n    //     this.setState({ showMagicNumberTo: true })\r\n    // } else if (this.state.excludeTo == true) {\r\n    //     this.setState({ showMagicNumberTo: false })\r\n\r\n    // }\r\n  };\r\n  changeIncludeDefaultPropertyTicket = () => {\r\n    this.setState({\r\n      includeTicket: !this.state.includeTicketTo,\r\n      excludeTicket: false,\r\n    });\r\n  };\r\n  changeExcludeDefaultPropertyTicket = () => {\r\n    this.setState({\r\n      excludeTicket: !this.state.excludeTicket,\r\n      includeTicket: false,\r\n    });\r\n  };\r\n\r\n  changeIncludeDefaultPropertyTicketTo = () => {\r\n    this.setState({\r\n      includeTicketTo: !this.state.includeTicketTo,\r\n      excludeTicketTo: false,\r\n    });\r\n  };\r\n  changeExcludeDefaultPropertyTicketTo = () => {\r\n    this.setState({\r\n      excludeTicketTo: !this.state.excludeTicketTo,\r\n      includeTicketTo: false,\r\n    });\r\n  };\r\n  render() {\r\n    let s = this;\r\n    return (\r\n      <>\r\n        <NotificationContainer />\r\n        <div className=\"content\">\r\n          <Grid fluid>\r\n            <div className=\"symbol-box\">\r\n              <div className=\"cross_div\">\r\n                <a onClick={(e) => this.crossClick(e)}>\r\n                  <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n                </a>\r\n              </div>\r\n              <div className=\"terminal-text\">\r\n                <label className=\"pnameadjust\"> Profile Name </label>\r\n                <input type=\"text\" name=\"profilename\" className=\"Itext\" placeholder=\"Profile Name\" onChange={(e) => this.handleprofileName(e)} />\r\n              </div>\r\n              <div className=\"synclose\">\r\n                <label className=\"checkbox-inline\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    defaultChecked={this.state.autoSyncClose}\r\n                    name=\"changeAutoSync\"\r\n                    onChange={(e) => this.handleChangeAutoSync(e)}\r\n                  />\r\n                  <b>Auto Sync Close</b>\r\n                </label>\r\n              </div>\r\n\r\n              <form>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <div className=\"card bottom\">\r\n                      <div style={{ padding: \"10px 20px 0px\" }}>\r\n                        <span style={{ fontWeight: \"bold\" }}>Account A</span>\r\n                      </div>\r\n                      <table className=\"table mt20\">\r\n                        <tbody>\r\n                          <tr>\r\n                            <td className=\"b-clr\">\r\n                              <span className=\"accnt\">Account </span>\r\n                            </td>\r\n\r\n                            <td\r\n                              className=\"b-clr text-center\"\r\n                              style={{ width: \"50%\" }}\r\n                            >\r\n                              {/* <Multiselect\r\n                                                        options={objectArray}\r\n                                                        singleSelect\r\n                                                        displayValue=\"key\"\r\n                                                    /> */}\r\n                              {this.renderAccountSelect()}\r\n                              {this.state.error == \"accountoption\" && (\r\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                                  *Please Select Your Account\r\n                                </p>\r\n                              )}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td className=\"b-clr \">\r\n                              <span className=\"accnt\">From </span>\r\n                            </td>\r\n                            <td className=\"b-clr text-center datepicker_filter\">\r\n                              <DatePicker\r\n                                selected={this.state.startDate}\r\n                                onChange={this.handleChangeDate}\r\n                                isClearable\r\n                                placeholderText=\"dd/mm/yyyy\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                                startDate={this.state.startDate}\r\n                                endDate={this.state.endDate}\r\n                                strictParsing\r\n                              />\r\n                              {/* <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                                            <KeyboardDatePicker\r\n                                                                // margin=\"normal\"\r\n                                                                clearable={false}\r\n                                                                id=\"date-picker-dialog\"\r\n                                                                label=\"dd/MM/yyyy\"\r\n                                                                format=\"dd/MM/yyyy\"\r\n                                                                onError={() => { return null }}\r\n                                                                value={this.state.startDate}\r\n                                                                onChange={this.handleChangeDate}\r\n                                                                KeyboardButtonProps={{\r\n                                                                    'aria-label': 'change date',\r\n                                                                }}\r\n                                                            />\r\n                                                        </MuiPickersUtilsProvider> */}\r\n                              {this.state.error == \"startdate\" && (\r\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                                  *Please Select Start Date\r\n                                </p>\r\n                              )}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td className=\"b-clr \">\r\n                              <span className=\"accnt\">To </span>\r\n                            </td>\r\n                            <td className=\"b-clr text-center datepicker_filter\">\r\n                              <DatePicker\r\n                                autoOk={true}\r\n                                selected={this.state.endDate}\r\n                                onChange={this.handleEndDate}\r\n                                isClearable\r\n                                placeholderText=\"dd/mm/yyyy\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                                startDate={this.state.startDate}\r\n                                endDate={this.state.endDate}\r\n                              />\r\n                              {this.state.error == \"enddate\" && (\r\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                                  * Please ensure that the End Date is greater\r\n                                  than the Start Date.\r\n                                </p>\r\n                              )}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td className=\"b-clr \">\r\n                              <span className=\"accnt\">Symbol </span>\r\n                            </td>\r\n                            <td\r\n                              className=\"b-clr text-center\"\r\n                              style={{ width: \"40%\" }}\r\n                            >\r\n                              {/* <Multiselect\r\n                                                        options={objectArray}\r\n                                                        displayValue=\"key\"\r\n                                                        showCheckbox={true}\r\n                                                    /> */}\r\n                              {this.renderSymbolSelect()}\r\n                              {this.state.error == \"symbolselect\" && (\r\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                                  *Please Select Your Symbol{\" \"}\r\n                                </p>\r\n                              )}\r\n                            </td>\r\n                          </tr>\r\n\r\n                          <tr>\r\n                            <td className=\"b-clr \">\r\n                              <span className=\"accnt\">Magic Number </span>\r\n                            </td>\r\n                            <td\r\n                              className=\"b-clr text-center\"\r\n                              style={{ width: \"40%\" }}\r\n                            >\r\n                              <TagsInput\r\n                                onValidationReject={() =>\r\n                                  console.log(\"rejected\")\r\n                                }\r\n                                validationRegex={/^[0-9]*$/}\r\n                                inputProps={{\r\n                                  placeholder:\r\n                                    this.state.magicNumber.length > 0\r\n                                      ? \"\"\r\n                                      : \" Enter Magic Number\",\r\n                                }}\r\n                                type=\"number\"\r\n                                value={this.state.magicNumber}\r\n                                onChange={this.handleChangeMagicNumber}\r\n                              ></TagsInput>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td className=\"b-clr dataAdjust\">\r\n                              <div onClick={this.changeIncludeDefaultProperty}>\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"include\"\r\n                                  name=\"include\"\r\n                                  checked={this.state.include}\r\n                                />\r\n                                <span className=\"accnt \">Include</span>\r\n                              </div>\r\n                            </td>\r\n                            <td className=\"b-clr text-center\">\r\n                              <div onClick={this.changeExcludeDefaultProperty}>\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"exclude\"\r\n                                  name=\"exclude\"\r\n                                  checked={this.state.exclude}\r\n                                />\r\n                                <span className=\"accnt \">Exclude</span>\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td className=\"b-clr \">\r\n                              <span className=\"accnt\">Ticket </span>\r\n                            </td>\r\n                            <td\r\n                              className=\"b-clr text-center\"\r\n                              style={{ width: \"40%\" }}\r\n                            >\r\n                              <TagsInput\r\n                                onValidationReject={() =>\r\n                                  console.log(\"rejected\")\r\n                                }\r\n                                validationRegex={/^[0-9]*$/}\r\n                                inputProps={{\r\n                                  placeholder:\r\n                                    this.state.ticket.length > 0\r\n                                      ? \"\"\r\n                                      : \" Enter Ticket\",\r\n                                }}\r\n                                type=\"number\"\r\n                                value={this.state.ticket}\r\n                                onChange={this.handleChangeTicket}\r\n                              ></TagsInput>\r\n                            </td>\r\n                          </tr>\r\n\r\n                          <tr>\r\n                            <td className=\"b-clr dataAdjust\">\r\n                              <div\r\n                                onClick={\r\n                                  this.changeIncludeDefaultPropertyTicket\r\n                                }\r\n                              >\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"includeTicket\"\r\n                                  name=\"includeTicket\"\r\n                                  checked={this.state.includeTicket}\r\n                                />\r\n                                <span className=\"accnt \">Include</span>\r\n                              </div>\r\n                            </td>\r\n                            <td className=\"b-clr text-center\">\r\n                              <div\r\n                                onClick={\r\n                                  this.changeExcludeDefaultPropertyTicket\r\n                                }\r\n                              >\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"excludeTicket\"\r\n                                  name=\"excludeTicket\"\r\n                                  checked={this.state.excludeTicket}\r\n                                />\r\n                                <span className=\"accnt \">Exclude</span>\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <div className=\"card bottom\">\r\n                      <div style={{ padding: \"10px 20px 0px\" }}>\r\n                        <span style={{ fontWeight: \"bold\" }}>Account B</span>\r\n                      </div>\r\n                      <table className=\"table mt20\">\r\n                        <tbody>\r\n                          <tr>\r\n                            <td className=\"b-clr \">\r\n                              <span className=\"accnt\"> Account</span>\r\n                            </td>\r\n                            <td\r\n                              className=\"b-clr text-center\"\r\n                              style={{ width: \"50%\" }}\r\n                            >\r\n                              {this.renderAccountSelectTo()}\r\n                              {this.state.error == \"accountoptionto\" && (\r\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                                  *Please Select Your Account\r\n                                </p>\r\n                              )}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td className=\"b-clr \">\r\n                              <span className=\"accnt\">From </span>\r\n                            </td>\r\n                            <td className=\"b-clr text-center datepicker_filter\">\r\n                              <DatePicker\r\n                                selected={this.state.startDateTo}\r\n                                onChange={this.handleChangeDateTo}\r\n                                isClearable\r\n                                placeholderText=\"dd/mm/yyyy\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                                startDate={this.state.startDateTo}\r\n                                endDate={this.state.endDateTo}\r\n                                strictParsing\r\n                              />\r\n                              {this.state.error == \"startDateTo\" && (\r\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                                  *Please Select Start Date\r\n                                </p>\r\n                              )}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td className=\"b-clr \">\r\n                              <span className=\"accnt\">To </span>\r\n                            </td>\r\n                            <td className=\"b-clr text-center datepicker_filter\">\r\n                              <DatePicker\r\n                                selected={this.state.endDateTo}\r\n                                onChange={this.handleEndDateTo}\r\n                                isClearable\r\n                                placeholderText=\"dd/mm/yyyy\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                                startDate={this.state.startDateTo}\r\n                                endDate={this.state.endDateTo}\r\n                              />\r\n                              {this.state.error == \"enddateto\" && (\r\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                                  * Please ensure that the End Date is greater\r\n                                  than the Start Date.\r\n                                </p>\r\n                              )}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td className=\"b-clr\">\r\n                              <span className=\"accnt\"> Symbol </span>\r\n                            </td>\r\n                            <td\r\n                              className=\"b-clr text-center\"\r\n                              style={{ width: \"40%\" }}\r\n                            >\r\n                              {/* <Multiselect\r\n                                                        options={objectArray}\r\n                                                        displayValue=\"key\"\r\n                                                        showCheckbox={true}\r\n                                                    /> */}\r\n                              {this.renderSymbolSelectTo()}\r\n                              {this.state.error == \"selectedSymbolOptionTo\" && (\r\n                                <p style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                                  *Please Select Your Symbol{\" \"}\r\n                                </p>\r\n                              )}\r\n                            </td>\r\n                          </tr>\r\n\r\n                          <tr>\r\n                            <td className=\"b-clr \">\r\n                              <span className=\"accnt\">Magic Number </span>\r\n                            </td>\r\n                            <td\r\n                              className=\"b-clr text-center\"\r\n                              style={{ width: \"40%\" }}\r\n                            >\r\n                              <TagsInput\r\n                                onValidationReject={() =>\r\n                                  console.log(\"rejected\")\r\n                                }\r\n                                validationRegex={/^[0-9]*$/}\r\n                                inputProps={{\r\n                                  placeholder:\r\n                                    this.state.magicNumberTo.length > 0\r\n                                      ? \"\"\r\n                                      : \" Enter Magic Number\",\r\n                                }}\r\n                                type=\"number\"\r\n                                value={this.state.magicNumberTo}\r\n                                onChange={this.handleChangeMagicNumberTo}\r\n                              ></TagsInput>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td className=\"b-clr dataAdjust\">\r\n                              <div\r\n                                onClick={this.changeIncludeDefaultPropertyTo}\r\n                              >\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"includeTo\"\r\n                                  name=\"includeTo\"\r\n                                  checked={this.state.includeTo}\r\n                                />\r\n                                <span className=\"accnt \">Include</span>\r\n                              </div>\r\n                            </td>\r\n                            <td className=\"b-clr text-center\">\r\n                              <div\r\n                                onClick={this.changeExcludeDefaultPropertyTo}\r\n                              >\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"excludeTo\"\r\n                                  name=\"excludeTo\"\r\n                                  checked={this.state.excludeTo}\r\n                                />\r\n                                <span className=\"accnt \">Exclude</span>\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td className=\"b-clr \">\r\n                              <span className=\"accnt\">Ticket </span>\r\n                            </td>\r\n                            <td\r\n                              className=\"b-clr text-center\"\r\n                              style={{ width: \"40%\" }}\r\n                            >\r\n                              <TagsInput\r\n                                onValidationReject={() =>\r\n                                  console.log(\"rejected\")\r\n                                }\r\n                                validationRegex={/^[0-9]*$/}\r\n                                inputProps={{\r\n                                  placeholder:\r\n                                    this.state.ticketTo.length > 0\r\n                                      ? \"\"\r\n                                      : \" Enter Ticket\",\r\n                                }}\r\n                                type=\"number\"\r\n                                value={this.state.ticketTo}\r\n                                onChange={this.handleChangeTicketTo}\r\n                              ></TagsInput>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td className=\"b-clr dataAdjust\">\r\n                              <div\r\n                                onClick={\r\n                                  this.changeIncludeDefaultPropertyTicketTo\r\n                                }\r\n                              >\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"includeTicketTo\"\r\n                                  name=\"includeTicketTo\"\r\n                                  checked={this.state.includeTicketTo}\r\n                                />\r\n                                <span className=\"accnt \">Include</span>\r\n                              </div>\r\n                            </td>\r\n                            <td className=\"b-clr text-center\">\r\n                              <div\r\n                                onClick={\r\n                                  this.changeExcludeDefaultPropertyTicketTo\r\n                                }\r\n                              >\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"excludeTicketTo\"\r\n                                  name=\"excludeTicketTo\"\r\n                                  checked={this.state.excludeTicketTo}\r\n                                />\r\n                                <span className=\"accnt \">Exclude</span>\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <hr></hr>\r\n                <div className=\"chceckbox\">\r\n                  <label className=\"checkbox-inline\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      defaultChecked={this.state.showCommisoin}\r\n                      onChange={(e) => this.handeChangeShowCommission(e)}\r\n                    />\r\n                    <b>Add Commission</b>\r\n                  </label>\r\n                </div>\r\n                {this.state.showAddCommission && (\r\n                  <div className=\"center-com d-flex\">\r\n                    <div className=\"com\">\r\n                      <h3 style={{ fontWeight: \"bold\" }}>Commission</h3>\r\n                    </div>\r\n                    <table className=\"table mt20\">\r\n                      <tbody>\r\n                        <tr>\r\n                          <td className=\"b-clr \">\r\n                            <span className=\"accnt\"> Account </span>\r\n                          </td>\r\n                          <td\r\n                            className=\"b-clr text-center\"\r\n                            style={{ width: \"50%\" }}\r\n                          >\r\n                            {this.renderCommissionAccount()}\r\n\r\n                            {this.state.error ==\r\n                              \"selectedCommissionAccount\" && (\r\n                              <p style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                                *Please Select Your Account{\" \"}\r\n                              </p>\r\n                            )}\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                )}\r\n                <div className=\"save_button_filter\">\r\n                  <div className=\"savebtn\">\r\n                    <Button\r\n                      className=\"btn-primary savebutton\"\r\n                      variant=\"primary\"\r\n                      size=\"lg\"\r\n                      block\r\n                      onClick={(e) => this.formDataSubmit(e)}\r\n                    >\r\n                      <b>Save</b>\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Grid>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Innerfilter;\r\n","import React, { Component } from 'react';\r\nimport { Grid, Row, Col, Modal, Alert } from \"react-bootstrap\";\r\nimport swal from 'sweetalert';\r\nimport config from '../../constant/config.js';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nconst axios = require('axios');\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loginForm: false,\r\n            setShow: false,\r\n            show: true,\r\n            username: '',\r\n            password: '',\r\n            alert: null,\r\n            persons: [],\r\n            shwPwd: false,\r\n            shwMsg: false,\r\n            invalidUsername: '',\r\n            invalidPassword: '',\r\n            accountlist: []\r\n\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value.trim() })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const userdetail = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }\r\n        if (this.state.username == '') {\r\n            this.setState({ shwPwd: true })\r\n        }\r\n\r\n        let self = this;\r\n        axios.post(config.baseurl + '/users/mainLogin', userdetail)\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    // self.handleClose();\r\n                    if (response.data.rows && response.data.rows.length > 0) {\r\n                        localStorage.setItem('currentUser', JSON.stringify(response.data.rows));\r\n                        self.props.history.push('/dashboard/dashboard')\r\n                    }\r\n                    if (response.data.message) {\r\n                        if (response.data.name == 'username') {\r\n                            self.setState({ invalidUsername: response.data.message })\r\n                            if (self.state.invalidUsername == '' || self.state.invalidUsername == 'Invalid username.' || self.state.invalidUsername == \"Invalid username\") {\r\n                                self.createNotification()\r\n                            }\r\n                        }\r\n                        if (response.data.name == 'password') {\r\n                            if (self.state.invalidPassword == '' || self.state.invalidPassword == 'Invalid password.') {\r\n                                self.createNotification()\r\n                            }\r\n                            self.setState({ invalidPassword: response.data.message, invalidUsername: '' })\r\n\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n            });\r\n    }\r\n    toogle = () => {\r\n        this.setState({ loginForm: !this.state.loginForm })\r\n    }\r\n    handleClose = () => {\r\n        this.setState({ loginForm: false })\r\n    }\r\n    handleShow = () => {\r\n        this.setState({ setShow: true })\r\n    }\r\n    createNotification = () => {\r\n        NotificationManager.listNotify = [];\r\n        NotificationManager.error('Invalid Credentials !');\r\n    }\r\n\r\n    componentDidMount() {\r\n        // let self = this;\r\n\r\n        let currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n        if (currentUser !== null) {\r\n            this.props.history.push('dashboard/dashboard')\r\n            return;\r\n        }\r\n        // axios.get(config.baseurl + '/users/allAccounts')\r\n        //     .then(function (response) {\r\n        //         if (response.status == 200) {\r\n        //             self.setState({ accountlist: response.data.rows })\r\n        //         }\r\n        //     })\r\n    }\r\n    render() {\r\n        const { invalidPassword, invalidUsername } = this.state;\r\n        return (\r\n            <div className=\"content\">\r\n                <Grid fluid style={{ marginTop: '20vh' }}>\r\n                    <Row>\r\n                        <Col md={4} />\r\n                        <Col\r\n                            md={4}\r\n                            sm={6}\r\n                        >\r\n                            <span className=\"login-form-header\">Rimon Hedge Funds Monitoring</span>\r\n                            <div className=\"form-box login-box\">\r\n                                {/* <Modal.Title className=\"text-center\"><b>Log In</b></Modal.Title> */}\r\n\r\n                                {/* <div className=\"container-fluid\" style={{ background: '#eee', padding: 15, marginTop: 10 }}>\r\n                                    <div>\r\n                                        <span style={{ fontWeight: 'bold' }}> Username: </span>\r\n                                                    testaccount\r\n                                                </div>\r\n                                    <div>\r\n                                        <span style={{ fontWeight: 'bold' }}> Password: </span>\r\n                                                    1234567\r\n                                                </div>\r\n                                </div> */}\r\n                                <form style={{ marginTop: '20px' }} onSubmit={this.onSubmit}>\r\n                                    <label>Username</label>\r\n\r\n                                    <input className=\"Itext\" placeholder=\"Enter Username\" name=\"username\" value={this.state.username} onChange={this.onChange}\r\n                                    // onKeyUp={this.checkValidUser}\r\n                                    ></input>\r\n                                    <label>Password</label>\r\n\r\n                                    <input className=\"Itext\" placeholder=\"Enter Password\" name=\"password\" type=\"password\" value={this.state.password} onChange={this.onChange}></input>\r\n\r\n                                    <div className=\"clearfix\">\r\n                                        <button type=\"submit\" disabled={!this.state.username || !this.state.password} className={!this.state.username || !this.state.password ? \"loginButton\" : \"loginButton save2 save1\"}>Login</button>\r\n\r\n                                    </div>\r\n                                    <div className=\"login-footer-text\">\r\n                                        alpha ver 0.11\r\n                                        <br />\r\n                                        ©Rimon Hedge Funds LTD\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n\r\n                            {/* </Modal.Body>\r\n                                </Modal> */}\r\n\r\n\r\n                        </Col>\r\n                        <Col md={4} />\r\n                    </Row>\r\n                </Grid>\r\n                <NotificationContainer />\r\n\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport { NavItem, Nav, NavDropdown, MenuItem } from \"react-bootstrap\";\r\nimport config from '../../constant/config';\r\nimport axios from \"axios\";\r\n\r\nclass AdminNavbarLinks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n\r\n    let currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    console.log(currentUser[0]);\r\n    this.state = {\r\n      loginForm: false,\r\n      setShow: false,\r\n      show: true,\r\n      id: currentUser[0].id,\r\n      logged_in: currentUser[0].logged_in,\r\n    }\r\n  }\r\n  logout = async () => {\r\n    if (this.state.logged_in) {\r\n      const userdetail = {\r\n        id: this.state.id,\r\n      }\r\n      await axios.post(config.baseurl + '/users/logout', userdetail)\r\n        .then(function (response) {\r\n          if (response.status == 200) {\r\n            console.log({ message: 'logout' });\r\n          }\r\n        })\r\n    }\r\n    localStorage.clear();\r\n    this.props.history.push('/login');\r\n  }\r\n  render() {\r\n    const notification = (\r\n      <div>\r\n        {/* <i className=\"fa fa-globe\" />\r\n        <b className=\"caret\" /> */}\r\n        {/* <span className=\"notification\">5</span> */}\r\n        <p className=\"hidden-lg hidden-md\">Notification</p>\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        <Nav>\r\n          <NavItem eventKey={1} href=\"#\">\r\n            {/* <i className=\"fa fa-dashboard\" /> */}\r\n            <p className=\"hidden-lg hidden-md\">Dashboard</p>\r\n          </NavItem>\r\n          <NavDropdown\r\n            eventKey={2}\r\n            title={notification}\r\n            noCaret\r\n            id=\"basic-nav-dropdown\"\r\n          >\r\n            <MenuItem eventKey={2.1}>Notification 1</MenuItem>\r\n            <MenuItem eventKey={2.2}>Notification 2</MenuItem>\r\n            <MenuItem eventKey={2.3}>Notification 3</MenuItem>\r\n            <MenuItem eventKey={2.4}>Notification 4</MenuItem>\r\n            <MenuItem eventKey={2.5}>Another notifications</MenuItem>\r\n          </NavDropdown>\r\n          <NavItem eventKey={3} href=\"#\">\r\n            {/* <i className=\"fa fa-search\" />\r\n            <p className=\"hidden-lg hidden-md\">Search</p> */}\r\n          </NavItem>\r\n        </Nav>\r\n        <Nav pullRight>\r\n          {/* <NavItem eventKey={1} href=\"#\">\r\n            Account\r\n          </NavItem>\r\n          <NavDropdown\r\n            eventKey={2}\r\n            title=\"Dropdown\"\r\n            id=\"basic-nav-dropdown-right\"\r\n          >\r\n            <MenuItem eventKey={2.1}>Action</MenuItem>\r\n            <MenuItem eventKey={2.2}>Another action</MenuItem>\r\n            <MenuItem eventKey={2.3}>Something</MenuItem>\r\n            <MenuItem eventKey={2.4}>Another action</MenuItem>\r\n            <MenuItem eventKey={2.5}>Something</MenuItem>\r\n            <MenuItem divider />\r\n            <MenuItem eventKey={2.5}>Separated link</MenuItem>\r\n          </NavDropdown> */}\r\n          <NavItem eventKey={3} onClick={() => this.logout()}>\r\n            <span className=\"logOutbtn\">Logout</span>\r\n          </NavItem>\r\n        </Nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminNavbarLinks;\r\n","import React, { Component } from \"react\";\r\nimport { Navbar } from \"react-bootstrap\";\r\n\r\nimport AdminNavbarLinks from \"./AdminNavbarLinks\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.mobileSidebarToggle = this.mobileSidebarToggle.bind(this);\r\n    this.state = {\r\n      sidebarExists: false\r\n    };\r\n  }\r\n  mobileSidebarToggle(e) {\r\n    if (this.state.sidebarExists === false) {\r\n      this.setState({\r\n        sidebarExists: true\r\n      });\r\n    }\r\n    e.preventDefault();\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    var node = document.createElement(\"div\");\r\n    node.id = \"bodyClick\";\r\n    node.onclick = function() {\r\n      this.parentElement.removeChild(this);\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n    };\r\n    document.body.appendChild(node);\r\n  }\r\n  render() {\r\n    return (\r\n      <Navbar fluid>\r\n        <Navbar.Header>\r\n          <Navbar.Brand>\r\n            <a href=\"#\">{this.props.brandText== \"Dashboard\" ? \"Dashboard\" : this.props.brandText }</a>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle onClick={this.mobileSidebarToggle} />\r\n        </Navbar.Header>\r\n        <Navbar.Collapse>\r\n          <AdminNavbarLinks {...this.props}/>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Dropdown, DropdownButton } from 'react-bootstrap'\r\nimport AdminNavbarLinks from \"../Navbars/AdminNavbarLinks.jsx\";\r\n\r\n// import logo from \"assets/img/reactlogo.png\";\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: window.innerWidth,\r\n    \r\n    };\r\n  }\r\n  toggle = (id) => {\r\n\r\n    // console.log(this.props.routes)\r\n    this.props.routes.filter((data) => {\r\n      if (data.id == id) {\r\n        data.menu = !data.menu\r\n      }\r\n      else {\r\n        data.menu = false\r\n      }\r\n    })\r\n  }\r\n\r\n  activeRoute(routeName) {\r\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\r\n  }\r\n  updateDimensions() {\r\n    this.setState({ width: window.innerWidth });\r\n  }\r\n  componentDidMount() {\r\n    this.updateDimensions();\r\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\r\n  }\r\n\r\n  render() {\r\n    // let routers = this.props.routes.map(a => a.resources)\r\n    // let innerRoute = routers.map(b => b)\r\n    // let one = innerRoute.map(c => c);\r\n    // console.log(one[2]);\r\n    let currentUser = JSON.parse(localStorage.getItem('currentUser'))\r\n    const sidebarBackground = {\r\n      backgroundImage: \"url(\" + this.props.image + \")\"\r\n    };\r\n    return (\r\n\r\n\r\n      <div\r\n        id=\"sidebar\"\r\n        className=\"sidebar\"\r\n        data-color={this.props.color}\r\n        data-image={this.props.image}\r\n      >\r\n        {this.props.hasImage ? (\r\n          <div className=\"sidebar-background\" />\r\n        ) : (\r\n            null\r\n          )}\r\n        <div className=\"logo\">\r\n          {/* <a\r\n            href=\"https://www.creative-tim.com?ref=lbd-sidebar\"\r\n            className=\"simple-text logo-mini\"\r\n          > */}\r\n          {/* <div className=\"logo-img\">\r\n\r\n            </div> */}\r\n          {/* </a> */}\r\n          <span className=\"logo-text simple-text logo-normal\">\r\n          Hedging Interest Differentials\r\n\r\n          </span>\r\n          {/* <a\r\n            href=\"https://www.creative-tim.com?ref=lbd-sidebar\"\r\n            className=\"simple-text logo-normal\"\r\n          >\r\n            Dashboard\r\n          </a> */}\r\n        </div>\r\n        <div className=\"sidebar-wrapper\">\r\n\r\n          <ul className=\"nav\">\r\n            {this.state.width <= 991 ? <AdminNavbarLinks {...this.props} /> : null}\r\n            {this.props.routes.map((prop, key) => {\r\n              if (!prop.redirect)\r\n                // console.log(prop.resources, 'resouces');\r\n                return (\r\n                  <li\r\n                    className={\r\n                      prop.upgrade\r\n                        ? \"active active-pro\"\r\n                        : this.activeRoute(prop.layout + prop.path)\r\n                    }\r\n\r\n                    key={key}\r\n                  >\r\n                    <NavLink\r\n                      to={prop.layout + prop.path}\r\n                      className=\"nav-link\"\r\n                      activeClassName=\"active\"\r\n                    >\r\n                      <i className={prop.icon} />\r\n                      <p\r\n                        onClick={() => this.toggle(prop.id)}\r\n\r\n                      >{prop.name}\r\n                        {prop.child !== false && <b style={{ transform: prop.menu ? 'rotate(360deg)' : 'rotate(270deg)' }} className=\"caret\"></b>}\r\n                      </p>\r\n\r\n                    </NavLink>\r\n                    {prop.menu &&\r\n                      <ul className='dropdown-menu-cutomize'>\r\n                        {prop.resources != undefined && prop.resources.map((sub, index) => (\r\n                          // {currentUser && currentUser.logged_in ? : }\r\n                          <NavLink\r\n                            to={sub.layout + sub.path}\r\n                            className=\"nav-link\"\r\n                            activeClassName=\"active\"\r\n                          >\r\n                            <li\r\n\r\n                              key={index}>\r\n                              {/* <i className={sub.icon} /> */}\r\n                              <p >{sub.name}</p>\r\n                            </li>\r\n                          </NavLink>\r\n                        ))}\r\n\r\n                      </ul>\r\n                    }\r\n\r\n                  </li>\r\n                );\r\n              // return null;\r\n            })}\r\n          </ul>\r\n        </div>\r\n        {/* <NavLink>\r\n          <DropdownButton id=\"dropdown-item-button\" title=\"Dropdown button\">\r\n            <Dropdown.ItemText>Dropdown item text</Dropdown.ItemText>\r\n            <Dropdown.Item as=\"button\">Action</Dropdown.Item>\r\n            <Dropdown.Item as=\"button\">Another action</Dropdown.Item>\r\n            <Dropdown.Item as=\"button\">Something else</Dropdown.Item>\r\n          </DropdownButton>\r\n        </NavLink> */}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n\r\n","\r\nimport React, { useState, Fragment } from 'react';\r\nimport { Collapse } from 'reactstrap';\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport NumberFormat from 'react-number-format';\r\nimport Login from './login';\r\n\r\n// import Data from './Data';\r\n\r\nconst Closeposition = (props) => {\r\n    const { allHistoryRecord, fromHistoryOrderInfo, toHistoryOrderInfo, commissionHistoryOrderInfo } = props;\r\n    const [isOpen2, setIsOpen2] = useState(false);\r\n    const toggle2 = () => setIsOpen2(!isOpen2);\r\n\r\n    // const sumOfTotal = allHistoryRecord.reduce((current, data) => {\r\n    //     return (data.total + current);\r\n    // }, 0);\r\n    let fromSymbols = '';\r\n    let toSymbols = '';\r\n    if (allHistoryRecord && Object.entries(allHistoryRecord).length > 0) {\r\n        fromSymbols = JSON.parse(allHistoryRecord.from_symbols);\r\n        fromSymbols = (fromSymbols).map(data => data).join(', ');\r\n        toSymbols = JSON.parse(allHistoryRecord.to_symbols);\r\n        toSymbols = (toSymbols).map(data => data).join(', ')\r\n    }\r\n    let fromsum = 0;\r\n    let tosum = 0;\r\n    let commissionSum = 0;\r\n\r\n    if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\r\n        fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\r\n    }\r\n    if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\r\n        tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\r\n    }\r\n    if (commissionHistoryOrderInfo && commissionHistoryOrderInfo.length > 0) {\r\n        commissionSum = (commissionHistoryOrderInfo[0].commission + commissionHistoryOrderInfo[0].swap + commissionHistoryOrderInfo[0].profit);\r\n    }\r\n\r\n    let sumOfTotal = tosum + fromsum;\r\n\r\n    let noRecord = ((fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0 && fromHistoryOrderInfo[0].total == null) && (toHistoryOrderInfo && toHistoryOrderInfo.length > 0 && toHistoryOrderInfo[0].total == null)) ? true : false;\r\n    return (\r\n        <div>\r\n            <div className=\"openpositions symbol-box terminal-head-box\" style={{ margin: '20px 0px' }}>\r\n                <span className=\"p-text\">Realized Profit/Loss</span>\r\n                {/* <span className=\"icon-style\" onClick={toggle2}>\r\n                    {!isOpen2 ?\r\n                        <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\r\n                        :\r\n                        <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\r\n                    }\r\n                </span> */}\r\n            </div>\r\n            <div>\r\n                {/* <Collapse isOpen={isOpen2}> */}\r\n                <Row>\r\n                    {/* {Data.tablePage.items.map((item, index) =>\r\n                            <Col md={6} key={index}>\r\n                                <div className=\"card\">\r\n                                    <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\r\n                                    </div>\r\n                                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                        <table className=\"table\">\r\n                                            <tbody>\r\n                                                <tr><td>{item.closed} </td>\r\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\r\n                                                </tr>\r\n                                                <tr><td>{item.commission} </td>\r\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\r\n                                                </tr>\r\n                                                <tr><td>{item.swap} </td>\r\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\r\n                                                </tr>\r\n                                                <tr><td>{item.total} </td>\r\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n                        )} */}\r\n                    {/* {(allHistoryRecord && allHistoryRecord.length>0) && allHistoryRecord.map((item, index) =>\r\n                            <Fragment>\r\n\r\n                            <Col md={6} key={index}>\r\n                                <div className=\"card\">\r\n                                    <div className=\"header\">\r\n                                        <h5 className={item.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{item.account.login}</h5>\r\n                                        <h6 className={'colorDarkBlue'} style={{fontSize:10}}>({item.account.alias})</h6>\r\n                                    </div>\r\n                                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                        <table className=\"table\">\r\n                                            <tbody>\r\n                                                <tr><td>Closed P/L </td>\r\n                                                    <td className=\"td-actions text-right\">$ {item.profit}</td>\r\n                                                </tr>\r\n                                                <tr><td>Commission </td>\r\n                                                    <td className=\"td-actions text-right\">$ {item.commission}</td>\r\n                                                </tr>\r\n                                                <tr><td>Swap </td>\r\n                                                    <td className=\"td-actions text-right\">$ {item.swap}</td>\r\n                                                </tr>\r\n                                                <tr><td>Total </td>\r\n                                                    <td className=\"td-actions text-right\">$ {item.total}</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n                            </Fragment>\r\n                        )}\r\n                        {(allHistoryRecord && allHistoryRecord.length>0) && \r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <div>\r\n                                        <div className=\"total-box\">\r\n                                            <span className=\"text\">Sum of closed positions</span>\r\n                                            <span className=\"text\" style={{ float: 'right' }}>$ {sumOfTotal}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        } */}\r\n                    {noRecord ? (\r\n                        <div className=\"text-center\">\r\n                            No Record Found!\r\n                        </div>) :\r\n\r\n                        <Fragment>\r\n\r\n                            {(fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0 && fromHistoryOrderInfo[0].total != null) ? (\r\n                                <Col md={6}>\r\n                                    <div className=\"card\">\r\n                                        <div className=\"header\">\r\n                                            <h5 className={allHistoryRecord.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{allHistoryRecord.accountFromInfo[0].login}</h5>\r\n                                            <h6 className={'colorDarkBlue'} style={{ fontSize: 10 }}>({allHistoryRecord.accountFromInfo[0].alias})</h6>\r\n                                        </div>\r\n                                        <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                            <table className=\"table\">\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td className=\"symbolStyle removeBorder\">{fromSymbols}</td>\r\n                                                        {/* <td>{fromSymbols}</td> */}\r\n                                                        {/* <td className=\"td-actions text-right\">$ {fromHistoryOrderInfo[0].profit}</td> */}\r\n                                                    </tr>\r\n                                                    <tr><td>Closed P/L </td>\r\n                                                        <td className=\"td-actions text-right\">$ {' '}\r\n                                                            <NumberFormat value={fromHistoryOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                            {/* {fromHistoryOrderInfo[0].profit} */}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr><td>Commission </td>\r\n                                                        <td className=\"td-actions text-right\">$ {' '}\r\n                                                            {/* {fromHistoryOrderInfo[0].commission} */}\r\n                                                            <NumberFormat value={fromHistoryOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr><td>Swap </td>\r\n                                                        <td className=\"td-actions text-right\">$ {' '}\r\n                                                            <NumberFormat value={fromHistoryOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                            {/* {fromHistoryOrderInfo[0].swap} */}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr><td>Total </td>\r\n                                                        <td className=\"td-actions text-right\">$ {' '}\r\n                                                            <NumberFormat value={fromHistoryOrderInfo[0].total} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                            {/* {fromHistoryOrderInfo[0].total} */}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                            ) : (\r\n                                    <Col md={6}>\r\n                                        <div className=\"card noRecordCol\"> No Record Found</div>\r\n                                    </Col>\r\n                                )}\r\n                            {(toHistoryOrderInfo && toHistoryOrderInfo.length > 0 && toHistoryOrderInfo[0].total != null) ? (\r\n                                <Col md={6}>\r\n                                    <div className=\"card\">\r\n                                        <div className=\"header\">\r\n                                            <h5 className={allHistoryRecord.id == '1' ? 'acntText color2' : 'acntText color2'}>{allHistoryRecord.accountToInfo[0].login}</h5>\r\n                                            <h6 className={'color2'} style={{ fontSize: 10 }}>({allHistoryRecord.accountToInfo[0].alias})</h6>\r\n                                        </div>\r\n                                        <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                            <table className=\"table\">\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <span className=\"symbolStyle\">{toSymbols}</span>\r\n\r\n                                                        {/* <td>{toSymbols}</td> */}\r\n                                                        {/* <td className=\"td-actions text-right\">$ {fromHistoryOrderInfo[0].profit}</td> */}\r\n                                                    </tr>\r\n                                                    <tr><td>Closed P/L </td>\r\n                                                        <td className=\"td-actions text-right\">$ {' '}\r\n                                                            <NumberFormat value={toHistoryOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                            {/* {toHistoryOrderInfo[0].profit} */}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr><td>Commission </td>\r\n                                                        <td className=\"td-actions text-right\">$ {' '}\r\n                                                            {/* {toHistoryOrderInfo[0].commission} */}\r\n                                                            <NumberFormat value={toHistoryOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr><td>Swap </td>\r\n                                                        <td className=\"td-actions text-right\">$ {' '}\r\n                                                            {/* {toHistoryOrderInfo[0].swap} */}\r\n\r\n\r\n                                                            {\r\n                                                                <NumberFormat value={(toHistoryOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                                                                // toOpenOrderInfo[0].swap\r\n                                                            }\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr><td>Total </td>\r\n                                                        <td className=\"td-actions text-right\">$ {' '}\r\n                                                            {/* {toHistoryOrderInfo[0].total} */}\r\n                                                            <NumberFormat value={toHistoryOrderInfo[0].total} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                            ) : (\r\n                                    <Col md={6}>\r\n                                        <div className=\"card noRecordCol\"> No Record Found</div>\r\n                                    </Col>\r\n                                )\r\n\r\n                            }\r\n                            {(sumOfTotal != 0) &&\r\n                                <Row>\r\n                                    <Col md={12} style={{ marginBottom: 20 }}>\r\n                                        <div>\r\n                                            <div className=\"total-box\">\r\n                                                <span className=\"text\">Sum of closed positions</span>\r\n                                                <span className=\"text\" style={{ float: 'right' }}>$ {' '}\r\n                                                    <NumberFormat value={sumOfTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                                    {/* {sumOfTotal} */}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            }\r\n\r\n\r\n\r\n\r\n\r\n                        </Fragment>\r\n                    }\r\n                </Row>\r\n                {/* </Collapse> */}\r\n                {allHistoryRecord.commission_acount_id !== 0 && allHistoryRecord.commission_acount_id !== undefined &&\r\n                    <Col md={12}>\r\n\r\n                        <div className=\"card \">\r\n                            <div className=\"header ptheader\">\r\n                                <h4 className=\"text-center\"><b>Commission</b></h4>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12 text-center\">\r\n\r\n                                        <h5 className={allHistoryRecord.id == '1' ? 'acntText color2' : 'acntText acadjust color2'}>{allHistoryRecord.accountCommissionInfo !== undefined && allHistoryRecord.accountCommissionInfo[0].login} <span>({allHistoryRecord.accountCommissionInfo !== undefined && allHistoryRecord.accountCommissionInfo[0].alias})</span></h5>\r\n\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"col-md-12 total text-center\">\r\n\r\n\r\n                                        <tr>\r\n                                            <td className=\"td-actions total_comm text-right\">\r\n\r\n                                                Total : $ {' '}\r\n                                                {/* {toHistoryOrderInfo[0].total} */}\r\n                                                <NumberFormat value={allHistoryRecord.history_info} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                            </td>\r\n                                        </tr>\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>}\r\n            </div>\r\n        </div >\r\n\r\n    );\r\n}\r\n\r\nexport default Closeposition;\r\n","const Data = {\r\n \r\n  tablePage: {\r\n    items: [\r\n      {id: 1,lot:'Buy 10 Lot', closed: 'Closed P/L', commission: 'Commission', swap: 'Swap', total: 'Total', price:'$ 1110',textA: 'Account A'},\r\n      {id: 2, lot:'Sell 10 Lot', closed: 'Closed P/L', commission: 'Commission', swap: 'Swap', total: 'Total', price:'$ 1111', textA: 'Account B'},\r\n    ]\r\n  },\r\n  dashBoardPage: {\r\n    items: [\r\n      {id: 1, title: 'Balance', textA: 'Account A', textB: 'Account B',price:'$ 400'},\r\n      {id: 2, title: 'Equity',textA: 'Account A', textB: 'Account B',price:'$ 400'},\r\n      {id: 3, title: 'Margin', textA: 'Account A', textB: 'Account B',price:'$ 400'},\r\n      {id: 4, title: 'Free Margin', textA: 'Account A', textB: 'Account B',price:'$ 400'},\r\n      {id: 5, title: 'Margin %', textA: 'Account A', textB: 'Account B',price:'$ 400'},\r\n      {id: 5, title: 'Unrealized P/L', textA: 'Account A', textB: 'Account B',price:'$ 400'}\r\n    ],\r\n  }\r\n};\r\n\r\nexport default Data;\r\n","import React, { useState, Fragment } from 'react';\r\nimport { Collapse } from 'reactstrap';\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport Data from './Data';\r\n\r\nexport default function Openposition(props) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const { allOpenRecord, fromOpenOrderInfo, toOpenOrderInfo, } = props;\r\n\r\n\r\n  let fromsum = 0;\r\n  let tosum = 0;\r\n  let fromSymbols = '';\r\n  let toSymbols = '';\r\n  if (allOpenRecord && Object.entries(allOpenRecord).length > 0) {\r\n    fromSymbols = JSON.parse(allOpenRecord.from_symbols);\r\n    fromSymbols = (fromSymbols).map(data => data).join(', ');\r\n    toSymbols = JSON.parse(allOpenRecord.to_symbols);\r\n    toSymbols = (toSymbols).map(data => data).join(', ')\r\n  }\r\n  // if(fromOpenOrderInfo && fromOpenOrderInfo.length>0){\r\n  //   fromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\r\n  // }\r\n  // if(toOpenOrderInfo && toOpenOrderInfo.length>0){\r\n  //   tosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n  // }\r\n  if (fromOpenOrderInfo && fromOpenOrderInfo.length > 0) {\r\n    // if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\r\n    //   fromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\r\n    // }else{\r\n    fromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\r\n    // }\r\n  }\r\n  if (toOpenOrderInfo && toOpenOrderInfo.length > 0) {\r\n    // if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\r\n    //   tosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap);\r\n    // }else{\r\n    tosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n    // }\r\n    // opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n  }\r\n\r\n  let sumOfTotal = tosum + fromsum;\r\n  let noRecord = ((fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total == null) && (toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total == null)) ? true : false;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"openpositions symbol-box terminal-head-box\" style={{ margin: '20px 0px' }}>\r\n        <span className=\"p-text\">Unrealized Profit/Loss</span>\r\n        {/* <span className=\"icon-style\" onClick={toggle}>\r\n          {!isOpen ?\r\n            <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\r\n            :\r\n            <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\r\n          }\r\n        </span> */}\r\n      </div>\r\n\r\n      <div>\r\n        {/* <Collapse isOpen={isOpen}> */}\r\n        <Row>\r\n\r\n\r\n\r\n          {/* {Data.tablePage.items.map((item, index) =>\r\n                  <Col md={6} key={index}>\r\n                    <div className=\"card\">\r\n                      <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\r\n                      </div>\r\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                        <table className=\"table\">\r\n                          <tbody>\r\n                            <tr><td>{item.lot} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.commission} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.swap} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.total} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                )} */}\r\n\r\n          {/* {(allOpenRecord && allOpenRecord.length>0) && allOpenRecord.map((item, index) =>\r\n                    \r\n                    <Col md={6} key={index}>\r\n                            <div className=\"card\">\r\n                            <div className=\"header\">\r\n                              <h5 className={item.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{item.account.login}</h5>\r\n                              <h6 style={{fontSize:10}} className={'colorDarkBlue'}>({item.account.alias})</h6>\r\n                            </div>\r\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>\r\n                                            {item.order_type ===0 ? 'BUY ' : 'SELL ' } \r\n                                            {item.lots} {(item.lots>1) ? 'Lots':'Lot'}\r\n                                        </td>\r\n                                        <td className=\"td-actions text-right\"> {''}</td>\r\n                                    </tr>\r\n                                    <tr><td>Floating P/L </td>\r\n                                        <td className=\"td-actions text-right\">$ {item.profit}</td>\r\n                                    </tr>\r\n                                    <tr><td>Commission </td>\r\n                                        <td className=\"td-actions text-right\">$ {item.commission}</td>\r\n                                    </tr>\r\n                                    <tr><td>Swap </td>\r\n                                        <td className=\"td-actions text-right\">$ {item.swap}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Total </td>\r\n                                        <td className=\"td-actions text-right\">\r\n                                          $ {Math.floor(item.commission + item.swap + item.profit)}\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                </table>\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                        </Col>\r\n                )} */}\r\n          {/* {(allOpenRecord && allOpenRecord.length>0) &&\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <div>\r\n                            <div className=\"total-box\">\r\n                                <span className=\"text\">Sum of open positions</span>\r\n                                <span className=\"text\" style={{ float: 'right' }}>$ {sumOfTotal}</span>\r\n                            </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                } */}\r\n          {(noRecord) ?\r\n            <div className=\"text-center\">\r\n              No Record Found!\r\n                    </div>\r\n            :\r\n            <Fragment>\r\n              {(fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total !== null) ?\r\n\r\n                <Col md={6}>\r\n                  <div className=\"card\">\r\n                    <div className=\"header\">\r\n                      <h5 className={allOpenRecord.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{allOpenRecord.accountFromInfo[0].login}</h5>\r\n                      <h6 style={{ fontSize: 10 }} className={'colorDarkBlue'}>({allOpenRecord.accountFromInfo[0].alias})</h6>\r\n                    </div>\r\n                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                      <table className=\"table\">\r\n                        <tbody>\r\n                          <tr>\r\n                            <span className=\"symbolStyle \">{fromSymbols}</span>\r\n                          </tr>\r\n                          {/* Buy 10 Lot  */}\r\n                          <tr>\r\n                            <td>\r\n                              {fromOpenOrderInfo[0].order_type == 0 ? 'BUY ' : 'SELL '}\r\n                              <NumberFormat\r\n                                                    value={fromOpenOrderInfo[0].lots}\r\n                                                    displayType={\"text\"}\r\n                                                    thousandSeparator={true}\r\n                                                    decimalScale={2}\r\n                                                  /> {' '}\r\n                               {(fromOpenOrderInfo[0].lots > 1) ? 'Lots' : 'Lot'}\r\n                            </td>\r\n                            <td className=\"td-actions text-right\"> {''}</td>\r\n                          </tr>\r\n                          {/* <tr><td>{(fromOpenOrderInfo[0].lots>1) ? 'Lots':'Lot'}</td>\r\n                                        <td className=\"td-actions text-right\">{fromOpenOrderInfo[0].lots}</td>\r\n                                    </tr> */}\r\n                          <tr><td>Floating P/L </td>\r\n                            <td className=\"td-actions text-right\">$ {' '}\r\n                              {/* {fromOpenOrderInfo[0].profit} */}\r\n                              <NumberFormat value={fromOpenOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                            </td>\r\n                          </tr>\r\n                          <tr><td>Commission </td>\r\n                            <td className=\"td-actions text-right\">$ {' '}\r\n                              {/* {fromOpenOrderInfo[0].commission} */}\r\n                              <NumberFormat value={fromOpenOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                            </td>\r\n                          </tr>\r\n                          <tr><td>Swap </td>\r\n                            <td className=\"td-actions text-right\">$ {' '}\r\n                              {/* {fromOpenOrderInfo[0].swap} */}\r\n                              {/* {allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length > 0 ?\r\n                                  <NumberFormat value={allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                  // (allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].swap) \r\n                                  : */}\r\n                              <NumberFormat value={fromOpenOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                              {/* // fromOpenOrderInfo[0].swap */}\r\n                              {/* } */}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>Total </td>\r\n                            <td className=\"td-actions text-right\">$ {' '}\r\n                              {/* $ {Math.floor(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)} */}\r\n                              {/* {allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length > 0 ?\r\n                                  <NumberFormat value={(fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} /> */}\r\n                              {/* // Math.floor(fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap) \r\n                                  // : */}\r\n                              <NumberFormat value={(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                              {/* //  Math.floor(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)\r\n                                // } */}\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n                :\r\n                <Col md={6}>\r\n                  <div className=\"card noRecordCol\"> No Record Found</div>\r\n                </Col>\r\n              }\r\n\r\n              {(toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total !== null) ?\r\n\r\n                <Col md={6}>\r\n                  <div className=\"card\">\r\n                    <div className=\"header\">\r\n                      <h5 className={allOpenRecord.id == '1' ? 'acntText color2' : 'acntText color2'}>{allOpenRecord.accountToInfo[0].login}</h5>\r\n                      <h6 style={{ fontSize: 10 }} className={'color2'}>({allOpenRecord.accountToInfo[0].alias})</h6>\r\n                    </div>\r\n                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                      <table className=\"table\">\r\n                        <tbody>\r\n                          {/* Buy 10 Lot  */}\r\n                          <tr>\r\n                            <span className=\"symbolStyle\">{toSymbols}</span>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                              {toOpenOrderInfo[0].order_type == 0 ? 'BUY ' : 'SELL '}\r\n                              <NumberFormat\r\n                                                    value={toOpenOrderInfo[0].lots}\r\n                                                    displayType={\"text\"}\r\n                                                    thousandSeparator={true}\r\n                                                    decimalScale={2}\r\n                                                  /> {' '}\r\n                               {(toOpenOrderInfo[0].lots > 1) ? 'Lots' : 'Lot'}\r\n                            </td>\r\n                            <td className=\"td-actions text-right\"> {''}</td>\r\n                          </tr>\r\n                          {/* <tr><td>{(fromOpenOrderInfo[0].lots>1) ? 'Lots':'Lot'}</td>\r\n                                        <td className=\"td-actions text-right\">{fromOpenOrderInfo[0].lots}</td>\r\n                                    </tr> */}\r\n                          <tr><td>Floating P/L </td>\r\n                            <td className=\"td-actions text-right\">$ {' '}\r\n                              {/* {toOpenOrderInfo[0].profit} */}\r\n                              <NumberFormat value={toOpenOrderInfo[0].profit !== null ? toOpenOrderInfo[0].profit : 0} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                            </td>\r\n                          </tr>\r\n                          <tr><td>Commission </td>\r\n                            <td className=\"td-actions text-right\">$ {' '}\r\n                              {/* {toOpenOrderInfo[0].commission} */}\r\n                              <NumberFormat value={toOpenOrderInfo[0].commission !== null ? toOpenOrderInfo[0].commission : 0} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                            </td>\r\n                          </tr>\r\n                          <tr><td>Swap </td>\r\n                            <td className=\"td-actions text-right\">$ {' '}\r\n                              {/* {toOpenOrderInfo[0].swap} */}\r\n                              {/* {allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length > 0 ?\r\n                                  // (allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].swap) \r\n                                  <NumberFormat value={(allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                  : */}\r\n                              <NumberFormat value={(toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                              {/* // toOpenOrderInfo[0].swap\r\n                                // } */}\r\n                            </td>\r\n\r\n                          </tr>\r\n                          <tr>\r\n                            <td>Total </td>\r\n                            <td className=\"td-actions text-right\"> $ {' '}\r\n                              {/* {allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length > 0 ?\r\n                                  //  Math.floor(toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap)\r\n                                  <NumberFormat value={(toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                                  : */}\r\n                              <NumberFormat value={(toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                              {/* \r\n                                  //  Math.floor(toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit)\r\n                                } */}\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n                :\r\n                <Col md={6}>\r\n                  <div className=\"card noRecordCol\"> No Record Found</div>\r\n                </Col>\r\n              }\r\n              {\r\n                sumOfTotal != 0 &&\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <div>\r\n                      <div className=\"total-box\">\r\n                        <span className=\"text\">Sum of open positions</span>\r\n                        <span className=\"text\" style={{ float: 'right' }}>$ {' '}\r\n                          <NumberFormat value={sumOfTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                          {/* {sumOfTotal} */}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              }\r\n            </Fragment>\r\n          }\r\n        </Row>\r\n        {/* </Collapse> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import config from './constant/config';\r\n\r\nconst axios = require('axios');\r\n\r\n\r\nconst myInitObject = {}\r\nexport default myInitObject;\r\n\r\n\r\nexport const api = () => {\r\n    \r\n    // Object.keys(myInitObject).forEach(key=> myInitObject[key]=null)\r\n    // console.log(myInitObject, '-----------------+++++');\r\n    axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.fetchAllHistoryTrade = response.data\r\n                myInitObject.responsHT = true\r\n            }\r\n        })\r\n\r\n    axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.fetchAllOpenTrade = response.data\r\n                myInitObject.responsOT = true\r\n            }\r\n        })\r\n\r\n    axios.get(config.baseurl + '/accounts/fetchAllAccounts')\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.fetchAllAccounts = response.data\r\n                myInitObject.responsAC = true\r\n            }\r\n        });\r\n\r\n    axios.get(config.baseurl + '/filter/fetchActivefilterdata')\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.fetchActivefilterdata = response.data\r\n                myInitObject.responsAF = true\r\n            }\r\n        });\r\n\r\n    axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.fetchLastUpdatedTime = response.data\r\n                myInitObject.responsLUT = true\r\n            }\r\n        });\r\n\r\n    axios.get(config.baseurl + '/accounts/fetchStatusData')\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.fetchStatusData = response.data\r\n                myInitObject.responsSD = true\r\n            }\r\n        });\r\n\r\n    axios.get(config.baseurl + '/profilepositions/calculatingOpenTrade')\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.calculatingOpenTrade = response.data\r\n                myInitObject.responsCOT = true\r\n\r\n                axios.get(config.baseurl + '/profilepositions/calculatingHistoryTrade')\r\n                    .then(function (response) {\r\n                        if (response.status == 200) {\r\n                            myInitObject.calculatingHistoryTrade = response.data\r\n                            myInitObject.responsCHT = true\r\n\r\n                            axios.get(config.baseurl + '/profilepositions/calculatingCommission')\r\n                                .then(function (response) {\r\n                                    if (response.status == 200) {\r\n                                        myInitObject.calculatingCommission = response.data\r\n                                        myInitObject.responsCC = true\r\n                                    }\r\n                                })\r\n                        }\r\n                    })\r\n            }\r\n        })\r\n    axios.get(config.baseurl + '/accounts/fetchAllSymbol')\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.fetchAllSymbol = response.data\r\n                myInitObject.responsAS = true\r\n            }\r\n        })\r\n    axios.get(config.baseurl + '/filter/fetchdailyswaps')\r\n    .then(function (response) {\r\n        if (response.status == 200) {\r\n            myInitObject.fetchdailyswaps = response.data\r\n            myInitObject.responsDS = true\r\n        }\r\n    })\r\n    axios.get(config.baseurl + '/users/allAccounts?page=1')\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.usersAllAccounts = response.data\r\n                myInitObject.responsAAC = true\r\n            }\r\n        })\r\n\r\n    axios.get(config.baseurl + '/filter/fetchfilterdata?page=1')\r\n        .then(function (response) {\r\n            if (response.status == 200) {\r\n                myInitObject.fetchfilterdata = response.data\r\n                myInitObject.responsFF = true\r\n            }\r\n        })\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\r\n// import SweetAlert from 'react-bootstrap-sweetalert';\r\nimport swal from \"sweetalert\";\r\nimport config from \"../constant/config.js\";\r\nimport ReactPaginate from 'react-paginate';\r\nconst axios = require(\"axios\");\r\n\r\nlet intervalSet;\r\nlet timerWaitInterval;\r\nlet timerWait = 100;\r\nclass Innerlogin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loginForm: false,\r\n      setShow: false,\r\n      show: true,\r\n      login: \"\",\r\n      password: \"\",\r\n      broker: \"\",\r\n      alias: \"\",\r\n      is_server: false,\r\n      alert: null,\r\n      persons: [],\r\n      shwPwd: false,\r\n      shwPwd: false,\r\n      shwLogin: false,\r\n      shwbroker: false,\r\n      accountlist: [],\r\n      count: \"\",\r\n      pages:'',\r\n      page: 1,\r\n      editForm: false,\r\n      detailForm: false,\r\n      editData: [],\r\n      edituser: \"\",\r\n      editserver: \"\",\r\n      editalias: \"\",\r\n      editstatus: \"\",\r\n      id: \"\",\r\n      // tryAgainConnection: false,\r\n      currentAddLogin: null,\r\n      currentAddBroker: null,\r\n      currentAddAlias: null,\r\n      timerShow: false,\r\n      closebtn: true,\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n  }\r\n  // delete alert\r\n  // deleteThisGoal() {\r\n  //     const getAlert = () => (\r\n  //         <SweetAlert\r\n  //             success\r\n  //             title=\"Woot!\"\r\n  //             onConfirm={() => this.hideAlert()}\r\n  //         >\r\n  //             Hello world!\r\n  //       </SweetAlert>\r\n  //     );\r\n\r\n  //     this.setState({\r\n  //         alert: getAlert()\r\n  //     });\r\n  // }\r\n  fectheAllAccount() {\r\n   \r\n    let self = this;\r\n    axios\r\n      .get(config.baseurl + `/users/allAccounts?page=${self.state.page}`)\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          self.setState({\r\n            accountlist: response.data.rows,\r\n            count: response.data.count,\r\n            pages: response.data.pages,\r\n          });\r\n        }\r\n      });\r\n    // console.log(response.status,\"accountlist\");\r\n  }\r\n  \r\n  handlePageClick = (data) => {\r\n    this.setState({page :data.selected + 1},()=> {\r\n     this.fectheAllAccount(this.state.page)\r\n    })\r\n  }\r\n  changeServer = (e) => {\r\n    this.setState({ is_server: !this.state.is_server }, () => {});\r\n    console.log(this.state.is_server, \"ooooo\");\r\n  };\r\n  onChange(e) {\r\n    this.setState({ error: \"\" });\r\n    if (e.target.name === \"login\") {\r\n      const re = /^[0-9\\b]+$/;\r\n      if (e.target.value === \"\" || re.test(e.target.value)) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n      } else if (e.target.value !== re) {\r\n        this.setState({ error: \"alphabet\" });\r\n      }\r\n    } else {\r\n      this.setState({ [e.target.name]: e.target.value.trim() });\r\n    }\r\n  }\r\n\r\n  checkUserConnected = (login, broker) => {\r\n    let self = this;\r\n    axios\r\n      .post(config.baseurl + \"/users/checkUserConnected\", {\r\n        login: login,\r\n        broker: broker,\r\n      })\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          if (response.data.connected) {\r\n            self.setState({\r\n              currentAddLogin: null,\r\n              currentAddBroker: null,\r\n              currentAddAlias: null,\r\n            });\r\n            clearInterval(intervalSet);\r\n            clearInterval(timerWaitInterval);\r\n            self.setState({ timerShow: false });\r\n\r\n            timerWait = 100;\r\n            // self.setState({ tryAgainConnection: false });\r\n            self.setState({ loginForm: false });\r\n            self.handleClose();\r\n            self.fectheAllAccount();\r\n            // swal({\r\n            //     text: \"Connected\",\r\n            //     timer: 2000,\r\n            //     button: false\r\n            // })\r\n          }\r\n        } else {\r\n        }\r\n      });\r\n  };\r\n\r\n  setIntervalCustom = () => {\r\n    let self = this;\r\n    var name = \"Authorization Process Failed\";\r\n    var content = document.createElement(\"div\");\r\n    content.innerHTML = \" <strong>\" + name + \"</strong>\";\r\n\r\n    timerWaitInterval = setInterval(function () {\r\n      timerWait--;\r\n      if (timerWait <= 0) {\r\n        self.setState({\r\n          currentAddLogin: null,\r\n          currentAddBroker: null,\r\n          currentAddAlias: null,\r\n        });\r\n        clearInterval(intervalSet);\r\n        clearInterval(timerWaitInterval);\r\n        self.setState({ timerShow: false });\r\n        self.setState({ loginForm: false });\r\n        self.setState({ closebtn: true });\r\n        timerWait = 100;\r\n        swal({\r\n          content: content,\r\n          timer: 2000,\r\n          button: false,\r\n        });\r\n      } else {\r\n        self.setState({ timerShow: true });\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const userdetail = {\r\n      login: this.state.login,\r\n      password: this.state.password,\r\n      broker: this.state.broker,\r\n      alias: this.state.alias,\r\n      is_server: this.state.is_server ? 1 : 0,\r\n    };\r\n    if (this.state.login == \"\") {\r\n      this.setState({ error: \"login\" });\r\n    } else if (this.state.password == \"\") {\r\n      this.setState({ error: \"password\" });\r\n    } else if (this.state.broker == \"\") {\r\n      this.setState({ error: \"broker\" });\r\n    } else {\r\n      this.setState({ error: \"\" });\r\n    }\r\n    if (\r\n      this.state.login !== \"\" &&\r\n      this.state.password !== \"\" &&\r\n      this.state.broker !== \"\"\r\n    ) {\r\n      // {\r\n      //     swal({\r\n      //         text: \"User Already Connected\",\r\n      //         timer: 2000,\r\n      //         button: false\r\n      //     })\r\n      // }\r\n      let self = this;\r\n      self.setState({ closebtn: false });\r\n      axios\r\n        .post(config.baseurl + \"/users/addUser\", userdetail)\r\n        .then(function (response) {\r\n          if (response.data.status === true) {\r\n            self.setIntervalCustom();\r\n            self.fectheAllAccount();\r\n            self.setState({\r\n              currentAddLogin: userdetail.login,\r\n              currentAddBroker: userdetail.broker,\r\n              currentAddAlias: userdetail.alias,\r\n            });\r\n            intervalSet = setInterval(function () {\r\n              self.checkUserConnected(userdetail.login, userdetail.broker);\r\n            }, 5000);\r\n          }\r\n          if (response.data.status == 202) {\r\n            swal({\r\n              text: \"User doesn't exist\",\r\n              timer: 2000,\r\n              button: false,\r\n            });\r\n          }\r\n          if (response.data.status == \"500\") {\r\n            swal({\r\n              text: \"User Already Connected!\",\r\n              timer: 2000,\r\n              button: false,\r\n            });\r\n            self.setState({ closebtn: true });\r\n          } else if (response.status == 201) {\r\n            swal({\r\n              title: \"Done!\",\r\n              text: response.data,\r\n              // icon: \"{response.status == 200 ? 'warning ':'success'}\",\r\n              timer: 2000,\r\n              button: false,\r\n            });\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          self.handleClose();\r\n        });\r\n\r\n      /////////////////// redirect to dashboard\r\n      // login(user).then(res => {\r\n      //     if (res) {\r\n      //         this.props.history.push(`\\profile`)\r\n      //     }\r\n      // })\r\n    }\r\n  }\r\n  onUpdate(e) {\r\n    e.preventDefault();\r\n    const userdetail = {\r\n      id: this.state.id,\r\n      user: this.state.edituser,\r\n      broker: this.state.editserver,\r\n      alias: this.state.editalias,\r\n      is_server: this.state.is_server ? 1 : 0,\r\n    };\r\n    let self = this;\r\n    axios\r\n      .post(config.baseurl + \"/users/updateuser\", userdetail)\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          // self.setState({ accountlist: response.data.rows })\r\n          self.fectheAllAccount();\r\n          self.handleCloseEdit();\r\n        }\r\n      })\r\n      .catch(function (error) {});\r\n  }\r\n  // checkValidUser = ()=> {\r\n  //     console.log(this.state,'loginnnnnnnnnnnnnnnnnnnnnnnn')\r\n  //     const userdetail = {\r\n  //         login: this.state.login,\r\n  //         password: this.state.password,\r\n  //         broker: this.state.broker,\r\n  //         alias: this.state.alias\r\n  //     }\r\n  //     axios.get(config.baseurl + '/accounts/matchUser',userdetail)\r\n  //     .then(function (response) {\r\n\r\n  //         if (response.status == 200) {\r\n  //             // alert(response.data)\r\n  //             swal({\r\n  //                 title: \"Done!\",\r\n  //                 text: response.data,\r\n  //                 // icon: \"{response.status == 200 ? 'warning ':'success'}\",\r\n  //                 timer: 2000,\r\n  //                 button: false\r\n  //             })\r\n\r\n  //         }\r\n  //         // console.log(response);\r\n  //     })\r\n  //     .catch(function (error) {\r\n  //         console.log(error);\r\n  //     });\r\n  // }\r\n  toogle = () => {\r\n    this.setState({ loginForm: !this.state.loginForm });\r\n    this.setState({\r\n      login: \"\",\r\n      password: \"\",\r\n      broker: \"\",\r\n      alias: \"\",\r\n      is_server: false,\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ loginForm: false });\r\n  };\r\n  handleCloseEdit = () => {\r\n    this.setState({ editForm: false });\r\n  };\r\n  handleCloseDetail = () => {\r\n    this.setState({ detailForm: false });\r\n  };\r\n  handleShow = () => {\r\n    this.setState({ setShow: true });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fectheAllAccount();\r\n  }\r\n  createTr = () => {\r\n    return (\r\n      this.state.accountlist.length > 0 &&\r\n      this.state.accountlist.map((item, index) => {\r\n        return (\r\n          <tr key={index}>\r\n            <th scope=\"row\">{index + 1}</th>\r\n            <td>{item.login}</td>\r\n            <td>{item.broker}</td>\r\n            <td>{item.alias}</td>\r\n            <td style={{ fontWeight: 600 }}>\r\n              {item.launched == 1 ? \"Connected\" : \"Disconnected\"}\r\n            </td>\r\n            <td>\r\n              <a href=\"\" onClick={(e) => this.viewFilter(e, item)}>\r\n                <i className=\"fa fa-eye facolor\" aria-hidden=\"true\"></i>\r\n              </a>\r\n              <a href=\"\" onClick={(e) => this.editFilter(e, item)}>\r\n                <i\r\n                  className=\"fa fa-pencil-square-o facolor\"\r\n                  aria-hidden=\"true\"\r\n                ></i>\r\n              </a>\r\n              {/* <a href=\"\" onClick={(e)=> this.deleteFilter(e,item)}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></a> */}\r\n            </td>\r\n          </tr>\r\n        );\r\n      })\r\n    );\r\n  };\r\n  editFilter(e, data) {\r\n    e.preventDefault();\r\n    this.setState({\r\n      editForm: true,\r\n      editData: data,\r\n      id: data.id,\r\n      edituser: data.login,\r\n      editserver: data.broker,\r\n      editalias: data.alias,\r\n    });\r\n  }\r\n  editAlias(e) {\r\n    this.setState({ editalias: e.target.value });\r\n  }\r\n  viewFilter(e, data) {\r\n    e.preventDefault();\r\n    this.setState({\r\n      detailForm: true,\r\n      edituser: data.login,\r\n      editserver: data.broker,\r\n      editalias: data.alias,\r\n      editstatus: data.status,\r\n    });\r\n  }\r\n  render() {\r\n    let val = this.state.page\r\n    return (\r\n      <div className=\"content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12} sm={6}>\r\n              <div className=\"terminal-box\">\r\n                <span className=\"terminal-text\">Terminal Accounts</span>\r\n                {/* <div style={{ padding: '20px' }}>\r\n                                    <a\r\n                                        onClick={() => this.deleteThisGoal()}\r\n                                        className='btn btn-danger'\r\n                                    >\r\n                                        <i className=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete Goal\r\n                                     </a>\r\n                                    {this.state.alert}\r\n                                </div> */}\r\n              </div>\r\n              <button className=\"pull-right add-button\" onClick={this.toogle}>\r\n                Add New\r\n              </button>\r\n\r\n              {this.state.loginForm && (\r\n                <Modal\r\n                  show={this.state.show}\r\n                  onHide={\r\n                    this.state.closebtn\r\n                      ? this.handleClose\r\n                      : () => console.log(\"error\")\r\n                  }\r\n                >\r\n                  {/* <Modal.Header closeButton>\r\n                                        <Modal.Title>Log In</Modal.Title>\r\n                                    </Modal.Header> */}\r\n                  <Modal.Body>\r\n                    <div className=\"form-box\">\r\n                      <Modal.Header\r\n                        closeButton={this.state.closebtn ? true : false}\r\n                      >\r\n                        <Modal.Title className=\"text-center\">\r\n                          <b>Log In</b>\r\n                        </Modal.Title>\r\n                      </Modal.Header>\r\n                      <form\r\n                        style={{ marginTop: \"20px\" }}\r\n                        onSubmit={this.onSubmit}\r\n                      >\r\n                        <label>User Name</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"Itext labelSet \"\r\n                          placeholder=\"Enter Username\"\r\n                          name=\"login\"\r\n                          value={this.state.login}\r\n                          onChange={this.onChange}\r\n                          disabled={this.state.currentAddLogin ? true : false}\r\n                          // onKeyUp={this.checkValidUser}\r\n                        ></input>\r\n\r\n                        {this.state.error == \"login\" && (\r\n                          <span style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                            Please enter Username{\" \"}\r\n                          </span>\r\n                        )}\r\n\r\n                        {this.state.error == \"alphabet\" && (\r\n                          <span style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                            \"Invalid format. login should contain only digits.\"\r\n                          </span>\r\n                        )}\r\n                        <br></br>\r\n                        <label className=\"labeAdjust\">Password</label>\r\n                        <input\r\n                          className=\"Itext labelSet\"\r\n                          placeholder=\"Password\"\r\n                          name=\"password\"\r\n                          type=\"password\"\r\n                          value={this.state.password}\r\n                          onChange={this.onChange}\r\n                          disabled={this.state.currentAddLogin ? true : false}\r\n                        ></input>\r\n                        {this.state.error == \"password\" && (\r\n                          <span style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                            Please enter Password{\" \"}\r\n                          </span>\r\n                        )}\r\n                        <br></br>\r\n                        <label className=\"labeAdjust\">Server</label>\r\n                        <input\r\n                          className=\"Itext labelSet\"\r\n                          name=\"broker\"\r\n                          placeholder=\"Server\"\r\n                          value={this.state.broker}\r\n                          onChange={this.onChange}\r\n                          disabled={this.state.currentAddBroker ? true : false}\r\n                        ></input>\r\n                        {this.state.error == \"broker\" && (\r\n                          <span style={{ color: \"red\", fontSize: \"13px\" }}>\r\n                            Please enter Server{\" \"}\r\n                          </span>\r\n                        )}\r\n                        <br></br>\r\n                        <label className=\"labeAdjust\">Alias</label>\r\n                        <input\r\n                          className=\"Itext labelSet\"\r\n                          placeholder=\"Alias\"\r\n                          value={this.state.alias}\r\n                          onChange={this.onChange}\r\n                          name=\"alias\"\r\n                          disabled={this.state.currentAddAlias ? true : false}\r\n                        ></input>\r\n                        <br></br>\r\n                        <div className=\"chceckbox\">\r\n                          <label className=\"checkbox-inline\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              defaultChecked={this.state.is_server}\r\n                              onChange={(e) => this.changeServer(e)}\r\n                            />\r\n                            <b>Is Server</b>\r\n                          </label>\r\n                        </div>\r\n                        {this.state.timerShow && (\r\n                          <p>\r\n                            Connecting to server... {timerWait} seconds remains\r\n                          </p>\r\n                        )}\r\n                        <div className=\" topadjust clearfix\">\r\n                          {/* {this.state.tryAgainConnection === false ? */}\r\n                          {/* ( */}\r\n                          {this.state.timerShow == false && (\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"save\"\r\n                              className={\r\n                                !this.state.login ||\r\n                                !this.state.password ||\r\n                                !this.state.broker\r\n                                  ? \"loginButton\"\r\n                                  : \"loginButton save2 save1\"\r\n                              }\r\n                            >\r\n                              Submit\r\n                            </button>\r\n                          )}\r\n                          {/* ) */}\r\n                          {/* //     :\r\n                                                    //     (this.state.timerShow == false && <div ></div>)\r\n                                                    // } */}\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </Modal.Body>\r\n                  {/* <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                                            Close\r\n                                  </Button>\r\n                                        \r\n                                    </Modal.Footer> */}\r\n                </Modal>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n          <div style={{ background: \"#ffffff\" }}>\r\n            <Row>\r\n              <Col md={12}>\r\n                <div style={{ padding: \"10px\" }}>\r\n                  <table className=\"table table-striped table-bordered\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th scope=\"col\">Sr.No.</th>\r\n                        <th scope=\"col\">User Name</th>\r\n                        <th scope=\"col\">Server</th>\r\n                        <th scope=\"col\">Alias</th>\r\n                        <th scope=\"col\">Status</th>\r\n                        <th scope=\"col\">Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {/* {this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => { */}\r\n                      {/* // console.log(\"hhhhhhhhhhh\") */}\r\n                      {this.createTr()}\r\n                      {/* })} */}\r\n                      {/* <tr>\r\n                                                <th scope=\"row\">2</th>\r\n                                                <td>Jacob</td>\r\n                                                <td>Thornton</td>\r\n                                                <td>5.1.2.9</td>\r\n                                                <td>Connected</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th scope=\"row\">3</th>\r\n                                                <td>Larry</td>\r\n                                                <td>the Bird</td>\r\n                                                <td>ab@123</td>\r\n                                                <td>Connected</td>\r\n                                            </tr> */}\r\n                    </tbody>\r\n                  </table>\r\n                  <ReactPaginate\r\n                    previousLabel={\"prev\"}\r\n                    nextLabel={\"next\"}\r\n                    breakLabel={\"...\"}\r\n                    pageCount={this.state.pages}\r\n                    marginPagesDisplayed={9}\r\n                    pageRangeDisplayed={9}\r\n                    onPageChange={(e)=>this.handlePageClick(e)}\r\n                    containerClassName={\"pagination\"}\r\n                    subContainerClassName={\"pages pagination\"}\r\n                    activeClassName={\"active\"}\r\n                    />\r\n                </div>\r\n              </Col>\r\n              <div className=\"centerbtn\"></div>\r\n            </Row>\r\n          </div>\r\n        </Grid>\r\n\r\n        {this.state.editForm && (\r\n          <Modal show={this.state.show} onHide={this.handleCloseEdit}>\r\n            {/* <Modal.Header closeButton>\r\n                                        <Modal.Title>Log In</Modal.Title>\r\n                                    </Modal.Header> */}\r\n            <Modal.Body>\r\n              <div className=\"form-box\">\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title className=\"text-center\">\r\n                    <b>Edit</b>\r\n                  </Modal.Title>\r\n                </Modal.Header>\r\n                <form style={{ marginTop: \"20px\" }} onSubmit={this.onUpdate}>\r\n                  <label>User</label>\r\n                  <input\r\n                    className=\"Itext\"\r\n                    disabled\r\n                    name=\"broker\"\r\n                    placeholder=\"Server\"\r\n                    value={this.state.edituser}\r\n                  ></input>\r\n\r\n                  <label>Server</label>\r\n                  <input\r\n                    className=\"Itext\"\r\n                    disabled\r\n                    name=\"broker\"\r\n                    placeholder=\"Server\"\r\n                    value={this.state.editserver}\r\n                  ></input>\r\n                  <label>Alias</label>\r\n                  <input\r\n                    className=\"Itext\"\r\n                    placeholder=\"Alias\"\r\n                    value={this.state.editalias}\r\n                    name=\"alias\"\r\n                    onChange={(e) => this.editAlias(e)}\r\n                  ></input>\r\n                  <div className=\"clearfix\">\r\n                    <button type=\"submit\" className=\"save\">\r\n                      Update\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                                            Close\r\n                                  </Button>\r\n                                        \r\n                                    </Modal.Footer> */}\r\n          </Modal>\r\n        )}\r\n\r\n        {this.state.detailForm && (\r\n          <Modal show={this.state.show} onHide={this.handleCloseDetail}>\r\n            {/* <Modal.Header closeButton>\r\n                                        <Modal.Title>Log In</Modal.Title>\r\n                                    </Modal.Header> */}\r\n            <Modal.Body>\r\n              <div className=\"form-box\">\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title className=\"text-center\">\r\n                    <b>Details</b>\r\n                  </Modal.Title>\r\n                </Modal.Header>\r\n                <div className=\"detail_div\">\r\n                  <table>\r\n                    <tr>\r\n                      <td>\r\n                        <label>User Name</label>\r\n                      </td>\r\n                      <td>\r\n                        <label>{this.state.edituser}</label>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <label>Server</label>\r\n                      </td>\r\n                      <td>\r\n                        <label>{this.state.editserver}</label>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <label>Alias</label>\r\n                      </td>\r\n                      <td>\r\n                        <label>{this.state.editalias}</label>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <label>Status</label>\r\n                      </td>\r\n                      <td>\r\n                        <label>\r\n                          {this.state.editstatus == 1\r\n                            ? \"Connected\"\r\n                            : \"Disconnected\"}\r\n                        </label>\r\n                      </td>\r\n                    </tr>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </Modal.Body>\r\n          </Modal>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Innerlogin;\r\n","import React, { Component } from 'react';\r\nimport { Collapse } from 'reactstrap';\r\nimport Select from 'react-select';\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\n// import Data from './Data';\r\nimport NumberFormat from 'react-number-format';\r\nimport Closeposition from 'views/Closeposition';\r\nimport Openposition from 'views/Openposition';\r\n\r\n// import config from '../constant/config.js';\r\nimport config from '../constant/config.js';\r\nimport myInitObject from '../api'\r\nconst axios = require('axios');\r\n\r\n// import Card from \"components/Card/Card.jsx\";\r\n// import { thArray, tdArray } from \"variables/Variables.jsx\";\r\n\r\nclass TableList extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      isOpen2: false,\r\n      allSymbols: [],\r\n      selectedOption: null,\r\n      allHistoryRecord: [],\r\n      allOpenRecord: [],\r\n      fromHistoryOrderInfo: [],\r\n      toHistoryOrderInfo: [],\r\n      commissionHistoryOrderInfo: [],\r\n      fromOpenOrderInfo: [],\r\n      toOpenOrderInfo: [],\r\n      filterlist: [],\r\n      allSymbols: [],\r\n      symbolsObj: [],\r\n      activeProfileName: ''\r\n    }\r\n\r\n  }\r\n  // toggle = () => {\r\n  //   this.setState({ isOpen: !this.state.isOpen })\r\n  // }\r\n  // componentWillMount() {\r\n  //   let self = this;\r\n  // axios.get(config.baseurl + '/accounts/fetchAllSymbol')\r\n  // .then(function (response) {\r\n  //   if (response.status == 200) {\r\n  //     self.setState({ allSymbols: response.data.rows })\r\n  //   }\r\n  // })\r\n\r\n  // axios.get(config.baseurl + '/filter/fetchfilterdata')\r\n  // .then(function (response) {\r\n  //   if (response.status == 200) {\r\n  //     self.setState({ filterlist: response.data.rows })\r\n  //   }\r\n  // })\r\n\r\n  // axios.get(config.baseurl + '/filter/fetchActivefilterdata')\r\n  // .then(function (response) {\r\n  //   if (response.status == 200) {\r\n  //     if(response.data.rows && response.data.rows.length>0){\r\n  //       // let symbolsObj = (response.data.rows[0].symbols).map(data => { return ({value:data, label:data})})\r\n  //         self.setState({ filterlist: response.data.rows, allSymbols: response.data.rows[0].symbols, \r\n  //         // selectedOption:symbolsObj\r\n  //        })\r\n  //     }\r\n  //   }\r\n  // });\r\n  // }\r\n\r\n  componentDidMount() {\r\n    setInterval(() => {\r\n      if((myInitObject.responsHT &&\r\n        myInitObject.responsOT &&\r\n        myInitObject.responsAC ) === undefined){\r\n        // console.log('no data');\r\n      }else{ \r\n        this.setState({\r\n          //history trade\r\n          allHistoryRecord: myInitObject.fetchAllHistoryTrade.rows,\r\n          fromHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.fromHistoryOrderInfo,\r\n          toHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.toHistoryOrderInfo,\r\n          //open trade\r\n          allOpenRecord: myInitObject.fetchAllOpenTrade.rows,\r\n          fromOpenOrderInfo: myInitObject.fetchAllOpenTrade.fromOpenOrderInfo,\r\n          toOpenOrderInfo: myInitObject.fetchAllOpenTrade.toOpenOrderInfo,\r\n          //active filter data\r\n          filterlist: myInitObject.fetchActivefilterdata.rows,\r\n          activeProfileName: myInitObject.fetchActivefilterdata.rows[0].profile_name,\r\n        },() =>{\r\n          this.setState({ errorMassege:this.state.filterlist.length == 0 ?  true : false,})\r\n        })\r\n      }}, 1000)\r\n    // let self = this;\r\n    // axios.get(config.baseurl + '/filter/fetchActivefilterdata')\r\n    //   .then(function (response) {\r\n    //     if (response.status == 200) {\r\n    //       console.log(response, \"respp----------------->\")\r\n    //       self.setState({ filterlist: response.data.rows, })\r\n    //       if (self.state.filterlist.length == 0) {\r\n    //         self.setState({ errorMassege: true, })\r\n    //       }\r\n    //       else {\r\n    //         self.setState({ activeProfileName: response.data.rows[0].profile_name })\r\n    //       }\r\n    //     }\r\n    //   });\r\n    // axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\r\n    //   .then(function (response) {\r\n    //     // console.log(response.data, 'response.data his')\r\n    //     if (response.status == 200) {\r\n    //       // self.setState({ allHistoryRecord: response.data.rows })\r\n    //       self.setState({\r\n    //         allHistoryRecord: response.data.rows,\r\n    //         fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,\r\n    //         toHistoryOrderInfo: response.data.toHistoryOrderInfo,\r\n    //         commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\r\n    //       })\r\n    //     }\r\n    //   })\r\n    // // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\r\n    // // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\r\n    // axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\r\n    //   .then(function (response) {\r\n    //     if (response.status == 200) {\r\n\r\n    //       // self.setState({ allOpenRecord: response.data.rows })\r\n    //       self.setState({\r\n    //         allOpenRecord: response.data.rows,\r\n    //         fromOpenOrderInfo: response.data.fromOpenOrderInfo,\r\n    //         toOpenOrderInfo: response.data.toOpenOrderInfo\r\n    //       })\r\n    //     }\r\n    //   })\r\n  }\r\n\r\n\r\n\r\n\r\n  fetchDataAccordingSymbols = (symbol) => {\r\n    let self = this;\r\n    let { startdateFrom, startdateTo, enddateFrom, enddateTo, to_account_id, from_account_id } = this.state.filterlist[0];\r\n\r\n    let postData = { \"to_account_id\": to_account_id, \"from_account_id\": from_account_id, \"startdateFrom\": startdateFrom, \"startdateTo\": startdateTo, \"enddateFrom\": enddateFrom, \"enddateTo\": enddateTo, \"symbol\": symbol }\r\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolHistory', {'symbol':symbol})\r\n\r\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolHistory', postData)\r\n    axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\r\n      .then(function (response) {\r\n        // console.log(response.data, 'response.data his')\r\n        if (response.status == 200) {\r\n          // self.setState({ allHistoryRecord: response.data.rows })\r\n          self.setState({\r\n            allHistoryRecord: response.data.rows,\r\n            fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,\r\n            toHistoryOrderInfo: response.data.toHistoryOrderInfo,\r\n            commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\r\n\r\n          })\r\n        }\r\n      })\r\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\r\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\r\n    axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          // console.log(response.data, 'response.data open')\r\n\r\n          // self.setState({ allOpenRecord: response.data.rows })\r\n          self.setState({\r\n            allOpenRecord: response.data.rows,\r\n            fromOpenOrderInfo: response.data.fromOpenOrderInfo,\r\n            toOpenOrderInfo: response.data.toOpenOrderInfo\r\n          })\r\n        }\r\n      })\r\n  }\r\n\r\n  handleChange = selectedOption => {\r\n    this.setState({ selectedOption });\r\n    this.fetchDataAccordingSymbols(selectedOption.value);\r\n  };\r\n\r\n  renderSymbols = () => {\r\n    const { selectedOption, allSymbols } = this.state;\r\n    // let options = allSymbols.map(data => {\r\n    //   return {value:data.name, label:data.name};\r\n    // })\r\n    let options = allSymbols.map(data => {\r\n      return { value: data, label: data };\r\n    });\r\n\r\n    return (\r\n      <Select\r\n        placeholder=\"Select Symbol...\"\r\n        className=\"S-text\"\r\n        // isMulti\r\n        value={selectedOption}\r\n        onChange={this.handleChange}\r\n        options={options}\r\n      />\r\n    )\r\n  }\r\n  // toggle2 = () => {\r\n  //   this.setState({ isOpen2: !this.state.isOpen2 })\r\n  // };\r\n  render() {\r\n    const { activeProfileName, allHistoryRecord, allOpenRecord, selectedOption, toOpenOrderInfo, fromOpenOrderInfo, fromHistoryOrderInfo, commissionHistoryOrderInfo, toHistoryOrderInfo } = this.state;\r\n    //   const sumOfOpenTotal = allOpenRecord.reduce((current, data) => {\r\n    //     return (Math.floor(data.commission + data.swap + data.profit+ current));\r\n    // }, 0);\r\n\r\n    //   const sumOfHistoryTotal = allHistoryRecord.reduce((current, data) => {\r\n    //     return (data.profit + current);\r\n    // }, 0);\r\n    let uniqueSymbols = \"\";\r\n    if (allOpenRecord && Object.entries(allOpenRecord).length > 0) {\r\n      let fromSymbols = JSON.parse(allOpenRecord.from_symbols);\r\n      // fromSymbols = (fromSymbols).map(data => data).join(', ');\r\n      let toSymbols = JSON.parse(allOpenRecord.to_symbols);\r\n      let combineSymbols = fromSymbols.concat(toSymbols);\r\n      uniqueSymbols = combineSymbols.filter((item, i, ar) => ar.indexOf(item) === i);\r\n      uniqueSymbols = (uniqueSymbols).map(data => data).join(', ')\r\n    }\r\n    let fromsum = 0;\r\n    let tosum = 0;\r\n    // if(fromHistoryOrderInfo && commissionHistoryOrderInfo && fromHistoryOrderInfo.length>0){\r\n    if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\r\n      fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\r\n    }\r\n\r\n    if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\r\n      tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\r\n    }\r\n\r\n    let sumOfHistoryTotal = tosum + fromsum;\r\n\r\n    let openfromsum = 0;\r\n    let opentosum = 0;\r\n    if ((fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total != null)) {\r\n      // if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\r\n      //   openfromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\r\n      // }else{\r\n      openfromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\r\n\r\n    }\r\n    if ((toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total != null)) {\r\n      // if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\r\n      //   opentosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit+ toOpenOrderInfo[0].swap);\r\n      // }\r\n\r\n      // else{\r\n      //   opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n      // }\r\n      opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n    }\r\n\r\n    let sumOfOpenTotal = opentosum + openfromsum;\r\n\r\n    //   console.log(opentosum, 'opentosum')\r\n    //   console.log(openfromsum, 'openfromsum')\r\n    //  console.log(sumOfHistoryTotal, \"sumOfHistoryTotal------\");\r\n    //  console.log(sumOfOpenTotal, \"sumOfOpenTotal-----\");\r\n    //  console.log(allOpenRecord, 'allOpenRecord')\r\n\r\n\r\n\r\n    return (\r\n      <div>\r\n        <div class=\"shadoremove\">\r\n          {/* <div className=\"symbol-box\"> */}\r\n          {/* <span className=\"S-text\">EURUSD</span> */}\r\n          {/* <div style={{ borderBottom: '2px solid grey' }}>\r\n            {this.renderSymbols()}\r\n\r\n          </div> */}\r\n          {/* <div style={{ margin: '20px 0px' }}>\r\n            <span className=\"p-text\">Open Positions</span>\r\n            <span className=\"icon-style\" onClick={this.toggle}>\r\n              <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\r\n            </span>\r\n          </div>\r\n          <div>\r\n\r\n            <Collapse isOpen={this.state.isOpen}>\r\n              <Row>\r\n                {Data.tablePage.items.map((item, index) =>\r\n                  <Col md={6} key={index}>\r\n                    <div className=\"card\">\r\n                      <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\r\n                      </div>\r\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                        <table className=\"table\">\r\n                          <tbody>\r\n                            <tr><td>{item.lot} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.commission} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.swap} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                            <tr><td>{item.total} </td>\r\n                              <td className=\"td-actions text-right\"> {item.price}</td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                )}\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <div>\r\n                      <div className=\"total-box\">\r\n                        <span className=\"text\">Sum of open position</span>\r\n                        <span className=\"text\" style={{ float: 'right' }}>$111111</span>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Row>\r\n            </Collapse>\r\n          </div> */}\r\n          {/* closed position */}\r\n\r\n          <Openposition\r\n            allOpenRecord={allOpenRecord}\r\n            toOpenOrderInfo={toOpenOrderInfo}\r\n            fromOpenOrderInfo={fromOpenOrderInfo}\r\n          />\r\n          <Closeposition\r\n            allHistoryRecord={allHistoryRecord}\r\n            fromHistoryOrderInfo={fromHistoryOrderInfo}\r\n            commissionHistoryOrderInfo={commissionHistoryOrderInfo}\r\n            toHistoryOrderInfo={toHistoryOrderInfo}\r\n          />\r\n          {/* <Row>\r\n\r\n            <Col md={12} sm={6}>\r\n              <div className={sumOfHistoryTotal + sumOfOpenTotal >= 0 ? \"summary-box\" : \"summary-box-red\"}>\r\n\r\n\r\n                {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\r\n          {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\r\n                <span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\r\n\r\n          {/* <Col md={12} sm={12}>\r\n                  <div className=\"summary-text text-center\" style={{ fontWeight: 600, color: \"#797979\" }}>Unrealized & Realized P/L ({activeProfileName}) {allHistoryRecord.history_info !== 0 && (<span> + Commission</span>)} </div>\r\n                </Col>\r\n                <Col md={12} sm={12}>\r\n                  <div className=\"text-center\" style={{ fontWeight: 'bold', fontSize: \"18px\" }}>$ {' '}\r\n                    <NumberFormat value={allHistoryRecord.history_info !== undefined ? sumOfHistoryTotal + sumOfOpenTotal + allHistoryRecord.history_info : sumOfHistoryTotal + sumOfOpenTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} /> */}\r\n\r\n\r\n          {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\r\n\r\n          {/* </div>\r\n                </Col>\r\n\r\n                <div className=\"clearfix\"></div>\r\n              </div>\r\n            </Col>\r\n          </Row> */}\r\n          {/* </div> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default TableList;\r\n\r\n","import React, { Component } from \"react\";\r\n// import ChartistGraph from \"react-chartist\";\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\nimport TableList from '../views/TableList';\r\n// import { Card } from \"components/Card/Card.jsx\";\r\n// import { StatsCard } from \"components/StatsCard/StatsCard.jsx\";\r\n// import { Tasks } from \"components/Tasks/Tasks.jsx\";\r\nimport NumberFormat from 'react-number-format';\r\nimport ReactLoading from \"react-loading\";\r\nimport Loader from 'react-loader-spinner'\r\n\r\nimport Data from './Data';\r\nimport Moment from 'react-moment';\r\nimport config from '../constant/config.js';\r\n// import {DatatablePage} from './DatatablePage';\r\n\r\nimport {api} from '../api'\r\nimport myInitObject from '../api'\r\nconst axios = require('axios');\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      details: [],\r\n      accountlist: [],\r\n      filterlist: [],\r\n      errorMassege: false,\r\n      error: '',\r\n      dateTime: '',\r\n      fromAccounts: '',\r\n      fromSymbol: '',\r\n      toAccounts: '',\r\n      toSymbol: '',\r\n      fromOpenOrderInfos: '',\r\n      toOpenOrderInfos: '',\r\n      total: '',\r\n      totalTo: '',\r\n      blockloader: true,\r\n      activeProfileName: '',\r\n      autoClose: ' ',\r\n      //\r\n\r\n\r\n      allHistoryRecord: [],\r\n      allOpenRecord: [],\r\n      fromHistoryOrderInfo: [],\r\n      toHistoryOrderInfo: [],\r\n      commissionHistoryOrderInfo: [],\r\n      fromOpenOrderInfo: [],\r\n      toOpenOrderInfo: [],\r\n      loading: true,\r\n      //\r\n\r\n\r\n    }\r\n  }\r\n  componentWillMount() {\r\n    // this.fetchCloseAndOpenPositionTotal();\r\n    // this.getAllAccounts();\r\n    // this.fetchActivefilterData();\r\n    // this.fetchAllOpenTrade();\r\n    // this.fetchStatusData();\r\n    // fetchLastUpdatedTime()\r\n    setInterval(() => {\r\n    if((myInitObject.responsHT &&\r\n      myInitObject.responsOT &&\r\n      myInitObject.responsAC &&\r\n      myInitObject.responsAF &&\r\n      myInitObject.responsLUT &&\r\n      myInitObject.responsSD) === undefined){\r\n      console.log('no data');\r\n    }else{\r\n      this.setState({\r\n        //history trade\r\n        allHistoryRecord: myInitObject.fetchAllHistoryTrade.rows,\r\n        fromHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.fromHistoryOrderInfo,\r\n        toHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.toHistoryOrderInfo,\r\n        //open trade\r\n        allOpenRecord: myInitObject.fetchAllOpenTrade.rows,\r\n        fromOpenOrderInfo: myInitObject.fetchAllOpenTrade.fromOpenOrderInfo,\r\n        toOpenOrderInfo: myInitObject.fetchAllOpenTrade.toOpenOrderInfo,\r\n        //all Accounts\r\n        accountlist: myInitObject.fetchAllAccounts.rows,\r\n        //active filter data\r\n        filterlist: myInitObject.fetchActivefilterdata.rows,\r\n       \r\n        activeProfileName: myInitObject.fetchActivefilterdata.rows[0].profile_name,\r\n        autoClose: myInitObject.fetchActivefilterdata.rows[0].auto_close !== 0 ? 'ON' : 'OFF',     \r\n        //last updated time\r\n        dateTime: myInitObject.fetchLastUpdatedTime.filteredInfoTime,\r\n        // status data\r\n        loading: false,\r\n        fromAccounts: myInitObject.fetchStatusData.fromAccounts,\r\n        fromSymbol: myInitObject.fetchStatusData.fromSymbol,\r\n        toAccounts: myInitObject.fetchStatusData.toAccounts,\r\n        toSymbol: myInitObject.fetchStatusData.toSymbol,\r\n        fromOpenOrderInfos: myInitObject.fetchStatusData.fromOpenOrderInfos[0],\r\n        blockloader: myInitObject.fetchStatusData.fromOpenOrderInfos.length > 0 ? false : true,\r\n        total: myInitObject.fetchStatusData.fromOpenOrderInfos.length > 0 && myInitObject.fetchStatusData.fromOpenOrderInfos[0].order_type == 0 \r\n        ? myInitObject.fetchStatusData.fromSymbol?.contract_size * (myInitObject.fetchStatusData.fromOpenOrderInfos[0]?.lots)\r\n         : myInitObject.fetchStatusData.fromSymbol?.contract_size * -(myInitObject.fetchStatusData.fromOpenOrderInfos[0]?.lots),\r\n        toOpenOrderInfos: myInitObject.fetchStatusData.toOpenOrderInfos[0],\r\n        totalTo: myInitObject.fetchStatusData.toOpenOrderInfos.length > 0 && myInitObject.fetchStatusData.toOpenOrderInfos[0].order_type == 0 \r\n        ? myInitObject.fetchStatusData.toSymbol?.contract_size * (myInitObject.fetchStatusData.toOpenOrderInfos[0]?.lots) \r\n         : myInitObject.fetchStatusData.toSymbol?.contract_size * -(myInitObject.fetchStatusData.toOpenOrderInfos[0]?.lots),\r\n      \r\n        },() =>{\r\n          this.setState({ errorMassege:this.state.filterlist.length == 0 ?  true : false,})\r\n        })\r\n    }\r\n   },1000)\r\n\r\n  }\r\n\r\n  // fetchApiData = () => {\r\n\r\n  //   if(myInitObject.respons === true){\r\n  //     console.log(myInitObject)\r\n  //   }\r\n  // }\r\n  \r\n  // fetchCloseAndOpenPositionTotal = () => {\r\n  //   let self = this;\r\n  //   axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\r\n  //     .then(function (response) {\r\n  //       console.log(response.data, 'response.data his')\r\n  //       if (response.status == 200) {\r\n  //         self.setState({\r\n  //           allHistoryRecord: response.data.rows,\r\n  //           fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,\r\n  //           toHistoryOrderInfo: response.data.toHistoryOrderInfo,\r\n  //           commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\r\n  //         })\r\n  //       }\r\n  //     })\r\n\r\n  //   axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\r\n  //     .then(function (response) {\r\n  //       if (response.status == 200) {\r\n  //         self.setState({\r\n  //           allOpenRecord: response.data.rows,\r\n  //           fromOpenOrderInfo: response.data.fromOpenOrderInfo,\r\n  //           toOpenOrderInfo: response.data.toOpenOrderInfo\r\n  //         })\r\n  //       }\r\n  //     })\r\n  // }\r\n  createLegend(json) {\r\n    var legend = [];\r\n    for (var i = 0; i < json[\"names\"].length; i++) {\r\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\r\n      legend.push(<i className={type} key={i} />);\r\n      legend.push(\" \");\r\n      legend.push(json[\"names\"][i]);\r\n    }\r\n    return legend;\r\n  }\r\n\r\n  // getAllAccounts = () => {\r\n  //   let self = this;\r\n  //   axios.get(config.baseurl + '/accounts/fetchAllAccounts')\r\n  //     .then(function (response) {\r\n\r\n  //       if (response.status == 200) {\r\n  //         self.setState({ accountlist: response.data.rows })\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  // fetchActivefilterData = () => {\r\n  //   let self = this;\r\n  //   axios.get(config.baseurl + '/filter/fetchActivefilterdata')\r\n  //     .then(function (response) {\r\n  //       if (response.status == 200) {\r\n\r\n  //         self.setState({\r\n  //           filterlist: response.data.rows,\r\n\r\n  //         })\r\n  //         if (self.state.filterlist.length == 0) {\r\n\r\n  //           self.setState({ errorMassege: true })\r\n  //         }\r\n  //         else {\r\n  //           self.setState({\r\n\r\n  //             activeProfileName: response.data.rows[0].profile_name,\r\n  //             autoClose: response.data.rows[0].auto_close !== 0 ? 'ON' : 'OFF'\r\n  //           })\r\n  //         }\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  // fetchAllOpenTrade = () => {\r\n  //   let self = this;\r\n  //   axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\r\n  //     .then(function (response) {\r\n  //       if (response.status == 200) {\r\n  //         self.setState({ dateTime: response.data.filteredInfoTime })\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  // fetchStatusData = () => {\r\n  //   let self = this;\r\n  //   let tottal = 0;\r\n  //   axios.get(config.baseurl + '/accounts/fetchStatusData')\r\n  //     .then(function (response) {\r\n  //       console.log(response, \"active dat\")\r\n\r\n  //       if (response.status == 200) {\r\n  //         self.setState({ loading: false })\r\n\r\n  //         self.setState({ fromAccounts: response.data.fromAccounts })\r\n  //         self.setState({ fromSymbol: response.data.fromSymbol })\r\n  //         self.setState({ toAccounts: response.data.toAccounts })\r\n  //         self.setState({ toSymbol: response.data.toSymbol })\r\n  //         self.setState({ fromOpenOrderInfos: response.data.fromOpenOrderInfos[0] })\r\n  //         if (response.data.fromOpenOrderInfos.length > 0) {\r\n  //           self.setState({ blockloader: false })\r\n  //           if (response.data.fromOpenOrderInfos[0].order_type == 0) {\r\n  //             self.setState({ total: response.data.fromSymbol.contract_size * (response.data.fromOpenOrderInfos[0].lots) })\r\n  //           } else {\r\n  //             self.setState({ total: response.data.fromSymbol.contract_size * -(response.data.fromOpenOrderInfos[0].lots) })\r\n  //           }\r\n  //           console.log(response.data.fromSymbol.contract_size * -(response.data.fromOpenOrderInfos[0].lots), \"total\");\r\n  //           self.setState({ toOpenOrderInfos: response.data.toOpenOrderInfos[0] })\r\n  //         }\r\n  //         if (response.data.toOpenOrderInfos.length > 0) {\r\n  //           if (response.data.toOpenOrderInfos[0].order_type == 0) {\r\n  //             self.setState({ totalTo: response.data.toSymbol.contract_size * (response.data.toOpenOrderInfos[0].lots) })\r\n  //           } else {\r\n  //             self.setState({ totalTo: response.data.toSymbol.contract_size * -(response.data.toOpenOrderInfos[0].lots) })\r\n  //           }\r\n  //         }\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n\r\n\r\n\r\n  showData = (accountDetailValue) => {\r\n\r\n    return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\r\n      if (accountDetailValue === 'margin_level') {\r\n        return (\r\n          <>\r\n            <td className=\"tdClr2 tdClr boldText\" key={index}>\r\n              <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\r\n            </td>\r\n            <td className=\"tdClr2 boldText\" key={index}>\r\n              <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\r\n            </td>\r\n          </>\r\n        )\r\n      }\r\n      if (item.accountFromInfo.length > 0) {\r\n        return (\r\n          <>\r\n            <td className=\"tdClr2 tdClr boldText\" key={index}>\r\n              {item.accountFromInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''}  {' '}\r\n              <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n            </td>\r\n\r\n            <td className=\"tdClr2 boldText\" key={index}>\r\n              {item.accountToInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''} {' '}\r\n              <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n            </td>\r\n          </>\r\n        )\r\n\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  tableHeader = () => {\r\n\r\n    return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\r\n      return (\r\n        <>\r\n          <th key={index} className=\"bText colorDarkBlue text-center tdClr2 tdClr\">\r\n            <div className=\"colorDarkBlue\" >\r\n              {(item.accountFromInfo[0].alias != null) ? item.accountFromInfo[0].alias : '-'}\r\n            </div>\r\n            <span style={{ fontSize: 10 }}>\r\n              {item.accountFromInfo[0].login}\r\n            </span>\r\n\r\n          </th>\r\n          <th key={index} className=\"bText color2 text-center tdClr2\">\r\n            <div className=\"color2\" >\r\n              {(item.accountToInfo[0].alias != null) ? item.accountToInfo[0].alias : '-'}\r\n            </div>\r\n            <span style={{ fontSize: 10 }}>\r\n              {item.accountToInfo[0].login}\r\n            </span>\r\n\r\n          </th>\r\n        </>\r\n\r\n      )\r\n\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    // console.log(this.props, '================>');\r\n    const { allHistoryRecord, fromHistoryOrderInfo, toHistoryOrderInfo, commissionHistoryOrderInfo,\r\n      allOpenRecord, fromOpenOrderInfo, toOpenOrderInfo, } = this.state;\r\n\r\n\r\n    let fromsum = 0;\r\n    let tosum = 0;\r\n    let fromsum1 = 0;\r\n    let tosum1 = 0;\r\n\r\n\r\n    if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\r\n      fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\r\n    }\r\n    if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\r\n      tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\r\n    }\r\n\r\n    let sumOfTotal = tosum + fromsum;\r\n    if (fromOpenOrderInfo && fromOpenOrderInfo.length > 0) {\r\n\r\n      fromsum1 = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\r\n\r\n    }\r\n    if (toOpenOrderInfo && toOpenOrderInfo.length > 0) {\r\n\r\n      tosum1 = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n\r\n    }\r\n\r\n    let sumOfTotal1 = tosum1 + fromsum1;\r\n    const dateToFormat = new Date();\r\n    let FinalTotal = 0\r\n\r\n    return (\r\n\r\n      <div className=\"\">\r\n        {this.state.errorMassege === true &&\r\n          <div className=\"popup\">\r\n\r\n            <div className=\"card w-75 \">\r\n              <div className=\"card-body topmargin\">\r\n                <div className=\" card-text popuptext\" role=\"alert\">Please Select Filters To Continue...</div>\r\n              </div>\r\n            </div>\r\n          </div>}\r\n        <div className=\"content\">\r\n          {this.state.errorMassege !== true &&\r\n\r\n            <Grid fluid>\r\n\r\n              <Row>\r\n                <div className=\"lastUpdate\">\r\n                  <span> Last Updated :  </span>\r\n                  {this.state.dateTime}(UTC)  </div>\r\n                <Col md={12} sm={6}>\r\n                  <div className=\"terminal-box  terminal-head-box\">\r\n\r\n                    <span className=\"terminal-text\">Profile</span>\r\n                  </div>\r\n                  <Row >\r\n                    <Col lg={4} sm={4}>\r\n                      <div className=\"card-margin card card-stats\">\r\n                        <div className=\"content\">\r\n                          <Row className=\"row\">\r\n                            <Col xs={5}>\r\n                              <div style={{ fontSize: '3em' }} className=\"icon-big text-center icon-warning\">\r\n                                <i className=\"pe-7s-display1 text-warning\"></i>\r\n                              </div>\r\n                            </Col>\r\n                            <div className=\"col-xs-7\">\r\n                              <div className=\"numbers\"><p style={{\r\n                                textAlign: 'center',\r\n                                fontSize: '17px',\r\n                                marginTop: '15px'\r\n                              }}>Active Profile </p></div>\r\n                            </div>\r\n                          </Row>\r\n                          <div className=\"footer\"><hr /><p style={{ textAlign: 'center', fontSize: '17px' }}>{this.state.activeProfileName}</p></div></div></div>\r\n                    </Col>\r\n\r\n                    <div className=\" col-lg-offset-4 col-sm-offset-4 col-lg-4 col-sm-4\">\r\n                      <div className=\"card-margin card card-stats\">\r\n                        <div className=\"content\">\r\n                          <div className=\"row\">\r\n                            <div className=\"col-xs-5\">\r\n                              <div style={{ fontSize: '3em' }} className=\"icon-big text-center icon-warning\">\r\n                                <i style={{ color: this.state.autoClose == 'OFF' ? '#312f2f' : 'green' }} className=\"pe-7s-switch text-warning-switch\"></i>\r\n                              </div></div>\r\n                            <div className=\"col-xs-7\">\r\n                              <div className=\"numbers\"><p style={{\r\n                                textAlign: 'center',\r\n                                fontSize: '17px',\r\n                                marginTop: '15px'\r\n                              }}>Auto-Close </p></div>\r\n                            </div></div><div className=\"footer\"><hr /><p style={{ textAlign: 'center', fontSize: '17px' }}>{this.state.autoClose}</p></div></div></div></div>\r\n\r\n                  </Row>\r\n                  <div className=\"terminal-box terminal-head-box\">\r\n                    {/* {(this.state.errorMassege) && <p style={{ color: 'red', fontSize: '10px' }}>Please Select Any Account</p>} */}\r\n                    <span className=\"terminal-text\">Profit/Loss</span>\r\n                  </div>\r\n                  <Row >\r\n                    <div className=\"col-lg-12 col-sm-12\">\r\n                      <div className=\"card-margin card card-stats\">\r\n                        <div className=\"content\">\r\n                          <div className=\"row\">\r\n                            <div className=\"col-xs-6\">\r\n                              <div className=\"numbers\"><p style={{\r\n                                textAlign: 'center',\r\n                                fontSize: '20px',\r\n                        \r\n                                color: sumOfTotal > 0 ? 'green' : 'red'\r\n                              }}>Realized : $ {sumOfTotal} </p></div>\r\n                            </div>\r\n                            <div className=\"col-xs-6\">\r\n                              <div className=\"numbers\"><p style={{\r\n                                textAlign: 'center',\r\n                                fontSize: '20px',\r\n                            \r\n                                color: sumOfTotal1 > 0 ? 'green' : 'red'\r\n\r\n                              }}>Unrealized : $ {sumOfTotal1} </p></div>\r\n                            </div>\r\n                          </div><div className=\"footer\"><hr /><p style={{ color: (sumOfTotal1 + sumOfTotal) > 0 ? 'green' : 'red', textAlign: 'center', fontSize: '20px' }}>Total : $ {(sumOfTotal1 + sumOfTotal).toFixed(2)}</p></div></div></div></div>\r\n                  </Row>\r\n                  <div className=\"terminal-box  terminal-head-box\">\r\n                    {/* {(this.state.errorMassege) && <p style={{ color: 'red', fontSize: '10px' }}>Please Select Any Account</p>} */}\r\n                    <span className=\"terminal-text\">Exposure</span>\r\n                  </div>\r\n                  {this.state.loading ? <Loader\r\n                    type=\"ThreeDots\"\r\n                    color=\"black\"\r\n                    height={100}\r\n                    width={100}\r\n                    style={{ textAlign: 'center' }}\r\n\r\n\r\n                  />\r\n                    :\r\n                    <Row>\r\n                      {this.state.fromOpenOrderInfos && this.state.total ?\r\n                        // this.state.fromOpenOrderInfos.order_type !== null &&\r\n                        <div className=\"col-sm-6\">\r\n                         \r\n                          <div className=\"c-callout c-callout-info\">\r\n                            <small className=\"text-muted text-muted-dashboard\">{this.state.fromOpenOrderInfos.order_type == 0 ? 'long ' : 'short '} </small>\r\n                            <br />\r\n                            <strong className=\"h4 buy-sell-h4\"><NumberFormat value={this.state.total} displayType={'text'} thousandSeparator={true} decimalScale={2} />   {this.state.fromSymbol.margin_currency}\r\n                              <br />  <NumberFormat value={this.state.fromOpenOrderInfos.lots} displayType={'text'} thousandSeparator={true} decimalScale={2} />  {(this.state.fromOpenOrderInfos.lots > 1) ? 'Lots' : 'Lot'}</strong>\r\n                          </div>\r\n                        </div> : ''}\r\n                      {this.state.toOpenOrderInfos && this.state.totalTo ?\r\n                        // this.state.toOpenOrderInfos.order_type !== null &&\r\n                        <div className=\"col-sm-6\">\r\n                          <div className=\"c-callout callout-danger\">\r\n                            <small className=\"text-muted text-muted-dashboard\">{this.state.toOpenOrderInfos.order_type == 0 ? 'long ' : 'short '} </small>\r\n                            <br />\r\n                            <strong className=\"h4 buy-sell-h4\"><NumberFormat value={this.state.totalTo} displayType={'text'} thousandSeparator={true} decimalScale={2} />   {this.state.toSymbol.margin_currency}\r\n                              <br /> <NumberFormat value={this.state.toOpenOrderInfos.lots} displayType={'text'} thousandSeparator={true} decimalScale={2} />  {(this.state.toOpenOrderInfos.lots > 1) ? 'Lots' : 'Lot'} </strong>\r\n                          </div> \r\n                          </div>: '' }\r\n                          {!this.state.totalTo && !this.state.total ?\r\n                          <div className=\"col-sm-12 text-center\">\r\n                            <div className=\"c-callout c-callout-info\">\r\n                          <small className=\"text-muted text-muted-dashboard\">No Exposure</small>\r\n                          </div>\r\n                          </div> : ''}\r\n                    </Row>\r\n                  }\r\n                </Col>\r\n              </Row>\r\n              <Row style={{ margin: '20px 0px' }}></Row>\r\n            </Grid>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from 'react';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\r\nimport TagsInput from 'react-tagsinput'\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport config from '../../constant/config.js';\r\n\r\nimport Select from 'react-select'\r\nimport { createLogicalAnd } from 'typescript';\r\nconst axios = require('axios');\r\n\r\nclass FilterEdite extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedAccountOption: null,\r\n            selectedSymbolOption: null,\r\n            selectedSymbolOptionTo: null,\r\n            selectedAccountOptionTo: null,\r\n            selectedCommissionAccount: null,\r\n            startDate: null,\r\n            endDate: null,\r\n            startDateTo: null,\r\n            endDateTo: null,\r\n            allAccounts: [],\r\n            allSymbols: [],\r\n            profileName: '',\r\n            showCommission: false,\r\n            // showAddCommission: false,\r\n            id: '',\r\n            error: '',\r\n            autoSyncClose: false,\r\n            magicNumber: [],\r\n            magicNumberTo: [],\r\n            tags: [],\r\n            include_exclude_status: '',\r\n            showMagicNumber: false,\r\n            showMagicNumberTo: false,\r\n            exclude: false,\r\n            include: false,\r\n            excludeTo: false,\r\n            includeTo: false,\r\n            ticket:[],\r\n            ticketTo:[],\r\n            // showTicket: false,\r\n            // showTicketTo: false,\r\n            excludeTicket: false,\r\n            includeTicket: false,\r\n            excludeTicketTo: false,\r\n            includeTicketTo: false,\r\n\r\n        };\r\n\r\n\r\n    }\r\n    componentWillMount() {\r\n\r\n        let self = this;\r\n        axios.get(config.baseurl + '/accounts/fetchAllAccounts')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    self.setState({ allAccounts: response.data.rows })\r\n                }\r\n            })\r\n        axios.get(config.baseurl + '/accounts/fetchAllSymbol')\r\n            .then(function (response) {\r\n                if (response.status == 200) {\r\n                    // console.log( response,\"response ---------------fetchAllSymbol>\")\r\n                    self.setState({ allSymbols: response.data.rows })\r\n                }\r\n            })\r\n    }\r\n    componentDidMount() {\r\n\r\n        let abc = this.props.data;\r\n        console.log(abc, '------------------>>>');\r\n        if (abc) {\r\n            let from_symbol = JSON.parse(abc.from_symbols);\r\n            let to_symbol = JSON.parse(abc.to_symbols);\r\n\r\n            let all_from_symbols = from_symbol.map(data => { return ({ value: data, label: data }) });\r\n            let all_to_symbols = to_symbol.map(data => { return ({ value: data, label: data }) });\r\n\r\n            from_symbol = from_symbol.join(', ');\r\n            to_symbol = to_symbol.join(', ');\r\n\r\n            this.setState({\r\n                id: abc.id,\r\n                profileName: abc.profile_name,\r\n                selectedAccountOption: ({ value: abc.accountFromInfo[0].id, label: abc.accountFromInfo[0].login }),\r\n                selectedAccountOptionTo: ({ value: abc.accountToInfo[0].id, label: abc.accountToInfo[0].login }),\r\n                showCommission: abc.commission_acount_id !== 0 ? true : false,\r\n                selectedCommissionAccount: abc.commission_acount_id !== 0 ? ({ value: abc.accountCommissionInfo[0].id, label: abc.accountCommissionInfo[0].login }) : null,\r\n                showMagicNumber: abc.from_include_exclude_status !== 0 ? true : false,\r\n                showMagicNumberTo: abc.to_include_exclude_status !== 0 ? true : false,\r\n                magicNumber: abc.from_magic_number != \"0\" && abc.from_magic_number != \"\" ? JSON.parse(abc.from_magic_number) : [],\r\n                magicNumberTo: abc.to_magic_number != \"0\" && abc.to_magic_number != \"\" ? JSON.parse(abc.to_magic_number) : [],\r\n                include: abc.from_include_exclude_status === 1 ? true : false,\r\n                exclude: abc.from_include_exclude_status === 2 ? true : false,\r\n                includeTo: abc.to_include_exclude_status === 1 ? true : false,\r\n                excludeTo: abc.to_include_exclude_status === 2 ? true : false,\r\n                // showTicket: abc.from_include_exclude_status_ticket !== 0 ? true : false,\r\n                // showTicketTo: abc.to_include_exclude_status_ticket !== 0 ? true : false,\r\n                ticket: abc.from_ticket != \"0\" && abc.from_ticket != \"\" ? JSON.parse(abc.from_ticket) : [],\r\n                ticketTo: abc.to_ticket != \"0\" && abc.to_ticket != \"\" ? JSON.parse(abc.to_ticket) : [],\r\n                includeTicket: abc.from_include_exclude_status_ticket === 1 ? true : false,\r\n                excludeTicket: abc.from_include_exclude_status_ticket === 2 ? true : false,\r\n                includeTicketTo: abc.to_include_exclude_status_ticket === 1 ? true : false,\r\n                excludeTicketTo: abc.to_include_exclude_status_ticket === 2 ? true : false,\r\n                selectedSymbolOption: all_from_symbols,\r\n                autoSyncClose: abc.auto_close == 1 ? true : false,\r\n                selectedSymbolOptionTo: all_to_symbols,\r\n                startDate: new Date(abc.startdateFrom),\r\n                startDateTo: new Date(abc.startdateTo),\r\n                endDate: (abc.enddateFrom != null) ? new Date(abc.enddateFrom) : '',\r\n                endDateTo: (abc.enddateTo != null) ? new Date(abc.enddateTo) : '',\r\n            })\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    handleDropdownChange = (e) => {\r\n        this.setState({ selectValue: e.target.value });\r\n    }\r\n    handleChangeDate = date => {\r\n        this.setState({\r\n            startDate: date\r\n        });\r\n    }\r\n    handleEndDate = date => {\r\n\r\n        if (date < this.state.startDate && date != null) {\r\n            this.setState({ error: 'enddate', endDate: \"\" })\r\n            return\r\n        }\r\n        this.setState({\r\n            error: '',\r\n            endDate: date,\r\n        });\r\n    }\r\n    handleChangeDateTo = date => {\r\n        this.setState({\r\n            startDateTo: date\r\n        });\r\n    }\r\n    handleEndDateTo = date => {\r\n        if (date < this.state.startDateTo && date != null) {\r\n            this.setState({ error: 'enddateto', endDateTo: \"\" })\r\n            return\r\n        }\r\n        this.setState({\r\n            error: '',\r\n            endDateTo: date,\r\n        });\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({ value: Array.from(event.target.selectedOptions, (item) => item.value) });\r\n    }\r\n\r\n    handeChangeShowCommission = () => {\r\n        this.setState({ showCommission: !this.state.showCommission })\r\n    }\r\n    handleChangeCommissionAccount = selectedCommissionAccount => {\r\n        this.setState({ selectedCommissionAccount });\r\n    };\r\n\r\n    renderCommissionAccount = () => {\r\n        const { selectedCommissionAccount, allAccounts } = this.state;\r\n\r\n        let options = allAccounts.map(data => {\r\n            return { value: data.id, label: data.login };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Account\"\r\n                value={selectedCommissionAccount}\r\n                onChange={this.handleChangeCommissionAccount}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n\r\n    renderAccountSelect = () => {\r\n        const { selectedAccountOption, allAccounts } = this.state;\r\n        let options = allAccounts.map(data => {\r\n            return { value: data.id, label: data.login };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Account\"\r\n                value={selectedAccountOption}\r\n                onChange={this.handleChangeAccount} l\r\n                options={options}\r\n                rules={{ required: 'Please select an option' }}\r\n            />\r\n        )\r\n    }\r\n\r\n    handleChangeAccountTo = selectedAccountOptionTo => {\r\n        this.setState({ selectedAccountOptionTo, error: '' });\r\n    };\r\n    renderAccountSelectTo = () => {\r\n        const { selectedAccountOptionTo, allAccounts } = this.state;\r\n\r\n        let options = allAccounts.map(data => {\r\n            return { value: data.id, label: data.login };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Account\"\r\n                value={selectedAccountOptionTo}\r\n                onChange={this.handleChangeAccountTo}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n\r\n    handleChangeAccount = selectedAccountOption => {\r\n        this.setState({ selectedAccountOption });\r\n    };\r\n    handleChangeSymbol = selectedSymbolOption => {\r\n        this.setState({ selectedSymbolOption });\r\n    };\r\n    renderSymbolSelect = () => {\r\n        const { selectedSymbolOption, allSymbols } = this.state;\r\n        let options = allSymbols.map(data => {\r\n            return { value: data.name, label: data.name };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Symbol\"\r\n                value={selectedSymbolOption}\r\n                isMulti\r\n                onChange={this.handleChangeSymbol}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n    handleChangeSymbolTo = selectedSymbolOptionTo => {\r\n        this.setState({ selectedSymbolOptionTo });\r\n    };\r\n    renderSymbolSelectTo = () => {\r\n        const { selectedSymbolOptionTo, allSymbols } = this.state;\r\n        let options = allSymbols.map(data => {\r\n            return { value: data.name, label: data.name };\r\n        })\r\n        return (\r\n            <Select\r\n                placeholder=\"Select Symbol\"\r\n                value={selectedSymbolOptionTo}\r\n                isMulti\r\n                onChange={this.handleChangeSymbolTo}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n\r\n    handleChangeMagicNumber = (magicNumber) => {\r\n\r\n\r\n        // if(re.test(tags))\r\n        this.setState({ magicNumber })\r\n    }\r\n    handleChangeMagicNumberTo = (magicNumberTo) => {\r\n\r\n\r\n        // if(re.test(tags))\r\n        this.setState({ magicNumberTo })\r\n    }\r\n\r\n    handleChangeTicket = (ticket) => {\r\n\r\n\r\n        this.setState({ ticket })\r\n\r\n    }\r\n    handleChangeTicketTo = (ticketTo) => {\r\n\r\n        this.setState({ ticketTo })\r\n    }\r\n    changeIncludeDefaultProperty = () => {\r\n\r\n        this.setState({ include: !this.state.include, exclude: false })\r\n            \r\n        // if (!this.state.include == true) {\r\n        //     this.setState({ showMagicNumber: true })\r\n        // } else if (this.state.include == true) {\r\n        //     this.setState({ showMagicNumber: false })\r\n\r\n        // }\r\n\r\n\r\n    }\r\n    changeExcludeDefaultProperty = () => {\r\n        this.setState({ exclude: !this.state.exclude, include: false })\r\n        // if (!this.state.exclude == true) {\r\n        //     this.setState({ showMagicNumber: true })\r\n        // } else if (this.state.exclude == true) {\r\n        //     this.setState({ showMagicNumber: false })\r\n\r\n        // }\r\n\r\n    }\r\n\r\n    changeIncludeDefaultPropertyTo = () => {\r\n        this.setState({ includeTo: !this.state.includeTo, excludeTo: false })\r\n        // if (!this.state.includeTo == true) {\r\n        //     this.setState({ showMagicNumberTo: true })\r\n        // } else if (this.state.includeTo == true) {\r\n        //     this.setState({ showMagicNumberTo: false })\r\n\r\n        // }\r\n    }\r\n    changeExcludeDefaultPropertyTo = () => {\r\n        this.setState({ excludeTo: !this.state.excludeTo, includeTo: false })\r\n        // if (!this.state.excludeTo == true) {\r\n        //     this.setState({ showMagicNumberTo: true })\r\n        // } else if (this.state.excludeTo == true) {\r\n        //     this.setState({ showMagicNumberTo: false })\r\n\r\n        // }\r\n\r\n    }\r\n\r\n    changeIncludeDefaultPropertyTicket = () => {\r\n\r\n        this.setState({ includeTicket: !this.state.includeTicketTo, excludeTicket: false }\r\n        )\r\n        // if (!this.state.includeTicket == true) {\r\n        //     this.setState({ showTicket: true })\r\n        // } else if (this.state.includeTicket == true) {\r\n        //     this.setState({ showTicket: false })\r\n\r\n        // }\r\n\r\n\r\n    }\r\n    changeExcludeDefaultPropertyTicket = () => {\r\n        this.setState({ excludeTicket: !this.state.excludeTicket, includeTicket: false })\r\n        // if (!this.state.excludeTicket == true) {\r\n        //     this.setState({ showTicket: true })\r\n        // } else if (this.state.excludeTicket == true) {\r\n        //     this.setState({ showTicket: false })\r\n\r\n        // }\r\n\r\n    }\r\n\r\n    changeIncludeDefaultPropertyTicketTo = () => {\r\n        this.setState({ includeTicketTo: !this.state.includeTicketTo, excludeTicketTo: false })\r\n        // if (!this.state.includeTicketTo == true) {\r\n        //     this.setState({ showTicketTo: true })\r\n        // } else if (this.state.includeTicketTo == true) {\r\n        //     this.setState({ showTicketTo: false })\r\n\r\n        // }\r\n    }\r\n    changeExcludeDefaultPropertyTicketTo = () => {\r\n        this.setState({ excludeTicketTo: !this.state.excludeTicketTo, includeTicketTo: false })\r\n        // if (!this.state.excludeTicketTo == true) {\r\n        //     this.setState({ showTicketTo: true })\r\n        // } else if (this.state.excludeTicketTo == true) {\r\n        //     this.setState({ showTicketTo: false })\r\n\r\n        // }\r\n\r\n    }\r\n\r\n    handleprofileName(e) {\r\n\r\n        this.setState({ profileName: e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1), error: '' })\r\n\r\n    }\r\n    handleChangeAutoSync(e) {\r\n        this.setState({ autoSyncClose: !this.state.autoSyncClose }, () => {\r\n        })\r\n    }\r\n    formDataSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        let from_status = this.state.include === true && this.state.exclude === false ? 1 : this.state.exclude === true && this.state.include === false ? 2 : 0\r\n\r\n        let to_status = this.state.includeTo === true && this.state.excludeTo === false ? 1 : this.state.excludeTo === true && this.state.includeTo === false ? 2 : 0\r\n\r\n        let from_status_ticket = this.state.includeTicket === true && this.state.excludeTicket === false ? 1 : this.state.excludeTicket === true && this.state.includeTicket === false ? 2 : 0\r\n\r\n        let to_status_ticket = this.state.includeTicketTo === true && this.state.excludeTicketTo === false ? 1 : this.state.excludeTicketTo === true && this.state.includeTicketTo === false ? 2 : 0\r\n        \r\n        let self = this\r\n\r\n       \r\n        if (this.state.profileName == null || this.state.profileName == '') {\r\n            NotificationManager.listNotify = [];\r\n            NotificationManager.error ('Please select profile name !')\r\n            return\r\n        }\r\n        else if (this.state.selectedAccountOption == null || this.state.selectedAccountOption == '') {\r\n            this.setState({ error: 'accountoption' })\r\n            return\r\n        }\r\n        else if (this.state.showCommission == true  &&  (this.state.selectedCommissionAccount == null || this.state.selectedCommissionAccount == '')) {\r\n            this.setState({ error: 'selectedCommissionAccount' })\r\n            return\r\n        }\r\n        else if (this.state.startDate == null || this.state.startDate == '') {\r\n            this.setState({ error: 'startdate' })\r\n            return\r\n        } else if (this.state.selectedSymbolOption == null || this.state.selectedSymbolOption == '') {\r\n            this.setState({ error: 'symbolselect' })\r\n            return\r\n        }\r\n        else if (this.state.selectedAccountOptionTo == null || this.state.selectedAccountOptionTo == '') {\r\n            this.setState({ error: 'accountoptionto' })\r\n            return\r\n        } else if (this.state.startDateTo == null || this.state.startDateTo == '') {\r\n            this.setState({ error: 'startDateTo' })\r\n            return\r\n        }\r\n        else if (this.state.selectedSymbolOptionTo == null || this.state.selectedSymbolOptionTo == '') {\r\n            this.setState({ error: 'selectedSymbolOptionTo' })\r\n            return\r\n        }\r\n        else {\r\n            this.setState({ error: '' })\r\n        }\r\n        let fromSymbol = this.state.selectedSymbolOption;\r\n        let toSymbol = this.state.selectedSymbolOptionTo;\r\n\r\n        let symbolFrom = fromSymbol.map((data) => data.value)\r\n        let symbolto = toSymbol.map((data) => data.value)\r\n\r\n        let Data = {\r\n            id: this.state.id,\r\n            profile_name: this.state.profileName,\r\n            from_account_id: this.state.selectedAccountOption.value,\r\n            to_account_id: this.state.selectedAccountOptionTo.value,\r\n            commission_acount_id: this.state.showCommission == true ? this.state.selectedCommissionAccount.value : 0,\r\n            startdateFrom: this.state.startDate,\r\n            // enddateFrom: this.state.endDate,\r\n            enddateFrom: (this.state.endDate) ? this.state.endDate : null,\r\n            startdateTo: this.state.startDateTo,\r\n            enddateTo: (this.state.endDateTo) ? this.state.endDateTo : null,\r\n            from_symbols: JSON.stringify(symbolFrom),\r\n            to_symbols: JSON.stringify(symbolto),\r\n            auto_close: this.state.autoSyncClose ? 1 : 0,\r\n            from_magic_number: (from_status != 0) ? this.state.magicNumber.length > 0 ? JSON.stringify(this.state.magicNumber) : JSON.stringify([]) : \"\",\r\n            to_magic_number: (to_status != 0) ? this.state.magicNumberTo.length > 0 ? JSON.stringify(this.state.magicNumberTo) : JSON.stringify([]) : \"\",\r\n\r\n            from_include_exclude_status: from_status,\r\n            to_include_exclude_status: to_status,\r\n            from_ticket:(from_status_ticket != 0) ? this.state.ticket.length > 0 ? JSON.stringify(this.state.ticket) : JSON.stringify([]) : \"\",\r\n          to_ticket: (to_status_ticket != 0) ? this.state.ticketTo.length > 0 ? JSON.stringify(this.state.ticketTo) : JSON.stringify([]) : \"\",\r\n          from_include_exclude_status_ticket: from_status_ticket,\r\n                to_include_exclude_status_ticket: to_status_ticket, \r\n            createdAt: new Date(),\r\n            updatedAt: new Date()\r\n        }\r\n        \r\n        axios.post(config.baseurl + '/filter/updatefilterdatafull', Data)\r\n        .then(function (response) {\r\n            \r\n            if (response.status == 200) {\r\n                    self.props.onHide()\r\n\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n            });\r\n\r\n    }\r\n    crossClick(e) {\r\n        e.preventDefault();\r\n        this.props.onHide()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content\">\r\n                <Grid fluid>\r\n                    <div className=\"symbol-box\">\r\n                        <div className=\"cross_div\"><a onClick={(e) => this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\r\n                        <div className=\"terminal-text\" >\r\n                            <p className=\"profilename pnameadjust\"> Profile Name</p>\r\n                            <input type=\"text\" name=\"profilename\" value={this.state.profileName} className=\"Itext\" onChange={(e) => this.handleprofileName(e)} />\r\n                            {(this.state.error == 'profileName') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Fill Your Profile Name </p>}\r\n\r\n                        </div>\r\n                        <div className=\"synclose\">\r\n                            <label class=\"checkbox-inline\"><input type=\"checkbox\" checked={this.state.autoSyncClose} name=\"changeAutoSync\" onChange={(e) => this.handleChangeAutoSync(e)} /><b>Auto Sync Close</b></label>\r\n                        </div>\r\n                        <form>\r\n                            <Row>\r\n                                {/* <Col md={12}>\r\n                                    <div className=\"card\">\r\n                                        <div style={{ padding: '10px 20px 35px ', }}>\r\n                                            <div>\r\n                                                <h3 className=\" text-center\">Filter By Magic Numbers</h3>\r\n\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-6 text-center\">\r\n\r\n                                                    <button type=\"button\" class=\"text-center filter-add-button\">Include</button>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-md-6 text-center btnspace\">\r\n                                                    <button type=\"button\" class=\"filter-add-button\">Exclude</button>\r\n                                                </div>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col\">\r\n                                                        <div class=\"text-center  \">\r\n                                                            <input class=\"form-control input-css\" placeholder=\"Select Numbers\" type=\"number\"></input>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>from_include_exclude_status\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </Col> */}\r\n                                <Col md={6}>\r\n                                    <div className=\"card bottom\">\r\n                                        <div style={{ padding: '10px 20px 0px' }}>\r\n                                            <span style={{ fontWeight: 'bold' }}>Account A</span>\r\n                                        </div>\r\n                                        <table className=\"table mt20\">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr\">\r\n                                                        <span className=\"accnt\">Account :</span>\r\n                                                    </td>\r\n\r\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                        {this.renderAccountSelect()}\r\n                                                        {(this.state.error == 'accountoption') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">From:  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center datepicker_filter\">\r\n                                                        <DatePicker\r\n                                                            selected={this.state.startDate}\r\n                                                            onChange={this.handleChangeDate}\r\n                                                            isClearable\r\n                                                            placeholderText=\"dd/mm/yyyy\"\r\n                                                            dateFormat=\"dd/MM/yyyy\"\r\n                                                            startDate={this.state.startDate}\r\n                                                            endDate={this.state.endDate}\r\n                                                            strictParsing\r\n                                                        />\r\n                                                        {(this.state.error == 'startdate') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">To :  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center datepicker_filter\">\r\n                                                        <DatePicker\r\n\r\n                                                            selected={this.state.endDate}\r\n                                                            onChange={this.handleEndDate}\r\n                                                            isClearable\r\n                                                            placeholderText=\"dd/mm/yyyy\"\r\n                                                            dateFormat=\"dd/MM/yyyy\"\r\n                                                            startDate={this.state.startDate}\r\n                                                            endDate={this.state.endDate}\r\n                                                        />\r\n                                                        {(this.state.error == 'enddate') && <p style={{ color: 'red', fontSize: '13px' }}>*\r\n                                                        Please ensure that the End Date is greater than  the Start Date.</p>}\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">Symbol :  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center\" style={{ width: '50%' }}>\r\n                                                        {this.renderSymbolSelect()}\r\n                                                        {(this.state.error == 'symbolselect') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                            <span className=\"accnt\">Magic Number </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                        <TagsInput\r\n                                                        onValidationReject={() => console.log('rejected')}\r\n                                                        validationRegex={/^[0-9]*$/}\r\n                                                        inputProps={{ placeholder: this.state.magicNumber.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumber\r\n                                                        } onChange={this.handleChangeMagicNumber}></TagsInput>\r\n                                                            </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr dataAdjust\">\r\n                                                            <div onClick={this.changeIncludeDefaultProperty}>\r\n                                                                <input\r\n                                                                    type=\"radio\" id=\"include\" name=\"include\" checked={this.state.include} />\r\n                                                                <span className=\"accnt \">Include</span>\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\">\r\n                                                            <div onClick={this.changeExcludeDefaultProperty} >\r\n                                                                <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.exclude} />\r\n                                                                <span className=\"accnt \">Exclude</span>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                            <span className=\"accnt\">Ticket </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                        <TagsInput\r\n                                                        onValidationReject={() => console.log('rejected')}\r\n                                                        validationRegex={/^[0-9]*$/}\r\n                                                        inputProps={{ placeholder: this.state.ticket.length > 0 ? \"\" : \" Enter Ticket\" }} type=\"number\" value={this.state.ticket\r\n                                                        } onChange={this.handleChangeTicket}></TagsInput>\r\n                                                            </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr dataAdjust\">\r\n                                                            <div onClick={this.changeIncludeDefaultPropertyTicket}>\r\n                                                                <input\r\n                                                                    type=\"radio\" id=\"includeTicket\" name=\"includeTicket\" checked={this.state.includeTicket} />\r\n                                                                <span className=\"accnt \">Include</span>\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\">\r\n                                                            <div onClick={this.changeExcludeDefaultPropertyTicket} >\r\n                                                                <input type=\"radio\" id=\"excludeTicket\" name=\"excludeTicket\" checked={this.state.excludeTicket} />\r\n                                                                <span className=\"accnt \">Exclude</span>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n\r\n                                            </tbody>\r\n                                        </table>\r\n                                        {/* <div className=\"text-center\">\r\n                                            <span c> Magic Number :  </span>\r\n                                        </div>\r\n\r\n                                        <table className=\"table \">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr dataAdjust\">\r\n                                                        <div onClick={this.changeIncludeDefaultProperty}>\r\n                                                            <input\r\n                                                                type=\"radio\" id=\"include\" name=\"include\" checked={this.state.include} />\r\n                                                            <span class=\"accnt \">Include</span>\r\n\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <div onClick={this.changeExcludeDefaultProperty} >\r\n                                                            <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.exclude} />\r\n                                                            <span class=\"accnt \">Exclude</span>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n\r\n\r\n                                        {this.state.showMagicNumber &&\r\n                                            <div className=\"b-clr magicnumber\" style={{}}>\r\n                                                <TagsInput\r\n                                                    onValidationReject={() => console.log('rejected')}\r\n                                                    validationRegex={/^[0-9]*$/}\r\n                                                    inputProps={{ placeholder: this.state.magicNumber.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumber\r\n                                                    } onChange={this.handleChangeMagicNumber}></TagsInput>\r\n                                            </div>}\r\n\r\n                                            <div className=\"text-center\">\r\n                                                <span > Ticket   </span>\r\n                                            </div>\r\n\r\n                                            <table className=\"table \">\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr dataAdjust\">\r\n                                                            <div onClick={this.changeIncludeDefaultPropertyTicket}>\r\n                                                                <input\r\n                                                                    type=\"radio\" id=\"includeTicket\" name=\"includeTicket\" checked={this.state.includeTicket} />\r\n                                                                <span className=\"accnt \">Include</span>\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\">\r\n                                                            <div onClick={this.changeExcludeDefaultPropertyTicket} >\r\n                                                                <input type=\"radio\" id=\"excludeTicket\" name=\"excludeTicket\" checked={this.state.excludeTicket} />\r\n                                                                <span className=\"accnt \">Exclude</span>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n\r\n\r\n                                            {this.state.showTicket === true ?\r\n                                                <div className=\"b-clr magicnumber\" style={{}}>\r\n                                                    <TagsInput\r\n                                                        onValidationReject={() => console.log('rejected')}\r\n                                                        validationRegex={/^[0-9]*$/}\r\n                                                        inputProps={{ placeholder: this.state.ticket.length > 0 ? \"\" : \" Enter Ticket\" }} type=\"number\" value={this.state.ticket\r\n                                                        } onChange={this.handleChangeTicket}></TagsInput>\r\n                                                </div> : null} */}\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    <div className=\"card bottom\">\r\n                                        <div style={{ padding: '10px 20px 0px' }}>\r\n                                            <span style={{ fontWeight: 'bold' }}>Account B</span>\r\n                                        </div>\r\n\r\n                                        <table className=\"table mt20\">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">Account :</span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center\" style={{ width: '50%' }}>\r\n                                                        {this.renderAccountSelectTo()}\r\n                                                        {(this.state.error == 'accountoptionto') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\r\n\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">From:  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center datepicker_filter\">\r\n                                                        <DatePicker\r\n                                                            selected={this.state.startDateTo}\r\n                                                            onChange={this.handleChangeDateTo}\r\n                                                            isClearable\r\n                                                            placeholderText=\"dd/mm/yyyy\"\r\n                                                            dateFormat=\"dd/MM/yyyy\"\r\n                                                            startDate={this.state.startDateTo}\r\n                                                            endDate={this.state.endDateTo}\r\n                                                        />\r\n\r\n                                                        {(this.state.error == 'startDateTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                        <span className=\"accnt\">To :  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center datepicker_filter\">\r\n                                                        <DatePicker\r\n                                                            selected={this.state.endDateTo}\r\n                                                            onChange={this.handleEndDateTo}\r\n                                                            isClearable\r\n                                                            placeholderText=\"dd/mm/yyyy\"\r\n                                                            dateFormat=\"dd/MM/yyyy\"\r\n                                                            startDate={this.state.startDateTo}\r\n                                                            endDate={this.state.endDateTo}\r\n\r\n                                                        />\r\n\r\n                                                        {(this.state.error == 'enddateto') && <p style={{ color: 'red', fontSize: '13px' }}>*\r\n                                                        Please ensure that the End Date is greater than  the Start Date.</p>}\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr\">\r\n                                                        <span className=\"accnt\">Symbol :  </span>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                        {this.renderSymbolSelectTo()}\r\n                                                        {(this.state.error == 'selectedSymbolOptionTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\r\n\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                            <span className=\"accnt\">Magic Number </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                        <TagsInput\r\n                                                            onValidationReject={() => console.log('rejected')}\r\n                                                            validationRegex={/^[0-9]*$/}\r\n                                                            inputProps={{ placeholder: this.state.magicNumberTo.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumberTo\r\n                                                            } onChange={this.handleChangeMagicNumberTo}></TagsInput>\r\n                                                            </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr checkboxAdjust\">\r\n                                                            <div onClick={this.changeIncludeDefaultPropertyTo} >\r\n                                                                <input\r\n                                                                    type=\"radio\" id=\"includeTo\" name=\"includeTo\" checked={this.state.includeTo} />\r\n                                                                <span className=\"accnt \">Include</span>\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr checkboxAdjust text-center\">\r\n                                                            <div onClick={this.changeExcludeDefaultPropertyTo} >\r\n                                                                <input type=\"radio\" id=\"excludeTo\" name=\"excludeTo\" checked={this.state.excludeTo} />\r\n                                                                <span className=\"accnt \">Exclude</span>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                    <td className=\"b-clr \">\r\n                                                            <span className=\"accnt\">Ticket </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                        <TagsInput\r\n                                                            onValidationReject={() => console.log('rejected')}\r\n                                                            validationRegex={/^[0-9]*$/}\r\n                                                            inputProps={{ placeholder: this.state.ticketTo.length > 0 ? \"\" : \" Enter Ticket\" }} type=\"number\" value={this.state.ticketTo\r\n                                                            } onChange={this.handleChangeTicketTo}></TagsInput>\r\n                                                            </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr checkboxAdjust\">\r\n                                                            <div onClick={this.changeIncludeDefaultPropertyTicketTo} >\r\n                                                                <input\r\n                                                                    type=\"radio\" id=\"includeTicketTo\" name=\"includeTicketTo\" checked={this.state.includeTicketTo} />\r\n                                                                <span className=\"accnt \">Include</span>\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr checkboxAdjust text-center\">\r\n                                                            <div onClick={this.changeExcludeDefaultPropertyTicketTo} >\r\n                                                                <input type=\"radio\" id=\"excludeTicketTo\" name=\"excludeTicketTo\" checked={this.state.excludeTicketTo} />\r\n                                                                <span className=\"accnt \">Exclude</span>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n\r\n\r\n                                        {/* <div className=\"text-center\">\r\n                                            <span > Magic Number :  </span>\r\n                                        </div>\r\n                                        <table className=\"table mt20\">\r\n                                            <tbody>\r\n\r\n                                                <tr>\r\n                                                    <td className=\"b-clr checkboxAdjust\">\r\n                                                        <div onClick={this.changeIncludeDefaultPropertyTo} >\r\n                                                            <input\r\n                                                                type=\"radio\" id=\"includeTo\" name=\"includeTo\" checked={this.state.includeTo} />\r\n                                                            <span class=\"accnt \">Include</span>\r\n\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td className=\"b-clr checkboxAdjust\">\r\n                                                        <div onClick={this.changeExcludeDefaultPropertyTo} >\r\n                                                            <input type=\"radio\" id=\"excludeTo\" name=\"excludeTo\" checked={this.state.excludeTo} />\r\n                                                            <span class=\"accnt \">Exclude</span>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                        <div>\r\n\r\n                                            {this.state.showMagicNumberTo === true ?\r\n                                                <div className=\"b-clr magicnumber\" style={{}}>\r\n                                                    <TagsInput\r\n                                                        onValidationReject={() => console.log('rejected')}\r\n                                                        validationRegex={/^[0-9]*$/}\r\n                                                        inputProps={{ placeholder: this.state.magicNumber.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumberTo\r\n                                                        } onChange={this.handleChangeMagicNumberTo}></TagsInput>\r\n                                                </div> : null}\r\n                                        </div>\r\n\r\n                                        <div className=\"text-center\">\r\n                                                <span > Ticket  </span>\r\n                                            </div>\r\n                                            <table className=\"table mt20\">\r\n                                                <tbody>\r\n\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr checkboxAdjust\">\r\n                                                            <div onClick={this.changeIncludeDefaultPropertyTicketTo} >\r\n                                                                <input\r\n                                                                    type=\"radio\" id=\"includeTicketTo\" name=\"includeTicketTo\" checked={this.state.includeTicketTo} />\r\n                                                                <span className=\"accnt \">Include</span>\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr checkboxAdjust text-center\">\r\n                                                            <div onClick={this.changeExcludeDefaultPropertyTicketTo} >\r\n                                                                <input type=\"radio\" id=\"excludeTicketTo\" name=\"excludeTicketTo\" checked={this.state.excludeTicketTo} />\r\n                                                                <span className=\"accnt \">Exclude</span>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                            <div>\r\n\r\n                                                {this.state.showTicketTo === true ?\r\n                                                    <div className=\"b-clr magicnumber\" style={{}}>\r\n                                                        <TagsInput\r\n                                                            onValidationReject={() => console.log('rejected')}\r\n                                                            validationRegex={/^[0-9]*$/}\r\n                                                            inputProps={{ placeholder: this.state.ticketTo.length > 0 ? \"\" : \" Enter Ticket\" }} type=\"number\" value={this.state.ticketTo\r\n                                                            } onChange={this.handleChangeTicketTo}></TagsInput>\r\n                                                    </div> : null}\r\n                                            </div> */}\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <hr></hr>\r\n                            <div className=\"chceckbox\">\r\n\r\n                                <label class=\"checkbox-inline\"><input type=\"checkbox\" checked={this.state.showCommission} onChange={this.handeChangeShowCommission} /><b>Add Commission</b></label>\r\n                            </div>\r\n\r\n\r\n\r\n                            {this.state.showCommission &&\r\n                                <div className=\"center-com d-flex\">\r\n                                    <div className=\"com\">\r\n                                        <h3 style={{ fontWeight: 'bold' }}>Commission</h3>\r\n\r\n                                    </div>\r\n                                    <table className=\"table mt20\">\r\n\r\n                                        <tbody>\r\n                                            <tr>\r\n\r\n                                                <td className=\"b-clr \">\r\n                                                    <span className=\"accnt\"> Account :</span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center\" style={{ width: '50%' }}>\r\n                                                    {this.renderCommissionAccount()}\r\n                                                    {(this.state.error == 'selectedCommissionAccount') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account </p>}\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n\r\n                            }\r\n                            <div className=\"save_button_filter\">\r\n                                <Button className=\"btn-primary savebutton\" variant=\"primary\" size=\"lg\" block onClick={(e) => this.formDataSubmit(e)}>\r\n                                    <b>Update</b>\r\n                                </Button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilterEdite;\r\n","import React, { Component } from 'react';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\r\nvar moment = require('moment');\r\n\r\nclass FilterDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            autoSyncClose: false,\r\n            exclude: false,\r\n            include: false,\r\n            excludeTo: false,\r\n            includeTo: false,\r\n            excludeTicket: false,\r\n            includeTicket: false,\r\n            excludeTicketTo: false,\r\n            includeTicketTo: false,\r\n            showMagicNumberFrom: false,\r\n            showMagicNumberTo: false,\r\n            showTicketFrom: false,\r\n            showTicketTo: false,\r\n        };\r\n    }\r\n    crossClick(e) {\r\n        e.preventDefault();\r\n        this.props.onHide()\r\n    }\r\n\r\n    componentDidMount() {\r\n        let data = this.props.data;\r\n        this.setState({\r\n            autoSyncClose: data.auto_close == 1 ? true : false,\r\n            include: data.from_include_exclude_status == 1 ? true : false,\r\n            exclude: data.from_include_exclude_status == 2 ? true : false,\r\n            includeTo: data.to_include_exclude_status == 1 ? true : false,\r\n            excludeTo: data.to_include_exclude_status == 2 ? true : false,\r\n            includeTicket: data.from_include_exclude_status_ticket == 1 ? true : false,\r\n            excludeTicket: data.from_include_exclude_status_ticket == 2 ? true : false,\r\n            includeTicketTo: data.to_include_exclude_status_ticket == 1 ? true : false,\r\n            excludeTicketTo: data.to_include_exclude_status_ticket == 2 ? true : false,\r\n            showMagicNumberFrom: data.from_include_exclude_status !== 0 ? true : false,\r\n            showMagicNumberTo:data.to_include_exclude_status !== 0? true: false,\r\n            showTicketFrom: data.from_include_exclude_status_ticket !== 0 ? true : false,\r\n            showTicketTo:data.to_include_exclude_status_ticket !== 0? true: false,\r\n        })\r\n\r\n    }\r\n\r\n    // componentWillMount = () => {\r\n    //     console.log(this.props,'props..................');\r\n    // }\r\n\r\n    render() {\r\n        let data = this.props.data;\r\n\r\n        let from_symbol = JSON.parse(data.from_symbols);\r\n        let to_symbol = JSON.parse(data.to_symbols);\r\n        from_symbol = from_symbol.join(', ');\r\n        to_symbol = to_symbol.join(', ');\r\n        return (\r\n            <div className=\"content\">\r\n                <Grid fluid>\r\n                    <div className=\"symbol-box\">\r\n                        <div className=\"cross_div\"><a onClick={(e) => this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\r\n                        <div className=\"detail-text\"><h3> {data.profile_name} </h3></div>\r\n                        <div className=\"synclose\">\r\n                            <label class=\"checkbox-inline\"><input type=\"checkbox\" checked={this.state.autoSyncClose} name=\"changeAutoSync\" /><b>Auto Sync Close</b></label>\r\n                        </div>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <div className=\"card\">\r\n                                    <div className=\"detail_account\" style={{ padding: '10px 20px 0px' }}>\r\n                                        <span style={{ fontWeight: 'bold' }}>Account A</span>\r\n                                    </div>\r\n                                    <table className=\"table mt20\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td className=\"b-clr\">\r\n                                                    <span>Account :</span>\r\n                                                </td>\r\n\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    {data.accountFromInfo[0].login}\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>From :  </span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center datepicker_filter\">\r\n                                                    {moment(data.startdateFrom).format(\"DD/MM/YYYY\")}\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>To :  </span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center datepicker_filter\">\r\n                                                    {data.enddateFrom !== null ? moment(data.enddateFrom).format(\"DD/MM/YYYY\") : \"-\"}\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>Symbol :  </span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    {from_symbol}\r\n                                                </td>\r\n                                            </tr>\r\n                                            {this.state.showMagicNumberFrom &&\r\n                                            <>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>Magic Number :  </span>\r\n                                                </td>\r\n\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    {data.from_magic_number}\r\n                                                </td>\r\n\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr dataAdjust\">\r\n                                                    <div onClick={this.changeIncludeDefaultProperty}>\r\n                                                        <input\r\n                                                            type=\"radio\" id=\"include\" name=\"include\" checked={this.state.include} />\r\n                                                        <span class=\"accnt \">Include</span>\r\n\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td className=\"b-clr \">\r\n                                                    <div onClick={this.changeExcludeDefaultProperty} >\r\n                                                        <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.exclude} />\r\n                                                        <span class=\"accnt \">Exclude</span>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                            </>}\r\n                                            {this.state.showTicketFrom &&\r\n                                            <>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>Ticket :  </span>\r\n                                                </td>\r\n\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    {data.from_ticket}\r\n                                                </td>\r\n\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr dataAdjust\">\r\n                                                    <div onClick={this.changeIncludeDefaultPropertyTicket}>\r\n                                                        <input\r\n                                                            type=\"radio\" id=\"includeTicket\" name=\"includeTicket\" checked={this.state.includeTicket} />\r\n                                                        <span class=\"accnt \">Include</span>\r\n\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td className=\"b-clr \">\r\n                                                    <div onClick={this.changeExcludeDefaultPropertyTicket} >\r\n                                                        <input type=\"radio\" id=\"excludeTicket\" name=\"excludeTicket\" checked={this.state.excludeTicket} />\r\n                                                        <span class=\"accnt \">Exclude</span>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                            </>}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </Col>\r\n                            <Col md={6}>\r\n                                <div className=\"card\">\r\n                                    <div className=\"detail_account\" style={{ padding: '10px 20px 0px' }}>\r\n                                        <span style={{ fontWeight: 'bold' }}>Account B</span>\r\n                                    </div>\r\n\r\n                                    <table className=\"table mt20\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>Account :</span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    {data.accountToInfo[0].login}\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>From :  </span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center datepicker_filter\">\r\n                                                    {moment(data.startdateTo).format(\"DD/MM/YYYY\")}\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr \">\r\n                                                    <span>To :  </span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center datepicker_filter\">\r\n                                                    {data.enddateTo != null ? (moment(data.enddateTo).format(\"DD/MM/YYYY\")) : '-'}\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"b-clr\">\r\n                                                    <span>Symbol :  </span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    {to_symbol}\r\n                                                </td>\r\n                                            </tr>\r\n                                            {this.state.showMagicNumberTo &&\r\n                                                <>\r\n\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr\">\r\n                                                            <span>Magic Number :  </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                            {data.to_magic_number}\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n\r\n\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr checkboxAdjust\">\r\n                                                            <div onClick={this.changeIncludeDefaultPropertyTo} >\r\n                                                                <input\r\n                                                                    type=\"radio\" id=\"includeTo\" name=\"includeTO\" checked={this.state.includeTo} />\r\n                                                                <span class=\"accnt \">Include</span>\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr checkboxAdjust\">\r\n                                                            <div onClick={this.changeExcludeDefaultPropertyTo} >\r\n                                                                <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.excludeTo} />\r\n                                                                <span class=\"accnt \">Exclude</span>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </>}\r\n                                                {this.state.showTicketTo &&\r\n                                            <>\r\n                                                <tr>\r\n                                                        <td className=\"b-clr\">\r\n                                                            <span>Ticket :  </span>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                            {data.to_ticket}\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n\r\n\r\n                                                    <tr>\r\n                                                        <td className=\"b-clr checkboxAdjust\">\r\n                                                            <div onClick={this.changeIncludeDefaultPropertyTicketTo} >\r\n                                                                <input\r\n                                                                    type=\"radio\" id=\"includeTicketTo\" name=\"includeTicketTo\" checked={this.state.includeTicketTo} />\r\n                                                                <span class=\"accnt \">Include</span>\r\n\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"b-clr checkboxAdjust\">\r\n                                                            <div onClick={this.changeExcludeDefaultPropertyTicketTo} >\r\n                                                                <input type=\"radio\" id=\"excludeTicketTo\" name=\"excludeTicketTo\" checked={this.state.excludeTicketTo} />\r\n                                                                <span class=\"accnt \">Exclude</span>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    </>}\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n\r\n                            </Col>\r\n                            {data.commission_acount_id !== 0 && <Col md={12}>\r\n                                <div className=\"card bottom\">\r\n                                    <div className=\"detail_account\" style={{ padding: '10px 20px 0px' }}>\r\n                                        <h3 style={{ fontWeight: 'bold' }}>Commission</h3>\r\n                                    </div>\r\n                                    <table className=\"table mt20\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    <span>Account :</span>\r\n                                                </td>\r\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\r\n                                                    {data.accountCommissionInfo[0].login}\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n\r\n                            </Col>}\r\n                        </Row>\r\n\r\n                    </div>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilterDetail;\r\n\r\n","import React, { Component } from \"react\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\r\nimport Innerfilter from \"../filter/innerfilter\";\r\nimport FilterEdite from \"../filter/filteredit\";\r\nimport FilterDetail from \"../filter/filterdetail\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport config from \"../../constant/config.js\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport { api } from \"api\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nconst axios = require(\"axios\");\r\nvar moment = require(\"moment\");\r\n\r\nclass Filterprofile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Innerfilter: false,\r\n      filter: true,\r\n      filterData: [],\r\n      deleteData: [],\r\n      editeData: [],\r\n      showDelete: false,\r\n      showEdit: false,\r\n      detailForm: false,\r\n      detailData: [],\r\n      count: \"\",\r\n      pages: \"\",\r\n      page:1,\r\n    };\r\n\r\n    // this.handleDropdownChange = this.handleDropdownChange.bind(this);\r\n  }\r\n  fetchfilterdata() {\r\n    let self = this;\r\n    axios\r\n      .get(config.baseurl +`/filter/fetchfilterdata?page=${self.state.page}`)\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          self.setState({\r\n            filterData: response.data.rows,\r\n            count: response.data.count,\r\n            pages: response.data.pages,\r\n          });\r\n        }\r\n      });\r\n  }\r\n  handlePageClick = (data) => {\r\n    this.setState({ page: data.selected + 1 }, () => {\r\n      this.fectheAllAccount(this.state.page);\r\n    });\r\n  };\r\n  showInnerfilter = () => {\r\n    this.setState({ Innerfilter: true, filter: false });\r\n  };\r\n  componentDidMount() {\r\n    this.fetchfilterdata();\r\n    // let self = this;\r\n    // axios.get(config.baseurl + '/filter/fetchfilterdata')\r\n    //     .then(function (response) {\r\n    //         if (response.status == 200) {\r\n    //             self.setState({ filterData: response.data.rows })\r\n    //         }\r\n    //     }) adfasdfsd\r\n  }\r\n\r\n  createNotification = (profile_name, type) => {\r\n    NotificationManager.listNotify = [];\r\n    NotificationManager.info(\"Profile Is Activated !\", profile_name);\r\n  };\r\n\r\n  createWariningNotification = (profile_name, type) => {\r\n    NotificationManager.listNotify = [];\r\n    NotificationManager.error(\"Profile Is Deactivated !\", profile_name);\r\n  };\r\n\r\n  activateClick(e, data) {\r\n    e.preventDefault();\r\n    let Data = {\r\n      id: data.id,\r\n      status: 1,\r\n    };\r\n    let self = this;\r\n    axios\r\n      .post(config.baseurl + \"/filter/updatefilterdata\", Data)\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          self.fetchfilterdata();\r\n          self.createNotification(data.profile_name, \"info\");\r\n          // self.setState({ filterData: response.data.rows })\r\n          api();\r\n        }\r\n      });\r\n  }\r\n\r\n  //  App(){\r\n  //     const notify = () => toast(\"Wow so easy !\");\r\n\r\n  //     return (\r\n  //       <div>\r\n  //         <button onClick={notify}>Notify !</button>\r\n  //         <ToastContainer />\r\n  //       </div>\r\n  //     );\r\n  //   }\r\n\r\n  deactivateClick(e, data) {\r\n    e.preventDefault();\r\n    let Data = {\r\n      id: data.id,\r\n      status: 0,\r\n    };\r\n    let self = this;\r\n    axios\r\n      .post(config.baseurl + \"/filter/updatefilterdata\", Data)\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          self.fetchfilterdata();\r\n          self.createWariningNotification(data.profile_name, \"error\");\r\n          // self.setState({ filterData: response.data.rows })\r\n        }\r\n      });\r\n  }\r\n  editFilter = (e, data) => {\r\n    // e.preventDefault();\r\n    if (this.state.endDate == null || this.state.endDate == \"\") {\r\n      let newDate = new Date();\r\n      this.setState({ endDate: newDate });\r\n      return;\r\n    }\r\n    this.setState({ showEdit: true, editeData: data });\r\n  };\r\n\r\n  deleteFilter(e, data) {\r\n    e.preventDefault();\r\n    this.setState({ deleteData: data, showDelete: true });\r\n  }\r\n  deletepopupClick(e) {\r\n    e.preventDefault();\r\n    let Data = {\r\n      id: this.state.deleteData.id,\r\n    };\r\n    let self = this;\r\n    axios\r\n      .post(config.baseurl + \"/filter/deletefilter\", Data)\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          self.setState({ showDelete: false });\r\n          self.fetchfilterdata();\r\n        }\r\n      });\r\n  }\r\n  deletepopupclose(e) {\r\n    e.preventDefault();\r\n    this.setState({ showDelete: false });\r\n  }\r\n  viewFilter(e, data) {\r\n    e.preventDefault();\r\n\r\n    this.setState({ detailForm: true, detailData: data });\r\n  }\r\n\r\n  createTr = () => {\r\n    return (\r\n      this.state.filterData.length > 0 &&\r\n      this.state.filterData.map((item, index) => {\r\n        return (\r\n          <tr key={index}>\r\n            <th scope=\"row\">{index + 1}</th>\r\n            <td>{item.profile_name}</td>\r\n            <td>{moment(item.createdAt).format(\"DD/MM/YYYY\")}</td>\r\n            {/* <td>{item.status == 1 ? 'Activated' : 'Deactivated' }</td> */}\r\n            <td>\r\n              {item.status == 0 ? (\r\n                <div className=\"activate_button pointer\">\r\n                  <span\r\n                    className=\"button_interactivate btcolor\"\r\n                    onClick={(e) => this.activateClick(e, item)}\r\n                  >\r\n                    {\" \"}\r\n                    Activate{\" \"}\r\n                  </span>{\" \"}\r\n                </div>\r\n              ) : (\r\n                <div className=\"deactivate_button pointer\">\r\n                  <span\r\n                    className=\"button_deactivate pointer\"\r\n                    onClick={(e) => this.deactivateClick(e, item)}\r\n                  >\r\n                    Deactivate\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </td>\r\n            <td>\r\n              <span onClick={(e) => this.viewFilter(e, item)}>\r\n                <i className=\"pointer fa fa-eye facolor\" aria-hidden=\"true\"></i>\r\n              </span>\r\n              <span onClick={(e) => this.editFilter(e, item)}>\r\n                <i\r\n                  className=\"pointer fa fa-pencil-square-o facolor\"\r\n                  aria-hidden=\"true\"\r\n                ></i>\r\n              </span>\r\n              {item.status == 0 && (\r\n                <span onClick={(e) => this.deleteFilter(e, item)}>\r\n                  <i\r\n                    className=\"pointer fa fa-trash facolor\"\r\n                    aria-hidden=\"true\"\r\n                  ></i>\r\n                </span>\r\n              )}\r\n            </td>\r\n            {/* <td>{item.accountToInfo[0].login}</td>\r\n                    <td>{moment(item.startdateFrom).format(\"DD/MM/YYYY\") + ' - ' + moment(item.enddateFrom).format(\"DD/MM/YYYY\")}</td>\r\n                    <td>{moment(item.startdateTo).format(\"DD/MM/YYYY\") + ' - ' + moment(item.enddateTo).format(\"DD/MM/YYYY\")}</td>\r\n                    <td>{item.from_symbols}</td>\r\n                    <td>{item.to_symbols}</td> */}\r\n            {/* <td style={{fontWeight:600}}>{item.status == 1 && 'Connected'}</td> */}\r\n          </tr>\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <NotificationContainer />\r\n        <div className=\"content\">\r\n          {this.state.detailForm ? (\r\n            <FilterDetail\r\n              data={this.state.detailData}\r\n              show={this.state.detailForm}\r\n              onHide={() => this.setState({ detailForm: false })}\r\n            />\r\n          ) : (\r\n            <>\r\n              {this.state.showEdit ? (\r\n                <FilterEdite\r\n                  data={this.state.editeData}\r\n                  show={this.state.showEdit}\r\n                  // onHide={() => this.setState({ showEdit: false })}\r\n                  onHide={() =>\r\n                    this.setState({ showEdit: false }, () =>\r\n                      this.fetchfilterdata()\r\n                    )\r\n                  }\r\n                />\r\n              ) : (\r\n                <>\r\n                  {!this.state.Innerfilter && (\r\n                    <Grid fluid>\r\n                      <div className=\"selection-box\">\r\n                        <span className=\"terminal-text\"> Profiles </span>\r\n\r\n                        {/* <span className=\"icon-style\">\r\n                            <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\r\n                        </span> */}\r\n                        {/* <Link to=\"/innerfilter\">\r\n                       <button className=\"pull-right\">Add New</button>\r\n                       </Link> */}\r\n\r\n                        {/* <Link to=\"/admin/innerfilter\">\r\n                       <button className=\"pull-right\">abc</button>\r\n                       </Link> */}\r\n                      </div>\r\n                      <button\r\n                        className=\"pull-right filter-add-button\"\r\n                        onClick={this.showInnerfilter}\r\n                      >\r\n                        Add New\r\n                      </button>\r\n                    </Grid>\r\n                  )}\r\n                  {\r\n                    this.state.Innerfilter ? (\r\n                      <Innerfilter\r\n                        show={this.state.Innerfilter}\r\n                        onHide={() =>\r\n                          this.setState({ Innerfilter: false }, () => {\r\n                            this.fetchfilterdata();\r\n                          })\r\n                        }\r\n                      />\r\n                    ) : (\r\n                      <div style={{ background: \"#ffffff\" }}>\r\n                        <Row>\r\n                          <Col md={12}>\r\n                            <div style={{ padding: \"10px\" }}>\r\n                              <table className=\"table table-striped table-bordered\">\r\n                                <thead>\r\n                                  <tr>\r\n                                    <th scope=\"col\">Sr.No.</th>\r\n                                    <th scope=\"col\">Profile Name</th>\r\n                                    <th scope=\"col\">Created At</th>\r\n                                    <th scope=\"col\">Status</th>\r\n                                    <th scope=\"col\">Action</th>\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                  {/* {this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => { */}\r\n\r\n                                  {this.createTr()}\r\n                                  {/* })} */}\r\n                                  {/* <tr>\r\n                                                <th scope=\"row\">2</th>\r\n                                                <td>Jacob</td>\r\n                                                <td>Thornton</td>\r\n                                                <td>5.1.2.9</td>\r\n                                                <td>Connected</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th scope=\"row\">3</th>\r\n                                                <td>Larry</td>\r\n                                                <td>the Bird</td>\r\n                                                <td>ab@123</td>\r\n                                                <td>Connected</td>\r\n                                            </tr> */}\r\n                                </tbody>\r\n                              </table>\r\n                              <ReactPaginate\r\n                                previousLabel={\"prev\"}\r\n                                nextLabel={\"next\"}\r\n                                breakLabel={\"...\"}\r\n                                pageCount={this.state.pages}\r\n                                marginPagesDisplayed={9}\r\n                                pageRangeDisplayed={9}\r\n                                onPageChange={(e) => this.handlePageClick(e)}\r\n                                containerClassName={\"pagination\"}\r\n                                subContainerClassName={\"pages pagination\"}\r\n                                activeClassName={\"active\"}\r\n                              />\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                    )\r\n                    //     <div className=\"filter_page_table\">\r\n                    //     <table className=\"table table-striped\">\r\n                    //         <thead>\r\n                    //             <tr>\r\n                    //                 <th scope=\"col\">Sr.No.</th>\r\n                    //                 <th scope=\"col\">Profile Name</th>\r\n                    //                 <th scope=\"col\">Created At</th>\r\n                    //                 <th scope=\"col\">Status</th>\r\n                    //                 <th scope=\"col\">Action</th>\r\n                    //             </tr>\r\n                    //         </thead>\r\n                    //         <tbody>\r\n                    //             {this.createTr()}\r\n                    //         </tbody>\r\n                    //     </table>\r\n\r\n                    // </div>\r\n                  }\r\n\r\n                  {this.state.showDelete && (\r\n                    <div className=\"delete_popup\">\r\n                      <h3>Are you sure ?</h3>\r\n                      <span\r\n                        className=\"pointer dltbtn\"\r\n                        onClick={(e) => this.deletepopupClick(e)}\r\n                      >\r\n                        Delete\r\n                      </span>\r\n                      <span\r\n                        className=\"pointer closebtn\"\r\n                        onClick={(e) => this.deletepopupclose(e)}\r\n                      >\r\n                        Close\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filterprofile;\r\n","import React from 'react';\r\nimport { MDBDataTable } from 'mdbreact';\r\nconst moment = require(\"moment\");\r\n\r\nconst DatatablePage = (props) => {\r\n    \r\n    const data = {\r\n        columns: [\r\n            {\r\n                label: 'Date',\r\n                field: 'date',\r\n                sort: 'asc',\r\n                width: 100\r\n            },\r\n            {\r\n                label: 'Login',\r\n                field: 'account_login',\r\n                sort: 'asc',\r\n                width: 100\r\n            },\r\n            {\r\n                label: 'Symbol',\r\n                field: 'symbol',\r\n                sort: 'asc',\r\n                width: 100\r\n            },\r\n            {\r\n                label: 'Long',\r\n                field: 'swap_long',\r\n                sort: 'asc',\r\n                width: 100\r\n            },\r\n            {\r\n                label: 'Short',\r\n                field: 'swap_short',\r\n                sort: 'asc',\r\n                width: 100\r\n            },\r\n            \r\n        ],\r\n        \r\n        rows: props.data.map(data => {\r\n            data.date = moment(data.date).format('L')\r\n            data.swap_long = Number.parseFloat(data.swap_long).toFixed(2);\r\n            data.swap_short = Number.parseFloat(data.swap_short).toFixed(2);\r\n            \r\n            return data\r\n        }\r\n            )\r\n    };\r\n    \r\n    return <MDBDataTable responsive bordered small data={data} />;\r\n}\r\nexport default DatatablePage;","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Col, Row, Label } from \"reactstrap\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport myInitObject from \"../../api\";\r\nimport DatatablePage from \"views/DatatablePage\";\r\nimport DatePicker from \"react-datepicker\";\r\nconst moment = require(\"moment\");\r\nconst Swap = () => {\r\n  const [dailySwap, setdailySwap] = useState([]);\r\n  const [loading, setloading] = useState([]);\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      if (myInitObject.responsDS === undefined) {\r\n        console.log(\"no data\");\r\n      } else {\r\n        setloading(myInitObject.fetchdailyswaps === 0 ? true : false);\r\n        setdailySwap(myInitObject.fetchdailyswaps.rows);\r\n      }\r\n    }, 1000);\r\n\r\n  }, []);\r\n\r\n  let sd = moment(startDate).format(\"DD-MM-yyyy\");\r\n  let ed = moment(endDate).format(\"DD-MM-yyyy\");\r\n  let result = dailySwap.filter((d) => {\r\n    var time = moment(d.date).format(\"DD-MM-yyyy\");\r\n    if ((sd === 'Invalid date' && ed === 'Invalid date')) {\r\n      return dailySwap\r\n    }\r\n    else if ((sd !== 'Invalid date' && ed === 'Invalid date')) {\r\n      return (time >= sd)\r\n    }\r\n    else if ((sd === 'Invalid date' && ed !== 'Invalid date')) {\r\n      return (time <= ed)\r\n    }\r\n    if (time >= sd && time <= ed) {\r\n      return d;\r\n    }\r\n    //  return (sd <= time && time <= ed);\r\n  });\r\n\r\n  console.log(sd, ed, result, \"/////////\");\r\n  return (\r\n    <Container fluid>\r\n      <div className=\"pad-y\">\r\n        <div className=\"symbol-box\" style={{ marginBottom: \"20px\" }}>\r\n          <div className=\"openpositions\">\r\n            <span className=\"p-text\">Daily Swaps</span>\r\n          </div>\r\n        </div>\r\n        {loading ? (\r\n          <Loader\r\n            type=\"ThreeDots\"\r\n            color=\"black\"\r\n            height={100}\r\n            width={100}\r\n            style={{ textAlign: \"center\" }}\r\n          />\r\n        ) : (\r\n            <div className=\"symbol-box\">\r\n              <Row>\r\n                <Col md={12} className=\"filter-date\">\r\n                  <Label>Start Date</Label>\r\n                  <DatePicker\r\n                    selected={startDate}\r\n                    onChange={(date) => setStartDate(date)}\r\n                    selectsStart\r\n                    placeholderText=\"mm-dd-yyyy\"\r\n                    dateFormat=\"MM-dd-yyyy\"\r\n                    startDate={startDate}\r\n                    endDate={endDate}\r\n                    />\r\n                    <Label>End Date</Label>\r\n                  <DatePicker\r\n                    selected={endDate}\r\n                    onChange={(date) => setEndDate(date)}\r\n                    selectsEnd\r\n                    placeholderText=\"mm-dd-yyyy\"\r\n                    dateFormat=\"MM-dd-yyyy\"\r\n                    startDate={startDate}\r\n                    endDate={endDate}\r\n                    minDate={startDate}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <DatatablePage data={result} />\r\n              {/* <select onChange={(e) => setSortType(e.target.value)}>\r\n              <option value=\"default\">Select Order</option>\r\n              <option value=\"date\">Date</option>\r\n              <option value=\"account_login\">Login</option>\r\n              <option value=\"symbol\">Symbol</option>\r\n              <option value=\"swap_long\">Swap Long</option>\r\n              <option value=\"swap_short\">Swap Short</option>\r\n            </select>\r\n            <table className=\"table table-responsive table-bordered border-bottom-0 align-th\">\r\n              <thead>\r\n                <tr className=\"text-center thUnset\">\r\n                  <th>Date</th>\r\n                  <th>Login</th>\r\n                  <th>Symbol</th>\r\n                  <th>Long</th>\r\n                  <th>Short</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {dailySwap.length === 0 ? (\r\n                  <tr className=\"text-center\">\r\n                    <td colSpan=\"5\">No Data</td>\r\n                  </tr>\r\n                ) : (\r\n                  dailySwap.map((item) => (\r\n                    <tr key={item.id} className=\"text-center\">\r\n                      <td>\r\n                        {moment(item.date).utc().format(\"DD-MM-YYYY HH:mm:ss\")}\r\n                      </td>\r\n                      <td>{item.account_login}</td>\r\n                      <td>{item.symbol}</td>\r\n                      <td\r\n                        style={{\r\n                          color: `${item.swap_long > 0 ? \"green\" : \"red\"}`,\r\n                        }}\r\n                      >\r\n                        <NumberFormat\r\n                          value={item.swap_long}\r\n                          displayType={\"text\"}\r\n                          thousandSeparator={true}\r\n                          decimalScale={2}\r\n                        />\r\n                      </td>\r\n                      <td\r\n                        style={{\r\n                          color: `${item.swap_short > 0 ? \"green\" : \"red\"}`,\r\n                        }}\r\n                      >\r\n                        <NumberFormat\r\n                          value={item.swap_short}\r\n                          displayType={\"text\"}\r\n                          thousandSeparator={true}\r\n                          decimalScale={2}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                )}\r\n              </tbody>\r\n            </table> */}\r\n            </div>\r\n          )}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Swap;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { Collapse } from \"reactstrap\";\r\nimport TableList from \"../TableList\";\r\nimport config from \"../../constant/config.js\";\r\nimport DatatablePage from \"../DatatablePage\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { api } from \"../../api\";\r\nimport myInitObject from \"../../api\";\r\nconst axios = require(\"axios\");\r\nconst moment = require(\"moment\");\r\nlet dataTOtalcloseFrom = {\r\n  comissionTotal: 0,\r\n  lotsTotal: 0,\r\n  profitTotal: 0,\r\n  swapTotal: 0,\r\n};\r\nlet dataTotalClosetTo = {\r\n  comissionTotal: 0,\r\n  lotsTotal: 0,\r\n  profitTotal: 0,\r\n  swapTotal: 0,\r\n};\r\nlet dataTOtalOpenTo = {\r\n  comissionTotal: 0,\r\n  lotsTotal: 0,\r\n  profitTotal: 0,\r\n  swapTotal: 0,\r\n};\r\nlet dataTOtalOpenFrom = {\r\n  comissionTotal: 0,\r\n  lotsTotal: 0,\r\n  profitTotal: 0,\r\n  swapTotal: 0,\r\n};\r\nexport default function Calculating(props) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen);\r\n    setIsOpen2(false);\r\n    setIsOpen3(false);\r\n  };\r\n  const [isOpen2, setIsOpen2] = useState(true);\r\n  const [errormassage, setIErrormassage] = useState(false);\r\n  const toggle2 = () => {\r\n    setIsOpen2(!isOpen2);\r\n    setIsOpen(false);\r\n    setIsOpen3(false);\r\n  };\r\n  const [isOpen3, setIsOpen3] = useState(false);\r\n  const toggle3 = () => {\r\n    setIsOpen3(!isOpen3);\r\n    setIsOpen(false);\r\n    setIsOpen2(false);\r\n  };\r\n\r\n  const [fromAccountId, setFromAccountId] = useState(\"\");\r\n  const [toAccountId, setToAccountId] = useState(\"\");\r\n  const [fromOpenTrade, setFromOpenTrade] = useState([]);\r\n  const [toOpenTrade, setToOpenTrade] = useState([]);\r\n  const [fromHistoryTrade, setFromHistoryTrade] = useState([]);\r\n  const [toHistoryTrade, setToHistoryTrade] = useState([]);\r\n  const [commissionDetails, setCommissionDetails] = useState([]);\r\n  const [openTotal, setopenTotal] = useState();\r\n  const [historyTotal, sethistoryTotal] = useState();\r\n  const [totalOpenAndHistory, settotalOpenAndHistory] = useState();\r\n  const [commissionValue, setCommissionValue] = useState({});\r\n  const [dateTime, setdateTime] = useState(\"\");\r\n  const [customSwap, setcustomSwap] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [allHistoryRecord, setallHistoryRecord] = useState([]);\r\n  const [activeProfileName, setactiveProfileName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      if (\r\n        (myInitObject.responsLUT &&\r\n          myInitObject.responsCOT &&\r\n          myInitObject.responsCHT &&\r\n          myInitObject.responsCC &&\r\n          myInitObject.responsHT &&\r\n          myInitObject.responsAF) === undefined\r\n      ) {\r\n        console.log(\"no data\");\r\n      } else {\r\n        //calculate open Trade\r\n        setIErrormassage(\r\n          myInitObject.calculatingOpenTrade === 0 ? !errormassage : false\r\n        );\r\n        setFromAccountId(\r\n          myInitObject.calculatingOpenTrade.rows.accountFromInfo[0]\r\n        );\r\n        setToAccountId(myInitObject.calculatingOpenTrade.rows.accountToInfo[0]);\r\n        setFromOpenTrade(myInitObject.calculatingOpenTrade.fromOpenOrderInfo);\r\n        setToOpenTrade(myInitObject.calculatingOpenTrade.toOpenOrderInfo);\r\n        setopenTotal(myInitObject.calculatingOpenTrade.totalOfOpenOrder);\r\n        //calculate history trade\r\n        setLoading(myInitObject.calculatingHistoryTrade ? false : true);\r\n        setFromHistoryTrade(\r\n          myInitObject.calculatingHistoryTrade.fromHistoryOrderInfo\r\n        );\r\n        setToHistoryTrade(\r\n          myInitObject.calculatingHistoryTrade.toHistoryOrderInfo\r\n        );\r\n        setcustomSwap(myInitObject.calculatingHistoryTrade.customSwapTable);\r\n        sethistoryTotal(\r\n          myInitObject.calculatingHistoryTrade.totalOfHistoryOrder\r\n        );\r\n        setCommissionDetails(\r\n          myInitObject.calculatingHistoryTrade.newCommissionRecord\r\n        );\r\n        //calculate commission\r\n        setCommissionValue(myInitObject.calculatingCommission);\r\n        //last update time\r\n        setdateTime(myInitObject.fetchLastUpdatedTime.filteredInfoTime);\r\n        //fetch all history trade\r\n        setallHistoryRecord(myInitObject.fetchAllHistoryTrade.rows);\r\n        //fetch status data\r\n        setactiveProfileName(\r\n          myInitObject.fetchActivefilterdata.rows[0].profile_name\r\n        );\r\n      }\r\n    }, 1000);\r\n    // fetchLastUpdatedTime()\r\n    // let fromAccountId;\r\n    // let toAccountId;\r\n    // let fromOpenTrade;\r\n    // let toOpenTrade;\r\n    // let fromHistoryTrade;\r\n    // let toHistoryTrade;\r\n    // let openTotal;\r\n    // let historyTotal;\r\n    // let commissionDetails;\r\n    // let customSwap;\r\n    // axios.get(config.baseurl + '/profilepositions/calculatingOpenTrade')\r\n    //     .then(function (response) {\r\n    //         console.log(response, \"response -------------->\")\r\n    //         if (response.status == 200) {\r\n    //             if (response.data.rows == 0) {\r\n\r\n    //                 setIErrormassage((!errormassage));\r\n\r\n    //             }\r\n    //             fromAccountId = response.data.rows.accountFromInfo[0];\r\n    //             toAccountId = response.data.rows.accountToInfo[0];\r\n    //             fromOpenTrade = response.data.fromOpenOrderInfo;\r\n    //             // fromOpenTrade.map((data) => {\r\n\r\n    //             //     data.open_time = moment(data.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')\r\n    //             // })\r\n\r\n    //             toOpenTrade = response.data.toOpenOrderInfo;\r\n    //             // toOpenTrade.map((data) => {\r\n    //             //     data.open_time = moment(data.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')\r\n    //             // })\r\n    //             // openTotal = response.data.totalOfOpenOrder;\r\n\r\n    //             axios.get(config.baseurl + '/profilepositions/calculatingHistoryTrade')\r\n    //                 .then(function (response) {\r\n\r\n    //                     if (response.status == 200) {\r\n    //                         setLoading(false)\r\n    //                         fromHistoryTrade = response.data.fromHistoryOrderInfo;\r\n    //                         toHistoryTrade = response.data.toHistoryOrderInfo;\r\n    //                         customSwap = response.data.customSwapTable\r\n\r\n    //                         console.log(toHistoryTrade, \"toHistoryTrade =========>\")\r\n    //                         // fromHistoryTrade.map((data) => {\r\n\r\n    //                         //     data.open_time = moment(data.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')\r\n    //                         //     data.close_time = moment(data.close_time).utc().format('DD-MM-YYYY  HH:mm:ss')\r\n\r\n    //                         // })\r\n\r\n    //                         // toHistoryTrade.map((data) => {\r\n    //                         //     data.open_time = moment(data.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')\r\n    //                         //     data.close_time = moment(data.close_time).utc().format('DD-MM-YYYY  HH:mm:ss')\r\n\r\n    //                         // })\r\n    //                         historyTotal = response.data.totalOfHistoryOrder;\r\n    //                         commissionDetails = response.data.newCommissionRecord\r\n\r\n    //                         axios.get(config.baseurl + '/profilepositions/calculatingCommission')\r\n    //                             .then(function (response) {\r\n\r\n    //                                 if (response.status == 200) {\r\n    //                                     // console.log(\"jhkfkjjkldwkjdwjkdwkbdwjhkwirvbwjh\");\r\n    //                                     setFromAccountId(fromAccountId);\r\n    //                                     setToAccountId(toAccountId);\r\n    //                                     setFromOpenTrade(fromOpenTrade);\r\n    //                                     setToOpenTrade(toOpenTrade);\r\n    //                                     setFromHistoryTrade(fromHistoryTrade);\r\n    //                                     setToHistoryTrade(toHistoryTrade);\r\n    //                                     setCommissionDetails(commissionDetails);\r\n    //                                     setopenTotal(openTotal);\r\n    //                                     sethistoryTotal(historyTotal);\r\n    //                                     settotalOpenAndHistory(historyTotal + openTotal + response.data.commission);\r\n    //                                     setCommissionValue(response.data);\r\n    //                                     setcustomSwap(customSwap)\r\n\r\n    //                                 }\r\n\r\n    //                             })\r\n    //                             .catch(function (error) {\r\n    //                             });\r\n    //                     }\r\n    //                 })\r\n    //                 .catch(function (error) {\r\n    //                 });\r\n    //         }\r\n    //     })\r\n    //     .catch(function (error) {\r\n    //     });\r\n  }, []);\r\n  // const fetchLastUpdatedTime = () => {\r\n  //     let self = this;\r\n  //     axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\r\n  //         .then(function (response) {\r\n  //             if (response.status == 200) {\r\n  //                 setdateTime(response.data.filteredInfoTime)\r\n  //                 // console.log(self.state.dataOpenTrade.accountFromInfo,\"outyfjhkjh\");\r\n  //             }\r\n  //         });\r\n  // }\r\n  let total = { openTotal } + { historyTotal };\r\n\r\n  let openFromOrderTotal = 0;\r\n  const fromOpenTradeTr = () => {\r\n    //1//\r\n    let lotsTotal = 0;\r\n    // let open_Total = 0;\r\n    let comissionTotal = 0;\r\n    let profitTotal = 0;\r\n    let swapTotal = 0;\r\n    let contractSizeTotal = 0;\r\n    let openpricetotal = 0;\r\n    // console.log(fromOpenTrade, '1==================<>');\r\n    return (\r\n      fromOpenTrade.length > 0 &&\r\n      fromOpenTrade.map((item, index) => {\r\n        // customSwap.map((data) => {\r\n\r\n        //     if (data.account_id == item.account_id) {\r\n        //         item.swap = item.swap + data.open_value\r\n        //     }\r\n        // })\r\n        lotsTotal += item.lots;\r\n        comissionTotal += item.commission;\r\n        profitTotal += item.profit;\r\n        openFromOrderTotal = comissionTotal + profitTotal + swapTotal;\r\n        contractSizeTotal += item.contract_size;\r\n        openpricetotal += item.open_price;\r\n        swapTotal += item.swap;\r\n        // console.log(openOrderTotal,'openOrderTotal----------');\r\n        {\r\n          /* open_time,type,symbol,lot,contract_size,open_price,commission,swap,profit */\r\n        }\r\n        if (index == fromOpenTrade.length - 1) {\r\n          let a = {\r\n            lotsTotal: lotsTotal,\r\n            comissionTotal: comissionTotal,\r\n            profitTotal: profitTotal,\r\n            swapTotal: swapTotal,\r\n          };\r\n          dataTOtalOpenFrom = a;\r\n          // console.log(dataTOtalOpenFrom, 'data==========>>>>');\r\n          return (\r\n            <>\r\n              <tr\r\n                key={index}\r\n                className=\" text-center\"\r\n                style={{\r\n                  background:\r\n                    item.order_type == 0\r\n                      ? \"rgb(189 179 179 / 43%)\"\r\n                      : item.order_type == 1\r\n                      ? \"rgb(181 178 178 / 21%)\"\r\n                      : \" \",\r\n                }}\r\n              >\r\n                <td className=\"text-center colorDarkBlue no-padding \">\r\n                  {fromAccountId.login}\r\n                </td>\r\n                <td>\r\n                  {moment(item.open_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\r\n                </td>\r\n                <td>\r\n                  {item.order_type == 0\r\n                    ? \"BUY\"\r\n                    : item.order_type == 1\r\n                    ? \"SELL\"\r\n                    : \"\"}\r\n                </td>\r\n                <td>{item.symbol}</td>\r\n                <td>{item.lots}</td>\r\n                <td>\r\n                  {item.order_type == 0\r\n                    ? item.lots * item.contract_size\r\n                    : item.order_type == 1\r\n                    ? -item.lots * item.contract_size\r\n                    : item.lots * item.contract_size}\r\n                </td>\r\n                <td>{item.open_price}</td>\r\n                <td>{item.commission !== 0 ? item.commission : \"\"}</td>\r\n                <td>{item.swap !== 0 ? item.swap : \"\"}</td>\r\n                {/* <td>{item.magic_number !== 0 ? item.magic_number : ''}</td> */}\r\n                <td>\r\n                  {item.profit}\r\n                  {/* {item.margin_currency} */}\r\n                </td>\r\n              </tr>\r\n              <tr className=\"text-center\" key={index + 1}>\r\n                <td className=\"buycolor\">\r\n                  <b>Total Buy Positions</b>\r\n                </td>\r\n                <td></td>\r\n\r\n                <td></td>\r\n                <td></td>\r\n                <td>\r\n                  <b>{lotsTotal.toFixed(2)}</b>\r\n                </td>\r\n                <td></td>\r\n                <td> </td>\r\n                <td>\r\n                  <b>{comissionTotal.toFixed(2)}</b>\r\n                </td>\r\n                <td>\r\n                  <b>{swapTotal.toFixed(2)}</b>\r\n                </td>\r\n\r\n                <td>\r\n                  <b>{profitTotal.toFixed(2)}</b>\r\n                </td>\r\n              </tr>\r\n            </>\r\n          );\r\n        } else {\r\n          return (\r\n            <tr\r\n              key={index}\r\n              className=\"text-center\"\r\n              style={{\r\n                background:\r\n                  item.order_type == 0\r\n                    ? \"rgb(189 179 179 / 43%)\"\r\n                    : item.order_type == 1\r\n                    ? \"rgb(181 178 178 / 21%)\"\r\n                    : \" \",\r\n              }}\r\n            >\r\n              <td className=\"text-center colorDarkBlue no-padding \">\r\n                {fromAccountId.login}\r\n              </td>\r\n\r\n              <td>\r\n                {moment(item.open_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\r\n              </td>\r\n              <td>\r\n                {item.order_type == 0\r\n                  ? \"BUY\"\r\n                  : item.order_type == 1\r\n                  ? \"SELL\"\r\n                  : \"\"}\r\n              </td>\r\n              <td>{item.symbol}</td>\r\n              <td>{item.lots}</td>\r\n              <td>\r\n                {item.order_type == 0\r\n                  ? item.lots * item.contract_size\r\n                  : item.order_type == 1\r\n                  ? -item.lots * item.contract_size\r\n                  : item.lots * item.contract_size}\r\n              </td>\r\n              <td>{item.open_price}</td>\r\n              <td>{item.commission !== 0 ? item.commission : \"\"}</td>\r\n              <td>{item.swap !== 0 ? item.swap : \"\"}</td>\r\n              {/* <td>{item.magic_number !== 0 ? item.magic_number : ''}</td> */}\r\n              <td>\r\n                {item.profit}\r\n                {/* {item.margin_currency} */}\r\n              </td>\r\n            </tr>\r\n          );\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  let openFromHistoryTotal;\r\n  const fromHistoryTradeTr = () => {\r\n    //2//\r\n    let lotsTotal = 0;\r\n    let comissionTotal = 0;\r\n    let profitTotal = 0;\r\n    let swapTotal = 0;\r\n    let contractSizeTotal = 0;\r\n    let openpricetotal = 0;\r\n    let closepricetotal = 0;\r\n    // console.log(fromHistoryTrade, '2==================<>');\r\n    return (\r\n      fromHistoryTrade.length > 0 &&\r\n      fromHistoryTrade.map((item, index) => {\r\n        // customSwap.map((data) => {\r\n\r\n        //     if (data.account_id == item.account_id) {\r\n        //         item.swap = item.swap + data.open_value\r\n        //     }\r\n        // })\r\n\r\n        lotsTotal += item.lots;\r\n        comissionTotal += item.commission;\r\n        profitTotal += item.profit;\r\n        swapTotal += item.swap;\r\n        openFromHistoryTotal = comissionTotal + profitTotal + swapTotal;\r\n        contractSizeTotal += item.contract_size;\r\n        openpricetotal += item.open_price;\r\n        closepricetotal += item.close_price;\r\n\r\n        if (index == fromHistoryTrade.length - 1) {\r\n          let a = {\r\n            lotsTotal: lotsTotal,\r\n            comissionTotal: comissionTotal,\r\n            profitTotal: profitTotal,\r\n            swapTotal: swapTotal,\r\n          };\r\n          dataTOtalcloseFrom = a;\r\n          // console.log(dataTOtalcloseFrom, 'data2==========>>>>');\r\n          return (\r\n            <>\r\n              <tr\r\n                key={index}\r\n                className=\"text-center\"\r\n                style={{\r\n                  background:\r\n                    item.order_type == 0\r\n                      ? \"rgb(189 179 179 / 43%)\"\r\n                      : item.order_type == 1\r\n                      ? \"rgb(181 178 178 / 21%)\"\r\n                      : \" \",\r\n                }}\r\n              >\r\n                <td className=\"text-center colorDarkBlue no-padding\">\r\n                  {fromAccountId.login}\r\n                </td>\r\n                <td>\r\n                  {moment(item.open_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\r\n                </td>\r\n                <td>\r\n                  {item.order_type == 0\r\n                    ? \"BUY\"\r\n                    : item.order_type == 1\r\n                    ? \"SELL\"\r\n                    : \"\"}\r\n                </td>\r\n                <td>{item.symbol}</td>\r\n                <td>{item.lots}</td>\r\n                <td>\r\n                  {item.order_type == 0\r\n                    ? item.lots * item.contract_size\r\n                    : item.order_type == 1\r\n                    ? -item.lots * item.contract_size\r\n                    : item.lots * item.contract_size}\r\n                </td>\r\n                <td>{item.open_price}</td>\r\n                <td>\r\n                  {moment(item.close_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\r\n                </td>\r\n                <td>{item.close_price}</td>\r\n\r\n                <td>{item.commission !== 0 ? item.commission : \"\"}</td>\r\n                <td>{item.swap !== 0 ? item.swap : \"\"}</td>\r\n                <td>\r\n                  {item.profit}\r\n                  {/* {item.margin_currency} */}\r\n                </td>\r\n              </tr>\r\n              <tr className=\"text-center\" key={index + 1}>\r\n                <td className=\"buycolor\">\r\n                  <b>Total Buy Positions</b>\r\n                </td>\r\n                <td></td>\r\n\r\n                <td></td>\r\n                <td></td>\r\n                <td>\r\n                  <b>{lotsTotal.toFixed(2)}</b>\r\n                </td>\r\n                <td></td>\r\n\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n\r\n                <td>\r\n                  <b>{comissionTotal.toFixed(2)}</b>\r\n                </td>\r\n                <td>\r\n                  <b>{swapTotal.toFixed(2)}</b>\r\n                </td>\r\n                {/* <td></td> */}\r\n\r\n                <td>\r\n                  <b>{profitTotal.toFixed(2)}</b>\r\n                </td>\r\n              </tr>\r\n            </>\r\n          );\r\n        } else {\r\n          return (\r\n            <tr\r\n              key={index}\r\n              className=\"text-center\"\r\n              style={{\r\n                background:\r\n                  item.order_type == 0\r\n                    ? \"rgb(189 179 179 / 43%)\"\r\n                    : item.order_type == 1\r\n                    ? \"rgb(181 178 178 / 21%)\"\r\n                    : \" \",\r\n              }}\r\n            >\r\n              <td className=\"text-center colorDarkBlue no-padding\">\r\n                {fromAccountId.login}\r\n              </td>\r\n\r\n              <td>\r\n                {moment(item.open_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\r\n              </td>\r\n              <td>\r\n                {item.order_type == 0\r\n                  ? \"BUY\"\r\n                  : item.order_type == 1\r\n                  ? \"SELL\"\r\n                  : \"\"}\r\n              </td>\r\n              <td>{item.symbol}</td>\r\n              <td>{item.lots}</td>\r\n              <td>\r\n                {item.order_type == 0\r\n                  ? item.lots * item.contract_size\r\n                  : item.order_type == 1\r\n                  ? -item.lots * item.contract_size\r\n                  : item.lots * item.contract_size}\r\n              </td>\r\n              <td>{item.open_price}</td>\r\n              <td>\r\n                {moment(item.close_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\r\n              </td>\r\n              <td>{item.close_price}</td>\r\n\r\n              <td>{item.commission !== 0 ? item.commission : \"\"}</td>\r\n              <td>{item.swap !== 0 ? item.swap : \"\"}</td>\r\n\r\n              <td>\r\n                {item.profit}\r\n                {/* {item.margin_currency} */}\r\n              </td>\r\n            </tr>\r\n          );\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  let openToOrderTotal;\r\n  const toOpenTradeTr = () => {\r\n    //3//\r\n    let lotsTotal = 0;\r\n    let comissionTotal = 0;\r\n    let profitTotal = 0;\r\n    let swapTotal = 0;\r\n    let contractSizeTotal = 0;\r\n    let openpricetotal = 0;\r\n    // console.log(toOpenTrade, '3==================<>');\r\n    return (\r\n      toOpenTrade.length > 0 &&\r\n      toOpenTrade.map((item, index) => {\r\n        lotsTotal += item.lots;\r\n        comissionTotal += item.commission;\r\n        profitTotal += item.profit;\r\n        swapTotal += item.swap;\r\n        openToOrderTotal = comissionTotal + profitTotal + swapTotal;\r\n        contractSizeTotal += item.contract_size;\r\n        openpricetotal += item.open_price;\r\n        if (index == toOpenTrade.length - 1) {\r\n          let a = {\r\n            lotsTotal: lotsTotal,\r\n            comissionTotal: comissionTotal,\r\n            profitTotal: profitTotal,\r\n            swapTotal: swapTotal,\r\n          };\r\n          dataTOtalOpenTo = a;\r\n          // console.log(dataTOtalOpenTo, 'data3==========>>>>');\r\n          return (\r\n            <>\r\n              <tr\r\n                key={index}\r\n                className=\"text-center\"\r\n                style={{\r\n                  background:\r\n                    item.order_type == 0\r\n                      ? \"rgb(189 179 179 / 43%)\"\r\n                      : item.order_type == 1\r\n                      ? \"rgb(181 178 178 / 21%)\"\r\n                      : \" \",\r\n                }}\r\n              >\r\n                <td className=\"text-center color2 no-padding\">\r\n                  {toAccountId.login}\r\n                </td>\r\n                <td>\r\n                  {moment(item.open_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\r\n                </td>\r\n                <td>\r\n                  {item.order_type == 0\r\n                    ? \"BUY\"\r\n                    : item.order_type == 1\r\n                    ? \"SELL\"\r\n                    : \"\"}\r\n                </td>\r\n                <td>{item.symbol}</td>\r\n                <td>{item.lots}</td>\r\n                <td>\r\n                  {item.order_type == 0\r\n                    ? item.lots * item.contract_size\r\n                    : item.order_type == 1\r\n                    ? -item.lots * item.contract_size\r\n                    : item.lots * item.contract_size}\r\n                </td>\r\n                <td>{item.open_price}</td>\r\n                <td>{item.commission !== 0 ? item.commission : \"\"}</td>\r\n                <td>{item.swap !== 0 ? item.swap : \"\"}</td>\r\n                {/* <td>{item.magic_number !== 0 ? item.magic_number : ''}</td> */}\r\n                <td>\r\n                  {item.profit}\r\n                  {/* {item.margin_currency} */}\r\n                </td>\r\n              </tr>\r\n              <tr className=\"text-center\" key={index + 1}>\r\n                <td className=\"sellcolor\">\r\n                  <b>Total Sell Positions</b>\r\n                </td>\r\n                <td></td>\r\n\r\n                <td></td>\r\n                <td></td>\r\n                <td>\r\n                  <b>{lotsTotal.toFixed(2)}</b>\r\n                </td>\r\n                <td></td>\r\n\r\n                <td> </td>\r\n                <td>\r\n                  <b>{comissionTotal.toFixed(2)}</b>\r\n                </td>\r\n                <td>\r\n                  <b>{swapTotal.toFixed(2)}</b>\r\n                </td>\r\n\r\n                <td>\r\n                  <b>{profitTotal.toFixed(2)}</b>\r\n                </td>\r\n              </tr>\r\n            </>\r\n          );\r\n        } else {\r\n          return (\r\n            <tr\r\n              key={index}\r\n              className=\"text-center\"\r\n              style={{\r\n                background:\r\n                  item.order_type == 0\r\n                    ? \"rgb(189 179 179 / 43%)\"\r\n                    : item.order_type == 1\r\n                    ? \"rgb(181 178 178 / 21%)\"\r\n                    : \" \",\r\n              }}\r\n            >\r\n              <td className=\"text-center color2 no-padding\">\r\n                {toAccountId.login}\r\n              </td>\r\n\r\n              <td>\r\n                {moment(item.open_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\r\n              </td>\r\n              <td>\r\n                {item.order_type == 0\r\n                  ? \"BUY\"\r\n                  : item.order_type == 1\r\n                  ? \"SELL\"\r\n                  : \"\"}\r\n              </td>\r\n              <td>{item.symbol}</td>\r\n              <td>{item.lots}</td>\r\n              <td>\r\n                {item.order_type == 0\r\n                  ? item.lots * item.contract_size\r\n                  : item.order_type == 1\r\n                  ? -item.lots * item.contract_size\r\n                  : item.lots * item.contract_size}\r\n              </td>\r\n              <td>{item.open_price}</td>\r\n              <td>{item.commission !== 0 ? item.commission : \"\"}</td>\r\n              <td>{item.swap !== 0 ? item.swap : \"\"}</td>\r\n              {/* <td>{item.magic_number !== 0 ? item.magic_number : ''}</td> */}\r\n              <td>\r\n                {item.profit}\r\n                {/* {item.margin_currency} */}\r\n              </td>\r\n            </tr>\r\n          );\r\n        }\r\n      })\r\n    );\r\n  };\r\n  let openToHistoryTotal;\r\n  const toHistoryTradeTr = () => {\r\n    //4//\r\n    let lotsTotal = 0;\r\n    let comissionTotal = 0;\r\n    let profitTotal = 0;\r\n    let swapTotal = 0;\r\n    let contractSizeTotal = 0;\r\n    let openpricetotal = 0;\r\n    let closepricetotal = 0;\r\n    // console.log(toHistoryTrade, '4==================<>');\r\n    return (\r\n      toHistoryTrade.length > 0 &&\r\n      toHistoryTrade.map((item, index) => {\r\n        // customSwap.map((data) => {\r\n\r\n        //     if (data.account_id == item.account_id) {\r\n        //         item.swap = item.swap + data.open_value\r\n        //     }\r\n        // })\r\n        lotsTotal += item.lots;\r\n        comissionTotal += item.commission;\r\n        profitTotal += item.profit;\r\n        swapTotal += item.swap;\r\n        openToHistoryTotal = comissionTotal + profitTotal + swapTotal;\r\n        contractSizeTotal += item.contract_size;\r\n        openpricetotal += item.open_price;\r\n        closepricetotal += item.close_price;\r\n        if (index == toHistoryTrade.length - 1) {\r\n          let a = {\r\n            lotsTotal: lotsTotal,\r\n            comissionTotal: comissionTotal,\r\n            profitTotal: profitTotal,\r\n            swapTotal: swapTotal,\r\n          };\r\n          dataTotalClosetTo = a;\r\n          // console.log(dataTotalClosetTo, 'data4==========>>>>');\r\n          return (\r\n            <>\r\n              <tr\r\n                key={index}\r\n                className=\"text-center\"\r\n                style={{\r\n                  background:\r\n                    item.order_type == 0\r\n                      ? \"rgb(189 179 179 / 43%)\"\r\n                      : item.order_type == 1\r\n                      ? \"rgb(181 178 178 / 21%)\"\r\n                      : \" \",\r\n                }}\r\n              >\r\n                <td className=\"text-center color2 no-padding\">\r\n                  {toAccountId.login}\r\n                </td>\r\n                <td>\r\n                  {moment(item.open_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\r\n                </td>\r\n                <td>\r\n                  {item.order_type == 0\r\n                    ? \"BUY\"\r\n                    : item.order_type == 1\r\n                    ? \"SELL\"\r\n                    : \"\"}\r\n                </td>\r\n                <td>{item.symbol}</td>\r\n                <td>{item.lots}</td>\r\n                <td>\r\n                  {item.order_type == 0\r\n                    ? item.lots * item.contract_size\r\n                    : item.order_type == 1\r\n                    ? -item.lots * item.contract_size\r\n                    : item.lots * item.contract_size}\r\n                </td>\r\n                <td>{item.open_price}</td>\r\n                <td>\r\n                  {moment(item.close_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\r\n                </td>\r\n                <td>{item.close_price}</td>\r\n\r\n                <td>{item.commission !== 0 ? item.commission : \"\"}</td>\r\n                <td>{item.swap !== 0 ? item.swap : \"\"}</td>\r\n\r\n                <td>\r\n                  {item.profit}\r\n                  {/* {item.margin_currency} */}\r\n                </td>\r\n              </tr>\r\n              <tr className=\"text-center\" key={index + 1}>\r\n                <td className=\"sellcolor\">\r\n                  <b>Total Sell Positions</b>\r\n                </td>\r\n                <td></td>\r\n\r\n                <td></td>\r\n                <td></td>\r\n                <td>\r\n                  <b>{lotsTotal.toFixed(2)}</b>\r\n                </td>\r\n                <td></td>\r\n\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n\r\n                <td>\r\n                  <b>{comissionTotal.toFixed(2)}</b>\r\n                </td>\r\n                <td>\r\n                  <b>{swapTotal.toFixed(2)}</b>\r\n                </td>\r\n                {/* <td></td> */}\r\n\r\n                <td>\r\n                  <b>{profitTotal.toFixed(2)}</b>\r\n                </td>\r\n              </tr>\r\n            </>\r\n          );\r\n        } else {\r\n          return (\r\n            <tr\r\n              key={index}\r\n              className=\"text-center\"\r\n              style={{\r\n                background:\r\n                  item.order_type == 0\r\n                    ? \"rgb(189 179 179 / 43%)\"\r\n                    : item.order_type == 1\r\n                    ? \"rgb(181 178 178 / 21%)\"\r\n                    : \" \",\r\n              }}\r\n            >\r\n              <td className=\"text-center color2 no-padding\">\r\n                {toAccountId.login}\r\n              </td>\r\n\r\n              <td>\r\n                {moment(item.open_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\r\n              </td>\r\n              <td>\r\n                {item.order_type == 0\r\n                  ? \"BUY\"\r\n                  : item.order_type == 1\r\n                  ? \"SELL\"\r\n                  : \"\"}\r\n              </td>\r\n              <td>{item.symbol}</td>\r\n              <td>{item.lots}</td>\r\n              <td>\r\n                {item.order_type == 0\r\n                  ? item.lots * item.contract_size\r\n                  : item.order_type == 1\r\n                  ? -item.lots * item.contract_size\r\n                  : item.lots * item.contract_size}{\" \"}\r\n              </td>\r\n              <td>{item.open_price}</td>\r\n              <td>\r\n                {moment(item.close_time).utc().format(\"DD-MM-YYYY  HH:mm:ss\")}\r\n              </td>\r\n              <td>{item.close_price}</td>\r\n\r\n              <td>{item.commission !== 0 ? item.commission : \"\"}</td>\r\n              <td>{item.swap !== 0 ? item.swap : \"\"}</td>\r\n              <td>\r\n                {item.profit}\r\n                {/* {item.margin_currency} */}\r\n              </td>\r\n            </tr>\r\n          );\r\n        }\r\n      })\r\n    );\r\n  };\r\n  let fromclosedata = fromHistoryTrade.map((data) => {\r\n    return data;\r\n  });\r\n  let fromopendata = fromOpenTrade.map((data) => {\r\n    return data;\r\n  });\r\n  let toclosedata = toHistoryTrade.map((data) => {\r\n    return data;\r\n  });\r\n  let toopendata = toOpenTrade.map((data) => {\r\n    return data;\r\n  });\r\n  let newData = [\r\n    ...fromclosedata,\r\n    ...fromopendata,\r\n    ...toclosedata,\r\n    ...toopendata,\r\n  ];\r\n  newData = newData.sort(\r\n    (a, b) =>\r\n      new Date(...b.open_time.split(\"/\").reverse()) -\r\n      new Date(...a.open_time.split(\"/\").reverse())\r\n  );\r\n  let newopenData = [...fromopendata, ...toopendata];\r\n  let newcloseData = [...fromclosedata, ...toclosedata];\r\n  let totalOpen = newopenData\r\n    .map((item) => {\r\n      let openProfit = 0;\r\n      return (openProfit += item.profit);\r\n    })\r\n    .reduce((a, b) => a + b, 0);\r\n  let totalClose = newcloseData\r\n    .map((item) => {\r\n      let closeProfit = 0;\r\n      return (closeProfit += item.profit);\r\n    })\r\n    .reduce((a, b) => a + b, 0);\r\n  let totalfromCloseSwap = fromclosedata.reduce((a, item) => a + item.swap, 0);\r\n  let totalfromOpenSwap = fromopendata.reduce((a, item) => a + item.swap, 0);\r\n  let totalfromCloseCommission = fromclosedata.reduce(\r\n    (a, item) => a + item.commission,\r\n    0\r\n  );\r\n  let totalfromOpenCommission = fromopendata.reduce(\r\n    (a, item) => a + item.commission,\r\n    0\r\n  );\r\n  let totaltoCloseSwap = toclosedata.reduce((a, item) => a + item.swap, 0);\r\n  let totaltoOpenSwap = toopendata.reduce((a, item) => a + item.swap, 0);\r\n  let totaltoCloseCommission = toclosedata.reduce(\r\n    (a, item) => a + item.commission,\r\n    0\r\n  );\r\n  let totaltoOpenCommission = toopendata.reduce(\r\n    (a, item) => a + item.commission,\r\n    0\r\n  );\r\n\r\n  // console.log(totalOpenCommission, totalCloseCommission, 'historyinfo===============>><');\r\n  // console.log(fromHistoryTrade, fromOpenTrade, toHistoryTrade, toOpenTrade, '5--------->');\r\n  // console.log(dataTOtalcloseFrom,\r\n  //     dataTotalClosetTo,\r\n  //     dataTOtalOpenTo,\r\n  //     dataTOtalOpenFrom, 'redata==========<<<<<<<<<<>>>>>>>>>>');\r\n  // console.log(fromAccountId, toAccountId, fromOpenTrade, toOpenTrade, fromHistoryTrade, toHistoryTrade, commissionValue, 'commissionValue');\r\n  return (\r\n    <>\r\n      {errormassage ? (\r\n        <div className=\"popup\">\r\n          <div class=\"card w-75 \">\r\n            <div class=\"card-body topmargin\">\r\n              <div class=\" card-text popuptext\" role=\"alert\">\r\n                {\" \"}\r\n                Please activate filter profile to view stats. ...\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <Row className=\"no-margin\">\r\n            <div className=\"lastUpdate\">\r\n              <span> Last Updated : </span>\r\n              {dateTime}(UTC)\r\n            </div>\r\n          </Row>\r\n          {loading ? (\r\n            <Loader\r\n              type=\"ThreeDots\"\r\n              color=\"black\"\r\n              height={100}\r\n              width={100}\r\n              style={{ textAlign: \"center\" }}\r\n            />\r\n          ) : (\r\n            <div\r\n              style={{ overflowX: \"hidden\" }}\r\n              className=\"symbol-box shadoremove\"\r\n            >\r\n              <Row>\r\n                <Col md={12}>\r\n                  <div className=\"symbol-box\" style={{ marginBottom: \"20px\" }}>\r\n                    <div className=\"openpositions\">\r\n                      <span className=\"p-text\">Block view</span>\r\n                      <span className=\"icon-style\" onClick={toggle2}>\r\n                        {isOpen2 ? (\r\n                          <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\r\n                        ) : (\r\n                          <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\r\n                        )}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <Collapse isOpen={isOpen2}>\r\n                    <div className=\"openOrder\" style={{ marginBottom: \"20px\" }}>\r\n                      <table className=\"table table-responsive table-bordered border-bottom-0 align-th custom-thin\">\r\n                        <thead>\r\n                          <tr className=\"text-center thUnset\">\r\n                            <th>Trades / Pair</th>\r\n                            <th>Date</th>\r\n                            <th>Account</th>\r\n                            <th>Direction</th>\r\n                            <th>Open Price</th>\r\n                            <th>Close Price</th>\r\n                            <th>Trade Quantity</th>\r\n                            <th>Realized P/L</th>\r\n                            <th>\r\n                              Unrealized P/L\r\n                              {/* <br /><span>L {fromOpenTrade ? fromOpenTrade[0]?.symbol : ''} = {fromOpenTrade ? fromOpenTrade[0]?.last_price : ''} </span> */}\r\n                              <br />\r\n                              <span>\r\n                                {toOpenTrade[0] && (\r\n                                  <>\r\n                                    S{\" \"}\r\n                                    {toOpenTrade ? toOpenTrade[0]?.symbol : \"\"}{\" \"}\r\n                                    ={\" \"}\r\n                                    {toOpenTrade\r\n                                      ? toOpenTrade[0]?.last_price\r\n                                      : \"\"}{\" \"}\r\n                                  </>\r\n                                )}{\" \"}\r\n                              </span>\r\n                            </th>\r\n                          </tr>\r\n                        </thead>\r\n                        {newData.length > 0 ? (\r\n                          <tbody>\r\n                            {newData.length > 0\r\n                              ? newData.map((item) => {\r\n                                  let profitTotal = 0;\r\n                                  return (\r\n                                    <tr className=\"text-center\">\r\n                                      <td>\r\n                                        {item.order_type === 0 ||\r\n                                        item.order_type === 1\r\n                                          ? item.symbol\r\n                                          : \"\"}\r\n                                      </td>\r\n                                      <td>\r\n                                        {moment(item.open_time)\r\n                                          .utc()\r\n                                          .format(\"DD-MM-YYYY  HH:mm:ss\")}\r\n                                      </td>\r\n                                      {item.account_id === toAccountId.id ? (\r\n                                        <td className=\"color2\">\r\n                                          {toAccountId.alias}\r\n                                        </td>\r\n                                      ) : (\r\n                                        \"\"\r\n                                      )}\r\n                                      {item.account_id === fromAccountId.id ? (\r\n                                        <td className=\"colorDarkBlue\">\r\n                                          {fromAccountId.alias}\r\n                                        </td>\r\n                                      ) : (\r\n                                        \"\"\r\n                                      )}\r\n                                      <td>\r\n                                        {item.order_type == 0\r\n                                          ? item.lots\r\n                                          : item.order_type == 1\r\n                                          ? \"-\" + item.lots\r\n                                          : \"\"}\r\n                                      </td>\r\n                                      <td>{item.open_price}</td>\r\n                                      <td>{item.close_price}</td>\r\n                                      <td>\r\n                                        <NumberFormat\r\n                                          value={item.lots * item.contract_size}\r\n                                          displayType={\"text\"}\r\n                                          thousandSeparator={true}\r\n                                          decimalScale={2}\r\n                                        />{\" \"}\r\n                                      </td>\r\n                                      <td>\r\n                                        {item.open_price && item.close_price\r\n                                          ? (profitTotal += item.profit)\r\n                                          : \"\"}\r\n                                      </td>\r\n                                      <td>\r\n                                        {item.open_price && item.close_price\r\n                                          ? \"\"\r\n                                          : (profitTotal += item.profit)}\r\n                                      </td>\r\n                                    </tr>\r\n                                  );\r\n                                })\r\n                              : \"\"}\r\n                            {(totalfromCloseCommission !== 0 &&\r\n                              totalfromOpenCommission !== 0) ||\r\n                            (totalfromCloseCommission !== 0 &&\r\n                              totalfromOpenCommission === 0) ||\r\n                            (totalfromCloseCommission === 0 &&\r\n                              totalfromOpenCommission !== 0) ? (\r\n                              <tr className=\"text-center\">\r\n                                <td>\r\n                                  <b>Commission</b>\r\n                                </td>\r\n                                <td></td>\r\n                                <td className=\"colorDarkBlue\">\r\n                                  {fromAccountId.alias}\r\n                                </td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td>\r\n                                  <b>{totalfromCloseCommission}</b>\r\n                                </td>\r\n                                <td>\r\n                                  <b>{totalfromOpenCommission}</b>\r\n                                </td>\r\n                              </tr>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                            {(totaltoCloseCommission !== 0 &&\r\n                              totaltoOpenCommission !== 0) ||\r\n                            (totaltoCloseCommission !== 0 &&\r\n                              totaltoOpenCommission === 0) ||\r\n                            (totaltoCloseCommission === 0 &&\r\n                              totaltoOpenCommission !== 0) ? (\r\n                              <tr className=\"text-center\">\r\n                                <td>\r\n                                  <b>\r\n                                    {totalfromCloseCommission ||\r\n                                    totalfromOpenCommission\r\n                                      ? \"\"\r\n                                      : \"Commission\"}\r\n                                  </b>\r\n                                </td>\r\n                                <td></td>\r\n                                <td className=\"color2\">{toAccountId.alias}</td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td>\r\n                                  <b>{totaltoCloseCommission}</b>\r\n                                </td>\r\n                                <td>\r\n                                  <b>{totaltoOpenCommission}</b>\r\n                                </td>\r\n                              </tr>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                            {(totalfromCloseSwap !== 0 &&\r\n                              totalfromOpenSwap !== 0) ||\r\n                            (totalfromCloseSwap !== 0 &&\r\n                              totalfromOpenSwap === 0) ||\r\n                            (totalfromCloseSwap === 0 &&\r\n                              totalfromOpenSwap !== 0) ? (\r\n                              <tr className=\"text-center\">\r\n                                <td>\r\n                                  <b>Swap</b>\r\n                                </td>\r\n                                <td></td>\r\n                                <td className=\"colorDarkBlue\">\r\n                                  {fromAccountId.alias}\r\n                                </td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td>\r\n                                  <b>{totalfromCloseSwap}</b>\r\n                                </td>\r\n                                <td>\r\n                                  <b>{totalfromOpenSwap}</b>\r\n                                </td>\r\n                              </tr>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                            {(totaltoCloseSwap !== 0 &&\r\n                              totaltoOpenSwap !== 0) ||\r\n                            (totaltoCloseSwap !== 0 && totaltoOpenSwap === 0) ||\r\n                            (totaltoCloseSwap === 0 &&\r\n                              totaltoOpenSwap !== 0) ? (\r\n                              <tr className=\"text-center\">\r\n                                <td>\r\n                                  <b>\r\n                                    {totalfromCloseSwap || totalfromOpenSwap\r\n                                      ? \"\"\r\n                                      : \"Swap\"}\r\n                                  </b>\r\n                                </td>\r\n                                <td></td>\r\n                                <td className=\"color2\">{toAccountId.alias}</td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td>\r\n                                  <b>{totaltoCloseSwap}</b>\r\n                                </td>\r\n                                <td>\r\n                                  <b>{totaltoOpenSwap}</b>\r\n                                </td>\r\n                              </tr>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                            <tr className=\"text-center\">\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td>\r\n                                <b>Trading</b>\r\n                              </td>\r\n                              <td>\r\n                                <b>{totalClose}</b>\r\n                              </td>\r\n                              <td>\r\n                                <b>{totalOpen}</b>\r\n                              </td>\r\n                            </tr>\r\n                            <tr className=\"text-center\">\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td>\r\n                                <b>Comm & Swap</b>\r\n                              </td>\r\n                              <td>\r\n                                <b>\r\n                                  {totalfromCloseSwap +\r\n                                    totaltoCloseSwap +\r\n                                    totalfromCloseCommission +\r\n                                    totaltoCloseCommission}\r\n                                </b>\r\n                              </td>\r\n                              <td>\r\n                                <b>\r\n                                  {totalfromOpenSwap +\r\n                                    totaltoOpenSwap +\r\n                                    totalfromOpenCommission +\r\n                                    totaltoOpenCommission}\r\n                                </b>\r\n                              </td>\r\n                            </tr>\r\n                            <tr className=\"text-center\">\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td></td>\r\n                              <td>\r\n                                <b>Total</b>\r\n                              </td>\r\n                              <td>\r\n                                <b>\r\n                                  <NumberFormat\r\n                                    value={historyTotal}\r\n                                    displayType={\"text\"}\r\n                                    thousandSeparator={true}\r\n                                    decimalScale={2}\r\n                                  />\r\n                                  {fromAccountId[\r\n                                    `accounts_details.currency`\r\n                                  ] === toAccountId[`accounts_details.currency`]\r\n                                    ? `  ` +\r\n                                        fromAccountId[\r\n                                          `accounts_details.currency`\r\n                                        ] ||\r\n                                      toAccountId[`accounts_details.currency`]\r\n                                    : \"\"}\r\n                                </b>\r\n                              </td>\r\n                              <td>\r\n                                <b>\r\n                                  <NumberFormat\r\n                                    value={openTotal}\r\n                                    displayType={\"text\"}\r\n                                    thousandSeparator={true}\r\n                                    decimalScale={2}\r\n                                  />\r\n                                  {fromAccountId[\r\n                                    `accounts_details.currency`\r\n                                  ] === toAccountId[`accounts_details.currency`]\r\n                                    ? `  ` +\r\n                                        fromAccountId[\r\n                                          `accounts_details.currency`\r\n                                        ] ||\r\n                                      toAccountId[`accounts_details.currency`]\r\n                                    : \"\"}\r\n                                </b>\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                        ) : (\r\n                          <tbody className=\"text-center\">\r\n                            <tr>\r\n                              <td colSpan=\"9\">No Record Found</td>\r\n                            </tr>\r\n                          </tbody>\r\n                        )}\r\n                      </table>\r\n                    </div>\r\n                    <Row style={{ marginBottom: `20px` }}>\r\n                      <Col md={12} sm={6}>\r\n                        <div\r\n                          className={\r\n                            historyTotal + openTotal >= 0\r\n                              ? \"summary-box\"\r\n                              : \"summary-box-red\"\r\n                          }\r\n                        >\r\n                          {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\r\n                          {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\r\n<span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\r\n\r\n                          <Col md={12} sm={12}>\r\n                            <div\r\n                              className=\"summary-text text-center\"\r\n                              style={{ fontWeight: 600, color: \"#797979\" }}\r\n                            >\r\n                              Unrealized & Realized P/L ({activeProfileName}){\" \"}\r\n                              {allHistoryRecord.history_info !== 0 && (\r\n                                <span> + Commission</span>\r\n                              )}{\" \"}\r\n                            </div>\r\n                          </Col>\r\n                          <Col md={12} sm={12}>\r\n                            <div\r\n                              className=\"text-center\"\r\n                              style={{ fontWeight: \"bold\", fontSize: \"18px\" }}\r\n                            >\r\n                              ${\" \"}\r\n                              <NumberFormat\r\n                                value={\r\n                                  allHistoryRecord.history_info !== undefined\r\n                                    ? historyTotal +\r\n                                      openTotal +\r\n                                      allHistoryRecord.history_info\r\n                                    : historyTotal + openTotal\r\n                                }\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                decimalScale={2}\r\n                              />\r\n                              {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\r\n                            </div>\r\n                          </Col>\r\n\r\n                          <div className=\"clearfix\"></div>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Collapse>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col md={12} sm={6}>\r\n                  <div className=\"symbol-box\" style={{ marginBottom: \"20px\" }}>\r\n                    <div className=\"openpositions\">\r\n                      <span className=\"p-text\">Table view</span>\r\n                      <span className=\"icon-style\" onClick={toggle}>\r\n                        {isOpen ? (\r\n                          <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\r\n                        ) : (\r\n                          <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\r\n                        )}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <Collapse isOpen={isOpen}>\r\n                    <div style={{ marginBottom: \"20px\" }}>\r\n                      <div>\r\n                        <div className=\"symbol-box terminal-head-box\">\r\n                          <div className=\"openpositions\">\r\n                            <span className=\"p-text\">\r\n                              Unrealized Profit/Loss\r\n                            </span>\r\n                            <span className=\"icon-style\" onClick={toggle}>\r\n                              {/* {isOpen ?\r\n                                                <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\r\n                                                :\r\n                                                <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\r\n                                            } */}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"openOrder\">\r\n                          {fromOpenTrade && fromOpenTrade.length > 0 ? (\r\n                            <Row>\r\n                              <Col md={12}>\r\n                                {\" \"}\r\n                                {/*/1/*/}\r\n                                {/* <div className={'colorDarkBlue , boldText loginCenter'}>{fromAccountId.alias}</div>\r\n                                                    <span className=\"text-center colorDarkBlue no-padding \"> {fromAccountId.login}</span> */}\r\n                                <table className=\"table table-responsive table-bordered border-bottom-0 align-th\">\r\n                                  <thead>\r\n                                    <tr className=\"text-center thUnset\">\r\n                                      {/* open_time,type,symbol,lot,contract_size,open_price,commission,swap,profit */}\r\n                                      <th>Login</th>\r\n                                      <th>Open Time</th>\r\n                                      <th scope=\"col\">Type</th>\r\n\r\n                                      <th scope=\"col\">symbol</th>\r\n                                      <th scope=\"col\">lots</th>\r\n                                      {/* <th scope=\"col\">open_time</th> */}\r\n                                      <th>Contract size</th>\r\n                                      <th>Open Price</th>\r\n\r\n                                      <th scope=\"col\">commission</th>\r\n                                      <th scope=\"col\">swap</th>\r\n                                      {/* <th scope=\"col\">magic_number</th> */}\r\n                                      <th scope=\"col\">profit</th>\r\n                                    </tr>\r\n                                  </thead>\r\n                                  <tbody>\r\n                                    {fromOpenTradeTr()}\r\n                                    {toOpenTrade.length === 0 && (\r\n                                      <tr className=\"text-center opencolor\">\r\n                                        <td>\r\n                                          <b>Total Unrealized</b>\r\n                                        </td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td>\r\n                                          <b>\r\n                                            <NumberFormat\r\n                                              value={\r\n                                                dataTOtalOpenFrom.lotsTotal +\r\n                                                dataTOtalOpenTo.lotsTotal\r\n                                              }\r\n                                              displayType={\"text\"}\r\n                                              thousandSeparator={true}\r\n                                              decimalScale={2}\r\n                                            />\r\n                                          </b>\r\n                                        </td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td>\r\n                                          <b>\r\n                                            {dataTOtalOpenFrom.comissionTotal +\r\n                                              dataTOtalOpenTo.comissionTotal}\r\n                                          </b>\r\n                                        </td>\r\n                                        <td>\r\n                                          <b>\r\n                                            {dataTOtalOpenFrom.swapTotal +\r\n                                              dataTOtalOpenTo.swapTotal}\r\n                                          </b>\r\n                                        </td>\r\n                                        <td>\r\n                                          <b>\r\n                                            {dataTOtalOpenFrom.profitTotal +\r\n                                              dataTOtalOpenTo.profitTotal}\r\n                                          </b>\r\n                                        </td>\r\n                                      </tr>\r\n                                    )}\r\n                                  </tbody>\r\n                                </table>\r\n                                {toOpenTrade.length === 0 && (\r\n                                  <div className=\"text-right opencolor pad\">\r\n                                    <b>\r\n                                      Total{\" \"}\r\n                                      {dataTOtalOpenFrom.comissionTotal +\r\n                                        dataTOtalOpenTo.comissionTotal +\r\n                                        dataTOtalOpenFrom.swapTotal +\r\n                                        dataTOtalOpenTo.swapTotal +\r\n                                        dataTOtalOpenFrom.profitTotal +\r\n                                        dataTOtalOpenTo.profitTotal}\r\n                                      {fromAccountId[\r\n                                        `accounts_details.currency`\r\n                                      ] ===\r\n                                      toAccountId[`accounts_details.currency`]\r\n                                        ? `  ` +\r\n                                            fromAccountId[\r\n                                              `accounts_details.currency`\r\n                                            ] ||\r\n                                          toAccountId[\r\n                                            `accounts_details.currency`\r\n                                          ]\r\n                                        : \"\"}\r\n                                    </b>\r\n                                  </div>\r\n                                )}\r\n                              </Col>\r\n                            </Row>\r\n                          ) : (\r\n                            \" \"\r\n                            // <Col md={12} >\r\n                            //     <div className=\"card change noRecordCol\"> No Record Found</div>\r\n                            // </Col>\r\n                          )}\r\n\r\n                          {toOpenTrade && toOpenTrade.length > 0 ? (\r\n                            <Row>\r\n                              <Col md={12}>\r\n                                {\" \"}\r\n                                {/*3*/}\r\n                                {/* <div className={'color2 , boldText loginCenter'}>{toAccountId.alias}</div>\r\n                                                    <span className=\"text-center color2 no-padding\">{toAccountId.login}</span> */}\r\n                                <table class=\"table table-responsive table-bordered border-botttom-0 align-th\">\r\n                                  <thead>\r\n                                    <tr className=\"text-center thUnset\">\r\n                                      {\" \"}\r\n                                      {/* open_time,type,symbol,lot,contract_size,open_price,close_time,close_price,commission,swap,profit */}\r\n                                      <th>Login</th>\r\n                                      <th>Open Time</th>\r\n                                      <th scope=\"col\">Type</th>\r\n                                      <th scope=\"col\">symbol</th>\r\n                                      <th scope=\"col\">lots</th>\r\n                                      <th>Contract size</th>\r\n                                      <th>Open Price</th>\r\n                                      <th scope=\"col\">commission</th>\r\n                                      <th scope=\"col\">swap</th>\r\n                                      <th scope=\"col\">profit</th>\r\n                                    </tr>\r\n                                  </thead>\r\n                                  <tbody>\r\n                                    {toOpenTradeTr()}\r\n                                    {dataTOtalOpenFrom && dataTOtalOpenTo && (\r\n                                      <tr className=\"text-center opencolor\">\r\n                                        <td>\r\n                                          <b>Total Unrealized</b>\r\n                                        </td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td>\r\n                                          <b>\r\n                                            <NumberFormat\r\n                                              value={\r\n                                                dataTOtalOpenFrom.lotsTotal +\r\n                                                dataTOtalOpenTo.lotsTotal\r\n                                              }\r\n                                              displayType={\"text\"}\r\n                                              thousandSeparator={true}\r\n                                              decimalScale={2}\r\n                                            />\r\n                                          </b>\r\n                                        </td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td>\r\n                                          <b>\r\n                                            {dataTOtalOpenFrom.comissionTotal +\r\n                                              dataTOtalOpenTo.comissionTotal}\r\n                                          </b>\r\n                                        </td>\r\n                                        <td>\r\n                                          <b>\r\n                                            {dataTOtalOpenFrom.swapTotal +\r\n                                              dataTOtalOpenTo.swapTotal}\r\n                                          </b>\r\n                                        </td>\r\n                                        <td>\r\n                                          <b>\r\n                                            {dataTOtalOpenFrom.profitTotal +\r\n                                              dataTOtalOpenTo.profitTotal}\r\n                                          </b>\r\n                                        </td>\r\n                                      </tr>\r\n                                    )}\r\n                                  </tbody>\r\n                                </table>\r\n                                <div className=\"text-right opencolor pad\">\r\n                                  <b>\r\n                                    Total{\" \"}\r\n                                    {dataTOtalOpenFrom.comissionTotal +\r\n                                      dataTOtalOpenTo.comissionTotal +\r\n                                      dataTOtalOpenFrom.swapTotal +\r\n                                      dataTOtalOpenTo.swapTotal +\r\n                                      dataTOtalOpenFrom.profitTotal +\r\n                                      dataTOtalOpenTo.profitTotal}\r\n                                    {fromAccountId[\r\n                                      `accounts_details.currency`\r\n                                    ] ===\r\n                                    toAccountId[`accounts_details.currency`]\r\n                                      ? `  ` +\r\n                                          fromAccountId[\r\n                                            `accounts_details.currency`\r\n                                          ] ||\r\n                                        toAccountId[`accounts_details.currency`]\r\n                                      : \"\"}\r\n                                  </b>\r\n                                </div>\r\n                              </Col>\r\n                            </Row>\r\n                          ) : (\r\n                            \" \"\r\n                            // <Col md={12}>\r\n                            //     <div className=\"card change noRecordCol\"> No Record Found</div>\r\n                            // </Col>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"symbol-box terminal-head-box topSet\">\r\n                        <div className=\"openpositions\">\r\n                          <span className=\"p-text\">Realized Profit/Loss</span>\r\n                          <span\r\n                            className=\"icon-style\"\r\n                            // onClick={toggle2}\r\n                          >\r\n                            {/* {isOpen2 ?\r\n                                            <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\r\n                                            :\r\n                                            <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\r\n                                        } */}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <div>\r\n                        {/* <Collapse isOpen={isOpen2}> */}\r\n\r\n                        <div className=\"openOrder\">\r\n                          {/*2*/}\r\n                          {fromHistoryTrade.length > 0 ||\r\n                          toHistoryTrade.length > 0 ? (\r\n                            <div>\r\n                              <Row>\r\n                                {fromHistoryTrade &&\r\n                                fromHistoryTrade.length > 0 ? (\r\n                                  <Col md={12}>\r\n                                    {/* <div className={'colorDarkBlue , boldText loginCenter'}>{fromAccountId.alias}</div>\r\n                                                            <span className=\"text-center colorDarkBlue no-padding\">{fromAccountId.login}</span> */}\r\n                                    <table\r\n                                      style={{ overflowY: \"scroll\" }}\r\n                                      className=\"table table-responsive table-bordered border-bottom-0 align-th\"\r\n                                    >\r\n                                      <thead>\r\n                                        <tr className=\"text-center thUnset\">\r\n                                          <th>Login</th>\r\n\r\n                                          <th>Open Time</th>\r\n                                          <th scope=\"col\">Type</th>\r\n\r\n                                          <th scope=\"col\">symbol</th>\r\n                                          <th scope=\"col\">lots</th>\r\n\r\n                                          <th>Contract size</th>\r\n                                          <th>Open Price</th>\r\n                                          <th>Close Time</th>\r\n\r\n                                          <th>Close Price</th>\r\n\r\n                                          <th scope=\"col\">commission</th>\r\n                                          <th scope=\"col\">swap</th>\r\n\r\n                                          <th scope=\"col\">profit</th>\r\n                                        </tr>\r\n                                      </thead>\r\n                                      <tbody>\r\n                                        {fromHistoryTradeTr()}\r\n                                        {toHistoryTrade.length === 0 && (\r\n                                          <tr className=\"text-center closecolor\">\r\n                                            <td>\r\n                                              <b>Total Realized</b>\r\n                                            </td>\r\n                                            <td></td>\r\n                                            <td></td>\r\n                                            <td></td>\r\n                                            <td>\r\n                                              <b>\r\n                                                <NumberFormat\r\n                                                  value={\r\n                                                    dataTOtalcloseFrom.lotsTotal +\r\n                                                    dataTotalClosetTo.lotsTotal\r\n                                                  }\r\n                                                  displayType={\"text\"}\r\n                                                  thousandSeparator={true}\r\n                                                  decimalScale={2}\r\n                                                />\r\n                                              </b>\r\n                                            </td>\r\n                                            <td></td>\r\n                                            <td></td>\r\n                                            <td></td>\r\n                                            <td></td>\r\n                                            <td>\r\n                                              <b>\r\n                                                {dataTOtalcloseFrom.comissionTotal +\r\n                                                  dataTotalClosetTo.comissionTotal}\r\n                                              </b>\r\n                                            </td>\r\n                                            <td>\r\n                                              <b>\r\n                                                {dataTOtalcloseFrom.swapTotal +\r\n                                                  dataTotalClosetTo.swapTotal}\r\n                                              </b>\r\n                                            </td>\r\n                                            <td>\r\n                                              <b>\r\n                                                {dataTOtalcloseFrom.profitTotal +\r\n                                                  dataTotalClosetTo.profitTotal}\r\n                                              </b>\r\n                                            </td>\r\n                                          </tr>\r\n                                        )}\r\n                                      </tbody>\r\n                                    </table>\r\n                                    {toHistoryTrade.length === 0 && (\r\n                                      <div className=\"text-right closecolor pad\">\r\n                                        <b>\r\n                                          Total{\" \"}\r\n                                          {dataTOtalcloseFrom.comissionTotal +\r\n                                            dataTotalClosetTo.comissionTotal +\r\n                                            dataTOtalcloseFrom.swapTotal +\r\n                                            dataTotalClosetTo.swapTotal +\r\n                                            dataTOtalcloseFrom.profitTotal +\r\n                                            dataTotalClosetTo.profitTotal}\r\n                                          {fromAccountId[\r\n                                            `accounts_details.currency`\r\n                                          ] ===\r\n                                          toAccountId[\r\n                                            `accounts_details.currency`\r\n                                          ]\r\n                                            ? `  ` +\r\n                                                fromAccountId[\r\n                                                  `accounts_details.currency`\r\n                                                ] ||\r\n                                              toAccountId[\r\n                                                `accounts_details.currency`\r\n                                              ]\r\n                                            : \"\"}\r\n                                        </b>\r\n                                      </div>\r\n                                    )}\r\n                                  </Col>\r\n                                ) : (\r\n                                  \"\"\r\n                                  // <Col md={12}>\r\n                                  //     <div className=\"card change noRecordCol\"> No Record Found</div>\r\n                                  // </Col>\r\n                                )}\r\n                              </Row>\r\n                              {/**4 */}\r\n                              {toHistoryTrade && toHistoryTrade.length > 0 ? (\r\n                                <Row>\r\n                                  <Col md={12}>\r\n                                    {/* <div className={'color2 , boldText loginCenter'}>{toAccountId.alias}</div>\r\n                                                                <span className=\"text-center color2 no-padding\">{toAccountId.login}</span> */}\r\n\r\n                                    <table className=\"table table-responsive table-bordered border-bottom-0 align-th\">\r\n                                      <thead>\r\n                                        <tr className=\"text-center thUnset\">\r\n                                          <th>Login</th>\r\n\r\n                                          <th>Open Time</th>\r\n                                          <th scope=\"col\">Type</th>\r\n\r\n                                          <th scope=\"col\">symbol</th>\r\n                                          <th scope=\"col\">lots</th>\r\n\r\n                                          <th>Contract size</th>\r\n                                          <th>Open Price</th>\r\n                                          <th>Close Time</th>\r\n\r\n                                          <th>Close Price</th>\r\n\r\n                                          <th scope=\"col\">commission</th>\r\n                                          <th scope=\"col\">swap</th>\r\n\r\n                                          <th scope=\"col\">profit</th>\r\n                                        </tr>\r\n                                      </thead>\r\n                                      <tbody>\r\n                                        {toHistoryTradeTr()}\r\n                                        {dataTOtalcloseFrom &&\r\n                                          dataTotalClosetTo && (\r\n                                            <tr className=\"text-center closecolor\">\r\n                                              <td>\r\n                                                <b>Total Realized</b>\r\n                                              </td>\r\n                                              <td></td>\r\n                                              <td></td>\r\n                                              <td></td>\r\n                                              <td>\r\n                                                <b>\r\n                                                  <NumberFormat\r\n                                                    value={\r\n                                                      dataTOtalcloseFrom.lotsTotal +\r\n                                                      dataTotalClosetTo.lotsTotal\r\n                                                    }\r\n                                                    displayType={\"text\"}\r\n                                                    thousandSeparator={true}\r\n                                                    decimalScale={2}\r\n                                                  />\r\n                                                </b>\r\n                                              </td>\r\n                                              <td></td>\r\n                                              <td></td>\r\n                                              <td></td>\r\n                                              <td></td>\r\n                                              <td>\r\n                                                <b>\r\n                                                  {dataTOtalcloseFrom.comissionTotal +\r\n                                                    dataTotalClosetTo.comissionTotal}\r\n                                                </b>\r\n                                              </td>\r\n                                              <td>\r\n                                                <b>\r\n                                                  {dataTOtalcloseFrom.swapTotal +\r\n                                                    dataTotalClosetTo.swapTotal}\r\n                                                </b>\r\n                                              </td>\r\n\r\n                                              <td>\r\n                                                <b>\r\n                                                  {dataTOtalcloseFrom.profitTotal +\r\n                                                    dataTotalClosetTo.profitTotal}\r\n                                                </b>\r\n                                              </td>\r\n                                            </tr>\r\n                                          )}\r\n                                      </tbody>\r\n                                    </table>\r\n                                    <div className=\"text-right closecolor pad\">\r\n                                      <b>\r\n                                        Total{\" \"}\r\n                                        {dataTOtalcloseFrom.comissionTotal +\r\n                                          dataTotalClosetTo.comissionTotal +\r\n                                          dataTOtalcloseFrom.swapTotal +\r\n                                          dataTotalClosetTo.swapTotal +\r\n                                          dataTOtalcloseFrom.profitTotal +\r\n                                          dataTotalClosetTo.profitTotal}\r\n                                        {fromAccountId[\r\n                                          `accounts_details.currency`\r\n                                        ] ===\r\n                                        toAccountId[`accounts_details.currency`]\r\n                                          ? `  ` +\r\n                                              fromAccountId[\r\n                                                `accounts_details.currency`\r\n                                              ] ||\r\n                                            toAccountId[\r\n                                              `accounts_details.currency`\r\n                                            ]\r\n                                          : \"\"}\r\n                                      </b>\r\n                                    </div>\r\n                                  </Col>\r\n                                </Row>\r\n                              ) : (\r\n                                \"\"\r\n                                // <Col md={12}>\r\n                                //     <div className=\"card change noRecordCol\"> No Record Found</div>\r\n                                // </Col>\r\n                              )}\r\n                            </div>\r\n                          ) : (\r\n                            \"\"\r\n                            // <Col md={12} >\r\n                            //     <div className=\"card change noRecordCol\"> No Record Found</div>\r\n                            // </Col>\r\n                          )}\r\n                          <Row className=\"no-margin\">\r\n                            {commissionValue &&\r\n                              commissionValue.commission_acount_id > 0 && (\r\n                                <div className=\"card pad-x\">\r\n                                  <div className=\"header ptheader b-shadow\">\r\n                                    <h4 className=\"text-center bText1\">\r\n                                      <b>Commission</b>\r\n                                    </h4>\r\n                                    {/* <h4 className=\"text-center\">{commissionDetails[0].login}</h4> */}\r\n\r\n                                    <div className=\"row\">\r\n                                      <div className=\"col-md-4 text-center\">\r\n                                        <h4 className=\"bText\"> Balance </h4>\r\n                                        <NumberFormat\r\n                                          value={commissionValue.totalProfit}\r\n                                          displayType={\"text\"}\r\n                                          thousandSeparator={true}\r\n                                          decimalScale={2}\r\n                                        />\r\n                                      </div>\r\n                                      <div className=\"col-md-4 text-center\">\r\n                                        <h4 className=\"bText\"> Equity </h4>\r\n                                        <NumberFormat\r\n                                          displayType={\"text\"}\r\n                                          thousandSeparator={true}\r\n                                          decimalScale={2}\r\n                                        />\r\n                                        <span>{commissionValue.equity}</span>\r\n                                      </div>\r\n                                      <div className=\"col-md-4 text-center\">\r\n                                        <h4 className=\"bText\"> Order Type </h4>\r\n                                        <span>6</span>\r\n                                      </div>\r\n\r\n                                      <div className=\"col-md-12 text-center\">\r\n                                        <h4>\r\n                                          <b>Total</b>{\" \"}\r\n                                        </h4>\r\n                                        <NumberFormat\r\n                                          value={commissionValue.commission}\r\n                                          displayType={\"text\"}\r\n                                          thousandSeparator={true}\r\n                                          decimalScale={2}\r\n                                        />\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                          </Row>\r\n                        </div>\r\n                        {/* </Collapse> */}\r\n                      </div>\r\n\r\n                      {/* <div className=\"symbol-box  topSet \" >\r\n                            <div className=\"text-center\" >\r\n                                <span className=\"  summrayAdjust \" style={{ fontWeight: 600, color: \"#797979\" }}>Summary</span>\r\n                                <h5 style={{ fontWeight: 600, color: \"#797979\" }}> Open Positions + Closed Positions {commissionValue.commission_acount_id > 0 && (<span> + Commission</span>)}</h5>\r\n                                <h5 className=\"bText\">\r\n                                    <NumberFormat value={totalOpenAndHistory} displayType={'text'} thousandSeparator={true} decimalScale={2} ></NumberFormat></h5>\r\n                            </div>\r\n\r\n                        </div> */}\r\n                    </div>\r\n                    <Row style={{ marginBottom: `20px` }}>\r\n                      <Col md={12} sm={6}>\r\n                        <div\r\n                          className={\r\n                            historyTotal + openTotal >= 0\r\n                              ? \"summary-box\"\r\n                              : \"summary-box-red\"\r\n                          }\r\n                        >\r\n                          {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\r\n                          {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\r\n<span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\r\n\r\n                          <Col md={12} sm={12}>\r\n                            <div\r\n                              className=\"summary-text text-center\"\r\n                              style={{ fontWeight: 600, color: \"#797979\" }}\r\n                            >\r\n                              Unrealized & Realized P/L ({activeProfileName}){\" \"}\r\n                              {allHistoryRecord.history_info !== 0 && (\r\n                                <span> + Commission</span>\r\n                              )}{\" \"}\r\n                            </div>\r\n                          </Col>\r\n                          <Col md={12} sm={12}>\r\n                            <div\r\n                              className=\"text-center\"\r\n                              style={{ fontWeight: \"bold\", fontSize: \"18px\" }}\r\n                            >\r\n                              ${\" \"}\r\n                              <NumberFormat\r\n                                value={\r\n                                  allHistoryRecord.history_info !== undefined\r\n                                    ? historyTotal +\r\n                                      openTotal +\r\n                                      allHistoryRecord.history_info\r\n                                    : historyTotal + openTotal\r\n                                }\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                decimalScale={2}\r\n                              />\r\n                              {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\r\n                            </div>\r\n                          </Col>\r\n\r\n                          <div className=\"clearfix\"></div>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Collapse>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col md={12} sm={6}>\r\n                  <div className=\"symbol-box\" style={{ marginBottom: `20px` }}>\r\n                    <span className=\"p-text\">Side by side View</span>\r\n                    <span className=\"icon-style\" onClick={toggle3}>\r\n                      {isOpen3 ? (\r\n                        <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\r\n                      ) : (\r\n                        <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\r\n                      )}\r\n                    </span>\r\n                  </div>\r\n\r\n                  <Collapse isOpen={isOpen3}>\r\n                    <TableList />\r\n                    <Row style={{ marginBottom: `20px` }}>\r\n                      <Col md={12} sm={6}>\r\n                        <div\r\n                          className={\r\n                            historyTotal + openTotal >= 0\r\n                              ? \"summary-box\"\r\n                              : \"summary-box-red\"\r\n                          }\r\n                        >\r\n                          {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\r\n                          {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\r\n<span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\r\n\r\n                          <Col md={12} sm={12}>\r\n                            <div\r\n                              className=\"summary-text text-center\"\r\n                              style={{ fontWeight: 600, color: \"#797979\" }}\r\n                            >\r\n                              Unrealized & Realized P/L ({activeProfileName}){\" \"}\r\n                              {allHistoryRecord.history_info !== 0 && (\r\n                                <span> + Commission</span>\r\n                              )}{\" \"}\r\n                            </div>\r\n                          </Col>\r\n                          <Col md={12} sm={12}>\r\n                            <div\r\n                              className=\"text-center\"\r\n                              style={{ fontWeight: \"bold\", fontSize: \"18px\" }}\r\n                            >\r\n                              ${\" \"}\r\n                              <NumberFormat\r\n                                value={\r\n                                  allHistoryRecord.history_info !== undefined\r\n                                    ? historyTotal +\r\n                                      openTotal +\r\n                                      allHistoryRecord.history_info\r\n                                    : historyTotal + openTotal\r\n                                }\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                decimalScale={2}\r\n                              />\r\n                              {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\r\n                            </div>\r\n                          </Col>\r\n\r\n                          <div className=\"clearfix\"></div>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Collapse>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          )}\r\n          <Grid fluid>\r\n            {/* <div className=\"symbol-box shadoremove\"> */}\r\n            {/* <div className=\"openOrder\">\r\n\r\n                            <div className=\"border-box row\"> */}\r\n            {/* <DatatablePage state={'open'} data={fromOpenTrade} /> */}\r\n            {/* </div> */}\r\n            {/* <div className=\"border-box row\"> */}\r\n\r\n            {/* <DatatablePage state={'open'} data={toOpenTrade} /> */}\r\n            {/* </div> */}\r\n            {/* <div className=\"border-box row\"> */}\r\n\r\n            {/* <DatatablePage state={'close'} data={fromHistoryTrade} /> */}\r\n            {/* </div> */}\r\n            {/* <div className=\"border-box row\"> */}\r\n\r\n            {/* <DatatablePage state={'close'} data={toHistoryTrade} /> */}\r\n            {/* </div> */}\r\n            {/* </div> */}\r\n            {/* </div> */}\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\r\n\r\nexport default class Exploser extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"boxFix\">\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <div className=\"card \">\r\n\r\n                            <div className=\"header\">\r\n\r\n                                <h6 className={'colorDarkBlue , loginCenter'}>Account - A</h6>\r\n                            </div>\r\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                <table className=\"table\">\r\n                                    <tbody>\r\n\r\n                                        <tr><td>Symbol </td>\r\n                                            <td className=\"td-actions text-right\">Symbol\r\n\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr><td>Lots </td>\r\n                                            <td className=\"td-actions text-right\">Lots\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr><td>BUY/SELL </td>\r\n                                            <td className=\"td-actions text-right\">Buy/Sell\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Contract Size </td>\r\n                                            <td className=\"td-actions text-right\">Size\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Exploser </td>\r\n                                            <td className=\"td-actions text-right\">Exploser Total\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n\r\n\r\n                    <Col md={6}>\r\n                        <div className=\"card \">\r\n\r\n                            <div className=\"header\">\r\n\r\n                                <h6 className={'colorDarkBlue , loginCenter'}>Account - B</h6>\r\n                            </div>\r\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\r\n                                <table className=\"table\">\r\n                                    <tbody>\r\n\r\n                                        <tr><td>Symbol </td>\r\n                                            <td className=\"td-actions text-right\">Symbol\r\n\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr><td>Lots </td>\r\n                                            <td className=\"td-actions text-right\">Lots\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr><td>BUY/SELL </td>\r\n                                            <td className=\"td-actions text-right\">Sell\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Contract Size </td>\r\n                                            <td className=\"td-actions text-right\">Size\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Exploser </td>\r\n                                            <td className=\"td-actions text-right\">Total\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n\r\n\r\n                </Row>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport config from \"../../constant/config\";\r\nimport Data from \"../Data\";\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\nimport \"./ContractSize.css\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { api } from \"../../api\";\r\nimport myInitObject from \"../../api\";\r\nconst axios = require(\"axios\");\r\nexport default class ContractSize extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fromAccounts: \"\",\r\n      fromSymbol: \"\",\r\n      toAccounts: \"\",\r\n      toSymbol: \"\",\r\n      fromOpenOrderInfos: \"\",\r\n      toOpenOrderInfos: \"\",\r\n      total: \"\",\r\n      totalTo: \"\",\r\n      blockloader: true,\r\n      selectedOption: null,\r\n      allHistoryRecord: [],\r\n      allOpenRecord: [],\r\n      fromHistoryOrderInfo: [],\r\n      toHistoryOrderInfo: [],\r\n      commissionHistoryOrderInfo: [],\r\n      fromOpenOrderInfo: [],\r\n      toOpenOrderInfo: [],\r\n      filterlist: [],\r\n      loading: true,\r\n      dateTime: \"\",\r\n      errorMassege: true,\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    setInterval(() => {\r\n      if (\r\n        (myInitObject.responsHT &&\r\n          myInitObject.responsOT &&\r\n          myInitObject.responsSD) === undefined\r\n      ) {\r\n        console.log(\"no data\");\r\n      } else {\r\n        this.setState(\r\n          {\r\n            //last update time\r\n            dateTime: myInitObject.fetchLastUpdatedTime.filteredInfoTime,\r\n            // status data\r\n            loading: false,\r\n            fromAccounts: myInitObject.fetchStatusData.fromAccounts,\r\n            fromSymbol: myInitObject.fetchStatusData.fromSymbol,\r\n            toAccounts: myInitObject.fetchStatusData.toAccounts,\r\n            toSymbol: myInitObject.fetchStatusData.toSymbol,\r\n            fromOpenOrderInfos:\r\n              myInitObject.fetchStatusData.fromOpenOrderInfos.length > 0\r\n                ? myInitObject.fetchStatusData.fromOpenOrderInfos[0]\r\n                : \"\",\r\n            blockloader:\r\n              myInitObject.fetchStatusData.fromOpenOrderInfos.length > 0\r\n                ? false\r\n                : true,\r\n            total:\r\n              myInitObject.fetchStatusData.fromOpenOrderInfos.length > 0 &&\r\n              myInitObject.fetchStatusData.fromOpenOrderInfos[0].order_type == 0\r\n                ? myInitObject.fetchStatusData.fromSymbol?.contract_size *\r\n                  myInitObject.fetchStatusData.fromOpenOrderInfos[0]?.lots\r\n                : myInitObject.fetchStatusData.fromSymbol?.contract_size *\r\n                  -myInitObject.fetchStatusData.fromOpenOrderInfos[0]?.lots,\r\n            toOpenOrderInfos:\r\n              myInitObject.fetchStatusData.toOpenOrderInfos.length > 0\r\n                ? myInitObject.fetchStatusData.toOpenOrderInfos[0]\r\n                : \"\",\r\n            totalTo:\r\n              myInitObject.fetchStatusData.toOpenOrderInfos.length > 0 &&\r\n              myInitObject.fetchStatusData.toOpenOrderInfos[0].order_type == 0\r\n                ? myInitObject.fetchStatusData.toSymbol?.contract_size *\r\n                  myInitObject.fetchStatusData.toOpenOrderInfos[0]?.lots\r\n                : myInitObject.fetchStatusData.toSymbol?.contract_size *\r\n                  -myInitObject.fetchStatusData.toOpenOrderInfos[0]?.lots,\r\n            //history trade\r\n            allHistoryRecord: myInitObject.fetchAllHistoryTrade.rows,\r\n            fromHistoryOrderInfo:\r\n              myInitObject.fetchAllHistoryTrade.fromHistoryOrderInfo,\r\n            toHistoryOrderInfo:\r\n              myInitObject.fetchAllHistoryTrade.toHistoryOrderInfo,\r\n            //open trade\r\n            allOpenRecord: myInitObject.fetchAllOpenTrade.rows,\r\n            fromOpenOrderInfo: myInitObject.fetchAllOpenTrade.fromOpenOrderInfo,\r\n            toOpenOrderInfo: myInitObject.fetchAllOpenTrade.toOpenOrderInfo,\r\n          },\r\n          () => {\r\n            this.setState({\r\n              errorMassege:\r\n                this.state.allHistoryRecord.length == 0 ? true : false,\r\n            });\r\n          }\r\n        );\r\n      }\r\n    }, 1000);\r\n  }\r\n  // componentDidMount() {\r\n  //     // this.fetchAllHIstoryTrade();\r\n  //     // this.fetchStatusData();\r\n  //     axios.get(config.baseurl + '/accounts/fetchAllSymbol')\r\n  //         .then(function (response) {\r\n  //             if (response.status == 200) {\r\n  //                 console.log(response, \"response ---------------fetchAllSymbol>\")\r\n  //             }\r\n  //         })\r\n  //     // this.fetchLastUpdatedTime();\r\n  // }\r\n  // fetchLastUpdatedTime = () => {\r\n  //     let self = this;\r\n  //     axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\r\n  //         .then(function (response) {\r\n  //             if (response.status == 200) {\r\n  //                 self.setState({ dateTime: response.data.filteredInfoTime })\r\n  //                 // console.log(self.state.dataOpenTrade.accountFromInfo,\"outyfjhkjh\");\r\n  //             }\r\n  //         });\r\n  // }\r\n\r\n  // fetchStatusData = () => {\r\n  //     let self = this;\r\n  //     let tottal = 0;\r\n  //     axios.get(config.baseurl + '/accounts/fetchStatusData')\r\n  //         .then(function (response) {\r\n  //             if (response.status == 200) {\r\n  //                 self.setState({ loading: false })\r\n\r\n  //                 self.setState({ fromAccounts: response.data.fromAccounts })\r\n  //                 self.setState({ fromSymbol: response.data.fromSymbol })\r\n  //                 // console.log(fromSymbol,\"fromSymbol\");\r\n  //                 self.setState({ toAccounts: response.data.toAccounts })\r\n  //                 self.setState({ toSymbol: response.data.toSymbol })\r\n  //                 self.setState({ fromOpenOrderInfos: response.data.fromOpenOrderInfos.length > 0 ? response.data.fromOpenOrderInfos[0] : '' })\r\n  //                 if (response.data.fromOpenOrderInfos.length > 0) {\r\n  //                     self.setState({ blockloader: false })\r\n  //                     if (response.data.fromOpenOrderInfos[0].order_type == 0) {\r\n  //                         self.setState({ total: response.data.fromSymbol.contract_size * (response.data.fromOpenOrderInfos[0].lots) })\r\n  //                     } else {\r\n  //                         self.setState({ total: response.data.fromSymbol.contract_size * -(response.data.fromOpenOrderInfos[0].lots) })\r\n  //                     }\r\n\r\n  //                     self.setState({ toOpenOrderInfos: response.data.toOpenOrderInfos.length > 0 ? response.data.toOpenOrderInfos[0] : '' })\r\n  //                 }\r\n  //                 if (response.data.toOpenOrderInfos.length > 0) {\r\n  //                     if (response.data.toOpenOrderInfos[0].order_type == 0) {\r\n  //                         self.setState({ totalTo: response.data.toSymbol.contract_size * (response.data.toOpenOrderInfos[0].lots) })\r\n  //                     } else {\r\n  //                         self.setState({ totalTo: response.data.toSymbol.contract_size * -(response.data.toOpenOrderInfos[0].lots) })\r\n  //                     }\r\n  //                 }\r\n\r\n  //             }\r\n  //         });\r\n  // }\r\n  // fetchAllHIstoryTrade = () => {\r\n  //     let self = this;\r\n  //     axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\r\n  //         .then(function (response) {\r\n  //             // console.log(response.data, 'response.data his')\r\n  //             if (response.status == 200) {\r\n  //                 self.setState({ errorMassege: false })\r\n  //                 // self.setState({ allHistoryRecord: response.data.rows })\r\n  //                 self.setState({\r\n  //                     allHistoryRecord: response.data.rows,\r\n  //                     fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,sNaN(parseInt(s)\r\n  //                     toHistoryOrderInfo: response.data.toHistoryOrderInfo,\r\n  //                     commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\r\n  //                 })\r\n  //             }\r\n  //         })\r\n  //     // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\r\n  //     // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\r\n  //     axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\r\n  //         .then(function (response) {\r\n  //             if (response.status == 200) {\r\n\r\n  //                 // self.setState({ allOpenRecord: response.data.rows })\r\n  //                 self.setState({\r\n  //                     allOpenRecord: response.data.rows,\r\n  //                     fromOpenOrderInfo: response.data.fromOpenOrderInfo,\r\n  //                     toOpenOrderInfo: response.data.toOpenOrderInfo\r\n  //                 })\r\n  //             }\r\n  //         })\r\n  // }\r\n\r\n  render() {\r\n    const {\r\n      allHistoryRecord,\r\n      allOpenRecord,\r\n      selectedOption,\r\n      toOpenOrderInfo,\r\n      fromOpenOrderInfo,\r\n      fromHistoryOrderInfo,\r\n      commissionHistoryOrderInfo,\r\n      toHistoryOrderInfo,\r\n    } = this.state;\r\n    //   const sumOfOpenTotal = allOpenRecord.reduce((current, data) => {\r\n    //     return (Math.floor(data.commission + data.swap + data.profit+ current));\r\n    // }, 0);\r\n\r\n    //   const sumOfHistoryTotal = allHistoryRecord.reduce((current, data) => {\r\n    //     return (data.profit + current);\r\n    // }, 0);\r\n    let uniqueSymbols = \"\";\r\n    if (allOpenRecord && Object.entries(allOpenRecord).length > 0) {\r\n      let fromSymbols = JSON.parse(allOpenRecord.from_symbols);\r\n      // fromSymbols = (fromSymbols).map(data => data).join(', ');\r\n      let toSymbols = JSON.parse(allOpenRecord.to_symbols);\r\n      let combineSymbols = fromSymbols.concat(toSymbols);\r\n      uniqueSymbols = combineSymbols.filter(\r\n        (item, i, ar) => ar.indexOf(item) === i\r\n      );\r\n      uniqueSymbols = uniqueSymbols.map((data) => data).join(\", \");\r\n    }\r\n    let fromsum = 0;\r\n    let tosum = 0;\r\n    // if(fromHistoryOrderInfo && commissionHistoryOrderInfo && fromHistoryOrderInfo.length>0){\r\n    if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\r\n      fromsum =\r\n        fromHistoryOrderInfo[0].commission +\r\n        fromHistoryOrderInfo[0].swap +\r\n        fromHistoryOrderInfo[0].profit;\r\n    }\r\n\r\n    if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\r\n      tosum =\r\n        toHistoryOrderInfo[0].commission +\r\n        toHistoryOrderInfo[0].swap +\r\n        toHistoryOrderInfo[0].profit;\r\n    }\r\n\r\n    let sumOfHistoryTotal = tosum + fromsum;\r\n\r\n    let openfromsum = 0;\r\n    let opentosum = 0;\r\n    if (\r\n      fromOpenOrderInfo &&\r\n      fromOpenOrderInfo.length > 0 &&\r\n      fromOpenOrderInfo[0].total != null\r\n    ) {\r\n      openfromsum =\r\n        fromOpenOrderInfo[0].commission +\r\n        fromOpenOrderInfo[0].swap +\r\n        fromOpenOrderInfo[0].profit;\r\n    }\r\n    if (\r\n      toOpenOrderInfo &&\r\n      toOpenOrderInfo.length > 0 &&\r\n      toOpenOrderInfo[0].total != null\r\n    ) {\r\n      opentosum =\r\n        toOpenOrderInfo[0].commission +\r\n        toOpenOrderInfo[0].swap +\r\n        toOpenOrderInfo[0].profit;\r\n    }\r\n\r\n    let sumOfOpenTotal = opentosum + openfromsum;\r\n    this.state.total = isNaN(parseInt(this.state.total)) ? 0 : parseInt(this.state.total)\r\n    this.state.totalTo = isNaN(parseInt(this.state.totalTo)) ? 0 : parseInt(this.state.totalTo)\r\n\r\n    console.log(this.state.total , typeof isNaN(this.state.totalTo)  , \"jjjjjj\", this.state.totalTo);\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.errorMassege == true ? (\r\n          <div className=\"popup\">\r\n            <div className=\"card w-75 \">\r\n              <div className=\"card-body topmargin\">\r\n                <div className=\" card-text popuptext\" role=\"alert\">\r\n                  Please Select Filters To Continue...\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Row>\r\n              <div className=\"lastUpdate\">\r\n                <span> Last Updated : </span>\r\n                {this.state.dateTime}(UTC){\" \"}\r\n              </div>\r\n            </Row>\r\n            <div className=\"contractSize-wrapper\">\r\n              <div className=\" leftset card \">\r\n                {this.state.loading ? (\r\n                  <Loader\r\n                    type=\"ThreeDots\"\r\n                    color=\"black\"\r\n                    height={100}\r\n                    width={100}\r\n                    style={{ textAlign: \"center\" }}\r\n                  />\r\n                ) : (\r\n                  <Row>\r\n                    <h4 className=\"text-center \">\r\n                      <b>Exposure</b>\r\n                    </h4>\r\n                    {/* {this.state.fromOpenOrderInfos && this.state.fromOpenOrderInfos.order_type !== null || this.state.toOpenOrderInfos && this.state.toOpenOrderInfos.order_type !== null ? */}\r\n                    <>\r\n                      {\" \"}\r\n                      {this.state.fromOpenOrderInfos !== \"\" &&\r\n                      this.state.fromOpenOrderInfos.order_type !== null ? (\r\n                        <Col md={4}>\r\n                          <div className=\"card\">\r\n                            <div\r\n                              className={\"colorDarkBlue , boldText loginCenter\"}\r\n                            >\r\n                              {this.state.fromAccounts.alias}\r\n                            </div>\r\n\r\n                            <h6 className={\"colorDarkBlue loginCenter\"}>\r\n                              {this.state.fromAccounts.login}\r\n                            </h6>\r\n\r\n                            <div className=\"content table-full-width \">\r\n                              <div className=\"table-responsive\">\r\n                                <div className=\"text-center\">\r\n                                  <span>{this.state.fromSymbol.name}</span>\r\n                                  {this.state.fromOpenOrderInfos !== \"\" &&\r\n                                    this.state.fromOpenOrderInfos.order_type !==\r\n                                      null && (\r\n                                      <span\r\n                                        className=\"td-actions bText, clearBorder\"\r\n                                        style={{ display: \"block\" }}\r\n                                      >\r\n                                        {this.state.fromOpenOrderInfos\r\n                                          .order_type == 0\r\n                                          ? \"BUY \"\r\n                                          : \"SELL \"}\r\n                                          <NumberFormat value={this.state.fromOpenOrderInfos.lots} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                                        {\" \"}\r\n                                        {this.state.fromOpenOrderInfos.lots > 1\r\n                                          ? \"Lots\"\r\n                                          : \"Lot\"}\r\n                                      </span>\r\n                                    )}\r\n                                </div>\r\n                                <br></br>\r\n                                <div className=\"text-center\">\r\n                                  <span className=\"td-actions clearBorder text-right\">\r\n                                    <NumberFormat\r\n                                      value={this.state.total}\r\n                                      displayType={\"text\"}\r\n                                      thousandSeparator={true}\r\n                                      decimalScale={2}\r\n                                    />{\" \"}\r\n                                    {this.state.fromSymbol.margin_currency}\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </Col>\r\n                      ) : (\r\n                        <Col md={4}>\r\n                          <div className=\"card change noRecordCol\">\r\n                            {\" \"}\r\n                            No Record Found\r\n                          </div>\r\n                        </Col>\r\n                      )}\r\n                      <Col md={4}>\r\n                        <div className=\"card\">\r\n                          \r\n                            {(this.state.total + this.state.totalTo == 0) && \r\n                            this.state.total !== 0 && \r\n                            this.state.totalTo !== 0 ? (\r\n                            <h5 className=\"  text-center adjustMent\">\r\n                              <span style={{ color: \"green\" }}>\r\n                                <b> No Exposure</b>\r\n                              </span>\r\n                          </h5>)\r\n                              : ''}\r\n                              {this.state.total == 0 && this.state.totalTo == 0 ? (\r\n                            <h5 className=\"  text-center adjustMent\">\r\n                              <span style={{ color: \"green\" }}>\r\n                                <b> No Record Found</b>\r\n                              </span>\r\n                          </h5>)\r\n                              : ''}\r\n                          {this.state.total !== 0 &&\r\n                            this.state.totalTo !== 0 && \r\n                            this.state.total + this.state.totalTo != 0 && (\r\n                                <>\r\n                                 <h5 className=\"  text-center adjustMent\">\r\n                                  <b> Exposure</b> \r\n                              </h5>\r\n                              <div\r\n                                style={{ color: \"#b70606\" }}\r\n                                className=\" setBottom bText text-center\"\r\n                              >\r\n                                <NumberFormat\r\n                                  value={this.state.total + this.state.totalTo}\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  decimalScale={2}\r\n                                />\r\n                                {this.state.fromSymbol?.margin_currency ===\r\n                                this.state.toSymbol?.margin_currency\r\n                                  ? `  ` +\r\n                                      this.state.fromSymbol.margin_currency ||\r\n                                    this.state.toSymbol.margin_currency\r\n                                  : \"\"}\r\n                              </div>\r\n                              </>\r\n                            )}\r\n                          {this.state.totalTo !== 0 &&\r\n                            (isNaN(this.state.total) == true ||\r\n                              this.state.total == 0) && (\r\n                                  <>\r\n                                <h5 className=\"  text-center adjustMent\">\r\n                                  <b> Exposure</b> \r\n                              </h5>\r\n                              <div\r\n                                style={{ color: \"#b70606\" }}\r\n                                className=\" setBottom bText text-center\"\r\n                              >\r\n                                <NumberFormat\r\n                                  value={this.state.totalTo}\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  decimalScale={2}\r\n                                />\r\n                                {this.state.toSymbol?.margin_currency\r\n                                  ? `  ` + this.state.toSymbol.margin_currency\r\n                                  : \"\"}\r\n                              </div>\r\n                              </>\r\n                            )}\r\n                          {this.state.total != 0 &&\r\n                            (isNaN(this.state.totalTo) == true ||\r\n                              this.state.totalTo == 0) && (\r\n                                  <>\r\n                                <h5 className=\"  text-center adjustMent\">\r\n                                <b> Exposure</b> \r\n                            </h5>\r\n                              <div\r\n                                style={{ color: \"#b70606\" }}\r\n                                className=\" setBottom bText text-center\"\r\n                              >\r\n                                <NumberFormat\r\n                                  value={this.state.total}\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  decimalScale={2}\r\n                                />\r\n                                {this.state.fromSymbol?.margin_currency\r\n                                  ? `  ` + this.state.fromSymbol.margin_currency\r\n                                  : \"\"}\r\n                              </div>\r\n                              </>\r\n                            )}\r\n                        </div>\r\n                      </Col>\r\n                      {this.state.toOpenOrderInfos !== \"\" &&\r\n                      this.state.toOpenOrderInfos.order_type !== null ? (\r\n                        <Col md={4}>\r\n                          <div className=\" leftset1 card\">\r\n                            <div className={\"color2 , boldText loginCenter\"}>\r\n                              {this.state.toAccounts.alias}\r\n                            </div>\r\n\r\n                            <h6 className={\"color2 ,bText, loginCenter\"}>\r\n                              {this.state.toAccounts.login}\r\n                            </h6>\r\n\r\n                            <div className=\"content table-full-width \">\r\n                              <div className=\"table-responsive\">\r\n                                <div className=\"text-center\">\r\n                                  <span className=\"td-actions bText, clearBorder text-right\">\r\n                                    {this.state.toSymbol.name}\r\n                                  </span>\r\n                                  {this.state.toOpenOrderInfos !== \"\" &&\r\n                                    this.state.toOpenOrderInfos.order_type !==\r\n                                      null && (\r\n                                      <span\r\n                                        className=\"td-actions bText, clearBorder\"\r\n                                        style={{ display: \"block\" }}\r\n                                      >\r\n                                        {this.state.toOpenOrderInfos\r\n                                          .order_type == 0\r\n                                          ? \"BUY \"\r\n                                          : \"SELL \"}\r\n                                          <NumberFormat value={this.state.toOpenOrderInfos.lots} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                                          {\" \"}\r\n                                        {this.state.toOpenOrderInfos.lots > 1\r\n                                          ? \"Lots\"\r\n                                          : \"Lot\"}\r\n                                      </span>\r\n                                    )}\r\n                                </div>\r\n                                <br></br>\r\n                                <div className=\"text-center\">\r\n                                  <span>\r\n                                    <NumberFormat\r\n                                      value={this.state.totalTo}\r\n                                      displayType={\"text\"}\r\n                                      thousandSeparator={true}\r\n                                      decimalScale={2}\r\n                                    />{\" \"}\r\n                                    {this.state.toSymbol.margin_currency}\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </Col>\r\n                      ) : (\r\n                        <Col md={4}>\r\n                          <div className=\"card change noRecordCol\">\r\n                            {\" \"}\r\n                            No Record Found\r\n                          </div>\r\n                        </Col>\r\n                      )}\r\n                    </>\r\n                    {/* <Col md={12}>\r\n                                            <div className=\"card change noRecordCol\"> No Recor Found</div>\r\n                                        </Col> */}\r\n                    {/* } */}\r\n                  </Row>\r\n                )}\r\n                <Col md={12} sm={6}>\r\n                  <div\r\n                    className={\r\n                      sumOfHistoryTotal + sumOfOpenTotal >= 0\r\n                        ? \"summary-box\"\r\n                        : \"summary-box-red\"\r\n                    }\r\n                  >\r\n                    {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\r\n                    {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\r\n                <span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\r\n\r\n                    <Col md={12} sm={12}>\r\n                      <div\r\n                        className=\"summary-text text-center\"\r\n                        style={{ fontWeight: 600, color: \"#797979\" }}\r\n                      >\r\n                        Summary For ({uniqueSymbols}){\" \"}\r\n                        {allHistoryRecord.history_info !== 0 && (\r\n                          <span> + Commission</span>\r\n                        )}{\" \"}\r\n                      </div>\r\n                    </Col>\r\n                    <Col md={12} sm={12}>\r\n                      <div\r\n                        className=\"text-center\"\r\n                        style={{ fontWeight: \"bold\", fontSize: \"18px\" }}\r\n                      >\r\n                        ${\" \"}\r\n                        <NumberFormat\r\n                          value={\r\n                            allHistoryRecord.history_info !== undefined\r\n                              ? sumOfHistoryTotal +\r\n                                sumOfOpenTotal +\r\n                                allHistoryRecord.history_info\r\n                              : sumOfHistoryTotal + sumOfOpenTotal\r\n                          }\r\n                          displayType={\"text\"}\r\n                          thousandSeparator={true}\r\n                          decimalScale={2}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <div className=\"clearfix\"></div>\r\n                  </div>\r\n                </Col>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport NumberFormat from 'react-number-format';\r\nimport config from '../../constant/config';\r\nimport Data from '../Data';\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\nimport './Statistics.css'\r\nimport { api } from '../../api'\r\nimport myInitObject from '../../api'\r\nconst axios = require('axios');\r\nexport default class Statistics extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n            filterlist: [],\r\n            selectedOption: null,\r\n            allHistoryRecord: [],\r\n            allOpenRecord: [],\r\n            fromHistoryOrderInfo: [],\r\n            toHistoryOrderInfo: [],\r\n            commissionHistoryOrderInfo: [],\r\n            fromOpenOrderInfo: [],\r\n            dateTime: '',\r\n            activeProfileName: ''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        // this.fetchActivefilterData();\r\n        // this.fetchAllHIstoryTrade();\r\n        // this.fetchLastUpdatedTime()\r\n        setInterval(() => {\r\n         if((myInitObject.responsHT &&\r\n           myInitObject.responsOT &&\r\n           myInitObject.responsAC &&\r\n           myInitObject.responsAF &&\r\n           myInitObject.responsLUT &&\r\n           myInitObject.responsSD) === undefined){\r\n           console.log('no data');\r\n         }else{\r\n        //    console.log(myInitObject, '=========><')\r\n           this.setState({\r\n             //history trade\r\n             allHistoryRecord: myInitObject.fetchAllHistoryTrade.rows,\r\n             fromHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.fromHistoryOrderInfo,\r\n             toHistoryOrderInfo: myInitObject.fetchAllHistoryTrade.toHistoryOrderInfo,\r\n             //open trade\r\n             allOpenRecord: myInitObject.fetchAllOpenTrade.rows,\r\n             fromOpenOrderInfo: myInitObject.fetchAllOpenTrade.fromOpenOrderInfo,\r\n             toOpenOrderInfo: myInitObject.fetchAllOpenTrade.toOpenOrderInfo,\r\n            \r\n             //active filter data\r\n             filterlist: myInitObject.fetchActivefilterdata.rows,\r\n            \r\n             activeProfileName: myInitObject.fetchActivefilterdata.rows[0].profile_name, \r\n             //last updated time\r\n             dateTime: myInitObject.fetchLastUpdatedTime.filteredInfoTime,\r\n             \r\n             },() =>{\r\n               this.setState({ errorMassege:this.state.filterlist.length == 0 ?  true : false,})\r\n             })\r\n         }\r\n        },1000)\r\n\r\n    }\r\n    // fetchLastUpdatedTime = () => {\r\n    //     let self = this;\r\n    //     axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\r\n    //         .then(function (response) {\r\n    //             if (response.status == 200) {\r\n    //                 self.setState({ dateTime: response.data.filteredInfoTime })\r\n    //                 // console.log(self.state.dataOpenTrade.accountFromInfo,\"outyfjhkjh\");\r\n    //             }\r\n    //         });\r\n    // }\r\n    // fetchActivefilterData = () => {\r\n    //     let self = this;\r\n    //     axios.get(config.baseurl + '/filter/fetchActivefilterdata')\r\n    //         .then(function (response) {\r\n    //             if (response.status == 200) {\r\n    //                 console.log(response, \"respp----------------->\")\r\n    //                 self.setState({ filterlist: response.data.rows, })\r\n    //                 if (self.state.filterlist.length == 0) {\r\n    //                     self.setState({ errorMassege: true ,})\r\n    //                     }\r\n    //                     else{\r\n    //                         self.setState({activeProfileName: response.data.rows[0].profile_name})\r\n    //                     }\r\n    //             }\r\n    //         });\r\n    // }\r\n\r\n    showData = (accountDetailValue) => {\r\n\r\n        return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\r\n            if (accountDetailValue === 'margin_level') {\r\n                return (\r\n                    <>\r\n                        <td className=\"tdClr2 tdClr boldText\" key={index}>\r\n                            <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\r\n                </td>\r\n                        <td className=\"tdClr2 boldText\" key={index}>\r\n                            {/* {item.accountToInfo[0].accounts_details[0][accountDetailValue]} % */}\r\n                            <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\r\n                </td>\r\n                    </>\r\n                )\r\n            }\r\n            if (item.accountFromInfo.length > 0) {\r\n                return (\r\n                    <>\r\n                        <td className=\"tdClr2 tdClr boldText\" key={index}>\r\n                            {item.accountFromInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''}  {' '}\r\n                            <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n                        </td>\r\n\r\n                        <td className=\"tdClr2 boldText\" key={index}>\r\n                            {item.accountToInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''} {' '}\r\n                            {/* {item.accountToInfo[0].accounts_details[0][accountDetailValue]} */}\r\n                            <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n                        </td>\r\n                    </>\r\n                )\r\n\r\n            }\r\n\r\n        })\r\n    }\r\n    tableHeader = () => {\r\n\r\n        return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\r\n            return (\r\n                <>\r\n                    <th key={index} className=\"bText colorDarkBlue text-center tdClr2 tdClr\">\r\n                        <div className=\"colorDarkBlue\" >\r\n                            {(item.accountFromInfo[0].alias != null) ? item.accountFromInfo[0].alias : '-'}\r\n                        </div>\r\n                        <span style={{ fontSize: 10 }}>\r\n                            {item.accountFromInfo[0].login}\r\n                        </span>\r\n\r\n                    </th>\r\n                    <th key={index} className=\"bText color2 text-center tdClr2\">\r\n                        <div className=\"color2\" >\r\n                            {(item.accountToInfo[0].alias != null) ? item.accountToInfo[0].alias : '-'}\r\n                        </div>\r\n                        <span style={{ fontSize: 10 }}>\r\n                            {item.accountToInfo[0].login}\r\n                        </span>\r\n\r\n                    </th>\r\n                </>\r\n\r\n            )\r\n\r\n        })\r\n    }\r\n    // fetchAllHIstoryTrade = () => {\r\n    //     let self = this;\r\n    //     axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\r\n    //         .then(function (response) {\r\n    //             // console.log(response.data, 'response.data his')\r\n    //             if (response.status == 200) {\r\n    //                 // self.setState({ allHistoryRecord: response.data.rows })\r\n    //                 self.setState({\r\n    //                     allHistoryRecord: response.data.rows,\r\n    //                     fromHistoryOrderInfo: response.data.fromHistoryOrderInfo,\r\n    //                     toHistoryOrderInfo: response.data.toHistoryOrderInfo,\r\n    //                     commissionHistoryOrderInfo: response.data.commissionHistoryOrderInfo\r\n    //                 })\r\n    //             }\r\n    //         })\r\n    //     // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\r\n    //     // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\r\n    //     axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\r\n    //         .then(function (response) {\r\n    //             if (response.status == 200) {\r\n\r\n    //                 // self.setState({ allOpenRecord: response.data.rows })\r\n    //                 self.setState({\r\n    //                     allOpenRecord: response.data.rows,\r\n    //                     fromOpenOrderInfo: response.data.fromOpenOrderInfo,\r\n    //                     toOpenOrderInfo: response.data.toOpenOrderInfo\r\n    //                 })\r\n    //             }\r\n    //         })\r\n    // }\r\n    render() {\r\n        const { allHistoryRecord, allOpenRecord, selectedOption, toOpenOrderInfo, fromOpenOrderInfo, fromHistoryOrderInfo, commissionHistoryOrderInfo, toHistoryOrderInfo } = this.state;\r\n        //   const sumOfOpenTotal = allOpenRecord.reduce((current, data) => {\r\n        //     return (Math.floor(data.commission + data.swap + data.profit+ current));\r\n        // }, 0);\r\n\r\n        //   const sumOfHistoryTotal = allHistoryRecord.reduce((current, data) => {\r\n        //     return (data.profit + current);\r\n        // }, 0);\r\n        let uniqueSymbols = \"\";\r\n        if (allOpenRecord && Object.entries(allOpenRecord).length > 0) {\r\n            let fromSymbols = JSON.parse(allOpenRecord.from_symbols);\r\n            // fromSymbols = (fromSymbols).map(data => data).join(', ');\r\n            let toSymbols = JSON.parse(allOpenRecord.to_symbols);\r\n            let combineSymbols = fromSymbols.concat(toSymbols);\r\n            uniqueSymbols = combineSymbols.filter((item, i, ar) => ar.indexOf(item) === i);\r\n            uniqueSymbols = (uniqueSymbols).map(data => data).join(', ')\r\n        }\r\n        let fromsum = 0;\r\n        let tosum = 0;\r\n        // if(fromHistoryOrderInfo && commissionHistoryOrderInfo && fromHistoryOrderInfo.length>0){\r\n        if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\r\n            fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\r\n        }\r\n\r\n        if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\r\n            tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\r\n        }\r\n\r\n        let sumOfHistoryTotal = tosum + fromsum;\r\n\r\n        let openfromsum = 0;\r\n        let opentosum = 0;\r\n        if ((fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total != null)) {\r\n            // if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\r\n            //   openfromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\r\n            // }else{\r\n            openfromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\r\n\r\n        }\r\n        if ((toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total != null)) {\r\n            // if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\r\n            //   opentosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit+ toOpenOrderInfo[0].swap);\r\n            // }\r\n\r\n            // else{\r\n            //   opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n            // }\r\n            opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\r\n        }\r\n\r\n        let sumOfOpenTotal = opentosum + openfromsum;\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {(this.state.errorMassege) ? <div className=\"popup\">\r\n\r\n                    <div className=\"card w-75 \">\r\n                        <div className=\"card-body topmargin\">\r\n                            <div className=\" card-text popuptext\" role=\"alert\">Please activate filter profile to view stats.......</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                    :\r\n                    <div className=\"statistic-wrapper\">\r\n                        <Grid fluid>\r\n                            <Row>\r\n                                <div className=\"lastUpdate\">\r\n                                    <span> Last Updated :  </span>\r\n                                    {this.state.dateTime}(UTC)  </div>\r\n                            </Row>\r\n                            <div className=\"terminal-box\">\r\n\r\n                                <span className=\"terminal-text\">Terminal Statistics</span>\r\n                            </div>\r\n                            <Row noGutters={true}>\r\n                                {Data.dashBoardPage.items.map((item, index) =>\r\n\r\n                                    <Col md={4} sm={6} key={index}>\r\n                                        <div style={{ margin: '30px 0px' }} className=\"text-center\">\r\n                                            <span className=\"bText\">{item.title}</span>\r\n                                        </div>\r\n                                        <div className=\"balance-box Pmargin\"\r\n                                        // className={item.id == '1' ? 'balance-box' : item.id == '2' ?\r\n                                        //   'balance-box Pmargin' : item.id == '3' ? 'balance-box equity-box' :\r\n                                        //     item.id == '4' ? 'balance-box Fmargin' : item.id == '5' ? 'balance-box floating' : 'balance-box  margin-box'}\r\n                                        >\r\n                                            <div className=\"content\">\r\n                                                <div className=\"table-responsive\">\r\n\r\n                                                    <table className=\"table  text-center\">\r\n\r\n                                                        <tbody>\r\n                                                            <tr>\r\n                                                                {this.tableHeader()}\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                {item.title == 'Balance' && this.showData('balance')}\r\n                                                                {item.title == 'Equity' && this.showData('equity')}\r\n                                                                {item.title == 'Margin' && this.showData('margin')}\r\n                                                                {item.title == 'Free Margin' && this.showData('free_margin')}\r\n                                                                {item.title == 'Margin %' && this.showData('margin_level')}\r\n                                                                {item.title == 'Unrealized P/L' && this.showData('profit')}\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                    </table>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Col>\r\n\r\n                                )}\r\n                            </Row>\r\n                            <Col md={12} sm={6}>\r\n                                <div className={sumOfHistoryTotal + sumOfOpenTotal >= 0 ? \"summary-box\" : \"summary-box-red\"}>\r\n\r\n\r\n                                    {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\r\n                                    {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\r\n                <span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\r\n\r\n                                    <Col md={12} sm={12}>\r\n                                        <div className=\"summary-text text-center\" style={{ fontWeight: 600, color: \"#797979\" }}>Summary For ({this.state.activeProfileName}) {allHistoryRecord.history_info !== 0 && (<span> + Commission</span>)} </div>\r\n                                    </Col>\r\n                                    <Col md={12} sm={12}>\r\n                                        <div className=\"text-center\" style={{ fontWeight: 'bold', fontSize: \"18px\" }}>$ {' '}\r\n                                            <NumberFormat value={allHistoryRecord.history_info !== undefined ? sumOfHistoryTotal + sumOfOpenTotal + allHistoryRecord.history_info : sumOfHistoryTotal + sumOfOpenTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n\r\n\r\n                                            {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\r\n\r\n                                        </div>\r\n                                    </Col>\r\n\r\n                                    <div className=\"clearfix\"></div>\r\n                                </div>\r\n                            </Col>\r\n                        </Grid>\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nclass UserDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      loggedIn: \"\",\r\n    };\r\n  }\r\n  crossClick(e) {\r\n    e.preventDefault();\r\n    this.props.onHide();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let data = this.props.data;\r\n    this.setState({\r\n      username: data.username,\r\n      loggedIn: data.logged_in,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <Grid fluid>\r\n          <div className=\"symbol-box\">\r\n            <div className=\"cross_div\">\r\n              <a onClick={(e) => this.crossClick(e)}>\r\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n              </a>\r\n            </div>\r\n            <div className=\"detail-text\">\r\n              <h3> User Details </h3>\r\n            </div>\r\n            <Row>\r\n              <Col md={12}>\r\n                <div className=\"card\">\r\n                  <table className=\"table mt20\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <td className=\"b-clr\">\r\n                          <span>Username :</span>\r\n                        </td>\r\n\r\n                        <td\r\n                          className=\"b-clr text-center\"\r\n                          style={{ width: \"40%\" }}\r\n                        >\r\n                          {this.state.username}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"b-clr \">\r\n                          <span>Logged In : </span>\r\n                        </td>\r\n                        <td\r\n                          className=\"b-clr text-center\"\r\n                          style={{ width: \"40%\" }}\r\n                        >\r\n                          {this.state.loggedIn === 1 ? \"Yes\" : \"No\"}\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserDetail;\r\n","import React, { Component } from \"react\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\r\nimport config from \"../../constant/config.js\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nclass UserEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      loggged_in: \"\",\r\n      id:'',\r\n      nameError: false\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    let abc = this.props.data;\r\n    console.log(abc, \"------------------>>>\");\r\n    if (abc) {\r\n      this.setState({\r\n        username: abc.username,\r\n        logggedIn: abc.logged_in,\r\n        id: abc.id\r\n      });\r\n    }\r\n  }\r\n\r\n  handleusername(e) {\r\n    this.setState({\r\n      username:\r\n        e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1),\r\n      error: \"\",\r\n    });\r\n  }\r\n  formDataSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    let Data = {\r\n      username: this.state.username,\r\n      id:this.state.id\r\n    };\r\n\r\n    axios\r\n      .post(config.baseurl + `/users/update`, Data)\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          this.props.onHide();\r\n        }\r\n      })\r\n      .catch(function (error) {});\r\n  }\r\n  crossClick(e) {\r\n    e.preventDefault();\r\n    this.props.onHide();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <Grid fluid>\r\n          <div className=\"symbol-box\">\r\n            <div className=\"cross_div\">\r\n              <a onClick={(e) => this.crossClick(e)}>\r\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n              </a>\r\n            </div>\r\n            <div className=\"detail-text\">\r\n              <h3> Edit User Details </h3>\r\n            </div>\r\n            <form>\r\n            <div className=\"terminal-text\">\r\n              <p className=\"profilename pnameadjust\"> Username</p>\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                value={this.state.username}\r\n                className=\"Itext\"\r\n                onChange={(e) => this.handleusername(e)}\r\n              />\r\n            </div>\r\n            <div className=\"terminal-text\">\r\n              <p className=\"profilename pnameadjust\"> Logged In</p>\r\n              <input\r\n                type=\"text\"\r\n                name=\"loggedIn\"\r\n                value={this.state.logggedIn}\r\n                className=\"Itext\"\r\n              />\r\n            </div>\r\n              <div className=\"save_button_filter\">\r\n                <Button\r\n                  className=\"btn-primary savebutton\"\r\n                  variant=\"primary\"\r\n                  size=\"lg\"\r\n                  block\r\n                  onClick={(e) => this.formDataSubmit(e)}\r\n                >\r\n                  <b>Update</b>\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserEdit;\r\n","import React, { Component } from \"react\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\r\nimport config from \"../../constant/config.js\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\nconst axios = require(\"axios\");\r\n\r\nclass AddUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      nameError: false\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.fetchusersdata();\r\n  }\r\n\r\n  fetchusersdata() {\r\n    let self = this;\r\n    axios\r\n      .get(config.baseurl + \"/users/allusers?page=1\")\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          self.setState({ userValues: response.data.rows });\r\n        }\r\n      });\r\n  }\r\n\r\n  handleusername(e) {\r\n    this.setState({ nameError: false });\r\n    if (this.state.userValues.length <= 0) {\r\n      this.setState({\r\n        username:\r\n          e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1),\r\n        error: \"\",\r\n      });\r\n    } else {\r\n      this.state.userValues.filter((data) => {\r\n        if (data.username.toUpperCase() !== e.target.value.toUpperCase()) {\r\n          this.setState({\r\n            username:\r\n              e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1),\r\n            error: \"\",\r\n          });\r\n        } else {\r\n          this.setState({ nameError: true }, () => {});\r\n          NotificationManager.listNotify = [];\r\n          NotificationManager.error(\"User already exits!\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n  handlepassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n  formDataSubmit(e) {\r\n    e.preventDefault();\r\n    let Data = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n    axios\r\n      .post(config.baseurl + \"/users/create\", Data)\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          this.props.onHide();\r\n        }\r\n      })\r\n      .catch(function (error) {});\r\n  }\r\n  crossClick(e) {\r\n    e.preventDefault();\r\n    this.props.onHide();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <NotificationContainer />\r\n        <div className=\"content\">\r\n          <Grid fluid>\r\n            <div className=\"symbol-box\">\r\n              <div className=\"cross_div\">\r\n                <a onClick={(e) => this.crossClick(e)}>\r\n                  <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n                </a>\r\n              </div>\r\n              <div className=\"detail-text\">\r\n                <h3> Add User </h3>\r\n              </div>\r\n              {/* <div className=\"terminal-text\">\r\n                <label className=\"pnameadjust\"> Profile Name </label>\r\n                <input type=\"text\" name=\"profilename\" className=\"Itext\" placeholder=\"Profile Name\" onChange={(e) => this.handleprofileName(e)} />\r\n              </div> */}\r\n\r\n              <form>\r\n                <div className=\"terminal-text\">\r\n                  <p className=\"profilename pnameadjust\"> Username</p>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    className=\"Itext\"\r\n                    onChange={(e) => this.handleusername(e)}\r\n                  />\r\n                </div>\r\n                <div className=\"terminal-text\">\r\n                  <p className=\"profilename pnameadjust\"> Password</p>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    className=\"Itext\"\r\n                    onChange={(e) => this.handlepassword(e)}\r\n                  />\r\n                </div>\r\n                <div className=\"save_button_filter\">\r\n                  <div className=\"savebtn\">\r\n                    <Button\r\n                      className=\"btn-primary savebutton\"\r\n                      variant=\"primary\"\r\n                      size=\"lg\"\r\n                      block\r\n                      onClick={(e) => this.formDataSubmit(e)}\r\n                    >\r\n                      <b>Save</b>\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Grid>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddUser;\r\n","import React, { Component } from \"react\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport config from \"../../constant/config.js\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport { api } from \"api\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport UserDetail from \"./userdetail\";\r\nimport UserEdit from \"./useredit\";\r\nimport AddUser from \"./adduser\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nclass Users extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      addUser: false,\r\n      filter: true,\r\n      usersData: [],\r\n      deleteData: [],\r\n      editData: [],\r\n      showDelete: false,\r\n      showEdit: false,\r\n      detailForm: false,\r\n      detailData: [],\r\n      count: \"\",\r\n      pages: \"\",\r\n      page: 1,\r\n    };\r\n  }\r\n  fetchusersdata() {\r\n    let self = this;\r\n    axios\r\n      .get(config.baseurl + `/users/allusers?page=${self.state.page}`)\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n            console.log(response.data, 'users')\r\n          self.setState({\r\n            usersData: response.data.rows,\r\n            count: response.data.count,\r\n            pages: response.data.pages,\r\n          });\r\n        }\r\n      });\r\n  }\r\n  handlePageClick = (data) => {\r\n    this.setState({ page: data.selected + 1 }, () => {\r\n      this.fectheAllAccount(this.state.page);\r\n    });\r\n  };\r\n  showaddUser = () => {\r\n    this.setState({ addUser: true, filter: false });\r\n  };\r\n  componentDidMount() {\r\n    this.fetchusersdata();\r\n  }\r\n\r\n  editUser = (e, data) => {\r\n    e.preventDefault();\r\n    this.setState({ showEdit: true, editData: data });\r\n  };\r\n\r\n  deleteUser(e, data) {\r\n    e.preventDefault();\r\n    this.setState({ deleteData: data, showDelete: true });\r\n  }\r\n  deletepopupClick(e) {\r\n    e.preventDefault();\r\n    let Data = {\r\n      id: this.state.deleteData.id,\r\n    };\r\n    let self = this;\r\n    axios\r\n      .post(config.baseurl + \"/users/delete\", Data)\r\n      .then(function (response) {\r\n        if (response.status == 200) {\r\n          self.setState({ showDelete: false });\r\n          self.fetchusersdata();\r\n        }\r\n      });\r\n  }\r\n  deletepopupclose(e) {\r\n    e.preventDefault();\r\n    this.setState({ showDelete: false });\r\n  }\r\n  viewUser(e, data) {\r\n    e.preventDefault();\r\n\r\n    this.setState({ detailForm: true, detailData: data });\r\n  }\r\n\r\n  createTr = () => {\r\n    return (\r\n      this.state.usersData.length > 0 &&\r\n      this.state.usersData.map((item, index) => {\r\n        return (\r\n          <tr key={index}>\r\n            <th scope=\"row\">{index + 1}</th>\r\n            <td>{item.username}</td>\r\n            <td>{item.logged_in}</td>\r\n            <td>\r\n              <span onClick={(e) => this.viewUser(e, item)}>\r\n                <i className=\"pointer fa fa-eye facolor\" aria-hidden=\"true\"></i>\r\n              </span>\r\n              <span onClick={(e) => this.editUser(e, item)}>\r\n                <i\r\n                  className=\"pointer fa fa-pencil-square-o facolor\"\r\n                  aria-hidden=\"true\"\r\n                ></i>\r\n              </span>\r\n                <span onClick={(e) => this.deleteUser(e, item)}>\r\n                  <i\r\n                    className=\"pointer fa fa-trash facolor\"\r\n                    aria-hidden=\"true\"\r\n                  ></i>\r\n                </span>\r\n            </td>\r\n          </tr>\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <NotificationContainer />\r\n        <div className=\"content\">\r\n          {this.state.detailForm ? (\r\n            <UserDetail\r\n              data={this.state.detailData}\r\n              show={this.state.detailForm}\r\n              onHide={() => this.setState({ detailForm: false })}\r\n            />\r\n          ) : (\r\n            <>\r\n              {this.state.showEdit ? (\r\n                <UserEdit\r\n                  data={this.state.editData}\r\n                  show={this.state.showEdit}\r\n                  onHide={() =>\r\n                    this.setState({ showEdit: false }, () =>\r\n                      this.fetchusersdata()\r\n                    )\r\n                  }\r\n                />\r\n              ) : (\r\n                <>\r\n                  {!this.state.addUser && (\r\n                    <Grid fluid>\r\n                      <div className=\"selection-box\">\r\n                        <span className=\"terminal-text\"> Users </span>\r\n                      </div>\r\n                      <button\r\n                        className=\"pull-right filter-add-button\"\r\n                        onClick={this.showaddUser}\r\n                      >\r\n                        Add New\r\n                      </button>\r\n                    </Grid>\r\n                  )}\r\n                  {\r\n                    this.state.addUser ? (\r\n                      <AddUser\r\n                        show={this.state.addUser}\r\n                        onHide={() =>\r\n                          this.setState({ addUser: false }, () => {\r\n                            this.fetchusersdata();\r\n                          })\r\n                        }\r\n                      />\r\n                    ) : (\r\n                      <div style={{ background: \"#ffffff\" }}>\r\n                        <Row>\r\n                          <Col md={12}>\r\n                            <div style={{ padding: \"10px\" }}>\r\n                              <table className=\"table table-striped table-bordered\">\r\n                                <thead>\r\n                                  <tr>\r\n                                    <th scope=\"col\">Sr.No.</th>\r\n                                    <th scope=\"col\">User Name</th>\r\n                                    <th scope=\"col\">Logged In</th>\r\n                                    <th scope=\"col\">Action</th>\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.createTr()}\r\n                                </tbody>\r\n                              </table>\r\n                              <ReactPaginate\r\n                                previousLabel={\"prev\"}\r\n                                nextLabel={\"next\"}\r\n                                breakLabel={\"...\"}\r\n                                pageCount={this.state.pages}\r\n                                marginPagesDisplayed={9}\r\n                                pageRangeDisplayed={9}\r\n                                onPageChange={(e) => this.handlePageClick(e)}\r\n                                containerClassName={\"pagination\"}\r\n                                subContainerClassName={\"pages pagination\"}\r\n                                activeClassName={\"active\"}\r\n                              />\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                    )\r\n                  }\r\n\r\n                  {this.state.showDelete && (\r\n                    <div className=\"delete_popup\">\r\n                      <h3>Are you sure ?</h3>\r\n                      <span\r\n                        className=\"pointer dltbtn\"\r\n                        onClick={(e) => this.deletepopupClick(e)}\r\n                      >\r\n                        Delete\r\n                      </span>\r\n                      <span\r\n                        className=\"pointer closebtn\"\r\n                        onClick={(e) => this.deletepopupclose(e)}\r\n                      >\r\n                        Close\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Users;\r\n","import Dashboard from \"views/Dashboard.jsx\";\r\n// import UserProfile from \"views/UserProfile.jsx\";\r\n// import TableList from \"views/TableList.jsx\";\r\n// import Typography from \"views/Typography.jsx\";\r\n// import Icons from \"views/Icons.jsx\";\r\n// import Maps from \"views/Maps.jsx\";\r\n// import Notifications from \"views/Notifications.jsx\";\r\n// import Upgrade from \"views/Upgrade.jsx\";\r\n// import Filter from '../src/views/Filter';\r\nimport Innerlogin from 'views/Innerlogin';\r\nimport Filterprofile from './views/filter/Filterprofile';\r\nimport Swap from '../src/views/swap';\r\nimport calculating from '../src/views/calculating';\r\nimport Exploser from '../src/views/exploser';\r\nimport ContractSize from './views/ContractSize/ContractSize';\r\nimport Statistics from './views/Statistics/Statistics';\r\nimport myInitObject from './api'\r\nimport Users from \"../src/views/users/users\";\r\n\r\nconst dashboardRoutes = [\r\n  {\r\n    id: 1,\r\n    child: false,\r\n    menu: false,\r\n    path: \"/dashboard\",\r\n    name: \"Dashboard\",\r\n    icon: \"pe-7s-graph\",\r\n    component: Dashboard,\r\n    layout: \"/dashboard\",\r\n    data: myInitObject\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    child: false,\r\n    menu: false,\r\n    path: \"/Statistics\",\r\n    name: \" Statistics\",\r\n    icon: \"pe-7s-filter\",\r\n    component: Statistics,\r\n    layout: \"/dashboard\",\r\n  },\r\n\r\n\r\n  {\r\n    id: 3,\r\n    child: false,\r\n    menu: false,\r\n    path: \"/calculating\",\r\n    name: \"Positions\",\r\n    icon: \"pe-7s-calculator\",\r\n    component: calculating,\r\n    layout: \"/dashboard\",\r\n  },\r\n  {\r\n    id: 3,\r\n    child: false,\r\n    menu: false,\r\n    path: \"/contractSize\",\r\n    name: \" Contract Size Exposure\",\r\n    icon: \"pe-7s-search\",\r\n    component: ContractSize,\r\n    // component: calculating,\r\n    layout: \"/dashboard\",\r\n  },\r\n \r\n\r\n\r\n  // {\r\n  //   path: \"/exploser\",\r\n  //   name: \"Exploser\",\r\n  //   icon: \"pe-7s-search\",\r\n  //   component: Exploser,\r\n  //   layout: \"/admin\"\r\n  // },\r\n\r\n\r\n  {\r\n    id: 4,\r\n    child: true,\r\n    menu: false,\r\n    // path: \"/innerlogin\",\r\n    name: \"Settings\",\r\n    // component: Innerlogin,\r\n    icon: \"pe-7s-note2\",\r\n    // layout: \"/admin\",\r\n\r\n\r\n    resources: [\r\n      {\r\n\r\n        path: \"/settings/innerlogin\",\r\n        name: \"Login/Accounts\",\r\n        icon: \"pe-7s-note2\",\r\n        component: Innerlogin,\r\n        layout: \"/dashboard\"\r\n      },\r\n\r\n\r\n      {\r\n\r\n        path: \"/settings/filterpage\",\r\n        name: \"Filter\",\r\n        icon: \"pe-7s-filter\",\r\n        component: Filterprofile,\r\n        layout: \"/dashboard\"\r\n      },\r\n\r\n\r\n      {\r\n\r\n        path: \"/settings/swap\",\r\n        name: \"Swap\",\r\n        icon: \"pe-7s-graph\",\r\n        component: Swap,\r\n        layout: \"/dashboard\",\r\n      },\r\n      {\r\n\r\n        path: \"/settings/users\",\r\n        name: \"Users\",\r\n        icon: \"pe-7s-graph\",\r\n        component: Users,\r\n        layout: \"/dashboard\",\r\n      },\r\n    ]\r\n  },\r\n\r\n  // {\r\n  //   path: \"/typography\",\r\n  //   name: \"Typography\",\r\n  //   icon: \"pe-7s-news-paper\",\r\n  //   component: Typography,\r\n  //   layout: \"/dashboard\"\r\n  // },\r\n  // {\r\n  //   path: \"/icons\",\r\n  //   name: \"Icons\",\r\n  //   icon: \"pe-7s-science\",\r\n  //   component: Icons,\r\n  //   layout: \"/dashboard\"\r\n  // },\r\n  // {\r\n  //   path: \"/maps\",\r\n  //   name: \"Maps\",\r\n  //   icon: \"pe-7s-map-marker\",\r\n  //   component: Maps,\r\n  //   layout: \"/dashboard\"\r\n  // },\r\n  // {\r\n  //   path: \"/notifications\",\r\n  //   name: \"Notifications\",\r\n  //   icon: \"pe-7s-bell\",\r\n  //   component: Notifications,\r\n  //   layout: \"/dashboard\"\r\n  // },\r\n  // {\r\n  //   upgrade: true,\r\n  //   path: \"/upgrade\",\r\n  //   name: \"Upgrade to PRO\",\r\n  //   icon: \"pe-7s-rocket\",\r\n  //   component: Upgrade,\r\n  //   layout: \"/dashboard\"\r\n  // }\r\n];\r\n\r\nexport default dashboardRoutes;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport NotificationSystem from \"react-notification-system\";\r\n\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\r\n// import Footer from \"components/Footer/Footer\";\r\nimport Sidebar from \"components/Sidebar/Sidebar\";\r\n// import FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\r\n\r\nimport { style } from \"variables/Variables.jsx\";\r\n\r\nimport routes from \"routes.js\";\r\n\r\nimport image from \"assets/img/sidebar-3.jpg\";\r\n\r\nimport { api } from '../api'\r\nimport myInitObject from '../api'\r\n\r\nclass Admin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      _notificationSystem: null,\r\n      image: image,\r\n      color: \"black\",\r\n      hasImage: true,\r\n      fixedClasses: \"dropdown show-dropdown open\"\r\n    };\r\n  }\r\n  // handleNotificationClick = position => {\r\n  //   var color = Math.floor(Math.random() * 4 + 1);\r\n  //   var level;\r\n  //   switch (color) {\r\n  //     case 1:\r\n  //       level = \"success\";\r\n  //       break;\r\n  //     case 2:\r\n  //       level = \"warning\";\r\n  //       break;\r\n  //     case 3:\r\n  //       level = \"error\";\r\n  //       break;\r\n  //     case 4:\r\n  //       level = \"info\";\r\n  //       break;\r\n  //     default:\r\n  //       break;\r\n  //   }\r\n  //   this.state._notificationSystem.addNotification({\r\n  //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\r\n  //     message: (\r\n  //       <div>\r\n  //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\r\n  //         every web developer.\r\n  //       </div>\r\n  //     ),\r\n  //     level: level,\r\n  //     position: position,\r\n  //     autoDismiss: 15\r\n  //   });\r\n  // };\r\n  getRoutes = routes => {\r\n    let routeArray = []\r\n    routes.map((data) => {\r\n      routeArray.push(data)\r\n      if (data.child === true) {\r\n        data.resources.map((prop) => {\r\n          routeArray.push(prop)\r\n        })\r\n      }\r\n    })\r\n    return routeArray.map((prop, key) => {\r\n      if (prop.layout === \"/dashboard\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            render={props => (\r\n              <prop.component\r\n                {...props}\r\n                handleClick={this.handleNotificationClick}\r\n              />\r\n            )}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  getBrandText = path => {\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (\r\n        this.props.location.pathname.indexOf(\r\n          routes[i].layout + routes[i].path\r\n        ) !== -1\r\n      ) {\r\n        return routes[i].name;\r\n      }\r\n    }\r\n    // return \"Brand\";\r\n  };\r\n  handleImageClick = image => {\r\n    this.setState({ image: image });\r\n  };\r\n  handleColorClick = color => {\r\n    this.setState({ color: color });\r\n  };\r\n  handleHasImage = hasImage => {\r\n    this.setState({ hasImage: hasImage });\r\n  };\r\n  handleFixedClick = () => {\r\n    if (this.state.fixedClasses === \"dropdown\") {\r\n      this.setState({ fixedClasses: \"dropdown show-dropdown open\" });\r\n    } else {\r\n      this.setState({ fixedClasses: \"dropdown\" });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    let currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    if (currentUser === null) {\r\n      this.props.history.push('/login')\r\n      return;\r\n    }else{\r\n      api()\r\n      setInterval(() => {\r\n        api()\r\n      }, 300000);\r\n      \r\n    }\r\n\r\n    //   this.setState({ _notificationSystem: this.refs.notificationSystem });\r\n    //   var _notificationSystem = this.refs.notificationSystem;\r\n    //   var color = Math.floor(Math.random() * 4 + 1);\r\n    //   var level;\r\n    //   switch (color) {\r\n    //     case 1:\r\n    //       level = \"success\";\r\n    //       break;\r\n    //     case 2:\r\n    //       level = \"warning\";\r\n    //       break;\r\n    //     case 3:\r\n    //       level = \"error\";\r\n    //       break;\r\n    //     case 4:\r\n    //       level = \"info\";\r\n    //       break;\r\n    //     default:\r\n    //       break;\r\n    //   }\r\n    //   _notificationSystem.addNotification({\r\n    //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\r\n    //     message: (\r\n    //       <div>\r\n    //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\r\n    //         every web developer.\r\n    //       </div>\r\n    //     ),\r\n    //     level: level,\r\n    //     position: \"tr\",\r\n    //     autoDismiss: 15\r\n    //   });\r\n  }\r\n  componentDidUpdate(e) {\r\n    if (\r\n      window.innerWidth < 993 &&\r\n      e.history.location.pathname !== e.location.pathname &&\r\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n    ) {\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n    }\r\n    if (e.history.action === \"PUSH\") {\r\n      document.documentElement.scrollTop = 0;\r\n      document.scrollingElement.scrollTop = 0;\r\n      this.refs.mainPanel.scrollTop = 0;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <NotificationSystem ref=\"notificationSystem\" style={style} />\r\n        <Sidebar {...this.props} routes={routes} image={this.state.image}\r\n          color={this.state.color}\r\n          hasImage={this.state.hasImage} />\r\n        <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\r\n          <AdminNavbar\r\n            {...this.props}\r\n            brandText={this.getBrandText(this.props.location.pathname)}\r\n          />\r\n          <Switch>{this.getRoutes(routes)}</Switch>\r\n          {/* <Footer /> */}\r\n          {/* <FixedPlugin\r\n            handleImageClick={this.handleImageClick}\r\n            handleColorClick={this.handleColorClick}\r\n            handleHasImage={this.handleHasImage}\r\n            bgColor={this.state[\"color\"]}\r\n            bgImage={this.state[\"image\"]}\r\n            mini={this.state[\"mini\"]}\r\n            handleFixedClick={this.handleFixedClick}\r\n            fixedClasses={this.state.fixedClasses}\r\n          /> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin;\r\n","\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./assets/css/animate.min.css\";\r\nimport \"./assets/sass/light-bootstrap-dashboard-react.scss?v=1.3.0\";\r\nimport \"./assets/css/demo.css\";\r\nimport \"./assets/css/pe-icon-7-stroke.css\";\r\nimport \"./assets/css/dashboard.css\";\r\nimport innerfilter from \"./views/filter/innerfilter\";\r\nimport Login from \"./views/login\";\r\n\r\n\r\nimport AdminLayout from \"./layouts/Admin.jsx\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route path=\"/dashboard\" render={props => <AdminLayout {...props} />} />\r\n\r\n      <Route exact path=\"/dashboard/innerfilter\" component={innerfilter} />\r\n      <Route exact from=\"/login\" component={Login} />\r\n      {/* <Redirect from=\"/\" to=\"/admin/dashboard\" /> */}\r\n      {/* <Redirect from=\"/\" component={Login} /> */}\r\n      <Redirect from=\"/\" to=\"/login\"/>\r\n      {/* <Route exact path=\"/innerfilter\" component={innerfilter} /> */}\r\n\r\n    </Switch>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}