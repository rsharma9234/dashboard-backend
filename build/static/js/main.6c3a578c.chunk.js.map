{"version":3,"sources":["variables/Variables.jsx","assets/img/sidebar-3.jpg","../node_modules/typescript/lib sync","constant/config.js","views/filter/innerfilter.js","views/login/index.js","components/Navbars/AdminNavbarLinks.jsx","components/Navbars/AdminNavbar.jsx","components/Sidebar/Sidebar.jsx","views/Closeposition.js","views/Data.js","views/Openposition.js","views/TableList.jsx","views/Innerlogin.js","views/Dashboard.jsx","views/filter/filteredit.js","views/filter/filterdetail.js","views/filter/Filterprofile.js","views/swap/index.js","views/calculating/index.js","views/exploser/index.js","routes.js","layouts/Admin.jsx","index.js"],"names":["defaultWidth","window","screen","width","style","Wrapper","Containers","DefaultStyle","position","padding","zIndex","WebkitBoxSizing","MozBoxSizing","boxSizing","height","display","border","fontSize","WebkitFontSmoothing","fontFamily","fontWeight","color","tl","top","bottom","left","right","tr","tc","margin","marginLeft","bl","br","bc","NotificationItem","cursor","borderRadius","opacity","transition","WebkitTransform","transform","willChange","isHidden","isVisible","success","borderTop","backgroundColor","WebkitBoxShadow","MozBoxShadow","boxShadow","error","warning","info","Title","marginTop","MessageWrapper","marginRight","maxWidthwidth","Dismiss","float","lineHeight","outline","textAlign","Action","background","ActionWrapper","module","exports","thArray","tdArray","iconsArray","dataPie","labels","series","legendPie","names","types","dataSales","optionsSales","low","high","showArea","axisX","showGrid","lineSmooth","showLine","showPoint","fullWidth","chartPadding","responsiveSales","labelInterpolationFnc","value","legendSales","dataBar","optionsBar","seriesBarDistance","responsiveBar","legendBar","__webpack_require__","p","webpackEmptyContext","req","e","Error","code","keys","resolve","id","config","baseurl","axios","require","Innerfilter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDropdownChange","setState","selectValue","target","handleChangeDate","date","startDate","handleEndDate","state","endDate","handleChangeDateTo","startDateTo","handleEndDateTo","endDateTo","handleChange","event","Array","from","selectedOptions","item","renderAccountSelect","_this$state","selectedAccountOption","options","allAccounts","map","data","label","login","react_default","a","createElement","react_select_browser_esm","placeholder","onChange","handleChangeAccount","handeChangeShowCommission","showCommission","showAddCommission","handleChangeAccountTo","selectedAccountOptionTo","renderAccountSelectTo","_this$state2","handleChangeCommissionAccount","selectedCommissionAccount","renderCommissionAccount","_this$state3","handleChangeMagicNumber","magicNumber","console","log","handleChangeMagicNumberTo","magicNumberTo","handleChangeSymbol","selectedSymbolOption","renderSymbolSelect","_this$state4","allSymbols","name","isMulti","handleChangeSymbolTo","selectedSymbolOptionTo","renderSymbolSelectTo","_this$state5","changeIncludeDefaultProperty","include","exclude","showMagicNumber","changeExcludeDefaultProperty","changeIncludeDefaultPropertyTo","includeTo","excludeTo","showMagicNumberTo","changeExcludeDefaultPropertyTo","profileName","showCommisoin","autoSyncClose","profileValues","nameError","tags","include_exclude_status","fetchfilterdata","self","get","then","response","status","rows","_this2","filter","profile_name","charAt","toUpperCase","slice","NotificationManager","listNotify","preventDefault","from_status","to_status","symbolFrom","symbolto","Data","from_account_id","to_account_id","commission_acount_id","startdateFrom","enddateFrom","startdateTo","enddateTo","from_symbols","JSON","stringify","to_symbols","auto_close","from_magic_number","length","to_magic_number","from_include_exclude_status","to_include_exclude_status","createdAt","Date","updatedAt","post","onHide","catch","_this3","Fragment","lib","className","Grid","fluid","onClick","crossClick","aria-hidden","type","handleprofileName","defaultChecked","handleChangeAutoSync","Row","Col","md","react_datepicker_min_default","selected","isClearable","placeholderText","dateFormat","strictParsing","autoOk","checked","react_tagsinput_default","onValidationReject","validationRegex","inputProps","Button","variant","size","block","formDataSubmit","Component","Login","toogle","loginForm","handleClose","handleShow","setShow","createNotification","show","username","password","alert","persons","shwPwd","shwMsg","invalidUsername","invalidPassword","accountlist","bind","assertThisInitialized","onSubmit","defineProperty","trim","userdetail","localStorage","setItem","history","push","message","err","parse","getItem","sm","Modal","disabled","AdminNavbarLinks","logout","clear","notification","Nav","NavItem","eventKey","href","NavDropdown","title","noCaret","MenuItem","pullRight","Header","mobileSidebarToggle","sidebarExists","document","documentElement","classList","toggle","node","onclick","parentElement","removeChild","body","appendChild","Navbar","Brand","brandText","Toggle","Collapse","Navbars_AdminNavbarLinks","Sidebar","menu","innerWidth","routeName","location","pathname","indexOf","updateDimensions","addEventListener","image","data-color","data-image","hasImage","routes","prop","key","redirect","upgrade","activeRoute","layout","path","react_router_dom","to","activeClassName","icon","undefined","resources","sub","index","Closeposition","allHistoryRecord","fromHistoryOrderInfo","toHistoryOrderInfo","commissionHistoryOrderInfo","_useState","useState","_useState2","slicedToArray","isOpen2","setIsOpen2","fromSymbols","toSymbols","entries","join","fromsum","tosum","commission","swap","profit","sumOfTotal","noRecord","total","isOpen","react","accountFromInfo","alias","react_number_format_es","displayType","thousandSeparator","decimalScale","accountToInfo","marginBottom","accountCommissionInfo","history_info","tablePage","items","lot","closed","price","textA","dashBoardPage","textB","Openposition","setIsOpen","allOpenRecord","fromOpenOrderInfo","toOpenOrderInfo","swapFrominfo","order_type","lots","swapToinfo","intervalSet","timerWaitInterval","TableList","fetchDataAccordingSymbols","symbol","_this$state$filterlis","filterlist","selectedOption","renderSymbols","uniqueSymbols","concat","i","ar","sumOfHistoryTotal","openfromsum","opentosum","sumOfOpenTotal","views_Closeposition","Dashboard","getAllAccounts","fetchActivefilterData","errorMassege","fetchAllOpenTrade","dateTime","filteredInfoTime","fetchStatusData","fromAccounts","fromSymbol","toAccounts","toSymbol","fromOpenOrderInfos","contract_size","toOpenOrderInfos","totalTo","showData","accountDetailValue","accounts_details","currency","exposureTr","tableHeader","details","formData","json","legend","class","role","margin_currency","views_TableList","timerWait","Innerlogin","checkUserConnected","broker","connected","currentAddLogin","currentAddBroker","currentAddAlias","clearInterval","timerShow","fectheAllAccount","setIntervalCustom","content","innerHTML","setInterval","closebtn","swal","timer","button","handleCloseEdit","editForm","handleCloseDetail","detailForm","createTr","scope","launched","viewFilter","editFilter","onUpdate","re","test","text","user","edituser","editserver","editalias","editData","editstatus","Body","closeButton","editAlias","FilterEdite","l","rules","required","abc","from_symbol","to_symbol","all_from_symbols","all_to_symbols","c","moment","FilterDetail","showMagicNumberFrom","format","Filterprofile","showInnerfilter","createWariningNotification","showEdit","editeData","newDate","filterData","activateClick","deactivateClick","deleteFilter","deleteData","showDelete","detailData","filterdetail","filteredit","innerfilter","deletepopupClick","deletepopupclose","Swap","dashboardRoutes","component","_useState3","_useState4","_useState5","_useState6","fromAccountId","setFromAccountId","_useState7","_useState8","toAccountId","setToAccountId","_useState9","_useState10","fromOpenTrade","setFromOpenTrade","_useState11","_useState12","toOpenTrade","setToOpenTrade","_useState13","_useState14","fromHistoryTrade","setFromHistoryTrade","_useState15","_useState16","toHistoryTrade","setToHistoryTrade","_useState17","_useState18","setCommissionDetails","_useState19","_useState20","setopenTotal","_useState21","_useState22","sethistoryTotal","_useState23","_useState24","totalOpenAndHistory","settotalOpenAndHistory","_useState25","_useState26","commissionValue","setCommissionValue","useEffect","openTotal","historyTotal","commissionDetails","totalOfOpenOrder","totalOfHistoryOrder","newCommissionRecord","openFromHistoryTotal","openToOrderTotal","openToHistoryTotal","openFromOrderTotal","lotsTotal","comissionTotal","profitTotal","swapTotal","open_time","utc","magic_number","fromOpenTradeTr","toOpenTradeTr","fromHistoryTradeTr","toHistoryTradeTr","totalProfit","equity","Admin","getRoutes","react_router","render","assign","handleClick","handleNotificationClick","getBrandText","handleImageClick","handleColorClick","handleHasImage","handleFixedClick","fixedClasses","_notificationSystem","action","scrollTop","scrollingElement","refs","mainPanel","NotificationSystem_default","ref","components_Sidebar_Sidebar","AdminNavbar","ReactDOM","layouts_Admin","exact","getElementById"],"mappings":"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kBACA,aACA,mBACA,aACA,cACA,eACA,qBACA,iBACA,cACA,cACA,eACA,kBACA,eACA,iBACA,eACA,cACA,YACA,eACA,aACA,qBACA,aACA,cACA,kBACA,uBACA,YACA,qBACA,WACA,iBACA,mBACA,wBACA,cACA,oBACA,eACA,2BACA,cACA,mBACA,oBACA,0BACA,iBACA,mBACA,eACA,0BACA,iBACA,eACA,aACA,gBACA,gBACA,kBACA,cACA,aACA,eACA,eACA,iBACA,cACA,cACA,cACA,eACA,eACA,YACA,cACA,kBACA,aACA,gBACA,eACA,gBACA,gBACA,cACA,eACA,eACA,aACA,gBACA,aACA,eACA,eACA,gBACA,iBACA,sBACA,kBACA,cACA,cACA,cACA,gBACA,aACA,aACA,cACA,cACA,kBACA,cACA,aACA,mBACA,aACA,YACA,cACA,YACA,sBACA,YACA,cACA,aACA,YACA,oBACA,oBACA,oBACA,cACA,qBACA,iBACA,aACA,aACA,mBACA,kBACA,cACA,cACA,aACA,aACA,gBACA,cACA,aACA,YACA,mBACA,aACA,kBACA,uBACA,eACA,aACA,aACA,aACA,gBACA,aACA,aACA,cACA,aACA,eACA,aACA,aACA,aACA,cACA,cACA,eACA,eACA,eACA,cACA,eACA,cACA,gBACA,aACA,eACA,aACA,eACA,aACA,gBACA,gBACA,aACA,aACA,eACA,iBACA,iBACA,iBACA,iBACA,aACA,YACA,gBACA,aACA,eACA,kBACA,eACA,gBACA,gBACA,eACA,cACA,cACA,cACA,aACA,aACA,eACA,aACA,mBACA,gBACA,aACA,aACA,kBACA,gBACA,aACA,gBACA,aACA,aACA,kBACA,eACA,eACA,cACA,iBAwHAC,QA/GY,CACZC,OAAQ,CAAC,MAAO,MAAO,OACvBC,OAAQ,CAAC,GAAI,GAAI,KA8GjBC,UA5Gc,CACdC,MAAO,CAAC,OAAQ,SAAU,eAC1BC,MAAO,CAAC,OAAQ,SAAU,YA2G1BC,UAvGc,CACdL,OAAQ,CACN,SACA,UACA,SACA,SACA,SACA,UAC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","file":"static/js/main.6c3a578c.chunk.js","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n//\n// //\n// // // For notifications\n// //\n//\nvar defaultWidth =\n  window.screen.width > 768\n    ? (window.screen.width * 1) / 3\n    : window.screen.width;\n\nvar style = {\n  Wrapper: {},\n  Containers: {\n    DefaultStyle: {\n      position: \"fixed\",\n      width: defaultWidth,\n      padding: \"10px 10px 10px 20px\",\n      zIndex: 9998,\n      WebkitBoxSizing: \"\",\n      MozBoxSizing: \"\",\n      boxSizing: \"\",\n      height: \"auto\",\n      display: \"inline-block\",\n      border: \"0\",\n      fontSize: \"14px\",\n      WebkitFontSmoothing: \"antialiased\",\n      fontFamily: '\"Roboto\",\"Helvetica Neue\",Arial,sans-serif',\n      fontWeight: \"400\",\n      color: \"#FFFFFF\"\n    },\n\n    tl: {\n      top: \"0px\",\n      bottom: \"auto\",\n      left: \"0px\",\n      right: \"auto\"\n    },\n\n    tr: {\n      top: \"0px\",\n      bottom: \"auto\",\n      left: \"auto\",\n      right: \"0px\"\n    },\n\n    tc: {\n      top: \"0px\",\n      bottom: \"auto\",\n      margin: \"0 auto\",\n      left: \"50%\",\n      marginLeft: -(defaultWidth / 2)\n    },\n\n    bl: {\n      top: \"auto\",\n      bottom: \"0px\",\n      left: \"0px\",\n      right: \"auto\"\n    },\n\n    br: {\n      top: \"auto\",\n      bottom: \"0px\",\n      left: \"auto\",\n      right: \"0px\"\n    },\n\n    bc: {\n      top: \"auto\",\n      bottom: \"0px\",\n      margin: \"0 auto\",\n      left: \"50%\",\n      marginLeft: -(defaultWidth / 2)\n    }\n  },\n\n  NotificationItem: {\n    DefaultStyle: {\n      position: \"relative\",\n      width: \"100%\",\n      cursor: \"pointer\",\n      borderRadius: \"4px\",\n      fontSize: \"14px\",\n      margin: \"10px 0 0\",\n      padding: \"10px\",\n      display: \"block\",\n      WebkitBoxSizing: \"border-box\",\n      MozBoxSizing: \"border-box\",\n      boxSizing: \"border-box\",\n      opacity: 0,\n      transition: \"all 0.5s ease-in-out\",\n      WebkitTransform: \"translate3d(0, 0, 0)\",\n      transform: \"translate3d(0, 0, 0)\",\n      willChange: \"transform, opacity\",\n\n      isHidden: {\n        opacity: 0\n      },\n\n      isVisible: {\n        opacity: 1\n      }\n    },\n\n    success: {\n      borderTop: 0,\n      backgroundColor: \"#a1e82c\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    error: {\n      borderTop: 0,\n      backgroundColor: \"#fc727a\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    warning: {\n      borderTop: 0,\n      backgroundColor: \"#ffbc67\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    info: {\n      borderTop: 0,\n      backgroundColor: \"#63d8f1\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    }\n  },\n\n  Title: {\n    DefaultStyle: {\n      fontSize: \"30px\",\n      margin: \"0\",\n      padding: 0,\n      fontWeight: \"bold\",\n      color: \"#FFFFFF\",\n      display: \"block\",\n      left: \"15px\",\n      position: \"absolute\",\n      top: \"50%\",\n      marginTop: \"-15px\"\n    }\n  },\n\n  MessageWrapper: {\n    DefaultStyle: {\n      marginLeft: \"55px\",\n      marginRight: \"30px\",\n      padding: \"0 12px 0 0\",\n      color: \"#FFFFFF\",\n      maxWidthwidth: \"89%\"\n    }\n  },\n\n  Dismiss: {\n    DefaultStyle: {\n      fontFamily: \"inherit\",\n      fontSize: \"21px\",\n      color: \"#000\",\n      float: \"right\",\n      position: \"absolute\",\n      right: \"10px\",\n      top: \"50%\",\n      marginTop: \"-13px\",\n      backgroundColor: \"#FFFFFF\",\n      display: \"block\",\n      borderRadius: \"50%\",\n      opacity: \".4\",\n      lineHeight: \"11px\",\n      width: \"25px\",\n      height: \"25px\",\n      outline: \"0 !important\",\n      textAlign: \"center\",\n      padding: \"6px 3px 3px 3px\",\n      fontWeight: \"300\",\n      marginLeft: \"65px\"\n    },\n\n    success: {\n      // color: '#f0f5ea',\n      // backgroundColor: '#a1e82c'\n    },\n\n    error: {\n      // color: '#f4e9e9',\n      // backgroundColor: '#fc727a'\n    },\n\n    warning: {\n      // color: '#f9f6f0',\n      // backgroundColor: '#ffbc67'\n    },\n\n    info: {\n      // color: '#e8f0f4',\n      // backgroundColor: '#63d8f1'\n    }\n  },\n\n  Action: {\n    DefaultStyle: {\n      background: \"#ffffff\",\n      borderRadius: \"2px\",\n      padding: \"6px 20px\",\n      fontWeight: \"bold\",\n      margin: \"10px 0 0 0\",\n      border: 0\n    },\n\n    success: {\n      backgroundColor: \"#a1e82c\",\n      color: \"#ffffff\"\n    },\n\n    error: {\n      backgroundColor: \"#fc727a\",\n      color: \"#ffffff\"\n    },\n\n    warning: {\n      backgroundColor: \"#ffbc67\",\n      color: \"#ffffff\"\n    },\n\n    info: {\n      backgroundColor: \"#63d8f1\",\n      color: \"#ffffff\"\n    }\n  },\n\n  ActionWrapper: {\n    DefaultStyle: {\n      margin: 0,\n      padding: 0\n    }\n  }\n};\n\n//\n// //\n// // // For tables\n// //\n//\nconst thArray = [\"ID\", \"Name\", \"Salary\", \"Country\", \"City\"];\nconst tdArray = [\n  [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\", \"Oud-Turnhout\"],\n  [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\", \"Sinaai-Waas\"],\n  [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\", \"Baileux\"],\n  [\"4\", \"Philip Chaney\", \"$38,735\", \"Korea, South\", \"Overland Park\"],\n  [\"5\", \"Doris Greene\", \"$63,542\", \"Malawi\", \"Feldkirchen in Kärnten\"],\n  [\"6\", \"Mason Porter\", \"$78,615\", \"Chile\", \"Gloucester\"]\n];\n\n//\n// //\n// // // For icons\n// //\n//\nconst iconsArray = [\n  \"pe-7s-album\",\n  \"pe-7s-arc\",\n  \"pe-7s-back-2\",\n  \"pe-7s-bandaid\",\n  \"pe-7s-car\",\n  \"pe-7s-diamond\",\n  \"pe-7s-door-lock\",\n  \"pe-7s-eyedropper\",\n  \"pe-7s-female\",\n  \"pe-7s-gym\",\n  \"pe-7s-hammer\",\n  \"pe-7s-headphones\",\n  \"pe-7s-helm\",\n  \"pe-7s-hourglass\",\n  \"pe-7s-leaf\",\n  \"pe-7s-magic-wand\",\n  \"pe-7s-male\",\n  \"pe-7s-map-2\",\n  \"pe-7s-next-2\",\n  \"pe-7s-paint-bucket\",\n  \"pe-7s-pendrive\",\n  \"pe-7s-photo\",\n  \"pe-7s-piggy\",\n  \"pe-7s-plugin\",\n  \"pe-7s-refresh-2\",\n  \"pe-7s-rocket\",\n  \"pe-7s-settings\",\n  \"pe-7s-shield\",\n  \"pe-7s-smile\",\n  \"pe-7s-usb\",\n  \"pe-7s-vector\",\n  \"pe-7s-wine\",\n  \"pe-7s-cloud-upload\",\n  \"pe-7s-cash\",\n  \"pe-7s-close\",\n  \"pe-7s-bluetooth\",\n  \"pe-7s-cloud-download\",\n  \"pe-7s-way\",\n  \"pe-7s-close-circle\",\n  \"pe-7s-id\",\n  \"pe-7s-angle-up\",\n  \"pe-7s-wristwatch\",\n  \"pe-7s-angle-up-circle\",\n  \"pe-7s-world\",\n  \"pe-7s-angle-right\",\n  \"pe-7s-volume\",\n  \"pe-7s-angle-right-circle\",\n  \"pe-7s-users\",\n  \"pe-7s-angle-left\",\n  \"pe-7s-user-female\",\n  \"pe-7s-angle-left-circle\",\n  \"pe-7s-up-arrow\",\n  \"pe-7s-angle-down\",\n  \"pe-7s-switch\",\n  \"pe-7s-angle-down-circle\",\n  \"pe-7s-scissors\",\n  \"pe-7s-wallet\",\n  \"pe-7s-safe\",\n  \"pe-7s-volume2\",\n  \"pe-7s-volume1\",\n  \"pe-7s-voicemail\",\n  \"pe-7s-video\",\n  \"pe-7s-user\",\n  \"pe-7s-upload\",\n  \"pe-7s-unlock\",\n  \"pe-7s-umbrella\",\n  \"pe-7s-trash\",\n  \"pe-7s-tools\",\n  \"pe-7s-timer\",\n  \"pe-7s-ticket\",\n  \"pe-7s-target\",\n  \"pe-7s-sun\",\n  \"pe-7s-study\",\n  \"pe-7s-stopwatch\",\n  \"pe-7s-star\",\n  \"pe-7s-speaker\",\n  \"pe-7s-signal\",\n  \"pe-7s-shuffle\",\n  \"pe-7s-shopbag\",\n  \"pe-7s-share\",\n  \"pe-7s-server\",\n  \"pe-7s-search\",\n  \"pe-7s-film\",\n  \"pe-7s-science\",\n  \"pe-7s-disk\",\n  \"pe-7s-ribbon\",\n  \"pe-7s-repeat\",\n  \"pe-7s-refresh\",\n  \"pe-7s-add-user\",\n  \"pe-7s-refresh-cloud\",\n  \"pe-7s-paperclip\",\n  \"pe-7s-radio\",\n  \"pe-7s-note2\",\n  \"pe-7s-print\",\n  \"pe-7s-network\",\n  \"pe-7s-prev\",\n  \"pe-7s-mute\",\n  \"pe-7s-power\",\n  \"pe-7s-medal\",\n  \"pe-7s-portfolio\",\n  \"pe-7s-like2\",\n  \"pe-7s-plus\",\n  \"pe-7s-left-arrow\",\n  \"pe-7s-play\",\n  \"pe-7s-key\",\n  \"pe-7s-plane\",\n  \"pe-7s-joy\",\n  \"pe-7s-photo-gallery\",\n  \"pe-7s-pin\",\n  \"pe-7s-phone\",\n  \"pe-7s-plug\",\n  \"pe-7s-pen\",\n  \"pe-7s-right-arrow\",\n  \"pe-7s-paper-plane\",\n  \"pe-7s-delete-user\",\n  \"pe-7s-paint\",\n  \"pe-7s-bottom-arrow\",\n  \"pe-7s-notebook\",\n  \"pe-7s-note\",\n  \"pe-7s-next\",\n  \"pe-7s-news-paper\",\n  \"pe-7s-musiclist\",\n  \"pe-7s-music\",\n  \"pe-7s-mouse\",\n  \"pe-7s-more\",\n  \"pe-7s-moon\",\n  \"pe-7s-monitor\",\n  \"pe-7s-micro\",\n  \"pe-7s-menu\",\n  \"pe-7s-map\",\n  \"pe-7s-map-marker\",\n  \"pe-7s-mail\",\n  \"pe-7s-mail-open\",\n  \"pe-7s-mail-open-file\",\n  \"pe-7s-magnet\",\n  \"pe-7s-loop\",\n  \"pe-7s-look\",\n  \"pe-7s-lock\",\n  \"pe-7s-lintern\",\n  \"pe-7s-link\",\n  \"pe-7s-like\",\n  \"pe-7s-light\",\n  \"pe-7s-less\",\n  \"pe-7s-keypad\",\n  \"pe-7s-junk\",\n  \"pe-7s-info\",\n  \"pe-7s-home\",\n  \"pe-7s-help2\",\n  \"pe-7s-help1\",\n  \"pe-7s-graph3\",\n  \"pe-7s-graph2\",\n  \"pe-7s-graph1\",\n  \"pe-7s-graph\",\n  \"pe-7s-global\",\n  \"pe-7s-gleam\",\n  \"pe-7s-glasses\",\n  \"pe-7s-gift\",\n  \"pe-7s-folder\",\n  \"pe-7s-flag\",\n  \"pe-7s-filter\",\n  \"pe-7s-file\",\n  \"pe-7s-expand1\",\n  \"pe-7s-exapnd2\",\n  \"pe-7s-edit\",\n  \"pe-7s-drop\",\n  \"pe-7s-drawer\",\n  \"pe-7s-download\",\n  \"pe-7s-display2\",\n  \"pe-7s-display1\",\n  \"pe-7s-diskette\",\n  \"pe-7s-date\",\n  \"pe-7s-cup\",\n  \"pe-7s-culture\",\n  \"pe-7s-crop\",\n  \"pe-7s-credit\",\n  \"pe-7s-copy-file\",\n  \"pe-7s-config\",\n  \"pe-7s-compass\",\n  \"pe-7s-comment\",\n  \"pe-7s-coffee\",\n  \"pe-7s-cloud\",\n  \"pe-7s-clock\",\n  \"pe-7s-check\",\n  \"pe-7s-chat\",\n  \"pe-7s-cart\",\n  \"pe-7s-camera\",\n  \"pe-7s-call\",\n  \"pe-7s-calculator\",\n  \"pe-7s-browser\",\n  \"pe-7s-box2\",\n  \"pe-7s-box1\",\n  \"pe-7s-bookmarks\",\n  \"pe-7s-bicycle\",\n  \"pe-7s-bell\",\n  \"pe-7s-battery\",\n  \"pe-7s-ball\",\n  \"pe-7s-back\",\n  \"pe-7s-attention\",\n  \"pe-7s-anchor\",\n  \"pe-7s-albums\",\n  \"pe-7s-alarm\",\n  \"pe-7s-airplay\"\n];\n\n//\n// //\n// // // // For dashboard's charts\n// //\n//\n// Data for Pie Chart\nvar dataPie = {\n  labels: [\"40%\", \"20%\", \"40%\"],\n  series: [40, 20, 40]\n};\nvar legendPie = {\n  names: [\"Open\", \"Bounce\", \"Unsubscribe\"],\n  types: [\"info\", \"danger\", \"warning\"]\n};\n\n// Data for Line Chart\nvar dataSales = {\n  labels: [\n    \"9:00AM\",\n    \"12:00AM\",\n    \"3:00PM\",\n    \"6:00PM\",\n    \"9:00PM\",\n    \"12:00PM\",\n    \"3:00AM\",\n    \"6:00AM\"\n  ],\n  series: [\n    [287, 385, 490, 492, 554, 586, 698, 695],\n    [67, 152, 143, 240, 287, 335, 435, 437],\n    [23, 113, 67, 108, 190, 239, 307, 308]\n  ]\n};\nvar optionsSales = {\n  low: 0,\n  high: 800,\n  showArea: false,\n  height: \"245px\",\n  axisX: {\n    showGrid: false\n  },\n  lineSmooth: true,\n  showLine: true,\n  showPoint: true,\n  fullWidth: true,\n  chartPadding: {\n    right: 50\n  }\n};\nvar responsiveSales = [\n  [\n    \"screen and (max-width: 640px)\",\n    {\n      axisX: {\n        labelInterpolationFnc: function(value) {\n          return value[0];\n        }\n      }\n    }\n  ]\n];\nvar legendSales = {\n  names: [\"Open\", \"Click\", \"Click Second Time\"],\n  types: [\"info\", \"danger\", \"warning\"]\n};\n\n// Data for Bar Chart\nvar dataBar = {\n  labels: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"Mai\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n  ],\n  series: [\n    [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895],\n    [412, 243, 280, 580, 453, 353, 300, 364, 368, 410, 636, 695]\n  ]\n};\nvar optionsBar = {\n  seriesBarDistance: 10,\n  axisX: {\n    showGrid: false\n  },\n  height: \"245px\"\n};\nvar responsiveBar = [\n  [\n    \"screen and (max-width: 640px)\",\n    {\n      seriesBarDistance: 5,\n      axisX: {\n        labelInterpolationFnc: function(value) {\n          return value[0];\n        }\n      }\n    }\n  ]\n];\nvar legendBar = {\n  names: [\"Tesla Model S\", \"BMW 5 Series\"],\n  types: [\"info\", \"danger\"]\n};\n\nmodule.exports = {\n  style, // For notifications (App container and Notifications view)\n  thArray,\n  tdArray, // For tables (TableList view)\n  iconsArray, // For icons (Icons view)\n  dataPie,\n  legendPie,\n  dataSales,\n  optionsSales,\n  responsiveSales,\n  legendSales,\n  dataBar,\n  optionsBar,\n  responsiveBar,\n  legendBar // For charts (Dashboard view)\n};\n","module.exports = __webpack_public_path__ + \"static/media/sidebar-3.34535b95.jpg\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 586;","const config= {\n    baseurl:(process.env.NODE_ENV==\"development\") ? \"http://localhost:4000/api\": \"https://top4.trade/api\"\n}\n\nexport default config;","import React, { Component } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport config from '../../constant/config.js';\nimport Select from 'react-select'\nimport TagsInput from 'react-tagsinput'\nimport 'react-tagsinput/react-tagsinput.css'\nimport { times } from 'chartist';\n// import DateFnsUtils from '@date-io/date-fns';\n// import {\n//     // DatePicker,\n//     KeyboardDatePicker,\n//     // TimePicker,\n//     DateTimePicker,\n//     MuiPickersUtilsProvider,\n// } from '@material-ui/pickers';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nconst axios = require('axios');\n\n// import { Multiselect } from \"multiselect-react-dropdown\";\n\n// const options = [\n//     { value: 'chocolate', label: 'Chocolate' },\n//     { value: 'strawberry', label: 'Strawberry' },\n//     { value: 'vanilla', label: 'Vanilla' }\n// ]\n\nclass Innerfilter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // startDate: new Date(),\n            // endDate: new Date(),\n            selectedAccountOption: null,\n            selectedSymbolOption: null,\n            selectedSymbolOptionTo: null,\n            selectedAccountOptionTo: null,\n            selectedCommissionAccount: null,\n            startDate: null,\n            endDate: null,\n            startDateTo: null,\n            endDateTo: null,\n            allAccounts: [],\n            allSymbols: [],\n            profileName: '',\n            error: '',\n            showCommisoin: false,\n            showAddCommission: false,\n            autoSyncClose: false,\n            profileValues: [],\n            nameError: false,\n            magicNumber: [],\n            magicNumberTo: [],\n            showMagicNumber: false,\n            showMagicNumberTo: false,\n            tags: [],\n            include_exclude_status: '',\n            exclude: false,\n            include: false,\n            excludeTo: false,\n            includeTo: false,\n            // options: [{ name: 'Srigar', id: 1 }, { name: 'Sam', id: 2 }],\n\n            // plainArray: [\"Option 1\", \"Option 2\", \"Option 3\", \"Option 4\", \"Option 5\"],\n            // objectArray: [\n            //     { key: \"Option 1\", cat: \"Group 1\" },\n            //     { key: \"Option 2\", cat: \"Group 1\" },\n            //     { key: \"Option 3\", cat: \"Group 1\" },\n            //     { key: \"Option 4\", cat: \"Group 2\" },\n            //     { key: \"Option 5\", cat: \"Group 2\" },\n            //     { key: \"Option 6\", cat: \"Group 2\" },\n            //     { key: \"Option 7\", cat: \"Group 2\" }\n            // ],\n            // selectedValues: [\n            //     { key: \"Option 1\", cat: \"Group 1\" },\n            //     { key: \"Option 2\", cat: \"Group 1\" }\n            // ]\n        };\n\n\n    }\n    componentDidMount() {\n        this.fetchfilterdata()\n        let self = this;\n        axios.get(config.baseurl + '/accounts/fetchAllAccounts')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ allAccounts: response.data.rows })\n                }\n            })\n        axios.get(config.baseurl + '/accounts/fetchAllSymbol')\n            .then(function (response) {\n                console.log(response,'response.......');\n                if (response.status == 200) {\n                    self.setState({ allSymbols: response.data.rows })\n                }\n            })\n    }\n    // addItem = () => {\n    //     this.selectedValues.push({ key: \"Option 3\", cat: \"Group 1\" });\n    // }\n    handleDropdownChange = (e) => {\n        this.setState({ selectValue: e.target.value });\n    }\n    handleChangeDate = date => {\n        this.setState({\n            startDate: date\n        });\n    }\n\n    handleEndDate = date => {\n        if (date < this.state.startDate && date != null) {\n            this.setState({ error: 'enddate', endDate: \"\" })\n            return\n        }\n        this.setState({\n            error: '',\n            endDate: date\n        })\n    }\n    handleChangeDateTo = date => {\n\n        this.setState({\n            startDateTo: date,\n            error: ''\n        });\n    }\n    handleEndDateTo = date => {\n        if (date < this.state.startDateTo && date != null) {\n            this.setState({ error: 'enddateto', endDateTo: \"\" })\n            return\n        }\n        this.setState({\n            error: '',\n            endDateTo: date\n        });\n    }\n    handleChange = (event) => {\n        //this.setState({value: event.option});\n        this.setState({ value: Array.from(event.target.selectedOptions, (item) => item.value) });\n    }\n    renderAccountSelect = () => {\n        const { selectedAccountOption, allAccounts } = this.state;\n        let Data = {\n            account: selectedAccountOption\n        }\n        // axios.post(config.baseurl + '/filter/fetchSymbolData', Data)\n        //     .then(function (response) {\n        //         if (response.status == 200) {\n        //             this.props.onHide()\n        //         }\n        //     })\n        //     .catch(function (error) {\n        //     });\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account\"\n                value={selectedAccountOption}\n                onChange={this.handleChangeAccount}\n                options={options}\n            />\n        )\n    }\n    handeChangeShowCommission = (e) => {\n        this.setState({ showCommission: true }, () => {\n            this.setState({ showAddCommission: !this.state.showAddCommission })\n        })\n    }\n    handleChangeAccountTo = selectedAccountOptionTo => {\n        \n            this.setState({ selectedAccountOptionTo, error: '' });\n    };\n    renderAccountSelectTo = () => {\n        const { selectedAccountOptionTo, allAccounts } = this.state;\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account\"\n                value={selectedAccountOptionTo}\n                onChange={this.handleChangeAccountTo}\n                options={options}\n            />\n        )\n    }\n    handleChangeCommissionAccount = selectedCommissionAccount => {\n        this.setState({ selectedCommissionAccount, });\n    };\n    renderCommissionAccount = () => {\n        const { selectedCommissionAccount, allAccounts } = this.state;\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account\"\n                value={selectedCommissionAccount}\n                onChange={this.handleChangeCommissionAccount}\n                options={options}\n            />\n        )\n    }\n    handleChangeMagicNumber = (magicNumber) => {\n        console.log(magicNumber,'jhcvjkjk');\n        // if(re.test(tags))\n        this.setState({ magicNumber })\n        // this.state.magicNumber.push(magicNumber);\n    }\n    handleChangeMagicNumberTo = (magicNumberTo) => {\n\n\n        // if(re.test(tags))\n        this.setState({ magicNumberTo })\n    }\n\n\n    handleChangeAccount = selectedAccountOption => {\n        this.setState({ selectedAccountOption });\n    };\n    handleChangeSymbol = selectedSymbolOption => {\n        this.setState({ selectedSymbolOption });\n    };\n    renderSymbolSelect = () => {\n        const { selectedSymbolOption, allSymbols } = this.state;\n        let options = allSymbols.map(data => {\n            return { value: data.name, label: data.name };\n        })\n        return (\n            <Select\n                placeholder=\"Select Symbol\"\n                value={selectedSymbolOption}\n                isMulti\n                onChange={this.handleChangeSymbol}\n                options={options}\n            />\n        )\n    }\n    handleChangeSymbolTo = selectedSymbolOptionTo => {\n        this.setState({ selectedSymbolOptionTo });\n    };\n    renderSymbolSelectTo = () => {\n        const { selectedSymbolOptionTo, allSymbols } = this.state;\n        let options = allSymbols.map(data => {\n            return { value: data.name, label: data.name };\n        })\n\n        return (\n            <Select\n                placeholder=\"Select Symbol...\"\n                value={selectedSymbolOptionTo}\n                isMulti\n                onChange={this.handleChangeSymbolTo}\n                options={options}\n            />\n        )\n    }\n    fetchfilterdata() {\n        let self = this;\n        axios.get(config.baseurl + '/filter/fetchfilterdata')\n            .then(function (response) {\n                if (response.status == 200) {\n\n                    self.setState({ profileValues: response.data.rows })\n                }\n            })\n    }\n\n    handleprofileName(e) {\n        this.setState({ nameError: false })\n        this.state.profileValues.filter((data) => {\n            if (data.profile_name !== e.target.value) {\n                this.setState({ profileName: e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1), error: '', })\n            }\n            else {\n                this.setState({ nameError: true }, () => {\n                })\n                NotificationManager.listNotify = [];\n                NotificationManager.error('Profile already exits!');\n\n            }\n        })\n    }\n    // handlemagicNumber(e){\n    //     this.setState({ magicNumber: e.target.value})\n    // }\n\n    // handlemagicNumberTo(e){\n    //     this.setState({ magicNumberTo: e.target.value})\n    // }\n\n    formDataSubmit(e) {\n\n        e.preventDefault();\n\n\n\n        let from_status = this.state.include === true && this.state.exclude === false ? 1 : this.state.exclude === true && this.state.include === false ? 2 : 0\n\n\n        let to_status = this.state.includeTo === true && this.state.excludeTo === false ? 1 : this.state.excludeTo === true && this.state.includeTo === false ? 2 : 0\n        let self = this\n\n\n        if (this.state.profileName == null || this.state.profileName == '') {\n            NotificationManager.listNotify = [];\n            NotificationManager.error ('Please select profile name !')\n            return\n        }\n        else if (this.state.selectedAccountOption == null || this.state.selectedAccountOption == '') {\n            this.setState({ error: 'accountoption' })\n            return\n        }\n        else if (this.state.showCommission = this.state.showCommission    &&  this.state.selectedCommissionAccount == null || this.state.selectedCommissionAccount == '') {\n            this.setState({ error: 'selectedCommissionAccount' })\n            return\n        }\n\n        else if (this.state.startDate == null || this.state.startDate == '') {\n            this.setState({ error: 'startdate' })\n            return\n        } else if (this.state.selectedSymbolOption == null || this.state.selectedSymbolOption == '') {\n            this.setState({ error: 'symbolselect' })\n            return\n        }\n        else if (this.state.selectedAccountOptionTo == null || this.state.selectedAccountOptionTo == '') {\n            this.setState({ error: 'accountoptionto' })\n            return\n        }\n\n        else if (this.state.startDateTo == null || this.state.startDateTo == '') {\n            this.setState({ error: 'startDateTo' })\n            return\n        }\n        else if (this.state.selectedSymbolOptionTo == null || this.state.selectedSymbolOptionTo == '') {\n            this.setState({ error: 'selectedSymbolOptionTo' })\n            return\n        }\n        else if (this.state.nameError) {\n            NotificationManager.listNotify = [];\n            NotificationManager.error('Profile Name Already Exist!');\n        }\n        \n        else {\n            this.setState({ error: ' ' })\n            let fromSymbol = this.state.selectedSymbolOption;\n            let symbolFrom = fromSymbol.map((data) => {\n                return data.value\n            })\n            let toSymbol = this.state.selectedSymbolOptionTo;\n            let symbolto = toSymbol.map((data) => {\n                return data.value\n            })\n\n            let Data = {\n                profile_name: this.state.profileName,\n                from_account_id: this.state.selectedAccountOption.value,\n                to_account_id: this.state.selectedAccountOptionTo.value,\n                commission_acount_id: this.state.showAddCommission ? this.state.selectedCommissionAccount.value : 0,\n                startdateFrom: this.state.startDate,\n                enddateFrom: this.state.endDate,\n                startdateTo: this.state.startDateTo,\n                enddateTo: this.state.endDateTo,\n                from_symbols: JSON.stringify(symbolFrom),\n                to_symbols: JSON.stringify(symbolto),\n                auto_close: this.state.autoSyncClose ? 1 : 0,\n                from_magic_number: (from_status!=0) ? this.state.magicNumber.length > \"0\" ? JSON.stringify(this.state.magicNumber) : [] : \"\",\n                to_magic_number: (to_status!=0) ? this.state.magicNumberTo.length > \"0\" ? JSON.stringify(this.state.magicNumberTo) : [] : \"\",\n                from_include_exclude_status: from_status,\n                to_include_exclude_status: to_status,\n                createdAt: new Date(),\n                updatedAt: new Date(),\n\n            }\n\n            axios.post(config.baseurl + '/filter/addfilterdata', Data)\n                .then(function (response) {\n                    if (response.status == 200) {\n                        self.props.onHide()\n                    }\n                })\n                .catch(function (error) {\n                });\n        }\n    }\n    crossClick(e) {\n        e.preventDefault();\n        this.props.onHide()\n    }\n    handleChangeAutoSync(e) {\n\n        this.setState({ autoSyncClose: !this.state.autoSyncClose }, () => {\n\n        })\n    }\n   \n    changeIncludeDefaultProperty = () => {\n\n        this.setState({ include: !this.state.include, exclude: false }\n        )\n        if (!this.state.include == true) {\n            this.setState({ showMagicNumber: true })\n        } else if (this.state.include == true) {\n            this.setState({ showMagicNumber: false })\n\n        }\n\n\n    }\n    changeExcludeDefaultProperty = () => {\n        this.setState({ exclude: !this.state.exclude, include: false })\n        if (!this.state.exclude == true) {\n            this.setState({ showMagicNumber: true })\n        } else if (this.state.exclude == true) {\n            this.setState({ showMagicNumber: false })\n\n        }\n\n    }\n\n    changeIncludeDefaultPropertyTo = () => {\n        this.setState({ includeTo: !this.state.includeTo, excludeTo: false })\n        if (!this.state.includeTo == true) {\n            this.setState({ showMagicNumberTo: true })\n        } else if (this.state.includeTo == true) {\n            this.setState({ showMagicNumberTo: false })\n\n        }\n    }\n    changeExcludeDefaultPropertyTo = () => {\n        this.setState({ excludeTo: !this.state.excludeTo, includeTo: false })\n        if (!this.state.excludeTo == true) {\n            this.setState({ showMagicNumberTo: true })\n        } else if (this.state.excludeTo == true) {\n            this.setState({ showMagicNumberTo: false })\n\n        }\n\n    }\n    render() {\n        let s = this\n        return (\n            <>\n                <NotificationContainer />\n                <div className=\"content\">\n                    <Grid fluid>\n                        <div className=\"symbol-box\">\n                            <div className=\"cross_div\"><a onClick={(e) => this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\n                            <div className=\"terminal-text\" >\n                                <label className=\"pnameadjust\"> Profile Name </label>\n                                <input type=\"text\" name=\"profilename\" className=\"Itext\" placeholder=\"Profile Name\" onChange={(e) => this.handleprofileName(e)} />\n                            </div>\n                            <div className=\"synclose\">\n                                <label className=\"checkbox-inline\"><input type=\"checkbox\" defaultChecked={this.state.autoSyncClose} name=\"changeAutoSync\" onChange={(e) => this.handleChangeAutoSync(e)} /><b>Auto Sync Close</b></label>\n                            </div>\n\n                            <form>\n                                <Row>\n                                    \n                                    <Col md={6}>\n                                        <div className=\"card bottom\">\n                                            <div style={{ padding: '10px 20px 0px' }}>\n                                                <span style={{ fontWeight: 'bold' }}>Account A</span>\n                                            </div>\n                                            <table className=\"table mt20\">\n                                                <tbody>\n                                                    <tr>\n                                                        <td className=\"b-clr\">\n                                                            <span className=\"accnt\">Account </span>\n                                                        </td>\n\n                                                        <td className=\"b-clr text-center\" style={{ width: '50%' }}>\n                                                            {/* <Multiselect\n                                                        options={objectArray}\n                                                        singleSelect\n                                                        displayValue=\"key\"\n                                                    /> */}\n                                                            {this.renderAccountSelect()}\n                                                            {(this.state.error == 'accountoption') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td className=\"b-clr \">\n                                                            <span className=\"accnt\">From  </span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center datepicker_filter\">\n                                                            <DatePicker\n                                                                selected={this.state.startDate}\n                                                                onChange={this.handleChangeDate}\n                                                                isClearable\n                                                                placeholderText=\"dd/mm/yyyy\"\n                                                                dateFormat=\"dd/MM/yyyy\"\n                                                                startDate={this.state.startDate}\n                                                                endDate={this.state.endDate}\n                                                                strictParsing\n                                                            />\n                                                             {/* <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                                            <KeyboardDatePicker\n                                                                // margin=\"normal\"\n                                                                clearable={false}\n                                                                id=\"date-picker-dialog\"\n                                                                label=\"dd/MM/yyyy\"\n                                                                format=\"dd/MM/yyyy\"\n                                                                onError={() => { return null }}\n                                                                value={this.state.startDate}\n                                                                onChange={this.handleChangeDate}\n                                                                KeyboardButtonProps={{\n                                                                    'aria-label': 'change date',\n                                                                }}\n                                                            />\n                                                        </MuiPickersUtilsProvider> */}\n                                                            {(this.state.error == 'startdate') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td className=\"b-clr \">\n                                                            <span className=\"accnt\">To   </span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center datepicker_filter\">\n                                                            <DatePicker\n                                                                autoOk={true}\n                                                                selected={this.state.endDate}\n                                                                onChange={this.handleEndDate}\n                                                                isClearable\n                                                                placeholderText=\"dd/mm/yyyy\"\n                                                                dateFormat=\"dd/MM/yyyy\"\n                                                                startDate={this.state.startDate}\n                                                                endDate={this.state.endDate}\n                                                            />\n                                                            {(this.state.error == 'enddate') && <p style={{ color: 'red', fontSize: '13px' }}>*\n                                                        Please ensure that the End Date is greater than the Start Date.</p>}\n\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td className=\"b-clr \">\n                                                            <span className=\"accnt\">Symbol </span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                            {/* <Multiselect\n                                                        options={objectArray}\n                                                        displayValue=\"key\"\n                                                        showCheckbox={true}\n                                                    /> */}\n                                                            {this.renderSymbolSelect()}\n                                                            {(this.state.error == 'symbolselect') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n\n\n                                            <div className=\"text-center\">\n                                                <span > Magic Number   </span>\n                                            </div>\n\n                                            <table className=\"table \">\n                                                <tbody>\n                                                    <tr>\n                                                        <td className=\"b-clr dataAdjust\">\n                                                            <div onClick={this.changeIncludeDefaultProperty}>\n                                                                <input\n                                                                    type=\"radio\" id=\"include\" name=\"include\" checked={this.state.include} />\n                                                                <span className=\"accnt \">Include</span>\n\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"b-clr text-center\">\n                                                            <div onClick={this.changeExcludeDefaultProperty} >\n                                                                <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.exclude} />\n                                                                <span className=\"accnt \">Exclude</span>\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n\n\n                                            {this.state.showMagicNumber === true ?\n                                                <div className=\"b-clr magicnumber\" style={{}}>\n                                                    <TagsInput\n                                                        onValidationReject={() => console.log('rejected')}\n                                                        validationRegex={/^[0-9]*$/}\n                                                        inputProps={{ placeholder: this.state.magicNumber.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumber\n                                                        } onChange={this.handleChangeMagicNumber}></TagsInput>\n                                                </div> : null}\n\n                                        </div>\n                                    </Col>\n                                    <Col md={6}>\n                                        <div className=\"card bottom\">\n                                            <div style={{ padding: '10px 20px 0px' }}>\n                                                <span style={{ fontWeight: 'bold' }}>Account B</span>\n                                            </div>\n                                            <table className=\"table mt20\">\n                                                <tbody>\n                                                    <tr>\n                                                        <td className=\"b-clr \">\n                                                            <span className=\"accnt\"> Account</span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center\" style={{ width: '50%' }}>\n                                                            {this.renderAccountSelectTo()}\n                                                            {(this.state.error == 'accountoptionto') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td className=\"b-clr \">\n                                                            <span className=\"accnt\">From </span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center datepicker_filter\">\n                                                            <DatePicker\n                                                                selected={this.state.startDateTo}\n                                                                onChange={this.handleChangeDateTo}\n                                                                isClearable\n                                                                placeholderText=\"dd/mm/yyyy\"\n                                                                dateFormat=\"dd/MM/yyyy\"\n                                                                startDate={this.state.startDateTo}\n                                                                endDate={this.state.endDateTo}\n                                                                strictParsing\n                                                            />\n                                                            {(this.state.error == 'startDateTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td className=\"b-clr \">\n                                                            <span className=\"accnt\">To  </span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center datepicker_filter\">\n                                                            <DatePicker\n                                                                selected={this.state.endDateTo}\n                                                                onChange={this.handleEndDateTo}\n                                                                isClearable\n                                                                placeholderText=\"dd/mm/yyyy\"\n                                                                dateFormat=\"dd/MM/yyyy\"\n                                                                startDate={this.state.startDateTo}\n                                                                endDate={this.state.endDateTo}\n                                                            />\n                                                            {(this.state.error == 'enddateto') && <p style={{ color: 'red', fontSize: '13px' }}>*\n                                                        Please ensure that the End Date is greater than the Start Date.</p>}\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td className=\"b-clr\">\n                                                            <span className=\"accnt\"> Symbol   </span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                            {/* <Multiselect\n                                                        options={objectArray}\n                                                        displayValue=\"key\"\n                                                        showCheckbox={true}\n                                                    /> */}\n                                                            {this.renderSymbolSelectTo()}\n                                                            {(this.state.error == 'selectedSymbolOptionTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\n\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n\n                                            <div className=\"text-center\">\n                                                <span > Magic Number  </span>\n                                            </div>\n                                            <table className=\"table mt20\">\n                                                <tbody>\n\n                                                    <tr>\n                                                        <td className=\"b-clr checkboxAdjust\">\n                                                            <div onClick={this.changeIncludeDefaultPropertyTo} >\n                                                                <input\n                                                                    type=\"radio\" id=\"includeTo\" name=\"includeTo\" checked={this.state.includeTo} />\n                                                                <span className=\"accnt \">Include</span>\n\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"b-clr checkboxAdjust text-center\">\n                                                            <div onClick={this.changeExcludeDefaultPropertyTo} >\n                                                                <input type=\"radio\" id=\"excludeTo\" name=\"excludeTo\" checked={this.state.excludeTo} />\n                                                                <span className=\"accnt \">Exclude</span>\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n                                            <div>\n\n                                                {this.state.showMagicNumberTo === true ?\n                                                    <div className=\"b-clr magicnumber\" style={{}}>\n                                                        <TagsInput\n                                                            onValidationReject={() => console.log('rejected')}\n                                                            validationRegex={/^[0-9]*$/}\n                                                            inputProps={{ placeholder: this.state.magicNumberTo.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumberTo\n                                                            } onChange={this.handleChangeMagicNumberTo}></TagsInput>\n                                                    </div> : null}\n                                            </div>\n                                        </div>\n                                    </Col>\n                                </Row>\n                                <hr></hr>\n                                <div className=\"chceckbox\">\n\n                                    <label className=\"checkbox-inline\"><input type=\"checkbox\" defaultChecked={this.state.showCommisoin} onChange={(e) => this.handeChangeShowCommission(e)} /><b>Add Commission</b></label>\n                                </div>\n                                {this.state.showAddCommission &&\n                                    <div className=\"center-com d-flex\">\n                                        <div className=\"com\">\n                                            <h3 style={{ fontWeight: 'bold' }}>Commission</h3>\n                                        </div>\n                                        <table className=\"table mt20\">\n                                            <tbody>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\"> Account </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '50%' }}>\n                                                        {this.renderCommissionAccount()}\n                                                        \n                                                        {(this.state.error == 'selectedCommissionAccount') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account </p>}\n                                                    </td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                }\n                                <div className=\"save_button_filter\">\n                                    <div className=\"savebtn\">\n                                        <Button className=\"btn-primary savebutton\" variant=\"primary\" size=\"lg\" block onClick={(e) => this.formDataSubmit(e)}>\n                                            <b>Save</b>\n                                        </Button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </Grid>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Innerfilter;\n","import React, { Component } from 'react';\nimport { Grid, Row, Col, Modal, Alert } from \"react-bootstrap\";\nimport swal from 'sweetalert';\nimport config from '../../constant/config.js';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nconst axios = require('axios');\n\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loginForm: false,\n            setShow: false,\n            show: true,\n            username: '',\n            password: '',\n            alert: null,\n            persons: [],\n            shwPwd: false,\n            shwMsg: false,\n            invalidUsername: '',\n            invalidPassword: '',\n            accountlist: []\n\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value.trim() })\n    }\n    onSubmit(e) {\n        e.preventDefault();\n        const userdetail = {\n            username: this.state.username,\n            password: this.state.password\n        }\n        if (this.state.username == '') {\n            this.setState({ shwPwd: true })\n        }\n\n        let self = this;\n        axios.post(config.baseurl + '/users/mainLogin', userdetail)\n            .then(function (response) {\n                if (response.status == 200) {\n                    // self.handleClose();\n                    if (response.data.rows && response.data.rows.length > 0) {\n                        localStorage.setItem('currentUser', JSON.stringify(response.data.rows));\n                        self.props.history.push('/admin/dashboard')\n                    }\n                    if (response.data.message) {\n                        if (response.data.name == 'username') {\n                            self.setState({ invalidUsername: response.data.message })\n                            if (self.state.invalidUsername == '' || self.state.invalidUsername == 'Invalid username.' || self.state.invalidUsername == \"Invalid username\") {\n                                self.createNotification()\n                            }\n                        }\n                        if (response.data.name == 'password') {\n                            if (self.state.invalidPassword == '' || self.state.invalidPassword == 'Invalid password.') {\n                                self.createNotification()\n                            }\n                            self.setState({ invalidPassword: response.data.message, invalidUsername: '' })\n\n                        }\n                    }\n                }\n            })\n            .catch(function (err) {\n            });\n    }\n    toogle = () => {\n        this.setState({ loginForm: !this.state.loginForm })\n    }\n    handleClose = () => {\n        this.setState({ loginForm: false })\n    }\n    handleShow = () => {\n        this.setState({ setShow: true })\n    }\n    createNotification = () => {\n        NotificationManager.listNotify = [];\n        NotificationManager.error('Invalid Credentials !');\n    }\n\n    componentDidMount() {\n        // let self = this;\n\n        let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n        if (currentUser !== null) {\n            this.props.history.push('admin/dashboard')\n            return;\n        }\n        // axios.get(config.baseurl + '/users/allAccounts')\n        //     .then(function (response) {\n        //         if (response.status == 200) {\n        //             self.setState({ accountlist: response.data.rows })\n        //         }\n        //     })\n    }\n    render() {\n        const { invalidPassword, invalidUsername } = this.state;\n        return (\n            <div className=\"content\">\n                <Grid fluid style={{ marginTop: '20vh' }}>\n                    <Row>\n                        <Col md={4} />\n                        <Col\n                            md={4}\n                            sm={6}\n                        >\n                            {/* <Modal show={show}>\n                                    <Modal.Body> */}\n                            <div className=\"form-box login-box\">\n                                <Modal.Title className=\"text-center\"><b>Log In</b></Modal.Title>\n\n                                <div className=\"container-fluid\" style={{ background: '#eee', padding: 15, marginTop: 10 }}>\n                                    <div>\n                                        <span style={{ fontWeight: 'bold' }}> Username: </span>\n                                                    testaccount\n                                                </div>\n                                    <div>\n                                        <span style={{ fontWeight: 'bold' }}> Password: </span>\n                                                    1234567\n                                                </div>\n                                </div>\n                                <form style={{ marginTop: '20px' }} onSubmit={this.onSubmit}>\n                                    <label>Username</label>\n\n                                    <input className=\"Itext\" placeholder=\"Enter Username\" name=\"username\" value={this.state.username} onChange={this.onChange}\n                                    // onKeyUp={this.checkValidUser}\n                                    ></input>\n                                    <label>Password</label>\n\n                                    <input className=\"Itext\" placeholder=\"Enter Password\" name=\"password\" type=\"password\" value={this.state.password} onChange={this.onChange}></input>\n\n                                    <div className=\"clearfix\">\n                                        <button type=\"submit\" disabled={!this.state.username || !this.state.password} className={!this.state.username || !this.state.password ? \"loginButton\" : \"loginButton save2 save1\"}>Login</button>\n\n                                    </div>\n                                </form>\n                            </div>\n\n                            {/* </Modal.Body>\n                                </Modal> */}\n\n\n                        </Col>\n                        <Col md={4} />\n                    </Row>\n                </Grid>\n                <NotificationContainer />\n\n            </div >\n        );\n    }\n}\n\nexport default Login;","import React, { Component } from \"react\";\nimport { NavItem, Nav, NavDropdown, MenuItem } from \"react-bootstrap\";\n\nclass AdminNavbarLinks extends Component {\n  constructor(props) {\n    super(props);\n  }\n  logout = () => {\n    localStorage.clear();\n    this.props.history.push('/login');\n  }\n  render() {\n    const notification = (\n      <div>\n        {/* <i className=\"fa fa-globe\" />\n        <b className=\"caret\" /> */}\n        {/* <span className=\"notification\">5</span> */}\n        <p className=\"hidden-lg hidden-md\">Notification</p>\n      </div>\n    );\n    return (\n      <div>\n        <Nav>\n          <NavItem eventKey={1} href=\"#\">\n            {/* <i className=\"fa fa-dashboard\" /> */}\n            <p className=\"hidden-lg hidden-md\">Dashboard</p>\n          </NavItem>\n          <NavDropdown\n            eventKey={2}\n            title={notification}\n            noCaret\n            id=\"basic-nav-dropdown\"\n          >\n            <MenuItem eventKey={2.1}>Notification 1</MenuItem>\n            <MenuItem eventKey={2.2}>Notification 2</MenuItem>\n            <MenuItem eventKey={2.3}>Notification 3</MenuItem>\n            <MenuItem eventKey={2.4}>Notification 4</MenuItem>\n            <MenuItem eventKey={2.5}>Another notifications</MenuItem>\n          </NavDropdown>\n          <NavItem eventKey={3} href=\"#\">\n            {/* <i className=\"fa fa-search\" />\n            <p className=\"hidden-lg hidden-md\">Search</p> */}\n          </NavItem>\n        </Nav>\n        <Nav pullRight>\n          {/* <NavItem eventKey={1} href=\"#\">\n            Account\n          </NavItem>\n          <NavDropdown\n            eventKey={2}\n            title=\"Dropdown\"\n            id=\"basic-nav-dropdown-right\"\n          >\n            <MenuItem eventKey={2.1}>Action</MenuItem>\n            <MenuItem eventKey={2.2}>Another action</MenuItem>\n            <MenuItem eventKey={2.3}>Something</MenuItem>\n            <MenuItem eventKey={2.4}>Another action</MenuItem>\n            <MenuItem eventKey={2.5}>Something</MenuItem>\n            <MenuItem divider />\n            <MenuItem eventKey={2.5}>Separated link</MenuItem>\n          </NavDropdown> */}\n          <NavItem  eventKey={3} onClick={() => this.logout()}>\n           <span className=\"logOutbtn\">Logout</span> \n          </NavItem>\n        </Nav>\n      </div>\n    );\n  }\n}\n\nexport default AdminNavbarLinks;\n","import React, { Component } from \"react\";\nimport { Navbar } from \"react-bootstrap\";\n\nimport AdminNavbarLinks from \"./AdminNavbarLinks\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.mobileSidebarToggle = this.mobileSidebarToggle.bind(this);\n    this.state = {\n      sidebarExists: false\n    };\n  }\n  mobileSidebarToggle(e) {\n    if (this.state.sidebarExists === false) {\n      this.setState({\n        sidebarExists: true\n      });\n    }\n    e.preventDefault();\n    document.documentElement.classList.toggle(\"nav-open\");\n    var node = document.createElement(\"div\");\n    node.id = \"bodyClick\";\n    node.onclick = function() {\n      this.parentElement.removeChild(this);\n      document.documentElement.classList.toggle(\"nav-open\");\n    };\n    document.body.appendChild(node);\n  }\n  render() {\n    return (\n      <Navbar fluid>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <a href=\"#\">{this.props.brandText== \"Dashboard\" ? \"Hedging Interest Differentials Monitoring\" : this.props.brandText }</a>\n          </Navbar.Brand>\n          <Navbar.Toggle onClick={this.mobileSidebarToggle} />\n        </Navbar.Header>\n        <Navbar.Collapse>\n          <AdminNavbarLinks {...this.props}/>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Dropdown, DropdownButton } from 'react-bootstrap'\nimport AdminNavbarLinks from \"../Navbars/AdminNavbarLinks.jsx\";\n\n// import logo from \"assets/img/reactlogo.png\";\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth,\n      menu: false\n    };\n  }\n  toggle = () => {\n    this.setState({ menu: !this.state.menu })\n  }\n\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  updateDimensions() {\n    this.setState({ width: window.innerWidth });\n  }\n  componentDidMount() {\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n  render() {\n    const sidebarBackground = {\n      backgroundImage: \"url(\" + this.props.image + \")\"\n    };\n    return (\n\n\n      <div\n        id=\"sidebar\"\n        className=\"sidebar\"\n        data-color={this.props.color}\n        data-image={this.props.image}\n      >\n        {this.props.hasImage ? (\n          <div className=\"sidebar-background\" />\n        ) : (\n            null\n          )}\n        <div className=\"logo\">\n          <a\n            href=\"https://www.creative-tim.com?ref=lbd-sidebar\"\n            className=\"simple-text logo-mini\"\n          >\n            <div className=\"logo-img\">\n\n            </div>\n          </a>\n          <span className=\"simple-text logo-normal\">\n            Dashboard\n          </span>\n          {/* <a\n            href=\"https://www.creative-tim.com?ref=lbd-sidebar\"\n            className=\"simple-text logo-normal\"\n          >\n            Dashboard\n          </a> */}\n        </div>\n        <div className=\"sidebar-wrapper\">\n          {/* <ul className=\"nav\" style={{margin:'0px 20px'}}>\n            <li className=\"side-list\">\n              <p> Dashboard </p>\n            </li>\n            <li className=\"side-list\">\n              <p onClick={this.toggle}>Filter\n                      <i className=\"fa fa-angle-down\" aria-hidden=\"true\" style={{ float: 'right' }}></i>\n              </p>\n              {this.state.menu &&\n                <ul>\n\n                  <li>\n                    <p>abc\n                  </p>\n                  </li>\n\n                </ul>\n              }\n            </li>\n            <li className=\"side-list\">\n              <p onClick={this.toggle}>Log In\n                      <i className=\"fa fa-angle-down\" aria-hidden=\"true\" style={{ float: 'right' }}></i>\n              </p>\n            </li>\n            <li className=\"side-list\">\n              <p>Symbol Managing\n              </p>\n            </li>\n            <li className=\"side-list\">\n              <p>Swap\n              </p>\n            </li> */}\n          <ul className=\"nav\" style={{ margin: '0px 20px' }}>\n            {this.state.width <= 991 ? <AdminNavbarLinks {...this.props} /> : null}\n            {this.props.routes.map((prop, key) => {\n              if (!prop.redirect)\n                // console.log(prop.resources, 'resouces');\n                return (\n                  <li\n                    className={\n                      prop.upgrade\n                        ? \"active active-pro\"\n                        : this.activeRoute(prop.layout + prop.path)\n                    }\n                    key={key}\n                  >\n                    <NavLink\n                      to={prop.layout + prop.path}\n                      className=\"nav-link\"\n                      activeClassName=\"active\"\n                    >\n                      <i className={prop.icon} />\n                      <p onClick={this.toggle}>{prop.name}\n                        {/* <i className=\"fa fa-angle-down\" aria-hidden=\"true\" style={{float:'right'}}></i> */}\n                      </p>\n                      {this.state.menu &&\n                        <ul>\n                          {prop.resources != undefined && prop.resources.map((sub, index) => (\n                            <li key={index}>\n                              <p>{sub.name}\n                              </p>\n\n                            </li>\n                          ))}\n\n                        </ul>\n                      }\n                    </NavLink>\n\n                  </li>\n                );\n              // return null;\n            })}\n          </ul>\n        </div>\n        {/* <NavLink>\n          <DropdownButton id=\"dropdown-item-button\" title=\"Dropdown button\">\n            <Dropdown.ItemText>Dropdown item text</Dropdown.ItemText>\n            <Dropdown.Item as=\"button\">Action</Dropdown.Item>\n            <Dropdown.Item as=\"button\">Another action</Dropdown.Item>\n            <Dropdown.Item as=\"button\">Something else</Dropdown.Item>\n          </DropdownButton>\n        </NavLink> */}\n\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n\n","\nimport React, { useState, Fragment } from 'react';\nimport { Collapse } from 'reactstrap';\nimport { Row, Col } from \"react-bootstrap\";\nimport NumberFormat from 'react-number-format';\nimport Login from './login';\n\n// import Data from './Data';\n\nconst Closeposition = (props) => {\n    const { allHistoryRecord, fromHistoryOrderInfo, toHistoryOrderInfo, commissionHistoryOrderInfo } = props;\n    const [isOpen2, setIsOpen2] = useState(false);\n    const toggle2 = () => setIsOpen2(!isOpen2);\n\n    // const sumOfTotal = allHistoryRecord.reduce((current, data) => {\n    //     return (data.total + current);\n    // }, 0);\n    let fromSymbols = '';\n    let toSymbols = '';\n    if (allHistoryRecord && Object.entries(allHistoryRecord).length > 0) {\n        fromSymbols = JSON.parse(allHistoryRecord.from_symbols);\n        fromSymbols = (fromSymbols).map(data => data).join(', ');\n        toSymbols = JSON.parse(allHistoryRecord.to_symbols);\n        toSymbols = (toSymbols).map(data => data).join(', ')\n    }\n    let fromsum = 0;\n    let tosum = 0;\n    let commissionSum = 0;\n\n    if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\n        fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\n    }\n    if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\n        tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\n    }\n    if (commissionHistoryOrderInfo && commissionHistoryOrderInfo.length > 0) {\n        commissionSum = (commissionHistoryOrderInfo[0].commission + commissionHistoryOrderInfo[0].swap + commissionHistoryOrderInfo[0].profit);\n    }\n\n    let sumOfTotal = tosum + fromsum;\n\n    let noRecord = ((fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0 && fromHistoryOrderInfo[0].total == null) && (toHistoryOrderInfo && toHistoryOrderInfo.length > 0 && toHistoryOrderInfo[0].total == null)) ? true : false;\n    return (\n        <div>\n            <div className=\"openpositions\" style={{ margin: '20px 0px' }}>\n                <span className=\"p-text\">Closed Positions</span>\n                <span className=\"icon-style\" onClick={toggle2}>\n                    {!isOpen2 ?\n                        <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n                        :\n                        <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\n                    }\n                </span>\n            </div>\n            <div>\n                <Collapse isOpen={isOpen2}>\n                    <Row>\n                        {/* {Data.tablePage.items.map((item, index) =>\n                            <Col md={6} key={index}>\n                                <div className=\"card\">\n                                    <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\n                                    </div>\n                                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                        <table className=\"table\">\n                                            <tbody>\n                                                <tr><td>{item.closed} </td>\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\n                                                </tr>\n                                                <tr><td>{item.commission} </td>\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\n                                                </tr>\n                                                <tr><td>{item.swap} </td>\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\n                                                </tr>\n                                                <tr><td>{item.total} </td>\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                    </div>\n                                </div>\n                            </Col>\n                        )} */}\n                        {/* {(allHistoryRecord && allHistoryRecord.length>0) && allHistoryRecord.map((item, index) =>\n                            <Fragment>\n\n                            <Col md={6} key={index}>\n                                <div className=\"card\">\n                                    <div className=\"header\">\n                                        <h5 className={item.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{item.account.login}</h5>\n                                        <h6 className={'colorDarkBlue'} style={{fontSize:10}}>({item.account.alias})</h6>\n                                    </div>\n                                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                        <table className=\"table\">\n                                            <tbody>\n                                                <tr><td>Closed P/L </td>\n                                                    <td className=\"td-actions text-right\">$ {item.profit}</td>\n                                                </tr>\n                                                <tr><td>Commission </td>\n                                                    <td className=\"td-actions text-right\">$ {item.commission}</td>\n                                                </tr>\n                                                <tr><td>Swap </td>\n                                                    <td className=\"td-actions text-right\">$ {item.swap}</td>\n                                                </tr>\n                                                <tr><td>Total </td>\n                                                    <td className=\"td-actions text-right\">$ {item.total}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                    </div>\n                                </div>\n                            </Col>\n                            </Fragment>\n                        )}\n                        {(allHistoryRecord && allHistoryRecord.length>0) && \n                            <Row>\n                                <Col md={12}>\n                                    <div>\n                                        <div className=\"total-box\">\n                                            <span className=\"text\">Sum of closed positions</span>\n                                            <span className=\"text\" style={{ float: 'right' }}>$ {sumOfTotal}</span>\n                                        </div>\n                                    </div>\n                                </Col>\n                            </Row>\n                        } */}\n                        {noRecord ? (\n                            <div className=\"text-center\">\n                                No Record Found!\n                            </div>) :\n\n                            <Fragment>\n\n                                {(fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0 && fromHistoryOrderInfo[0].total != null) ? (\n                                    <Col md={6}>\n                                        <div className=\"card\">\n                                            <div className=\"header\">\n                                                <h5 className={allHistoryRecord.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{allHistoryRecord.accountFromInfo[0].login}</h5>\n                                                <h6 className={'colorDarkBlue'} style={{ fontSize: 10 }}>({allHistoryRecord.accountFromInfo[0].alias})</h6>\n                                            </div>\n                                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                                <table className=\"table\">\n                                                    <tbody>\n                                                        <tr>\n                                                            <td className=\"symbolStyle\">{fromSymbols}</td>\n                                                            {/* <td>{fromSymbols}</td> */}\n                                                            {/* <td className=\"td-actions text-right\">$ {fromHistoryOrderInfo[0].profit}</td> */}\n                                                        </tr>\n                                                        <tr><td>Closed P/L </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                <NumberFormat value={fromHistoryOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                                {/* {fromHistoryOrderInfo[0].profit} */}\n                                                            </td>\n                                                        </tr>\n                                                        <tr><td>Commission </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                {/* {fromHistoryOrderInfo[0].commission} */}\n                                                                <NumberFormat value={fromHistoryOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                            </td>\n                                                        </tr>\n                                                        <tr><td>Swap </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                <NumberFormat value={fromHistoryOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                                {/* {fromHistoryOrderInfo[0].swap} */}\n                                                            </td>\n                                                        </tr>\n                                                        <tr><td>Total </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                <NumberFormat value={fromHistoryOrderInfo[0].total} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                                {/* {fromHistoryOrderInfo[0].total} */}\n                                                            </td>\n                                                        </tr>\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                            </div>\n                                        </div>\n                                    </Col>\n                                ) : (\n                                        <Col md={6}>\n                                            <div className=\"card noRecordCol\"> No Record Found</div>\n                                        </Col>\n                                    )}\n                                {(toHistoryOrderInfo && toHistoryOrderInfo.length > 0 && toHistoryOrderInfo[0].total != null) ? (\n                                    <Col md={6}>\n                                        <div className=\"card\">\n                                            <div className=\"header\">\n                                                <h5 className={allHistoryRecord.id == '1' ? 'acntText color2' : 'acntText color2'}>{allHistoryRecord.accountToInfo[0].login}</h5>\n                                                <h6 className={'color2'} style={{ fontSize: 10 }}>({allHistoryRecord.accountToInfo[0].alias})</h6>\n                                            </div>\n                                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                                <table className=\"table\">\n                                                    <tbody>\n                                                        <tr>\n                                                            <span className=\"symbolStyle\">{toSymbols}</span>\n\n                                                            {/* <td>{toSymbols}</td> */}\n                                                            {/* <td className=\"td-actions text-right\">$ {fromHistoryOrderInfo[0].profit}</td> */}\n                                                        </tr>\n                                                        <tr><td>Closed P/L </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                <NumberFormat value={toHistoryOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                                {/* {toHistoryOrderInfo[0].profit} */}\n                                                            </td>\n                                                        </tr>\n                                                        <tr><td>Commission </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                {/* {toHistoryOrderInfo[0].commission} */}\n                                                                <NumberFormat value={toHistoryOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                            </td>\n                                                        </tr>\n                                                        <tr><td>Swap </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                {/* {toHistoryOrderInfo[0].swap} */}\n\n\n                                                                {\n                                                                    <NumberFormat value={(toHistoryOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                                                    // toOpenOrderInfo[0].swap\n                                                                }\n                                                            </td>\n                                                        </tr>\n                                                        <tr><td>Total </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                {/* {toHistoryOrderInfo[0].total} */}\n                                                                <NumberFormat value={toHistoryOrderInfo[0].total} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                            </td>\n                                                        </tr>\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                            </div>\n                                        </div>\n                                    </Col>\n                                ) : (\n                                        <Col md={6}>\n                                            <div className=\"card noRecordCol\"> No Record Found</div>\n                                        </Col>\n                                    )\n\n                                }\n                                {(sumOfTotal != 0) &&\n                                    <Row>\n                                        <Col md={12} style={{ marginBottom: 20 }}>\n                                            <div>\n                                                <div className=\"total-box\">\n                                                    <span className=\"text\">Sum of closed positions</span>\n                                                    <span className=\"text\" style={{ float: 'right' }}>$ {' '}\n                                                        <NumberFormat value={sumOfTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                        {/* {sumOfTotal} */}\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        </Col>\n                                    </Row>\n                                }\n\n\n\n\n\n                            </Fragment>\n                        }\n                    </Row>\n                </Collapse>\n                {allHistoryRecord.commission_acount_id !== 0 && allHistoryRecord.commission_acount_id !== undefined &&\n                    <Col md={12}>\n\n                        <div className=\"card \">\n                            <div className=\"header ptheader\">\n                                <h4 className=\"text-center\"><b>Commission</b></h4>\n                                <div className=\"row\">\n                                    <div className=\"col-md-12 text-center\">\n\n                                        <h5 className={allHistoryRecord.id == '1' ? 'acntText color2' : 'acntText acadjust color2'}>{allHistoryRecord.accountCommissionInfo !== undefined && allHistoryRecord.accountCommissionInfo[0].login} <span>({allHistoryRecord.accountCommissionInfo !== undefined && allHistoryRecord.accountCommissionInfo[0].alias})</span></h5>\n\n\n                                    </div>\n\n\n                                    <div className=\"col-md-12 total text-center\">\n\n\n                                        <tr>\n                                            <td className=\"td-actions total_comm text-right\">\n\n                                                Total : $ {' '}\n                                                {/* {toHistoryOrderInfo[0].total} */}\n                                                <NumberFormat value={allHistoryRecord.history_info} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                            </td>\n                                        </tr>\n\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Col>}\n            </div>\n        </div >\n\n    );\n}\n\nexport default Closeposition;\n","const Data = {\n \n  tablePage: {\n    items: [\n      {id: 1,lot:'Buy 10 Lot', closed: 'Closed P/L', commission: 'Commission', swap: 'Swap', total: 'Total', price:'$ 1110',textA: 'Account A'},\n      {id: 2, lot:'Sell 10 Lot', closed: 'Closed P/L', commission: 'Commission', swap: 'Swap', total: 'Total', price:'$ 1111', textA: 'Account B'},\n    ]\n  },\n  dashBoardPage: {\n    items: [\n      {id: 1, title: 'Balance', textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 2, title: 'Equity',textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 3, title: 'Margin', textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 4, title: 'Free Margin', textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 5, title: 'Margin %', textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 5, title: 'Floating P/L', textA: 'Account A', textB: 'Account B',price:'$ 400'}\n    ],\n  }\n};\n\nexport default Data;\n","import React, { useState, Fragment } from 'react';\nimport { Collapse } from 'reactstrap';\nimport { Row, Col } from \"react-bootstrap\";\nimport NumberFormat from 'react-number-format';\n\nimport Data from './Data';\n\nexport default function Openposition(props) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n  const { allOpenRecord, fromOpenOrderInfo, toOpenOrderInfo, } = props;\n\n  // const sumOfTotal = allOpenRecord.reduce((current, data) => {\n  //     return (Math.floor(data.commission + data.swap + data.profit+ current))\n  //     // return (data.profit + current);\n  // }, 0);\n\n  let fromsum = 0;\n  let tosum = 0;\n  let fromSymbols = '';\n  let toSymbols = '';\n  if (allOpenRecord && Object.entries(allOpenRecord).length > 0) {\n    fromSymbols = JSON.parse(allOpenRecord.from_symbols);\n    fromSymbols = (fromSymbols).map(data => data).join(', ');\n    toSymbols = JSON.parse(allOpenRecord.to_symbols);\n    toSymbols = (toSymbols).map(data => data).join(', ')\n  }\n  // if(fromOpenOrderInfo && fromOpenOrderInfo.length>0){\n  //   fromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\n  // }\n  // if(toOpenOrderInfo && toOpenOrderInfo.length>0){\n  //   tosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n  // }\n  if (fromOpenOrderInfo && fromOpenOrderInfo.length > 0) {\n    // if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\n    //   fromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\n    // }else{\n    fromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\n    // }\n  }\n  if (toOpenOrderInfo && toOpenOrderInfo.length > 0) {\n    // if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\n    //   tosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap);\n    // }else{\n    tosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n    // }\n    // opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n  }\n\n  let sumOfTotal = tosum + fromsum;\n  let noRecord = ((fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total == null) && (toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total == null)) ? true : false;\n\n  return (\n    <div>\n      <div className=\"openpositions\" style={{ margin: '20px 0px' }}>\n        <span className=\"p-text\">Open Positions</span>\n        <span className=\"icon-style\" onClick={toggle}>\n          {!isOpen ?\n            <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n            :\n            <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\n          }\n        </span>\n      </div>\n      \n      <div>\n        <Collapse isOpen={isOpen}>\n          <Row>\n\n\n\n            {/* {Data.tablePage.items.map((item, index) =>\n                  <Col md={6} key={index}>\n                    <div className=\"card\">\n                      <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\n                      </div>\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                        <table className=\"table\">\n                          <tbody>\n                            <tr><td>{item.lot} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.commission} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.swap} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.total} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                      </div>\n                    </div>\n                  </Col>\n                )} */}\n\n            {/* {(allOpenRecord && allOpenRecord.length>0) && allOpenRecord.map((item, index) =>\n                    \n                    <Col md={6} key={index}>\n                            <div className=\"card\">\n                            <div className=\"header\">\n                              <h5 className={item.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{item.account.login}</h5>\n                              <h6 style={{fontSize:10}} className={'colorDarkBlue'}>({item.account.alias})</h6>\n                            </div>\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                <table className=\"table\">\n                                <tbody>\n                                    <tr>\n                                        <td>\n                                            {item.order_type ===0 ? 'BUY ' : 'SELL ' } \n                                            {item.lots} {(item.lots>1) ? 'Lots':'Lot'}\n                                        </td>\n                                        <td className=\"td-actions text-right\"> {''}</td>\n                                    </tr>\n                                    <tr><td>Floating P/L </td>\n                                        <td className=\"td-actions text-right\">$ {item.profit}</td>\n                                    </tr>\n                                    <tr><td>Commission </td>\n                                        <td className=\"td-actions text-right\">$ {item.commission}</td>\n                                    </tr>\n                                    <tr><td>Swap </td>\n                                        <td className=\"td-actions text-right\">$ {item.swap}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Total </td>\n                                        <td className=\"td-actions text-right\">\n                                          $ {Math.floor(item.commission + item.swap + item.profit)}\n                                        </td>\n                                    </tr>\n                                </tbody>\n                                </table>\n                            </div>\n                            </div>\n                            </div>\n                        </Col>\n                )} */}\n            {/* {(allOpenRecord && allOpenRecord.length>0) &&\n                    <Row>\n                        <Col md={12}>\n                            <div>\n                            <div className=\"total-box\">\n                                <span className=\"text\">Sum of open positions</span>\n                                <span className=\"text\" style={{ float: 'right' }}>$ {sumOfTotal}</span>\n                            </div>\n                            </div>\n                        </Col>\n                    </Row>\n                } */}\n            {(noRecord) ?\n              <div className=\"text-center\">\n                No Record Found!\n                    </div>\n              :\n              <Fragment>\n                {(fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total !== null && (fromOpenOrderInfo && allOpenRecord.swapFrominfo)) ?\n\n                  <Col md={6}>\n                    <div className=\"card\">\n                      <div className=\"header\">\n                        <h5 className={allOpenRecord.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{allOpenRecord.accountFromInfo[0].login}</h5>\n                        <h6 style={{ fontSize: 10 }} className={'colorDarkBlue'}>({allOpenRecord.accountFromInfo[0].alias})</h6>\n                      </div>\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                        <table className=\"table\">\n                          <tbody>\n                            <tr>\n                              <span className=\"symbolStyle\">{fromSymbols}</span>\n                            </tr>\n                            {/* Buy 10 Lot  */}\n                            <tr>\n                              <td>\n                                {fromOpenOrderInfo[0].order_type == 0 ? 'BUY ' : 'SELL '}\n                                {fromOpenOrderInfo[0].lots} {(fromOpenOrderInfo[0].lots > 1) ? 'Lots' : 'Lot'}\n                              </td>\n                              <td className=\"td-actions text-right\"> {''}</td>\n                            </tr>\n                            {/* <tr><td>{(fromOpenOrderInfo[0].lots>1) ? 'Lots':'Lot'}</td>\n                                        <td className=\"td-actions text-right\">{fromOpenOrderInfo[0].lots}</td>\n                                    </tr> */}\n                            <tr><td>Floating P/L </td>\n                              <td className=\"td-actions text-right\">$ {' '}\n                                {/* {fromOpenOrderInfo[0].profit} */}\n                                <NumberFormat value={fromOpenOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                              </td>\n                            </tr>\n                            <tr><td>Commission </td>\n                              <td className=\"td-actions text-right\">$ {' '}\n                                {/* {fromOpenOrderInfo[0].commission} */}\n                                <NumberFormat value={fromOpenOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                              </td>\n                            </tr>\n                            <tr><td>Swap </td>\n                              <td className=\"td-actions text-right\">$ {' '}\n                                {/* {fromOpenOrderInfo[0].swap} */}\n                                {/* {allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length > 0 ?\n                                  <NumberFormat value={allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                  // (allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].swap) \n                                  : */}\n                                  <NumberFormat value={fromOpenOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                  {/* // fromOpenOrderInfo[0].swap */}\n                                {/* } */}\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>Total </td>\n                              <td className=\"td-actions text-right\">$ {' '}\n                                {/* $ {Math.floor(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)} */}\n                                {/* {allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length > 0 ?\n                                  <NumberFormat value={(fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} /> */}\n                                  {/* // Math.floor(fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap) \n                                  // : */}\n                                  <NumberFormat value={(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                  {/* //  Math.floor(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)\n                                // } */}\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                      </div>\n                    </div>\n                  </Col>\n                  :\n                  <Col md={6}>\n                    <div className=\"card noRecordCol\"> No Record Found</div>\n                  </Col>\n                }\n\n                {(toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total !== null && (toOpenOrderInfo && allOpenRecord.swapToinfo)) ?\n\n                  <Col md={6}>\n                    <div className=\"card\">\n                      <div className=\"header\">\n                        <h5 className={allOpenRecord.id == '1' ? 'acntText color2' : 'acntText color2'}>{allOpenRecord.accountToInfo[0].login}</h5>\n                        <h6 style={{ fontSize: 10 }} className={'color2'}>({allOpenRecord.accountToInfo[0].alias})</h6>\n                      </div>\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                        <table className=\"table\">\n                          <tbody>\n                            {/* Buy 10 Lot  */}\n                            <tr>\n                              <span className=\"symbolStyle\">{toSymbols}</span>\n                            </tr>\n                            <tr>\n                              <td>\n                                {toOpenOrderInfo[0].order_type == 0 ? 'BUY ' : 'SELL '}\n                                {toOpenOrderInfo[0].lots} {(toOpenOrderInfo[0].lots > 1) ? 'Lots' : 'Lot'}\n                              </td>\n                              <td className=\"td-actions text-right\"> {''}</td>\n                            </tr>\n                            {/* <tr><td>{(fromOpenOrderInfo[0].lots>1) ? 'Lots':'Lot'}</td>\n                                        <td className=\"td-actions text-right\">{fromOpenOrderInfo[0].lots}</td>\n                                    </tr> */}\n                            <tr><td>Floating P/L </td>\n                              <td className=\"td-actions text-right\">$ {' '}\n                                {/* {toOpenOrderInfo[0].profit} */}\n                                <NumberFormat value={toOpenOrderInfo[0].profit !== null ? toOpenOrderInfo[0].profit : 0} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                              </td>\n                            </tr>\n                            <tr><td>Commission </td>\n                              <td className=\"td-actions text-right\">$ {' '}\n                                {/* {toOpenOrderInfo[0].commission} */}\n                                <NumberFormat value={toOpenOrderInfo[0].commission !== null ? toOpenOrderInfo[0].commission : 0} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                              </td>\n                            </tr>\n                            <tr><td>Swap </td>\n                              <td className=\"td-actions text-right\">$ {' '}\n                                {/* {toOpenOrderInfo[0].swap} */}\n                                {/* {allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length > 0 ?\n                                  // (allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].swap) \n                                  <NumberFormat value={(allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                  : */}\n                                  <NumberFormat value={(toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                  {/* // toOpenOrderInfo[0].swap\n                                // } */}\n                              </td>\n\n                            </tr>\n                            <tr>\n                              <td>Total </td>\n                              <td className=\"td-actions text-right\"> $ {' '}\n                                {/* {allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length > 0 ?\n                                  //  Math.floor(toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap)\n                                  <NumberFormat value={(toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                  : */}\n                                  <NumberFormat value={(toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n{/* \n                                  //  Math.floor(toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit)\n                                } */}\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                      </div>\n                    </div>\n                  </Col>\n                  :\n                  <Col md={6}>\n                    <div className=\"card noRecordCol\"> No Record Found</div>\n                  </Col>\n                }\n                {\n                  sumOfTotal != 0 &&\n                  <Row>\n                    <Col md={12}>\n                      <div>\n                        <div className=\"total-box\">\n                          <span className=\"text\">Sum of open positions</span>\n                          <span className=\"text\" style={{ float: 'right' }}>$ {' '}\n                            <NumberFormat value={sumOfTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                            {/* {sumOfTotal} */}\n                          </span>\n                        </div>\n                      </div>\n                    </Col>\n                  </Row>\n                }\n              </Fragment>\n            }\n          </Row>\n        </Collapse>\n      </div>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport { Collapse } from 'reactstrap';\nimport Select from 'react-select';\nimport { Grid, Row, Col } from \"react-bootstrap\";\n// import Data from './Data';\nimport NumberFormat from 'react-number-format';\nimport Closeposition from 'views/Closeposition';\nimport Openposition from 'views/Openposition';\n\n// import config from '../constant/config.js';\nimport config from '../constant/config.js';\nconst axios = require('axios');\n\n// import Card from \"components/Card/Card.jsx\";\n// import { thArray, tdArray } from \"variables/Variables.jsx\";\n\nclass TableList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      // isOpen: false,\n      allSymbols:[],\n      selectedOption:null,\n      allHistoryRecord:[],\n      allOpenRecord:[],\n      fromHistoryOrderInfo:[],\n      toHistoryOrderInfo:[],\n      commissionHistoryOrderInfo:[],\n      fromOpenOrderInfo:[],\n      toOpenOrderInfo:[],\n      filterlist:[],\n      allSymbols:[],\n      symbolsObj:[]\n    }\n\n  }\n  // toggle = () => {\n  //   this.setState({ isOpen: !this.state.isOpen })\n  // }\n  // componentWillMount() {\n  //   let self = this;\n      // axios.get(config.baseurl + '/accounts/fetchAllSymbol')\n      // .then(function (response) {\n      //   if (response.status == 200) {\n      //     self.setState({ allSymbols: response.data.rows })\n      //   }\n      // })\n\n      // axios.get(config.baseurl + '/filter/fetchfilterdata')\n      // .then(function (response) {\n      //   if (response.status == 200) {\n      //     self.setState({ filterlist: response.data.rows })\n      //   }\n      // })\n\n      // axios.get(config.baseurl + '/filter/fetchActivefilterdata')\n      // .then(function (response) {\n      //   if (response.status == 200) {\n      //     if(response.data.rows && response.data.rows.length>0){\n      //       // let symbolsObj = (response.data.rows[0].symbols).map(data => { return ({value:data, label:data})})\n      //         self.setState({ filterlist: response.data.rows, allSymbols: response.data.rows[0].symbols, \n      //         // selectedOption:symbolsObj\n      //        })\n      //     }\n      //   }\n      // });\n  // }\n\n  componentDidMount(){\n    let self = this;\n    axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\n    .then(function (response) {\n      // console.log(response.data, 'response.data his')\n      if (response.status == 200) {\n        // self.setState({ allHistoryRecord: response.data.rows })\n        self.setState({ \n          allHistoryRecord: response.data.rows ,\n          fromHistoryOrderInfo:response.data.fromHistoryOrderInfo,\n          toHistoryOrderInfo:response.data.toHistoryOrderInfo,\n          commissionHistoryOrderInfo:response.data.commissionHistoryOrderInfo\n        })\n      }\n    })\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\n    axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\n    .then(function (response) {\n      if (response.status == 200) {\n\n        // self.setState({ allOpenRecord: response.data.rows })\n        self.setState({ \n          allOpenRecord: response.data.rows ,\n          fromOpenOrderInfo:response.data.fromOpenOrderInfo,\n          toOpenOrderInfo:response.data.toOpenOrderInfo\n        })\n      }\n    })\n  }\n\n  fetchDataAccordingSymbols = (symbol) => {\n    let self = this;\n    let {startdateFrom, startdateTo,enddateFrom, enddateTo, to_account_id, from_account_id} = this.state.filterlist[0];\n    \n    let postData =  {\"to_account_id\":to_account_id, \"from_account_id\":from_account_id, \"startdateFrom\":startdateFrom, \"startdateTo\":startdateTo,\"enddateFrom\": enddateFrom, \"enddateTo\":enddateTo, \"symbol\":symbol}\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolHistory', {'symbol':symbol})\n    \n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolHistory', postData)\n    axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\n    .then(function (response) {\n      // console.log(response.data, 'response.data his')\n      if (response.status == 200) {\n        // self.setState({ allHistoryRecord: response.data.rows })\n        self.setState({ \n          allHistoryRecord: response.data.rows ,\n          fromHistoryOrderInfo:response.data.fromHistoryOrderInfo,\n          toHistoryOrderInfo:response.data.toHistoryOrderInfo,\n          commissionHistoryOrderInfo:response.data.commissionHistoryOrderInfo\n\n        })\n      }\n    })\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\n    axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\n    .then(function (response) {\n      if (response.status == 200) {\n      // console.log(response.data, 'response.data open')\n\n        // self.setState({ allOpenRecord: response.data.rows })\n        self.setState({ \n          allOpenRecord: response.data.rows ,\n          fromOpenOrderInfo:response.data.fromOpenOrderInfo,\n          toOpenOrderInfo:response.data.toOpenOrderInfo\n        })\n      }\n    })\n  }\n\n  handleChange = selectedOption => {\n    this.setState({ selectedOption });\n    this.fetchDataAccordingSymbols(selectedOption.value);\n  };\n\n  renderSymbols = () => {\n    const { selectedOption, allSymbols } = this.state;\n    // let options = allSymbols.map(data => {\n    //   return {value:data.name, label:data.name};\n    // })\n    let options = allSymbols.map(data => {\n      return {value:data, label:data};\n    });\n   \n    return(\n      <Select\n        placeholder=\"Select Symbol...\"\n        className=\"S-text\"\n        // isMulti\n        value={selectedOption}\n        onChange={this.handleChange}\n        options={options}\n      />\n      )\n  }\n\n  render() {\n    const {allHistoryRecord, allOpenRecord, selectedOption, toOpenOrderInfo, fromOpenOrderInfo,fromHistoryOrderInfo,commissionHistoryOrderInfo ,toHistoryOrderInfo} = this.state;\n  //   const sumOfOpenTotal = allOpenRecord.reduce((current, data) => {\n  //     return (Math.floor(data.commission + data.swap + data.profit+ current));\n  // }, 0);\n\n  //   const sumOfHistoryTotal = allHistoryRecord.reduce((current, data) => {\n  //     return (data.profit + current);\n  // }, 0);\n    let uniqueSymbols=\"\";\n    if(allOpenRecord && Object.entries(allOpenRecord).length>0){\n      let fromSymbols = JSON.parse(allOpenRecord.from_symbols);\n      // fromSymbols = (fromSymbols).map(data => data).join(', ');\n      let toSymbols = JSON.parse(allOpenRecord.to_symbols);\n      let combineSymbols = fromSymbols.concat(toSymbols);\n      uniqueSymbols = combineSymbols.filter((item, i, ar) => ar.indexOf(item) === i);\n      uniqueSymbols = (uniqueSymbols).map(data => data).join(', ')\n    }\n    let fromsum=0; \n    let tosum=0;\n    // if(fromHistoryOrderInfo && commissionHistoryOrderInfo && fromHistoryOrderInfo.length>0){\n      if(fromHistoryOrderInfo && fromHistoryOrderInfo.length>0){\n      fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\n    }\n   \n    if(toHistoryOrderInfo && toHistoryOrderInfo.length>0){\n      tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\n    }\n\n    let sumOfHistoryTotal = tosum + fromsum;\n\n    let openfromsum=0; \n    let opentosum=0;\n    if((fromOpenOrderInfo && fromOpenOrderInfo.length>0 && fromOpenOrderInfo[0].total!=null) ){\n      // if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\n      //   openfromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\n      // }else{\n       openfromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\n      \n    }\n    if((toOpenOrderInfo && toOpenOrderInfo.length>0  && toOpenOrderInfo[0].total!=null) ){\n      // if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\n      //   opentosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit+ toOpenOrderInfo[0].swap);\n      // }\n\n      // else{\n      //   opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n      // }\n      opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n    }\n\n    let sumOfOpenTotal = opentosum + openfromsum;\n\n  //   console.log(opentosum, 'opentosum')\n  //   console.log(openfromsum, 'openfromsum')\n  //  console.log(sumOfHistoryTotal, \"sumOfHistoryTotal------\");\n  //  console.log(sumOfOpenTotal, \"sumOfOpenTotal-----\");\n  //  console.log(allOpenRecord, 'allOpenRecord')\n   \n\n\n    return (\n      <div className=\"content col-md-12 col-sm-6\">\n        <Grid fluid className=\"symbol-box\">\n          {/* <div className=\"symbol-box\"> */}\n          {/* <span className=\"S-text\">EURUSD</span> */}\n          {/* <div style={{ borderBottom: '2px solid grey' }}>\n            {this.renderSymbols()}\n\n          </div> */}\n          {/* <div style={{ margin: '20px 0px' }}>\n            <span className=\"p-text\">Open Positions</span>\n            <span className=\"icon-style\" onClick={this.toggle}>\n              <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\n            </span>\n          </div>\n          <div>\n\n            <Collapse isOpen={this.state.isOpen}>\n              <Row>\n                {Data.tablePage.items.map((item, index) =>\n                  <Col md={6} key={index}>\n                    <div className=\"card\">\n                      <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\n                      </div>\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                        <table className=\"table\">\n                          <tbody>\n                            <tr><td>{item.lot} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.commission} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.swap} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.total} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                      </div>\n                    </div>\n                  </Col>\n                )}\n                <Row>\n                  <Col md={12}>\n                    <div>\n                      <div className=\"total-box\">\n                        <span className=\"text\">Sum of open position</span>\n                        <span className=\"text\" style={{ float: 'right' }}>$111111</span>\n                      </div>\n                    </div>\n                  </Col>\n                </Row>\n              </Row>\n            </Collapse>\n          </div> */}\n          {/* closed position */}\n          <Openposition \n            allOpenRecord={allOpenRecord}\n            toOpenOrderInfo={toOpenOrderInfo}\n            fromOpenOrderInfo={fromOpenOrderInfo}\n            />\n          <Closeposition \n            allHistoryRecord={allHistoryRecord}\n            fromHistoryOrderInfo={fromHistoryOrderInfo}\n            commissionHistoryOrderInfo={commissionHistoryOrderInfo}\n            toHistoryOrderInfo={toHistoryOrderInfo}\n            />\n          <Row>\n            \n            <Col md={12} sm={6}>\n              <div className={sumOfHistoryTotal + sumOfOpenTotal >= 0 ? \"summary-box\" : \"summary-box-red\"}>\n                \n                \n                {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\n                {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\n                <span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\n                \n                <Col md={12} sm={12}>\n                  <div className=\"summary-text text-center\" style={{fontWeight:600,color:\"#797979\"}}>Summary For ({uniqueSymbols}) {allHistoryRecord.history_info !==0 && (<span> + Commission</span>)} </div>\n                </Col>\n                <Col md={12} sm={12}>\n                  <div className=\"text-center\" style={{fontWeight:'bold',fontSize:\"18px\"}}>$ {' '}\n                  <NumberFormat value={allHistoryRecord.history_info !== undefined ?  sumOfHistoryTotal + sumOfOpenTotal + allHistoryRecord.history_info : sumOfHistoryTotal + sumOfOpenTotal } displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                  \n                  \n                  {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\n                  \n                  </div>\n                </Col>\n                \n                <div className=\"clearfix\"></div>\n              </div>\n            </Col>\n          </Row>\n          {/* </div> */}\n        </Grid>\n      </div>\n    );\n  }\n\n}\n\nexport default TableList;","import React, { Component } from 'react';\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\n// import SweetAlert from 'react-bootstrap-sweetalert';\nimport swal from 'sweetalert';\nimport config from '../constant/config.js';\nconst axios = require('axios');\n\nlet intervalSet;\nlet timerWaitInterval;\nlet timerWait = 100;\nclass Innerlogin extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loginForm: false,\n            setShow: false,\n            show: true,\n            login: '',\n            password: '',\n            broker: '',\n            alias: '',\n            alert: null,\n            persons: [],\n            shwPwd: false,\n            shwPwd: false,\n            shwLogin: false,\n            shwbroker: false,\n            accountlist: [],\n            editForm: false,\n            detailForm: false,\n            editData: [],\n            edituser: '',\n            editserver: '',\n            editalias: '',\n            editstatus: '',\n            id: '',\n            // tryAgainConnection: false,\n            currentAddLogin: null,\n            currentAddBroker: null,\n            currentAddAlias: null,\n            timerShow: false,\n            closebtn: true\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onUpdate = this.onUpdate.bind(this);\n\n    }\n    // delete alert\n    // deleteThisGoal() {\n    //     const getAlert = () => (\n    //         <SweetAlert\n    //             success\n    //             title=\"Woot!\"\n    //             onConfirm={() => this.hideAlert()}\n    //         >\n    //             Hello world!\n    //       </SweetAlert>\n    //     );\n\n    //     this.setState({\n    //         alert: getAlert()\n    //     });\n    // }\n    fectheAllAccount() {\n        let self = this;\n        axios.get(config.baseurl + '/users/allAccounts')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ accountlist: response.data.rows })\n                }\n            })\n        // console.log(response.status,\"accountlist\");\n    }\n    onChange(e) {\n\n        this.setState({ error: '' })\n        if (e.target.name === 'login') {\n            const re = /^[0-9\\b]+$/;\n            if (e.target.value === '' || re.test(e.target.value)) {\n                this.setState({ [e.target.name]: e.target.value })\n            }\n            else if (e.target.value !== re) {\n                this.setState({ error: 'alphabet' })\n            }\n        }\n        else {\n\n            this.setState({ [e.target.name]: e.target.value.trim() })\n        }\n\n    }\n\n    checkUserConnected = (login, broker) => {\n        let self = this;\n        axios.post(config.baseurl + '/users/checkUserConnected', { login: login, broker: broker })\n            .then(function (response) {\n\n                if (response.status == 200) {\n                    if (response.data.connected) {\n                        self.setState({ currentAddLogin: null, currentAddBroker: null, currentAddAlias: null });\n                        clearInterval(intervalSet);\n                        clearInterval(timerWaitInterval);\n                        self.setState({ timerShow: false });\n\n                        timerWait = 100\n                        // self.setState({ tryAgainConnection: false });\n                        self.setState({ loginForm: false })\n                        self.handleClose();\n                        self.fectheAllAccount()\n                        // swal({\n                        //     text: \"Connected\",\n                        //     timer: 2000,\n                        //     button: false\n                        // })\n                    }\n                } else {\n\n                }\n            })\n    }\n\n    setIntervalCustom = () => {\n        let self = this;\n        var name = \"Authorization Process Failed\";\n        var content = document.createElement('div');\n        content.innerHTML = ' <strong>' + name + '</strong>';\n\n\n        timerWaitInterval = setInterval(function () {\n            timerWait--;\n            if (timerWait <= 0) {\n                self.setState({ currentAddLogin: null, currentAddBroker: null, currentAddAlias: null });\n                clearInterval(intervalSet);\n                clearInterval(timerWaitInterval);\n                self.setState({ timerShow: false });\n                self.setState({ loginForm: false })\n                self.setState({ closebtn: true })\n                timerWait = 100\n                swal({\n\n\n                    content: content,\n                    timer: 2000,\n                    button: false\n\n                })\n            }\n\n            else {\n                self.setState({ timerShow: true });\n\n            }\n        }, 1000);\n    }\n\n\n    onSubmit(e) {\n        e.preventDefault();\n        const userdetail = {\n            login: this.state.login,\n            password: this.state.password,\n            broker: this.state.broker,\n            alias: this.state.alias\n\n\n        }\n        if (this.state.login == '') {\n            this.setState({ error: 'login' })\n        }\n        else if (this.state.password == '') {\n            this.setState({ error: 'password' })\n        }\n        else if (this.state.broker == '') {\n            this.setState({ error: 'broker' })\n        } else {\n            this.setState({ error: '' })\n        }\n        if (this.state.login !== '' && this.state.password !== '' && this.state.broker !== '') {\n\n            // {\n            //     swal({\n            //         text: \"User Already Connected\",\n            //         timer: 2000,\n            //         button: false\n            //     })\n            // }\n            let self = this;\n            self.setState({ closebtn: false })\n            axios.post(config.baseurl + '/users/addUser', userdetail)\n                .then(function (response) {\n                    if (response.data.status === true) {\n                        self.setIntervalCustom();\n                        self.fectheAllAccount();\n                        self.setState({ currentAddLogin: userdetail.login, currentAddBroker: userdetail.broker, currentAddAlias: userdetail.alias });\n                        intervalSet = setInterval(function () {\n                            self.checkUserConnected(userdetail.login, userdetail.broker)\n                        }, 5000);\n\n                    }\n                    if (response.data.status == 202) {\n                        swal({\n                            text: \"User doesn't exist\",\n                            timer: 2000,\n                            button: false\n                        })\n\n                    }\n                    if (response.data.status == '500') {\n                        swal({\n                            text: \"User Already Connected!\",\n                            timer: 2000,\n                            button: false\n                        })\n                        self.setState({ closebtn: true })\n\n\n                    }\n                    else if (response.status == 201) {\n                        swal({\n                            title: \"Done!\",\n                            text: response.data,\n                            // icon: \"{response.status == 200 ? 'warning ':'success'}\",\n                            timer: 2000,\n                            button: false\n                        })\n                    }\n\n                })\n                .catch(function (error) {\n                    self.handleClose();\n                });\n\n\n\n            /////////////////// redirect to dashboard\n            // login(user).then(res => {\n            //     if (res) {\n            //         this.props.history.push(`\\profile`)\n            //     }\n            // })\n        }\n    }\n    onUpdate(e) {\n        e.preventDefault();\n        const userdetail = {\n            id: this.state.id,\n            user: this.state.edituser,\n            broker: this.state.editserver,\n            alias: this.state.editalias\n        }\n        let self = this;\n        axios.post(config.baseurl + '/users/updateuser', userdetail)\n            .then(function (response) {\n                if (response.status == 200) {\n                    // self.setState({ accountlist: response.data.rows })\n                    self.fectheAllAccount();\n                    self.handleCloseEdit();\n                }\n            })\n            .catch(function (error) {\n            });\n    }\n    // checkValidUser = ()=> {\n    //     console.log(this.state,'loginnnnnnnnnnnnnnnnnnnnnnnn')\n    //     const userdetail = {\n    //         login: this.state.login,\n    //         password: this.state.password,\n    //         broker: this.state.broker,\n    //         alias: this.state.alias\n    //     }\n    //     axios.get(config.baseurl + '/accounts/matchUser',userdetail)\n    //     .then(function (response) {\n\n    //         if (response.status == 200) {\n    //             // alert(response.data)\n    //             swal({\n    //                 title: \"Done!\",\n    //                 text: response.data,\n    //                 // icon: \"{response.status == 200 ? 'warning ':'success'}\",\n    //                 timer: 2000,\n    //                 button: false\n    //             })\n\n    //         }\n    //         // console.log(response);\n    //     })\n    //     .catch(function (error) {\n    //         console.log(error);\n    //     });\n    // }\n    toogle = () => {\n        this.setState({ loginForm: !this.state.loginForm, })\n        this.setState({ login: '', password: '', broker: '', alias: '' })\n    }\n\n    handleClose = () => {\n        this.setState({ loginForm: false })\n\n    }\n    handleCloseEdit = () => {\n        this.setState({ editForm: false })\n    }\n    handleCloseDetail = () => {\n        this.setState({ detailForm: false })\n    }\n    handleShow = () => {\n        this.setState({ setShow: true })\n    }\n\n    componentDidMount() {\n        this.fectheAllAccount();\n\n    }\n    createTr = () => {\n        return this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => {\n            return (\n                <tr key={index}>\n                    <th scope=\"row\">{index + 1}</th>\n                    <td>{item.login}</td>\n                    <td>{item.broker}</td>\n                    <td>{item.alias}</td>\n                    <td style={{ fontWeight: 600 }}>{item.launched == 1 ? 'Connected' : 'Disconnected'}</td>\n                    <td>\n                        <a href=\"\" onClick={(e) => this.viewFilter(e, item)}><i className=\"fa fa-eye facolor\" aria-hidden=\"true\"></i></a>\n                        <a href=\"\" onClick={(e) => this.editFilter(e, item)}><i className=\"fa fa-pencil-square-o facolor\" aria-hidden=\"true\"></i></a>\n                        {/* <a href=\"\" onClick={(e)=> this.deleteFilter(e,item)}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></a> */}\n                    </td>\n                </tr>\n            )\n        })\n    }\n    editFilter(e, data) {\n        e.preventDefault();\n        this.setState({ editForm: true, editData: data, id: data.id, edituser: data.login, editserver: data.broker, editalias: data.alias })\n    }\n    editAlias(e) {\n        this.setState({ editalias: e.target.value })\n    }\n    viewFilter(e, data) {\n        e.preventDefault();\n        this.setState({ detailForm: true, edituser: data.login, editserver: data.broker, editalias: data.alias, editstatus: data.status })\n    }\n    render() {\n\n        return (\n            <div className=\"content\">\n                <Grid fluid>\n                    <Row>\n                        <Col md={12} sm={6}>\n                            <div className=\"terminal-box\">\n                                <span className=\"terminal-text\">Terminal Accounts</span>\n                                {/* <div style={{ padding: '20px' }}>\n                                    <a\n                                        onClick={() => this.deleteThisGoal()}\n                                        className='btn btn-danger'\n                                    >\n                                        <i className=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete Goal\n                                     </a>\n                                    {this.state.alert}\n                                </div> */}\n                            </div>\n                            <button className=\"pull-right add-button\" onClick={this.toogle}>Add New</button>\n\n                            {this.state.loginForm &&\n                                <Modal show={this.state.show} onHide={this.state.closebtn ? this.handleClose : () => console.log('error')} >\n                                    {/* <Modal.Header closeButton>\n                                        <Modal.Title>Log In</Modal.Title>\n                                    </Modal.Header> */}\n                                    <Modal.Body>\n                                        <div className=\"form-box\">\n                                            <Modal.Header closeButton={this.state.closebtn ? true : false}>\n                                                <Modal.Title className=\"text-center\"><b>Log In</b></Modal.Title>\n                                            </Modal.Header>\n                                            <form style={{ marginTop: '20px' }} onSubmit={this.onSubmit}>\n                                                <label >User Name</label>\n                                                <input type='text'\n                                                    className=\"Itext labelSet \" placeholder=\"Enter Username\" name=\"login\" value={this.state.login} onChange={this.onChange} disabled={this.state.currentAddLogin ? true : false}\n                                                // onKeyUp={this.checkValidUser}\n                                                ></input>\n\n\n                                                {(this.state.error == \"login\") &&\n                                                    <span style={{ color: 'red', fontSize: '13px' }}>Please enter Username </span>\n                                                }\n\n                                                {(this.state.error == \"alphabet\") &&\n                                                    <span style={{ color: 'red', fontSize: '13px' }}>\"Invalid format. login should contain only digits.\"</span>\n                                                }\n                                                <br></br>\n                                                <label className=\"labeAdjust\">Password</label>\n                                                <input className=\"Itext labelSet\" placeholder=\"Password\" name=\"password\" type=\"password\" value={this.state.password} onChange={this.onChange} disabled={this.state.currentAddLogin ? true : false}></input>\n                                                {(this.state.error == \"password\") &&\n                                                    <span style={{ color: 'red', fontSize: '13px' }}>Please enter Password </span>\n                                                }\n                                                <br></br>\n                                                <label className=\"labeAdjust\">Server</label>\n                                                <input className=\"Itext labelSet\" name=\"broker\" placeholder=\"Server\" value={this.state.broker} onChange={this.onChange} disabled={this.state.currentAddBroker ? true : false}></input>\n                                                {(this.state.error == \"broker\") &&\n                                                    <span style={{ color: 'red', fontSize: '13px' }}>Please enter Server </span>\n                                                }\n                                                <br></br>\n                                                <label className=\"labeAdjust\">Alias</label>\n                                                <input className=\"Itext labelSet\" placeholder=\"Alias\" value={this.state.alias} onChange={this.onChange} name=\"alias\" disabled={this.state.currentAddAlias ? true : false}></input>\n                                                {this.state.timerShow &&\n                                                    <p>\n                                                        Connecting to server... {timerWait} seconds remains\n                                                </p>\n                                                }\n                                                <div className=\" topadjust clearfix\">\n                                                    {/* {this.state.tryAgainConnection === false ? */}\n                                                    {/* ( */}\n                                                    {this.state.timerShow == false &&\n\n                                                        <button type=\"submit\" className=\"save\" className={!this.state.login || !this.state.password || !this.state.broker ? \"loginButton\" : \"loginButton save2 save1\"}>Submit</button>}\n                                                    {/* ) */}\n                                                    {/* //     :\n                                                    //     (this.state.timerShow == false && <div ></div>)\n                                                    // } */}\n                                                </div>\n                                            </form>\n                                        </div>\n\n                                    </Modal.Body>\n                                    {/* <Modal.Footer>\n                                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                                            Close\n                                  </Button>\n                                        \n                                    </Modal.Footer> */}\n                                </Modal>\n\n                            }\n                        </Col>\n                    </Row>\n                    <div style={{ background: '#ffffff' }}>\n                        <Row>\n                            <Col md={12}>\n                                <div style={{ padding: '10px' }}>\n                                    <table className=\"table table-striped\">\n                                        <thead>\n                                            <tr>\n                                                <th scope=\"col\">Sr.No.</th>\n                                                <th scope=\"col\">User Name</th>\n                                                <th scope=\"col\">Server</th>\n                                                <th scope=\"col\">Alias</th>\n                                                <th scope=\"col\">Status</th>\n                                                <th scope=\"col\">Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {/* {this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => { */}\n                                            {/* // console.log(\"hhhhhhhhhhh\") */}\n                                            {this.createTr()}\n                                            {/* })} */}\n                                            {/* <tr>\n                                                <th scope=\"row\">2</th>\n                                                <td>Jacob</td>\n                                                <td>Thornton</td>\n                                                <td>5.1.2.9</td>\n                                                <td>Connected</td>\n                                            </tr>\n                                            <tr>\n                                                <th scope=\"row\">3</th>\n                                                <td>Larry</td>\n                                                <td>the Bird</td>\n                                                <td>ab@123</td>\n                                                <td>Connected</td>\n                                            </tr> */}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </Col>\n                            <div className=\"centerbtn\">\n                            </div>\n\n                        </Row>\n                    </div>\n\n                </Grid>\n\n                {this.state.editForm &&\n                    <Modal show={this.state.show} onHide={this.handleCloseEdit}>\n                        {/* <Modal.Header closeButton>\n                                        <Modal.Title>Log In</Modal.Title>\n                                    </Modal.Header> */}\n                        <Modal.Body>\n                            <div className=\"form-box\">\n                                <Modal.Header closeButton>\n                                    <Modal.Title className=\"text-center\"><b>Edit</b></Modal.Title>\n                                </Modal.Header>\n                                <form style={{ marginTop: '20px' }} onSubmit={this.onUpdate}>\n                                    <label>USER</label>\n                                    <input className=\"Itext\" disabled name=\"broker\" placeholder=\"Server\" value={this.state.edituser} ></input>\n\n                                    <label>Server</label>\n                                    <input className=\"Itext\" disabled name=\"broker\" placeholder=\"Server\" value={this.state.editserver} ></input>\n                                    <label>Alias</label>\n                                    <input className=\"Itext\" placeholder=\"Alias\" value={this.state.editalias} name=\"alias\" onChange={(e) => this.editAlias(e)}></input>\n                                    <div className=\"clearfix\">\n                                        <button type=\"submit\" className=\"save\">Update</button>\n                                    </div>\n                                </form>\n                            </div>\n\n                        </Modal.Body>\n                        {/* <Modal.Footer>\n                                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                                            Close\n                                  </Button>\n                                        \n                                    </Modal.Footer> */}\n                    </Modal>\n\n                }\n\n                {this.state.detailForm &&\n                    <Modal show={this.state.show} onHide={this.handleCloseDetail}>\n                        {/* <Modal.Header closeButton>\n                                        <Modal.Title>Log In</Modal.Title>\n                                    </Modal.Header> */}\n                        <Modal.Body>\n                            <div className=\"form-box\">\n                                <Modal.Header closeButton>\n                                    <Modal.Title className=\"text-center\"><b>Details</b></Modal.Title>\n                                </Modal.Header>\n                                <div className=\"detail_div\">\n                                    <table>\n                                        <tr>\n                                            <td><label>User Name</label></td>\n                                            <td><label>{this.state.edituser}</label></td>\n                                        </tr>\n                                        <tr>\n                                            <td><label>Server</label></td>\n                                            <td><label>{this.state.editserver}</label></td>\n                                        </tr>\n                                        <tr>\n                                            <td><label>Alias</label></td>\n                                            <td><label>{this.state.editalias}</label></td>\n                                        </tr>\n                                        <tr>\n                                            <td><label>Status</label></td>\n                                            <td><label>{this.state.editstatus == 1 ? 'Connected' : 'Disconnected'}</label></td>\n                                        </tr>\n                                    </table>\n                                </div>\n                            </div>\n\n                        </Modal.Body>\n                    </Modal>\n\n                }\n\n\n            </div >\n        );\n    }\n}\n\nexport default Innerlogin;","import React, { Component } from \"react\";\n// import ChartistGraph from \"react-chartist\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport TableList from '../views/TableList';\n// import { Card } from \"components/Card/Card.jsx\";\n// import { StatsCard } from \"components/StatsCard/StatsCard.jsx\";\n// import { Tasks } from \"components/Tasks/Tasks.jsx\";\nimport NumberFormat from 'react-number-format';\nimport Data from './Data';\nimport Moment from 'react-moment';\n\n// import {\n//   dataPie,\n//   legendPie,\n//   dataSales,\n//   optionsSales,\n//   responsiveSales,\n//   legendSales,\n//   dataBar,\n//   optionsBar,\n//   responsiveBar,\n//   legendBar\n// } from \"variables/Variables.jsx\";\nimport config from '../constant/config.js';\nconst axios = require('axios');\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      details: [],\n      accountlist: [],\n      persons: [],\n      filterlist: [],\n      formData: [],\n      errorMassege: false,\n      error: '',\n      dateTime: '',\n      fromAccounts: '',\n      fromSymbol: '',\n      toAccounts: '',\n      toSymbol: '',\n      fromOpenOrderInfos: '',\n      toOpenOrderInfos: '',\n      total:'',\n      totalTo:'',\n      // allSymbols:[],\n      // symbolsObj:[]\n    }\n  }\n  createLegend(json) {\n    var legend = [];\n    for (var i = 0; i < json[\"names\"].length; i++) {\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\n      legend.push(<i className={type} key={i} />);\n      legend.push(\" \");\n      legend.push(json[\"names\"][i]);\n    }\n    return legend;\n  }\n\n  getAllAccounts = () => {\n    let self = this;\n    axios.get(config.baseurl + '/accounts/fetchAllAccounts')\n      .then(function (response) {\n        if (response.status == 200) {\n          self.setState({ accountlist: response.data.rows })\n        }\n      });\n  }\n\n  fetchActivefilterData = () => {\n    let self = this;\n    axios.get(config.baseurl + '/filter/fetchActivefilterdata')\n      .then(function (response) {\n        if (response.status == 200) {\n          self.setState({ filterlist: response.data.rows })\n          // console.log(response.data.rows.accountFromInfo,\"filterlist----------------------\");\n\n          if (self.state.filterlist.length == 0) {\n            self.setState({ errorMassege: true })\n          }\n        }\n      });\n  }\n\n  fetchAllOpenTrade = () => {\n    let self = this;\n    axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\n      .then(function (response) {\n        if (response.status == 200) {\n          self.setState({ dateTime: response.data.filteredInfoTime })\n          // console.log(self.state.dataOpenTrade.accountFromInfo,\"outyfjhkjh\");\n        }\n      });\n  }\n\n  fetchStatusData = () => {\n    let self = this;\n    let tottal = 0;\n    axios.get(config.baseurl + '/accounts/fetchStatusData')\n      .then(function (response) {\n        if (response.status == 200) {\n          self.setState({ fromAccounts: response.data.fromAccounts })\n          self.setState({ fromSymbol: response.data.fromSymbol })\n          // console.log(fromSymbol,\"fromSymbol\");\n          self.setState({ toAccounts: response.data.toAccounts })\n          self.setState({ toSymbol: response.data.toSymbol })\n          self.setState({ fromOpenOrderInfos: response.data.fromOpenOrderInfos[0] })\n\n          if (response.data.fromOpenOrderInfos[0].order_type == 0) {\n            self.setState({total : response.data.fromSymbol.contract_size * (response.data.fromOpenOrderInfos[0].lots)})\n          } else {\n            self.setState({total:  response.data.fromSymbol.contract_size * -(response.data.fromOpenOrderInfos[0].lots)})\n          }\n          console.log(response.data.fromSymbol.contract_size * -(response.data.fromOpenOrderInfos[0].lots),\"total\");\n          self.setState({ toOpenOrderInfos: response.data.toOpenOrderInfos[0] })\n\n          if (response.data.toOpenOrderInfos[0].order_type == 0) {\n            self.setState({totalTo : response.data.toSymbol.contract_size * (response.data.toOpenOrderInfos[0].lots)})\n          } else {\n            self.setState({totalTo : response.data.toSymbol.contract_size * -(response.data.toOpenOrderInfos[0].lots)})\n          }\n          // let Finaltotal = {t}\n          // console.log(self.state.tottal,\"totalTo\");\n\n          // console.log(self.state.fromOpenOrderInfos.lots,\"\");\n        }\n      });\n  }\n\n\n  componentWillMount() {\n    this.getAllAccounts();\n    this.fetchActivefilterData();\n    this.fetchAllOpenTrade();\n    this.fetchStatusData();\n    // axios.get(config.baseurl + '/filter/fetchfilterdata')\n    // .then(function (response) {\n    //   console.log(response.data,'hghghjghghj')\n    //   if (response.status == 200) {\n    //     // self.setState({ formData: response.data.rows })\n    //     // console.log(formData);\n\n    //     response.data.rows.map((item, index) => {\n    //       console.log(item,'item');\n    //         if (item.status==1){\n    //           self.setState({errorMassege: false},()=>{\n    //             console.log(self.state, \"display\");\n\n    //           })\n    //           // console.log(self.state.errorMassege);\n\n\n    //         }\n\n    //     })\n    //   }\n    // });\n    // axios.get(config.baseurl + '/filter/fetchfilterdata')\n    // .then(function (response) {\n    //   if (response.status == 200) {\n    //     self.setState({ filterlist: response.data.rows })\n    //   }\n    // })\n\n    // axios.get(config.baseurl + '/filter/fetchActivefilterdata')\n    // .then(function (response) {\n    //   if (response.status == 200) {\n\n    //     if(response.data.rows && response.data.rows.length>0){\n    //       let symbolsObj = (response.data.rows[0].symbols).map(data => {\n    //         return ({value:data, label:data})\n    //       })\n    //       self.setState({ filterlist: response.data.rows, allSymbols: response.data.rows[0].symbols, symbolsObj:symbolsObj })\n    //     }\n    //   }\n    // });\n\n  }\n\n  showData = (accountDetailValue) => {\n\n\n    //    if (this.state.accountDetailValue == null || this.state.accountDetailValue == '') {\n    //     this.setState({ error: 'accountDetailValue' })\n    //     return\n    //  }\n    //  else{\n    //     this.setState({error:''})\n    // }\n    // return this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => {\n    //   if(accountDetailValue==='margin_level'){\n    //       return (\n    //         <td className={index !== (this.state.accountlist.length - 1) ? 'tdClr2 tdClr' : 'tdClr2'} key={index}>\n    //         {item.accounts_details[0][accountDetailValue]} %</td>\n    //       )\n    //   }\n    //   return (\n    //     <td className={index !== (this.state.accountlist.length - 1) ? 'tdClr2 tdClr' : 'tdClr2'} key={index}>\n    //     {item.accounts_details[0].currency == 'USD' ? '$' : ''} {item.accounts_details[0][accountDetailValue]}</td>\n    //   )\n    // })\n    return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\n      if (accountDetailValue === 'margin_level') {\n        return (\n          <>\n            <td className=\"tdClr2 tdClr\" key={index}>\n              <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\n            </td>\n            <td className=\"tdClr2\" key={index}>\n              {/* {item.accountToInfo[0].accounts_details[0][accountDetailValue]} % */}\n              <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} /> %\n            </td>\n          </>\n        )\n      }\n      if (item.accountFromInfo.length > 0) {\n        return (\n          <>\n            <td className=\"tdClr2 tdClr\" key={index}>\n              {item.accountFromInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''}  {' '}\n              <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n            </td>\n\n            <td className=\"tdClr2\" key={index}>\n              {item.accountToInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''} {' '}\n              {/* {item.accountToInfo[0].accounts_details[0][accountDetailValue]} */}\n              <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n            </td>\n          </>\n        )\n\n      }\n\n    })\n  }\n\n  exposureTr = () => {\n    return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\n      return (\n        <>\n          <th key={index} className=\"bText colorDarkBlue text-center tdClr2 tdClr\">\n            <span>\n              {item.accountFromInfo[0].login}\n            </span>\n            <div className=\"colorDarkBlue\" style={{ fontSize: 10 }}>\n              ({(item.accountFromInfo[0].alias != null) ? item.accountFromInfo[0].alias : '-'})\n        </div>\n          </th>\n          <th key={index} className=\"bText color2 text-center tdClr2\">\n            <span>\n              {item.accountToInfo[0].login}\n            </span>\n            <div className=\"color2\" style={{ fontSize: 10 }}>\n              ({(item.accountToInfo[0].alias != null) ? item.accountToInfo[0].alias : '-'})\n        </div>\n          </th>\n        </>\n\n      )\n\n    })\n\n  }\n\n  tableHeader = () => {\n\n    // return this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => {\n    //   return (\n    //     <th key={index} className={item.accounts_details[0].account_id == 1 && index !== (this.state.accountlist.length - 1) ? 'bText colorDarkBlue text-center tdClr2 tdClr' : 'bText colorDarkBlue text-center tdClr2'}>\n    //       <span>\n    //         {item.login}\n    //       </span>\n    //     <div className=\"colorDarkBlue\" style={{fontSize:10}}> \n    //       ({(item.alias!=null) ? item.alias : '-'})\n    //     </div>\n    //     </th>\n\n    //   )\n    // }\n    // )\n    return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\n      return (\n        <>\n          <th key={index} className=\"bText colorDarkBlue text-center tdClr2 tdClr\">\n            <span>\n              {item.accountFromInfo[0].login}\n            </span>\n            <div className=\"colorDarkBlue\" style={{ fontSize: 10 }}>\n              ({(item.accountFromInfo[0].alias != null) ? item.accountFromInfo[0].alias : '-'})\n          </div>\n          </th>\n          <th key={index} className=\"bText color2 text-center tdClr2\">\n            <span>\n              {item.accountToInfo[0].login}\n            </span>\n            <div className=\"color2\" style={{ fontSize: 10 }}>\n              ({(item.accountToInfo[0].alias != null) ? item.accountToInfo[0].alias : '-'})\n          </div>\n          </th>\n        </>\n\n      )\n\n    })\n  }\n\n\n\n  \n\n  render() {\n    const dateToFormat = new Date();\nlet FinalTotal = 0\n    \n    return (\n\n      <div className=\"\">\n        {this.state.errorMassege == true &&\n          <div className=\"popup\">\n\n            <div class=\"card w-75 \">\n              <div class=\"card-body topmargin\">\n                <div class=\" card-text popuptext\" role=\"alert\">Please Select Filters To Continue...</div>\n              </div>\n            </div>\n          </div>}\n\n        <div className=\"content\">\n          {this.state.errorMassege != true &&\n\n            <Grid fluid>\n              <Row>\n                <div className=\"lastUpdate\">\n                  <span> Last Updated :  </span>\n                  {this.state.dateTime}  </div>\n                <Col md={12} sm={6}>\n\n                  <div className=\"terminal-box\">\n                    {(this.state.errorMassege) && <p style={{ color: 'red', fontSize: '10px' }}>Please Select Any Account</p>}\n                    <span className=\"terminal-text\">Terminal Statistics</span>\n                  </div>\n\n                  <div className=\"card\">\n                    <div className=\"boxFix\">\n                      <h4 className=\"text-center exposureSet\"><b>Exposure</b></h4>\n                      <Row>\n                        <Col md={6}>\n                          <div className=\"card \">\n\n                            <div className=\"header\">\n\n                              <h6 className={'colorDarkBlue , loginCenter'}>{this.state.fromAccounts.login}</h6>\n                              <h6 className={'colorDarkBlue , text-center '}>({this.state.fromAccounts.alias})</h6>\n                            </div>\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                              <table className=\"table\">\n                                <tbody>\n                                  {/* <tr>{exposureTr()}</tr> */}\n\n                                  <tr><td>Symbol </td>\n                                    <td className=\"td-actions text-right\">{this.state.fromSymbol.name}\n\n                                    </td>\n                                  </tr>\n                                  <tr><td>Lots Size</td>\n                                    <td className=\"td-actions text-right\">{this.state.fromOpenOrderInfos.lots}\n\n                                    </td>\n                                  </tr>\n                                  <tr><td>Order Type </td>\n                                    <td className=\"td-actions text-right\">{this.state.fromOpenOrderInfos.order_type == 0 ? 'BUY ' : 'SELL '}\n                                    </td>\n                                  </tr>\n                                  <tr>\n                                    <td>Contract Size </td>\n                                    <td className=\"td-actions text-right\">{this.state.fromSymbol.contract_size}  -\n                                    {this.state.fromSymbol.margin_currency}\n                                    </td>\n                                  </tr>\n                                  <tr>\n                                    <td>Total</td>\n                                    <td className=\"td-actions text-right\">{this.state.total}\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </div>\n                            </div>\n                          </div>\n                        </Col>\n\n\n                        <Col md={6}>\n                          <div className=\"card \">\n\n                            <div className=\"header\">\n\n                              <h6 className={'color2 , loginCenter'}>{this.state.toAccounts.login}</h6>\n                              <h6 className={'color2 , text-center '}>({this.state.toAccounts.alias})</h6>\n                            </div>\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                              <table className=\"table\">\n                                <tbody>\n\n                                  <tr><td>Symbol </td>\n                                    <td className=\"td-actions text-right\">{this.state.toSymbol.name}\n\n                                    </td>\n                                  </tr>\n                                  <tr><td>Lots Size</td>\n                                    <td className=\"td-actions text-right\">{this.state.toOpenOrderInfos.lots}\n                                    </td>\n                                  </tr>\n                                  <tr><td>Order Type </td>\n                                    <td className=\"td-actions text-right\">{this.state.toOpenOrderInfos.order_type == 0 ? 'BUY ' : 'SELL '}\n                                    </td>\n                                  </tr>\n                                  <tr>\n                                    <td>Contract Size </td>\n                                    <td className=\"td-actions text-right\">{this.state.toSymbol.contract_size}  -\n                                    {this.state.toSymbol.margin_currency}\n                                    </td>\n                                  </tr>\n                                  <tr>\n                                    <td>Total </td>\n                                    <td className=\"td-actions text-right\">{this.state.totalTo}\n                                            </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n\n                            </div>\n                            </div>\n                          </div>\n                        </Col>\n                      </Row>\n                    </div>\n                    <h5 className=\"  text-center\"><b>Exposure</b></h5>\n                    \n                    <div className=\" setBottom text-center\"> {this.state.total + this.state.totalTo}</div>\n                  </div>\n\n                </Col>\n              </Row>\n              <Row style={{ margin: '20px 0px' }}>\n\n                <Row>\n                  {Data.dashBoardPage.items.map((item, index) =>\n\n                    <Col md={4} sm={6} key={index}>\n                      <div style={{ margin: '30px 0px' }} className=\"text-center\">\n                        <span className=\"bText\">{item.title}</span>\n                      </div>\n                      <div className=\"balance-box Pmargin\"\n                      // className={item.id == '1' ? 'balance-box' : item.id == '2' ?\n                      //   'balance-box Pmargin' : item.id == '3' ? 'balance-box equity-box' :\n                      //     item.id == '4' ? 'balance-box Fmargin' : item.id == '5' ? 'balance-box floating' : 'balance-box  margin-box'}\n                      >\n                        <div className=\"content\">\n                          <div className=\"table-responsive\">\n\n                            <table className=\"table  text-center\">\n\n                              <tbody>\n                                <tr>\n                                  {this.tableHeader()}\n                                </tr>\n                                <tr>\n                                  {item.title == 'Balance' && this.showData('balance')}\n                                  {item.title == 'Equity' && this.showData('equity')}\n                                  {item.title == 'Margin' && this.showData('margin')}\n                                  {item.title == 'Free Margin' && this.showData('free_margin')}\n                                  {item.title == 'Margin %' && this.showData('margin_level')}\n                                  {item.title == 'Floating P/L' && this.showData('profit')}\n                                </tr>\n                              </tbody>\n                            </table>\n\n                          </div>\n                        </div>\n                      </div>\n                    </Col>\n\n                  )}\n                </Row>\n\n                {/* \n            <Row>\n              <Col md={4}>\n                <Row>\n                  <Col md={6}>\n                    <Row>\n                      <Col md={2}>\n                        <div>\n                          <div>\n                            <div>\n                              <span>Logn in</span>\n                            </div>\n                            <div>\n                              <span>Balance</span>\n                            </div>\n                          </div>\n                        </div>\n                      </Col>\n                      <Col md={2}>\n                        <div>\n                          <div>\n                            <div>\n                              <span>Logn in</span>\n                            </div>\n                            <div>\n                              <span>Balance</span>\n                            </div>\n                          </div>\n                        </div>\n                      </Col>\n                      <Col md={2}>\n                        <div>\n                          <div>\n                            <div>\n                              <span>Logn in</span>\n                            </div>\n                            <div>\n                              <span>Balance</span>\n                            </div>\n                          </div>\n                        </div>\n                      </Col>\n                    </Row>\n\n                  </Col>\n                </Row>\n              </Col>\n            </Row> */}\n\n              </Row>\n              <Row>\n                <Col md={12} sm={6}>\n                  <div className=\"terminal-box\">\n                    <span className=\"terminal-text\">Statistics Per Symbol</span>\n                  </div>\n                </Col>\n              </Row>\n              <Row>\n                <TableList />\n              </Row>\n            </Grid>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\nimport TagsInput from 'react-tagsinput'\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\n\nimport DatePicker from \"react-datepicker\";\nimport config from '../../constant/config.js';\n\nimport Select from 'react-select'\nimport { createLogicalAnd } from 'typescript';\nconst axios = require('axios');\n\nclass FilterEdite extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedAccountOption: null,\n            selectedSymbolOption: null,\n            selectedSymbolOptionTo: null,\n            selectedAccountOptionTo: null,\n            selectedCommissionAccount: null,\n            startDate: null,\n            endDate: null,\n            startDateTo: null,\n            endDateTo: null,\n            allAccounts: [],\n            allSymbols: [],\n            profileName: '',\n            showCommission: false,\n            // showAddCommission: false,\n            id: '',\n            error: '',\n            autoSyncClose: false,\n            magicNumber: [],\n            magicNumberTo: [],\n            tags: [],\n            include_exclude_status: '',\n            showMagicNumber: false,\n            showMagicNumberTo: false,\n            exclude: false,\n            include: false,\n            excludeTo: false,\n            includeTo: false,\n\n\n        };\n\n\n    }\n    componentWillMount() {\n\n        let self = this;\n        axios.get(config.baseurl + '/accounts/fetchAllAccounts')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ allAccounts: response.data.rows })\n                }\n            })\n        axios.get(config.baseurl + '/accounts/fetchAllSymbol')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ allSymbols: response.data.rows })\n                }\n            })\n    }\n    componentDidMount() {\n\n        let abc = this.props.data;\n        if (abc) {\n            let from_symbol = JSON.parse(abc.from_symbols);\n            let to_symbol = JSON.parse(abc.to_symbols);\n\n            let all_from_symbols = from_symbol.map(data => { return ({ value: data, label: data }) });\n            let all_to_symbols = to_symbol.map(data => { return ({ value: data, label: data }) });\n\n            from_symbol = from_symbol.join(', ');\n            to_symbol = to_symbol.join(', ');\n\n            this.setState({\n                id: abc.id,\n                profileName: abc.profile_name,\n                selectedAccountOption: ({ value: abc.accountFromInfo[0].id, label: abc.accountFromInfo[0].login }),\n                selectedAccountOptionTo: ({ value: abc.accountToInfo[0].id, label: abc.accountToInfo[0].login }),\n                showCommission: abc.commission_acount_id !== 0 ? true : false,\n                selectedCommissionAccount: abc.commission_acount_id !== 0 ? ({ value: abc.accountCommissionInfo[0].id, label: abc.accountCommissionInfo[0].login }) : null,\n                showMagicNumber: abc.from_include_exclude_status !== 0 ? true : false,\n                showMagicNumberTo: abc.to_include_exclude_status !== 0 ? true : false,\n                magicNumber: abc.from_magic_number != \"0\" && abc.from_magic_number != \"\" ? JSON.parse(abc.from_magic_number) : [],\n                magicNumberTo: abc.to_magic_number != \"0\" && abc.to_magic_number != \"\" ? JSON.parse(abc.to_magic_number) : [],\n                include: abc.from_include_exclude_status === 1 ? true : false,\n                exclude: abc.from_include_exclude_status === 2 ? true : false,\n                includeTo: abc.to_include_exclude_status === 1 ? true : false,\n                excludeTo: abc.to_include_exclude_status === 2 ? true : false,\n                selectedSymbolOption: all_from_symbols,\n                autoSyncClose: abc.auto_close == 1 ? true : false,\n                selectedSymbolOptionTo: all_to_symbols,\n                startDate: new Date(abc.startdateFrom),\n                startDateTo: new Date(abc.startdateTo),\n                endDate: (abc.enddateFrom != null) ? new Date(abc.enddateFrom) : '',\n                endDateTo: (abc.enddateTo != null) ? new Date(abc.enddateTo) : '',\n            })\n\n\n        }\n\n\n\n    }\n\n    handleDropdownChange = (e) => {\n        this.setState({ selectValue: e.target.value });\n    }\n    handleChangeDate = date => {\n        this.setState({\n            startDate: date\n        });\n    }\n    handleEndDate = date => {\n\n        if (date < this.state.startDate && date != null) {\n            this.setState({ error: 'enddate', endDate: \"\" })\n            return\n        }\n        this.setState({\n            error: '',\n            endDate: date,\n        });\n    }\n    handleChangeDateTo = date => {\n        this.setState({\n            startDateTo: date\n        });\n    }\n    handleEndDateTo = date => {\n        if (date < this.state.startDateTo && date != null) {\n            this.setState({ error: 'enddateto', endDateTo: \"\" })\n            return\n        }\n        this.setState({\n            error: '',\n            endDateTo: date,\n        });\n    }\n    handleChange = (event) => {\n        this.setState({ value: Array.from(event.target.selectedOptions, (item) => item.value) });\n    }\n\n    handeChangeShowCommission = () => {\n        this.setState({ showCommission: !this.state.showCommission })\n    }\n    handleChangeCommissionAccount = selectedCommissionAccount => {\n        this.setState({ selectedCommissionAccount });\n    };\n\n    renderCommissionAccount = () => {\n        const { selectedCommissionAccount, allAccounts } = this.state;\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account\"\n                value={selectedCommissionAccount}\n                onChange={this.handleChangeCommissionAccount}\n                options={options}\n            />\n        )\n    }\n\n\n\n    renderAccountSelect = () => {\n        const { selectedAccountOption, allAccounts } = this.state;\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account\"\n                value={selectedAccountOption}\n                onChange={this.handleChangeAccount} l\n                options={options}\n                rules={{ required: 'Please select an option' }}\n            />\n        )\n    }\n\n    handleChangeAccountTo = selectedAccountOptionTo => {\n        this.setState({ selectedAccountOptionTo, error: '' });\n    };\n    renderAccountSelectTo = () => {\n        const { selectedAccountOptionTo, allAccounts } = this.state;\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account\"\n                value={selectedAccountOptionTo}\n                onChange={this.handleChangeAccountTo}\n                options={options}\n            />\n        )\n    }\n\n    handleChangeAccount = selectedAccountOption => {\n        this.setState({ selectedAccountOption });\n    };\n    handleChangeSymbol = selectedSymbolOption => {\n        this.setState({ selectedSymbolOption });\n    };\n    renderSymbolSelect = () => {\n        const { selectedSymbolOption, allSymbols } = this.state;\n        let options = allSymbols.map(data => {\n            return { value: data.name, label: data.name };\n        })\n        return (\n            <Select\n                placeholder=\"Select Symbol\"\n                value={selectedSymbolOption}\n                isMulti\n                onChange={this.handleChangeSymbol}\n                options={options}\n            />\n        )\n    }\n    handleChangeSymbolTo = selectedSymbolOptionTo => {\n        this.setState({ selectedSymbolOptionTo });\n    };\n    renderSymbolSelectTo = () => {\n        const { selectedSymbolOptionTo, allSymbols } = this.state;\n        let options = allSymbols.map(data => {\n            return { value: data.name, label: data.name };\n        })\n        return (\n            <Select\n                placeholder=\"Select Symbol\"\n                value={selectedSymbolOptionTo}\n                isMulti\n                onChange={this.handleChangeSymbolTo}\n                options={options}\n            />\n        )\n    }\n\n    handleChangeMagicNumber = (magicNumber) => {\n\n\n        // if(re.test(tags))\n        this.setState({ magicNumber })\n    }\n    handleChangeMagicNumberTo = (magicNumberTo) => {\n\n\n        // if(re.test(tags))\n        this.setState({ magicNumberTo })\n    }\n    changeIncludeDefaultProperty = () => {\n\n        this.setState({ include: !this.state.include, exclude: false }, () => {\n\n        })\n        if (!this.state.include == true) {\n            this.setState({ showMagicNumber: true })\n        } else if (this.state.include == true) {\n            this.setState({ showMagicNumber: false })\n\n        }\n\n\n    }\n    changeExcludeDefaultProperty = () => {\n        this.setState({ exclude: !this.state.exclude, include: false })\n        if (!this.state.exclude == true) {\n            this.setState({ showMagicNumber: true })\n        } else if (this.state.exclude == true) {\n            this.setState({ showMagicNumber: false })\n\n        }\n\n    }\n\n    changeIncludeDefaultPropertyTo = () => {\n        this.setState({ includeTo: !this.state.includeTo, excludeTo: false })\n        if (!this.state.includeTo == true) {\n            this.setState({ showMagicNumberTo: true })\n        } else if (this.state.includeTo == true) {\n            this.setState({ showMagicNumberTo: false })\n\n        }\n    }\n    changeExcludeDefaultPropertyTo = () => {\n        this.setState({ excludeTo: !this.state.excludeTo, includeTo: false })\n        if (!this.state.excludeTo == true) {\n            this.setState({ showMagicNumberTo: true })\n        } else if (this.state.excludeTo == true) {\n            this.setState({ showMagicNumberTo: false })\n\n        }\n\n    }\n    handleprofileName(e) {\n\n        this.setState({ profileName: e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1), error: '' })\n\n    }\n    handleChangeAutoSync(e) {\n        this.setState({ autoSyncClose: !this.state.autoSyncClose }, () => {\n        })\n    }\n    formDataSubmit(e) {\n        e.preventDefault();\n\n        let from_status = this.state.include === true && this.state.exclude === false ? 1 : this.state.exclude === true && this.state.include === false ? 2 : 0\n\n        let to_status = this.state.includeTo === true && this.state.excludeTo === false ? 1 : this.state.excludeTo === true && this.state.includeTo === false ? 2 : 0\n        let self = this\n\n       \n        if (this.state.profileName == null || this.state.profileName == '') {\n            NotificationManager.listNotify = [];\n            NotificationManager.error ('Please select profile name !')\n            return\n        }\n        else if (this.state.selectedAccountOption == null || this.state.selectedAccountOption == '') {\n            this.setState({ error: 'accountoption' })\n            return\n        }\n        else if (this.state.showCommission = this.state.showCommission    &&  this.state.selectedCommissionAccount == null || this.state.selectedCommissionAccount == '') {\n            this.setState({ error: 'selectedCommissionAccount' })\n            return\n        }\n        else if (this.state.startDate == null || this.state.startDate == '') {\n            this.setState({ error: 'startdate' })\n            return\n        } else if (this.state.selectedSymbolOption == null || this.state.selectedSymbolOption == '') {\n            this.setState({ error: 'symbolselect' })\n            return\n        }\n        else if (this.state.selectedAccountOptionTo == null || this.state.selectedAccountOptionTo == '') {\n            this.setState({ error: 'accountoptionto' })\n            return\n        } else if (this.state.startDateTo == null || this.state.startDateTo == '') {\n            this.setState({ error: 'startDateTo' })\n            return\n        }\n        else if (this.state.selectedSymbolOptionTo == null || this.state.selectedSymbolOptionTo == '') {\n            this.setState({ error: 'selectedSymbolOptionTo' })\n            return\n        }\n        else {\n            this.setState({ error: '' })\n        }\n        let fromSymbol = this.state.selectedSymbolOption;\n        let toSymbol = this.state.selectedSymbolOptionTo;\n\n        let symbolFrom = fromSymbol.map((data) => data.value)\n        let symbolto = toSymbol.map((data) => data.value)\n\n        let Data = {\n            id: this.state.id,\n            profile_name: this.state.profileName,\n            from_account_id: this.state.selectedAccountOption.value,\n            to_account_id: this.state.selectedAccountOptionTo.value,\n            commission_acount_id: this.state.showCommission == true ? this.state.selectedCommissionAccount.value : 0,\n            startdateFrom: this.state.startDate,\n            // enddateFrom: this.state.endDate,\n            enddateFrom: (this.state.endDate) ? this.state.endDate : null,\n            startdateTo: this.state.startDateTo,\n            enddateTo: (this.state.endDateTo) ? this.state.endDateTo : null,\n            from_symbols: JSON.stringify(symbolFrom),\n            to_symbols: JSON.stringify(symbolto),\n            auto_close: this.state.autoSyncClose ? 1 : 0,\n            from_magic_number: (from_status != 0) ? this.state.magicNumber.length > 0 ? JSON.stringify(this.state.magicNumber) : [] : \"\",\n            to_magic_number: (to_status != 0) ? this.state.magicNumberTo.length > 0 ? JSON.stringify(this.state.magicNumberTo) : [] : \"\",\n\n            from_include_exclude_status: from_status,\n            to_include_exclude_status: to_status,\n            createdAt: new Date(),\n            updatedAt: new Date(),\n\n            \n        }\n\n       \n        axios.post(config.baseurl + '/filter/updatefilterdatafull', Data)\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.props.onHide()\n\n                }\n            })\n            .catch(function (error) {\n            });\n\n    }\n    crossClick(e) {\n        e.preventDefault();\n        this.props.onHide()\n    }\n\n    render() {\n        return (\n            <div className=\"content\">\n                <Grid fluid>\n                    <div className=\"symbol-box\">\n                        <div className=\"cross_div\"><a onClick={(e) => this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\n                        <div className=\"terminal-text\" >\n                            <p className=\"profilename pnameadjust\"> Profile Name</p>\n                            <input type=\"text\" name=\"profilename\" value={this.state.profileName} className=\"Itext\" onChange={(e) => this.handleprofileName(e)} />\n                            {(this.state.error == 'profileName') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Fill Your Profile Name </p>}\n\n                        </div>\n                        <div className=\"synclose\">\n                            <label class=\"checkbox-inline\"><input type=\"checkbox\" checked={this.state.autoSyncClose} name=\"changeAutoSync\" onChange={(e) => this.handleChangeAutoSync(e)} /><b>Auto Sync Close</b></label>\n                        </div>\n                        <form>\n                            <Row>\n                                {/* <Col md={12}>\n                                    <div className=\"card\">\n                                        <div style={{ padding: '10px 20px 35px ', }}>\n                                            <div>\n                                                <h3 className=\" text-center\">Filter By Magic Numbers</h3>\n\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6 text-center\">\n\n                                                    <button type=\"button\" class=\"text-center filter-add-button\">Include</button>\n                                                </div>\n\n                                                <div className=\"col-md-6 text-center btnspace\">\n                                                    <button type=\"button\" class=\"filter-add-button\">Exclude</button>\n                                                </div>\n                                                <div className=\"row\">\n                                                    <div className=\"col\">\n                                                        <div class=\"text-center  \">\n                                                            <input class=\"form-control input-css\" placeholder=\"Select Numbers\" type=\"number\"></input>\n                                                        </div>\n                                                    </div>\n                                                </div>from_include_exclude_status\n\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                </Col> */}\n                                <Col md={6}>\n                                    <div className=\"card bottom\">\n                                        <div style={{ padding: '10px 20px 0px' }}>\n                                            <span style={{ fontWeight: 'bold' }}>Account A</span>\n                                        </div>\n                                        <table className=\"table mt20\">\n                                            <tbody>\n                                                <tr>\n                                                    <td className=\"b-clr\">\n                                                        <span className=\"accnt\">Account :</span>\n                                                    </td>\n\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        {this.renderAccountSelect()}\n                                                        {(this.state.error == 'accountoption') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">From:  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            selected={this.state.startDate}\n                                                            onChange={this.handleChangeDate}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDate}\n                                                            endDate={this.state.endDate}\n                                                            strictParsing\n                                                        />\n                                                        {(this.state.error == 'startdate') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">To :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n\n                                                            selected={this.state.endDate}\n                                                            onChange={this.handleEndDate}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDate}\n                                                            endDate={this.state.endDate}\n                                                        />\n                                                        {(this.state.error == 'enddate') && <p style={{ color: 'red', fontSize: '13px' }}>*\n                                                        Please ensure that the End Date is greater than  the Start Date.</p>}\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">Symbol :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '50%' }}>\n                                                        {this.renderSymbolSelect()}\n                                                        {(this.state.error == 'symbolselect') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\n\n                                                    </td>\n                                                </tr>\n\n\n                                            </tbody>\n                                        </table>\n                                        <div className=\"text-center\">\n                                            <span c> Magic Number :  </span>\n                                        </div>\n\n                                        <table className=\"table \">\n                                            <tbody>\n                                                <tr>\n                                                    <td className=\"b-clr dataAdjust\">\n                                                        <div onClick={this.changeIncludeDefaultProperty}>\n                                                            <input\n                                                                type=\"radio\" id=\"include\" name=\"include\" checked={this.state.include} />\n                                                            <span class=\"accnt \">Include</span>\n\n                                                        </div>\n                                                    </td>\n                                                    <td className=\"b-clr \">\n                                                        <div onClick={this.changeExcludeDefaultProperty} >\n                                                            <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.exclude} />\n                                                            <span class=\"accnt \">Exclude</span>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n\n\n                                        {this.state.showMagicNumber &&\n                                            <div className=\"b-clr magicnumber\" style={{}}>\n                                                <TagsInput\n                                                    onValidationReject={() => console.log('rejected')}\n                                                    validationRegex={/^[0-9]*$/}\n                                                    inputProps={{ placeholder: this.state.magicNumber.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumber\n                                                    } onChange={this.handleChangeMagicNumber}></TagsInput>\n                                            </div>}\n\n\n                                    </div>\n                                </Col>\n                                <Col md={6}>\n                                    <div className=\"card bottom\">\n                                        <div style={{ padding: '10px 20px 0px' }}>\n                                            <span style={{ fontWeight: 'bold' }}>Account B</span>\n                                        </div>\n\n                                        <table className=\"table mt20\">\n                                            <tbody>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">Account :</span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '50%' }}>\n                                                        {this.renderAccountSelectTo()}\n                                                        {(this.state.error == 'accountoptionto') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\n\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">From:  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            selected={this.state.startDateTo}\n                                                            onChange={this.handleChangeDateTo}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDateTo}\n                                                            endDate={this.state.endDateTo}\n                                                        />\n\n                                                        {(this.state.error == 'startDateTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">To :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            selected={this.state.endDateTo}\n                                                            onChange={this.handleEndDateTo}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDateTo}\n                                                            endDate={this.state.endDateTo}\n\n                                                        />\n\n                                                        {(this.state.error == 'enddateto') && <p style={{ color: 'red', fontSize: '13px' }}>*\n                                                        Please ensure that the End Date is greater than  the Start Date.</p>}\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr\">\n                                                        <span className=\"accnt\">Symbol :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        {this.renderSymbolSelectTo()}\n                                                        {(this.state.error == 'selectedSymbolOptionTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\n\n\n                                                    </td>\n                                                </tr>\n\n                                            </tbody>\n                                        </table>\n\n\n                                        <div className=\"text-center\">\n                                            <span > Magic Number :  </span>\n                                        </div>\n                                        <table className=\"table mt20\">\n                                            <tbody>\n\n                                                <tr>\n                                                    <td className=\"b-clr checkboxAdjust\">\n                                                        <div onClick={this.changeIncludeDefaultPropertyTo} >\n                                                            <input\n                                                                type=\"radio\" id=\"includeTo\" name=\"includeTo\" checked={this.state.includeTo} />\n                                                            <span class=\"accnt \">Include</span>\n\n                                                        </div>\n                                                    </td>\n                                                    <td className=\"b-clr checkboxAdjust\">\n                                                        <div onClick={this.changeExcludeDefaultPropertyTo} >\n                                                            <input type=\"radio\" id=\"excludeTo\" name=\"excludeTo\" checked={this.state.excludeTo} />\n                                                            <span class=\"accnt \">Exclude</span>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                        <div>\n\n                                            {this.state.showMagicNumberTo === true ?\n                                                <div className=\"b-clr magicnumber\" style={{}}>\n                                                    <TagsInput\n                                                        onValidationReject={() => console.log('rejected')}\n                                                        validationRegex={/^[0-9]*$/}\n                                                        inputProps={{ placeholder: this.state.magicNumber.length > 0 ? \"\" : \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumberTo\n                                                        } onChange={this.handleChangeMagicNumberTo}></TagsInput>\n                                                </div> : null}\n                                        </div>\n                                    </div>\n                                </Col>\n                            </Row>\n                            <hr></hr>\n                            <div className=\"chceckbox\">\n\n                                <label class=\"checkbox-inline\"><input type=\"checkbox\" checked={this.state.showCommission} onChange={this.handeChangeShowCommission} /><b>Add Commission</b></label>\n                            </div>\n\n\n\n                            {this.state.showCommission &&\n                                <div className=\"center-com d-flex\">\n                                    <div className=\"com\">\n                                        <h3 style={{ fontWeight: 'bold' }}>Commission</h3>\n\n                                    </div>\n                                    <table className=\"table mt20\">\n\n                                        <tbody>\n                                            <tr>\n\n                                                <td className=\"b-clr \">\n                                                    <span className=\"accnt\"> Account :</span>\n                                                </td>\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {this.renderCommissionAccount()}\n                                                    {(this.state.error == 'selectedCommissionAccount') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account </p>}\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n\n                            }\n                            <div className=\"save_button_filter\">\n                                <Button className=\"btn-primary savebutton\" variant=\"primary\" size=\"lg\" block onClick={(e) => this.formDataSubmit(e)}>\n                                    <b>Update</b>\n                                </Button>\n                            </div>\n                        </form>\n                    </div>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default FilterEdite;\n","import React, { Component } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\nvar moment = require('moment');\n\nclass FilterDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            autoSyncClose: false,\n            exclude: false,\n            include: false,\n            excludeTo: false,\n            includeTo: false,\n            showMagicNumberFrom: false,\n            showMagicNumberTo: false,\n        };\n    }\n    crossClick(e) {\n        e.preventDefault();\n        this.props.onHide()\n    }\n\n    componentDidMount() {\n        let data = this.props.data;\n        this.setState({\n            autoSyncClose: data.auto_close == 1 ? true : false,\n            include: data.from_include_exclude_status == 1 ? true : false,\n            exclude: data.from_include_exclude_status == 2 ? true : false,\n            includeTo: data.to_include_exclude_status == 1 ? true : false,\n            excludeTo: data.to_include_exclude_status == 2 ? true : false,\n            showMagicNumberFrom: data.from_include_exclude_status !== 0 ? true : false,\n            showMagicNumberTo:data.to_include_exclude_status !== 0? true: false\n\n\n\n\n\n        })\n\n    }\n\n    // componentWillMount = () => {\n    //     console.log(this.props,'props..................');\n    // }\n\n    render() {\n        let data = this.props.data;\n\n        let from_symbol = JSON.parse(data.from_symbols);\n        let to_symbol = JSON.parse(data.to_symbols);\n        from_symbol = from_symbol.join(', ');\n        to_symbol = to_symbol.join(', ');\n        return (\n            <div className=\"content\">\n                <Grid fluid>\n                    <div className=\"symbol-box\">\n                        <div className=\"cross_div\"><a onClick={(e) => this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\n                        <div className=\"detail-text\"><h3> {data.profile_name} </h3></div>\n                        <div className=\"synclose\">\n                            <label class=\"checkbox-inline\"><input type=\"checkbox\" checked={this.state.autoSyncClose} name=\"changeAutoSync\" /><b>Auto Sync Close</b></label>\n                        </div>\n                        <Row>\n                            <Col md={6}>\n                                <div className=\"card\">\n                                    <div className=\"detail_account\" style={{ padding: '10px 20px 0px' }}>\n                                        <span style={{ fontWeight: 'bold' }}>Account A</span>\n                                    </div>\n                                    <table className=\"table mt20\">\n                                        <tbody>\n                                            <tr>\n                                                <td className=\"b-clr\">\n                                                    <span>Account :</span>\n                                                </td>\n\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {data.accountFromInfo[0].login}\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>From :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center datepicker_filter\">\n                                                    {moment(data.startdateFrom).format(\"DD/MM/YYYY\")}\n\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>To :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center datepicker_filter\">\n                                                    {data.enddateFrom !== null ? moment(data.enddateFrom).format(\"DD/MM/YYYY\") : \"-\"}\n\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>Symbol :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {from_symbol}\n                                                </td>\n                                            </tr>\n                                            {this.state.showMagicNumberFrom &&\n                                            <>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>Magic Number :  </span>\n                                                </td>\n\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {data.from_magic_number}\n                                                </td>\n\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr dataAdjust\">\n                                                    <div onClick={this.changeIncludeDefaultProperty}>\n                                                        <input\n                                                            type=\"radio\" id=\"include\" name=\"include\" checked={this.state.include} />\n                                                        <span class=\"accnt \">Include</span>\n\n                                                    </div>\n                                                </td>\n                                                <td className=\"b-clr \">\n                                                    <div onClick={this.changeExcludeDefaultProperty} >\n                                                        <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.exclude} />\n                                                        <span class=\"accnt \">Exclude</span>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                            </>}\n\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </Col>\n                            <Col md={6}>\n                                <div className=\"card\">\n                                    <div className=\"detail_account\" style={{ padding: '10px 20px 0px' }}>\n                                        <span style={{ fontWeight: 'bold' }}>Account B</span>\n                                    </div>\n\n                                    <table className=\"table mt20\">\n                                        <tbody>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>Account :</span>\n                                                </td>\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {data.accountToInfo[0].login}\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>From :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center datepicker_filter\">\n                                                    {moment(data.startdateTo).format(\"DD/MM/YYYY\")}\n\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>To :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center datepicker_filter\">\n                                                    {data.enddateTo != null ? (moment(data.enddateTo).format(\"DD/MM/YYYY\")) : '-'}\n\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr\">\n                                                    <span>Symbol :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {to_symbol}\n                                                </td>\n                                            </tr>\n                                            {this.state.showMagicNumberTo &&\n                                                <>\n\n                                                    <tr>\n                                                        <td className=\"b-clr\">\n                                                            <span>Magic Number :  </span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                            {data.to_magic_number}\n\n                                                        </td>\n                                                    </tr>\n\n\n                                                    <tr>\n                                                        <td className=\"b-clr checkboxAdjust\">\n                                                            <div onClick={this.changeIncludeDefaultPropertyTo} >\n                                                                <input\n                                                                    type=\"radio\" id=\"includeTo\" name=\"includeTO\" checked={this.state.includeTo} />\n                                                                <span class=\"accnt \">Include</span>\n\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"b-clr checkboxAdjust\">\n                                                            <div onClick={this.changeExcludeDefaultPropertyTo} >\n                                                                <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.excludeTo} />\n                                                                <span class=\"accnt \">Exclude</span>\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n                                                </>}\n\n\n                                        </tbody>\n                                    </table>\n                                </div>\n\n                            </Col>\n                            {data.commission_acount_id !== 0 && <Col md={12}>\n                                <div className=\"card bottom\">\n                                    <div className=\"detail_account\" style={{ padding: '10px 20px 0px' }}>\n                                        <h3 style={{ fontWeight: 'bold' }}>Commission</h3>\n                                    </div>\n                                    <table className=\"table mt20\">\n                                        <tbody>\n                                            <tr>\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    <span>Account :</span>\n                                                </td>\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {data.accountCommissionInfo[0].login}\n\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n\n                            </Col>}\n                        </Row>\n\n                    </div>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default FilterDetail;\n\n","import React, { Component } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\nimport Innerfilter from '../filter/innerfilter';\nimport FilterEdite from '../filter/filteredit';\nimport FilterDetail from '../filter/filterdetail';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport config from '../../constant/config.js';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\n\nconst axios = require('axios');\nvar moment = require('moment');\n\nclass Filterprofile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            Innerfilter: false,\n            filter: true,\n            filterData: [],\n            deleteData: [],\n            editeData: [],\n            showDelete: false,\n            showEdit: false,\n            detailForm: false,\n            detailData: [],\n        };\n\n        // this.handleDropdownChange = this.handleDropdownChange.bind(this);\n    }\n    fetchfilterdata() {\n        let self = this;\n        axios.get(config.baseurl + '/filter/fetchfilterdata')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ filterData: response.data.rows })\n                }\n            })\n    }\n    showInnerfilter = () => {\n        this.setState({ Innerfilter: true, filter: false })\n    }\n    componentDidMount() {\n        this.fetchfilterdata();\n        // let self = this;\n        // axios.get(config.baseurl + '/filter/fetchfilterdata')\n        //     .then(function (response) {\n        //         if (response.status == 200) {\n        //             self.setState({ filterData: response.data.rows })\n        //         }\n        //     }) adfasdfsd\n    }\n\n\n    createNotification = (profile_name, type) => {\n        NotificationManager.listNotify = [];\n        NotificationManager.info('Profile Is Activated !', profile_name);\n    }\n\n    createWariningNotification = (profile_name, type) => {\n        NotificationManager.listNotify = [];\n        NotificationManager.error('Profile Is Deactivated !', profile_name);\n    }\n\n    activateClick(e, data) {\n        e.preventDefault();\n        let Data = {\n            id: data.id,\n            status: 1\n        }\n        let self = this;\n        axios.post(config.baseurl + '/filter/updatefilterdata', Data)\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.fetchfilterdata();\n                    self.createNotification(data.profile_name, 'info');\n                    // self.setState({ filterData: response.data.rows })\n                }\n            })\n    }\n\n    //  App(){\n    //     const notify = () => toast(\"Wow so easy !\");\n\n    //     return (\n    //       <div>\n    //         <button onClick={notify}>Notify !</button>\n    //         <ToastContainer />\n    //       </div>\n    //     );\n    //   }\n\n    deactivateClick(e, data) {\n        e.preventDefault();\n        let Data = {\n            id: data.id,\n            status: 0\n        }\n        let self = this;\n        axios.post(config.baseurl + '/filter/updatefilterdata', Data)\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.fetchfilterdata();\n                    self.createWariningNotification(data.profile_name, 'error');\n                    // self.setState({ filterData: response.data.rows })\n                }\n            })\n    }\n    editFilter = (e, data) => {\n        // e.preventDefault();\n        if (this.state.endDate == null || this.state.endDate == '') {\n            let newDate = new Date();\n            this.setState({endDate: newDate })\n            return\n        }\n        this.setState({ showEdit: true, editeData: data })\n\n    }\n\n    deleteFilter(e, data) {\n        e.preventDefault();\n        this.setState({ deleteData: data, showDelete: true })\n\n    }\n    deletepopupClick(e) {\n        e.preventDefault();\n        let Data = {\n            id: this.state.deleteData.id\n        }\n        let self = this;\n        axios.post(config.baseurl + '/filter/deletefilter', Data)\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ showDelete: false })\n                    self.fetchfilterdata();\n                }\n            })\n    }\n    deletepopupclose(e) {\n        e.preventDefault();\n        this.setState({ showDelete: false })\n    }\n    viewFilter(e, data) {\n        e.preventDefault();\n\n        this.setState({ detailForm: true, detailData: data })\n    }\n\n    createTr = () => {\n        return this.state.filterData.length > 0 && this.state.filterData.map((item, index) => {\n            return (\n                <tr key={index}>\n                    <th scope=\"row\">{index + 1}</th>\n                    <td>{item.profile_name}</td>\n                    <td>{moment(item.createdAt).format(\"DD/MM/YYYY\")}</td>\n                    {/* <td>{item.status == 1 ? 'Activated' : 'Deactivated' }</td> */}\n                    <td>{item.status == 0 ?\n                        <div className=\"activate_button pointer\"><span className=\"button_interactivate btcolor\" onClick={(e) => this.activateClick(e, item)}> Activate </span> </div>\n                        :\n                        <div className=\"deactivate_button pointer\"><span className=\"button_deactivate pointer\" onClick={(e) => this.deactivateClick(e, item)}>Deactivate</span></div>}</td>\n                    <td>\n                        <span onClick={(e) => this.viewFilter(e, item)}><i className=\"pointer fa fa-eye facolor\" aria-hidden=\"true\"></i></span>\n                        <span onClick={(e) => this.editFilter(e, item)}><i className=\"pointer fa fa-pencil-square-o facolor\" aria-hidden=\"true\"></i></span>\n                        {item.status == 0 &&\n                            <span onClick={(e) => this.deleteFilter(e, item)}><i className=\"pointer fa fa-trash facolor\" aria-hidden=\"true\"></i></span>\n                        }\n                    </td>\n                    {/* <td>{item.accountToInfo[0].login}</td>\n                    <td>{moment(item.startdateFrom).format(\"DD/MM/YYYY\") + ' - ' + moment(item.enddateFrom).format(\"DD/MM/YYYY\")}</td>\n                    <td>{moment(item.startdateTo).format(\"DD/MM/YYYY\") + ' - ' + moment(item.enddateTo).format(\"DD/MM/YYYY\")}</td>\n                    <td>{item.from_symbols}</td>\n                    <td>{item.to_symbols}</td> */}\n                    {/* <td style={{fontWeight:600}}>{item.status == 1 && 'Connected'}</td> */}\n                </tr>\n            )\n        })\n    }\n\n    render() {\n\n        return (\n            <>\n                <NotificationContainer />\n                <div className=\"content\">\n                    {this.state.detailForm ?\n                        <FilterDetail\n                            data={this.state.detailData}\n                            show={this.state.detailForm}\n                            onHide={() => this.setState({ detailForm: false })}\n                        />\n                        :\n                        <>\n                            {this.state.showEdit ?\n                                <FilterEdite\n                                    data={this.state.editeData}\n                                    show={this.state.showEdit}\n                                    // onHide={() => this.setState({ showEdit: false })}\n                                    onHide={() => this.setState({ showEdit: false }, () => this.fetchfilterdata())}\n                                />\n                                :\n                                <>\n                                    {!this.state.Innerfilter &&\n                                        <Grid fluid>\n                                            <div className=\"selection-box\">\n                                                <span className=\"terminal-text\"> Profiles </span>\n\n                                                {/* <span className=\"icon-style\">\n                            <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\n                        </span> */}\n                                                {/* <Link to=\"/innerfilter\">\n                       <button className=\"pull-right\">Add New</button>\n                       </Link> */}\n\n                                                {/* <Link to=\"/admin/innerfilter\">\n                       <button className=\"pull-right\">abc</button>\n                       </Link> */}\n                                            </div>\n                                            <button className=\"pull-right filter-add-button\" onClick={this.showInnerfilter}>Add New</button>\n\n                                        </Grid>\n                                    }\n                                    {\n                                        this.state.Innerfilter ?\n                                            <Innerfilter\n                                                show={this.state.Innerfilter}\n                                                onHide={() => this.setState({ Innerfilter: false }, () => {\n                                                    this.fetchfilterdata();\n                                                })}\n                                            />\n                                            :\n                                            <div style={{ background: '#ffffff' }}>\n                                                <Row>\n                                                    <Col md={12}>\n                                                        <div style={{ padding: '10px' }}>\n                                                            <table className=\"table table-striped\">\n                                                                <thead>\n                                                                    <tr>\n                                                                        <th scope=\"col\">Sr.No.</th>\n                                                                        <th scope=\"col\">Profile Name</th>\n                                                                        <th scope=\"col\">Created At</th>\n                                                                        <th scope=\"col\">Status</th>\n                                                                        <th scope=\"col\">Action</th>\n                                                                    </tr>\n                                                                </thead>\n                                                                <tbody>\n                                                                    {/* {this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => { */}\n\n                                                                    {this.createTr()}\n                                                                    {/* })} */}\n                                                                    {/* <tr>\n                                                <th scope=\"row\">2</th>\n                                                <td>Jacob</td>\n                                                <td>Thornton</td>\n                                                <td>5.1.2.9</td>\n                                                <td>Connected</td>\n                                            </tr>\n                                            <tr>\n                                                <th scope=\"row\">3</th>\n                                                <td>Larry</td>\n                                                <td>the Bird</td>\n                                                <td>ab@123</td>\n                                                <td>Connected</td>\n                                            </tr> */}\n                                                                </tbody>\n                                                            </table>\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                        //     <div className=\"filter_page_table\">\n                                        //     <table className=\"table table-striped\">\n                                        //         <thead>\n                                        //             <tr>\n                                        //                 <th scope=\"col\">Sr.No.</th>\n                                        //                 <th scope=\"col\">Profile Name</th>\n                                        //                 <th scope=\"col\">Created At</th>\n                                        //                 <th scope=\"col\">Status</th>\n                                        //                 <th scope=\"col\">Action</th>\n                                        //             </tr>\n                                        //         </thead>\n                                        //         <tbody>\n                                        //             {this.createTr()}\n                                        //         </tbody>\n                                        //     </table>\n\n                                        // </div>\n\n                                    }\n\n                                    {this.state.showDelete &&\n                                        <div className=\"delete_popup\">\n                                            <h3>Are you sure ?</h3>\n                                            <span className=\"pointer dltbtn\" onClick={(e) => this.deletepopupClick(e)}>Delete</span>\n                                            <span className=\"pointer closebtn\" onClick={(e) => this.deletepopupclose(e)}>Close</span>\n                                        </div>\n                                    }\n                                </>\n                            }\n                        </>\n                    }\n\n\n\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Filterprofile;\n","import React, { Component } from 'react'\n\nexport default class Swap extends Component {\n    render() {\n        return (\n            <div className=\"text-center\" style={{height:'50%'}}>\n                Coming Soon...\n            </div>\n        )\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\nimport NumberFormat from 'react-number-format';\nimport { Collapse } from 'reactstrap';\n\nimport config from '../../constant/config.js';\nconst axios = require('axios');\nconst moment = require('moment');\n\n\n\nexport default function Calculating(props) {\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n    const [isOpen2, setIsOpen2] = useState(false);\n    // const [errormassage, setIErrormassage] = useState(false);\n    const toggle2 = () => setIsOpen2(!isOpen2);\n\n    const [fromAccountId, setFromAccountId] = useState(\"\");\n    const [toAccountId, setToAccountId] = useState(\"\");\n    const [fromOpenTrade, setFromOpenTrade] = useState([]);\n    const [toOpenTrade, setToOpenTrade] = useState([]);\n    const [fromHistoryTrade, setFromHistoryTrade] = useState([]);\n    const [toHistoryTrade, setToHistoryTrade] = useState([]);\n    const [commissionDetails, setCommissionDetails] = useState([]);\n    const [openTotal, setopenTotal] = useState();\n    const [historyTotal, sethistoryTotal] = useState();\n    const [totalOpenAndHistory, settotalOpenAndHistory] = useState();\n    const [commissionValue, setCommissionValue] = useState({});\n    // const [createTr, setcreateTr] = useState();\n\n\n    useEffect(() => {\n        let fromAccountId;\n        let toAccountId;\n        let fromOpenTrade;\n        let toOpenTrade;\n        let fromHistoryTrade;\n        let toHistoryTrade;\n        let openTotal;\n        let historyTotal;\n        let commissionDetails;\n        axios.get(config.baseurl + '/whatamcalculating/calculatingOpenTrade')\n            .then(function (response) {\n                if (response.status == 200) {\n                    fromAccountId = response.data.rows.accountFromInfo[0].login;\n                    toAccountId = response.data.rows.accountToInfo[0].login;\n                    fromOpenTrade = response.data.fromOpenOrderInfo;\n                    toOpenTrade = response.data.toOpenOrderInfo;\n                    openTotal = response.data.totalOfOpenOrder;\n                    axios.get(config.baseurl + '/whatamcalculating/calculatingHistoryTrade')\n                        .then(function (response) {\n                            if (response.status == 200) {\n                                fromHistoryTrade = response.data.fromHistoryOrderInfo;\n                                toHistoryTrade = response.data.toHistoryOrderInfo;\n                                historyTotal = response.data.totalOfHistoryOrder;\n                                commissionDetails = response.data.newCommissionRecord\n                                axios.get(config.baseurl + '/whatamcalculating/calculatingCommission')\n                                    .then(function (response) {\n                                        if (response.status == 200) {\n                                            console.log(fromAccountId,toAccountId,'show');\n                                            setFromAccountId(fromAccountId);\n                                            setToAccountId(toAccountId);\n                                            setFromOpenTrade(fromOpenTrade);\n                                            setToOpenTrade(toOpenTrade);\n                                            setFromHistoryTrade(fromHistoryTrade);\n                                            setToHistoryTrade(toHistoryTrade);\n                                            setCommissionDetails(commissionDetails);\n                                            setopenTotal(openTotal);\n                                            sethistoryTotal(historyTotal);\n                                            settotalOpenAndHistory(historyTotal + openTotal + response.data.commission);\n                                            setCommissionValue(response.data);\n\n                                        }\n                                        if(fromAccountId.length == 0 || toAccountId){\n\n                                        }\n                                    })\n                                    .catch(function (error) {\n                                    });\n                            }\n                        })\n                        .catch(function (error) {\n                        });\n                }\n            })\n            .catch(function (error) {\n            });\n    }, []);\n\n    let total = { openTotal } + { historyTotal }\n\n\n    let openFromOrderTotal= 0;\n    function fromOpenTradeTr() {\n        let lotsTotal = 0;\n        // let open_Total = 0;\n        let comissionTotal = 0;\n        let profitTotal = 0;\n        let swapTotal = 0;\n        return fromOpenTrade.length > 0 && fromOpenTrade.map((item, index) => {\n            lotsTotal += item.lots;\n            comissionTotal += item.commission;\n            profitTotal += item.profit;\n            swapTotal += item.swap;\n            openFromOrderTotal = comissionTotal + profitTotal + swapTotal\n// console.log(openOrderTotal,'openOrderTotal----------');\n            if (index == fromOpenTrade.length - 1) {\n                return (\n                    <><tr key={index}>\n                        <td>{item.lots}</td>\n                        <td>{item.commission}</td>\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\n                        <td>{item.magic_number}</td>\n                        <td>{item.profit}</td>\n                        <td>{item.swap}</td>\n                        <td>{item.symbol}</td>\n                    </tr>\n                        <tr className=\"text-center\" key={index + 1}>\n                            <td><b>{lotsTotal}</b></td>\n                            <td><b>{comissionTotal}</b></td>\n                            <td></td>\n                            <td></td>\n                            <td></td>\n                            <td><b>{profitTotal}</b></td>\n                            <td><b>{swapTotal}</b></td>\n                            <td></td>\n                        </tr>\n                    </>\n                )\n            } else {\n                return (\n                    <tr key={index}>\n                        <td>{item.lots}</td>\n                        <td>{item.commission}</td>\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\n                        <td>{item.magic_number}</td>\n                        <td>{item.profit}</td>\n                        <td>{item.swap}</td>\n                        <td>{item.symbol}</td>\n                    </tr>\n                )\n            }\n        })\n    }\nlet openFromHistoryTotal\n    function fromHistoryTradeTr() {\n        let lotsTotal = 0;\n        let comissionTotal = 0;\n        let profitTotal = 0;\n        let swapTotal = 0;\n        \n        return fromHistoryTrade.length > 0 && fromHistoryTrade.map((item, index) => {\n            lotsTotal += item.lots;\n            comissionTotal += item.commission;\n            profitTotal += item.profit;\n            swapTotal += item.swap;\n            openFromHistoryTotal = comissionTotal + profitTotal + swapTotal\n            if (index == fromHistoryTrade.length - 1) {\n                return (\n                    <><tr key={index}>\n                        <td>{item.lots}</td>\n                        <td>{item.commission}</td>\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\n                        <td>{item.magic_number}</td>\n                        <td>{item.profit}</td>\n                        <td>{item.swap}</td>\n                        <td>{item.symbol}</td>\n                    </tr>\n                        <tr className=\"text-center\" key={index + 1}>\n                            <td ><b>{lotsTotal}</b></td>\n                            <td><b>{comissionTotal}</b></td>\n                            <td></td>\n                            <td></td>\n                            <td></td>\n                            <td><b>{profitTotal}</b></td>\n                            <td><b>{swapTotal}</b></td>\n                            <td></td>\n                        </tr>\n                    </>\n                )\n            } else {\n                return (\n                    <tr key={index}>\n                        <td>{item.lots}</td>\n                        <td>{item.commission}</td>\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\n                        <td>{item.magic_number}</td>\n                        <td>{item.profit}</td>\n                        <td>{item.swap}</td>\n                        <td>{item.symbol}</td>\n                    </tr>\n                )\n            }\n        })\n    }\n\n    let openToOrderTotal\n    function toOpenTradeTr() {\n        let lotsTotal = 0;\n        let comissionTotal = 0;\n        let profitTotal = 0;\n        let swapTotal = 0;\n        \n        return toOpenTrade.length > 0 && toOpenTrade.map((item, index) => {\n            lotsTotal += item.lots;\n            comissionTotal += item.commission;\n            profitTotal += item.profit;\n            swapTotal += item.swap;\n            openToOrderTotal = comissionTotal + profitTotal + swapTotal\n            if (index == toOpenTrade.length - 1) {\n                return (\n                    <><tr key={index}>\n                        <td>{item.lots}</td>\n                        <td>{item.commission}</td>\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\n                        <td>{item.magic_number}</td>\n                        <td>{item.profit}</td>\n                        <td>{item.swap}</td>\n                        <td>{item.symbol}</td>\n                    </tr>\n                        <tr className=\"text-center\" key={index + 1}>\n                            <td><b>{lotsTotal}</b></td>\n                            <td><b>{comissionTotal}</b></td>\n                            <td></td>\n                            <td></td>\n                            <td></td>\n                            <td><b>{profitTotal}</b></td>\n                            <td><b>{swapTotal}</b></td>\n                            <td></td>\n                        </tr>\n                    </>\n                )\n            } else {\n                return (\n                    <tr key={index}>\n                        <td>{item.lots}</td>\n                        <td>{item.commission}</td>\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\n                        <td>{item.magic_number}</td>\n                        <td>{item.profit}</td>\n                        <td>{item.swap}</td>\n                        <td>{item.symbol}</td>\n                    </tr>\n                )\n            }\n        })\n    }\n    let openToHistoryTotal\n    function toHistoryTradeTr() {\n        let lotsTotal = 0;\n        let comissionTotal = 0;\n        let profitTotal = 0;\n        let swapTotal = 0;\n        \n        return toHistoryTrade.length > 0 && toHistoryTrade.map((item, index) => {\n            lotsTotal += item.lots;\n            comissionTotal += item.commission;\n            profitTotal += item.profit;\n            swapTotal += item.swap;\n            openToHistoryTotal = comissionTotal + profitTotal + swapTotal\n            if (index == toHistoryTrade.length - 1) {\n                return (\n                    <><tr key={index}>\n                        <td>{item.lots}</td>\n                        <td>{item.commission}</td>\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\n                        <td>{item.magic_number}</td>\n                        <td>{item.profit}</td>\n                        <td>{item.swap}</td>\n                        <td>{item.symbol}</td>\n                    </tr>\n                        <tr className=\"text-center\" key={index + 1}>\n                            <td><b>{lotsTotal}</b></td>\n                            <td><b>{comissionTotal}</b></td>\n                            <td></td>\n                            <td></td>\n                            <td></td>\n                            <td><b>{profitTotal}</b></td>\n                            <td><b>{swapTotal}</b></td>\n                            <td></td>\n                        </tr>\n                    </>\n                )\n            } else {\n                return (\n                    <tr key={index}>\n                        <td>{item.lots}</td>\n                        <td>{item.commission}</td>\n                        <td>{item.order_type == 0 ? \"BUY\" : item.order_type == 1 ? \"SELL\" : \"\"}</td>\n                        <td>{moment(item.open_time).utc().format('DD-MM-YYYY  HH:mm:ss')}</td>\n                        <td>{item.magic_number}</td>\n                        <td>{item.profit}</td>\n                        <td>{item.swap}</td>\n                        <td>{item.symbol}</td>\n                    </tr>\n                )\n            }\n        })\n    }\n\n\n    // console.log(fromAccountId, toAccountId, fromOpenTrade, toOpenTrade, fromHistoryTrade, toHistoryTrade, commissionValue, 'commissionValue');\n    return (\n        <>\n            <div className=\"symbol-box shadoremove\">\n                <div>\n                    <div className=\"symbol-box\">\n                        <div className=\"openpositions\" >\n                            <span className=\"p-text\">Open Position</span>\n                            <span className=\"icon-style\" onClick={toggle} >\n                                {isOpen ?\n                                    <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\n                                    :\n                                    <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n                                }\n                            </span>\n                        </div>\n                    </div>\n\n                    <Collapse isOpen={isOpen}>\n                        <div className=\"openOrder\">\n\n                            <Row>\n                                {fromOpenTrade && fromOpenTrade.length > 0 ? (\n                                    <Col md={12}>\n\n                                        <h4 className=\"text-center\"> {fromAccountId}</h4>\n                                        <table class=\"table table-responsive table-bordered\">\n                                            <thead>\n                                                <tr>\n                                                    <th scope=\"col\">lots</th>\n                                                    <th scope=\"col\">commission</th>\n                                                    <th scope=\"col\">order type</th>\n                                                    <th scope=\"col\">open_time</th>\n                                                    <th scope=\"col\">magic_number</th>\n                                                    <th scope=\"col\">profit</th>\n                                                    <th scope=\"col\">swap</th>\n                                                    <th scope=\"col\">symbol</th>\n\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {fromOpenTradeTr()}\n                                            </tbody>\n                                        </table>\n                                <div className=\"text-center\"><b>Total {openFromOrderTotal}</b></div>\n                                    </Col>\n\n\n                                ) : (\n                                        <Col md={12}>\n                                            <div className=\"card change noRecordCol\"> No Record Found</div>\n                                        </Col>\n                                    )}\n\n\n\n                            </Row>\n                            <Row>\n                                {toOpenTrade && toOpenTrade.length > 0 ? (\n\n                                    <Col md={12}>\n                                        <h4 className=\"text-center\">{toAccountId}</h4>\n\n                                        <table class=\"table table-responsive table-bordered\">\n                                            <thead>\n                                                <tr>\n                                                    <th scope=\"col\">lots</th>\n                                                    <th scope=\"col\">commission</th>\n                                                    <th scope=\"col\">order type</th>\n                                                    <th scope=\"col\">open_time</th>\n                                                    <th scope=\"col\">magic_number</th>\n                                                    <th scope=\"col\">profit</th>\n                                                    <th scope=\"col\">swap</th>\n                                                    <th scope=\"col\">symbol</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {toOpenTradeTr()}\n                                            </tbody>\n                                        </table>\n                                <div className=\"text-center\"><b>Total {openToOrderTotal}</b></div>\n\n                                        \n                                    </Col>\n\n\n                                ) : (\n                                        <Col md={12}>\n                                            <div className=\"card change noRecordCol\"> No Record Found</div>\n                                        </Col>\n                                    )}\n\n\n\n                            </Row>\n                        </div>\n                    </Collapse>\n                </div>\n\n                <div className=\"symbol-box topSet\" >\n                    <div className=\"openpositions\" >\n                        <span className=\"p-text\">Close Postion</span>\n                        <span className=\"icon-style\" onClick={toggle2} >\n                            {isOpen2 ?\n                                <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\n                                :\n                                <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n                            }\n                        </span>\n                    </div>\n                </div>\n                <div>\n                    <Collapse isOpen={isOpen2}>\n\n                        <div className=\"openOrder\">\n                            <Row>\n                                {fromHistoryTrade && fromHistoryTrade.length > 0 ? (\n                                    <Col md={12}>\n\n                                        <h4 className=\"text-center\">{fromAccountId}</h4>\n                                        <table class=\"table table-responsive table-bordered\">\n                                            <thead>\n                                                <tr>\n                                                    <th scope=\"col\">lots</th>\n                                                    <th scope=\"col\">commission</th>\n                                                    <th scope=\"col\">order type</th>\n                                                    <th scope=\"col\">open_time</th>\n                                                    <th scope=\"col\">magic_number</th>\n                                                    <th scope=\"col\">profit</th>\n                                                    <th scope=\"col\">swap</th>\n                                                    <th scope=\"col\">symbol</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {fromHistoryTradeTr()}\n\n                                            </tbody>\n                                        </table>\n                                        <div className=\"text-center\"><b>Total {openFromHistoryTotal}</b></div>\n\n                                    </Col>\n\n\n                                ) : (\n                                        <Col md={12}>\n                                            <div className=\"card change noRecordCol\"> No Record Found</div>\n                                        </Col>\n                                    )}\n\n                            </Row>\n\n                            <Row>\n                                {toHistoryTrade && toHistoryTrade.commission_acount_id > 0 ? (\n                                    <Col md={12}>\n                                        <h4 className=\"text-center\">{toAccountId}</h4>\n\n                                        <table class=\"table table-responsive table-bordered\">\n                                            <thead>\n                                                <tr>\n                                                    <th scope=\"col\">lots</th>\n                                                    <th scope=\"col\">commission</th>\n                                                    <th scope=\"col\">order type</th>\n                                                    <th scope=\"col\">open_time</th>\n                                                    <th scope=\"col\">magic_number</th>\n                                                    <th scope=\"col\">profit</th>\n                                                    <th scope=\"col\">swap</th>\n                                                    <th scope=\"col\">symbol</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {toHistoryTradeTr()}\n\n                                            </tbody>\n                                        </table>\n                                <div className=\"text-center\"><b>Total {openToHistoryTotal}</b></div>\n\n                                    </Col>\n\n                                ) : (\n                                        <Col md={12}>\n                                            <div className=\"card change noRecordCol\"> No Record Found</div>\n                                        </Col>\n                                    )}\n                                {commissionValue && commissionValue.commission_acount_id > 0 && (\n                                    <div className=\"card \">\n                                        <div className=\"header ptheader\">\n                                            <h4 className=\"text-center\"><b>Commission</b></h4>\n                                        {/* <h4 className=\"text-center\">{commissionDetails[0].login}</h4> */}\n\n                                            <div className=\"row\">\n                                                <div className=\"col-md-4 text-center\">\n                                                    <h4 className=\"\"> Balance {' '}</h4>\n                                                    <NumberFormat value={commissionValue.totalProfit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                                </div>\n                                                <div className=\"col-md-4 text-center\">\n                                                    <h4> Equity  </h4><NumberFormat displayType={'text'} thousandSeparator={true} decimalScale={2} /><span>{commissionValue.equity}</span>\n\n                                                </div>\n                                                <div className=\"col-md-4 text-center\">\n                                                    <h4> Order Type  </h4>\n                                                    <span>6</span>\n\n                                                </div>\n\n                                                <div className=\"col-md-12 text-center\">\n                                                    <h4><b>Total</b>  </h4><NumberFormat value={commissionValue.commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )}\n\n                            </Row>\n                        </div>\n                    </Collapse>\n\n                </div>\n\n                <div className=\"symbol-box  topSet \" >\n                    <div className=\"text-center\" >\n                        <span className=\"  summrayAdjust \">Summary</span>\n                        <h5> Open Positions + Close Positions {commissionValue.commission_acount_id > 0 && (<span> + Commission</span>)}</h5>\n                        <h5> \n                        <NumberFormat value={totalOpenAndHistory} displayType={'text'} thousandSeparator={true} decimalScale={2} ></NumberFormat></h5>\n                    </div>\n\n                </div>\n            </div>\n        </>\n\n    )\n\n}\n\n","import React, { Component } from 'react'\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\n\nexport default class Exploser extends Component {\n    render() {\n        return (\n            <div className=\"boxFix\">\n                <Row>\n                    <Col md={6}>\n                        <div className=\"card \">\n\n                            <div className=\"header\">\n\n                                <h6  className={'colorDarkBlue , loginCenter'}>Account - A</h6>\n                            </div>\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                <table className=\"table\">\n                                    <tbody>\n\n                                        <tr><td>Symbol </td>\n                                            <td className=\"td-actions text-right\">Symbol\n\n                                            </td>\n                                        </tr>\n                                        <tr><td>Lots </td>\n                                            <td className=\"td-actions text-right\">Lots\n                                            </td>\n                                        </tr>\n                                        <tr><td>BUY/SELL </td>\n                                            <td className=\"td-actions text-right\">Buy/Sell\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>Contract Size </td>\n                                            <td className=\"td-actions text-right\">Size\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>Exploser </td>\n                                            <td className=\"td-actions text-right\">Exploser Total\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                            </div>\n                        </div>\n                    </Col>\n\n\n                    <Col md={6}>\n                        <div className=\"card \">\n\n                            <div className=\"header\">\n\n                                <h6 className={'colorDarkBlue , loginCenter'}>Account - B</h6>\n                            </div>\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                <table className=\"table\">\n                                    <tbody>\n\n                                        <tr><td>Symbol </td>\n                                            <td className=\"td-actions text-right\">Symbol\n\n                                            </td>\n                                        </tr>\n                                        <tr><td>Lots </td>\n                                            <td className=\"td-actions text-right\">Lots\n                                            </td>\n                                        </tr>\n                                        <tr><td>BUY/SELL </td>\n                                            <td className=\"td-actions text-right\">Sell\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>Contract Size </td>\n                                            <td className=\"td-actions text-right\">Size\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>Exploser </td>\n                                            <td className=\"td-actions text-right\">Total\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                            </div>\n                        </div>\n                    </Col>\n\n\n                </Row>\n            </div>\n\n        )\n    }\n}\n","import Dashboard from \"views/Dashboard.jsx\";\n// import UserProfile from \"views/UserProfile.jsx\";\n// import TableList from \"views/TableList.jsx\";\n// import Typography from \"views/Typography.jsx\";\n// import Icons from \"views/Icons.jsx\";\n// import Maps from \"views/Maps.jsx\";\n// import Notifications from \"views/Notifications.jsx\";\n// import Upgrade from \"views/Upgrade.jsx\";\n// import Filter from '../src/views/Filter';\nimport Innerlogin from 'views/Innerlogin';\nimport Filterprofile from './views/filter/Filterprofile';\nimport Swap from '../src/views/swap';\nimport calculating from '../src/views/calculating';\nimport Exploser from '../src/views/exploser';\nconst dashboardRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"pe-7s-graph\",\n    component: Dashboard,\n    layout: \"/admin\",\n  },\n  // {\n  //   path: \"/filter\",\n  //   name: \"Filter\",\n  //   icon: \"pe-7s-filter\",\n  //   component: Filter,\n  //   layout: \"/admin\",\n  // },\n\n\n  {\n    path: \"/innerlogin\",\n    name: \"Login/Accounts\",\n    icon: \"pe-7s-note2\",\n    component: Innerlogin,\n    layout: \"/admin\"\n  },\n\n\n  {\n    path: \"/filterpage\",\n    name: \"Filter\",\n    icon: \"pe-7s-filter\",\n    component: Filterprofile,\n    layout: \"/admin\"\n  },  \n  \n  \n  {\n    path: \"/swap\",\n    name: \"Swap\",\n    icon: \"pe-7s-graph\",\n    component: Swap,\n    layout: \"/admin\",\n  },\n  \n  {\n    path: \"/calculating\",\n    name: \" Profile Positions\",\n    icon: \"pe-7s-calculator\",\n    component: calculating ,\n    layout: \"/admin\",\n  },\n\n\n  // {\n  //   path: \"/exploser\",\n  //   name: \"Exploser\",\n  //   icon: \"pe-7s-search\",\n  //   component: Exploser,\n  //   layout: \"/admin\"\n  // },\n\n\n  // {\n  //   path: \"/table\",\n  //   name: \"Table\",\n  //   icon: \"pe-7s-note2\",\n  //   component: TableList,\n  //   layout: \"/admin\",\n    // for sub menu listing\n    // resources: [\n    //   {\n       \n    //     name: \"Table abc\",\n        \n    //   },\n    //   {\n       \n    //     name: 'React AHA Moments',\n       \n    //   }\n    // ]\n  // },\n  \n  // {\n  //   path: \"/typography\",\n  //   name: \"Typography\",\n  //   icon: \"pe-7s-news-paper\",\n  //   component: Typography,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/icons\",\n  //   name: \"Icons\",\n  //   icon: \"pe-7s-science\",\n  //   component: Icons,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/maps\",\n  //   name: \"Maps\",\n  //   icon: \"pe-7s-map-marker\",\n  //   component: Maps,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/notifications\",\n  //   name: \"Notifications\",\n  //   icon: \"pe-7s-bell\",\n  //   component: Notifications,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   upgrade: true,\n  //   path: \"/upgrade\",\n  //   name: \"Upgrade to PRO\",\n  //   icon: \"pe-7s-rocket\",\n  //   component: Upgrade,\n  //   layout: \"/admin\"\n  // }\n];\n\nexport default dashboardRoutes;\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport NotificationSystem from \"react-notification-system\";\n\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\n// import Footer from \"components/Footer/Footer\";\nimport Sidebar from \"components/Sidebar/Sidebar\";\n// import FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\n\nimport { style } from \"variables/Variables.jsx\";\n\nimport routes from \"routes.js\";\n\nimport image from \"assets/img/sidebar-3.jpg\";\n\nclass Admin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      _notificationSystem: null,\n      image: image,\n      color: \"black\",\n      hasImage: true,\n      fixedClasses: \"dropdown show-dropdown open\"\n    };\n  }\n  // handleNotificationClick = position => {\n  //   var color = Math.floor(Math.random() * 4 + 1);\n  //   var level;\n  //   switch (color) {\n  //     case 1:\n  //       level = \"success\";\n  //       break;\n  //     case 2:\n  //       level = \"warning\";\n  //       break;\n  //     case 3:\n  //       level = \"error\";\n  //       break;\n  //     case 4:\n  //       level = \"info\";\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  //   this.state._notificationSystem.addNotification({\n  //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n  //     message: (\n  //       <div>\n  //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n  //         every web developer.\n  //       </div>\n  //     ),\n  //     level: level,\n  //     position: position,\n  //     autoDismiss: 15\n  //   });\n  // };\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            render={props => (\n              <prop.component\n                {...props}\n                handleClick={this.handleNotificationClick}\n              />\n            )}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    // return \"Brand\";\n  };\n  handleImageClick = image => {\n    this.setState({ image: image });\n  };\n  handleColorClick = color => {\n    this.setState({ color: color });\n  };\n  handleHasImage = hasImage => {\n    this.setState({ hasImage: hasImage });\n  };\n  handleFixedClick = () => {\n    if (this.state.fixedClasses === \"dropdown\") {\n      this.setState({ fixedClasses: \"dropdown show-dropdown open\" });\n    } else {\n      this.setState({ fixedClasses: \"dropdown\" });\n    }\n  };\n  componentDidMount() {\n    let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    if(currentUser===null){\n        this.props.history.push('/login')\n        return;\n    }\n  //   this.setState({ _notificationSystem: this.refs.notificationSystem });\n  //   var _notificationSystem = this.refs.notificationSystem;\n  //   var color = Math.floor(Math.random() * 4 + 1);\n  //   var level;\n  //   switch (color) {\n  //     case 1:\n  //       level = \"success\";\n  //       break;\n  //     case 2:\n  //       level = \"warning\";\n  //       break;\n  //     case 3:\n  //       level = \"error\";\n  //       break;\n  //     case 4:\n  //       level = \"info\";\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  //   _notificationSystem.addNotification({\n  //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n  //     message: (\n  //       <div>\n  //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n  //         every web developer.\n  //       </div>\n  //     ),\n  //     level: level,\n  //     position: \"tr\",\n  //     autoDismiss: 15\n  //   });\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n    }\n    if (e.history.action === \"PUSH\") {\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <NotificationSystem ref=\"notificationSystem\" style={style} />\n        <Sidebar {...this.props} routes={routes} image={this.state.image}\n        color={this.state.color}\n        hasImage={this.state.hasImage}/>\n        <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getBrandText(this.props.location.pathname)}\n          />\n          <Switch>{this.getRoutes(routes)}</Switch>\n          {/* <Footer /> */}\n          {/* <FixedPlugin\n            handleImageClick={this.handleImageClick}\n            handleColorClick={this.handleColorClick}\n            handleHasImage={this.handleHasImage}\n            bgColor={this.state[\"color\"]}\n            bgImage={this.state[\"image\"]}\n            mini={this.state[\"mini\"]}\n            handleFixedClick={this.handleFixedClick}\n            fixedClasses={this.state.fixedClasses}\n          /> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Admin;\n","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/css/animate.min.css\";\nimport \"./assets/sass/light-bootstrap-dashboard-react.scss?v=1.3.0\";\nimport \"./assets/css/demo.css\";\nimport \"./assets/css/pe-icon-7-stroke.css\";\nimport \"./assets/css/dashboard.css\";\nimport innerfilter from \"./views/filter/innerfilter\";\nimport Login from \"./views/login\";\n\n\nimport AdminLayout from \"./layouts/Admin.jsx\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\n\n      <Route exact path=\"/admin/innerfilter\" component={innerfilter} />\n      <Route exact from=\"/login\" component={Login} />\n      {/* <Redirect from=\"/\" to=\"/admin/dashboard\" /> */}\n      {/* <Redirect from=\"/\" component={Login} /> */}\n      <Redirect from=\"/\" to=\"/login\"/>\n      {/* <Route exact path=\"/innerfilter\" component={innerfilter} /> */}\n\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}