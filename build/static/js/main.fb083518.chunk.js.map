{"version":3,"sources":["variables/Variables.jsx","assets/img/sidebar-3.jpg","../node_modules/typescript/lib sync","constant/config.js","views/filter/innerfilter.js","views/login/index.js","components/Navbars/AdminNavbarLinks.jsx","components/Navbars/AdminNavbar.jsx","components/Sidebar/Sidebar.jsx","views/Closeposition.js","views/Data.js","views/Openposition.js","views/TableList.jsx","views/Innerlogin.js","views/Dashboard.jsx","views/filter/filteredit.js","views/filter/filterdetail.js","views/filter/Filterprofile.js","views/swap/index.js","views/calculating/index.js","routes.js","layouts/Admin.jsx","index.js"],"names":["defaultWidth","window","screen","width","style","Wrapper","Containers","DefaultStyle","position","padding","zIndex","WebkitBoxSizing","MozBoxSizing","boxSizing","height","display","border","fontSize","WebkitFontSmoothing","fontFamily","fontWeight","color","tl","top","bottom","left","right","tr","tc","margin","marginLeft","bl","br","bc","NotificationItem","cursor","borderRadius","opacity","transition","WebkitTransform","transform","willChange","isHidden","isVisible","success","borderTop","backgroundColor","WebkitBoxShadow","MozBoxShadow","boxShadow","error","warning","info","Title","marginTop","MessageWrapper","marginRight","maxWidthwidth","Dismiss","float","lineHeight","outline","textAlign","Action","background","ActionWrapper","module","exports","thArray","tdArray","iconsArray","dataPie","labels","series","legendPie","names","types","dataSales","optionsSales","low","high","showArea","axisX","showGrid","lineSmooth","showLine","showPoint","fullWidth","chartPadding","responsiveSales","labelInterpolationFnc","value","legendSales","dataBar","optionsBar","seriesBarDistance","responsiveBar","legendBar","__webpack_require__","p","webpackEmptyContext","req","e","Error","code","keys","resolve","id","config","baseurl","axios","require","Innerfilter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDropdownChange","setState","selectValue","target","handleChangeDate","date","startDate","handleEndDate","state","endDate","handleChangeDateTo","startDateTo","handleEndDateTo","endDateTo","handleChange","event","Array","from","selectedOptions","item","renderAccountSelect","_this$state","selectedAccountOption","allAccounts","Data","account","post","then","response","status","onHide","catch","options","map","data","label","login","react_default","a","createElement","react_select_browser_esm","placeholder","onChange","handleChangeAccount","handeChangeShowCommission","showCommission","showAddCommission","handleChangeAccountTo","selectedAccountOptionTo","renderAccountSelectTo","_this$state2","handleChangeCommissionAccount","selectedCommissionAccount","renderCommissionAccount","_this$state3","handleChangeMagicNumber","magicNumber","handleChangeMagicNumberTo","magicNumberTo","handleChangeSymbol","selectedSymbolOption","renderSymbolSelect","_this$state4","allSymbols","name","isMulti","handleChangeSymbolTo","selectedSymbolOptionTo","renderSymbolSelectTo","_this$state5","changeIncludeDefaultProperty","include","exclude","showMagicNumber","changeExcludeDefaultProperty","changeIncludeDefaultPropertyTo","includeTo","excludeTo","showMagicNumberTo","changeExcludeDefaultPropertyTo","profileName","showCommisoin","autoSyncClose","profileValues","nameError","tags","include_exclude_status","fetchfilterdata","self","get","rows","_this2","filter","profile_name","charAt","toUpperCase","slice","NotificationManager","listNotify","preventDefault","from_status","to_status","symbolFrom","symbolto","from_account_id","to_account_id","commission_acount_id","startdateFrom","enddateFrom","startdateTo","enddateTo","from_symbols","JSON","stringify","to_symbols","auto_close","from_magic_number","length","to_magic_number","from_include_exclude_status","to_include_exclude_status","createdAt","Date","updatedAt","_this3","Fragment","lib","className","Grid","fluid","onClick","crossClick","aria-hidden","type","handleprofileName","defaultChecked","handleChangeAutoSync","Row","Col","md","react_datepicker_min_default","selected","isClearable","placeholderText","dateFormat","strictParsing","autoOk","checked","class","react_tagsinput_default","onValidationReject","console","log","validationRegex","inputProps","Button","variant","size","block","formDataSubmit","Component","Login","toogle","loginForm","handleClose","handleShow","setShow","createNotification","show","username","password","alert","persons","shwPwd","shwMsg","invalidUsername","invalidPassword","accountlist","bind","assertThisInitialized","onSubmit","defineProperty","trim","userdetail","localStorage","setItem","history","push","message","err","parse","getItem","sm","Modal","disabled","AdminNavbarLinks","logout","clear","notification","Nav","NavItem","eventKey","href","NavDropdown","title","noCaret","MenuItem","pullRight","Header","mobileSidebarToggle","sidebarExists","document","documentElement","classList","toggle","node","onclick","parentElement","removeChild","body","appendChild","Navbar","Brand","brandText","Toggle","Collapse","Navbars_AdminNavbarLinks","Sidebar","menu","innerWidth","routeName","location","pathname","indexOf","updateDimensions","addEventListener","image","data-color","data-image","hasImage","routes","prop","key","redirect","upgrade","activeRoute","layout","path","react_router_dom","to","activeClassName","icon","undefined","resources","sub","index","Closeposition","allHistoryRecord","fromHistoryOrderInfo","toHistoryOrderInfo","commissionHistoryOrderInfo","_useState","useState","_useState2","slicedToArray","isOpen2","setIsOpen2","fromSymbols","toSymbols","entries","join","fromsum","tosum","commission","swap","profit","sumOfTotal","noRecord","total","isOpen","react","accountFromInfo","alias","react_number_format_es","displayType","thousandSeparator","decimalScale","accountToInfo","marginBottom","accountCommissionInfo","history_info","tablePage","items","lot","closed","price","textA","dashBoardPage","textB","Openposition","setIsOpen","allOpenRecord","fromOpenOrderInfo","toOpenOrderInfo","swapFrominfo","order_type","lots","open_value","swapToinfo","intervalSet","timerWaitInterval","TableList","fetchDataAccordingSymbols","symbol","_this$state$filterlis","filterlist","selectedOption","renderSymbols","uniqueSymbols","concat","i","ar","sumOfHistoryTotal","openfromsum","opentosum","sumOfOpenTotal","views_Closeposition","Dashboard","getAllAccounts","fetchActivefilterData","errorMassege","fetchAllOpenTrade","dateTime","filteredInfoTime","showData","accountDetailValue","accounts_details","currency","tableHeader","details","formData","json","legend","role","views_TableList","timerWait","Innerlogin","checkUserConnected","broker","connected","currentAddLogin","currentAddBroker","currentAddAlias","clearInterval","timerShow","fectheAllAccount","setIntervalCustom","content","innerHTML","setInterval","closebtn","swal","timer","button","handleCloseEdit","editForm","handleCloseDetail","detailForm","createTr","scope","launched","viewFilter","editFilter","onUpdate","test","text","user","edituser","editserver","editalias","editData","editstatus","Body","closeButton","editAlias","FilterEdite","l","rules","required","abc","from_symbol","to_symbol","all_from_symbols","all_to_symbols","fromSymbol","toSymbol","c","moment","FilterDetail","showMagicNumberFrom","format","Filterprofile","showInnerfilter","createWariningNotification","showEdit","editeData","newDate","filterData","activateClick","deactivateClick","deleteFilter","deleteData","showDelete","detailData","filterdetail","filteredit","innerfilter","deletepopupClick","deletepopupclose","Swap","dashboardRoutes","component","Admin","getRoutes","react_router","render","assign","handleClick","handleNotificationClick","getBrandText","handleImageClick","handleColorClick","handleHasImage","handleFixedClick","fixedClasses","_notificationSystem","action","scrollTop","scrollingElement","refs","mainPanel","NotificationSystem_default","ref","components_Sidebar_Sidebar","AdminNavbar","ReactDOM","layouts_Admin","exact","getElementById"],"mappings":"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kBACA,aACA,mBACA,aACA,cACA,eACA,qBACA,iBACA,cACA,cACA,eACA,kBACA,eACA,iBACA,eACA,cACA,YACA,eACA,aACA,qBACA,aACA,cACA,kBACA,uBACA,YACA,qBACA,WACA,iBACA,mBACA,wBACA,cACA,oBACA,eACA,2BACA,cACA,mBACA,oBACA,0BACA,iBACA,mBACA,eACA,0BACA,iBACA,eACA,aACA,gBACA,gBACA,kBACA,cACA,aACA,eACA,eACA,iBACA,cACA,cACA,cACA,eACA,eACA,YACA,cACA,kBACA,aACA,gBACA,eACA,gBACA,gBACA,cACA,eACA,eACA,aACA,gBACA,aACA,eACA,eACA,gBACA,iBACA,sBACA,kBACA,cACA,cACA,cACA,gBACA,aACA,aACA,cACA,cACA,kBACA,cACA,aACA,mBACA,aACA,YACA,cACA,YACA,sBACA,YACA,cACA,aACA,YACA,oBACA,oBACA,oBACA,cACA,qBACA,iBACA,aACA,aACA,mBACA,kBACA,cACA,cACA,aACA,aACA,gBACA,cACA,aACA,YACA,mBACA,aACA,kBACA,uBACA,eACA,aACA,aACA,aACA,gBACA,aACA,aACA,cACA,aACA,eACA,aACA,aACA,aACA,cACA,cACA,eACA,eACA,eACA,cACA,eACA,cACA,gBACA,aACA,eACA,aACA,eACA,aACA,gBACA,gBACA,aACA,aACA,eACA,iBACA,iBACA,iBACA,iBACA,aACA,YACA,gBACA,aACA,eACA,kBACA,eACA,gBACA,gBACA,eACA,cACA,cACA,cACA,aACA,aACA,eACA,aACA,mBACA,gBACA,aACA,aACA,kBACA,gBACA,aACA,gBACA,aACA,aACA,kBACA,eACA,eACA,cACA,iBAwHAC,QA/GY,CACZC,OAAQ,CAAC,MAAO,MAAO,OACvBC,OAAQ,CAAC,GAAI,GAAI,KA8GjBC,UA5Gc,CACdC,MAAO,CAAC,OAAQ,SAAU,eAC1BC,MAAO,CAAC,OAAQ,SAAU,YA2G1BC,UAvGc,CACdL,OAAQ,CACN,SACA,UACA,SACA,SACA,SACA,UAC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","file":"static/js/main.fb083518.chunk.js","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n//\n// //\n// // // For notifications\n// //\n//\nvar defaultWidth =\n  window.screen.width > 768\n    ? (window.screen.width * 1) / 3\n    : window.screen.width;\n\nvar style = {\n  Wrapper: {},\n  Containers: {\n    DefaultStyle: {\n      position: \"fixed\",\n      width: defaultWidth,\n      padding: \"10px 10px 10px 20px\",\n      zIndex: 9998,\n      WebkitBoxSizing: \"\",\n      MozBoxSizing: \"\",\n      boxSizing: \"\",\n      height: \"auto\",\n      display: \"inline-block\",\n      border: \"0\",\n      fontSize: \"14px\",\n      WebkitFontSmoothing: \"antialiased\",\n      fontFamily: '\"Roboto\",\"Helvetica Neue\",Arial,sans-serif',\n      fontWeight: \"400\",\n      color: \"#FFFFFF\"\n    },\n\n    tl: {\n      top: \"0px\",\n      bottom: \"auto\",\n      left: \"0px\",\n      right: \"auto\"\n    },\n\n    tr: {\n      top: \"0px\",\n      bottom: \"auto\",\n      left: \"auto\",\n      right: \"0px\"\n    },\n\n    tc: {\n      top: \"0px\",\n      bottom: \"auto\",\n      margin: \"0 auto\",\n      left: \"50%\",\n      marginLeft: -(defaultWidth / 2)\n    },\n\n    bl: {\n      top: \"auto\",\n      bottom: \"0px\",\n      left: \"0px\",\n      right: \"auto\"\n    },\n\n    br: {\n      top: \"auto\",\n      bottom: \"0px\",\n      left: \"auto\",\n      right: \"0px\"\n    },\n\n    bc: {\n      top: \"auto\",\n      bottom: \"0px\",\n      margin: \"0 auto\",\n      left: \"50%\",\n      marginLeft: -(defaultWidth / 2)\n    }\n  },\n\n  NotificationItem: {\n    DefaultStyle: {\n      position: \"relative\",\n      width: \"100%\",\n      cursor: \"pointer\",\n      borderRadius: \"4px\",\n      fontSize: \"14px\",\n      margin: \"10px 0 0\",\n      padding: \"10px\",\n      display: \"block\",\n      WebkitBoxSizing: \"border-box\",\n      MozBoxSizing: \"border-box\",\n      boxSizing: \"border-box\",\n      opacity: 0,\n      transition: \"all 0.5s ease-in-out\",\n      WebkitTransform: \"translate3d(0, 0, 0)\",\n      transform: \"translate3d(0, 0, 0)\",\n      willChange: \"transform, opacity\",\n\n      isHidden: {\n        opacity: 0\n      },\n\n      isVisible: {\n        opacity: 1\n      }\n    },\n\n    success: {\n      borderTop: 0,\n      backgroundColor: \"#a1e82c\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    error: {\n      borderTop: 0,\n      backgroundColor: \"#fc727a\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    warning: {\n      borderTop: 0,\n      backgroundColor: \"#ffbc67\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    info: {\n      borderTop: 0,\n      backgroundColor: \"#63d8f1\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    }\n  },\n\n  Title: {\n    DefaultStyle: {\n      fontSize: \"30px\",\n      margin: \"0\",\n      padding: 0,\n      fontWeight: \"bold\",\n      color: \"#FFFFFF\",\n      display: \"block\",\n      left: \"15px\",\n      position: \"absolute\",\n      top: \"50%\",\n      marginTop: \"-15px\"\n    }\n  },\n\n  MessageWrapper: {\n    DefaultStyle: {\n      marginLeft: \"55px\",\n      marginRight: \"30px\",\n      padding: \"0 12px 0 0\",\n      color: \"#FFFFFF\",\n      maxWidthwidth: \"89%\"\n    }\n  },\n\n  Dismiss: {\n    DefaultStyle: {\n      fontFamily: \"inherit\",\n      fontSize: \"21px\",\n      color: \"#000\",\n      float: \"right\",\n      position: \"absolute\",\n      right: \"10px\",\n      top: \"50%\",\n      marginTop: \"-13px\",\n      backgroundColor: \"#FFFFFF\",\n      display: \"block\",\n      borderRadius: \"50%\",\n      opacity: \".4\",\n      lineHeight: \"11px\",\n      width: \"25px\",\n      height: \"25px\",\n      outline: \"0 !important\",\n      textAlign: \"center\",\n      padding: \"6px 3px 3px 3px\",\n      fontWeight: \"300\",\n      marginLeft: \"65px\"\n    },\n\n    success: {\n      // color: '#f0f5ea',\n      // backgroundColor: '#a1e82c'\n    },\n\n    error: {\n      // color: '#f4e9e9',\n      // backgroundColor: '#fc727a'\n    },\n\n    warning: {\n      // color: '#f9f6f0',\n      // backgroundColor: '#ffbc67'\n    },\n\n    info: {\n      // color: '#e8f0f4',\n      // backgroundColor: '#63d8f1'\n    }\n  },\n\n  Action: {\n    DefaultStyle: {\n      background: \"#ffffff\",\n      borderRadius: \"2px\",\n      padding: \"6px 20px\",\n      fontWeight: \"bold\",\n      margin: \"10px 0 0 0\",\n      border: 0\n    },\n\n    success: {\n      backgroundColor: \"#a1e82c\",\n      color: \"#ffffff\"\n    },\n\n    error: {\n      backgroundColor: \"#fc727a\",\n      color: \"#ffffff\"\n    },\n\n    warning: {\n      backgroundColor: \"#ffbc67\",\n      color: \"#ffffff\"\n    },\n\n    info: {\n      backgroundColor: \"#63d8f1\",\n      color: \"#ffffff\"\n    }\n  },\n\n  ActionWrapper: {\n    DefaultStyle: {\n      margin: 0,\n      padding: 0\n    }\n  }\n};\n\n//\n// //\n// // // For tables\n// //\n//\nconst thArray = [\"ID\", \"Name\", \"Salary\", \"Country\", \"City\"];\nconst tdArray = [\n  [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\", \"Oud-Turnhout\"],\n  [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\", \"Sinaai-Waas\"],\n  [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\", \"Baileux\"],\n  [\"4\", \"Philip Chaney\", \"$38,735\", \"Korea, South\", \"Overland Park\"],\n  [\"5\", \"Doris Greene\", \"$63,542\", \"Malawi\", \"Feldkirchen in Kärnten\"],\n  [\"6\", \"Mason Porter\", \"$78,615\", \"Chile\", \"Gloucester\"]\n];\n\n//\n// //\n// // // For icons\n// //\n//\nconst iconsArray = [\n  \"pe-7s-album\",\n  \"pe-7s-arc\",\n  \"pe-7s-back-2\",\n  \"pe-7s-bandaid\",\n  \"pe-7s-car\",\n  \"pe-7s-diamond\",\n  \"pe-7s-door-lock\",\n  \"pe-7s-eyedropper\",\n  \"pe-7s-female\",\n  \"pe-7s-gym\",\n  \"pe-7s-hammer\",\n  \"pe-7s-headphones\",\n  \"pe-7s-helm\",\n  \"pe-7s-hourglass\",\n  \"pe-7s-leaf\",\n  \"pe-7s-magic-wand\",\n  \"pe-7s-male\",\n  \"pe-7s-map-2\",\n  \"pe-7s-next-2\",\n  \"pe-7s-paint-bucket\",\n  \"pe-7s-pendrive\",\n  \"pe-7s-photo\",\n  \"pe-7s-piggy\",\n  \"pe-7s-plugin\",\n  \"pe-7s-refresh-2\",\n  \"pe-7s-rocket\",\n  \"pe-7s-settings\",\n  \"pe-7s-shield\",\n  \"pe-7s-smile\",\n  \"pe-7s-usb\",\n  \"pe-7s-vector\",\n  \"pe-7s-wine\",\n  \"pe-7s-cloud-upload\",\n  \"pe-7s-cash\",\n  \"pe-7s-close\",\n  \"pe-7s-bluetooth\",\n  \"pe-7s-cloud-download\",\n  \"pe-7s-way\",\n  \"pe-7s-close-circle\",\n  \"pe-7s-id\",\n  \"pe-7s-angle-up\",\n  \"pe-7s-wristwatch\",\n  \"pe-7s-angle-up-circle\",\n  \"pe-7s-world\",\n  \"pe-7s-angle-right\",\n  \"pe-7s-volume\",\n  \"pe-7s-angle-right-circle\",\n  \"pe-7s-users\",\n  \"pe-7s-angle-left\",\n  \"pe-7s-user-female\",\n  \"pe-7s-angle-left-circle\",\n  \"pe-7s-up-arrow\",\n  \"pe-7s-angle-down\",\n  \"pe-7s-switch\",\n  \"pe-7s-angle-down-circle\",\n  \"pe-7s-scissors\",\n  \"pe-7s-wallet\",\n  \"pe-7s-safe\",\n  \"pe-7s-volume2\",\n  \"pe-7s-volume1\",\n  \"pe-7s-voicemail\",\n  \"pe-7s-video\",\n  \"pe-7s-user\",\n  \"pe-7s-upload\",\n  \"pe-7s-unlock\",\n  \"pe-7s-umbrella\",\n  \"pe-7s-trash\",\n  \"pe-7s-tools\",\n  \"pe-7s-timer\",\n  \"pe-7s-ticket\",\n  \"pe-7s-target\",\n  \"pe-7s-sun\",\n  \"pe-7s-study\",\n  \"pe-7s-stopwatch\",\n  \"pe-7s-star\",\n  \"pe-7s-speaker\",\n  \"pe-7s-signal\",\n  \"pe-7s-shuffle\",\n  \"pe-7s-shopbag\",\n  \"pe-7s-share\",\n  \"pe-7s-server\",\n  \"pe-7s-search\",\n  \"pe-7s-film\",\n  \"pe-7s-science\",\n  \"pe-7s-disk\",\n  \"pe-7s-ribbon\",\n  \"pe-7s-repeat\",\n  \"pe-7s-refresh\",\n  \"pe-7s-add-user\",\n  \"pe-7s-refresh-cloud\",\n  \"pe-7s-paperclip\",\n  \"pe-7s-radio\",\n  \"pe-7s-note2\",\n  \"pe-7s-print\",\n  \"pe-7s-network\",\n  \"pe-7s-prev\",\n  \"pe-7s-mute\",\n  \"pe-7s-power\",\n  \"pe-7s-medal\",\n  \"pe-7s-portfolio\",\n  \"pe-7s-like2\",\n  \"pe-7s-plus\",\n  \"pe-7s-left-arrow\",\n  \"pe-7s-play\",\n  \"pe-7s-key\",\n  \"pe-7s-plane\",\n  \"pe-7s-joy\",\n  \"pe-7s-photo-gallery\",\n  \"pe-7s-pin\",\n  \"pe-7s-phone\",\n  \"pe-7s-plug\",\n  \"pe-7s-pen\",\n  \"pe-7s-right-arrow\",\n  \"pe-7s-paper-plane\",\n  \"pe-7s-delete-user\",\n  \"pe-7s-paint\",\n  \"pe-7s-bottom-arrow\",\n  \"pe-7s-notebook\",\n  \"pe-7s-note\",\n  \"pe-7s-next\",\n  \"pe-7s-news-paper\",\n  \"pe-7s-musiclist\",\n  \"pe-7s-music\",\n  \"pe-7s-mouse\",\n  \"pe-7s-more\",\n  \"pe-7s-moon\",\n  \"pe-7s-monitor\",\n  \"pe-7s-micro\",\n  \"pe-7s-menu\",\n  \"pe-7s-map\",\n  \"pe-7s-map-marker\",\n  \"pe-7s-mail\",\n  \"pe-7s-mail-open\",\n  \"pe-7s-mail-open-file\",\n  \"pe-7s-magnet\",\n  \"pe-7s-loop\",\n  \"pe-7s-look\",\n  \"pe-7s-lock\",\n  \"pe-7s-lintern\",\n  \"pe-7s-link\",\n  \"pe-7s-like\",\n  \"pe-7s-light\",\n  \"pe-7s-less\",\n  \"pe-7s-keypad\",\n  \"pe-7s-junk\",\n  \"pe-7s-info\",\n  \"pe-7s-home\",\n  \"pe-7s-help2\",\n  \"pe-7s-help1\",\n  \"pe-7s-graph3\",\n  \"pe-7s-graph2\",\n  \"pe-7s-graph1\",\n  \"pe-7s-graph\",\n  \"pe-7s-global\",\n  \"pe-7s-gleam\",\n  \"pe-7s-glasses\",\n  \"pe-7s-gift\",\n  \"pe-7s-folder\",\n  \"pe-7s-flag\",\n  \"pe-7s-filter\",\n  \"pe-7s-file\",\n  \"pe-7s-expand1\",\n  \"pe-7s-exapnd2\",\n  \"pe-7s-edit\",\n  \"pe-7s-drop\",\n  \"pe-7s-drawer\",\n  \"pe-7s-download\",\n  \"pe-7s-display2\",\n  \"pe-7s-display1\",\n  \"pe-7s-diskette\",\n  \"pe-7s-date\",\n  \"pe-7s-cup\",\n  \"pe-7s-culture\",\n  \"pe-7s-crop\",\n  \"pe-7s-credit\",\n  \"pe-7s-copy-file\",\n  \"pe-7s-config\",\n  \"pe-7s-compass\",\n  \"pe-7s-comment\",\n  \"pe-7s-coffee\",\n  \"pe-7s-cloud\",\n  \"pe-7s-clock\",\n  \"pe-7s-check\",\n  \"pe-7s-chat\",\n  \"pe-7s-cart\",\n  \"pe-7s-camera\",\n  \"pe-7s-call\",\n  \"pe-7s-calculator\",\n  \"pe-7s-browser\",\n  \"pe-7s-box2\",\n  \"pe-7s-box1\",\n  \"pe-7s-bookmarks\",\n  \"pe-7s-bicycle\",\n  \"pe-7s-bell\",\n  \"pe-7s-battery\",\n  \"pe-7s-ball\",\n  \"pe-7s-back\",\n  \"pe-7s-attention\",\n  \"pe-7s-anchor\",\n  \"pe-7s-albums\",\n  \"pe-7s-alarm\",\n  \"pe-7s-airplay\"\n];\n\n//\n// //\n// // // // For dashboard's charts\n// //\n//\n// Data for Pie Chart\nvar dataPie = {\n  labels: [\"40%\", \"20%\", \"40%\"],\n  series: [40, 20, 40]\n};\nvar legendPie = {\n  names: [\"Open\", \"Bounce\", \"Unsubscribe\"],\n  types: [\"info\", \"danger\", \"warning\"]\n};\n\n// Data for Line Chart\nvar dataSales = {\n  labels: [\n    \"9:00AM\",\n    \"12:00AM\",\n    \"3:00PM\",\n    \"6:00PM\",\n    \"9:00PM\",\n    \"12:00PM\",\n    \"3:00AM\",\n    \"6:00AM\"\n  ],\n  series: [\n    [287, 385, 490, 492, 554, 586, 698, 695],\n    [67, 152, 143, 240, 287, 335, 435, 437],\n    [23, 113, 67, 108, 190, 239, 307, 308]\n  ]\n};\nvar optionsSales = {\n  low: 0,\n  high: 800,\n  showArea: false,\n  height: \"245px\",\n  axisX: {\n    showGrid: false\n  },\n  lineSmooth: true,\n  showLine: true,\n  showPoint: true,\n  fullWidth: true,\n  chartPadding: {\n    right: 50\n  }\n};\nvar responsiveSales = [\n  [\n    \"screen and (max-width: 640px)\",\n    {\n      axisX: {\n        labelInterpolationFnc: function(value) {\n          return value[0];\n        }\n      }\n    }\n  ]\n];\nvar legendSales = {\n  names: [\"Open\", \"Click\", \"Click Second Time\"],\n  types: [\"info\", \"danger\", \"warning\"]\n};\n\n// Data for Bar Chart\nvar dataBar = {\n  labels: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"Mai\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n  ],\n  series: [\n    [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895],\n    [412, 243, 280, 580, 453, 353, 300, 364, 368, 410, 636, 695]\n  ]\n};\nvar optionsBar = {\n  seriesBarDistance: 10,\n  axisX: {\n    showGrid: false\n  },\n  height: \"245px\"\n};\nvar responsiveBar = [\n  [\n    \"screen and (max-width: 640px)\",\n    {\n      seriesBarDistance: 5,\n      axisX: {\n        labelInterpolationFnc: function(value) {\n          return value[0];\n        }\n      }\n    }\n  ]\n];\nvar legendBar = {\n  names: [\"Tesla Model S\", \"BMW 5 Series\"],\n  types: [\"info\", \"danger\"]\n};\n\nmodule.exports = {\n  style, // For notifications (App container and Notifications view)\n  thArray,\n  tdArray, // For tables (TableList view)\n  iconsArray, // For icons (Icons view)\n  dataPie,\n  legendPie,\n  dataSales,\n  optionsSales,\n  responsiveSales,\n  legendSales,\n  dataBar,\n  optionsBar,\n  responsiveBar,\n  legendBar // For charts (Dashboard view)\n};\n","module.exports = __webpack_public_path__ + \"static/media/sidebar-3.34535b95.jpg\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 586;","const config= {\n    baseurl:(process.env.NODE_ENV==\"development\") ? \"http://localhost:4000/api\": \"https://top4.trade/api\"\n}\n\nexport default config;","import React, { Component } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport config from '../../constant/config.js';\nimport Select from 'react-select'\nimport TagsInput from 'react-tagsinput'\nimport 'react-tagsinput/react-tagsinput.css'\nimport { times } from 'chartist';\n// import DateFnsUtils from '@date-io/date-fns';\n// import {\n//     // DatePicker,\n//     KeyboardDatePicker,\n//     // TimePicker,\n//     DateTimePicker,\n//     MuiPickersUtilsProvider,\n// } from '@material-ui/pickers';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nconst axios = require('axios');\n\n// import { Multiselect } from \"multiselect-react-dropdown\";\n\n// const options = [\n//     { value: 'chocolate', label: 'Chocolate' },\n//     { value: 'strawberry', label: 'Strawberry' },\n//     { value: 'vanilla', label: 'Vanilla' }\n// ]\n\nclass Innerfilter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // startDate: new Date(),\n            // endDate: new Date(),\n            selectedAccountOption: null,\n            selectedSymbolOption: null,\n            selectedSymbolOptionTo: null,\n            selectedAccountOptionTo: null,\n            selectedCommissionAccount: null,\n            startDate: null,\n            endDate: null,\n            startDateTo: null,\n            endDateTo: null,\n            allAccounts: [],\n            allSymbols: [],\n            profileName: '',\n            error: '',\n            showCommisoin: false,\n            showAddCommission: false,\n            autoSyncClose: false,\n            profileValues: [],\n            nameError: false,\n            magicNumber: [],\n            magicNumberTo: [],\n            showMagicNumber: false,\n            showMagicNumberTo: false,\n            tags: [],\n            include_exclude_status: '',\n            exclude: false,\n            include: false,\n            excludeTo: false,\n            includeTo: false,\n            // options: [{ name: 'Srigar', id: 1 }, { name: 'Sam', id: 2 }],\n\n            // plainArray: [\"Option 1\", \"Option 2\", \"Option 3\", \"Option 4\", \"Option 5\"],\n            // objectArray: [\n            //     { key: \"Option 1\", cat: \"Group 1\" },\n            //     { key: \"Option 2\", cat: \"Group 1\" },\n            //     { key: \"Option 3\", cat: \"Group 1\" },\n            //     { key: \"Option 4\", cat: \"Group 2\" },\n            //     { key: \"Option 5\", cat: \"Group 2\" },\n            //     { key: \"Option 6\", cat: \"Group 2\" },\n            //     { key: \"Option 7\", cat: \"Group 2\" }\n            // ],\n            // selectedValues: [\n            //     { key: \"Option 1\", cat: \"Group 1\" },\n            //     { key: \"Option 2\", cat: \"Group 1\" }\n            // ]\n        };\n\n\n    }\n    componentDidMount() {\n        this.fetchfilterdata()\n        let self = this;\n        axios.get(config.baseurl + '/accounts/fetchAllAccounts')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ allAccounts: response.data.rows })\n                }\n            })\n        axios.get(config.baseurl + '/accounts/fetchAllSymbol')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ allSymbols: response.data.rows })\n                }\n            })\n    }\n    // addItem = () => {\n    //     this.selectedValues.push({ key: \"Option 3\", cat: \"Group 1\" });\n    // }\n    handleDropdownChange = (e) => {\n        this.setState({ selectValue: e.target.value });\n    }\n    handleChangeDate = date => {\n        this.setState({\n            startDate: date\n        });\n    }\n\n    handleEndDate = date => {\n        if (date < this.state.startDate && date != null) {\n            this.setState({ error: 'enddate', endDate: \"\" })\n            return\n        }\n        this.setState({\n            error: '',\n            endDate: date\n        })\n    }\n    handleChangeDateTo = date => {\n\n        this.setState({\n            startDateTo: date,\n            error: ''\n        });\n    }\n    handleEndDateTo = date => {\n        if (date < this.state.startDateTo && date != null) {\n            this.setState({ error: 'enddateto', endDateTo: \"\" })\n            return\n        }\n        this.setState({\n            error: '',\n            endDateTo: date\n        });\n    }\n    handleChange = (event) => {\n        //this.setState({value: event.option});\n        this.setState({ value: Array.from(event.target.selectedOptions, (item) => item.value) });\n    }\n    renderAccountSelect = () => {\n        const { selectedAccountOption, allAccounts } = this.state;\n        let Data = {\n            account: selectedAccountOption\n        }\n        axios.post(config.baseurl + '/filter/fetchSymbolData', Data)\n            .then(function (response) {\n                if (response.status == 200) {\n                    this.props.onHide()\n                }\n            })\n            .catch(function (error) {\n            });\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account\"\n                value={selectedAccountOption}\n                onChange={this.handleChangeAccount}\n                options={options}\n            />\n        )\n    }\n    handeChangeShowCommission = (e) => {\n        this.setState({ showCommission: true }, () => {\n            this.setState({ showAddCommission: !this.state.showAddCommission })\n        })\n    }\n    handleChangeAccountTo = selectedAccountOptionTo => {\n        if (selectedAccountOptionTo.label == this.state.selectedAccountOption.label) {\n            this.setState({ error: 'err' })\n        } else\n            this.setState({ selectedAccountOptionTo, error: '' });\n    };\n    renderAccountSelectTo = () => {\n        const { selectedAccountOptionTo, allAccounts } = this.state;\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account\"\n                value={selectedAccountOptionTo}\n                onChange={this.handleChangeAccountTo}\n                options={options}\n            />\n        )\n    }\n    handleChangeCommissionAccount = selectedCommissionAccount => {\n        this.setState({ selectedCommissionAccount, });\n    };\n    renderCommissionAccount = () => {\n        const { selectedCommissionAccount, allAccounts } = this.state;\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account\"\n                value={selectedCommissionAccount}\n                onChange={this.handleChangeCommissionAccount}\n                options={options}\n            />\n        )\n    }\n    handleChangeMagicNumber = (magicNumber) => {\n\n\n        // if(re.test(tags))\n        this.setState({ magicNumber })\n    }\n    handleChangeMagicNumberTo = (magicNumberTo) => {\n\n\n        // if(re.test(tags))\n        this.setState({ magicNumberTo })\n    }\n\n\n    handleChangeAccount = selectedAccountOption => {\n        this.setState({ selectedAccountOption });\n    };\n    handleChangeSymbol = selectedSymbolOption => {\n        this.setState({ selectedSymbolOption });\n    };\n    renderSymbolSelect = () => {\n        const { selectedSymbolOption, allSymbols } = this.state;\n        let options = allSymbols.map(data => {\n            return { value: data.name, label: data.name };\n        })\n        return (\n            <Select\n                placeholder=\"Select Symbol\"\n                value={selectedSymbolOption}\n                isMulti\n                onChange={this.handleChangeSymbol}\n                options={options}\n            />\n        )\n    }\n    handleChangeSymbolTo = selectedSymbolOptionTo => {\n        this.setState({ selectedSymbolOptionTo });\n    };\n    renderSymbolSelectTo = () => {\n        const { selectedSymbolOptionTo, allSymbols } = this.state;\n        let options = allSymbols.map(data => {\n            return { value: data.name, label: data.name };\n        })\n\n        return (\n            <Select\n                placeholder=\"Select Symbol...\"\n                value={selectedSymbolOptionTo}\n                isMulti\n                onChange={this.handleChangeSymbolTo}\n                options={options}\n            />\n        )\n    }\n    fetchfilterdata() {\n        let self = this;\n        axios.get(config.baseurl + '/filter/fetchfilterdata')\n            .then(function (response) {\n                if (response.status == 200) {\n\n                    self.setState({ profileValues: response.data.rows })\n                }\n            })\n    }\n\n    handleprofileName(e) {\n        this.setState({ nameError: false })\n        this.state.profileValues.filter((data) => {\n            if (data.profile_name !== e.target.value) {\n                this.setState({ profileName: e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1), error: '', })\n            }\n            else {\n                this.setState({ nameError: true }, () => {\n                })\n                NotificationManager.listNotify = [];\n                NotificationManager.error('Profile already exits!');\n\n            }\n        })\n    }\n    // handlemagicNumber(e){\n    //     this.setState({ magicNumber: e.target.value})\n    // }\n\n    // handlemagicNumberTo(e){\n    //     this.setState({ magicNumberTo: e.target.value})\n    // }\n\n    formDataSubmit(e) {\n\n        e.preventDefault();\n\n\n\n        let from_status = this.state.include === true && this.state.exclude === false ? 1 : this.state.exclude === true && this.state.include === false ? 2 : 0\n\n\n        let to_status = this.state.includeTo === true && this.state.excludeTo === false ? 1 : this.state.excludeTo === true && this.state.includeTo === false ? 2 : 0\n        let self = this\n\n\n        if (this.state.profileName == null || this.state.profileName == '') {\n            this.setState({ error: 'profileName' })\n            return\n        }\n        else if (this.state.selectedAccountOption == null || this.state.selectedAccountOption == '') {\n            this.setState({ error: 'accountoption' })\n            return\n        }\n\n        else if (this.state.startDate == null || this.state.startDate == '') {\n            this.setState({ error: 'startdate' })\n            return\n        } else if (this.state.selectedSymbolOption == null || this.state.selectedSymbolOption == '') {\n            this.setState({ error: 'symbolselect' })\n            return\n        }\n        else if (this.state.selectedAccountOptionTo == null || this.state.selectedAccountOptionTo == '') {\n            this.setState({ error: 'accountoptionto' })\n            return\n        }\n\n        else if (this.state.startDateTo == null || this.state.startDateTo == '') {\n            this.setState({ error: 'startDateTo' })\n            return\n        }\n        else if (this.state.selectedSymbolOptionTo == null || this.state.selectedSymbolOptionTo == '') {\n            this.setState({ error: 'selectedSymbolOptionTo' })\n            return\n        }\n        else if (this.state.nameError) {\n            NotificationManager.listNotify = [];\n            NotificationManager.error('Profile Name Already Exist!');\n        }\n        // else if(this.state.selectedCommissionAccount === null){\n        //     this.setState({ error: 'addComiission' })\n\n        // }\n        else {\n            this.setState({ error: ' ' })\n            let fromSymbol = this.state.selectedSymbolOption;\n            let symbolFrom = fromSymbol.map((data) => {\n                return data.value\n            })\n            let toSymbol = this.state.selectedSymbolOptionTo;\n            let symbolto = toSymbol.map((data) => {\n                return data.value\n            })\n\n            let Data = {\n                profile_name: this.state.profileName,\n                from_account_id: this.state.selectedAccountOption.value,\n                to_account_id: this.state.selectedAccountOptionTo.value,\n                commission_acount_id: this.state.showAddCommission ? this.state.selectedCommissionAccount.value : 0,\n                startdateFrom: this.state.startDate,\n                enddateFrom: this.state.endDate,\n                startdateTo: this.state.startDateTo,\n                enddateTo: this.state.endDateTo,\n                from_symbols: JSON.stringify(symbolFrom),\n                to_symbols: JSON.stringify(symbolto),\n                auto_close: this.state.autoSyncClose ? 1 : 0,\n                from_magic_number: this.state.magicNumber.length > \"0\" ? JSON.stringify(this.state.magicNumber) : [],\n                to_magic_number: this.state.magicNumberTo.length > \"0\" ? JSON.stringify(this.state.magicNumberTo) : [],\n                from_include_exclude_status: from_status,\n                to_include_exclude_status: to_status,\n                createdAt: new Date(),\n                updatedAt: new Date(),\n\n            }\n\n            axios.post(config.baseurl + '/filter/addfilterdata', Data)\n                .then(function (response) {\n                    if (response.status == 200) {\n                        self.props.onHide()\n                    }\n                })\n                .catch(function (error) {\n                });\n        }\n    }\n    crossClick(e) {\n        e.preventDefault();\n        this.props.onHide()\n    }\n    handleChangeAutoSync(e) {\n\n        this.setState({ autoSyncClose: !this.state.autoSyncClose }, () => {\n\n        })\n    }\n   \n    changeIncludeDefaultProperty = () => {\n\n        this.setState({ include: !this.state.include, exclude: false }\n        )\n        if (!this.state.include == true) {\n            this.setState({ showMagicNumber: true })\n        } else if (this.state.include == true) {\n            this.setState({ showMagicNumber: false })\n\n        }\n\n\n    }\n    changeExcludeDefaultProperty = () => {\n        this.setState({ exclude: !this.state.exclude, include: false })\n        if (!this.state.exclude == true) {\n            this.setState({ showMagicNumber: true })\n        } else if (this.state.exclude == true) {\n            this.setState({ showMagicNumber: false })\n\n        }\n\n    }\n\n    changeIncludeDefaultPropertyTo = () => {\n        this.setState({ includeTo: !this.state.includeTo, excludeTo: false })\n        if (!this.state.includeTo == true) {\n            this.setState({ showMagicNumberTo: true })\n        } else if (this.state.includeTo == true) {\n            this.setState({ showMagicNumberTo: false })\n\n        }\n    }\n    changeExcludeDefaultPropertyTo = () => {\n        this.setState({ excludeTo: !this.state.excludeTo, includeTo: false })\n        if (!this.state.excludeTo == true) {\n            this.setState({ showMagicNumberTo: true })\n        } else if (this.state.excludeTo == true) {\n            this.setState({ showMagicNumberTo: false })\n\n        }\n\n    }\n    render() {\n        let s = this\n        return (\n            <>\n                <NotificationContainer />\n                <div className=\"content\">\n                    <Grid fluid>\n                        <div className=\"symbol-box\">\n                            <div className=\"cross_div\"><a onClick={(e) => this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\n                            <div className=\"terminal-text\" >\n                                <label className=\"pnameadjust\"> Profile Name </label>\n                                <input type=\"text\" name=\"profilename\" className=\"Itext\" placeholder=\"Profile Name\" onChange={(e) => this.handleprofileName(e)} />\n                                {(this.state.error == 'profileName') && \n                               NotificationManager.error('Please select profile name !') }\n\n\n                            </div>\n                            <div className=\"synclose\">\n                                <label className=\"checkbox-inline\"><input type=\"checkbox\" defaultChecked={this.state.autoSyncClose} name=\"changeAutoSync\" onChange={(e) => this.handleChangeAutoSync(e)} /><b>Auto Sync Close</b></label>\n                            </div>\n\n                            <form>\n                                <Row>\n                                    {/* <Col md={12}>\n                                        <div className=\"card\">\n                                            <div style={{ padding: '10px 20px 35px ', }}>\n                                                <div>\n                                                    <h3 className=\" text-center\">Filter By Magic Numbers</h3>\n                                                </div>\n                                                <div className=\"row\">\n                                                    <div className=\"col-md-6 text-center\">\n                                                        <button type=\"button\" class=\"text-center filter-add-button\">Include</button>\n                                                    </div>\n                                                    <div className=\"col-md-6 text-center btnspace\">\n                                                        <button type=\"button\" class=\"filter-add-button\">Exclude</button>\n                                                    </div>\n                                                    <div className=\"row\">\n                                                        <div className=\"col\">\n                                                            <div class=\"text-center  \">\n                                                                <input class=\"form-control input-css\" placeholder=\"Select Numbers\" type=\"number\"></input>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </Col> */}\n                                    <Col md={6}>\n                                        <div className=\"card bottom\">\n                                            <div style={{ padding: '10px 20px 0px' }}>\n                                                <span style={{ fontWeight: 'bold' }}>Account A</span>\n                                            </div>\n                                            <table className=\"table mt20\">\n                                                <tbody>\n                                                    <tr>\n                                                        <td className=\"b-clr\">\n                                                            <span className=\"accnt\">Account </span>\n                                                        </td>\n\n                                                        <td className=\"b-clr text-center\" style={{ width: '50%' }}>\n                                                            {/* <Multiselect\n                                                        options={objectArray}\n                                                        singleSelect\n                                                        displayValue=\"key\"\n                                                    /> */}\n                                                            {this.renderAccountSelect()}\n                                                            {(this.state.error == 'accountoption') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td className=\"b-clr \">\n                                                            <span className=\"accnt\">From  </span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center datepicker_filter\">\n                                                            <DatePicker\n                                                                selected={this.state.startDate}\n                                                                onChange={this.handleChangeDate}\n                                                                isClearable\n                                                                placeholderText=\"dd/mm/yyyy\"\n                                                                dateFormat=\"dd/MM/yyyy\"\n                                                                startDate={this.state.startDate}\n                                                                endDate={this.state.endDate}\n                                                                strictParsing\n                                                            />\n                                                             {/* <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                                            <KeyboardDatePicker\n                                                                // margin=\"normal\"\n                                                                clearable={false}\n                                                                id=\"date-picker-dialog\"\n                                                                label=\"dd/MM/yyyy\"\n                                                                format=\"dd/MM/yyyy\"\n                                                                onError={() => { return null }}\n                                                                value={this.state.startDate}\n                                                                onChange={this.handleChangeDate}\n                                                                KeyboardButtonProps={{\n                                                                    'aria-label': 'change date',\n                                                                }}\n                                                            />\n                                                        </MuiPickersUtilsProvider> */}\n                                                            {(this.state.error == 'startdate') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td className=\"b-clr \">\n                                                            <span className=\"accnt\">To   </span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center datepicker_filter\">\n                                                            <DatePicker\n                                                                autoOk={true}\n                                                                selected={this.state.endDate}\n                                                                onChange={this.handleEndDate}\n                                                                isClearable\n                                                                placeholderText=\"dd/mm/yyyy\"\n                                                                dateFormat=\"dd/MM/yyyy\"\n                                                                startDate={this.state.startDate}\n                                                                endDate={this.state.endDate}\n                                                            />\n                                                            {(this.state.error == 'enddate') && <p style={{ color: 'red', fontSize: '13px' }}>*\n                                                        Please ensure that the End Date is greater than the Start Date.</p>}\n\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td className=\"b-clr \">\n                                                            <span className=\"accnt\">Symbol </span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                            {/* <Multiselect\n                                                        options={objectArray}\n                                                        displayValue=\"key\"\n                                                        showCheckbox={true}\n                                                    /> */}\n                                                            {this.renderSymbolSelect()}\n                                                            {(this.state.error == 'symbolselect') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n\n\n                                            <div className=\"text-center\">\n                                                <span > Magic Number   </span>\n                                            </div>\n\n                                            <table className=\"table \">\n                                                <tbody>\n                                                    <tr>\n                                                        <td className=\"b-clr dataAdjust\">\n                                                            <div onClick={this.changeIncludeDefaultProperty}>\n                                                                <input\n                                                                    type=\"radio\" id=\"include\" name=\"include\" checked={this.state.include} />\n                                                                <span class=\"accnt \">Include</span>\n\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"b-clr text-center\">\n                                                            <div onClick={this.changeExcludeDefaultProperty} >\n                                                                <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.exclude} />\n                                                                <span class=\"accnt \">Exclude</span>\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n\n\n                                            {this.state.showMagicNumber === true ?\n                                                <div className=\"b-clr magicnumber\" style={{}}>\n                                                    <TagsInput\n                                                        onValidationReject={() => console.log('rejected')}\n                                                        validationRegex={/^[0-9]*$/}\n                                                        inputProps={{ placeholder: \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumber\n                                                        } onChange={this.handleChangeMagicNumber}></TagsInput>\n                                                </div> : null}\n\n                                        </div>\n                                    </Col>\n                                    <Col md={6}>\n                                        <div className=\"card bottom\">\n                                            <div style={{ padding: '10px 20px 0px' }}>\n                                                <span style={{ fontWeight: 'bold' }}>Account B</span>\n                                            </div>\n                                            <table className=\"table mt20\">\n                                                <tbody>\n                                                    <tr>\n                                                        <td className=\"b-clr \">\n                                                            <span className=\"accnt\"> Account</span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center\" style={{ width: '50%' }}>\n                                                            {this.renderAccountSelectTo()}\n                                                            {(this.state.error == 'accountoptionto') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\n                                                            {(this.state.error == 'err') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Diffrent Account</p>}\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td className=\"b-clr \">\n                                                            <span className=\"accnt\">From </span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center datepicker_filter\">\n                                                            <DatePicker\n                                                                selected={this.state.startDateTo}\n                                                                onChange={this.handleChangeDateTo}\n                                                                isClearable\n                                                                placeholderText=\"dd/mm/yyyy\"\n                                                                dateFormat=\"dd/MM/yyyy\"\n                                                                startDate={this.state.startDateTo}\n                                                                endDate={this.state.endDateTo}\n                                                                strictParsing\n                                                            />\n                                                            {(this.state.error == 'startDateTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td className=\"b-clr \">\n                                                            <span className=\"accnt\">To  </span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center datepicker_filter\">\n                                                            <DatePicker\n                                                                selected={this.state.endDateTo}\n                                                                onChange={this.handleEndDateTo}\n                                                                isClearable\n                                                                placeholderText=\"dd/mm/yyyy\"\n                                                                dateFormat=\"dd/MM/yyyy\"\n                                                                startDate={this.state.startDateTo}\n                                                                endDate={this.state.endDateTo}\n                                                            />\n                                                            {(this.state.error == 'enddateto') && <p style={{ color: 'red', fontSize: '13px' }}>*\n                                                        Please ensure that the End Date is greater than the Start Date.</p>}\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td className=\"b-clr\">\n                                                            <span className=\"accnt\"> Symbol   </span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                            {/* <Multiselect\n                                                        options={objectArray}\n                                                        displayValue=\"key\"\n                                                        showCheckbox={true}\n                                                    /> */}\n                                                            {this.renderSymbolSelectTo()}\n                                                            {(this.state.error == 'selectedSymbolOptionTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\n\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n\n                                            <div className=\"text-center\">\n                                                <span > Magic Number  </span>\n                                            </div>\n                                            <table className=\"table mt20\">\n                                                <tbody>\n\n                                                    <tr>\n                                                        <td className=\"b-clr checkboxAdjust\">\n                                                            <div onClick={this.changeIncludeDefaultPropertyTo} >\n                                                                <input\n                                                                    type=\"radio\" id=\"includeTo\" name=\"includeTo\" checked={this.state.includeTo} />\n                                                                <span class=\"accnt \">Include</span>\n\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"b-clr checkboxAdjust text-center\">\n                                                            <div onClick={this.changeExcludeDefaultPropertyTo} >\n                                                                <input type=\"radio\" id=\"excludeTo\" name=\"excludeTo\" checked={this.state.excludeTo} />\n                                                                <span class=\"accnt \">Exclude</span>\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n                                            <div>\n\n                                                {this.state.showMagicNumberTo === true ?\n                                                    <div className=\"b-clr magicnumber\" style={{}}>\n                                                        <TagsInput\n                                                            onValidationReject={() => console.log('rejected')}\n                                                            validationRegex={/^[0-9]*$/}\n                                                            inputProps={{ placeholder: \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumberTo\n                                                            } onChange={this.handleChangeMagicNumberTo}></TagsInput>\n                                                    </div> : null}\n                                            </div>\n                                        </div>\n                                    </Col>\n                                </Row>\n                                <hr></hr>\n                                <div className=\"chceckbox\">\n\n                                    <label class=\"checkbox-inline\"><input type=\"checkbox\" defaultChecked={this.state.showCommisoin} onChange={(e) => this.handeChangeShowCommission(e)} /><b>Add Commission</b></label>\n                                </div>\n                                {this.state.showAddCommission &&\n                                    <div className=\"center-com d-flex\">\n                                        <div className=\"com\">\n                                            <h3 style={{ fontWeight: 'bold' }}>Commission</h3>\n                                        </div>\n                                        <table className=\"table mt20\">\n                                            <tbody>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\"> Account </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '50%' }}>\n                                                        {this.renderCommissionAccount()}\n                                                        {(this.state.error == 'accountoptionto') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\n                                                        {(this.state.error == 'addComiission') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account </p>}\n                                                    </td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                }\n                                <div className=\"save_button_filter\">\n                                    <div className=\"savebtn\">\n                                        <Button className=\"btn-primary savebutton\" variant=\"primary\" size=\"lg\" block onClick={(e) => this.formDataSubmit(e)}>\n                                            <b>Save</b>\n                                        </Button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </Grid>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Innerfilter;\n","import React, { Component } from 'react';\nimport { Grid, Row, Col, Modal, Alert } from \"react-bootstrap\";\nimport swal from 'sweetalert';\nimport config from '../../constant/config.js';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nconst axios = require('axios');\n\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loginForm: false,\n            setShow: false,\n            show: true,\n            username: '',\n            password: '',\n            alert: null,\n            persons: [],\n            shwPwd: false,\n            shwMsg: false,\n            invalidUsername: '',\n            invalidPassword: '',\n            accountlist: []\n\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value.trim() })\n    }\n    onSubmit(e) {\n        e.preventDefault();\n        const userdetail = {\n            username: this.state.username,\n            password: this.state.password\n        }\n        if (this.state.username == '') {\n            this.setState({ shwPwd: true })\n        }\n\n        let self = this;\n        axios.post(config.baseurl + '/users/mainLogin', userdetail)\n            .then(function (response) {\n                if (response.status == 200) {\n                    // self.handleClose();\n                    if (response.data.rows && response.data.rows.length > 0) {\n                        localStorage.setItem('currentUser', JSON.stringify(response.data.rows));\n                        self.props.history.push('/admin/dashboard')\n                    }\n                    if (response.data.message) {\n                        if (response.data.name == 'username') {\n                            self.setState({ invalidUsername: response.data.message })\n                            if (self.state.invalidUsername == '' || self.state.invalidUsername == 'Invalid username.' || self.state.invalidUsername == \"Invalid username\") {\n                                self.createNotification()\n                            }\n                        }\n                        if (response.data.name == 'password') {\n                            if (self.state.invalidPassword == '' || self.state.invalidPassword == 'Invalid password.') {\n                                self.createNotification()\n                            }\n                            self.setState({ invalidPassword: response.data.message, invalidUsername: '' })\n\n                        }\n                    }\n                }\n            })\n            .catch(function (err) {\n            });\n    }\n    toogle = () => {\n        this.setState({ loginForm: !this.state.loginForm })\n    }\n    handleClose = () => {\n        this.setState({ loginForm: false })\n    }\n    handleShow = () => {\n        this.setState({ setShow: true })\n    }\n    createNotification = () => {\n        NotificationManager.listNotify = [];\n        NotificationManager.error('Invalid Credentials !');\n    }\n\n    componentDidMount() {\n        // let self = this;\n\n        let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n        if (currentUser !== null) {\n            this.props.history.push('admin/dashboard')\n            return;\n        }\n        // axios.get(config.baseurl + '/users/allAccounts')\n        //     .then(function (response) {\n        //         if (response.status == 200) {\n        //             self.setState({ accountlist: response.data.rows })\n        //         }\n        //     })\n    }\n    render() {\n        const { invalidPassword, invalidUsername } = this.state;\n        return (\n            <div className=\"content\">\n                <Grid fluid style={{ marginTop: '20vh' }}>\n                    <Row>\n                        <Col md={4} />\n                        <Col\n                            md={4}\n                            sm={6}\n                        >\n                            {/* <Modal show={show}>\n                                    <Modal.Body> */}\n                            <div className=\"form-box login-box\">\n                                <Modal.Title className=\"text-center\"><b>Log In</b></Modal.Title>\n\n                                <div className=\"container-fluid\" style={{ background: '#eee', padding: 15, marginTop: 10 }}>\n                                    <div>\n                                        <span style={{ fontWeight: 'bold' }}> Username: </span>\n                                                    testaccount\n                                                </div>\n                                    <div>\n                                        <span style={{ fontWeight: 'bold' }}> Password: </span>\n                                                    1234567\n                                                </div>\n                                </div>\n                                <form style={{ marginTop: '20px' }} onSubmit={this.onSubmit}>\n                                    <label>Username</label>\n\n                                    <input className=\"Itext\" placeholder=\"Enter Username\" name=\"username\" value={this.state.username} onChange={this.onChange}\n                                    // onKeyUp={this.checkValidUser}\n                                    ></input>\n                                    <label>Password</label>\n\n                                    <input className=\"Itext\" placeholder=\"Enter Password\" name=\"password\" type=\"password\" value={this.state.password} onChange={this.onChange}></input>\n\n                                    <div className=\"clearfix\">\n                                        <button type=\"submit\" disabled={!this.state.username || !this.state.password} className={!this.state.username || !this.state.password ? \"loginButton\" : \"loginButton save2 save1\"}>Login</button>\n\n                                    </div>\n                                </form>\n                            </div>\n\n                            {/* </Modal.Body>\n                                </Modal> */}\n\n\n                        </Col>\n                        <Col md={4} />\n                    </Row>\n                </Grid>\n                <NotificationContainer />\n\n            </div >\n        );\n    }\n}\n\nexport default Login;","import React, { Component } from \"react\";\nimport { NavItem, Nav, NavDropdown, MenuItem } from \"react-bootstrap\";\n\nclass AdminNavbarLinks extends Component {\n  constructor(props) {\n    super(props);\n  }\n  logout = () => {\n    localStorage.clear();\n    this.props.history.push('/login');\n  }\n  render() {\n    const notification = (\n      <div>\n        {/* <i className=\"fa fa-globe\" />\n        <b className=\"caret\" /> */}\n        {/* <span className=\"notification\">5</span> */}\n        <p className=\"hidden-lg hidden-md\">Notification</p>\n      </div>\n    );\n    return (\n      <div>\n        <Nav>\n          <NavItem eventKey={1} href=\"#\">\n            {/* <i className=\"fa fa-dashboard\" /> */}\n            <p className=\"hidden-lg hidden-md\">Dashboard</p>\n          </NavItem>\n          <NavDropdown\n            eventKey={2}\n            title={notification}\n            noCaret\n            id=\"basic-nav-dropdown\"\n          >\n            <MenuItem eventKey={2.1}>Notification 1</MenuItem>\n            <MenuItem eventKey={2.2}>Notification 2</MenuItem>\n            <MenuItem eventKey={2.3}>Notification 3</MenuItem>\n            <MenuItem eventKey={2.4}>Notification 4</MenuItem>\n            <MenuItem eventKey={2.5}>Another notifications</MenuItem>\n          </NavDropdown>\n          <NavItem eventKey={3} href=\"#\">\n            {/* <i className=\"fa fa-search\" />\n            <p className=\"hidden-lg hidden-md\">Search</p> */}\n          </NavItem>\n        </Nav>\n        <Nav pullRight>\n          {/* <NavItem eventKey={1} href=\"#\">\n            Account\n          </NavItem>\n          <NavDropdown\n            eventKey={2}\n            title=\"Dropdown\"\n            id=\"basic-nav-dropdown-right\"\n          >\n            <MenuItem eventKey={2.1}>Action</MenuItem>\n            <MenuItem eventKey={2.2}>Another action</MenuItem>\n            <MenuItem eventKey={2.3}>Something</MenuItem>\n            <MenuItem eventKey={2.4}>Another action</MenuItem>\n            <MenuItem eventKey={2.5}>Something</MenuItem>\n            <MenuItem divider />\n            <MenuItem eventKey={2.5}>Separated link</MenuItem>\n          </NavDropdown> */}\n          <NavItem  eventKey={3} onClick={() => this.logout()}>\n           <span className=\"logOutbtn\">Logout</span> \n          </NavItem>\n        </Nav>\n      </div>\n    );\n  }\n}\n\nexport default AdminNavbarLinks;\n","import React, { Component } from \"react\";\nimport { Navbar } from \"react-bootstrap\";\n\nimport AdminNavbarLinks from \"./AdminNavbarLinks\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.mobileSidebarToggle = this.mobileSidebarToggle.bind(this);\n    this.state = {\n      sidebarExists: false\n    };\n  }\n  mobileSidebarToggle(e) {\n    if (this.state.sidebarExists === false) {\n      this.setState({\n        sidebarExists: true\n      });\n    }\n    e.preventDefault();\n    document.documentElement.classList.toggle(\"nav-open\");\n    var node = document.createElement(\"div\");\n    node.id = \"bodyClick\";\n    node.onclick = function() {\n      this.parentElement.removeChild(this);\n      document.documentElement.classList.toggle(\"nav-open\");\n    };\n    document.body.appendChild(node);\n  }\n  render() {\n    return (\n      <Navbar fluid>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <a href=\"#\">{this.props.brandText== \"Dashboard\" ? \"Hedging Interest Differentials Monitoring\" : this.props.brandText }</a>\n          </Navbar.Brand>\n          <Navbar.Toggle onClick={this.mobileSidebarToggle} />\n        </Navbar.Header>\n        <Navbar.Collapse>\n          <AdminNavbarLinks {...this.props}/>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Dropdown, DropdownButton } from 'react-bootstrap'\nimport AdminNavbarLinks from \"../Navbars/AdminNavbarLinks.jsx\";\n\n// import logo from \"assets/img/reactlogo.png\";\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth,\n      menu: false\n    };\n  }\n  toggle = () => {\n    this.setState({ menu: !this.state.menu })\n  }\n\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  updateDimensions() {\n    this.setState({ width: window.innerWidth });\n  }\n  componentDidMount() {\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n  render() {\n    const sidebarBackground = {\n      backgroundImage: \"url(\" + this.props.image + \")\"\n    };\n    return (\n\n\n      <div\n        id=\"sidebar\"\n        className=\"sidebar\"\n        data-color={this.props.color}\n        data-image={this.props.image}\n      >\n        {this.props.hasImage ? (\n          <div className=\"sidebar-background\" />\n        ) : (\n            null\n          )}\n        <div className=\"logo\">\n          <a\n            href=\"https://www.creative-tim.com?ref=lbd-sidebar\"\n            className=\"simple-text logo-mini\"\n          >\n            <div className=\"logo-img\">\n\n            </div>\n          </a>\n          <span className=\"simple-text logo-normal\">\n            Dashboard\n          </span>\n          {/* <a\n            href=\"https://www.creative-tim.com?ref=lbd-sidebar\"\n            className=\"simple-text logo-normal\"\n          >\n            Dashboard\n          </a> */}\n        </div>\n        <div className=\"sidebar-wrapper\">\n          {/* <ul className=\"nav\" style={{margin:'0px 20px'}}>\n            <li className=\"side-list\">\n              <p> Dashboard </p>\n            </li>\n            <li className=\"side-list\">\n              <p onClick={this.toggle}>Filter\n                      <i className=\"fa fa-angle-down\" aria-hidden=\"true\" style={{ float: 'right' }}></i>\n              </p>\n              {this.state.menu &&\n                <ul>\n\n                  <li>\n                    <p>abc\n                  </p>\n                  </li>\n\n                </ul>\n              }\n            </li>\n            <li className=\"side-list\">\n              <p onClick={this.toggle}>Log In\n                      <i className=\"fa fa-angle-down\" aria-hidden=\"true\" style={{ float: 'right' }}></i>\n              </p>\n            </li>\n            <li className=\"side-list\">\n              <p>Symbol Managing\n              </p>\n            </li>\n            <li className=\"side-list\">\n              <p>Swap\n              </p>\n            </li> */}\n          <ul className=\"nav\" style={{ margin: '0px 20px' }}>\n            {this.state.width <= 991 ? <AdminNavbarLinks {...this.props} /> : null}\n            {this.props.routes.map((prop, key) => {\n              if (!prop.redirect)\n                // console.log(prop.resources, 'resouces');\n                return (\n                  <li\n                    className={\n                      prop.upgrade\n                        ? \"active active-pro\"\n                        : this.activeRoute(prop.layout + prop.path)\n                    }\n                    key={key}\n                  >\n                    <NavLink\n                      to={prop.layout + prop.path}\n                      className=\"nav-link\"\n                      activeClassName=\"active\"\n                    >\n                      <i className={prop.icon} />\n                      <p onClick={this.toggle}>{prop.name}\n                        {/* <i className=\"fa fa-angle-down\" aria-hidden=\"true\" style={{float:'right'}}></i> */}\n                      </p>\n                      {this.state.menu &&\n                        <ul>\n                          {prop.resources != undefined && prop.resources.map((sub, index) => (\n                            <li key={index}>\n                              <p>{sub.name}\n                              </p>\n\n                            </li>\n                          ))}\n\n                        </ul>\n                      }\n                    </NavLink>\n\n                  </li>\n                );\n              // return null;\n            })}\n          </ul>\n        </div>\n        {/* <NavLink>\n          <DropdownButton id=\"dropdown-item-button\" title=\"Dropdown button\">\n            <Dropdown.ItemText>Dropdown item text</Dropdown.ItemText>\n            <Dropdown.Item as=\"button\">Action</Dropdown.Item>\n            <Dropdown.Item as=\"button\">Another action</Dropdown.Item>\n            <Dropdown.Item as=\"button\">Something else</Dropdown.Item>\n          </DropdownButton>\n        </NavLink> */}\n\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n\n","\nimport React, { useState, Fragment } from 'react';\nimport { Collapse } from 'reactstrap';\nimport { Row, Col } from \"react-bootstrap\";\nimport NumberFormat from 'react-number-format';\nimport Login from './login';\n\n// import Data from './Data';\n\nconst Closeposition = (props) => {\n    const { allHistoryRecord, fromHistoryOrderInfo, toHistoryOrderInfo, commissionHistoryOrderInfo } = props;\n    const [isOpen2, setIsOpen2] = useState(false);\n    const toggle2 = () => setIsOpen2(!isOpen2);\n\n    // const sumOfTotal = allHistoryRecord.reduce((current, data) => {\n    //     return (data.total + current);\n    // }, 0);\n    let fromSymbols = '';\n    let toSymbols = '';\n    if (allHistoryRecord && Object.entries(allHistoryRecord).length > 0) {\n        fromSymbols = JSON.parse(allHistoryRecord.from_symbols);\n        fromSymbols = (fromSymbols).map(data => data).join(', ');\n        toSymbols = JSON.parse(allHistoryRecord.to_symbols);\n        toSymbols = (toSymbols).map(data => data).join(', ')\n    }\n    let fromsum = 0;\n    let tosum = 0;\n    let commissionSum = 0;\n\n    if (fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0) {\n        fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\n    }\n    if (toHistoryOrderInfo && toHistoryOrderInfo.length > 0) {\n        tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\n    }\n    if (commissionHistoryOrderInfo && commissionHistoryOrderInfo.length > 0) {\n        commissionSum = (commissionHistoryOrderInfo[0].commission + commissionHistoryOrderInfo[0].swap + commissionHistoryOrderInfo[0].profit);\n    }\n\n    let sumOfTotal = tosum + fromsum;\n\n    let noRecord = ((fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0 && fromHistoryOrderInfo[0].total == null) && (toHistoryOrderInfo && toHistoryOrderInfo.length > 0 && toHistoryOrderInfo[0].total == null)) ? true : false;\n    return (\n        <div>\n            <div className=\"openpositions\" style={{ margin: '20px 0px' }}>\n                <span className=\"p-text\">Closed Positions</span>\n                <span className=\"icon-style\" onClick={toggle2}>\n                    {!isOpen2 ?\n                        <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n                        :\n                        <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\n                    }\n                </span>\n            </div>\n            <div>\n                <Collapse isOpen={isOpen2}>\n                    <Row>\n                        {/* {Data.tablePage.items.map((item, index) =>\n                            <Col md={6} key={index}>\n                                <div className=\"card\">\n                                    <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\n                                    </div>\n                                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                        <table className=\"table\">\n                                            <tbody>\n                                                <tr><td>{item.closed} </td>\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\n                                                </tr>\n                                                <tr><td>{item.commission} </td>\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\n                                                </tr>\n                                                <tr><td>{item.swap} </td>\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\n                                                </tr>\n                                                <tr><td>{item.total} </td>\n                                                    <td className=\"td-actions text-right\"> {item.price}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                    </div>\n                                </div>\n                            </Col>\n                        )} */}\n                        {/* {(allHistoryRecord && allHistoryRecord.length>0) && allHistoryRecord.map((item, index) =>\n                            <Fragment>\n\n                            <Col md={6} key={index}>\n                                <div className=\"card\">\n                                    <div className=\"header\">\n                                        <h5 className={item.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{item.account.login}</h5>\n                                        <h6 className={'colorDarkBlue'} style={{fontSize:10}}>({item.account.alias})</h6>\n                                    </div>\n                                    <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                        <table className=\"table\">\n                                            <tbody>\n                                                <tr><td>Closed P/L </td>\n                                                    <td className=\"td-actions text-right\">$ {item.profit}</td>\n                                                </tr>\n                                                <tr><td>Commission </td>\n                                                    <td className=\"td-actions text-right\">$ {item.commission}</td>\n                                                </tr>\n                                                <tr><td>Swap </td>\n                                                    <td className=\"td-actions text-right\">$ {item.swap}</td>\n                                                </tr>\n                                                <tr><td>Total </td>\n                                                    <td className=\"td-actions text-right\">$ {item.total}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                    </div>\n                                </div>\n                            </Col>\n                            </Fragment>\n                        )}\n                        {(allHistoryRecord && allHistoryRecord.length>0) && \n                            <Row>\n                                <Col md={12}>\n                                    <div>\n                                        <div className=\"total-box\">\n                                            <span className=\"text\">Sum of closed positions</span>\n                                            <span className=\"text\" style={{ float: 'right' }}>$ {sumOfTotal}</span>\n                                        </div>\n                                    </div>\n                                </Col>\n                            </Row>\n                        } */}\n                        {noRecord ? (\n                            <div className=\"text-center\">\n                                No Record Found!\n                            </div>) :\n\n                            <Fragment>\n\n                                {(fromHistoryOrderInfo && fromHistoryOrderInfo.length > 0 && fromHistoryOrderInfo[0].total != null) ? (\n                                    <Col md={6}>\n                                        <div className=\"card\">\n                                            <div className=\"header\">\n                                                <h5 className={allHistoryRecord.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{allHistoryRecord.accountFromInfo[0].login}</h5>\n                                                <h6 className={'colorDarkBlue'} style={{ fontSize: 10 }}>({allHistoryRecord.accountFromInfo[0].alias})</h6>\n                                            </div>\n                                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                                <table className=\"table\">\n                                                    <tbody>\n                                                        <tr>\n                                                            <span className=\"symbolStyle\">{fromSymbols}</span>\n                                                            {/* <td>{fromSymbols}</td> */}\n                                                            {/* <td className=\"td-actions text-right\">$ {fromHistoryOrderInfo[0].profit}</td> */}\n                                                        </tr>\n                                                        <tr><td>Closed P/L </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                <NumberFormat value={fromHistoryOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                                {/* {fromHistoryOrderInfo[0].profit} */}\n                                                            </td>\n                                                        </tr>\n                                                        <tr><td>Commission </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                {/* {fromHistoryOrderInfo[0].commission} */}\n                                                                <NumberFormat value={fromHistoryOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                            </td>\n                                                        </tr>\n                                                        <tr><td>Swap </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                <NumberFormat value={fromHistoryOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                                {/* {fromHistoryOrderInfo[0].swap} */}\n                                                            </td>\n                                                        </tr>\n                                                        <tr><td>Total </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                <NumberFormat value={fromHistoryOrderInfo[0].total} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                                {/* {fromHistoryOrderInfo[0].total} */}\n                                                            </td>\n                                                        </tr>\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                            </div>\n                                        </div>\n                                    </Col>\n                                ) : (\n                                        <Col md={6}>\n                                            <div className=\"card noRecordCol\"> No Record Found</div>\n                                        </Col>\n                                    )}\n                                {(toHistoryOrderInfo && toHistoryOrderInfo.length > 0 && toHistoryOrderInfo[0].total != null) ? (\n                                    <Col md={6}>\n                                        <div className=\"card\">\n                                            <div className=\"header\">\n                                                <h5 className={allHistoryRecord.id == '1' ? 'acntText color2' : 'acntText color2'}>{allHistoryRecord.accountToInfo[0].login}</h5>\n                                                <h6 className={'color2'} style={{ fontSize: 10 }}>({allHistoryRecord.accountToInfo[0].alias})</h6>\n                                            </div>\n                                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                                <table className=\"table\">\n                                                    <tbody>\n                                                        <tr>\n                                                            <span className=\"symbolStyle\">{toSymbols}</span>\n\n                                                            {/* <td>{toSymbols}</td> */}\n                                                            {/* <td className=\"td-actions text-right\">$ {fromHistoryOrderInfo[0].profit}</td> */}\n                                                        </tr>\n                                                        <tr><td>Closed P/L </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                <NumberFormat value={toHistoryOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                                {/* {toHistoryOrderInfo[0].profit} */}\n                                                            </td>\n                                                        </tr>\n                                                        <tr><td>Commission </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                {/* {toHistoryOrderInfo[0].commission} */}\n                                                                <NumberFormat value={toHistoryOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                            </td>\n                                                        </tr>\n                                                        <tr><td>Swap </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                {/* {toHistoryOrderInfo[0].swap} */}\n\n\n                                                                {\n                                                                    <NumberFormat value={(toHistoryOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                                                    // toOpenOrderInfo[0].swap\n                                                                }\n                                                            </td>\n                                                        </tr>\n                                                        <tr><td>Total </td>\n                                                            <td className=\"td-actions text-right\">$ {' '}\n                                                                {/* {toHistoryOrderInfo[0].total} */}\n                                                                <NumberFormat value={toHistoryOrderInfo[0].total} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                            </td>\n                                                        </tr>\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                            </div>\n                                        </div>\n                                    </Col>\n                                ) : (\n                                        <Col md={6}>\n                                            <div className=\"card noRecordCol\"> No Record Found</div>\n                                        </Col>\n                                    )\n\n                                }\n                                {(sumOfTotal != 0) &&\n                                    <Row>\n                                        <Col md={12} style={{ marginBottom: 20 }}>\n                                            <div>\n                                                <div className=\"total-box\">\n                                                    <span className=\"text\">Sum of closed positions</span>\n                                                    <span className=\"text\" style={{ float: 'right' }}>$ {' '}\n                                                        <NumberFormat value={sumOfTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                                        {/* {sumOfTotal} */}\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        </Col>\n                                    </Row>\n                                }\n\n\n\n\n\n                            </Fragment>\n                        }\n                    </Row>\n                </Collapse>\n                {allHistoryRecord.commission_acount_id !== 0 && allHistoryRecord.commission_acount_id !== undefined &&\n                    <Col md={12}>\n\n                        <div className=\"card \">\n                            <div className=\"header ptheader\">\n                                <h4 className=\"text-center\"><b>Commission</b></h4>\n                                <div className=\"row\">\n                                    <div className=\"col-md-12 text-center\">\n\n                                        <h5 className={allHistoryRecord.id == '1' ? 'acntText color2' : 'acntText acadjust color2'}>{allHistoryRecord.accountCommissionInfo !== undefined && allHistoryRecord.accountCommissionInfo[0].login} <span>({allHistoryRecord.accountCommissionInfo !== undefined && allHistoryRecord.accountCommissionInfo[0].alias})</span></h5>\n\n\n                                    </div>\n\n\n                                    <div className=\"col-md-12 total text-center\">\n\n\n                                        <tr>\n                                            <td className=\"td-actions total_comm text-right\">\n\n                                                Total : $ {' '}\n                                                {/* {toHistoryOrderInfo[0].total} */}\n                                                <NumberFormat value={allHistoryRecord.history_info} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                            </td>\n                                        </tr>\n\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Col>}\n            </div>\n        </div >\n\n    );\n}\n\nexport default Closeposition;\n","const Data = {\n \n  tablePage: {\n    items: [\n      {id: 1,lot:'Buy 10 Lot', closed: 'Closed P/L', commission: 'Commission', swap: 'Swap', total: 'Total', price:'$ 1110',textA: 'Account A'},\n      {id: 2, lot:'Sell 10 Lot', closed: 'Closed P/L', commission: 'Commission', swap: 'Swap', total: 'Total', price:'$ 1111', textA: 'Account B'},\n    ]\n  },\n  dashBoardPage: {\n    items: [\n      {id: 1, title: 'Balance', textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 2, title: 'Equity',textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 3, title: 'Margin', textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 4, title: 'Free Margin', textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 5, title: 'Margin %', textA: 'Account A', textB: 'Account B',price:'$ 400'},\n      {id: 5, title: 'Floating P/L', textA: 'Account A', textB: 'Account B',price:'$ 400'}\n    ],\n  }\n};\n\nexport default Data;\n","import React, { useState, Fragment } from 'react';\nimport { Collapse } from 'reactstrap';\nimport { Row, Col } from \"react-bootstrap\";\nimport NumberFormat from 'react-number-format';\n\nimport Data from './Data';\n\nexport default function Openposition(props) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n  const { allOpenRecord, fromOpenOrderInfo, toOpenOrderInfo, } = props;\n\n  // const sumOfTotal = allOpenRecord.reduce((current, data) => {\n  //     return (Math.floor(data.commission + data.swap + data.profit+ current))\n  //     // return (data.profit + current);\n  // }, 0);\n\n  let fromsum = 0;\n  let tosum = 0;\n  let fromSymbols = '';\n  let toSymbols = '';\n  if (allOpenRecord && Object.entries(allOpenRecord).length > 0) {\n    fromSymbols = JSON.parse(allOpenRecord.from_symbols);\n    fromSymbols = (fromSymbols).map(data => data).join(', ');\n    toSymbols = JSON.parse(allOpenRecord.to_symbols);\n    toSymbols = (toSymbols).map(data => data).join(', ')\n  }\n  // if(fromOpenOrderInfo && fromOpenOrderInfo.length>0){\n  //   fromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\n  // }\n  // if(toOpenOrderInfo && toOpenOrderInfo.length>0){\n  //   tosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n  // }\n  if (fromOpenOrderInfo && fromOpenOrderInfo.length > 0) {\n    // if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\n    //   fromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\n    // }else{\n    fromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\n    // }\n  }\n  if (toOpenOrderInfo && toOpenOrderInfo.length > 0) {\n    // if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\n    //   tosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap);\n    // }else{\n    tosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n    // }\n    // opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n  }\n\n  let sumOfTotal = tosum + fromsum;\n  let noRecord = ((fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total == null) && (toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total == null)) ? true : false;\n\n  return (\n    <div>\n      <div className=\"openpositions\" style={{ margin: '20px 0px' }}>\n        <span className=\"p-text\">Open Positions</span>\n        <span className=\"icon-style\" onClick={toggle}>\n          {!isOpen ?\n            <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n            :\n            <i className=\"fa fa-angle-up\" aria-hidden=\"true\" />\n          }\n        </span>\n      </div>\n      <div>\n\n        <Collapse isOpen={isOpen}>\n          <Row>\n\n\n\n            {/* {Data.tablePage.items.map((item, index) =>\n                  <Col md={6} key={index}>\n                    <div className=\"card\">\n                      <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\n                      </div>\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                        <table className=\"table\">\n                          <tbody>\n                            <tr><td>{item.lot} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.commission} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.swap} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.total} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                      </div>\n                    </div>\n                  </Col>\n                )} */}\n\n            {/* {(allOpenRecord && allOpenRecord.length>0) && allOpenRecord.map((item, index) =>\n                    \n                    <Col md={6} key={index}>\n                            <div className=\"card\">\n                            <div className=\"header\">\n                              <h5 className={item.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{item.account.login}</h5>\n                              <h6 style={{fontSize:10}} className={'colorDarkBlue'}>({item.account.alias})</h6>\n                            </div>\n                            <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                                <table className=\"table\">\n                                <tbody>\n                                    <tr>\n                                        <td>\n                                            {item.order_type ===0 ? 'BUY ' : 'SELL ' } \n                                            {item.lots} {(item.lots>1) ? 'Lots':'Lot'}\n                                        </td>\n                                        <td className=\"td-actions text-right\"> {''}</td>\n                                    </tr>\n                                    <tr><td>Floating P/L </td>\n                                        <td className=\"td-actions text-right\">$ {item.profit}</td>\n                                    </tr>\n                                    <tr><td>Commission </td>\n                                        <td className=\"td-actions text-right\">$ {item.commission}</td>\n                                    </tr>\n                                    <tr><td>Swap </td>\n                                        <td className=\"td-actions text-right\">$ {item.swap}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Total </td>\n                                        <td className=\"td-actions text-right\">\n                                          $ {Math.floor(item.commission + item.swap + item.profit)}\n                                        </td>\n                                    </tr>\n                                </tbody>\n                                </table>\n                            </div>\n                            </div>\n                            </div>\n                        </Col>\n                )} */}\n            {/* {(allOpenRecord && allOpenRecord.length>0) &&\n                    <Row>\n                        <Col md={12}>\n                            <div>\n                            <div className=\"total-box\">\n                                <span className=\"text\">Sum of open positions</span>\n                                <span className=\"text\" style={{ float: 'right' }}>$ {sumOfTotal}</span>\n                            </div>\n                            </div>\n                        </Col>\n                    </Row>\n                } */}\n            {(noRecord) ?\n              <div className=\"text-center\">\n                No Record Found!\n                    </div>\n              :\n              <Fragment>\n                {(fromOpenOrderInfo && fromOpenOrderInfo.length > 0 && fromOpenOrderInfo[0].total !== null && (fromOpenOrderInfo && allOpenRecord.swapFrominfo)) ?\n\n                  <Col md={6}>\n                    <div className=\"card\">\n                      <div className=\"header\">\n                        <h5 className={allOpenRecord.id == '1' ? 'acntText colorDarkBlue' : 'acntText colorDarkBlue'}>{allOpenRecord.accountFromInfo[0].login}</h5>\n                        <h6 style={{ fontSize: 10 }} className={'colorDarkBlue'}>({allOpenRecord.accountFromInfo[0].alias})</h6>\n                      </div>\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                        <table className=\"table\">\n                          <tbody>\n                            <tr>\n                              <span className=\"symbolStyle\">{fromSymbols}</span>\n                            </tr>\n                            {/* Buy 10 Lot  */}\n                            <tr>\n                              <td>\n                                {fromOpenOrderInfo[0].order_type == 0 ? 'BUY ' : 'SELL '}\n                                {fromOpenOrderInfo[0].lots} {(fromOpenOrderInfo[0].lots > 1) ? 'Lots' : 'Lot'}\n                              </td>\n                              <td className=\"td-actions text-right\"> {''}</td>\n                            </tr>\n                            {/* <tr><td>{(fromOpenOrderInfo[0].lots>1) ? 'Lots':'Lot'}</td>\n                                        <td className=\"td-actions text-right\">{fromOpenOrderInfo[0].lots}</td>\n                                    </tr> */}\n                            <tr><td>Floating P/L </td>\n                              <td className=\"td-actions text-right\">$ {' '}\n                                {/* {fromOpenOrderInfo[0].profit} */}\n                                <NumberFormat value={fromOpenOrderInfo[0].profit} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                              </td>\n                            </tr>\n                            <tr><td>Commission </td>\n                              <td className=\"td-actions text-right\">$ {' '}\n                                {/* {fromOpenOrderInfo[0].commission} */}\n                                <NumberFormat value={fromOpenOrderInfo[0].commission} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                              </td>\n                            </tr>\n                            <tr><td>Swap </td>\n                              <td className=\"td-actions text-right\">$ {' '}\n                                {/* {fromOpenOrderInfo[0].swap} */}\n                                {allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length > 0 ?\n                                  <NumberFormat value={allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                  // (allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].swap) \n                                  :\n                                  <NumberFormat value={fromOpenOrderInfo[0].swap} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                  // fromOpenOrderInfo[0].swap\n                                }\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>Total </td>\n                              <td className=\"td-actions text-right\">$ {' '}\n                                {/* $ {Math.floor(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)} */}\n                                {/* {allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length > 0 ?\n                                  <NumberFormat value={(fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} /> */}\n                                  {/* // Math.floor(fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap) \n                                  // : */}\n                                  <NumberFormat value={(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                  {/* //  Math.floor(fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit)\n                                // } */}\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                      </div>\n                    </div>\n                  </Col>\n                  :\n                  <Col md={6}>\n                    <div className=\"card noRecordCol\"> No Record Found</div>\n                  </Col>\n                }\n\n                {(toOpenOrderInfo && toOpenOrderInfo.length > 0 && toOpenOrderInfo[0].total !== null && (toOpenOrderInfo && allOpenRecord.swapToinfo)) ?\n\n                  <Col md={6}>\n                    <div className=\"card\">\n                      <div className=\"header\">\n                        <h5 className={allOpenRecord.id == '1' ? 'acntText color2' : 'acntText color2'}>{allOpenRecord.accountToInfo[0].login}</h5>\n                        <h6 style={{ fontSize: 10 }} className={'color2'}>({allOpenRecord.accountToInfo[0].alias})</h6>\n                      </div>\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                        <table className=\"table\">\n                          <tbody>\n                            {/* Buy 10 Lot  */}\n                            <tr>\n                              <span className=\"symbolStyle\">{toSymbols}</span>\n                            </tr>\n                            <tr>\n                              <td>\n                                {toOpenOrderInfo[0].order_type == 0 ? 'BUY ' : 'SELL '}\n                                {toOpenOrderInfo[0].lots} {(toOpenOrderInfo[0].lots > 1) ? 'Lots' : 'Lot'}\n                              </td>\n                              <td className=\"td-actions text-right\"> {''}</td>\n                            </tr>\n                            {/* <tr><td>{(fromOpenOrderInfo[0].lots>1) ? 'Lots':'Lot'}</td>\n                                        <td className=\"td-actions text-right\">{fromOpenOrderInfo[0].lots}</td>\n                                    </tr> */}\n                            <tr><td>Floating P/L </td>\n                              <td className=\"td-actions text-right\">$ {' '}\n                                {/* {toOpenOrderInfo[0].profit} */}\n                                <NumberFormat value={toOpenOrderInfo[0].profit !== null ? toOpenOrderInfo[0].profit : 0} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                              </td>\n                            </tr>\n                            <tr><td>Commission </td>\n                              <td className=\"td-actions text-right\">$ {' '}\n                                {/* {toOpenOrderInfo[0].commission} */}\n                                <NumberFormat value={toOpenOrderInfo[0].commission !== null ? toOpenOrderInfo[0].commission : 0} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                              </td>\n                            </tr>\n                            <tr><td>Swap </td>\n                              <td className=\"td-actions text-right\">$ {' '}\n                                {/* {toOpenOrderInfo[0].swap} */}\n                                {/* {allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length > 0 ?\n                                  // (allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].swap) \n                                  <NumberFormat value={(allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                  : */}\n                                  <NumberFormat value={(toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                                  {/* // toOpenOrderInfo[0].swap\n                                // } */}\n                              </td>\n\n                            </tr>\n                            <tr>\n                              <td>Total </td>\n                              <td className=\"td-actions text-right\"> $ {' '}\n                                {/* {allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length > 0 ?\n                                  //  Math.floor(toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap)\n                                  <NumberFormat value={(toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit + toOpenOrderInfo[0].swap)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                                  : */}\n                                  <NumberFormat value={(toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit)} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n{/* \n                                  //  Math.floor(toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit)\n                                } */}\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                      </div>\n                    </div>\n                  </Col>\n                  :\n                  <Col md={6}>\n                    <div className=\"card noRecordCol\"> No Record Found</div>\n                  </Col>\n                }\n                {\n                  sumOfTotal != 0 &&\n                  <Row>\n                    <Col md={12}>\n                      <div>\n                        <div className=\"total-box\">\n                          <span className=\"text\">Sum of open positions</span>\n                          <span className=\"text\" style={{ float: 'right' }}>$ {' '}\n                            <NumberFormat value={sumOfTotal} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n                            {/* {sumOfTotal} */}\n                          </span>\n                        </div>\n                      </div>\n                    </Col>\n                  </Row>\n                }\n              </Fragment>\n            }\n          </Row>\n        </Collapse>\n      </div>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport { Collapse } from 'reactstrap';\nimport Select from 'react-select';\nimport { Grid, Row, Col } from \"react-bootstrap\";\n// import Data from './Data';\nimport NumberFormat from 'react-number-format';\nimport Closeposition from 'views/Closeposition';\nimport Openposition from 'views/Openposition';\n\n// import config from '../constant/config.js';\nimport config from '../constant/config.js';\nconst axios = require('axios');\n\n// import Card from \"components/Card/Card.jsx\";\n// import { thArray, tdArray } from \"variables/Variables.jsx\";\n\nclass TableList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      // isOpen: false,\n      allSymbols:[],\n      selectedOption:null,\n      allHistoryRecord:[],\n      allOpenRecord:[],\n      fromHistoryOrderInfo:[],\n      toHistoryOrderInfo:[],\n      commissionHistoryOrderInfo:[],\n      fromOpenOrderInfo:[],\n      toOpenOrderInfo:[],\n      filterlist:[],\n      allSymbols:[],\n      symbolsObj:[]\n    }\n\n  }\n  // toggle = () => {\n  //   this.setState({ isOpen: !this.state.isOpen })\n  // }\n  // componentWillMount() {\n  //   let self = this;\n      // axios.get(config.baseurl + '/accounts/fetchAllSymbol')\n      // .then(function (response) {\n      //   if (response.status == 200) {\n      //     self.setState({ allSymbols: response.data.rows })\n      //   }\n      // })\n\n      // axios.get(config.baseurl + '/filter/fetchfilterdata')\n      // .then(function (response) {\n      //   if (response.status == 200) {\n      //     self.setState({ filterlist: response.data.rows })\n      //   }\n      // })\n\n      // axios.get(config.baseurl + '/filter/fetchActivefilterdata')\n      // .then(function (response) {\n      //   if (response.status == 200) {\n      //     if(response.data.rows && response.data.rows.length>0){\n      //       // let symbolsObj = (response.data.rows[0].symbols).map(data => { return ({value:data, label:data})})\n      //         self.setState({ filterlist: response.data.rows, allSymbols: response.data.rows[0].symbols, \n      //         // selectedOption:symbolsObj\n      //        })\n      //     }\n      //   }\n      // });\n  // }\n\n  componentDidMount(){\n    let self = this;\n    axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\n    .then(function (response) {\n      // console.log(response.data, 'response.data his')\n      if (response.status == 200) {\n        // self.setState({ allHistoryRecord: response.data.rows })\n        self.setState({ \n          allHistoryRecord: response.data.rows ,\n          fromHistoryOrderInfo:response.data.fromHistoryOrderInfo,\n          toHistoryOrderInfo:response.data.toHistoryOrderInfo,\n          commissionHistoryOrderInfo:response.data.commissionHistoryOrderInfo\n        })\n      }\n    })\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\n    axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\n    .then(function (response) {\n      if (response.status == 200) {\n\n        // self.setState({ allOpenRecord: response.data.rows })\n        self.setState({ \n          allOpenRecord: response.data.rows ,\n          fromOpenOrderInfo:response.data.fromOpenOrderInfo,\n          toOpenOrderInfo:response.data.toOpenOrderInfo\n        })\n      }\n    })\n  }\n\n  fetchDataAccordingSymbols = (symbol) => {\n    let self = this;\n    let {startdateFrom, startdateTo,enddateFrom, enddateTo, to_account_id, from_account_id} = this.state.filterlist[0];\n    \n    let postData =  {\"to_account_id\":to_account_id, \"from_account_id\":from_account_id, \"startdateFrom\":startdateFrom, \"startdateTo\":startdateTo,\"enddateFrom\": enddateFrom, \"enddateTo\":enddateTo, \"symbol\":symbol}\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolHistory', {'symbol':symbol})\n    \n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolHistory', postData)\n    axios.get(config.baseurl + '/accounts/fetchAllHistoryTrade')\n    .then(function (response) {\n      // console.log(response.data, 'response.data his')\n      if (response.status == 200) {\n        // self.setState({ allHistoryRecord: response.data.rows })\n        self.setState({ \n          allHistoryRecord: response.data.rows ,\n          fromHistoryOrderInfo:response.data.fromHistoryOrderInfo,\n          toHistoryOrderInfo:response.data.toHistoryOrderInfo,\n          commissionHistoryOrderInfo:response.data.commissionHistoryOrderInfo\n\n        })\n      }\n    })\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', {'symbol':symbol})\n    // axios.post(config.baseurl + '/accounts/fetchAllBySymbolOpen', postData)\n    axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\n    .then(function (response) {\n      if (response.status == 200) {\n      // console.log(response.data, 'response.data open')\n\n        // self.setState({ allOpenRecord: response.data.rows })\n        self.setState({ \n          allOpenRecord: response.data.rows ,\n          fromOpenOrderInfo:response.data.fromOpenOrderInfo,\n          toOpenOrderInfo:response.data.toOpenOrderInfo\n        })\n      }\n    })\n  }\n\n  handleChange = selectedOption => {\n    this.setState({ selectedOption });\n    this.fetchDataAccordingSymbols(selectedOption.value);\n  };\n\n  renderSymbols = () => {\n    const { selectedOption, allSymbols } = this.state;\n    // let options = allSymbols.map(data => {\n    //   return {value:data.name, label:data.name};\n    // })\n    let options = allSymbols.map(data => {\n      return {value:data, label:data};\n    });\n   \n    return(\n      <Select\n        placeholder=\"Select Symbol...\"\n        className=\"S-text\"\n        // isMulti\n        value={selectedOption}\n        onChange={this.handleChange}\n        options={options}\n      />\n      )\n  }\n\n  render() {\n    const {allHistoryRecord, allOpenRecord, selectedOption, toOpenOrderInfo, fromOpenOrderInfo,fromHistoryOrderInfo,commissionHistoryOrderInfo ,toHistoryOrderInfo} = this.state;\n  //   const sumOfOpenTotal = allOpenRecord.reduce((current, data) => {\n  //     return (Math.floor(data.commission + data.swap + data.profit+ current));\n  // }, 0);\n\n  //   const sumOfHistoryTotal = allHistoryRecord.reduce((current, data) => {\n  //     return (data.profit + current);\n  // }, 0);\n    let uniqueSymbols=\"\";\n    if(allOpenRecord && Object.entries(allOpenRecord).length>0){\n      let fromSymbols = JSON.parse(allOpenRecord.from_symbols);\n      // fromSymbols = (fromSymbols).map(data => data).join(', ');\n      let toSymbols = JSON.parse(allOpenRecord.to_symbols);\n      let combineSymbols = fromSymbols.concat(toSymbols);\n      uniqueSymbols = combineSymbols.filter((item, i, ar) => ar.indexOf(item) === i);\n      uniqueSymbols = (uniqueSymbols).map(data => data).join(', ')\n    }\n    let fromsum=0; \n    let tosum=0;\n    // if(fromHistoryOrderInfo && commissionHistoryOrderInfo && fromHistoryOrderInfo.length>0){\n      if(fromHistoryOrderInfo && fromHistoryOrderInfo.length>0){\n      fromsum = (fromHistoryOrderInfo[0].commission + fromHistoryOrderInfo[0].swap + fromHistoryOrderInfo[0].profit);\n    }\n   \n    if(toHistoryOrderInfo && toHistoryOrderInfo.length>0){\n      tosum = (toHistoryOrderInfo[0].commission + toHistoryOrderInfo[0].swap + toHistoryOrderInfo[0].profit);\n    }\n\n    let sumOfHistoryTotal = tosum + fromsum;\n\n    let openfromsum=0; \n    let opentosum=0;\n    if((fromOpenOrderInfo && fromOpenOrderInfo.length>0 && fromOpenOrderInfo[0].total!=null) ){\n      // if(allOpenRecord.swapFrominfo && allOpenRecord.swapFrominfo.length>0){\n      //   openfromsum = (fromOpenOrderInfo[0].commission + allOpenRecord.swapFrominfo[0].open_value + fromOpenOrderInfo[0].profit + fromOpenOrderInfo[0].swap);\n      // }else{\n       openfromsum = (fromOpenOrderInfo[0].commission + fromOpenOrderInfo[0].swap + fromOpenOrderInfo[0].profit);\n      \n    }\n    if((toOpenOrderInfo && toOpenOrderInfo.length>0  && toOpenOrderInfo[0].total!=null) ){\n      // if(allOpenRecord.swapToinfo && allOpenRecord.swapToinfo.length>0){\n      //   opentosum = (toOpenOrderInfo[0].commission + allOpenRecord.swapToinfo[0].open_value + toOpenOrderInfo[0].profit+ toOpenOrderInfo[0].swap);\n      // }\n\n      // else{\n      //   opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n      // }\n      opentosum = (toOpenOrderInfo[0].commission + toOpenOrderInfo[0].swap + toOpenOrderInfo[0].profit);\n    }\n\n    let sumOfOpenTotal = opentosum + openfromsum;\n\n  //   console.log(opentosum, 'opentosum')\n  //   console.log(openfromsum, 'openfromsum')\n  //  console.log(sumOfHistoryTotal, \"sumOfHistoryTotal------\");\n  //  console.log(sumOfOpenTotal, \"sumOfOpenTotal-----\");\n  //  console.log(allOpenRecord, 'allOpenRecord')\n   \n\n\n    return (\n      <div className=\"content col-md-12 col-sm-6\">\n        <Grid fluid className=\"symbol-box\">\n          {/* <div className=\"symbol-box\"> */}\n          {/* <span className=\"S-text\">EURUSD</span> */}\n          {/* <div style={{ borderBottom: '2px solid grey' }}>\n            {this.renderSymbols()}\n\n          </div> */}\n          {/* <div style={{ margin: '20px 0px' }}>\n            <span className=\"p-text\">Open Positions</span>\n            <span className=\"icon-style\" onClick={this.toggle}>\n              <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\n            </span>\n          </div>\n          <div>\n\n            <Collapse isOpen={this.state.isOpen}>\n              <Row>\n                {Data.tablePage.items.map((item, index) =>\n                  <Col md={6} key={index}>\n                    <div className=\"card\">\n                      <div className=\"header\"><h5 className={item.id == '1' ? 'acntText colorRed' : 'acntText colorGreen'}>{item.textA}</h5>\n                      </div>\n                      <div className=\"content table-full-width\"><div className=\"table-responsive\">\n                        <table className=\"table\">\n                          <tbody>\n                            <tr><td>{item.lot} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.commission} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.swap} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                            <tr><td>{item.total} </td>\n                              <td className=\"td-actions text-right\"> {item.price}</td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                      </div>\n                    </div>\n                  </Col>\n                )}\n                <Row>\n                  <Col md={12}>\n                    <div>\n                      <div className=\"total-box\">\n                        <span className=\"text\">Sum of open position</span>\n                        <span className=\"text\" style={{ float: 'right' }}>$111111</span>\n                      </div>\n                    </div>\n                  </Col>\n                </Row>\n              </Row>\n            </Collapse>\n          </div> */}\n          {/* closed position */}\n          <Openposition \n            allOpenRecord={allOpenRecord}\n            toOpenOrderInfo={toOpenOrderInfo}\n            fromOpenOrderInfo={fromOpenOrderInfo}\n            />\n          <Closeposition \n            allHistoryRecord={allHistoryRecord}\n            fromHistoryOrderInfo={fromHistoryOrderInfo}\n            commissionHistoryOrderInfo={commissionHistoryOrderInfo}\n            toHistoryOrderInfo={toHistoryOrderInfo}\n            />\n          <Row>\n            \n            <Col md={12} sm={6}>\n              <div className={sumOfHistoryTotal + sumOfOpenTotal >= 0 ? \"summary-box\" : \"summary-box-red\"}>\n                \n                \n                {/* <span style={{fontWeight:'bold'}}>+150 USD</span> */}\n                {/* <p className=\"summary-text\" style={{fontWeight:600}}>Summary For {(selectedOption!==null) && selectedOption.value} (open + closed) </p>\n                <span style={{fontWeight:'bold'}}>{sumOfHistoryTotal + sumOfOpenTotal} $</span> */}\n                \n                <Col md={12} sm={12}>\n                  <div className=\"summary-text text-center\" style={{fontWeight:600,color:\"#797979\"}}>Summary For ({uniqueSymbols}) {allHistoryRecord.history_info && <span>+ Commission</span>} </div>\n                </Col>\n                <Col md={12} sm={12}>\n                  <div className=\"text-center\" style={{fontWeight:'bold',fontSize:\"18px\"}}>$ {' '}\n                  \n                  <NumberFormat value={allHistoryRecord.history_info !== undefined ?  sumOfHistoryTotal + sumOfOpenTotal + allHistoryRecord.history_info : sumOfHistoryTotal + sumOfOpenTotal } displayType={'text'} thousandSeparator={true} decimalScale={2} />\n                  \n                  \n                  {/* {sumOfHistoryTotal + sumOfOpenTotal} */}\n                  \n                  </div>\n                </Col>\n                \n                <div className=\"clearfix\"></div>\n              </div>\n            </Col>\n          </Row>\n          {/* </div> */}\n        </Grid>\n      </div>\n    );\n  }\n\n}\n\nexport default TableList;","import React, { Component } from 'react';\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\n// import SweetAlert from 'react-bootstrap-sweetalert';\nimport swal from 'sweetalert';\nimport config from '../constant/config.js';\nconst axios = require('axios');\n\nlet intervalSet;\nlet timerWaitInterval;\nlet timerWait = 100;\nclass Innerlogin extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loginForm: false,\n            setShow: false,\n            show: true,\n            login: '',\n            password: '',\n            broker: '',\n            alias: '',\n            alert: null,\n            persons: [],\n            shwPwd: false,\n            shwPwd: false,\n            shwLogin: false,\n            shwbroker: false,\n            accountlist: [],\n            editForm: false,\n            detailForm: false,\n            editData: [],\n            edituser: '',\n            editserver: '',\n            editalias: '',\n            editstatus: '',\n            id: '',\n            // tryAgainConnection: false,\n            currentAddLogin: null,\n            currentAddBroker: null,\n            currentAddAlias: null,\n            timerShow: false,\n            closebtn: true\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onUpdate = this.onUpdate.bind(this);\n\n    }\n    // delete alert\n    // deleteThisGoal() {\n    //     const getAlert = () => (\n    //         <SweetAlert\n    //             success\n    //             title=\"Woot!\"\n    //             onConfirm={() => this.hideAlert()}\n    //         >\n    //             Hello world!\n    //       </SweetAlert>\n    //     );\n\n    //     this.setState({\n    //         alert: getAlert()\n    //     });\n    // }\n    fectheAllAccount() {\n        let self = this;\n        axios.get(config.baseurl + '/users/allAccounts')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ accountlist: response.data.rows })\n                }\n            })\n            // console.log(response.status,\"accountlist\");\n    }\n    onChange(e) {\n\n        this.setState({ error: '' })\n        if (e.target.name === 'login') {\n            const re = /^[0-9\\b]+$/;\n            if (e.target.value === '' || re.test(e.target.value)) {\n                this.setState({ [e.target.name]: e.target.value })\n            }\n        }\n        else {\n\n            this.setState({ [e.target.name]: e.target.value.trim() })\n        }\n\n    }\n\n    checkUserConnected = (login, broker) => {\n        let self = this;\n        axios.post(config.baseurl + '/users/checkUserConnected', { login: login, broker: broker })\n            .then(function (response) {\n\n                if (response.status == 200) {\n                    if (response.data.connected) {\n                        self.setState({ currentAddLogin: null, currentAddBroker: null,  currentAddAlias: null });\n                        clearInterval(intervalSet);\n                        clearInterval(timerWaitInterval);\n                        self.setState({ timerShow: false });\n\n                        timerWait = 100\n                        // self.setState({ tryAgainConnection: false });\n                        self.setState({ loginForm: false })\n                        self.handleClose();\n                        self.fectheAllAccount()\n                        // swal({\n                        //     text: \"Connected\",\n                        //     timer: 2000,\n                        //     button: false\n                        // })\n                    }\n                } else {\n\n                }\n            })\n    }\n\n    setIntervalCustom = () => {\n        let self = this;\n        var name = \"Authorization Process Failed\";\n        var content = document.createElement('div');\n            content.innerHTML = ' <strong>'+ name +'</strong>';\n        \n           \n        timerWaitInterval = setInterval(function () {\n            timerWait--;\n            if (timerWait <= 0) {\n                self.setState({ currentAddLogin: null, currentAddBroker: null,currentAddAlias: null });\n                clearInterval(intervalSet);\n                clearInterval(timerWaitInterval);\n                self.setState({ timerShow: false });\n                self.setState({ loginForm: false })\n                self.setState({ closebtn: true })\n                timerWait = 100\n                swal({\n                \n\n                    content: content,\n                    timer: 2000,\n                    button: false\n                    \n                })\n            }\n\n            else {\n                self.setState({ timerShow: true });\n\n            }\n        }, 1000);\n    }\n\n \n    onSubmit(e) {\n        e.preventDefault();\n        const userdetail = {\n            login: this.state.login,\n            password: this.state.password,\n            broker: this.state.broker,\n            alias: this.state.alias\n\n\n        }\n        if (this.state.login == '') {\n            this.setState({ error: 'login' })\n        }\n        else if (this.state.password == '') {\n            this.setState({ error: 'password' })\n        }\n        else if (this.state.broker == '') {\n            this.setState({ error: 'broker' })\n        } else {\n            this.setState({ error: '' })\n        }\n        if (this.state.login !== '' && this.state.password !== '' && this.state.broker !== '') {\n\n            // {\n            //     swal({\n            //         text: \"User Already Connected\",\n            //         timer: 2000,\n            //         button: false\n            //     })\n            // }\n            let self = this;\n            self.setState({ closebtn: false })\n            axios.post(config.baseurl + '/users/addUser', userdetail)\n                .then(function (response) {\n                    if (response.data.status === true) {\n                        self.setIntervalCustom();\n                        self.fectheAllAccount();\n                        self.setState({ currentAddLogin: userdetail.login, currentAddBroker: userdetail.broker, currentAddAlias: userdetail.alias });\n                        intervalSet = setInterval(function () {\n                            self.checkUserConnected(userdetail.login, userdetail.broker)\n                        }, 5000);\n\n                    }\n                    if (response.data.status == 202) {\n                        swal({\n                            text: \"User doesn't exist\",\n                            timer: 2000,\n                            button: false\n                        })\n\n                    }\n                    if (response.data.status == '500') {\n                        swal({\n                            text: \"User Already Connected!\",\n                            timer: 2000,\n                            button: false\n                        })\n                        self.setState({ closebtn: true })\n\n\n                    }\n                    else if (response.status == 201) {\n                        swal({\n                            title: \"Done!\",\n                            text: response.data,\n                            // icon: \"{response.status == 200 ? 'warning ':'success'}\",\n                            timer: 2000,\n                            button: false\n                        })\n                    }\n\n                })\n                .catch(function (error) {\n                    self.handleClose();\n                });\n\n\n\n            /////////////////// redirect to dashboard\n            // login(user).then(res => {\n            //     if (res) {\n            //         this.props.history.push(`\\profile`)\n            //     }\n            // })\n        }\n    }\n    onUpdate(e) {\n        e.preventDefault();\n        const userdetail = {\n            id: this.state.id,\n            user: this.state.edituser,\n            broker: this.state.editserver,\n            alias: this.state.editalias\n        }\n        let self = this;\n        axios.post(config.baseurl + '/users/updateuser', userdetail)\n            .then(function (response) {\n                if (response.status == 200) {\n                    // self.setState({ accountlist: response.data.rows })\n                    self.fectheAllAccount();\n                    self.handleCloseEdit();\n                }\n            })\n            .catch(function (error) {\n            });\n    }\n    // checkValidUser = ()=> {\n    //     console.log(this.state,'loginnnnnnnnnnnnnnnnnnnnnnnn')\n    //     const userdetail = {\n    //         login: this.state.login,\n    //         password: this.state.password,\n    //         broker: this.state.broker,\n    //         alias: this.state.alias\n    //     }\n    //     axios.get(config.baseurl + '/accounts/matchUser',userdetail)\n    //     .then(function (response) {\n\n    //         if (response.status == 200) {\n    //             // alert(response.data)\n    //             swal({\n    //                 title: \"Done!\",\n    //                 text: response.data,\n    //                 // icon: \"{response.status == 200 ? 'warning ':'success'}\",\n    //                 timer: 2000,\n    //                 button: false\n    //             })\n\n    //         }\n    //         // console.log(response);\n    //     })\n    //     .catch(function (error) {\n    //         console.log(error);\n    //     });\n    // }\n    toogle = () => {\n        this.setState({ loginForm: !this.state.loginForm, })\n        this.setState({ login: '', password: '', broker: '', alias: '' })\n    }\n    \n    handleClose = () => {\n        this.setState({ loginForm: false })\n\n    }\n    handleCloseEdit = () => {\n        this.setState({ editForm: false })\n    }\n    handleCloseDetail = () => {\n        this.setState({ detailForm: false })\n    }\n    handleShow = () => {\n        this.setState({ setShow: true })\n    }\n\n    componentDidMount() {\n        this.fectheAllAccount();\n    \n    }\n    createTr = () => {\n        return this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => {\n            return (\n                <tr key={index}>\n                    <th scope=\"row\">{index + 1}</th>\n                    <td>{item.login}</td>\n                    <td>{item.broker}</td>\n                    <td>{item.alias}</td>\n                    <td style={{ fontWeight: 600 }}>{item.launched == 1 ? 'Connected' : 'Disconnected'}</td>\n                    <td>\n                        <a href=\"\" onClick={(e) => this.viewFilter(e, item)}><i className=\"fa fa-eye facolor\" aria-hidden=\"true\"></i></a>\n                        <a href=\"\" onClick={(e) => this.editFilter(e, item)}><i className=\"fa fa-pencil-square-o facolor\" aria-hidden=\"true\"></i></a>\n                        {/* <a href=\"\" onClick={(e)=> this.deleteFilter(e,item)}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></a> */}\n                    </td>\n                </tr>\n            )\n        })\n    }\n    editFilter(e, data) {\n        e.preventDefault();\n        this.setState({ editForm: true, editData: data, id: data.id, edituser: data.login, editserver: data.broker, editalias: data.alias })\n    }\n    editAlias(e) {\n        this.setState({ editalias: e.target.value })\n    }\n    viewFilter(e, data) {\n        e.preventDefault();\n        this.setState({ detailForm: true, edituser: data.login, editserver: data.broker, editalias: data.alias, editstatus: data.status })\n    }\n    render() {\n\n        return (\n            <div className=\"content\">\n                <Grid fluid>\n                    <Row>\n                        <Col md={12} sm={6}>\n                            <div className=\"terminal-box\">\n                                <span className=\"terminal-text\">Terminal Accounts</span>\n                                {/* <div style={{ padding: '20px' }}>\n                                    <a\n                                        onClick={() => this.deleteThisGoal()}\n                                        className='btn btn-danger'\n                                    >\n                                        <i className=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete Goal\n                                     </a>\n                                    {this.state.alert}\n                                </div> */}\n                            </div>\n                            <button className=\"pull-right add-button\" onClick={this.toogle}>Add New</button>\n\n                            {this.state.loginForm &&\n                                <Modal show={this.state.show} onHide={this.state.closebtn ? this.handleClose : () => console.log('error')} >\n                                    {/* <Modal.Header closeButton>\n                                        <Modal.Title>Log In</Modal.Title>\n                                    </Modal.Header> */}\n                                    <Modal.Body>\n                                        <div className=\"form-box\">\n                                            <Modal.Header closeButton={this.state.closebtn?true:false}>\n                                                <Modal.Title className=\"text-center\"><b>Log In</b></Modal.Title>\n                                            </Modal.Header>\n                                            <form style={{ marginTop: '20px' }} onSubmit={this.onSubmit}>\n                                                <label >User Name</label>\n                                                <input type='text'\n                                                    className=\"Itext\" placeholder=\"Enter Username\" name=\"login\" value={this.state.login} onChange={this.onChange} disabled={this.state.currentAddLogin ? true : false}\n                                                // onKeyUp={this.checkValidUser}\n                                                ></input>\n\n\n                                                {(this.state.error == \"login\") &&\n                                                    <span style={{ color: 'red', fontSize: '13px' }}>Please enter Username </span>\n                                                }\n                                                <br></br>\n                                                <label className=\"labeAdjust\">Password</label>\n                                                <input className=\"Itext\" placeholder=\"Password\" name=\"password\" type=\"password\" value={this.state.password} onChange={this.onChange} disabled={this.state.currentAddLogin ? true : false}></input>\n                                                {(this.state.error == \"password\") &&\n                                                    <span style={{ color: 'red', fontSize: '13px' }}>Please enter Password </span>\n                                                }\n                                                <br></br>\n                                                <label className=\"labeAdjust\">Server</label>\n                                                <input className=\"Itext\" name=\"broker\" placeholder=\"Server\" value={this.state.broker} onChange={this.onChange} disabled={this.state.currentAddBroker ? true : false}></input>\n                                                {(this.state.error == \"broker\") &&\n                                                    <span style={{ color: 'red', fontSize: '13px' }}>Please enter Server </span>\n                                                }\n                                                <br></br>\n                                                <label className=\"labeAdjust\">Alias</label>\n                                                <input className=\"Itext\" placeholder=\"Alias\" value={this.state.alias} onChange={this.onChange} name=\"alias\" disabled={this.state.currentAddAlias ? true : false}></input>\n                                                {this.state.timerShow &&\n                                                    <p>\n                                                        Connecting to server... {timerWait} seconds remains\n                                                </p>\n                                                }\n                                                <div className=\" topadjust clearfix\">\n                                                    {/* {this.state.tryAgainConnection === false ? */}\n                                                        {/* ( */}\n                                                            {this.state.timerShow == false &&\n\n                                                            <button type=\"submit\" className=\"save\">Submit</button>}\n                                                        {/* ) */}\n                                                    {/* //     :\n                                                    //     (this.state.timerShow == false && <div ></div>)\n                                                    // } */}\n                                                </div>\n                                            </form>\n                                        </div>\n\n                                    </Modal.Body>\n                                    {/* <Modal.Footer>\n                                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                                            Close\n                                  </Button>\n                                        \n                                    </Modal.Footer> */}\n                                </Modal>\n\n                            }\n                        </Col>\n                    </Row>\n                    <div style={{ background: '#ffffff' }}>\n                        <Row>\n                            <Col md={12}>\n                                <div style={{ padding: '10px' }}>\n                                    <table className=\"table table-striped\">\n                                        <thead>\n                                            <tr>\n                                                <th scope=\"col\">Sr.No.</th>\n                                                <th scope=\"col\">User Name</th>\n                                                <th scope=\"col\">Server</th>\n                                                <th scope=\"col\">Alias</th>\n                                                <th scope=\"col\">Status</th>\n                                                <th scope=\"col\">Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {/* {this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => { */}\n                                            {/* // console.log(\"hhhhhhhhhhh\") */}\n                                            {this.createTr()}\n                                            {/* })} */}\n                                            {/* <tr>\n                                                <th scope=\"row\">2</th>\n                                                <td>Jacob</td>\n                                                <td>Thornton</td>\n                                                <td>5.1.2.9</td>\n                                                <td>Connected</td>\n                                            </tr>\n                                            <tr>\n                                                <th scope=\"row\">3</th>\n                                                <td>Larry</td>\n                                                <td>the Bird</td>\n                                                <td>ab@123</td>\n                                                <td>Connected</td>\n                                            </tr> */}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </Col>\n                            <div className=\"centerbtn\">\n                            </div>\n\n                        </Row>\n                    </div>\n\n                </Grid>\n\n                {this.state.editForm &&\n                    <Modal show={this.state.show} onHide={this.handleCloseEdit}>\n                        {/* <Modal.Header closeButton>\n                                        <Modal.Title>Log In</Modal.Title>\n                                    </Modal.Header> */}\n                        <Modal.Body>\n                            <div className=\"form-box\">\n                                <Modal.Header closeButton>\n                                    <Modal.Title className=\"text-center\"><b>Edit</b></Modal.Title>\n                                </Modal.Header>\n                                <form style={{ marginTop: '20px' }} onSubmit={this.onUpdate}>\n                                    <label>USER</label>\n                                    <input className=\"Itext\" disabled name=\"broker\" placeholder=\"Server\" value={this.state.edituser} ></input>\n\n                                    <label>Server</label>\n                                    <input className=\"Itext\" disabled name=\"broker\" placeholder=\"Server\" value={this.state.editserver} ></input>\n                                    <label>Alias</label>\n                                    <input className=\"Itext\" placeholder=\"Alias\" value={this.state.editalias} name=\"alias\" onChange={(e) => this.editAlias(e)}></input>\n                                    <div className=\"clearfix\">\n                                        <button type=\"submit\" className=\"save\">Update</button>\n                                    </div>\n                                </form>\n                            </div>\n\n                        </Modal.Body>\n                        {/* <Modal.Footer>\n                                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                                            Close\n                                  </Button>\n                                        \n                                    </Modal.Footer> */}\n                    </Modal>\n\n                }\n\n                {this.state.detailForm &&\n                    <Modal show={this.state.show} onHide={this.handleCloseDetail}>\n                        {/* <Modal.Header closeButton>\n                                        <Modal.Title>Log In</Modal.Title>\n                                    </Modal.Header> */}\n                        <Modal.Body>\n                            <div className=\"form-box\">\n                                <Modal.Header closeButton>\n                                    <Modal.Title className=\"text-center\"><b>Details</b></Modal.Title>\n                                </Modal.Header>\n                                <div className=\"detail_div\">\n                                    <table>\n                                        <tr>\n                                            <td><label>User Name</label></td>\n                                            <td><label>{this.state.edituser}</label></td>\n                                        </tr>\n                                        <tr>\n                                            <td><label>Server</label></td>\n                                            <td><label>{this.state.editserver}</label></td>\n                                        </tr>\n                                        <tr>\n                                            <td><label>Alias</label></td>\n                                            <td><label>{this.state.editalias}</label></td>\n                                        </tr>\n                                        <tr>\n                                            <td><label>Status</label></td>\n                                            <td><label>{this.state.editstatus == 1 ? 'Connected' : 'Disconnected'}</label></td>\n                                        </tr>\n                                    </table>\n                                </div>\n                            </div>\n\n                        </Modal.Body>\n                    </Modal>\n\n                }\n\n\n            </div >\n        );\n    }\n}\n\nexport default Innerlogin;","import React, { Component } from \"react\";\n// import ChartistGraph from \"react-chartist\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport TableList from '../views/TableList';\n// import { Card } from \"components/Card/Card.jsx\";\n// import { StatsCard } from \"components/StatsCard/StatsCard.jsx\";\n// import { Tasks } from \"components/Tasks/Tasks.jsx\";\nimport NumberFormat from 'react-number-format';\nimport Data from './Data';\nimport Moment from 'react-moment';\n\n// import {\n//   dataPie,\n//   legendPie,\n//   dataSales,\n//   optionsSales,\n//   responsiveSales,\n//   legendSales,\n//   dataBar,\n//   optionsBar,\n//   responsiveBar,\n//   legendBar\n// } from \"variables/Variables.jsx\";\nimport config from '../constant/config.js';\nconst axios = require('axios');\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      details: [],\n      accountlist: [],\n      persons: [],\n      filterlist: [],\n      formData: [],\n      errorMassege: false,\n      error: '',\n      dateTime:''\n      // allSymbols:[],\n      // symbolsObj:[]\n    }\n  }\n  createLegend(json) {\n    var legend = [];\n    for (var i = 0; i < json[\"names\"].length; i++) {\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\n      legend.push(<i className={type} key={i} />);\n      legend.push(\" \");\n      legend.push(json[\"names\"][i]);\n    }\n    return legend;\n  }\n\n  getAllAccounts = () => {\n    let self = this;\n    axios.get(config.baseurl + '/accounts/fetchAllAccounts')\n    .then(function (response) {\n      if (response.status == 200) {\n        self.setState({ accountlist: response.data.rows })\n      }\n    });\n  }\n\n  fetchActivefilterData = () => {\n    let self = this;\n    axios.get(config.baseurl + '/filter/fetchActivefilterdata')\n      .then(function (response) {\n        if (response.status == 200) {\n          self.setState({ filterlist: response.data.rows })\n\n          if (self.state.filterlist.length == 0) {\n            self.setState({ errorMassege: true })\n          }\n        }\n      });\n  }\n\n\n  fetchAllOpenTrade = () => {\n    let self = this;\n    axios.get(config.baseurl + '/accounts/fetchLastUpdatedTime')\n      .then(function (response) {\n        if (response.status == 200) {\n\n          self.setState({ dateTime: response.data.filteredInfoTime })\n        }\n      });\n  }\n\n\n  componentWillMount() {\n    this.getAllAccounts();\n    this.fetchActivefilterData();\n    this.fetchAllOpenTrade();\n    // axios.get(config.baseurl + '/filter/fetchfilterdata')\n    // .then(function (response) {\n    //   console.log(response.data,'hghghjghghj')\n    //   if (response.status == 200) {\n    //     // self.setState({ formData: response.data.rows })\n    //     // console.log(formData);\n\n    //     response.data.rows.map((item, index) => {\n    //       console.log(item,'item');\n    //         if (item.status==1){\n    //           self.setState({errorMassege: false},()=>{\n    //             console.log(self.state, \"display\");\n\n    //           })\n    //           // console.log(self.state.errorMassege);\n\n\n    //         }\n\n    //     })\n    //   }\n    // });\n    // axios.get(config.baseurl + '/filter/fetchfilterdata')\n    // .then(function (response) {\n    //   if (response.status == 200) {\n    //     self.setState({ filterlist: response.data.rows })\n    //   }\n    // })\n\n    // axios.get(config.baseurl + '/filter/fetchActivefilterdata')\n    // .then(function (response) {\n    //   if (response.status == 200) {\n\n    //     if(response.data.rows && response.data.rows.length>0){\n    //       let symbolsObj = (response.data.rows[0].symbols).map(data => {\n    //         return ({value:data, label:data})\n    //       })\n    //       self.setState({ filterlist: response.data.rows, allSymbols: response.data.rows[0].symbols, symbolsObj:symbolsObj })\n    //     }\n    //   }\n    // });\n    \n  }\n\n  showData = (accountDetailValue) => {\n    \n\n    //    if (this.state.accountDetailValue == null || this.state.accountDetailValue == '') {\n    //     this.setState({ error: 'accountDetailValue' })\n    //     return\n    //  }\n    //  else{\n    //     this.setState({error:''})\n    // }\n    // return this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => {\n    //   if(accountDetailValue==='margin_level'){\n    //       return (\n    //         <td className={index !== (this.state.accountlist.length - 1) ? 'tdClr2 tdClr' : 'tdClr2'} key={index}>\n    //         {item.accounts_details[0][accountDetailValue]} %</td>\n    //       )\n    //   }\n    //   return (\n    //     <td className={index !== (this.state.accountlist.length - 1) ? 'tdClr2 tdClr' : 'tdClr2'} key={index}>\n    //     {item.accounts_details[0].currency == 'USD' ? '$' : ''} {item.accounts_details[0][accountDetailValue]}</td>\n    //   )\n    // })\n    return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\n      if (accountDetailValue === 'margin_level') {\n        return (\n          <>\n            <td className=\"tdClr2 tdClr\" key={index}> \n              <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true}  decimalScale={2} /> %\n            </td>\n            <td className=\"tdClr2\" key={index}>\n              {/* {item.accountToInfo[0].accounts_details[0][accountDetailValue]} % */}\n              <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true}  decimalScale={2} /> %\n            </td>\n          </>\n        )\n      }\n      if (item.accountFromInfo.length > 0) {\n        return (\n          <>\n            <td className=\"tdClr2 tdClr\" key={index}>\n              {item.accountFromInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''}  {' '}\n              <NumberFormat value={item.accountFromInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true}  decimalScale={2} />\n            </td>\n\n            <td className=\"tdClr2\" key={index}>\n              {item.accountToInfo[0].accounts_details[0].currency == 'USD' ? '$' : ''} {' '}\n              {/* {item.accountToInfo[0].accounts_details[0][accountDetailValue]} */}\n              <NumberFormat value={item.accountToInfo[0].accounts_details[0][accountDetailValue]} displayType={'text'} thousandSeparator={true} decimalScale={2} />\n\n            </td>\n          </>\n        )\n\n      }\n\n    })\n  }\n  tableHeader = () => {\n\n    // return this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => {\n    //   return (\n    //     <th key={index} className={item.accounts_details[0].account_id == 1 && index !== (this.state.accountlist.length - 1) ? 'bText colorDarkBlue text-center tdClr2 tdClr' : 'bText colorDarkBlue text-center tdClr2'}>\n    //       <span>\n    //         {item.login}\n    //       </span>\n    //     <div className=\"colorDarkBlue\" style={{fontSize:10}}> \n    //       ({(item.alias!=null) ? item.alias : '-'})\n    //     </div>\n    //     </th>\n\n    //   )\n    // }\n    // )\n    return this.state.filterlist.length > 0 && this.state.filterlist.map((item, index) => {\n      return (\n        <>\n          <th key={index} className=\"bText colorDarkBlue text-center tdClr2 tdClr\">\n            <span>\n              {item.accountFromInfo[0].login}\n            </span>\n            <div className=\"colorDarkBlue\" style={{ fontSize: 10 }}>\n              ({(item.accountFromInfo[0].alias != null) ? item.accountFromInfo[0].alias : '-'})\n          </div>\n          </th>\n          <th key={index} className=\"bText color2 text-center tdClr2\">\n            <span>\n              {item.accountToInfo[0].login}\n            </span>\n            <div className=\"color2\" style={{ fontSize: 10 }}>\n              ({(item.accountToInfo[0].alias != null) ? item.accountToInfo[0].alias : '-'})\n          </div>\n          </th>\n        </>\n\n      )\n\n    })\n  }\n\n  render() {\n    const dateToFormat = new Date();\n    return (\n\n      <div className=\"\">\n      {this.state.errorMassege == true &&\n        <div className=\"popup\">\n\n          <div class=\"card w-75 \">\n            <div class=\"card-body topmargin\">\n            <div class=\" card-text popuptext\" role=\"alert\">Please Select Filters To Continue...</div>\n            </div>\n          </div>\n        </div>}\n\n        <div className=\"content\">\n        {this.state.errorMassege != true &&\n        \n          <Grid fluid>\n            <Row>\n          <div className=\"lastUpdate\">\n             <span> Last Updated :  </span>\n            {this.state.dateTime}  </div>\n              <Col md={12} sm={6}>\n\n                <div className=\"terminal-box\">\n                  {(this.state.errorMassege) && <p style={{ color: 'red', fontSize: '10px' }}>Please Select Any Account</p>}\n                  <span className=\"terminal-text\">Terminal Statistics</span>\n                </div>\n              </Col>\n            </Row>\n            <Row style={{ margin: '20px 0px' }}>\n\n              <Row>\n                {Data.dashBoardPage.items.map((item, index) =>\n\n                  <Col md={4} sm={6} key={index}>\n                    <div style={{ margin: '30px 0px' }} className=\"text-center\">\n                      <span className=\"bText\">{item.title}</span>\n                    </div>\n                    <div className=\"balance-box Pmargin\"\n                    // className={item.id == '1' ? 'balance-box' : item.id == '2' ?\n                    //   'balance-box Pmargin' : item.id == '3' ? 'balance-box equity-box' :\n                    //     item.id == '4' ? 'balance-box Fmargin' : item.id == '5' ? 'balance-box floating' : 'balance-box  margin-box'}\n                    >\n                      <div className=\"content\">\n                        <div className=\"table-responsive\">\n\n                          <table className=\"table  text-center\">\n\n                            <tbody>\n                              <tr>\n                                {this.tableHeader()}\n                              </tr>\n                              <tr>\n                                {item.title == 'Balance' && this.showData('balance')}\n                                {item.title == 'Equity' && this.showData('equity')}\n                                {item.title == 'Margin' && this.showData('margin')}\n                                {item.title == 'Free Margin' && this.showData('free_margin')}\n                                {item.title == 'Margin %' && this.showData('margin_level')}\n                                {item.title == 'Floating P/L' && this.showData('profit')}\n                              </tr>\n                            </tbody>\n                          </table>\n\n                        </div>\n                      </div>\n                    </div>\n                  </Col>\n\n                )}\n              </Row>\n\n              {/* \n            <Row>\n              <Col md={4}>\n                <Row>\n                  <Col md={6}>\n                    <Row>\n                      <Col md={2}>\n                        <div>\n                          <div>\n                            <div>\n                              <span>Logn in</span>\n                            </div>\n                            <div>\n                              <span>Balance</span>\n                            </div>\n                          </div>\n                        </div>\n                      </Col>\n                      <Col md={2}>\n                        <div>\n                          <div>\n                            <div>\n                              <span>Logn in</span>\n                            </div>\n                            <div>\n                              <span>Balance</span>\n                            </div>\n                          </div>\n                        </div>\n                      </Col>\n                      <Col md={2}>\n                        <div>\n                          <div>\n                            <div>\n                              <span>Logn in</span>\n                            </div>\n                            <div>\n                              <span>Balance</span>\n                            </div>\n                          </div>\n                        </div>\n                      </Col>\n                    </Row>\n\n                  </Col>\n                </Row>\n              </Col>\n            </Row> */}\n\n            </Row>\n            <Row>\n              <Col md={12} sm={6}>\n                <div className=\"terminal-box\">\n                  <span className=\"terminal-text\">Statistics Per Symbol</span>\n                </div>\n              </Col>\n            </Row>\n            <Row>\n              <TableList />\n            </Row>\n          </Grid>\n        }\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\nimport TagsInput from 'react-tagsinput'\n\nimport DatePicker from \"react-datepicker\";\nimport config from '../../constant/config.js';\n\nimport Select from 'react-select'\nimport { createLogicalAnd } from 'typescript';\nconst axios = require('axios');\n\nclass FilterEdite extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedAccountOption: null,\n            selectedSymbolOption: null,\n            selectedSymbolOptionTo: null,\n            selectedAccountOptionTo: null,\n            selectedCommissionAccount: null,\n            startDate: null,\n            endDate: null,\n            startDateTo: null,\n            endDateTo: null,\n            allAccounts: [],\n            allSymbols: [],\n            profileName: '',\n            showCommission: false,\n            // showAddCommission: false,\n            id: '',\n            error: '',\n            autoSyncClose: false,\n            magicNumber: [],\n            magicNumberTo: [],\n            tags: [],\n            include_exclude_status: '',\n            showMagicNumber: false,\n            showMagicNumberTo: false,\n            exclude: false,\n            include: false,\n            excludeTo: false,\n            includeTo: false,\n\n\n        };\n\n\n    }\n    componentWillMount() {\n\n        let self = this;\n        axios.get(config.baseurl + '/accounts/fetchAllAccounts')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ allAccounts: response.data.rows })\n                }\n            })\n        axios.get(config.baseurl + '/accounts/fetchAllSymbol')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ allSymbols: response.data.rows })\n                }\n            })\n    }\n    componentDidMount() {\n\n        let abc = this.props.data;\n        if (abc) {\n\n\n            let from_symbol = JSON.parse(abc.from_symbols);\n            let to_symbol = JSON.parse(abc.to_symbols);\n\n            let all_from_symbols = from_symbol.map(data => { return ({ value: data, label: data }) });\n            let all_to_symbols = to_symbol.map(data => { return ({ value: data, label: data }) });\n\n            from_symbol = from_symbol.join(', ');\n            to_symbol = to_symbol.join(', ');\n\n            // if(this.state.selectedCommissionAccount !== null ){\n            //  this.setState({selectedCommissionAccount: null})\n            // }else\n            this.setState({\n                id: abc.id,\n                profileName: abc.profile_name,\n                selectedAccountOption: ({ value: abc.accountFromInfo[0].id, label: abc.accountFromInfo[0].login }),\n                selectedAccountOptionTo: ({ value: abc.accountToInfo[0].id, label: abc.accountToInfo[0].login }),\n                // showAddCommission: abc.commission_acount_id !== 0 ? true : false,\n                showCommission: abc.commission_acount_id !== 0 ? true : false,\n                selectedCommissionAccount: abc.commission_acount_id !== 0 ? ({ value: abc.accountCommissionInfo[0].id, label: abc.accountCommissionInfo[0].login }) : null,\n                showMagicNumber: abc.from_include_exclude_status !== 0 ? true : false,\n                showMagicNumberTo: abc.to_include_exclude_status !== 0 ? true : false,\n                // magicNumber: abc.from_magic_number !== \"0\" ? JSON.parse(abc.from_magic_number) : [],\n                // magicNumberTo: abc.to_magic_number !== \"0\" ? JSON.parse(abc.to_magic_number) : [],\n                magicNumber: abc.from_magic_number != \"0\" && abc.from_magic_number != \"\" ? JSON.parse(abc.from_magic_number) : [],\n                magicNumberTo: abc.to_magic_number != \"0\" && abc.to_magic_number != \"\" ? JSON.parse(abc.to_magic_number) : [],\n                include: abc.from_include_exclude_status === 1 ? true : false,\n                exclude: abc.from_include_exclude_status === 2 ? true : false,\n                includeTo: abc.to_include_exclude_status === 1 ? true : false,\n                excludeTo: abc.to_include_exclude_status === 2 ? true : false,\n                selectedSymbolOption: all_from_symbols,\n                autoSyncClose: abc.auto_close == 1 ? true : false,\n                selectedSymbolOptionTo: all_to_symbols,\n                startDate: new Date(abc.startdateFrom),\n                startDateTo: new Date(abc.startdateTo),\n                endDate: (abc.enddateFrom != null) ? new Date(abc.enddateFrom) : '',\n                endDateTo: (abc.enddateTo != null) ? new Date(abc.enddateTo) : '',\n                //     endDate: (abc.enddateFrom!=null) ? new Date(abc.enddateFrom) : new Date(),\n                //     endDateTo: (abc.enddateTo!=null) ? new Date(abc.enddateTo) : new Date(),\n            })\n\n\n        }\n\n\n\n    }\n\n    handleDropdownChange = (e) => {\n        this.setState({ selectValue: e.target.value });\n    }\n    handleChangeDate = date => {\n        this.setState({\n            startDate: date\n        });\n    }\n    handleEndDate = date => {\n\n        if (date < this.state.startDate && date != null) {\n            this.setState({ error: 'enddate', endDate: \"\" })\n            return\n        }\n        this.setState({\n            error: '',\n            endDate: date,\n        });\n    }\n    handleChangeDateTo = date => {\n        this.setState({\n            startDateTo: date\n        });\n    }\n    handleEndDateTo = date => {\n        if (date < this.state.startDateTo && date != null) {\n            this.setState({ error: 'enddateto', endDateTo: \"\" })\n            return\n        }\n        this.setState({\n            error: '',\n            endDateTo: date,\n        });\n    }\n    handleChange = (event) => {\n        this.setState({ value: Array.from(event.target.selectedOptions, (item) => item.value) });\n    }\n\n    handeChangeShowCommission = () => {\n        this.setState({ showCommission: !this.state.showCommission })\n    }\n    handleChangeCommissionAccount = selectedCommissionAccount => {\n        this.setState({ selectedCommissionAccount });\n    };\n\n    renderCommissionAccount = () => {\n        const { selectedCommissionAccount, allAccounts } = this.state;\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account...\"\n                value={selectedCommissionAccount}\n                onChange={this.handleChangeCommissionAccount}\n                options={options}\n            />\n        )\n    }\n\n\n\n    renderAccountSelect = () => {\n        const { selectedAccountOption, allAccounts } = this.state;\n\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account...\"\n                value={selectedAccountOption}\n                onChange={this.handleChangeAccount} l\n                options={options}\n                rules={{ required: 'Please select an option' }}\n            />\n        )\n    }\n\n    handleChangeAccountTo = selectedAccountOptionTo => {\n        if (selectedAccountOptionTo.label == this.state.selectedAccountOption.label) {\n            this.setState({ error: 'err' })\n        } else\n            this.setState({ selectedAccountOptionTo });\n    };\n    renderAccountSelectTo = () => {\n        const { selectedAccountOptionTo, allAccounts } = this.state;\n\n        let options = allAccounts.map(data => {\n            return { value: data.id, label: data.login };\n        })\n        return (\n            <Select\n                placeholder=\"Select Account...\"\n                value={selectedAccountOptionTo}\n                onChange={this.handleChangeAccountTo}\n                options={options}\n            />\n        )\n    }\n\n    handleChangeAccount = selectedAccountOption => {\n        this.setState({ selectedAccountOption });\n    };\n    handleChangeSymbol = selectedSymbolOption => {\n        this.setState({ selectedSymbolOption });\n    };\n    renderSymbolSelect = () => {\n        const { selectedSymbolOption, allSymbols } = this.state;\n        let options = allSymbols.map(data => {\n            return { value: data.name, label: data.name };\n        })\n        return (\n            <Select\n                placeholder=\"Select Symbol...\"\n                value={selectedSymbolOption}\n                isMulti\n                onChange={this.handleChangeSymbol}\n                options={options}\n            />\n        )\n    }\n    handleChangeSymbolTo = selectedSymbolOptionTo => {\n        this.setState({ selectedSymbolOptionTo });\n    };\n    renderSymbolSelectTo = () => {\n        const { selectedSymbolOptionTo, allSymbols } = this.state;\n        let options = allSymbols.map(data => {\n            return { value: data.name, label: data.name };\n        })\n        return (\n            <Select\n                placeholder=\"Select Symbol...\"\n                value={selectedSymbolOptionTo}\n                isMulti\n                onChange={this.handleChangeSymbolTo}\n                options={options}\n            />\n        )\n    }\n\n    handleChangeMagicNumber = (magicNumber) => {\n\n\n        // if(re.test(tags))\n        this.setState({ magicNumber })\n    }\n    handleChangeMagicNumberTo = (magicNumberTo) => {\n\n\n        // if(re.test(tags))\n        this.setState({ magicNumberTo })\n    }\n    changeIncludeDefaultProperty = () => {\n\n        this.setState({ include: !this.state.include, exclude: false }, () => {\n\n        })\n        if (!this.state.include == true) {\n            this.setState({ showMagicNumber: true })\n        } else if (this.state.include == true) {\n            this.setState({ showMagicNumber: false })\n\n        }\n\n\n    }\n    changeExcludeDefaultProperty = () => {\n        this.setState({ exclude: !this.state.exclude, include: false })\n        if (!this.state.exclude == true) {\n            this.setState({ showMagicNumber: true })\n        } else if (this.state.exclude == true) {\n            this.setState({ showMagicNumber: false })\n\n        }\n\n    }\n\n    changeIncludeDefaultPropertyTo = () => {\n        this.setState({ includeTo: !this.state.includeTo, excludeTo: false })\n        if (!this.state.includeTo == true) {\n            this.setState({ showMagicNumberTo: true })\n        } else if (this.state.includeTo == true) {\n            this.setState({ showMagicNumberTo: false })\n\n        }\n    }\n    changeExcludeDefaultPropertyTo = () => {\n        this.setState({ excludeTo: !this.state.excludeTo, includeTo: false })\n        if (!this.state.excludeTo == true) {\n            this.setState({ showMagicNumberTo: true })\n        } else if (this.state.excludeTo == true) {\n            this.setState({ showMagicNumberTo: false })\n\n        }\n\n    }\n    handleprofileName(e) {\n\n        this.setState({ profileName: e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1), error: '' })\n\n    }\n    handleChangeAutoSync(e) {\n        this.setState({ autoSyncClose: !this.state.autoSyncClose }, () => {\n        })\n    }\n    formDataSubmit(e) {\n        e.preventDefault();\n\n        let from_status = this.state.include === true && this.state.exclude === false ? 1 : this.state.exclude === true && this.state.include === false ? 2 : 0\n\n        let to_status = this.state.includeTo === true && this.state.excludeTo === false ? 1 : this.state.excludeTo === true && this.state.includeTo === false ? 2 : 0\n        let self = this\n\n        if (this.state.profileName == null || this.state.profileName == '') {\n            this.setState({ error: 'profileName' })\n            return\n        }\n        else if (this.state.selectedAccountOption == null || this.state.selectedAccountOption == '') {\n            this.setState({ error: 'accountoption' })\n            return\n        } else if (this.state.startDate == null || this.state.startDate == '') {\n            this.setState({ error: 'startdate' })\n            return\n        } else if (this.state.selectedSymbolOption == null || this.state.selectedSymbolOption == '') {\n            this.setState({ error: 'symbolselect' })\n            return\n        }\n        else if (this.state.selectedAccountOptionTo == null || this.state.selectedAccountOptionTo == '') {\n            this.setState({ error: 'accountoptionto' })\n            return\n        } else if (this.state.startDateTo == null || this.state.startDateTo == '') {\n            this.setState({ error: 'startDateTo' })\n            return\n        }\n        else if (this.state.selectedSymbolOptionTo == null || this.state.selectedSymbolOptionTo == '') {\n            this.setState({ error: 'selectedSymbolOptionTo' })\n            return\n        }\n        else {\n            this.setState({ error: '' })\n        }\n        let fromSymbol = this.state.selectedSymbolOption;\n        let toSymbol = this.state.selectedSymbolOptionTo;\n\n        let symbolFrom = fromSymbol.map((data) => data.value)\n        let symbolto = toSymbol.map((data) => data.value)\n\n        let Data = {\n            id: this.state.id,\n            profile_name: this.state.profileName,\n            from_account_id: this.state.selectedAccountOption.value,\n            to_account_id: this.state.selectedAccountOptionTo.value,\n            commission_acount_id: this.state.showCommission == true ? this.state.selectedCommissionAccount.value : 0,\n            startdateFrom: this.state.startDate,\n            // enddateFrom: this.state.endDate,\n            enddateFrom: (this.state.endDate) ? this.state.endDate : null,\n            startdateTo: this.state.startDateTo,\n            enddateTo: (this.state.endDateTo) ? this.state.endDateTo : null,\n            from_symbols: JSON.stringify(symbolFrom),\n            to_symbols: JSON.stringify(symbolto),\n            auto_close: this.state.autoSyncClose ? 1 : 0,\n            from_magic_number: this.state.magicNumber.length > 0 ? JSON.stringify(this.state.magicNumber) : 0,\n            to_magic_number: this.state.magicNumberTo.length > 0 ? JSON.stringify(this.state.magicNumberTo) : 0,\n\n            from_include_exclude_status: from_status,\n            to_include_exclude_status: to_status,\n            createdAt: new Date(),\n            updatedAt: new Date(),\n\n            \n        }\n\n       \n        axios.post(config.baseurl + '/filter/updatefilterdatafull', Data)\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.props.onHide()\n\n                }\n            })\n            .catch(function (error) {\n            });\n\n    }\n    crossClick(e) {\n        e.preventDefault();\n        this.props.onHide()\n    }\n\n    render() {\n        return (\n            <div className=\"content\">\n                <Grid fluid>\n                    <div className=\"symbol-box\">\n                        <div className=\"cross_div\"><a onClick={(e) => this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\n                        <div className=\"terminal-text\" >\n                            <p className=\"profilename pnameadjust\"> Profile Name</p>\n                            <input type=\"text\" name=\"profilename\" value={this.state.profileName} className=\"Itext\" onChange={(e) => this.handleprofileName(e)} />\n                            {(this.state.error == 'profileName') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Fill Your Profile Name </p>}\n\n                        </div>\n                        <div className=\"synclose\">\n                            <label class=\"checkbox-inline\"><input type=\"checkbox\" checked={this.state.autoSyncClose} name=\"changeAutoSync\" onChange={(e) => this.handleChangeAutoSync(e)} /><b>Auto Sync Close</b></label>\n                        </div>\n                        <form>\n                            <Row>\n                                {/* <Col md={12}>\n                                    <div className=\"card\">\n                                        <div style={{ padding: '10px 20px 35px ', }}>\n                                            <div>\n                                                <h3 className=\" text-center\">Filter By Magic Numbers</h3>\n\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6 text-center\">\n\n                                                    <button type=\"button\" class=\"text-center filter-add-button\">Include</button>\n                                                </div>\n\n                                                <div className=\"col-md-6 text-center btnspace\">\n                                                    <button type=\"button\" class=\"filter-add-button\">Exclude</button>\n                                                </div>\n                                                <div className=\"row\">\n                                                    <div className=\"col\">\n                                                        <div class=\"text-center  \">\n                                                            <input class=\"form-control input-css\" placeholder=\"Select Numbers\" type=\"number\"></input>\n                                                        </div>\n                                                    </div>\n                                                </div>from_include_exclude_status\n\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                </Col> */}\n                                <Col md={6}>\n                                    <div className=\"card bottom\">\n                                        <div style={{ padding: '10px 20px 0px' }}>\n                                            <span style={{ fontWeight: 'bold' }}>Account A</span>\n                                        </div>\n                                        <table className=\"table mt20\">\n                                            <tbody>\n                                                <tr>\n                                                    <td className=\"b-clr\">\n                                                        <span className=\"accnt\">Account :</span>\n                                                    </td>\n\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        {this.renderAccountSelect()}\n                                                        {(this.state.error == 'accountoption') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">From:  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            selected={this.state.startDate}\n                                                            onChange={this.handleChangeDate}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDate}\n                                                            endDate={this.state.endDate}\n                                                            strictParsing\n                                                        />\n                                                        {(this.state.error == 'startdate') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">To :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n\n                                                            selected={this.state.endDate}\n                                                            onChange={this.handleEndDate}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDate}\n                                                            endDate={this.state.endDate}\n                                                        />\n                                                        {(this.state.error == 'enddate') && <p style={{ color: 'red', fontSize: '13px' }}>*\n                                                        Please ensure that the End Date is greater than  the Start Date.</p>}\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">Symbol :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '50%' }}>\n                                                        {this.renderSymbolSelect()}\n                                                        {(this.state.error == 'symbolselect') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\n\n                                                    </td>\n                                                </tr>\n\n\n                                            </tbody>\n                                        </table>\n                                        <div className=\"text-center\">\n                                            <span c> Magic Number :  </span>\n                                        </div>\n\n                                        <table className=\"table \">\n                                            <tbody>\n                                                <tr>\n                                                    <td className=\"b-clr dataAdjust\">\n                                                        <div onClick={this.changeIncludeDefaultProperty}>\n                                                            <input\n                                                                type=\"radio\" id=\"include\" name=\"include\" checked={this.state.include} />\n                                                            <span class=\"accnt \">Include</span>\n\n                                                        </div>\n                                                    </td>\n                                                    <td className=\"b-clr \">\n                                                        <div onClick={this.changeExcludeDefaultProperty} >\n                                                            <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.exclude} />\n                                                            <span class=\"accnt \">Exclude</span>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n\n\n                                        {this.state.showMagicNumber &&\n                                            <div className=\"b-clr magicnumber\" style={{}}>\n                                                <TagsInput\n                                                    onValidationReject={() => console.log('rejected')}\n                                                    validationRegex={/^[0-9]*$/}\n                                                    inputProps={{ placeholder: \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumber\n                                                    } onChange={this.handleChangeMagicNumber}></TagsInput>\n                                            </div>}\n\n\n                                    </div>\n                                </Col>\n                                <Col md={6}>\n                                    <div className=\"card bottom\">\n                                        <div style={{ padding: '10px 20px 0px' }}>\n                                            <span style={{ fontWeight: 'bold' }}>Account B</span>\n                                        </div>\n\n                                        <table className=\"table mt20\">\n                                            <tbody>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">Account :</span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '50%' }}>\n                                                        {this.renderAccountSelectTo()}\n                                                        {(this.state.error == 'accountoptionto') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\n                                                        {(this.state.error == 'err') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Diffrent Account</p>}\n\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">From:  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            selected={this.state.startDateTo}\n                                                            onChange={this.handleChangeDateTo}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDateTo}\n                                                            endDate={this.state.endDateTo}\n                                                        />\n\n                                                        {(this.state.error == 'startDateTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Start Date</p>}\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr \">\n                                                        <span className=\"accnt\">To :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center datepicker_filter\">\n                                                        <DatePicker\n                                                            selected={this.state.endDateTo}\n                                                            onChange={this.handleEndDateTo}\n                                                            isClearable\n                                                            placeholderText=\"dd/mm/yyyy\"\n                                                            dateFormat=\"dd/MM/yyyy\"\n                                                            startDate={this.state.startDateTo}\n                                                            endDate={this.state.endDateTo}\n\n                                                        />\n\n                                                        {(this.state.error == 'enddateto') && <p style={{ color: 'red', fontSize: '13px' }}>*\n                                                        Please ensure that the End Date is greater than  the Start Date.</p>}\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td className=\"b-clr\">\n                                                        <span className=\"accnt\">Symbol :  </span>\n                                                    </td>\n                                                    <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                        {this.renderSymbolSelectTo()}\n                                                        {(this.state.error == 'selectedSymbolOptionTo') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Symbol </p>}\n\n\n                                                    </td>\n                                                </tr>\n\n                                            </tbody>\n                                        </table>\n\n\n                                        <div className=\"text-center\">\n                                            <span > Magic Number :  </span>\n                                        </div>\n                                        <table className=\"table mt20\">\n                                            <tbody>\n\n                                                <tr>\n                                                    <td className=\"b-clr checkboxAdjust\">\n                                                        <div onClick={this.changeIncludeDefaultPropertyTo} >\n                                                            <input\n                                                                type=\"radio\" id=\"includeTo\" name=\"includeTo\" checked={this.state.includeTo} />\n                                                            <span class=\"accnt \">Include</span>\n\n                                                        </div>\n                                                    </td>\n                                                    <td className=\"b-clr checkboxAdjust\">\n                                                        <div onClick={this.changeExcludeDefaultPropertyTo} >\n                                                            <input type=\"radio\" id=\"excludeTo\" name=\"excludeTo\" checked={this.state.excludeTo} />\n                                                            <span class=\"accnt \">Exclude</span>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                        <div>\n\n                                            {this.state.showMagicNumberTo === true ?\n                                                <div className=\"b-clr magicnumber\" style={{}}>\n                                                    <TagsInput\n                                                        onValidationReject={() => console.log('rejected')}\n                                                        validationRegex={/^[0-9]*$/}\n                                                        inputProps={{ placeholder: \" Enter Magic Number\" }} type=\"number\" value={this.state.magicNumberTo\n                                                        } onChange={this.handleChangeMagicNumberTo}></TagsInput>\n                                                </div> : null}\n                                        </div>\n                                    </div>\n                                </Col>\n                            </Row>\n                            <hr></hr>\n                            <div className=\"chceckbox\">\n\n                                <label class=\"checkbox-inline\"><input type=\"checkbox\" checked={this.state.showCommission} onChange={this.handeChangeShowCommission} /><b>Add Commission</b></label>\n                            </div>\n\n\n\n                            {this.state.showCommission &&\n                                <div className=\"center-com d-flex\">\n                                    <div className=\"com\">\n                                        <h3 style={{ fontWeight: 'bold' }}>Commission</h3>\n\n                                    </div>\n                                    <table className=\"table mt20\">\n\n                                        <tbody>\n                                            <tr>\n\n                                                <td className=\"b-clr \">\n                                                    <span className=\"accnt\"> Account :</span>\n                                                </td>\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {this.renderCommissionAccount()}\n                                                    {(this.state.error == 'accountoptionto') && <p style={{ color: 'red', fontSize: '13px' }}>*Please Select Your Account</p>}\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n\n                            }\n                            <div className=\"save_button_filter\">\n                                <Button className=\"btn-primary savebutton\" variant=\"primary\" size=\"lg\" block onClick={(e) => this.formDataSubmit(e)}>\n                                    <b>Update</b>\n                                </Button>\n                            </div>\n                        </form>\n                    </div>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default FilterEdite;\n","import React, { Component } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\nvar moment = require('moment');\n\nclass FilterDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            autoSyncClose: false,\n            exclude: false,\n            include: false,\n            excludeTo: false,\n            includeTo: false,\n            showMagicNumberFrom: false,\n            showMagicNumberTo: false,\n        };\n    }\n    crossClick(e) {\n        e.preventDefault();\n        this.props.onHide()\n    }\n\n    componentDidMount() {\n        let data = this.props.data;\n        this.setState({\n            autoSyncClose: data.auto_close == 1 ? true : false,\n            include: data.from_include_exclude_status == 1 ? true : false,\n            exclude: data.from_include_exclude_status == 2 ? true : false,\n            includeTo: data.to_include_exclude_status == 1 ? true : false,\n            excludeTo: data.to_include_exclude_status == 2 ? true : false,\n            showMagicNumberFrom: data.from_include_exclude_status !== 0 ? true : false,\n            showMagicNumberTo:data.to_include_exclude_status !== 0? true: false\n\n\n\n\n\n        })\n\n    }\n\n    // componentWillMount = () => {\n    //     console.log(this.props,'props..................');\n    // }\n\n    render() {\n        let data = this.props.data;\n\n        let from_symbol = JSON.parse(data.from_symbols);\n        let to_symbol = JSON.parse(data.to_symbols);\n        from_symbol = from_symbol.join(', ');\n        to_symbol = to_symbol.join(', ');\n        return (\n            <div className=\"content\">\n                <Grid fluid>\n                    <div className=\"symbol-box\">\n                        <div className=\"cross_div\"><a onClick={(e) => this.crossClick(e)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a></div>\n                        <div className=\"detail-text\"><h3> {data.profile_name} </h3></div>\n                        <div className=\"synclose\">\n                            <label class=\"checkbox-inline\"><input type=\"checkbox\" checked={this.state.autoSyncClose} name=\"changeAutoSync\" /><b>Auto Sync Close</b></label>\n                        </div>\n                        <Row>\n                            <Col md={6}>\n                                <div className=\"card\">\n                                    <div className=\"detail_account\" style={{ padding: '10px 20px 0px' }}>\n                                        <span style={{ fontWeight: 'bold' }}>Account A</span>\n                                    </div>\n                                    <table className=\"table mt20\">\n                                        <tbody>\n                                            <tr>\n                                                <td className=\"b-clr\">\n                                                    <span>Account :</span>\n                                                </td>\n\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {data.accountFromInfo[0].login}\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>From :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center datepicker_filter\">\n                                                    {moment(data.startdateFrom).format(\"DD/MM/YYYY\")}\n\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>To :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center datepicker_filter\">\n                                                    {data.enddateFrom !== null ? moment(data.enddateFrom).format(\"DD/MM/YYYY\") : \"-\"}\n\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>Symbol :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {from_symbol}\n                                                </td>\n                                            </tr>\n                                            {this.state.showMagicNumberFrom &&\n                                            <>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>Magic Number :  </span>\n                                                </td>\n\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {data.from_magic_number}\n                                                </td>\n\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr dataAdjust\">\n                                                    <div onClick={this.changeIncludeDefaultProperty}>\n                                                        <input\n                                                            type=\"radio\" id=\"include\" name=\"include\" checked={this.state.include} />\n                                                        <span class=\"accnt \">Include</span>\n\n                                                    </div>\n                                                </td>\n                                                <td className=\"b-clr \">\n                                                    <div onClick={this.changeExcludeDefaultProperty} >\n                                                        <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.exclude} />\n                                                        <span class=\"accnt \">Exclude</span>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                            </>}\n\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </Col>\n                            <Col md={6}>\n                                <div className=\"card\">\n                                    <div className=\"detail_account\" style={{ padding: '10px 20px 0px' }}>\n                                        <span style={{ fontWeight: 'bold' }}>Account B</span>\n                                    </div>\n\n                                    <table className=\"table mt20\">\n                                        <tbody>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>Account :</span>\n                                                </td>\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {data.accountToInfo[0].login}\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>From :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center datepicker_filter\">\n                                                    {moment(data.startdateTo).format(\"DD/MM/YYYY\")}\n\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr \">\n                                                    <span>To :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center datepicker_filter\">\n                                                    {data.enddateTo != null ? (moment(data.enddateTo).format(\"DD/MM/YYYY\")) : '-'}\n\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"b-clr\">\n                                                    <span>Symbol :  </span>\n                                                </td>\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {to_symbol}\n                                                </td>\n                                            </tr>\n                                            {this.state.showMagicNumberTo &&\n                                                <>\n\n                                                    <tr>\n                                                        <td className=\"b-clr\">\n                                                            <span>Magic Number :  </span>\n                                                        </td>\n                                                        <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                            {data.to_magic_number}\n\n                                                        </td>\n                                                    </tr>\n\n\n                                                    <tr>\n                                                        <td className=\"b-clr checkboxAdjust\">\n                                                            <div onClick={this.changeIncludeDefaultPropertyTo} >\n                                                                <input\n                                                                    type=\"radio\" id=\"includeTo\" name=\"includeTO\" checked={this.state.includeTo} />\n                                                                <span class=\"accnt \">Include</span>\n\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"b-clr checkboxAdjust\">\n                                                            <div onClick={this.changeExcludeDefaultPropertyTo} >\n                                                                <input type=\"radio\" id=\"exclude\" name=\"exclude\" checked={this.state.excludeTo} />\n                                                                <span class=\"accnt \">Exclude</span>\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n                                                </>}\n\n\n                                        </tbody>\n                                    </table>\n                                </div>\n\n                            </Col>\n                            {data.commission_acount_id !== 0 && <Col md={12}>\n                                <div className=\"card bottom\">\n                                    <div className=\"detail_account\" style={{ padding: '10px 20px 0px' }}>\n                                        <h3 style={{ fontWeight: 'bold' }}>Commission</h3>\n                                    </div>\n                                    <table className=\"table mt20\">\n                                        <tbody>\n                                            <tr>\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    <span>Account :</span>\n                                                </td>\n                                                <td className=\"b-clr text-center\" style={{ width: '40%' }}>\n                                                    {data.accountCommissionInfo[0].login}\n\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n\n                            </Col>}\n                        </Row>\n\n                    </div>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default FilterDetail;\n\n","import React, { Component } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\nimport Innerfilter from '../filter/innerfilter';\nimport FilterEdite from '../filter/filteredit';\nimport FilterDetail from '../filter/filterdetail';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport config from '../../constant/config.js';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\n\nconst axios = require('axios');\nvar moment = require('moment');\n\nclass Filterprofile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            Innerfilter: false,\n            filter: true,\n            filterData: [],\n            deleteData: [],\n            editeData: [],\n            showDelete: false,\n            showEdit: false,\n            detailForm: false,\n            detailData: [],\n        };\n\n        // this.handleDropdownChange = this.handleDropdownChange.bind(this);\n    }\n    fetchfilterdata() {\n        let self = this;\n        axios.get(config.baseurl + '/filter/fetchfilterdata')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ filterData: response.data.rows })\n                }\n            })\n    }\n    showInnerfilter = () => {\n        this.setState({ Innerfilter: true, filter: false })\n    }\n    componentDidMount() {\n        this.fetchfilterdata();\n        // let self = this;\n        // axios.get(config.baseurl + '/filter/fetchfilterdata')\n        //     .then(function (response) {\n        //         if (response.status == 200) {\n        //             self.setState({ filterData: response.data.rows })\n        //         }\n        //     }) adfasdfsd\n    }\n\n\n    createNotification = (profile_name, type) => {\n        NotificationManager.listNotify = [];\n        NotificationManager.info('Profile Is Activated !', profile_name);\n    }\n\n    createWariningNotification = (profile_name, type) => {\n        NotificationManager.listNotify = [];\n        NotificationManager.error('Profile Is Deactivated !', profile_name);\n    }\n\n    activateClick(e, data) {\n        e.preventDefault();\n        let Data = {\n            id: data.id,\n            status: 1\n        }\n        let self = this;\n        axios.post(config.baseurl + '/filter/updatefilterdata', Data)\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.fetchfilterdata();\n                    self.createNotification(data.profile_name, 'info');\n                    // self.setState({ filterData: response.data.rows })\n                }\n            })\n    }\n\n    //  App(){\n    //     const notify = () => toast(\"Wow so easy !\");\n\n    //     return (\n    //       <div>\n    //         <button onClick={notify}>Notify !</button>\n    //         <ToastContainer />\n    //       </div>\n    //     );\n    //   }\n\n    deactivateClick(e, data) {\n        e.preventDefault();\n        let Data = {\n            id: data.id,\n            status: 0\n        }\n        let self = this;\n        axios.post(config.baseurl + '/filter/updatefilterdata', Data)\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.fetchfilterdata();\n                    self.createWariningNotification(data.profile_name, 'error');\n                    // self.setState({ filterData: response.data.rows })\n                }\n            })\n    }\n    editFilter = (e, data) => {\n        // e.preventDefault();\n        if (this.state.endDate == null || this.state.endDate == '') {\n            let newDate = new Date();\n            this.setState({endDate: newDate })\n            return\n        }\n        this.setState({ showEdit: true, editeData: data })\n\n    }\n\n    deleteFilter(e, data) {\n        e.preventDefault();\n        this.setState({ deleteData: data, showDelete: true })\n\n    }\n    deletepopupClick(e) {\n        e.preventDefault();\n        let Data = {\n            id: this.state.deleteData.id\n        }\n        let self = this;\n        axios.post(config.baseurl + '/filter/deletefilter', Data)\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ showDelete: false })\n                    self.fetchfilterdata();\n                }\n            })\n    }\n    deletepopupclose(e) {\n        e.preventDefault();\n        this.setState({ showDelete: false })\n    }\n    viewFilter(e, data) {\n        e.preventDefault();\n\n        this.setState({ detailForm: true, detailData: data })\n    }\n\n    createTr = () => {\n        return this.state.filterData.length > 0 && this.state.filterData.map((item, index) => {\n            return (\n                <tr key={index}>\n                    <th scope=\"row\">{index + 1}</th>\n                    <td>{item.profile_name}</td>\n                    <td>{moment(item.createdAt).format(\"DD/MM/YYYY\")}</td>\n                    {/* <td>{item.status == 1 ? 'Activated' : 'Deactivated' }</td> */}\n                    <td>{item.status == 0 ?\n                        <div className=\"activate_button pointer\"><span className=\"button_interactivate btcolor\" onClick={(e) => this.activateClick(e, item)}> Activate </span> </div>\n                        :\n                        <div className=\"deactivate_button pointer\"><span className=\"button_deactivate pointer\" onClick={(e) => this.deactivateClick(e, item)}>Deactivate</span></div>}</td>\n                    <td>\n                        <span onClick={(e) => this.viewFilter(e, item)}><i className=\"pointer fa fa-eye facolor\" aria-hidden=\"true\"></i></span>\n                        <span onClick={(e) => this.editFilter(e, item)}><i className=\"pointer fa fa-pencil-square-o facolor\" aria-hidden=\"true\"></i></span>\n                        {item.status == 0 &&\n                            <span onClick={(e) => this.deleteFilter(e, item)}><i className=\"pointer fa fa-trash facolor\" aria-hidden=\"true\"></i></span>\n                        }\n                    </td>\n                    {/* <td>{item.accountToInfo[0].login}</td>\n                    <td>{moment(item.startdateFrom).format(\"DD/MM/YYYY\") + ' - ' + moment(item.enddateFrom).format(\"DD/MM/YYYY\")}</td>\n                    <td>{moment(item.startdateTo).format(\"DD/MM/YYYY\") + ' - ' + moment(item.enddateTo).format(\"DD/MM/YYYY\")}</td>\n                    <td>{item.from_symbols}</td>\n                    <td>{item.to_symbols}</td> */}\n                    {/* <td style={{fontWeight:600}}>{item.status == 1 && 'Connected'}</td> */}\n                </tr>\n            )\n        })\n    }\n\n    render() {\n\n        return (\n            <>\n                <NotificationContainer />\n                <div className=\"content\">\n                    {this.state.detailForm ?\n                        <FilterDetail\n                            data={this.state.detailData}\n                            show={this.state.detailForm}\n                            onHide={() => this.setState({ detailForm: false })}\n                        />\n                        :\n                        <>\n                            {this.state.showEdit ?\n                                <FilterEdite\n                                    data={this.state.editeData}\n                                    show={this.state.showEdit}\n                                    // onHide={() => this.setState({ showEdit: false })}\n                                    onHide={() => this.setState({ showEdit: false }, () => this.fetchfilterdata())}\n                                />\n                                :\n                                <>\n                                    {!this.state.Innerfilter &&\n                                        <Grid fluid>\n                                            <div className=\"selection-box\">\n                                                <span className=\"terminal-text\"> Profiles </span>\n\n                                                {/* <span className=\"icon-style\">\n                            <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\n                        </span> */}\n                                                {/* <Link to=\"/innerfilter\">\n                       <button className=\"pull-right\">Add New</button>\n                       </Link> */}\n\n                                                {/* <Link to=\"/admin/innerfilter\">\n                       <button className=\"pull-right\">abc</button>\n                       </Link> */}\n                                            </div>\n                                            <button className=\"pull-right filter-add-button\" onClick={this.showInnerfilter}>Add New</button>\n\n                                        </Grid>\n                                    }\n                                    {\n                                        this.state.Innerfilter ?\n                                            <Innerfilter\n                                                show={this.state.Innerfilter}\n                                                onHide={() => this.setState({ Innerfilter: false }, () => {\n                                                    this.fetchfilterdata();\n                                                })}\n                                            />\n                                            :\n                                            <div style={{ background: '#ffffff' }}>\n                                                <Row>\n                                                    <Col md={12}>\n                                                        <div style={{ padding: '10px' }}>\n                                                            <table className=\"table table-striped\">\n                                                                <thead>\n                                                                    <tr>\n                                                                        <th scope=\"col\">Sr.No.</th>\n                                                                        <th scope=\"col\">Profile Name</th>\n                                                                        <th scope=\"col\">Created At</th>\n                                                                        <th scope=\"col\">Status</th>\n                                                                        <th scope=\"col\">Action</th>\n                                                                    </tr>\n                                                                </thead>\n                                                                <tbody>\n                                                                    {/* {this.state.accountlist.length > 0 && this.state.accountlist.map((item, index) => { */}\n\n                                                                    {this.createTr()}\n                                                                    {/* })} */}\n                                                                    {/* <tr>\n                                                <th scope=\"row\">2</th>\n                                                <td>Jacob</td>\n                                                <td>Thornton</td>\n                                                <td>5.1.2.9</td>\n                                                <td>Connected</td>\n                                            </tr>\n                                            <tr>\n                                                <th scope=\"row\">3</th>\n                                                <td>Larry</td>\n                                                <td>the Bird</td>\n                                                <td>ab@123</td>\n                                                <td>Connected</td>\n                                            </tr> */}\n                                                                </tbody>\n                                                            </table>\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                        //     <div className=\"filter_page_table\">\n                                        //     <table className=\"table table-striped\">\n                                        //         <thead>\n                                        //             <tr>\n                                        //                 <th scope=\"col\">Sr.No.</th>\n                                        //                 <th scope=\"col\">Profile Name</th>\n                                        //                 <th scope=\"col\">Created At</th>\n                                        //                 <th scope=\"col\">Status</th>\n                                        //                 <th scope=\"col\">Action</th>\n                                        //             </tr>\n                                        //         </thead>\n                                        //         <tbody>\n                                        //             {this.createTr()}\n                                        //         </tbody>\n                                        //     </table>\n\n                                        // </div>\n\n                                    }\n\n                                    {this.state.showDelete &&\n                                        <div className=\"delete_popup\">\n                                            <h3>Are you sure ?</h3>\n                                            <span className=\"pointer dltbtn\" onClick={(e) => this.deletepopupClick(e)}>Delete</span>\n                                            <span className=\"pointer closebtn\" onClick={(e) => this.deletepopupclose(e)}>Close</span>\n                                        </div>\n                                    }\n                                </>\n                            }\n                        </>\n                    }\n\n\n\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Filterprofile;\n","import React, { Component } from 'react'\n\nexport default class Swap extends Component {\n    render() {\n        return (\n            <div className=\"text-center\" style={{height:'50%'}}>\n                Coming Soon...\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Grid, Row, Col, Modal } from \"react-bootstrap\";\nimport config from '../../constant/config.js';\nconst axios = require('axios');\nexport default class calculating extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            accountlist: [],\n            accountDetailTable: [],\n            customDepositeTable: [],\n            customSwapTable: [],\n            OpenOrderTable: [],\n            HistoryOrderTable: [],\n\n        }\n    }\n\n    fectheAllAccount() {\n        let self = this;\n        axios.get(config.baseurl + '/users/allAccounts')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({ accountlist: response.data.rows })\n                }\n            })\n    }\n\n\n\n    fetchAllOpenTrade() {\n        let self = this;\n        axios.get(config.baseurl + '/accounts/fetchAllOpenTrade')\n            .then(function (response) {\n                if (response.status == 200) {\n                    self.setState({\n                        accountDetailTable: response.data.accountTableDetails,\n                        OpenOrderTable: response.data.openOrderData,\n                        customSwapTable: response.data.customSwapTable,\n                        customDepositeTable: response.data.customDepositeTable,\n                        HistoryOrderTable:response.data.historyOrderData,\n                    })\n                }\n            })\n    }\n\n    componentDidMount() {\n        this.fectheAllAccount();\n        this.fetchAllOpenTrade();\n    }\n\n    createTr = () => {\n        return this.state.accountlist.map((item, index) => {\n            return (\n                <tr >\n                    <td>{item.login}</td>\n                    <td>{item.broker}</td>\n                    <td>{item.alias}</td>\n                </tr>\n            )\n        })\n    }\n\n    customSwap = () => {\n        return this.state.customSwapTable.map((item, index) => {\n            return (\n                <tr >\n                    <td>{item.account_id}</td>\n                    <td>{item.open_value}</td>\n                    <td>{item.close_value}</td>\n                </tr>\n            )\n        })\n    }\n\n    customDeposite = () => {\n        return this.state.customDepositeTable.map((item, index) => {\n            return (\n                <tr >\n                    <td>{item.account_id}</td>\n                    <td>{item.value}</td>\n                </tr>\n            )\n        })\n    }\n\n\n\n    Open = () => {\n        return this.state.OpenOrderTable.map((item, index) => {\n            return (\n                <tr >\n                    <td>{item.account_id}</td>\n                    <td>{item.ticket}</td>\n                    <td>{item.open_time}</td>\n                    <td>{item.order_type}</td>\n                    <td>{item.lots}</td>\n                    <td>{item.symbol}</td>\n                    <td>{item.magic_number}</td>\n                    <td>{item.open_price}</td>\n                    <td>{item.last_price}</td>\n                    <td>{item.sl}</td>\n                    <td>{item.tp}</td>\n                    <td>{item.commission}</td>\n                    <td>{item.taxes}</td>\n                    <td>{item.swap}</td>\n                    <td>{item.profit}</td>\n                </tr>\n            )\n        })\n    }\n\n    HistoryOrderData = () => {\n        return this.state.HistoryOrderTable.map((item, index) => {\n            return (\n                <tr >\n                    <td>{item.account_id}</td>\n                    <td>{item.ticket}</td>\n                    <td>{item.open_time}</td>\n                    <td>{item.order_type}</td>\n                    <td>{item.lots}</td>\n                    <td>{item.symbol}</td>\n                    <td>{item.magic_number}</td>\n                    <td>{item.open_price}</td>\n                    <td>{item.last_price}</td>\n                    <td>{item.sl}</td>\n                    <td>{item.tp}</td>\n                    <td>{item.commission}</td>\n                    <td>{item.taxes}</td>\n                    <td>{item.swap}</td>\n                    <td>{item.profit}</td>\n                </tr>\n            )\n        })\n    }\n\n\n    createDeatailTable = () => {\n        return this.state.accountDetailTable.map((item, index) => {\n            return (\n                <tr>\n                    <td>{item.account_id}</td>\n                    <td>{item.balance}</td>\n                    <td>{item.equity}</td>\n                    <td>{item.margin}</td>\n                    <td>{item.margin_level}</td>\n                    <td>{item.free_margin}</td>\n                    <td>{item.profit}</td>\n                    <td>{item.currency}</td>\n                    <td>{item.last_seen}</td>\n                </tr>\n            )\n        })\n    }\n\n\n    render() {\n\n        return (\n            <Grid fluid>\n\n                <div style={{ background: '#ffffff' }}>\n                    <Row>\n                        <Col md={12}>\n                            <div style={{ padding: '10px' }}>\n                                <h5 className=\"text-center\">Accounts</h5>\n\n                                <table className=\"table lowercase table-sm\">\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"col\">login</th>\n                                            <th scope=\"col\">server</th>\n                                            <th scope=\"col\">alias</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n\n                                        {this.createTr()}\n\n                                    </tbody>\n                                </table>\n                            </div>\n                        </Col>\n                    </Row>\n                </div>\n\n\n                <Row>\n                    <Col md={3}>\n                        <div style={{ padding: '10px' }}>\n                            <h5 className=\"text-center\">Account Details</h5>\n\n                            <table className=\"table lowercase table-striped\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">account_id</th>\n                                        <th scope=\"col\">balance</th>\n                                        <th scope=\"col\">equity</th>\n                                        <th scope=\"col\">margin</th>\n                                        <th scope=\"col\">margin_level</th>\n                                        <th scope=\"col\">free_margin</th>\n                                        <th scope=\"col\">profit</th>\n                                        <th scope=\"col\">currency</th>\n                                        <th scope=\"col\">last_seen</th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {this.createDeatailTable()}\n                                </tbody>\n                            </table>\n                        </div>\n                    </Col>\n                </Row>\n\n\n\n                <Row>\n                    <Col md={6}>\n                        <div style={{ padding: '10px' }}>\n                            <h5 className=\"text-center\">Custom Swap</h5>\n                            <table className=\"table lowercase table-striped\">\n\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">account_id</th>\n                                        <th scope=\"col\">opne_value</th>\n                                        <th scope=\"col\">close_value</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n\n                                    {this.customSwap()}\n\n                                </tbody>\n                            </table>\n                        </div>\n                    </Col>\n\n                    <Col md={6}>\n                        <div style={{ padding: '10px' }}>\n                            <h5 className=\"text-center\">Custom Deposite</h5>\n                            <table className=\"table lowercase table-striped\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">account_id</th>\n                                        <th scope=\"col\">value</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.customDeposite()}\n                                </tbody>\n                            </table>\n                        </div>\n                    </Col>\n                </Row>\n\n                <Col md={12}>\n                    <div style={{ padding: '10px' }}>\n                    <h5 className=\"text-center\">Open Orders</h5>\n                        \n                        <table className=\"table lowercase table-responsive\">\n\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">account_id</th>\n                                    <th scope=\"col\">ticket</th>\n                                    <th scope=\"col\">open_time</th>\n                                    <th scope=\"col\">order_type</th>\n                                    <th scope=\"col\">lots</th>\n                                    <th scope=\"col\">symbol</th>\n                                    <th scope=\"col\">magic_number</th>\n                                    <th scope=\"col\">open_price</th>\n                                    <th scope=\"col\">last_price</th>\n                                    <th scope=\"col\">sl</th>\n                                    <th scope=\"col\">tp</th>\n                                    <th scope=\"col\">commission</th>\n                                    <th scope=\"col\">taxes</th>\n                                    <th scope=\"col\">swap</th>\n                                    <th scope=\"col\">profit</th>\n\n                                </tr>\n                            </thead>\n                            <tbody>\n\n                                {this.Open()}\n                            </tbody>\n                        </table>\n                    </div>\n                </Col>\n\n\n                <Col md={12}>\n                    <div style={{ padding: '10px' }}>\n                    <h5 className=\"text-center\">History Orders</h5>\n                        \n                        <table className=\"table lowercase table-responsive\">\n\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">account_id</th>\n                                    <th scope=\"col\">ticket</th>\n                                    <th scope=\"col\">open_time</th>\n                                    <th scope=\"col\">order_type</th>\n                                    <th scope=\"col\">lots</th>\n                                    <th scope=\"col\">symbol</th>\n                                    <th scope=\"col\">magic_number</th>\n                                    <th scope=\"col\">open_price</th>\n                                    <th scope=\"col\">last_price</th>\n                                    <th scope=\"col\">sl</th>\n                                    <th scope=\"col\">tp</th>\n                                    <th scope=\"col\">commission</th>\n                                    <th scope=\"col\">taxes</th>\n                                    <th scope=\"col\">swap</th>\n                                    <th scope=\"col\">profit</th>\n\n                                </tr>\n                            </thead>\n                            <tbody>\n\n                                {this.HistoryOrderData()}\n                            </tbody>\n                        </table>\n                    </div>\n                </Col>\n            </Grid>\n        )\n\n    }\n}\n","import Dashboard from \"views/Dashboard.jsx\";\n// import UserProfile from \"views/UserProfile.jsx\";\n// import TableList from \"views/TableList.jsx\";\n// import Typography from \"views/Typography.jsx\";\n// import Icons from \"views/Icons.jsx\";\n// import Maps from \"views/Maps.jsx\";\n// import Notifications from \"views/Notifications.jsx\";\n// import Upgrade from \"views/Upgrade.jsx\";\n// import Filter from '../src/views/Filter';\nimport Innerlogin from 'views/Innerlogin';\nimport Filterprofile from './views/filter/Filterprofile';\nimport Swap from '../src/views/swap';\nimport calculating from '../src/views/calculating';\nconst dashboardRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"pe-7s-graph\",\n    component: Dashboard,\n    layout: \"/admin\",\n  },\n  // {\n  //   path: \"/filter\",\n  //   name: \"Filter\",\n  //   icon: \"pe-7s-filter\",\n  //   component: Filter,\n  //   layout: \"/admin\",\n  // },\n\n\n  {\n    path: \"/innerlogin\",\n    name: \"Login/Accounts\",\n    icon: \"pe-7s-note2\",\n    component: Innerlogin,\n    layout: \"/admin\"\n  },\n\n\n  {\n    path: \"/filterpage\",\n    name: \"Filter\",\n    icon: \"pe-7s-filter\",\n    component: Filterprofile,\n    layout: \"/admin\"\n  },  \n  \n\n\n  \n  // {\n  //   path: \"/symbolmanaging\",\n  //   name: \"Symbol Managing\",\n  //   icon: \"pe-7s-science\",\n  //   // component: Filter,\n  //   layout: \"/admin\",\n  // },\n\n\n  {\n    path: \"/swap\",\n    name: \"Swap\",\n    icon: \"pe-7s-graph\",\n    component: Swap,\n    layout: \"/admin\",\n  },\n  \n  // {\n  //   path: \"/calculating\",\n  //   name: \" What Am Calculating?\",\n  //   icon: \"pe-7s-calculator\",\n  //   component: calculating ,\n  //   layout: \"/admin\",\n  // },\n\n\n  // {\n  //   path: \"/user\",\n  //   name: \"User Profile\",\n  //   icon: \"pe-7s-user\",\n  //   component: UserProfile,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/table\",\n  //   name: \"Table\",\n  //   icon: \"pe-7s-note2\",\n  //   component: TableList,\n  //   layout: \"/admin\",\n    // for sub menu listing\n    // resources: [\n    //   {\n       \n    //     name: \"Table abc\",\n        \n    //   },\n    //   {\n       \n    //     name: 'React AHA Moments',\n       \n    //   }\n    // ]\n  // },\n  \n  // {\n  //   path: \"/typography\",\n  //   name: \"Typography\",\n  //   icon: \"pe-7s-news-paper\",\n  //   component: Typography,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/icons\",\n  //   name: \"Icons\",\n  //   icon: \"pe-7s-science\",\n  //   component: Icons,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/maps\",\n  //   name: \"Maps\",\n  //   icon: \"pe-7s-map-marker\",\n  //   component: Maps,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/notifications\",\n  //   name: \"Notifications\",\n  //   icon: \"pe-7s-bell\",\n  //   component: Notifications,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   upgrade: true,\n  //   path: \"/upgrade\",\n  //   name: \"Upgrade to PRO\",\n  //   icon: \"pe-7s-rocket\",\n  //   component: Upgrade,\n  //   layout: \"/admin\"\n  // }\n];\n\nexport default dashboardRoutes;\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport NotificationSystem from \"react-notification-system\";\n\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\n// import Footer from \"components/Footer/Footer\";\nimport Sidebar from \"components/Sidebar/Sidebar\";\n// import FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\n\nimport { style } from \"variables/Variables.jsx\";\n\nimport routes from \"routes.js\";\n\nimport image from \"assets/img/sidebar-3.jpg\";\n\nclass Admin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      _notificationSystem: null,\n      image: image,\n      color: \"black\",\n      hasImage: true,\n      fixedClasses: \"dropdown show-dropdown open\"\n    };\n  }\n  // handleNotificationClick = position => {\n  //   var color = Math.floor(Math.random() * 4 + 1);\n  //   var level;\n  //   switch (color) {\n  //     case 1:\n  //       level = \"success\";\n  //       break;\n  //     case 2:\n  //       level = \"warning\";\n  //       break;\n  //     case 3:\n  //       level = \"error\";\n  //       break;\n  //     case 4:\n  //       level = \"info\";\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  //   this.state._notificationSystem.addNotification({\n  //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n  //     message: (\n  //       <div>\n  //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n  //         every web developer.\n  //       </div>\n  //     ),\n  //     level: level,\n  //     position: position,\n  //     autoDismiss: 15\n  //   });\n  // };\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            render={props => (\n              <prop.component\n                {...props}\n                handleClick={this.handleNotificationClick}\n              />\n            )}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    // return \"Brand\";\n  };\n  handleImageClick = image => {\n    this.setState({ image: image });\n  };\n  handleColorClick = color => {\n    this.setState({ color: color });\n  };\n  handleHasImage = hasImage => {\n    this.setState({ hasImage: hasImage });\n  };\n  handleFixedClick = () => {\n    if (this.state.fixedClasses === \"dropdown\") {\n      this.setState({ fixedClasses: \"dropdown show-dropdown open\" });\n    } else {\n      this.setState({ fixedClasses: \"dropdown\" });\n    }\n  };\n  componentDidMount() {\n    let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    if(currentUser===null){\n        this.props.history.push('/login')\n        return;\n    }\n  //   this.setState({ _notificationSystem: this.refs.notificationSystem });\n  //   var _notificationSystem = this.refs.notificationSystem;\n  //   var color = Math.floor(Math.random() * 4 + 1);\n  //   var level;\n  //   switch (color) {\n  //     case 1:\n  //       level = \"success\";\n  //       break;\n  //     case 2:\n  //       level = \"warning\";\n  //       break;\n  //     case 3:\n  //       level = \"error\";\n  //       break;\n  //     case 4:\n  //       level = \"info\";\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  //   _notificationSystem.addNotification({\n  //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n  //     message: (\n  //       <div>\n  //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n  //         every web developer.\n  //       </div>\n  //     ),\n  //     level: level,\n  //     position: \"tr\",\n  //     autoDismiss: 15\n  //   });\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n    }\n    if (e.history.action === \"PUSH\") {\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <NotificationSystem ref=\"notificationSystem\" style={style} />\n        <Sidebar {...this.props} routes={routes} image={this.state.image}\n        color={this.state.color}\n        hasImage={this.state.hasImage}/>\n        <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getBrandText(this.props.location.pathname)}\n          />\n          <Switch>{this.getRoutes(routes)}</Switch>\n          {/* <Footer /> */}\n          {/* <FixedPlugin\n            handleImageClick={this.handleImageClick}\n            handleColorClick={this.handleColorClick}\n            handleHasImage={this.handleHasImage}\n            bgColor={this.state[\"color\"]}\n            bgImage={this.state[\"image\"]}\n            mini={this.state[\"mini\"]}\n            handleFixedClick={this.handleFixedClick}\n            fixedClasses={this.state.fixedClasses}\n          /> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Admin;\n","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/css/animate.min.css\";\nimport \"./assets/sass/light-bootstrap-dashboard-react.scss?v=1.3.0\";\nimport \"./assets/css/demo.css\";\nimport \"./assets/css/pe-icon-7-stroke.css\";\nimport \"./assets/css/dashboard.css\";\nimport innerfilter from \"./views/filter/innerfilter\";\nimport Login from \"./views/login\";\n\n\nimport AdminLayout from \"./layouts/Admin.jsx\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\n\n      <Route exact path=\"/admin/innerfilter\" component={innerfilter} />\n      <Route exact from=\"/login\" component={Login} />\n      {/* <Redirect from=\"/\" to=\"/admin/dashboard\" /> */}\n      {/* <Redirect from=\"/\" component={Login} /> */}\n      <Redirect from=\"/\" to=\"/login\"/>\n      {/* <Route exact path=\"/innerfilter\" component={innerfilter} /> */}\n\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}